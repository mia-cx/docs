//#region rolldown:runtime
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __commonJS = (cb$1, mod) => function() {
	return mod || (0, cb$1[__getOwnPropNames(cb$1)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __copyProps = (to$4, from, except, desc) => {
	if (from && typeof from === "object" || typeof from === "function") for (var keys = __getOwnPropNames(from), i$18 = 0, n$8 = keys.length, key; i$18 < n$8; i$18++) {
		key = keys[i$18];
		if (!__hasOwnProp.call(to$4, key) && key !== except) __defProp(to$4, key, {
			get: ((k$5) => from[k$5]).bind(null, key),
			enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
		});
	}
	return to$4;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", {
	value: mod,
	enumerable: true
}) : target, mod));

//#endregion
let obsidian = require("obsidian");
obsidian = __toESM(obsidian);

//#region node_modules/.pnpm/ignore@7.0.5/node_modules/ignore/index.js
var require_ignore = /* @__PURE__ */ __commonJS({ "node_modules/.pnpm/ignore@7.0.5/node_modules/ignore/index.js": ((exports, module) => {
	function makeArray(subject) {
		return Array.isArray(subject) ? subject : [subject];
	}
	const UNDEFINED = void 0;
	const EMPTY = "";
	const SPACE = " ";
	const ESCAPE = "\\";
	const REGEX_TEST_BLANK_LINE = /^\s+$/;
	const REGEX_INVALID_TRAILING_BACKSLASH = /(?:[^\\]|^)\\$/;
	const REGEX_REPLACE_LEADING_EXCAPED_EXCLAMATION = /^\\!/;
	const REGEX_REPLACE_LEADING_EXCAPED_HASH = /^\\#/;
	const REGEX_SPLITALL_CRLF = /\r?\n/g;
	const REGEX_TEST_INVALID_PATH = /^\.{0,2}\/|^\.{1,2}$/;
	const REGEX_TEST_TRAILING_SLASH = /\/$/;
	const SLASH = "/";
	let TMP_KEY_IGNORE = "node-ignore";
	/* istanbul ignore else */
	if (typeof Symbol !== "undefined") TMP_KEY_IGNORE = Symbol.for("node-ignore");
	const KEY_IGNORE = TMP_KEY_IGNORE;
	const define = (object, key, value) => {
		Object.defineProperty(object, key, { value });
		return value;
	};
	const REGEX_REGEXP_RANGE = /([0-z])-([0-z])/g;
	const RETURN_FALSE = () => false;
	const sanitizeRange = (range) => range.replace(REGEX_REGEXP_RANGE, (match, from, to$4) => from.charCodeAt(0) <= to$4.charCodeAt(0) ? match : EMPTY);
	const cleanRangeBackSlash = (slashes) => {
		const { length } = slashes;
		return slashes.slice(0, length - length % 2);
	};
	const REPLACERS = [
		[/^\uFEFF/, () => EMPTY],
		[/((?:\\\\)*?)(\\?\s+)$/, (_$2, m1$1, m2$1) => m1$1 + (m2$1.indexOf("\\") === 0 ? SPACE : EMPTY)],
		[/(\\+?)\s/g, (_$2, m1$1) => {
			const { length } = m1$1;
			return m1$1.slice(0, length - length % 2) + SPACE;
		}],
		[/[\\$.|*+(){^]/g, (match) => `\\${match}`],
		[/(?!\\)\?/g, () => "[^/]"],
		[/^\//, () => "^"],
		[/\//g, () => "\\/"],
		[/^\^*\\\*\\\*\\\//, () => "^(?:.*\\/)?"],
		[/^(?=[^^])/, function startingReplacer() {
			return !/\/(?!$)/.test(this) ? "(?:^|\\/)" : "^";
		}],
		[/\\\/\\\*\\\*(?=\\\/|$)/g, (_$2, index, str) => index + 6 < str.length ? "(?:\\/[^\\/]+)*" : "\\/.+"],
		[/(^|[^\\]+)(\\\*)+(?=.+)/g, (_$2, p1$1, p2$2) => {
			const unescaped = p2$2.replace(/\\\*/g, "[^\\/]*");
			return p1$1 + unescaped;
		}],
		[/\\\\\\(?=[$.|*+(){^])/g, () => ESCAPE],
		[/\\\\/g, () => ESCAPE],
		[/(\\)?\[([^\]/]*?)(\\*)($|\])/g, (match, leadEscape, range, endEscape, close) => leadEscape === ESCAPE ? `\\[${range}${cleanRangeBackSlash(endEscape)}${close}` : close === "]" ? endEscape.length % 2 === 0 ? `[${sanitizeRange(range)}${endEscape}]` : "[]" : "[]"],
		[/(?:[^*])$/, (match) => /\/$/.test(match) ? `${match}$` : `${match}(?=$|\\/$)`]
	];
	const REGEX_REPLACE_TRAILING_WILDCARD = /(^|\\\/)?\\\*$/;
	const MODE_IGNORE = "regex";
	const MODE_CHECK_IGNORE = "checkRegex";
	const UNDERSCORE = "_";
	const TRAILING_WILD_CARD_REPLACERS = {
		[MODE_IGNORE](_$2, p1$1) {
			return `${p1$1 ? `${p1$1}[^/]+` : "[^/]*"}(?=$|\\/$)`;
		},
		[MODE_CHECK_IGNORE](_$2, p1$1) {
			return `${p1$1 ? `${p1$1}[^/]*` : "[^/]*"}(?=$|\\/$)`;
		}
	};
	const makeRegexPrefix = (pattern) => REPLACERS.reduce((prev, [matcher, replacer]) => prev.replace(matcher, replacer.bind(pattern)), pattern);
	const isString = (subject) => typeof subject === "string";
	const checkPattern = (pattern) => pattern && isString(pattern) && !REGEX_TEST_BLANK_LINE.test(pattern) && !REGEX_INVALID_TRAILING_BACKSLASH.test(pattern) && pattern.indexOf("#") !== 0;
	const splitPattern = (pattern) => pattern.split(REGEX_SPLITALL_CRLF).filter(Boolean);
	var IgnoreRule = class {
		constructor(pattern, mark, body, ignoreCase, negative, prefix) {
			this.pattern = pattern;
			this.mark = mark;
			this.negative = negative;
			define(this, "body", body);
			define(this, "ignoreCase", ignoreCase);
			define(this, "regexPrefix", prefix);
		}
		get regex() {
			const key = UNDERSCORE + MODE_IGNORE;
			if (this[key]) return this[key];
			return this._make(MODE_IGNORE, key);
		}
		get checkRegex() {
			const key = UNDERSCORE + MODE_CHECK_IGNORE;
			if (this[key]) return this[key];
			return this._make(MODE_CHECK_IGNORE, key);
		}
		_make(mode, key) {
			const str = this.regexPrefix.replace(REGEX_REPLACE_TRAILING_WILDCARD, TRAILING_WILD_CARD_REPLACERS[mode]);
			const regex = this.ignoreCase ? new RegExp(str, "i") : new RegExp(str);
			return define(this, key, regex);
		}
	};
	const createRule = ({ pattern, mark }, ignoreCase) => {
		let negative = false;
		let body = pattern;
		if (body.indexOf("!") === 0) {
			negative = true;
			body = body.substr(1);
		}
		body = body.replace(REGEX_REPLACE_LEADING_EXCAPED_EXCLAMATION, "!").replace(REGEX_REPLACE_LEADING_EXCAPED_HASH, "#");
		const regexPrefix = makeRegexPrefix(body);
		return new IgnoreRule(pattern, mark, body, ignoreCase, negative, regexPrefix);
	};
	var RuleManager = class {
		constructor(ignoreCase) {
			this._ignoreCase = ignoreCase;
			this._rules = [];
		}
		_add(pattern) {
			if (pattern && pattern[KEY_IGNORE]) {
				this._rules = this._rules.concat(pattern._rules._rules);
				this._added = true;
				return;
			}
			if (isString(pattern)) pattern = { pattern };
			if (checkPattern(pattern.pattern)) {
				const rule = createRule(pattern, this._ignoreCase);
				this._added = true;
				this._rules.push(rule);
			}
		}
		add(pattern) {
			this._added = false;
			makeArray(isString(pattern) ? splitPattern(pattern) : pattern).forEach(this._add, this);
			return this._added;
		}
		test(path, checkUnignored, mode) {
			let ignored = false;
			let unignored = false;
			let matchedRule;
			this._rules.forEach((rule) => {
				const { negative } = rule;
				if (unignored === negative && ignored !== unignored || negative && !ignored && !unignored && !checkUnignored) return;
				if (!rule[mode].test(path)) return;
				ignored = !negative;
				unignored = negative;
				matchedRule = negative ? UNDEFINED : rule;
			});
			const ret = {
				ignored,
				unignored
			};
			if (matchedRule) ret.rule = matchedRule;
			return ret;
		}
	};
	const throwError = (message, Ctor) => {
		throw new Ctor(message);
	};
	const checkPath = (path, originalPath, doThrow) => {
		if (!isString(path)) return doThrow(`path must be a string, but got \`${originalPath}\``, TypeError);
		if (!path) return doThrow(`path must not be empty`, TypeError);
		if (checkPath.isNotRelative(path)) return doThrow(`path should be a \`path.relative()\`d string, but got "${originalPath}"`, RangeError);
		return true;
	};
	const isNotRelative = (path) => REGEX_TEST_INVALID_PATH.test(path);
	checkPath.isNotRelative = isNotRelative;
	/* istanbul ignore next */
	checkPath.convert = (p$2) => p$2;
	var Ignore = class {
		constructor({ ignorecase = true, ignoreCase = ignorecase, allowRelativePaths = false } = {}) {
			define(this, KEY_IGNORE, true);
			this._rules = new RuleManager(ignoreCase);
			this._strictPathCheck = !allowRelativePaths;
			this._initCache();
		}
		_initCache() {
			this._ignoreCache = Object.create(null);
			this._testCache = Object.create(null);
		}
		add(pattern) {
			if (this._rules.add(pattern)) this._initCache();
			return this;
		}
		addPattern(pattern) {
			return this.add(pattern);
		}
		_test(originalPath, cache, checkUnignored, slices) {
			const path = originalPath && checkPath.convert(originalPath);
			checkPath(path, originalPath, this._strictPathCheck ? throwError : RETURN_FALSE);
			return this._t(path, cache, checkUnignored, slices);
		}
		checkIgnore(path) {
			if (!REGEX_TEST_TRAILING_SLASH.test(path)) return this.test(path);
			const slices = path.split(SLASH).filter(Boolean);
			slices.pop();
			if (slices.length) {
				const parent = this._t(slices.join(SLASH) + SLASH, this._testCache, true, slices);
				if (parent.ignored) return parent;
			}
			return this._rules.test(path, false, MODE_CHECK_IGNORE);
		}
		_t(path, cache, checkUnignored, slices) {
			if (path in cache) return cache[path];
			if (!slices) slices = path.split(SLASH).filter(Boolean);
			slices.pop();
			if (!slices.length) return cache[path] = this._rules.test(path, checkUnignored, MODE_IGNORE);
			const parent = this._t(slices.join(SLASH) + SLASH, cache, checkUnignored, slices);
			return cache[path] = parent.ignored ? parent : this._rules.test(path, checkUnignored, MODE_IGNORE);
		}
		ignores(path) {
			return this._test(path, this._ignoreCache, false).ignored;
		}
		createFilter() {
			return (path) => !this.ignores(path);
		}
		filter(paths) {
			return makeArray(paths).filter(this.createFilter());
		}
		test(path) {
			return this._test(path, this._testCache, true);
		}
	};
	const factory = (options) => new Ignore(options);
	const isPathValid = (path) => checkPath(path && checkPath.convert(path), path, RETURN_FALSE);
	/* istanbul ignore next */
	const setupWindows = () => {
		const makePosix = (str) => /^\\\\\?\\/.test(str) || /["<>|\u0000-\u001F]+/u.test(str) ? str : str.replace(/\\/g, "/");
		checkPath.convert = makePosix;
		const REGEX_TEST_WINDOWS_PATH_ABSOLUTE = /^[a-z]:\//i;
		checkPath.isNotRelative = (path) => REGEX_TEST_WINDOWS_PATH_ABSOLUTE.test(path) || isNotRelative(path);
	};
	/* istanbul ignore next */
	if (typeof process !== "undefined" && process.platform === "win32") setupWindows();
	module.exports = factory;
	factory.default = factory;
	module.exports.isPathValid = isPathValid;
	define(module.exports, Symbol.for("setupWindows"), setupWindows);
}) });

//#endregion
//#region node_modules/.pnpm/prettier@3.6.2_patch_hash=2c5fac0fd268a2b2ab314d9e790cb805e3eb5e35106fc2644635eb6950a6ec1f/node_modules/prettier/plugins/babel.mjs
var import_ignore = /* @__PURE__ */ __toESM(require_ignore(), 1);
var Ti$3 = Object.create;
var _e$6 = Object.defineProperty;
var bi$6 = Object.getOwnPropertyDescriptor;
var Ai$4 = Object.getOwnPropertyNames;
var Si$6 = Object.getPrototypeOf, Ei$4 = Object.prototype.hasOwnProperty;
var Ci$4 = (a$13, t$13) => () => (t$13 || a$13((t$13 = { exports: {} }).exports, t$13), t$13.exports), Ue$4 = (a$13, t$13) => {
	for (var e$4 in t$13) _e$6(a$13, e$4, {
		get: t$13[e$4],
		enumerable: !0
	});
}, wi$6 = (a$13, t$13, e$4, s$8) => {
	if (t$13 && typeof t$13 == "object" || typeof t$13 == "function") for (let i$18 of Ai$4(t$13)) !Ei$4.call(a$13, i$18) && i$18 !== e$4 && _e$6(a$13, i$18, {
		get: () => t$13[i$18],
		enumerable: !(s$8 = bi$6(t$13, i$18)) || s$8.enumerable
	});
	return a$13;
};
var ls$2 = (a$13, t$13, e$4) => (e$4 = a$13 != null ? Ti$3(Si$6(a$13)) : {}, wi$6(t$13 || !a$13 || !a$13.__esModule ? _e$6(e$4, "default", {
	value: a$13,
	enumerable: !0
}) : e$4, a$13));
var Tt$6 = Ci$4((Pe$6) => {
	Object.defineProperty(Pe$6, "__esModule", { value: !0 });
	function Ii$4(a$13, t$13) {
		if (a$13 == null) return {};
		var e$4 = {};
		for (var s$8 in a$13) if ({}.hasOwnProperty.call(a$13, s$8)) {
			if (t$13.indexOf(s$8) !== -1) continue;
			e$4[s$8] = a$13[s$8];
		}
		return e$4;
	}
	var B$4 = class {
		constructor(t$13, e$4, s$8) {
			this.line = void 0, this.column = void 0, this.index = void 0, this.line = t$13, this.column = e$4, this.index = s$8;
		}
	}, se$3 = class {
		constructor(t$13, e$4) {
			this.start = void 0, this.end = void 0, this.filename = void 0, this.identifierName = void 0, this.start = t$13, this.end = e$4;
		}
	};
	function D$4(a$13, t$13) {
		let { line: e$4, column: s$8, index: i$18 } = a$13;
		return new B$4(e$4, s$8 + t$13, i$18 + t$13);
	}
	var hs$3 = "BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED", Ni$4 = {
		ImportMetaOutsideModule: {
			message: `import.meta may appear only with 'sourceType: "module"'`,
			code: hs$3
		},
		ImportOutsideModule: {
			message: `'import' and 'export' may appear only with 'sourceType: "module"'`,
			code: hs$3
		}
	}, cs$2 = {
		ArrayPattern: "array destructuring pattern",
		AssignmentExpression: "assignment expression",
		AssignmentPattern: "assignment expression",
		ArrowFunctionExpression: "arrow function expression",
		ConditionalExpression: "conditional expression",
		CatchClause: "catch clause",
		ForOfStatement: "for-of statement",
		ForInStatement: "for-in statement",
		ForStatement: "for-loop",
		FormalParameters: "function parameter list",
		Identifier: "identifier",
		ImportSpecifier: "import specifier",
		ImportDefaultSpecifier: "import default specifier",
		ImportNamespaceSpecifier: "import namespace specifier",
		ObjectPattern: "object destructuring pattern",
		ParenthesizedExpression: "parenthesized expression",
		RestElement: "rest element",
		UpdateExpression: {
			true: "prefix operation",
			false: "postfix operation"
		},
		VariableDeclarator: "variable declaration",
		YieldExpression: "yield expression"
	}, Se$5 = (a$13) => a$13.type === "UpdateExpression" ? cs$2.UpdateExpression[`${a$13.prefix}`] : cs$2[a$13.type], ki$5 = {
		AccessorIsGenerator: ({ kind: a$13 }) => `A ${a$13}ter cannot be a generator.`,
		ArgumentsInClass: "'arguments' is only allowed in functions and class methods.",
		AsyncFunctionInSingleStatementContext: "Async functions can only be declared at the top level or inside a block.",
		AwaitBindingIdentifier: "Can not use 'await' as identifier inside an async function.",
		AwaitBindingIdentifierInStaticBlock: "Can not use 'await' as identifier inside a static block.",
		AwaitExpressionFormalParameter: "'await' is not allowed in async function parameters.",
		AwaitUsingNotInAsyncContext: "'await using' is only allowed within async functions and at the top levels of modules.",
		AwaitNotInAsyncContext: "'await' is only allowed within async functions and at the top levels of modules.",
		BadGetterArity: "A 'get' accessor must not have any formal parameters.",
		BadSetterArity: "A 'set' accessor must have exactly one formal parameter.",
		BadSetterRestParameter: "A 'set' accessor function argument must not be a rest parameter.",
		ConstructorClassField: "Classes may not have a field named 'constructor'.",
		ConstructorClassPrivateField: "Classes may not have a private field named '#constructor'.",
		ConstructorIsAccessor: "Class constructor may not be an accessor.",
		ConstructorIsAsync: "Constructor can't be an async function.",
		ConstructorIsGenerator: "Constructor can't be a generator.",
		DeclarationMissingInitializer: ({ kind: a$13 }) => `Missing initializer in ${a$13} declaration.`,
		DecoratorArgumentsOutsideParentheses: "Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(decorator)(args)'.",
		DecoratorBeforeExport: "Decorators must be placed *before* the 'export' keyword. Remove the 'decoratorsBeforeExport: true' option to use the 'export @decorator class {}' syntax.",
		DecoratorsBeforeAfterExport: "Decorators can be placed *either* before or after the 'export' keyword, but not in both locations at the same time.",
		DecoratorConstructor: "Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?",
		DecoratorExportClass: "Decorators must be placed *after* the 'export' keyword. Remove the 'decoratorsBeforeExport: false' option to use the '@decorator export class {}' syntax.",
		DecoratorSemicolon: "Decorators must not be followed by a semicolon.",
		DecoratorStaticBlock: "Decorators can't be used with a static block.",
		DeferImportRequiresNamespace: "Only `import defer * as x from \"./module\"` is valid.",
		DeletePrivateField: "Deleting a private field is not allowed.",
		DestructureNamedImport: "ES2015 named imports do not destructure. Use another statement for destructuring after the import.",
		DuplicateConstructor: "Duplicate constructor in the same class.",
		DuplicateDefaultExport: "Only one default export allowed per module.",
		DuplicateExport: ({ exportName: a$13 }) => `\`${a$13}\` has already been exported. Exported identifiers must be unique.`,
		DuplicateProto: "Redefinition of __proto__ property.",
		DuplicateRegExpFlags: "Duplicate regular expression flag.",
		ElementAfterRest: "Rest element must be last element.",
		EscapedCharNotAnIdentifier: "Invalid Unicode escape.",
		ExportBindingIsString: ({ localName: a$13, exportName: t$13 }) => `A string literal cannot be used as an exported binding without \`from\`.
- Did you mean \`export { '${a$13}' as '${t$13}' } from 'some-module'\`?`,
		ExportDefaultFromAsIdentifier: "'from' is not allowed as an identifier after 'export default'.",
		ForInOfLoopInitializer: ({ type: a$13 }) => `'${a$13 === "ForInStatement" ? "for-in" : "for-of"}' loop variable declaration may not have an initializer.`,
		ForInUsing: "For-in loop may not start with 'using' declaration.",
		ForOfAsync: "The left-hand side of a for-of loop may not be 'async'.",
		ForOfLet: "The left-hand side of a for-of loop may not start with 'let'.",
		GeneratorInSingleStatementContext: "Generators can only be declared at the top level or inside a block.",
		IllegalBreakContinue: ({ type: a$13 }) => `Unsyntactic ${a$13 === "BreakStatement" ? "break" : "continue"}.`,
		IllegalLanguageModeDirective: "Illegal 'use strict' directive in function with non-simple parameter list.",
		IllegalReturn: "'return' outside of function.",
		ImportAttributesUseAssert: "The `assert` keyword in import attributes is deprecated and it has been replaced by the `with` keyword. You can enable the `deprecatedImportAssert` parser plugin to suppress this error.",
		ImportBindingIsString: ({ importName: a$13 }) => `A string literal cannot be used as an imported binding.
- Did you mean \`import { "${a$13}" as foo }\`?`,
		ImportCallArity: "`import()` requires exactly one or two arguments.",
		ImportCallNotNewExpression: "Cannot use new with import(...).",
		ImportCallSpreadArgument: "`...` is not allowed in `import()`.",
		ImportJSONBindingNotDefault: "A JSON module can only be imported with `default`.",
		ImportReflectionHasAssertion: "`import module x` cannot have assertions.",
		ImportReflectionNotBinding: "Only `import module x from \"./module\"` is valid.",
		IncompatibleRegExpUVFlags: "The 'u' and 'v' regular expression flags cannot be enabled at the same time.",
		InvalidBigIntLiteral: "Invalid BigIntLiteral.",
		InvalidCodePoint: "Code point out of bounds.",
		InvalidCoverInitializedName: "Invalid shorthand property initializer.",
		InvalidDecimal: "Invalid decimal.",
		InvalidDigit: ({ radix: a$13 }) => `Expected number in radix ${a$13}.`,
		InvalidEscapeSequence: "Bad character escape sequence.",
		InvalidEscapeSequenceTemplate: "Invalid escape sequence in template.",
		InvalidEscapedReservedWord: ({ reservedWord: a$13 }) => `Escape sequence in keyword ${a$13}.`,
		InvalidIdentifier: ({ identifierName: a$13 }) => `Invalid identifier ${a$13}.`,
		InvalidLhs: ({ ancestor: a$13 }) => `Invalid left-hand side in ${Se$5(a$13)}.`,
		InvalidLhsBinding: ({ ancestor: a$13 }) => `Binding invalid left-hand side in ${Se$5(a$13)}.`,
		InvalidLhsOptionalChaining: ({ ancestor: a$13 }) => `Invalid optional chaining in the left-hand side of ${Se$5(a$13)}.`,
		InvalidNumber: "Invalid number.",
		InvalidOrMissingExponent: "Floating-point numbers require a valid exponent after the 'e'.",
		InvalidOrUnexpectedToken: ({ unexpected: a$13 }) => `Unexpected character '${a$13}'.`,
		InvalidParenthesizedAssignment: "Invalid parenthesized assignment pattern.",
		InvalidPrivateFieldResolution: ({ identifierName: a$13 }) => `Private name #${a$13} is not defined.`,
		InvalidPropertyBindingPattern: "Binding member expression.",
		InvalidRecordProperty: "Only properties and spread elements are allowed in record definitions.",
		InvalidRestAssignmentPattern: "Invalid rest operator's argument.",
		LabelRedeclaration: ({ labelName: a$13 }) => `Label '${a$13}' is already declared.`,
		LetInLexicalBinding: "'let' is disallowed as a lexically bound name.",
		LineTerminatorBeforeArrow: "No line break is allowed before '=>'.",
		MalformedRegExpFlags: "Invalid regular expression flag.",
		MissingClassName: "A class name is required.",
		MissingEqInAssignment: "Only '=' operator can be used for specifying default value.",
		MissingSemicolon: "Missing semicolon.",
		MissingPlugin: ({ missingPlugin: a$13 }) => `This experimental syntax requires enabling the parser plugin: ${a$13.map((t$13) => JSON.stringify(t$13)).join(", ")}.`,
		MissingOneOfPlugins: ({ missingPlugin: a$13 }) => `This experimental syntax requires enabling one of the following parser plugin(s): ${a$13.map((t$13) => JSON.stringify(t$13)).join(", ")}.`,
		MissingUnicodeEscape: "Expecting Unicode escape sequence \\uXXXX.",
		MixingCoalesceWithLogical: "Nullish coalescing operator(??) requires parens when mixing with logical operators.",
		ModuleAttributeDifferentFromType: "The only accepted module attribute is `type`.",
		ModuleAttributeInvalidValue: "Only string literals are allowed as module attribute values.",
		ModuleAttributesWithDuplicateKeys: ({ key: a$13 }) => `Duplicate key "${a$13}" is not allowed in module attributes.`,
		ModuleExportNameHasLoneSurrogate: ({ surrogateCharCode: a$13 }) => `An export name cannot include a lone surrogate, found '\\u${a$13.toString(16)}'.`,
		ModuleExportUndefined: ({ localName: a$13 }) => `Export '${a$13}' is not defined.`,
		MultipleDefaultsInSwitch: "Multiple default clauses.",
		NewlineAfterThrow: "Illegal newline after throw.",
		NoCatchOrFinally: "Missing catch or finally clause.",
		NumberIdentifier: "Identifier directly after number.",
		NumericSeparatorInEscapeSequence: "Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.",
		ObsoleteAwaitStar: "'await*' has been removed from the async functions proposal. Use Promise.all() instead.",
		OptionalChainingNoNew: "Constructors in/after an Optional Chain are not allowed.",
		OptionalChainingNoTemplate: "Tagged Template Literals are not allowed in optionalChain.",
		OverrideOnConstructor: "'override' modifier cannot appear on a constructor declaration.",
		ParamDupe: "Argument name clash.",
		PatternHasAccessor: "Object pattern can't contain getter or setter.",
		PatternHasMethod: "Object pattern can't contain methods.",
		PrivateInExpectedIn: ({ identifierName: a$13 }) => `Private names are only allowed in property accesses (\`obj.#${a$13}\`) or in \`in\` expressions (\`#${a$13} in obj\`).`,
		PrivateNameRedeclaration: ({ identifierName: a$13 }) => `Duplicate private name #${a$13}.`,
		RecordExpressionBarIncorrectEndSyntaxType: "Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.",
		RecordExpressionBarIncorrectStartSyntaxType: "Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.",
		RecordExpressionHashIncorrectStartSyntaxType: "Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.",
		RecordNoProto: "'__proto__' is not allowed in Record expressions.",
		RestTrailingComma: "Unexpected trailing comma after rest element.",
		SloppyFunction: "In non-strict mode code, functions can only be declared at top level or inside a block.",
		SloppyFunctionAnnexB: "In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.",
		SourcePhaseImportRequiresDefault: "Only `import source x from \"./module\"` is valid.",
		StaticPrototype: "Classes may not have static property named prototype.",
		SuperNotAllowed: "`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?",
		SuperPrivateField: "Private fields can't be accessed on super.",
		TrailingDecorator: "Decorators must be attached to a class element.",
		TupleExpressionBarIncorrectEndSyntaxType: "Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.",
		TupleExpressionBarIncorrectStartSyntaxType: "Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.",
		TupleExpressionHashIncorrectStartSyntaxType: "Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.",
		UnexpectedArgumentPlaceholder: "Unexpected argument placeholder.",
		UnexpectedAwaitAfterPipelineBody: "Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.",
		UnexpectedDigitAfterHash: "Unexpected digit after hash token.",
		UnexpectedImportExport: "'import' and 'export' may only appear at the top level.",
		UnexpectedKeyword: ({ keyword: a$13 }) => `Unexpected keyword '${a$13}'.`,
		UnexpectedLeadingDecorator: "Leading decorators must be attached to a class declaration.",
		UnexpectedLexicalDeclaration: "Lexical declaration cannot appear in a single-statement context.",
		UnexpectedNewTarget: "`new.target` can only be used in functions or class properties.",
		UnexpectedNumericSeparator: "A numeric separator is only allowed between two digits.",
		UnexpectedPrivateField: "Unexpected private name.",
		UnexpectedReservedWord: ({ reservedWord: a$13 }) => `Unexpected reserved word '${a$13}'.`,
		UnexpectedSuper: "'super' is only allowed in object methods and classes.",
		UnexpectedToken: ({ expected: a$13, unexpected: t$13 }) => `Unexpected token${t$13 ? ` '${t$13}'.` : ""}${a$13 ? `, expected "${a$13}"` : ""}`,
		UnexpectedTokenUnaryExponentiation: "Illegal expression. Wrap left hand side or entire exponentiation in parentheses.",
		UnexpectedUsingDeclaration: "Using declaration cannot appear in the top level when source type is `script` or in the bare case statement.",
		UnsupportedBind: "Binding should be performed on object property.",
		UnsupportedDecoratorExport: "A decorated export must export a class declaration.",
		UnsupportedDefaultExport: "Only expressions, functions or classes are allowed as the `default` export.",
		UnsupportedImport: "`import` can only be used in `import()` or `import.meta`.",
		UnsupportedMetaProperty: ({ target: a$13, onlyValidPropertyName: t$13 }) => `The only valid meta property for ${a$13} is ${a$13}.${t$13}.`,
		UnsupportedParameterDecorator: "Decorators cannot be used to decorate parameters.",
		UnsupportedPropertyDecorator: "Decorators cannot be used to decorate object literal properties.",
		UnsupportedSuper: "'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).",
		UnterminatedComment: "Unterminated comment.",
		UnterminatedRegExp: "Unterminated regular expression.",
		UnterminatedString: "Unterminated string constant.",
		UnterminatedTemplate: "Unterminated template.",
		UsingDeclarationExport: "Using declaration cannot be exported.",
		UsingDeclarationHasBindingPattern: "Using declaration cannot have destructuring patterns.",
		VarRedeclaration: ({ identifierName: a$13 }) => `Identifier '${a$13}' has already been declared.`,
		YieldBindingIdentifier: "Can not use 'yield' as identifier inside a generator.",
		YieldInParameter: "Yield expression is not allowed in formal parameters.",
		YieldNotInGeneratorFunction: "'yield' is only allowed within generator functions.",
		ZeroDigitNumericSeparator: "Numeric separator can not be used after leading 0."
	}, vi$6 = {
		StrictDelete: "Deleting local variable in strict mode.",
		StrictEvalArguments: ({ referenceName: a$13 }) => `Assigning to '${a$13}' in strict mode.`,
		StrictEvalArgumentsBinding: ({ bindingName: a$13 }) => `Binding '${a$13}' in strict mode.`,
		StrictFunction: "In strict mode code, functions can only be declared at top level or inside a block.",
		StrictNumericEscape: "The only valid numeric escape in strict mode is '\\0'.",
		StrictOctalLiteral: "Legacy octal literals are not allowed in strict mode.",
		StrictWith: "'with' in strict mode."
	}, Li$4 = {
		ParseExpressionEmptyInput: "Unexpected parseExpression() input: The input is empty or contains only comments.",
		ParseExpressionExpectsEOF: ({ unexpected: a$13 }) => `Unexpected parseExpression() input: The input should contain exactly one expression, but the first expression is followed by the unexpected character \`${String.fromCodePoint(a$13)}\`.`
	}, Di$3 = new Set([
		"ArrowFunctionExpression",
		"AssignmentExpression",
		"ConditionalExpression",
		"YieldExpression"
	]), Mi$4 = Object.assign({
		PipeBodyIsTighter: "Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.",
		PipeTopicRequiresHackPipes: "Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.",
		PipeTopicUnbound: "Topic reference is unbound; it must be inside a pipe body.",
		PipeTopicUnconfiguredToken: ({ token: a$13 }) => `Invalid topic token ${a$13}. In order to use ${a$13} as a topic reference, the pipelineOperator plugin must be configured with { "proposal": "hack", "topicToken": "${a$13}" }.`,
		PipeTopicUnused: "Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.",
		PipeUnparenthesizedBody: ({ type: a$13 }) => `Hack-style pipe body cannot be an unparenthesized ${Se$5({ type: a$13 })}; please wrap it in parentheses.`
	}, {
		PipelineBodyNoArrow: "Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.",
		PipelineBodySequenceExpression: "Pipeline body may not be a comma-separated sequence expression.",
		PipelineHeadSequenceExpression: "Pipeline head should not be a comma-separated sequence expression.",
		PipelineTopicUnused: "Pipeline is in topic style but does not use topic reference.",
		PrimaryTopicNotAllowed: "Topic reference was used in a lexical context without topic binding.",
		PrimaryTopicRequiresSmartPipeline: "Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option."
	}), Oi$5 = ["message"];
	function ps$3(a$13, t$13, e$4) {
		Object.defineProperty(a$13, t$13, {
			enumerable: !1,
			configurable: !0,
			value: e$4
		});
	}
	function Fi$4({ toMessage: a$13, code: t$13, reasonCode: e$4, syntaxPlugin: s$8 }) {
		let i$18 = e$4 === "MissingPlugin" || e$4 === "MissingOneOfPlugins";
		{
			let r$12 = {
				AccessorCannotDeclareThisParameter: "AccesorCannotDeclareThisParameter",
				AccessorCannotHaveTypeParameters: "AccesorCannotHaveTypeParameters",
				ConstInitializerMustBeStringOrNumericLiteralOrLiteralEnumReference: "ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference",
				SetAccessorCannotHaveOptionalParameter: "SetAccesorCannotHaveOptionalParameter",
				SetAccessorCannotHaveRestParameter: "SetAccesorCannotHaveRestParameter",
				SetAccessorCannotHaveReturnType: "SetAccesorCannotHaveReturnType"
			};
			r$12[e$4] && (e$4 = r$12[e$4]);
		}
		return function r$12(n$8, o$9) {
			let l$10 = /* @__PURE__ */ new SyntaxError();
			return l$10.code = t$13, l$10.reasonCode = e$4, l$10.loc = n$8, l$10.pos = n$8.index, l$10.syntaxPlugin = s$8, i$18 && (l$10.missingPlugin = o$9.missingPlugin), ps$3(l$10, "clone", function(c$3 = {}) {
				var u$14;
				let { line: f$3, column: d$14, index: x$3 } = (u$14 = c$3.loc) != null ? u$14 : n$8;
				return r$12(new B$4(f$3, d$14, x$3), Object.assign({}, o$9, c$3.details));
			}), ps$3(l$10, "details", o$9), Object.defineProperty(l$10, "message", {
				configurable: !0,
				get() {
					let h$3 = `${a$13(o$9)} (${n$8.line}:${n$8.column})`;
					return this.message = h$3, h$3;
				},
				set(h$3) {
					Object.defineProperty(this, "message", {
						value: h$3,
						writable: !0
					});
				}
			}), l$10;
		};
	}
	function F$4(a$13, t$13) {
		if (Array.isArray(a$13)) return (s$8) => F$4(s$8, a$13[0]);
		let e$4 = {};
		for (let s$8 of Object.keys(a$13)) {
			let i$18 = a$13[s$8], r$12 = typeof i$18 == "string" ? { message: () => i$18 } : typeof i$18 == "function" ? { message: i$18 } : i$18, { message: n$8 } = r$12, o$9 = Ii$4(r$12, Oi$5), l$10 = typeof n$8 == "string" ? () => n$8 : n$8;
			e$4[s$8] = Fi$4(Object.assign({
				code: "BABEL_PARSER_SYNTAX_ERROR",
				reasonCode: s$8,
				toMessage: l$10
			}, t$13 ? { syntaxPlugin: t$13 } : {}, o$9));
		}
		return e$4;
	}
	var p$2 = Object.assign({}, F$4(Ni$4), F$4(ki$5), F$4(vi$6), F$4(Li$4), F$4`pipelineOperator`(Mi$4));
	function Bi$4() {
		return {
			sourceType: "script",
			sourceFilename: void 0,
			startIndex: 0,
			startColumn: 0,
			startLine: 1,
			allowAwaitOutsideFunction: !1,
			allowReturnOutsideFunction: !1,
			allowNewTargetOutsideFunction: !1,
			allowImportExportEverywhere: !1,
			allowSuperOutsideMethod: !1,
			allowUndeclaredExports: !1,
			allowYieldOutsideFunction: !1,
			plugins: [],
			strictMode: null,
			ranges: !1,
			tokens: !1,
			createImportExpressions: !1,
			createParenthesizedExpressions: !1,
			errorRecovery: !1,
			attachComment: !0,
			annexB: !0
		};
	}
	function Ri$4(a$13) {
		let t$13 = Bi$4();
		if (a$13 == null) return t$13;
		if (a$13.annexB != null && a$13.annexB !== !1) throw new Error("The `annexB` option can only be set to `false`.");
		for (let e$4 of Object.keys(t$13)) a$13[e$4] != null && (t$13[e$4] = a$13[e$4]);
		if (t$13.startLine === 1) a$13.startIndex == null && t$13.startColumn > 0 ? t$13.startIndex = t$13.startColumn : a$13.startColumn == null && t$13.startIndex > 0 && (t$13.startColumn = t$13.startIndex);
		else if ((a$13.startColumn == null || a$13.startIndex == null) && a$13.startIndex != null) throw new Error("With a `startLine > 1` you must also specify `startIndex` and `startColumn`.");
		return t$13;
	}
	var { defineProperty: _i$5 } = Object, us$2 = (a$13, t$13) => {
		a$13 && _i$5(a$13, t$13, {
			enumerable: !1,
			value: a$13[t$13]
		});
	};
	function he$7(a$13) {
		return us$2(a$13.loc.start, "index"), us$2(a$13.loc.end, "index"), a$13;
	}
	var Ui$4 = (a$13) => class extends a$13 {
		parse() {
			let e$4 = he$7(super.parse());
			return this.optionFlags & 256 && (e$4.tokens = e$4.tokens.map(he$7)), e$4;
		}
		parseRegExpLiteral({ pattern: e$4, flags: s$8 }) {
			let i$18 = null;
			try {
				i$18 = new RegExp(e$4, s$8);
			} catch {}
			let r$12 = this.estreeParseLiteral(i$18);
			return r$12.regex = {
				pattern: e$4,
				flags: s$8
			}, r$12;
		}
		parseBigIntLiteral(e$4) {
			let s$8;
			try {
				s$8 = BigInt(e$4);
			} catch {
				s$8 = null;
			}
			let i$18 = this.estreeParseLiteral(s$8);
			return i$18.bigint = String(i$18.value || e$4), i$18;
		}
		parseDecimalLiteral(e$4) {
			let i$18 = this.estreeParseLiteral(null);
			return i$18.decimal = String(i$18.value || e$4), i$18;
		}
		estreeParseLiteral(e$4) {
			return this.parseLiteral(e$4, "Literal");
		}
		parseStringLiteral(e$4) {
			return this.estreeParseLiteral(e$4);
		}
		parseNumericLiteral(e$4) {
			return this.estreeParseLiteral(e$4);
		}
		parseNullLiteral() {
			return this.estreeParseLiteral(null);
		}
		parseBooleanLiteral(e$4) {
			return this.estreeParseLiteral(e$4);
		}
		estreeParseChainExpression(e$4, s$8) {
			let i$18 = this.startNodeAtNode(e$4);
			return i$18.expression = e$4, this.finishNodeAt(i$18, "ChainExpression", s$8);
		}
		directiveToStmt(e$4) {
			let s$8 = e$4.value;
			delete e$4.value, this.castNodeTo(s$8, "Literal"), s$8.raw = s$8.extra.raw, s$8.value = s$8.extra.expressionValue;
			let i$18 = this.castNodeTo(e$4, "ExpressionStatement");
			return i$18.expression = s$8, i$18.directive = s$8.extra.rawValue, delete s$8.extra, i$18;
		}
		fillOptionalPropertiesForTSESLint(e$4) {}
		cloneEstreeStringLiteral(e$4) {
			let { start: s$8, end: i$18, loc: r$12, range: n$8, raw: o$9, value: l$10 } = e$4, h$3 = Object.create(e$4.constructor.prototype);
			return h$3.type = "Literal", h$3.start = s$8, h$3.end = i$18, h$3.loc = r$12, h$3.range = n$8, h$3.raw = o$9, h$3.value = l$10, h$3;
		}
		initFunction(e$4, s$8) {
			super.initFunction(e$4, s$8), e$4.expression = !1;
		}
		checkDeclaration(e$4) {
			e$4 != null && this.isObjectProperty(e$4) ? this.checkDeclaration(e$4.value) : super.checkDeclaration(e$4);
		}
		getObjectOrClassMethodParams(e$4) {
			return e$4.value.params;
		}
		isValidDirective(e$4) {
			var s$8;
			return e$4.type === "ExpressionStatement" && e$4.expression.type === "Literal" && typeof e$4.expression.value == "string" && !((s$8 = e$4.expression.extra) != null && s$8.parenthesized);
		}
		parseBlockBody(e$4, s$8, i$18, r$12, n$8) {
			super.parseBlockBody(e$4, s$8, i$18, r$12, n$8);
			e$4.body = e$4.directives.map((l$10) => this.directiveToStmt(l$10)).concat(e$4.body), delete e$4.directives;
		}
		parsePrivateName() {
			let e$4 = super.parsePrivateName();
			return this.getPluginOption("estree", "classFeatures") ? this.convertPrivateNameToPrivateIdentifier(e$4) : e$4;
		}
		convertPrivateNameToPrivateIdentifier(e$4) {
			let s$8 = super.getPrivateNameSV(e$4);
			return e$4 = e$4, delete e$4.id, e$4.name = s$8, this.castNodeTo(e$4, "PrivateIdentifier");
		}
		isPrivateName(e$4) {
			return this.getPluginOption("estree", "classFeatures") ? e$4.type === "PrivateIdentifier" : super.isPrivateName(e$4);
		}
		getPrivateNameSV(e$4) {
			return this.getPluginOption("estree", "classFeatures") ? e$4.name : super.getPrivateNameSV(e$4);
		}
		parseLiteral(e$4, s$8) {
			let i$18 = super.parseLiteral(e$4, s$8);
			return i$18.raw = i$18.extra.raw, delete i$18.extra, i$18;
		}
		parseFunctionBody(e$4, s$8, i$18 = !1) {
			super.parseFunctionBody(e$4, s$8, i$18), e$4.expression = e$4.body.type !== "BlockStatement";
		}
		parseMethod(e$4, s$8, i$18, r$12, n$8, o$9, l$10 = !1) {
			let h$3 = this.startNode();
			h$3.kind = e$4.kind, h$3 = super.parseMethod(h$3, s$8, i$18, r$12, n$8, o$9, l$10), delete h$3.kind;
			let { typeParameters: c$3 } = e$4;
			c$3 && (delete e$4.typeParameters, h$3.typeParameters = c$3, this.resetStartLocationFromNode(h$3, c$3));
			return e$4.value = this.castNodeTo(h$3, "FunctionExpression"), o$9 === "ClassPrivateMethod" && (e$4.computed = !1), o$9 === "ObjectMethod" ? (e$4.kind === "method" && (e$4.kind = "init"), e$4.shorthand = !1, this.finishNode(e$4, "Property")) : this.finishNode(e$4, "MethodDefinition");
		}
		nameIsConstructor(e$4) {
			return e$4.type === "Literal" ? e$4.value === "constructor" : super.nameIsConstructor(e$4);
		}
		parseClassProperty(...e$4) {
			let s$8 = super.parseClassProperty(...e$4);
			return this.getPluginOption("estree", "classFeatures") && this.castNodeTo(s$8, "PropertyDefinition"), s$8;
		}
		parseClassPrivateProperty(...e$4) {
			let s$8 = super.parseClassPrivateProperty(...e$4);
			return this.getPluginOption("estree", "classFeatures") && (this.castNodeTo(s$8, "PropertyDefinition"), s$8.computed = !1), s$8;
		}
		parseClassAccessorProperty(e$4) {
			let s$8 = super.parseClassAccessorProperty(e$4);
			return this.getPluginOption("estree", "classFeatures") && (s$8.abstract && this.hasPlugin("typescript") ? (delete s$8.abstract, this.castNodeTo(s$8, "TSAbstractAccessorProperty")) : this.castNodeTo(s$8, "AccessorProperty")), s$8;
		}
		parseObjectProperty(e$4, s$8, i$18, r$12) {
			let n$8 = super.parseObjectProperty(e$4, s$8, i$18, r$12);
			return n$8 && (n$8.kind = "init", this.castNodeTo(n$8, "Property")), n$8;
		}
		finishObjectProperty(e$4) {
			return e$4.kind = "init", this.finishNode(e$4, "Property");
		}
		isValidLVal(e$4, s$8, i$18) {
			return e$4 === "Property" ? "value" : super.isValidLVal(e$4, s$8, i$18);
		}
		isAssignable(e$4, s$8) {
			return e$4 != null && this.isObjectProperty(e$4) ? this.isAssignable(e$4.value, s$8) : super.isAssignable(e$4, s$8);
		}
		toAssignable(e$4, s$8 = !1) {
			if (e$4 != null && this.isObjectProperty(e$4)) {
				let { key: i$18, value: r$12 } = e$4;
				this.isPrivateName(i$18) && this.classScope.usePrivateName(this.getPrivateNameSV(i$18), i$18.loc.start), this.toAssignable(r$12, s$8);
			} else super.toAssignable(e$4, s$8);
		}
		toAssignableObjectExpressionProp(e$4, s$8, i$18) {
			e$4.type === "Property" && (e$4.kind === "get" || e$4.kind === "set") ? this.raise(p$2.PatternHasAccessor, e$4.key) : e$4.type === "Property" && e$4.method ? this.raise(p$2.PatternHasMethod, e$4.key) : super.toAssignableObjectExpressionProp(e$4, s$8, i$18);
		}
		finishCallExpression(e$4, s$8) {
			let i$18 = super.finishCallExpression(e$4, s$8);
			if (i$18.callee.type === "Import") {
				var r$12, n$8;
				this.castNodeTo(i$18, "ImportExpression"), i$18.source = i$18.arguments[0], i$18.options = (r$12 = i$18.arguments[1]) != null ? r$12 : null, i$18.attributes = (n$8 = i$18.arguments[1]) != null ? n$8 : null, delete i$18.arguments, delete i$18.callee;
			} else i$18.type === "OptionalCallExpression" ? this.castNodeTo(i$18, "CallExpression") : i$18.optional = !1;
			return i$18;
		}
		toReferencedArguments(e$4) {
			e$4.type !== "ImportExpression" && super.toReferencedArguments(e$4);
		}
		parseExport(e$4, s$8) {
			let i$18 = this.state.lastTokStartLoc, r$12 = super.parseExport(e$4, s$8);
			switch (r$12.type) {
				case "ExportAllDeclaration":
					r$12.exported = null;
					break;
				case "ExportNamedDeclaration": r$12.specifiers.length === 1 && r$12.specifiers[0].type === "ExportNamespaceSpecifier" && (this.castNodeTo(r$12, "ExportAllDeclaration"), r$12.exported = r$12.specifiers[0].exported, delete r$12.specifiers);
				case "ExportDefaultDeclaration":
					{
						var n$8;
						let { declaration: o$9 } = r$12;
						(o$9 == null ? void 0 : o$9.type) === "ClassDeclaration" && ((n$8 = o$9.decorators) == null ? void 0 : n$8.length) > 0 && o$9.start === r$12.start && this.resetStartLocation(r$12, i$18);
					}
					break;
			}
			return r$12;
		}
		stopParseSubscript(e$4, s$8) {
			let i$18 = super.stopParseSubscript(e$4, s$8);
			return s$8.optionalChainMember ? this.estreeParseChainExpression(i$18, e$4.loc.end) : i$18;
		}
		parseMember(e$4, s$8, i$18, r$12, n$8) {
			let o$9 = super.parseMember(e$4, s$8, i$18, r$12, n$8);
			return o$9.type === "OptionalMemberExpression" ? this.castNodeTo(o$9, "MemberExpression") : o$9.optional = !1, o$9;
		}
		isOptionalMemberExpression(e$4) {
			return e$4.type === "ChainExpression" ? e$4.expression.type === "MemberExpression" : super.isOptionalMemberExpression(e$4);
		}
		hasPropertyAsPrivateName(e$4) {
			return e$4.type === "ChainExpression" && (e$4 = e$4.expression), super.hasPropertyAsPrivateName(e$4);
		}
		isObjectProperty(e$4) {
			return e$4.type === "Property" && e$4.kind === "init" && !e$4.method;
		}
		isObjectMethod(e$4) {
			return e$4.type === "Property" && (e$4.method || e$4.kind === "get" || e$4.kind === "set");
		}
		castNodeTo(e$4, s$8) {
			let i$18 = super.castNodeTo(e$4, s$8);
			return this.fillOptionalPropertiesForTSESLint(i$18), i$18;
		}
		cloneIdentifier(e$4) {
			let s$8 = super.cloneIdentifier(e$4);
			return this.fillOptionalPropertiesForTSESLint(s$8), s$8;
		}
		cloneStringLiteral(e$4) {
			return e$4.type === "Literal" ? this.cloneEstreeStringLiteral(e$4) : super.cloneStringLiteral(e$4);
		}
		finishNodeAt(e$4, s$8, i$18) {
			return he$7(super.finishNodeAt(e$4, s$8, i$18));
		}
		finishNode(e$4, s$8) {
			let i$18 = super.finishNode(e$4, s$8);
			return this.fillOptionalPropertiesForTSESLint(i$18), i$18;
		}
		resetStartLocation(e$4, s$8) {
			super.resetStartLocation(e$4, s$8), he$7(e$4);
		}
		resetEndLocation(e$4, s$8 = this.state.lastTokEndLoc) {
			super.resetEndLocation(e$4, s$8), he$7(e$4);
		}
	}, X$6 = class {
		constructor(t$13, e$4) {
			this.token = void 0, this.preserveSpace = void 0, this.token = t$13, this.preserveSpace = !!e$4;
		}
	}, C$3 = {
		brace: new X$6("{"),
		j_oTag: new X$6("<tag"),
		j_cTag: new X$6("</tag"),
		j_expr: new X$6("<tag>...</tag>", !0)
	};
	C$3.template = new X$6("`", !0);
	var T$9 = !0, m$11 = !0, je$4 = !0, ce$4 = !0, V$5 = !0, ji$5 = !0, we$3 = class {
		constructor(t$13, e$4 = {}) {
			this.label = void 0, this.keyword = void 0, this.beforeExpr = void 0, this.startsExpr = void 0, this.rightAssociative = void 0, this.isLoop = void 0, this.isAssign = void 0, this.prefix = void 0, this.postfix = void 0, this.binop = void 0, this.label = t$13, this.keyword = e$4.keyword, this.beforeExpr = !!e$4.beforeExpr, this.startsExpr = !!e$4.startsExpr, this.rightAssociative = !!e$4.rightAssociative, this.isLoop = !!e$4.isLoop, this.isAssign = !!e$4.isAssign, this.prefix = !!e$4.prefix, this.postfix = !!e$4.postfix, this.binop = e$4.binop != null ? e$4.binop : null, this.updateContext = null;
		}
	}, pt$4 = /* @__PURE__ */ new Map();
	function E$3(a$13, t$13 = {}) {
		t$13.keyword = a$13;
		let e$4 = P$5(a$13, t$13);
		return pt$4.set(a$13, e$4), e$4;
	}
	function L$4(a$13, t$13) {
		return P$5(a$13, {
			beforeExpr: T$9,
			binop: t$13
		});
	}
	var de$6 = -1, _$2 = [], ut$4 = [], ft$4 = [], dt$3 = [], mt$5 = [], yt$4 = [];
	function P$5(a$13, t$13 = {}) {
		var e$4, s$8, i$18, r$12;
		return ++de$6, ut$4.push(a$13), ft$4.push((e$4 = t$13.binop) != null ? e$4 : -1), dt$3.push((s$8 = t$13.beforeExpr) != null ? s$8 : !1), mt$5.push((i$18 = t$13.startsExpr) != null ? i$18 : !1), yt$4.push((r$12 = t$13.prefix) != null ? r$12 : !1), _$2.push(new we$3(a$13, t$13)), de$6;
	}
	function b$7(a$13, t$13 = {}) {
		var e$4, s$8, i$18, r$12;
		return ++de$6, pt$4.set(a$13, de$6), ut$4.push(a$13), ft$4.push((e$4 = t$13.binop) != null ? e$4 : -1), dt$3.push((s$8 = t$13.beforeExpr) != null ? s$8 : !1), mt$5.push((i$18 = t$13.startsExpr) != null ? i$18 : !1), yt$4.push((r$12 = t$13.prefix) != null ? r$12 : !1), _$2.push(new we$3("name", t$13)), de$6;
	}
	var $i$5 = {
		bracketL: P$5("[", {
			beforeExpr: T$9,
			startsExpr: m$11
		}),
		bracketHashL: P$5("#[", {
			beforeExpr: T$9,
			startsExpr: m$11
		}),
		bracketBarL: P$5("[|", {
			beforeExpr: T$9,
			startsExpr: m$11
		}),
		bracketR: P$5("]"),
		bracketBarR: P$5("|]"),
		braceL: P$5("{", {
			beforeExpr: T$9,
			startsExpr: m$11
		}),
		braceBarL: P$5("{|", {
			beforeExpr: T$9,
			startsExpr: m$11
		}),
		braceHashL: P$5("#{", {
			beforeExpr: T$9,
			startsExpr: m$11
		}),
		braceR: P$5("}"),
		braceBarR: P$5("|}"),
		parenL: P$5("(", {
			beforeExpr: T$9,
			startsExpr: m$11
		}),
		parenR: P$5(")"),
		comma: P$5(",", { beforeExpr: T$9 }),
		semi: P$5(";", { beforeExpr: T$9 }),
		colon: P$5(":", { beforeExpr: T$9 }),
		doubleColon: P$5("::", { beforeExpr: T$9 }),
		dot: P$5("."),
		question: P$5("?", { beforeExpr: T$9 }),
		questionDot: P$5("?."),
		arrow: P$5("=>", { beforeExpr: T$9 }),
		template: P$5("template"),
		ellipsis: P$5("...", { beforeExpr: T$9 }),
		backQuote: P$5("`", { startsExpr: m$11 }),
		dollarBraceL: P$5("${", {
			beforeExpr: T$9,
			startsExpr: m$11
		}),
		templateTail: P$5("...`", { startsExpr: m$11 }),
		templateNonTail: P$5("...${", {
			beforeExpr: T$9,
			startsExpr: m$11
		}),
		at: P$5("@"),
		hash: P$5("#", { startsExpr: m$11 }),
		interpreterDirective: P$5("#!..."),
		eq: P$5("=", {
			beforeExpr: T$9,
			isAssign: ce$4
		}),
		assign: P$5("_=", {
			beforeExpr: T$9,
			isAssign: ce$4
		}),
		slashAssign: P$5("_=", {
			beforeExpr: T$9,
			isAssign: ce$4
		}),
		xorAssign: P$5("_=", {
			beforeExpr: T$9,
			isAssign: ce$4
		}),
		moduloAssign: P$5("_=", {
			beforeExpr: T$9,
			isAssign: ce$4
		}),
		incDec: P$5("++/--", {
			prefix: V$5,
			postfix: ji$5,
			startsExpr: m$11
		}),
		bang: P$5("!", {
			beforeExpr: T$9,
			prefix: V$5,
			startsExpr: m$11
		}),
		tilde: P$5("~", {
			beforeExpr: T$9,
			prefix: V$5,
			startsExpr: m$11
		}),
		doubleCaret: P$5("^^", { startsExpr: m$11 }),
		doubleAt: P$5("@@", { startsExpr: m$11 }),
		pipeline: L$4("|>", 0),
		nullishCoalescing: L$4("??", 1),
		logicalOR: L$4("||", 1),
		logicalAND: L$4("&&", 2),
		bitwiseOR: L$4("|", 3),
		bitwiseXOR: L$4("^", 4),
		bitwiseAND: L$4("&", 5),
		equality: L$4("==/!=/===/!==", 6),
		lt: L$4("</>/<=/>=", 7),
		gt: L$4("</>/<=/>=", 7),
		relational: L$4("</>/<=/>=", 7),
		bitShift: L$4("<</>>/>>>", 8),
		bitShiftL: L$4("<</>>/>>>", 8),
		bitShiftR: L$4("<</>>/>>>", 8),
		plusMin: P$5("+/-", {
			beforeExpr: T$9,
			binop: 9,
			prefix: V$5,
			startsExpr: m$11
		}),
		modulo: P$5("%", {
			binop: 10,
			startsExpr: m$11
		}),
		star: P$5("*", { binop: 10 }),
		slash: L$4("/", 10),
		exponent: P$5("**", {
			beforeExpr: T$9,
			binop: 11,
			rightAssociative: !0
		}),
		_in: E$3("in", {
			beforeExpr: T$9,
			binop: 7
		}),
		_instanceof: E$3("instanceof", {
			beforeExpr: T$9,
			binop: 7
		}),
		_break: E$3("break"),
		_case: E$3("case", { beforeExpr: T$9 }),
		_catch: E$3("catch"),
		_continue: E$3("continue"),
		_debugger: E$3("debugger"),
		_default: E$3("default", { beforeExpr: T$9 }),
		_else: E$3("else", { beforeExpr: T$9 }),
		_finally: E$3("finally"),
		_function: E$3("function", { startsExpr: m$11 }),
		_if: E$3("if"),
		_return: E$3("return", { beforeExpr: T$9 }),
		_switch: E$3("switch"),
		_throw: E$3("throw", {
			beforeExpr: T$9,
			prefix: V$5,
			startsExpr: m$11
		}),
		_try: E$3("try"),
		_var: E$3("var"),
		_const: E$3("const"),
		_with: E$3("with"),
		_new: E$3("new", {
			beforeExpr: T$9,
			startsExpr: m$11
		}),
		_this: E$3("this", { startsExpr: m$11 }),
		_super: E$3("super", { startsExpr: m$11 }),
		_class: E$3("class", { startsExpr: m$11 }),
		_extends: E$3("extends", { beforeExpr: T$9 }),
		_export: E$3("export"),
		_import: E$3("import", { startsExpr: m$11 }),
		_null: E$3("null", { startsExpr: m$11 }),
		_true: E$3("true", { startsExpr: m$11 }),
		_false: E$3("false", { startsExpr: m$11 }),
		_typeof: E$3("typeof", {
			beforeExpr: T$9,
			prefix: V$5,
			startsExpr: m$11
		}),
		_void: E$3("void", {
			beforeExpr: T$9,
			prefix: V$5,
			startsExpr: m$11
		}),
		_delete: E$3("delete", {
			beforeExpr: T$9,
			prefix: V$5,
			startsExpr: m$11
		}),
		_do: E$3("do", {
			isLoop: je$4,
			beforeExpr: T$9
		}),
		_for: E$3("for", { isLoop: je$4 }),
		_while: E$3("while", { isLoop: je$4 }),
		_as: b$7("as", { startsExpr: m$11 }),
		_assert: b$7("assert", { startsExpr: m$11 }),
		_async: b$7("async", { startsExpr: m$11 }),
		_await: b$7("await", { startsExpr: m$11 }),
		_defer: b$7("defer", { startsExpr: m$11 }),
		_from: b$7("from", { startsExpr: m$11 }),
		_get: b$7("get", { startsExpr: m$11 }),
		_let: b$7("let", { startsExpr: m$11 }),
		_meta: b$7("meta", { startsExpr: m$11 }),
		_of: b$7("of", { startsExpr: m$11 }),
		_sent: b$7("sent", { startsExpr: m$11 }),
		_set: b$7("set", { startsExpr: m$11 }),
		_source: b$7("source", { startsExpr: m$11 }),
		_static: b$7("static", { startsExpr: m$11 }),
		_using: b$7("using", { startsExpr: m$11 }),
		_yield: b$7("yield", { startsExpr: m$11 }),
		_asserts: b$7("asserts", { startsExpr: m$11 }),
		_checks: b$7("checks", { startsExpr: m$11 }),
		_exports: b$7("exports", { startsExpr: m$11 }),
		_global: b$7("global", { startsExpr: m$11 }),
		_implements: b$7("implements", { startsExpr: m$11 }),
		_intrinsic: b$7("intrinsic", { startsExpr: m$11 }),
		_infer: b$7("infer", { startsExpr: m$11 }),
		_is: b$7("is", { startsExpr: m$11 }),
		_mixins: b$7("mixins", { startsExpr: m$11 }),
		_proto: b$7("proto", { startsExpr: m$11 }),
		_require: b$7("require", { startsExpr: m$11 }),
		_satisfies: b$7("satisfies", { startsExpr: m$11 }),
		_keyof: b$7("keyof", { startsExpr: m$11 }),
		_readonly: b$7("readonly", { startsExpr: m$11 }),
		_unique: b$7("unique", { startsExpr: m$11 }),
		_abstract: b$7("abstract", { startsExpr: m$11 }),
		_declare: b$7("declare", { startsExpr: m$11 }),
		_enum: b$7("enum", { startsExpr: m$11 }),
		_module: b$7("module", { startsExpr: m$11 }),
		_namespace: b$7("namespace", { startsExpr: m$11 }),
		_interface: b$7("interface", { startsExpr: m$11 }),
		_type: b$7("type", { startsExpr: m$11 }),
		_opaque: b$7("opaque", { startsExpr: m$11 }),
		name: P$5("name", { startsExpr: m$11 }),
		placeholder: P$5("%%", { startsExpr: m$11 }),
		string: P$5("string", { startsExpr: m$11 }),
		num: P$5("num", { startsExpr: m$11 }),
		bigint: P$5("bigint", { startsExpr: m$11 }),
		decimal: P$5("decimal", { startsExpr: m$11 }),
		regexp: P$5("regexp", { startsExpr: m$11 }),
		privateName: P$5("#name", { startsExpr: m$11 }),
		eof: P$5("eof"),
		jsxName: P$5("jsxName"),
		jsxText: P$5("jsxText", { beforeExpr: T$9 }),
		jsxTagStart: P$5("jsxTagStart", { startsExpr: m$11 }),
		jsxTagEnd: P$5("jsxTagEnd")
	};
	function w$3(a$13) {
		return a$13 >= 93 && a$13 <= 133;
	}
	function Vi$5(a$13) {
		return a$13 <= 92;
	}
	function M$2(a$13) {
		return a$13 >= 58 && a$13 <= 133;
	}
	function Es$2(a$13) {
		return a$13 >= 58 && a$13 <= 137;
	}
	function qi$3(a$13) {
		return dt$3[a$13];
	}
	function ue$4(a$13) {
		return mt$5[a$13];
	}
	function zi$4(a$13) {
		return a$13 >= 29 && a$13 <= 33;
	}
	function fs$3(a$13) {
		return a$13 >= 129 && a$13 <= 131;
	}
	function Hi$5(a$13) {
		return a$13 >= 90 && a$13 <= 92;
	}
	function xt$4(a$13) {
		return a$13 >= 58 && a$13 <= 92;
	}
	function Ki$5(a$13) {
		return a$13 >= 39 && a$13 <= 59;
	}
	function Wi$5(a$13) {
		return a$13 === 34;
	}
	function Ji$4(a$13) {
		return yt$4[a$13];
	}
	function Xi$5(a$13) {
		return a$13 >= 121 && a$13 <= 123;
	}
	function Gi$5(a$13) {
		return a$13 >= 124 && a$13 <= 130;
	}
	function H$6(a$13) {
		return ut$4[a$13];
	}
	function Ee$4(a$13) {
		return ft$4[a$13];
	}
	function Yi$5(a$13) {
		return a$13 === 57;
	}
	function Ie$7(a$13) {
		return a$13 >= 24 && a$13 <= 25;
	}
	function R$6(a$13) {
		return _$2[a$13];
	}
	_$2[8].updateContext = (a$13) => {
		a$13.pop();
	}, _$2[5].updateContext = _$2[7].updateContext = _$2[23].updateContext = (a$13) => {
		a$13.push(C$3.brace);
	}, _$2[22].updateContext = (a$13) => {
		a$13[a$13.length - 1] === C$3.template ? a$13.pop() : a$13.push(C$3.template);
	}, _$2[143].updateContext = (a$13) => {
		a$13.push(C$3.j_expr, C$3.j_oTag);
	};
	var Pt$5 = "ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࡰ-ࢇࢉ-ࢎࢠ-ࣉऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౝౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೝೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜑᜟ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭌᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲊᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꟍꟐꟑꟓꟕ-Ƛꟲ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ", Cs$2 = "·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛ࢗ-࢟࣊-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄ఼ా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ೳഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-໎໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜕ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠏-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿ-ᫎᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷿‌‍‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯・꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿･", Qi$5 = /* @__PURE__ */ new RegExp("[" + Pt$5 + "]"), Zi$5 = /* @__PURE__ */ new RegExp("[" + Pt$5 + Cs$2 + "]");
	Pt$5 = Cs$2 = null;
	var ws$2 = [
		0,
		11,
		2,
		25,
		2,
		18,
		2,
		1,
		2,
		14,
		3,
		13,
		35,
		122,
		70,
		52,
		268,
		28,
		4,
		48,
		48,
		31,
		14,
		29,
		6,
		37,
		11,
		29,
		3,
		35,
		5,
		7,
		2,
		4,
		43,
		157,
		19,
		35,
		5,
		35,
		5,
		39,
		9,
		51,
		13,
		10,
		2,
		14,
		2,
		6,
		2,
		1,
		2,
		10,
		2,
		14,
		2,
		6,
		2,
		1,
		4,
		51,
		13,
		310,
		10,
		21,
		11,
		7,
		25,
		5,
		2,
		41,
		2,
		8,
		70,
		5,
		3,
		0,
		2,
		43,
		2,
		1,
		4,
		0,
		3,
		22,
		11,
		22,
		10,
		30,
		66,
		18,
		2,
		1,
		11,
		21,
		11,
		25,
		71,
		55,
		7,
		1,
		65,
		0,
		16,
		3,
		2,
		2,
		2,
		28,
		43,
		28,
		4,
		28,
		36,
		7,
		2,
		27,
		28,
		53,
		11,
		21,
		11,
		18,
		14,
		17,
		111,
		72,
		56,
		50,
		14,
		50,
		14,
		35,
		39,
		27,
		10,
		22,
		251,
		41,
		7,
		1,
		17,
		2,
		60,
		28,
		11,
		0,
		9,
		21,
		43,
		17,
		47,
		20,
		28,
		22,
		13,
		52,
		58,
		1,
		3,
		0,
		14,
		44,
		33,
		24,
		27,
		35,
		30,
		0,
		3,
		0,
		9,
		34,
		4,
		0,
		13,
		47,
		15,
		3,
		22,
		0,
		2,
		0,
		36,
		17,
		2,
		24,
		20,
		1,
		64,
		6,
		2,
		0,
		2,
		3,
		2,
		14,
		2,
		9,
		8,
		46,
		39,
		7,
		3,
		1,
		3,
		21,
		2,
		6,
		2,
		1,
		2,
		4,
		4,
		0,
		19,
		0,
		13,
		4,
		31,
		9,
		2,
		0,
		3,
		0,
		2,
		37,
		2,
		0,
		26,
		0,
		2,
		0,
		45,
		52,
		19,
		3,
		21,
		2,
		31,
		47,
		21,
		1,
		2,
		0,
		185,
		46,
		42,
		3,
		37,
		47,
		21,
		0,
		60,
		42,
		14,
		0,
		72,
		26,
		38,
		6,
		186,
		43,
		117,
		63,
		32,
		7,
		3,
		0,
		3,
		7,
		2,
		1,
		2,
		23,
		16,
		0,
		2,
		0,
		95,
		7,
		3,
		38,
		17,
		0,
		2,
		0,
		29,
		0,
		11,
		39,
		8,
		0,
		22,
		0,
		12,
		45,
		20,
		0,
		19,
		72,
		200,
		32,
		32,
		8,
		2,
		36,
		18,
		0,
		50,
		29,
		113,
		6,
		2,
		1,
		2,
		37,
		22,
		0,
		26,
		5,
		2,
		1,
		2,
		31,
		15,
		0,
		328,
		18,
		16,
		0,
		2,
		12,
		2,
		33,
		125,
		0,
		80,
		921,
		103,
		110,
		18,
		195,
		2637,
		96,
		16,
		1071,
		18,
		5,
		26,
		3994,
		6,
		582,
		6842,
		29,
		1763,
		568,
		8,
		30,
		18,
		78,
		18,
		29,
		19,
		47,
		17,
		3,
		32,
		20,
		6,
		18,
		433,
		44,
		212,
		63,
		129,
		74,
		6,
		0,
		67,
		12,
		65,
		1,
		2,
		0,
		29,
		6135,
		9,
		1237,
		42,
		9,
		8936,
		3,
		2,
		6,
		2,
		1,
		2,
		290,
		16,
		0,
		30,
		2,
		3,
		0,
		15,
		3,
		9,
		395,
		2309,
		106,
		6,
		12,
		4,
		8,
		8,
		9,
		5991,
		84,
		2,
		70,
		2,
		1,
		3,
		0,
		3,
		1,
		3,
		3,
		2,
		11,
		2,
		0,
		2,
		6,
		2,
		64,
		2,
		3,
		3,
		7,
		2,
		6,
		2,
		27,
		2,
		3,
		2,
		4,
		2,
		0,
		4,
		6,
		2,
		339,
		3,
		24,
		2,
		24,
		2,
		30,
		2,
		24,
		2,
		30,
		2,
		24,
		2,
		30,
		2,
		24,
		2,
		30,
		2,
		24,
		2,
		7,
		1845,
		30,
		7,
		5,
		262,
		61,
		147,
		44,
		11,
		6,
		17,
		0,
		322,
		29,
		19,
		43,
		485,
		27,
		229,
		29,
		3,
		0,
		496,
		6,
		2,
		3,
		2,
		1,
		2,
		14,
		2,
		196,
		60,
		67,
		8,
		0,
		1205,
		3,
		2,
		26,
		2,
		1,
		2,
		0,
		3,
		0,
		2,
		9,
		2,
		3,
		2,
		0,
		2,
		0,
		7,
		0,
		5,
		0,
		2,
		0,
		2,
		0,
		2,
		2,
		2,
		1,
		2,
		0,
		3,
		0,
		2,
		0,
		2,
		0,
		2,
		0,
		2,
		0,
		2,
		1,
		2,
		0,
		3,
		3,
		2,
		6,
		2,
		3,
		2,
		3,
		2,
		0,
		2,
		9,
		2,
		16,
		6,
		2,
		2,
		4,
		2,
		16,
		4421,
		42719,
		33,
		4153,
		7,
		221,
		3,
		5761,
		15,
		7472,
		16,
		621,
		2467,
		541,
		1507,
		4938,
		6,
		4191
	], er$3 = [
		509,
		0,
		227,
		0,
		150,
		4,
		294,
		9,
		1368,
		2,
		2,
		1,
		6,
		3,
		41,
		2,
		5,
		0,
		166,
		1,
		574,
		3,
		9,
		9,
		7,
		9,
		32,
		4,
		318,
		1,
		80,
		3,
		71,
		10,
		50,
		3,
		123,
		2,
		54,
		14,
		32,
		10,
		3,
		1,
		11,
		3,
		46,
		10,
		8,
		0,
		46,
		9,
		7,
		2,
		37,
		13,
		2,
		9,
		6,
		1,
		45,
		0,
		13,
		2,
		49,
		13,
		9,
		3,
		2,
		11,
		83,
		11,
		7,
		0,
		3,
		0,
		158,
		11,
		6,
		9,
		7,
		3,
		56,
		1,
		2,
		6,
		3,
		1,
		3,
		2,
		10,
		0,
		11,
		1,
		3,
		6,
		4,
		4,
		68,
		8,
		2,
		0,
		3,
		0,
		2,
		3,
		2,
		4,
		2,
		0,
		15,
		1,
		83,
		17,
		10,
		9,
		5,
		0,
		82,
		19,
		13,
		9,
		214,
		6,
		3,
		8,
		28,
		1,
		83,
		16,
		16,
		9,
		82,
		12,
		9,
		9,
		7,
		19,
		58,
		14,
		5,
		9,
		243,
		14,
		166,
		9,
		71,
		5,
		2,
		1,
		3,
		3,
		2,
		0,
		2,
		1,
		13,
		9,
		120,
		6,
		3,
		6,
		4,
		0,
		29,
		9,
		41,
		6,
		2,
		3,
		9,
		0,
		10,
		10,
		47,
		15,
		343,
		9,
		54,
		7,
		2,
		7,
		17,
		9,
		57,
		21,
		2,
		13,
		123,
		5,
		4,
		0,
		2,
		1,
		2,
		6,
		2,
		0,
		9,
		9,
		49,
		4,
		2,
		1,
		2,
		4,
		9,
		9,
		330,
		3,
		10,
		1,
		2,
		0,
		49,
		6,
		4,
		4,
		14,
		10,
		5350,
		0,
		7,
		14,
		11465,
		27,
		2343,
		9,
		87,
		9,
		39,
		4,
		60,
		6,
		26,
		9,
		535,
		9,
		470,
		0,
		2,
		54,
		8,
		3,
		82,
		0,
		12,
		1,
		19628,
		1,
		4178,
		9,
		519,
		45,
		3,
		22,
		543,
		4,
		4,
		5,
		9,
		7,
		3,
		6,
		31,
		3,
		149,
		2,
		1418,
		49,
		513,
		54,
		5,
		49,
		9,
		0,
		15,
		0,
		23,
		4,
		2,
		14,
		1361,
		6,
		2,
		16,
		3,
		6,
		2,
		1,
		2,
		4,
		101,
		0,
		161,
		6,
		10,
		9,
		357,
		0,
		62,
		13,
		499,
		13,
		245,
		1,
		2,
		9,
		726,
		6,
		110,
		6,
		6,
		9,
		4759,
		9,
		787719,
		239
	];
	function He$7(a$13, t$13) {
		let e$4 = 65536;
		for (let s$8 = 0, i$18 = t$13.length; s$8 < i$18; s$8 += 2) {
			if (e$4 += t$13[s$8], e$4 > a$13) return !1;
			if (e$4 += t$13[s$8 + 1], e$4 >= a$13) return !0;
		}
		return !1;
	}
	function U$4(a$13) {
		return a$13 < 65 ? a$13 === 36 : a$13 <= 90 ? !0 : a$13 < 97 ? a$13 === 95 : a$13 <= 122 ? !0 : a$13 <= 65535 ? a$13 >= 170 && Qi$5.test(String.fromCharCode(a$13)) : He$7(a$13, ws$2);
	}
	function Z$4(a$13) {
		return a$13 < 48 ? a$13 === 36 : a$13 < 58 ? !0 : a$13 < 65 ? !1 : a$13 <= 90 ? !0 : a$13 < 97 ? a$13 === 95 : a$13 <= 122 ? !0 : a$13 <= 65535 ? a$13 >= 170 && Zi$5.test(String.fromCharCode(a$13)) : He$7(a$13, ws$2) || He$7(a$13, er$3);
	}
	var gt$6 = {
		keyword: [
			"break",
			"case",
			"catch",
			"continue",
			"debugger",
			"default",
			"do",
			"else",
			"finally",
			"for",
			"function",
			"if",
			"return",
			"switch",
			"throw",
			"try",
			"var",
			"const",
			"while",
			"with",
			"new",
			"this",
			"super",
			"class",
			"extends",
			"export",
			"import",
			"null",
			"true",
			"false",
			"in",
			"instanceof",
			"typeof",
			"void",
			"delete"
		],
		strict: [
			"implements",
			"interface",
			"let",
			"package",
			"private",
			"protected",
			"public",
			"static",
			"yield"
		],
		strictBind: ["eval", "arguments"]
	}, tr$4 = new Set(gt$6.keyword), sr$5 = new Set(gt$6.strict), ir$5 = new Set(gt$6.strictBind);
	function Is$3(a$13, t$13) {
		return t$13 && a$13 === "await" || a$13 === "enum";
	}
	function Ns$1(a$13, t$13) {
		return Is$3(a$13, t$13) || sr$5.has(a$13);
	}
	function ks$3(a$13) {
		return ir$5.has(a$13);
	}
	function vs$2(a$13, t$13) {
		return Ns$1(a$13, t$13) || ks$3(a$13);
	}
	function rr$5(a$13) {
		return tr$4.has(a$13);
	}
	function ar$5(a$13, t$13, e$4) {
		return a$13 === 64 && t$13 === 64 && U$4(e$4);
	}
	var nr$6 = new Set([
		"break",
		"case",
		"catch",
		"continue",
		"debugger",
		"default",
		"do",
		"else",
		"finally",
		"for",
		"function",
		"if",
		"return",
		"switch",
		"throw",
		"try",
		"var",
		"const",
		"while",
		"with",
		"new",
		"this",
		"super",
		"class",
		"extends",
		"export",
		"import",
		"null",
		"true",
		"false",
		"in",
		"instanceof",
		"typeof",
		"void",
		"delete",
		"implements",
		"interface",
		"let",
		"package",
		"private",
		"protected",
		"public",
		"static",
		"yield",
		"eval",
		"arguments",
		"enum",
		"await"
	]);
	function or$5(a$13) {
		return nr$6.has(a$13);
	}
	var me$5 = class {
		constructor(t$13) {
			this.flags = 0, this.names = /* @__PURE__ */ new Map(), this.firstLexicalName = "", this.flags = t$13;
		}
	}, ye$4 = class {
		constructor(t$13, e$4) {
			this.parser = void 0, this.scopeStack = [], this.inModule = void 0, this.undefinedExports = /* @__PURE__ */ new Map(), this.parser = t$13, this.inModule = e$4;
		}
		get inTopLevel() {
			return (this.currentScope().flags & 1) > 0;
		}
		get inFunction() {
			return (this.currentVarScopeFlags() & 2) > 0;
		}
		get allowSuper() {
			return (this.currentThisScopeFlags() & 16) > 0;
		}
		get allowDirectSuper() {
			return (this.currentThisScopeFlags() & 32) > 0;
		}
		get allowNewTarget() {
			return (this.currentThisScopeFlags() & 512) > 0;
		}
		get inClass() {
			return (this.currentThisScopeFlags() & 64) > 0;
		}
		get inClassAndNotInNonArrowFunction() {
			let t$13 = this.currentThisScopeFlags();
			return (t$13 & 64) > 0 && (t$13 & 2) === 0;
		}
		get inStaticBlock() {
			for (let t$13 = this.scopeStack.length - 1;; t$13--) {
				let { flags: e$4 } = this.scopeStack[t$13];
				if (e$4 & 128) return !0;
				if (e$4 & 1731) return !1;
			}
		}
		get inNonArrowFunction() {
			return (this.currentThisScopeFlags() & 2) > 0;
		}
		get inBareCaseStatement() {
			return (this.currentScope().flags & 256) > 0;
		}
		get treatFunctionsAsVar() {
			return this.treatFunctionsAsVarInScope(this.currentScope());
		}
		createScope(t$13) {
			return new me$5(t$13);
		}
		enter(t$13) {
			this.scopeStack.push(this.createScope(t$13));
		}
		exit() {
			return this.scopeStack.pop().flags;
		}
		treatFunctionsAsVarInScope(t$13) {
			return !!(t$13.flags & 130 || !this.parser.inModule && t$13.flags & 1);
		}
		declareName(t$13, e$4, s$8) {
			let i$18 = this.currentScope();
			if (e$4 & 8 || e$4 & 16) {
				this.checkRedeclarationInScope(i$18, t$13, e$4, s$8);
				let r$12 = i$18.names.get(t$13) || 0;
				e$4 & 16 ? r$12 = r$12 | 4 : (i$18.firstLexicalName || (i$18.firstLexicalName = t$13), r$12 = r$12 | 2), i$18.names.set(t$13, r$12), e$4 & 8 && this.maybeExportDefined(i$18, t$13);
			} else if (e$4 & 4) for (let r$12 = this.scopeStack.length - 1; r$12 >= 0 && (i$18 = this.scopeStack[r$12], this.checkRedeclarationInScope(i$18, t$13, e$4, s$8), i$18.names.set(t$13, (i$18.names.get(t$13) || 0) | 1), this.maybeExportDefined(i$18, t$13), !(i$18.flags & 1667)); --r$12);
			this.parser.inModule && i$18.flags & 1 && this.undefinedExports.delete(t$13);
		}
		maybeExportDefined(t$13, e$4) {
			this.parser.inModule && t$13.flags & 1 && this.undefinedExports.delete(e$4);
		}
		checkRedeclarationInScope(t$13, e$4, s$8, i$18) {
			this.isRedeclaredInScope(t$13, e$4, s$8) && this.parser.raise(p$2.VarRedeclaration, i$18, { identifierName: e$4 });
		}
		isRedeclaredInScope(t$13, e$4, s$8) {
			if (!(s$8 & 1)) return !1;
			if (s$8 & 8) return t$13.names.has(e$4);
			let i$18 = t$13.names.get(e$4);
			return s$8 & 16 ? (i$18 & 2) > 0 || !this.treatFunctionsAsVarInScope(t$13) && (i$18 & 1) > 0 : (i$18 & 2) > 0 && !(t$13.flags & 8 && t$13.firstLexicalName === e$4) || !this.treatFunctionsAsVarInScope(t$13) && (i$18 & 4) > 0;
		}
		checkLocalExport(t$13) {
			let { name: e$4 } = t$13;
			this.scopeStack[0].names.has(e$4) || this.undefinedExports.set(e$4, t$13.loc.start);
		}
		currentScope() {
			return this.scopeStack[this.scopeStack.length - 1];
		}
		currentVarScopeFlags() {
			for (let t$13 = this.scopeStack.length - 1;; t$13--) {
				let { flags: e$4 } = this.scopeStack[t$13];
				if (e$4 & 1667) return e$4;
			}
		}
		currentThisScopeFlags() {
			for (let t$13 = this.scopeStack.length - 1;; t$13--) {
				let { flags: e$4 } = this.scopeStack[t$13];
				if (e$4 & 1731 && !(e$4 & 4)) return e$4;
			}
		}
	}, Ke$4 = class extends me$5 {
		constructor(...t$13) {
			super(...t$13), this.declareFunctions = /* @__PURE__ */ new Set();
		}
	}, We$2 = class extends ye$4 {
		createScope(t$13) {
			return new Ke$4(t$13);
		}
		declareName(t$13, e$4, s$8) {
			let i$18 = this.currentScope();
			if (e$4 & 2048) {
				this.checkRedeclarationInScope(i$18, t$13, e$4, s$8), this.maybeExportDefined(i$18, t$13), i$18.declareFunctions.add(t$13);
				return;
			}
			super.declareName(t$13, e$4, s$8);
		}
		isRedeclaredInScope(t$13, e$4, s$8) {
			if (super.isRedeclaredInScope(t$13, e$4, s$8)) return !0;
			if (s$8 & 2048 && !t$13.declareFunctions.has(e$4)) {
				let i$18 = t$13.names.get(e$4);
				return (i$18 & 4) > 0 || (i$18 & 2) > 0;
			}
			return !1;
		}
		checkLocalExport(t$13) {
			this.scopeStack[0].declareFunctions.has(t$13.name) || super.checkLocalExport(t$13);
		}
	}, lr$5 = new Set([
		"_",
		"any",
		"bool",
		"boolean",
		"empty",
		"extends",
		"false",
		"interface",
		"mixed",
		"null",
		"number",
		"static",
		"string",
		"true",
		"typeof",
		"void"
	]), g$2 = F$4`flow`({
		AmbiguousConditionalArrow: "Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.",
		AmbiguousDeclareModuleKind: "Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.",
		AssignReservedType: ({ reservedType: a$13 }) => `Cannot overwrite reserved type ${a$13}.`,
		DeclareClassElement: "The `declare` modifier can only appear on class fields.",
		DeclareClassFieldInitializer: "Initializers are not allowed in fields with the `declare` modifier.",
		DuplicateDeclareModuleExports: "Duplicate `declare module.exports` statement.",
		EnumBooleanMemberNotInitialized: ({ memberName: a$13, enumName: t$13 }) => `Boolean enum members need to be initialized. Use either \`${a$13} = true,\` or \`${a$13} = false,\` in enum \`${t$13}\`.`,
		EnumDuplicateMemberName: ({ memberName: a$13, enumName: t$13 }) => `Enum member names need to be unique, but the name \`${a$13}\` has already been used before in enum \`${t$13}\`.`,
		EnumInconsistentMemberValues: ({ enumName: a$13 }) => `Enum \`${a$13}\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,
		EnumInvalidExplicitType: ({ invalidEnumType: a$13, enumName: t$13 }) => `Enum type \`${a$13}\` is not valid. Use one of \`boolean\`, \`number\`, \`string\`, or \`symbol\` in enum \`${t$13}\`.`,
		EnumInvalidExplicitTypeUnknownSupplied: ({ enumName: a$13 }) => `Supplied enum type is not valid. Use one of \`boolean\`, \`number\`, \`string\`, or \`symbol\` in enum \`${a$13}\`.`,
		EnumInvalidMemberInitializerPrimaryType: ({ enumName: a$13, memberName: t$13, explicitType: e$4 }) => `Enum \`${a$13}\` has type \`${e$4}\`, so the initializer of \`${t$13}\` needs to be a ${e$4} literal.`,
		EnumInvalidMemberInitializerSymbolType: ({ enumName: a$13, memberName: t$13 }) => `Symbol enum members cannot be initialized. Use \`${t$13},\` in enum \`${a$13}\`.`,
		EnumInvalidMemberInitializerUnknownType: ({ enumName: a$13, memberName: t$13 }) => `The enum member initializer for \`${t$13}\` needs to be a literal (either a boolean, number, or string) in enum \`${a$13}\`.`,
		EnumInvalidMemberName: ({ enumName: a$13, memberName: t$13, suggestion: e$4 }) => `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \`${t$13}\`, consider using \`${e$4}\`, in enum \`${a$13}\`.`,
		EnumNumberMemberNotInitialized: ({ enumName: a$13, memberName: t$13 }) => `Number enum members need to be initialized, e.g. \`${t$13} = 1\` in enum \`${a$13}\`.`,
		EnumStringMemberInconsistentlyInitialized: ({ enumName: a$13 }) => `String enum members need to consistently either all use initializers, or use no initializers, in enum \`${a$13}\`.`,
		GetterMayNotHaveThisParam: "A getter cannot have a `this` parameter.",
		ImportReflectionHasImportType: "An `import module` declaration can not use `type` or `typeof` keyword.",
		ImportTypeShorthandOnlyInPureImport: "The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.",
		InexactInsideExact: "Explicit inexact syntax cannot appear inside an explicit exact object type.",
		InexactInsideNonObject: "Explicit inexact syntax cannot appear in class or interface definitions.",
		InexactVariance: "Explicit inexact syntax cannot have variance.",
		InvalidNonTypeImportInDeclareModule: "Imports within a `declare module` body must always be `import type` or `import typeof`.",
		MissingTypeParamDefault: "Type parameter declaration needs a default, since a preceding type parameter declaration has a default.",
		NestedDeclareModule: "`declare module` cannot be used inside another `declare module`.",
		NestedFlowComment: "Cannot have a flow comment inside another flow comment.",
		PatternIsOptional: Object.assign({ message: "A binding pattern parameter cannot be optional in an implementation signature." }, { reasonCode: "OptionalBindingPattern" }),
		SetterMayNotHaveThisParam: "A setter cannot have a `this` parameter.",
		SpreadVariance: "Spread properties cannot have variance.",
		ThisParamAnnotationRequired: "A type annotation is required for the `this` parameter.",
		ThisParamBannedInConstructor: "Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.",
		ThisParamMayNotBeOptional: "The `this` parameter cannot be optional.",
		ThisParamMustBeFirst: "The `this` parameter must be the first function parameter.",
		ThisParamNoDefault: "The `this` parameter may not have a default value.",
		TypeBeforeInitializer: "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.",
		TypeCastInPattern: "The type cast expression is expected to be wrapped with parenthesis.",
		UnexpectedExplicitInexactInObject: "Explicit inexact syntax must appear at the end of an inexact object.",
		UnexpectedReservedType: ({ reservedType: a$13 }) => `Unexpected reserved type ${a$13}.`,
		UnexpectedReservedUnderscore: "`_` is only allowed as a type argument to call or new.",
		UnexpectedSpaceBetweenModuloChecks: "Spaces between `%` and `checks` are not allowed here.",
		UnexpectedSpreadType: "Spread operator cannot appear in class or interface definitions.",
		UnexpectedSubtractionOperand: "Unexpected token, expected \"number\" or \"bigint\".",
		UnexpectedTokenAfterTypeParameter: "Expected an arrow function after this type parameter declaration.",
		UnexpectedTypeParameterBeforeAsyncArrowFunction: "Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.",
		UnsupportedDeclareExportKind: ({ unsupportedExportKind: a$13, suggestion: t$13 }) => `\`declare export ${a$13}\` is not supported. Use \`${t$13}\` instead.`,
		UnsupportedStatementInDeclareModule: "Only declares and type imports are allowed inside declare module.",
		UnterminatedFlowComment: "Unterminated flow-comment."
	});
	function hr$4(a$13) {
		return a$13.type === "DeclareExportAllDeclaration" || a$13.type === "DeclareExportDeclaration" && (!a$13.declaration || a$13.declaration.type !== "TypeAlias" && a$13.declaration.type !== "InterfaceDeclaration");
	}
	function ds$2(a$13) {
		return a$13.importKind === "type" || a$13.importKind === "typeof";
	}
	var cr$5 = {
		const: "declare export var",
		let: "declare export var",
		type: "export type",
		interface: "export interface"
	};
	function pr$4(a$13, t$13) {
		let e$4 = [], s$8 = [];
		for (let i$18 = 0; i$18 < a$13.length; i$18++) (t$13(a$13[i$18], i$18, a$13) ? e$4 : s$8).push(a$13[i$18]);
		return [e$4, s$8];
	}
	var ur$6 = /\*?\s*@((?:no)?flow)\b/, fr$5 = (a$13) => class extends a$13 {
		constructor(...e$4) {
			super(...e$4), this.flowPragma = void 0;
		}
		getScopeHandler() {
			return We$2;
		}
		shouldParseTypes() {
			return this.getPluginOption("flow", "all") || this.flowPragma === "flow";
		}
		finishToken(e$4, s$8) {
			e$4 !== 134 && e$4 !== 13 && e$4 !== 28 && this.flowPragma === void 0 && (this.flowPragma = null), super.finishToken(e$4, s$8);
		}
		addComment(e$4) {
			if (this.flowPragma === void 0) {
				let s$8 = ur$6.exec(e$4.value);
				if (s$8) if (s$8[1] === "flow") this.flowPragma = "flow";
				else if (s$8[1] === "noflow") this.flowPragma = "noflow";
				else throw new Error("Unexpected flow pragma");
			}
			super.addComment(e$4);
		}
		flowParseTypeInitialiser(e$4) {
			let s$8 = this.state.inType;
			this.state.inType = !0, this.expect(e$4 || 14);
			let i$18 = this.flowParseType();
			return this.state.inType = s$8, i$18;
		}
		flowParsePredicate() {
			let e$4 = this.startNode(), s$8 = this.state.startLoc;
			return this.next(), this.expectContextual(110), this.state.lastTokStartLoc.index > s$8.index + 1 && this.raise(g$2.UnexpectedSpaceBetweenModuloChecks, s$8), this.eat(10) ? (e$4.value = super.parseExpression(), this.expect(11), this.finishNode(e$4, "DeclaredPredicate")) : this.finishNode(e$4, "InferredPredicate");
		}
		flowParseTypeAndPredicateInitialiser() {
			let e$4 = this.state.inType;
			this.state.inType = !0, this.expect(14);
			let s$8 = null, i$18 = null;
			return this.match(54) ? (this.state.inType = e$4, i$18 = this.flowParsePredicate()) : (s$8 = this.flowParseType(), this.state.inType = e$4, this.match(54) && (i$18 = this.flowParsePredicate())), [s$8, i$18];
		}
		flowParseDeclareClass(e$4) {
			return this.next(), this.flowParseInterfaceish(e$4, !0), this.finishNode(e$4, "DeclareClass");
		}
		flowParseDeclareFunction(e$4) {
			this.next();
			let s$8 = e$4.id = this.parseIdentifier(), i$18 = this.startNode(), r$12 = this.startNode();
			this.match(47) ? i$18.typeParameters = this.flowParseTypeParameterDeclaration() : i$18.typeParameters = null, this.expect(10);
			let n$8 = this.flowParseFunctionTypeParams();
			return i$18.params = n$8.params, i$18.rest = n$8.rest, i$18.this = n$8._this, this.expect(11), [i$18.returnType, e$4.predicate] = this.flowParseTypeAndPredicateInitialiser(), r$12.typeAnnotation = this.finishNode(i$18, "FunctionTypeAnnotation"), s$8.typeAnnotation = this.finishNode(r$12, "TypeAnnotation"), this.resetEndLocation(s$8), this.semicolon(), this.scope.declareName(e$4.id.name, 2048, e$4.id.loc.start), this.finishNode(e$4, "DeclareFunction");
		}
		flowParseDeclare(e$4, s$8) {
			if (this.match(80)) return this.flowParseDeclareClass(e$4);
			if (this.match(68)) return this.flowParseDeclareFunction(e$4);
			if (this.match(74)) return this.flowParseDeclareVariable(e$4);
			if (this.eatContextual(127)) return this.match(16) ? this.flowParseDeclareModuleExports(e$4) : (s$8 && this.raise(g$2.NestedDeclareModule, this.state.lastTokStartLoc), this.flowParseDeclareModule(e$4));
			if (this.isContextual(130)) return this.flowParseDeclareTypeAlias(e$4);
			if (this.isContextual(131)) return this.flowParseDeclareOpaqueType(e$4);
			if (this.isContextual(129)) return this.flowParseDeclareInterface(e$4);
			if (this.match(82)) return this.flowParseDeclareExportDeclaration(e$4, s$8);
			this.unexpected();
		}
		flowParseDeclareVariable(e$4) {
			return this.next(), e$4.id = this.flowParseTypeAnnotatableIdentifier(!0), this.scope.declareName(e$4.id.name, 5, e$4.id.loc.start), this.semicolon(), this.finishNode(e$4, "DeclareVariable");
		}
		flowParseDeclareModule(e$4) {
			this.scope.enter(0), this.match(134) ? e$4.id = super.parseExprAtom() : e$4.id = this.parseIdentifier();
			let s$8 = e$4.body = this.startNode(), i$18 = s$8.body = [];
			for (this.expect(5); !this.match(8);) {
				let o$9 = this.startNode();
				this.match(83) ? (this.next(), !this.isContextual(130) && !this.match(87) && this.raise(g$2.InvalidNonTypeImportInDeclareModule, this.state.lastTokStartLoc), super.parseImport(o$9)) : (this.expectContextual(125, g$2.UnsupportedStatementInDeclareModule), o$9 = this.flowParseDeclare(o$9, !0)), i$18.push(o$9);
			}
			this.scope.exit(), this.expect(8), this.finishNode(s$8, "BlockStatement");
			let r$12 = null, n$8 = !1;
			return i$18.forEach((o$9) => {
				hr$4(o$9) ? (r$12 === "CommonJS" && this.raise(g$2.AmbiguousDeclareModuleKind, o$9), r$12 = "ES") : o$9.type === "DeclareModuleExports" && (n$8 && this.raise(g$2.DuplicateDeclareModuleExports, o$9), r$12 === "ES" && this.raise(g$2.AmbiguousDeclareModuleKind, o$9), r$12 = "CommonJS", n$8 = !0);
			}), e$4.kind = r$12 || "CommonJS", this.finishNode(e$4, "DeclareModule");
		}
		flowParseDeclareExportDeclaration(e$4, s$8) {
			if (this.expect(82), this.eat(65)) return this.match(68) || this.match(80) ? e$4.declaration = this.flowParseDeclare(this.startNode()) : (e$4.declaration = this.flowParseType(), this.semicolon()), e$4.default = !0, this.finishNode(e$4, "DeclareExportDeclaration");
			if (this.match(75) || this.isLet() || (this.isContextual(130) || this.isContextual(129)) && !s$8) {
				let i$18 = this.state.value;
				throw this.raise(g$2.UnsupportedDeclareExportKind, this.state.startLoc, {
					unsupportedExportKind: i$18,
					suggestion: cr$5[i$18]
				});
			}
			if (this.match(74) || this.match(68) || this.match(80) || this.isContextual(131)) return e$4.declaration = this.flowParseDeclare(this.startNode()), e$4.default = !1, this.finishNode(e$4, "DeclareExportDeclaration");
			if (this.match(55) || this.match(5) || this.isContextual(129) || this.isContextual(130) || this.isContextual(131)) return e$4 = this.parseExport(e$4, null), e$4.type === "ExportNamedDeclaration" ? (e$4.default = !1, delete e$4.exportKind, this.castNodeTo(e$4, "DeclareExportDeclaration")) : this.castNodeTo(e$4, "DeclareExportAllDeclaration");
			this.unexpected();
		}
		flowParseDeclareModuleExports(e$4) {
			return this.next(), this.expectContextual(111), e$4.typeAnnotation = this.flowParseTypeAnnotation(), this.semicolon(), this.finishNode(e$4, "DeclareModuleExports");
		}
		flowParseDeclareTypeAlias(e$4) {
			this.next();
			let s$8 = this.flowParseTypeAlias(e$4);
			return this.castNodeTo(s$8, "DeclareTypeAlias"), s$8;
		}
		flowParseDeclareOpaqueType(e$4) {
			this.next();
			let s$8 = this.flowParseOpaqueType(e$4, !0);
			return this.castNodeTo(s$8, "DeclareOpaqueType"), s$8;
		}
		flowParseDeclareInterface(e$4) {
			return this.next(), this.flowParseInterfaceish(e$4, !1), this.finishNode(e$4, "DeclareInterface");
		}
		flowParseInterfaceish(e$4, s$8) {
			if (e$4.id = this.flowParseRestrictedIdentifier(!s$8, !0), this.scope.declareName(e$4.id.name, s$8 ? 17 : 8201, e$4.id.loc.start), this.match(47) ? e$4.typeParameters = this.flowParseTypeParameterDeclaration() : e$4.typeParameters = null, e$4.extends = [], this.eat(81)) do
				e$4.extends.push(this.flowParseInterfaceExtends());
			while (!s$8 && this.eat(12));
			if (s$8) {
				if (e$4.implements = [], e$4.mixins = [], this.eatContextual(117)) do
					e$4.mixins.push(this.flowParseInterfaceExtends());
				while (this.eat(12));
				if (this.eatContextual(113)) do
					e$4.implements.push(this.flowParseInterfaceExtends());
				while (this.eat(12));
			}
			e$4.body = this.flowParseObjectType({
				allowStatic: s$8,
				allowExact: !1,
				allowSpread: !1,
				allowProto: s$8,
				allowInexact: !1
			});
		}
		flowParseInterfaceExtends() {
			let e$4 = this.startNode();
			return e$4.id = this.flowParseQualifiedTypeIdentifier(), this.match(47) ? e$4.typeParameters = this.flowParseTypeParameterInstantiation() : e$4.typeParameters = null, this.finishNode(e$4, "InterfaceExtends");
		}
		flowParseInterface(e$4) {
			return this.flowParseInterfaceish(e$4, !1), this.finishNode(e$4, "InterfaceDeclaration");
		}
		checkNotUnderscore(e$4) {
			e$4 === "_" && this.raise(g$2.UnexpectedReservedUnderscore, this.state.startLoc);
		}
		checkReservedType(e$4, s$8, i$18) {
			lr$5.has(e$4) && this.raise(i$18 ? g$2.AssignReservedType : g$2.UnexpectedReservedType, s$8, { reservedType: e$4 });
		}
		flowParseRestrictedIdentifier(e$4, s$8) {
			return this.checkReservedType(this.state.value, this.state.startLoc, s$8), this.parseIdentifier(e$4);
		}
		flowParseTypeAlias(e$4) {
			return e$4.id = this.flowParseRestrictedIdentifier(!1, !0), this.scope.declareName(e$4.id.name, 8201, e$4.id.loc.start), this.match(47) ? e$4.typeParameters = this.flowParseTypeParameterDeclaration() : e$4.typeParameters = null, e$4.right = this.flowParseTypeInitialiser(29), this.semicolon(), this.finishNode(e$4, "TypeAlias");
		}
		flowParseOpaqueType(e$4, s$8) {
			return this.expectContextual(130), e$4.id = this.flowParseRestrictedIdentifier(!0, !0), this.scope.declareName(e$4.id.name, 8201, e$4.id.loc.start), this.match(47) ? e$4.typeParameters = this.flowParseTypeParameterDeclaration() : e$4.typeParameters = null, e$4.supertype = null, this.match(14) && (e$4.supertype = this.flowParseTypeInitialiser(14)), e$4.impltype = null, s$8 || (e$4.impltype = this.flowParseTypeInitialiser(29)), this.semicolon(), this.finishNode(e$4, "OpaqueType");
		}
		flowParseTypeParameter(e$4 = !1) {
			let s$8 = this.state.startLoc, i$18 = this.startNode(), r$12 = this.flowParseVariance(), n$8 = this.flowParseTypeAnnotatableIdentifier();
			return i$18.name = n$8.name, i$18.variance = r$12, i$18.bound = n$8.typeAnnotation, this.match(29) ? (this.eat(29), i$18.default = this.flowParseType()) : e$4 && this.raise(g$2.MissingTypeParamDefault, s$8), this.finishNode(i$18, "TypeParameter");
		}
		flowParseTypeParameterDeclaration() {
			let e$4 = this.state.inType, s$8 = this.startNode();
			s$8.params = [], this.state.inType = !0, this.match(47) || this.match(143) ? this.next() : this.unexpected();
			let i$18 = !1;
			do {
				let r$12 = this.flowParseTypeParameter(i$18);
				s$8.params.push(r$12), r$12.default && (i$18 = !0), this.match(48) || this.expect(12);
			} while (!this.match(48));
			return this.expect(48), this.state.inType = e$4, this.finishNode(s$8, "TypeParameterDeclaration");
		}
		flowInTopLevelContext(e$4) {
			if (this.curContext() !== C$3.brace) {
				let s$8 = this.state.context;
				this.state.context = [s$8[0]];
				try {
					return e$4();
				} finally {
					this.state.context = s$8;
				}
			} else return e$4();
		}
		flowParseTypeParameterInstantiationInExpression() {
			if (this.reScan_lt() === 47) return this.flowParseTypeParameterInstantiation();
		}
		flowParseTypeParameterInstantiation() {
			let e$4 = this.startNode(), s$8 = this.state.inType;
			return this.state.inType = !0, e$4.params = [], this.flowInTopLevelContext(() => {
				this.expect(47);
				let i$18 = this.state.noAnonFunctionType;
				for (this.state.noAnonFunctionType = !1; !this.match(48);) e$4.params.push(this.flowParseType()), this.match(48) || this.expect(12);
				this.state.noAnonFunctionType = i$18;
			}), this.state.inType = s$8, !this.state.inType && this.curContext() === C$3.brace && this.reScan_lt_gt(), this.expect(48), this.finishNode(e$4, "TypeParameterInstantiation");
		}
		flowParseTypeParameterInstantiationCallOrNew() {
			if (this.reScan_lt() !== 47) return;
			let e$4 = this.startNode(), s$8 = this.state.inType;
			for (e$4.params = [], this.state.inType = !0, this.expect(47); !this.match(48);) e$4.params.push(this.flowParseTypeOrImplicitInstantiation()), this.match(48) || this.expect(12);
			return this.expect(48), this.state.inType = s$8, this.finishNode(e$4, "TypeParameterInstantiation");
		}
		flowParseInterfaceType() {
			let e$4 = this.startNode();
			if (this.expectContextual(129), e$4.extends = [], this.eat(81)) do
				e$4.extends.push(this.flowParseInterfaceExtends());
			while (this.eat(12));
			return e$4.body = this.flowParseObjectType({
				allowStatic: !1,
				allowExact: !1,
				allowSpread: !1,
				allowProto: !1,
				allowInexact: !1
			}), this.finishNode(e$4, "InterfaceTypeAnnotation");
		}
		flowParseObjectPropertyKey() {
			return this.match(135) || this.match(134) ? super.parseExprAtom() : this.parseIdentifier(!0);
		}
		flowParseObjectTypeIndexer(e$4, s$8, i$18) {
			return e$4.static = s$8, this.lookahead().type === 14 ? (e$4.id = this.flowParseObjectPropertyKey(), e$4.key = this.flowParseTypeInitialiser()) : (e$4.id = null, e$4.key = this.flowParseType()), this.expect(3), e$4.value = this.flowParseTypeInitialiser(), e$4.variance = i$18, this.finishNode(e$4, "ObjectTypeIndexer");
		}
		flowParseObjectTypeInternalSlot(e$4, s$8) {
			return e$4.static = s$8, e$4.id = this.flowParseObjectPropertyKey(), this.expect(3), this.expect(3), this.match(47) || this.match(10) ? (e$4.method = !0, e$4.optional = !1, e$4.value = this.flowParseObjectTypeMethodish(this.startNodeAt(e$4.loc.start))) : (e$4.method = !1, this.eat(17) && (e$4.optional = !0), e$4.value = this.flowParseTypeInitialiser()), this.finishNode(e$4, "ObjectTypeInternalSlot");
		}
		flowParseObjectTypeMethodish(e$4) {
			for (e$4.params = [], e$4.rest = null, e$4.typeParameters = null, e$4.this = null, this.match(47) && (e$4.typeParameters = this.flowParseTypeParameterDeclaration()), this.expect(10), this.match(78) && (e$4.this = this.flowParseFunctionTypeParam(!0), e$4.this.name = null, this.match(11) || this.expect(12)); !this.match(11) && !this.match(21);) e$4.params.push(this.flowParseFunctionTypeParam(!1)), this.match(11) || this.expect(12);
			return this.eat(21) && (e$4.rest = this.flowParseFunctionTypeParam(!1)), this.expect(11), e$4.returnType = this.flowParseTypeInitialiser(), this.finishNode(e$4, "FunctionTypeAnnotation");
		}
		flowParseObjectTypeCallProperty(e$4, s$8) {
			let i$18 = this.startNode();
			return e$4.static = s$8, e$4.value = this.flowParseObjectTypeMethodish(i$18), this.finishNode(e$4, "ObjectTypeCallProperty");
		}
		flowParseObjectType({ allowStatic: e$4, allowExact: s$8, allowSpread: i$18, allowProto: r$12, allowInexact: n$8 }) {
			let o$9 = this.state.inType;
			this.state.inType = !0;
			let l$10 = this.startNode();
			l$10.callProperties = [], l$10.properties = [], l$10.indexers = [], l$10.internalSlots = [];
			let h$3, c$3, u$14 = !1;
			for (s$8 && this.match(6) ? (this.expect(6), h$3 = 9, c$3 = !0) : (this.expect(5), h$3 = 8, c$3 = !1), l$10.exact = c$3; !this.match(h$3);) {
				let d$14 = !1, x$3 = null, A$3 = null, N$5 = this.startNode();
				if (r$12 && this.isContextual(118)) {
					let I$2 = this.lookahead();
					I$2.type !== 14 && I$2.type !== 17 && (this.next(), x$3 = this.state.startLoc, e$4 = !1);
				}
				if (e$4 && this.isContextual(106)) {
					let I$2 = this.lookahead();
					I$2.type !== 14 && I$2.type !== 17 && (this.next(), d$14 = !0);
				}
				let S$4 = this.flowParseVariance();
				if (this.eat(0)) x$3 != null && this.unexpected(x$3), this.eat(0) ? (S$4 && this.unexpected(S$4.loc.start), l$10.internalSlots.push(this.flowParseObjectTypeInternalSlot(N$5, d$14))) : l$10.indexers.push(this.flowParseObjectTypeIndexer(N$5, d$14, S$4));
				else if (this.match(10) || this.match(47)) x$3 != null && this.unexpected(x$3), S$4 && this.unexpected(S$4.loc.start), l$10.callProperties.push(this.flowParseObjectTypeCallProperty(N$5, d$14));
				else {
					let I$2 = "init";
					if (this.isContextual(99) || this.isContextual(104)) {
						let $$4 = this.lookahead();
						Es$2($$4.type) && (I$2 = this.state.value, this.next());
					}
					let W$2 = this.flowParseObjectTypeProperty(N$5, d$14, x$3, S$4, I$2, i$18, n$8 ?? !c$3);
					W$2 === null ? (u$14 = !0, A$3 = this.state.lastTokStartLoc) : l$10.properties.push(W$2);
				}
				this.flowObjectTypeSemicolon(), A$3 && !this.match(8) && !this.match(9) && this.raise(g$2.UnexpectedExplicitInexactInObject, A$3);
			}
			this.expect(h$3), i$18 && (l$10.inexact = u$14);
			let f$3 = this.finishNode(l$10, "ObjectTypeAnnotation");
			return this.state.inType = o$9, f$3;
		}
		flowParseObjectTypeProperty(e$4, s$8, i$18, r$12, n$8, o$9, l$10) {
			if (this.eat(21)) return this.match(12) || this.match(13) || this.match(8) || this.match(9) ? (o$9 ? l$10 || this.raise(g$2.InexactInsideExact, this.state.lastTokStartLoc) : this.raise(g$2.InexactInsideNonObject, this.state.lastTokStartLoc), r$12 && this.raise(g$2.InexactVariance, r$12), null) : (o$9 || this.raise(g$2.UnexpectedSpreadType, this.state.lastTokStartLoc), i$18 != null && this.unexpected(i$18), r$12 && this.raise(g$2.SpreadVariance, r$12), e$4.argument = this.flowParseType(), this.finishNode(e$4, "ObjectTypeSpreadProperty"));
			{
				e$4.key = this.flowParseObjectPropertyKey(), e$4.static = s$8, e$4.proto = i$18 != null, e$4.kind = n$8;
				let h$3 = !1;
				return this.match(47) || this.match(10) ? (e$4.method = !0, i$18 != null && this.unexpected(i$18), r$12 && this.unexpected(r$12.loc.start), e$4.value = this.flowParseObjectTypeMethodish(this.startNodeAt(e$4.loc.start)), (n$8 === "get" || n$8 === "set") && this.flowCheckGetterSetterParams(e$4), !o$9 && e$4.key.name === "constructor" && e$4.value.this && this.raise(g$2.ThisParamBannedInConstructor, e$4.value.this)) : (n$8 !== "init" && this.unexpected(), e$4.method = !1, this.eat(17) && (h$3 = !0), e$4.value = this.flowParseTypeInitialiser(), e$4.variance = r$12), e$4.optional = h$3, this.finishNode(e$4, "ObjectTypeProperty");
			}
		}
		flowCheckGetterSetterParams(e$4) {
			let s$8 = e$4.kind === "get" ? 0 : 1, i$18 = e$4.value.params.length + (e$4.value.rest ? 1 : 0);
			e$4.value.this && this.raise(e$4.kind === "get" ? g$2.GetterMayNotHaveThisParam : g$2.SetterMayNotHaveThisParam, e$4.value.this), i$18 !== s$8 && this.raise(e$4.kind === "get" ? p$2.BadGetterArity : p$2.BadSetterArity, e$4), e$4.kind === "set" && e$4.value.rest && this.raise(p$2.BadSetterRestParameter, e$4);
		}
		flowObjectTypeSemicolon() {
			!this.eat(13) && !this.eat(12) && !this.match(8) && !this.match(9) && this.unexpected();
		}
		flowParseQualifiedTypeIdentifier(e$4, s$8) {
			e$4 ?? (e$4 = this.state.startLoc);
			let i$18 = s$8 || this.flowParseRestrictedIdentifier(!0);
			for (; this.eat(16);) {
				let r$12 = this.startNodeAt(e$4);
				r$12.qualification = i$18, r$12.id = this.flowParseRestrictedIdentifier(!0), i$18 = this.finishNode(r$12, "QualifiedTypeIdentifier");
			}
			return i$18;
		}
		flowParseGenericType(e$4, s$8) {
			let i$18 = this.startNodeAt(e$4);
			return i$18.typeParameters = null, i$18.id = this.flowParseQualifiedTypeIdentifier(e$4, s$8), this.match(47) && (i$18.typeParameters = this.flowParseTypeParameterInstantiation()), this.finishNode(i$18, "GenericTypeAnnotation");
		}
		flowParseTypeofType() {
			let e$4 = this.startNode();
			return this.expect(87), e$4.argument = this.flowParsePrimaryType(), this.finishNode(e$4, "TypeofTypeAnnotation");
		}
		flowParseTupleType() {
			let e$4 = this.startNode();
			for (e$4.types = [], this.expect(0); this.state.pos < this.length && !this.match(3) && (e$4.types.push(this.flowParseType()), !this.match(3));) this.expect(12);
			return this.expect(3), this.finishNode(e$4, "TupleTypeAnnotation");
		}
		flowParseFunctionTypeParam(e$4) {
			let s$8 = null, i$18 = !1, r$12 = null, n$8 = this.startNode(), o$9 = this.lookahead(), l$10 = this.state.type === 78;
			return o$9.type === 14 || o$9.type === 17 ? (l$10 && !e$4 && this.raise(g$2.ThisParamMustBeFirst, n$8), s$8 = this.parseIdentifier(l$10), this.eat(17) && (i$18 = !0, l$10 && this.raise(g$2.ThisParamMayNotBeOptional, n$8)), r$12 = this.flowParseTypeInitialiser()) : r$12 = this.flowParseType(), n$8.name = s$8, n$8.optional = i$18, n$8.typeAnnotation = r$12, this.finishNode(n$8, "FunctionTypeParam");
		}
		reinterpretTypeAsFunctionTypeParam(e$4) {
			let s$8 = this.startNodeAt(e$4.loc.start);
			return s$8.name = null, s$8.optional = !1, s$8.typeAnnotation = e$4, this.finishNode(s$8, "FunctionTypeParam");
		}
		flowParseFunctionTypeParams(e$4 = []) {
			let s$8 = null, i$18 = null;
			for (this.match(78) && (i$18 = this.flowParseFunctionTypeParam(!0), i$18.name = null, this.match(11) || this.expect(12)); !this.match(11) && !this.match(21);) e$4.push(this.flowParseFunctionTypeParam(!1)), this.match(11) || this.expect(12);
			return this.eat(21) && (s$8 = this.flowParseFunctionTypeParam(!1)), {
				params: e$4,
				rest: s$8,
				_this: i$18
			};
		}
		flowIdentToTypeAnnotation(e$4, s$8, i$18) {
			switch (i$18.name) {
				case "any": return this.finishNode(s$8, "AnyTypeAnnotation");
				case "bool":
				case "boolean": return this.finishNode(s$8, "BooleanTypeAnnotation");
				case "mixed": return this.finishNode(s$8, "MixedTypeAnnotation");
				case "empty": return this.finishNode(s$8, "EmptyTypeAnnotation");
				case "number": return this.finishNode(s$8, "NumberTypeAnnotation");
				case "string": return this.finishNode(s$8, "StringTypeAnnotation");
				case "symbol": return this.finishNode(s$8, "SymbolTypeAnnotation");
				default: return this.checkNotUnderscore(i$18.name), this.flowParseGenericType(e$4, i$18);
			}
		}
		flowParsePrimaryType() {
			let e$4 = this.state.startLoc, s$8 = this.startNode(), i$18, r$12, n$8 = !1, o$9 = this.state.noAnonFunctionType;
			switch (this.state.type) {
				case 5: return this.flowParseObjectType({
					allowStatic: !1,
					allowExact: !1,
					allowSpread: !0,
					allowProto: !1,
					allowInexact: !0
				});
				case 6: return this.flowParseObjectType({
					allowStatic: !1,
					allowExact: !0,
					allowSpread: !0,
					allowProto: !1,
					allowInexact: !1
				});
				case 0: return this.state.noAnonFunctionType = !1, r$12 = this.flowParseTupleType(), this.state.noAnonFunctionType = o$9, r$12;
				case 47: {
					let l$10 = this.startNode();
					return l$10.typeParameters = this.flowParseTypeParameterDeclaration(), this.expect(10), i$18 = this.flowParseFunctionTypeParams(), l$10.params = i$18.params, l$10.rest = i$18.rest, l$10.this = i$18._this, this.expect(11), this.expect(19), l$10.returnType = this.flowParseType(), this.finishNode(l$10, "FunctionTypeAnnotation");
				}
				case 10: {
					let l$10 = this.startNode();
					if (this.next(), !this.match(11) && !this.match(21)) if (w$3(this.state.type) || this.match(78)) {
						let h$3 = this.lookahead().type;
						n$8 = h$3 !== 17 && h$3 !== 14;
					} else n$8 = !0;
					if (n$8) {
						if (this.state.noAnonFunctionType = !1, r$12 = this.flowParseType(), this.state.noAnonFunctionType = o$9, this.state.noAnonFunctionType || !(this.match(12) || this.match(11) && this.lookahead().type === 19)) return this.expect(11), r$12;
						this.eat(12);
					}
					return r$12 ? i$18 = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(r$12)]) : i$18 = this.flowParseFunctionTypeParams(), l$10.params = i$18.params, l$10.rest = i$18.rest, l$10.this = i$18._this, this.expect(11), this.expect(19), l$10.returnType = this.flowParseType(), l$10.typeParameters = null, this.finishNode(l$10, "FunctionTypeAnnotation");
				}
				case 134: return this.parseLiteral(this.state.value, "StringLiteralTypeAnnotation");
				case 85:
				case 86: return s$8.value = this.match(85), this.next(), this.finishNode(s$8, "BooleanLiteralTypeAnnotation");
				case 53:
					if (this.state.value === "-") {
						if (this.next(), this.match(135)) return this.parseLiteralAtNode(-this.state.value, "NumberLiteralTypeAnnotation", s$8);
						if (this.match(136)) return this.parseLiteralAtNode(-this.state.value, "BigIntLiteralTypeAnnotation", s$8);
						throw this.raise(g$2.UnexpectedSubtractionOperand, this.state.startLoc);
					}
					this.unexpected();
					return;
				case 135: return this.parseLiteral(this.state.value, "NumberLiteralTypeAnnotation");
				case 136: return this.parseLiteral(this.state.value, "BigIntLiteralTypeAnnotation");
				case 88: return this.next(), this.finishNode(s$8, "VoidTypeAnnotation");
				case 84: return this.next(), this.finishNode(s$8, "NullLiteralTypeAnnotation");
				case 78: return this.next(), this.finishNode(s$8, "ThisTypeAnnotation");
				case 55: return this.next(), this.finishNode(s$8, "ExistsTypeAnnotation");
				case 87: return this.flowParseTypeofType();
				default: if (xt$4(this.state.type)) {
					let l$10 = H$6(this.state.type);
					return this.next(), super.createIdentifier(s$8, l$10);
				} else if (w$3(this.state.type)) return this.isContextual(129) ? this.flowParseInterfaceType() : this.flowIdentToTypeAnnotation(e$4, s$8, this.parseIdentifier());
			}
			this.unexpected();
		}
		flowParsePostfixType() {
			let e$4 = this.state.startLoc, s$8 = this.flowParsePrimaryType(), i$18 = !1;
			for (; (this.match(0) || this.match(18)) && !this.canInsertSemicolon();) {
				let r$12 = this.startNodeAt(e$4), n$8 = this.eat(18);
				i$18 = i$18 || n$8, this.expect(0), !n$8 && this.match(3) ? (r$12.elementType = s$8, this.next(), s$8 = this.finishNode(r$12, "ArrayTypeAnnotation")) : (r$12.objectType = s$8, r$12.indexType = this.flowParseType(), this.expect(3), i$18 ? (r$12.optional = n$8, s$8 = this.finishNode(r$12, "OptionalIndexedAccessType")) : s$8 = this.finishNode(r$12, "IndexedAccessType"));
			}
			return s$8;
		}
		flowParsePrefixType() {
			let e$4 = this.startNode();
			return this.eat(17) ? (e$4.typeAnnotation = this.flowParsePrefixType(), this.finishNode(e$4, "NullableTypeAnnotation")) : this.flowParsePostfixType();
		}
		flowParseAnonFunctionWithoutParens() {
			let e$4 = this.flowParsePrefixType();
			if (!this.state.noAnonFunctionType && this.eat(19)) {
				let s$8 = this.startNodeAt(e$4.loc.start);
				return s$8.params = [this.reinterpretTypeAsFunctionTypeParam(e$4)], s$8.rest = null, s$8.this = null, s$8.returnType = this.flowParseType(), s$8.typeParameters = null, this.finishNode(s$8, "FunctionTypeAnnotation");
			}
			return e$4;
		}
		flowParseIntersectionType() {
			let e$4 = this.startNode();
			this.eat(45);
			let s$8 = this.flowParseAnonFunctionWithoutParens();
			for (e$4.types = [s$8]; this.eat(45);) e$4.types.push(this.flowParseAnonFunctionWithoutParens());
			return e$4.types.length === 1 ? s$8 : this.finishNode(e$4, "IntersectionTypeAnnotation");
		}
		flowParseUnionType() {
			let e$4 = this.startNode();
			this.eat(43);
			let s$8 = this.flowParseIntersectionType();
			for (e$4.types = [s$8]; this.eat(43);) e$4.types.push(this.flowParseIntersectionType());
			return e$4.types.length === 1 ? s$8 : this.finishNode(e$4, "UnionTypeAnnotation");
		}
		flowParseType() {
			let e$4 = this.state.inType;
			this.state.inType = !0;
			let s$8 = this.flowParseUnionType();
			return this.state.inType = e$4, s$8;
		}
		flowParseTypeOrImplicitInstantiation() {
			if (this.state.type === 132 && this.state.value === "_") {
				let e$4 = this.state.startLoc, s$8 = this.parseIdentifier();
				return this.flowParseGenericType(e$4, s$8);
			} else return this.flowParseType();
		}
		flowParseTypeAnnotation() {
			let e$4 = this.startNode();
			return e$4.typeAnnotation = this.flowParseTypeInitialiser(), this.finishNode(e$4, "TypeAnnotation");
		}
		flowParseTypeAnnotatableIdentifier(e$4) {
			let s$8 = e$4 ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();
			return this.match(14) && (s$8.typeAnnotation = this.flowParseTypeAnnotation(), this.resetEndLocation(s$8)), s$8;
		}
		typeCastToParameter(e$4) {
			return e$4.expression.typeAnnotation = e$4.typeAnnotation, this.resetEndLocation(e$4.expression, e$4.typeAnnotation.loc.end), e$4.expression;
		}
		flowParseVariance() {
			let e$4 = null;
			return this.match(53) ? (e$4 = this.startNode(), this.state.value === "+" ? e$4.kind = "plus" : e$4.kind = "minus", this.next(), this.finishNode(e$4, "Variance")) : e$4;
		}
		parseFunctionBody(e$4, s$8, i$18 = !1) {
			if (s$8) {
				this.forwardNoArrowParamsConversionAt(e$4, () => super.parseFunctionBody(e$4, !0, i$18));
				return;
			}
			super.parseFunctionBody(e$4, !1, i$18);
		}
		parseFunctionBodyAndFinish(e$4, s$8, i$18 = !1) {
			if (this.match(14)) {
				let r$12 = this.startNode();
				[r$12.typeAnnotation, e$4.predicate] = this.flowParseTypeAndPredicateInitialiser(), e$4.returnType = r$12.typeAnnotation ? this.finishNode(r$12, "TypeAnnotation") : null;
			}
			return super.parseFunctionBodyAndFinish(e$4, s$8, i$18);
		}
		parseStatementLike(e$4) {
			if (this.state.strict && this.isContextual(129)) {
				let i$18 = this.lookahead();
				if (M$2(i$18.type)) {
					let r$12 = this.startNode();
					return this.next(), this.flowParseInterface(r$12);
				}
			} else if (this.isContextual(126)) {
				let i$18 = this.startNode();
				return this.next(), this.flowParseEnumDeclaration(i$18);
			}
			let s$8 = super.parseStatementLike(e$4);
			return this.flowPragma === void 0 && !this.isValidDirective(s$8) && (this.flowPragma = null), s$8;
		}
		parseExpressionStatement(e$4, s$8, i$18) {
			if (s$8.type === "Identifier") {
				if (s$8.name === "declare") {
					if (this.match(80) || w$3(this.state.type) || this.match(68) || this.match(74) || this.match(82)) return this.flowParseDeclare(e$4);
				} else if (w$3(this.state.type)) {
					if (s$8.name === "interface") return this.flowParseInterface(e$4);
					if (s$8.name === "type") return this.flowParseTypeAlias(e$4);
					if (s$8.name === "opaque") return this.flowParseOpaqueType(e$4, !1);
				}
			}
			return super.parseExpressionStatement(e$4, s$8, i$18);
		}
		shouldParseExportDeclaration() {
			let { type: e$4 } = this.state;
			return e$4 === 126 || fs$3(e$4) ? !this.state.containsEsc : super.shouldParseExportDeclaration();
		}
		isExportDefaultSpecifier() {
			let { type: e$4 } = this.state;
			return e$4 === 126 || fs$3(e$4) ? this.state.containsEsc : super.isExportDefaultSpecifier();
		}
		parseExportDefaultExpression() {
			if (this.isContextual(126)) {
				let e$4 = this.startNode();
				return this.next(), this.flowParseEnumDeclaration(e$4);
			}
			return super.parseExportDefaultExpression();
		}
		parseConditional(e$4, s$8, i$18) {
			if (!this.match(17)) return e$4;
			if (this.state.maybeInArrowParameters) {
				let f$3 = this.lookaheadCharCode();
				if (f$3 === 44 || f$3 === 61 || f$3 === 58 || f$3 === 41) return this.setOptionalParametersError(i$18), e$4;
			}
			this.expect(17);
			let r$12 = this.state.clone(), n$8 = this.state.noArrowAt, o$9 = this.startNodeAt(s$8), { consequent: l$10, failed: h$3 } = this.tryParseConditionalConsequent(), [c$3, u$14] = this.getArrowLikeExpressions(l$10);
			if (h$3 || u$14.length > 0) {
				let f$3 = [...n$8];
				if (u$14.length > 0) {
					this.state = r$12, this.state.noArrowAt = f$3;
					for (let d$14 = 0; d$14 < u$14.length; d$14++) f$3.push(u$14[d$14].start);
					({consequent: l$10, failed: h$3} = this.tryParseConditionalConsequent()), [c$3, u$14] = this.getArrowLikeExpressions(l$10);
				}
				h$3 && c$3.length > 1 && this.raise(g$2.AmbiguousConditionalArrow, r$12.startLoc), h$3 && c$3.length === 1 && (this.state = r$12, f$3.push(c$3[0].start), this.state.noArrowAt = f$3, {consequent: l$10, failed: h$3} = this.tryParseConditionalConsequent());
			}
			return this.getArrowLikeExpressions(l$10, !0), this.state.noArrowAt = n$8, this.expect(14), o$9.test = e$4, o$9.consequent = l$10, o$9.alternate = this.forwardNoArrowParamsConversionAt(o$9, () => this.parseMaybeAssign(void 0, void 0)), this.finishNode(o$9, "ConditionalExpression");
		}
		tryParseConditionalConsequent() {
			this.state.noArrowParamsConversionAt.push(this.state.start);
			let e$4 = this.parseMaybeAssignAllowIn(), s$8 = !this.match(14);
			return this.state.noArrowParamsConversionAt.pop(), {
				consequent: e$4,
				failed: s$8
			};
		}
		getArrowLikeExpressions(e$4, s$8) {
			let i$18 = [e$4], r$12 = [];
			for (; i$18.length !== 0;) {
				let n$8 = i$18.pop();
				n$8.type === "ArrowFunctionExpression" && n$8.body.type !== "BlockStatement" ? (n$8.typeParameters || !n$8.returnType ? this.finishArrowValidation(n$8) : r$12.push(n$8), i$18.push(n$8.body)) : n$8.type === "ConditionalExpression" && (i$18.push(n$8.consequent), i$18.push(n$8.alternate));
			}
			return s$8 ? (r$12.forEach((n$8) => this.finishArrowValidation(n$8)), [r$12, []]) : pr$4(r$12, (n$8) => n$8.params.every((o$9) => this.isAssignable(o$9, !0)));
		}
		finishArrowValidation(e$4) {
			var s$8;
			this.toAssignableList(e$4.params, (s$8 = e$4.extra) == null ? void 0 : s$8.trailingCommaLoc, !1), this.scope.enter(518), super.checkParams(e$4, !1, !0), this.scope.exit();
		}
		forwardNoArrowParamsConversionAt(e$4, s$8) {
			let i$18;
			return this.state.noArrowParamsConversionAt.includes(this.offsetToSourcePos(e$4.start)) ? (this.state.noArrowParamsConversionAt.push(this.state.start), i$18 = s$8(), this.state.noArrowParamsConversionAt.pop()) : i$18 = s$8(), i$18;
		}
		parseParenItem(e$4, s$8) {
			let i$18 = super.parseParenItem(e$4, s$8);
			if (this.eat(17) && (i$18.optional = !0, this.resetEndLocation(e$4)), this.match(14)) {
				let r$12 = this.startNodeAt(s$8);
				return r$12.expression = i$18, r$12.typeAnnotation = this.flowParseTypeAnnotation(), this.finishNode(r$12, "TypeCastExpression");
			}
			return i$18;
		}
		assertModuleNodeAllowed(e$4) {
			e$4.type === "ImportDeclaration" && (e$4.importKind === "type" || e$4.importKind === "typeof") || e$4.type === "ExportNamedDeclaration" && e$4.exportKind === "type" || e$4.type === "ExportAllDeclaration" && e$4.exportKind === "type" || super.assertModuleNodeAllowed(e$4);
		}
		parseExportDeclaration(e$4) {
			if (this.isContextual(130)) {
				e$4.exportKind = "type";
				let s$8 = this.startNode();
				return this.next(), this.match(5) ? (e$4.specifiers = this.parseExportSpecifiers(!0), super.parseExportFrom(e$4), null) : this.flowParseTypeAlias(s$8);
			} else if (this.isContextual(131)) {
				e$4.exportKind = "type";
				let s$8 = this.startNode();
				return this.next(), this.flowParseOpaqueType(s$8, !1);
			} else if (this.isContextual(129)) {
				e$4.exportKind = "type";
				let s$8 = this.startNode();
				return this.next(), this.flowParseInterface(s$8);
			} else if (this.isContextual(126)) {
				e$4.exportKind = "value";
				let s$8 = this.startNode();
				return this.next(), this.flowParseEnumDeclaration(s$8);
			} else return super.parseExportDeclaration(e$4);
		}
		eatExportStar(e$4) {
			return super.eatExportStar(e$4) ? !0 : this.isContextual(130) && this.lookahead().type === 55 ? (e$4.exportKind = "type", this.next(), this.next(), !0) : !1;
		}
		maybeParseExportNamespaceSpecifier(e$4) {
			let { startLoc: s$8 } = this.state, i$18 = super.maybeParseExportNamespaceSpecifier(e$4);
			return i$18 && e$4.exportKind === "type" && this.unexpected(s$8), i$18;
		}
		parseClassId(e$4, s$8, i$18) {
			super.parseClassId(e$4, s$8, i$18), this.match(47) && (e$4.typeParameters = this.flowParseTypeParameterDeclaration());
		}
		parseClassMember(e$4, s$8, i$18) {
			let { startLoc: r$12 } = this.state;
			if (this.isContextual(125)) {
				if (super.parseClassMemberFromModifier(e$4, s$8)) return;
				s$8.declare = !0;
			}
			super.parseClassMember(e$4, s$8, i$18), s$8.declare && (s$8.type !== "ClassProperty" && s$8.type !== "ClassPrivateProperty" && s$8.type !== "PropertyDefinition" ? this.raise(g$2.DeclareClassElement, r$12) : s$8.value && this.raise(g$2.DeclareClassFieldInitializer, s$8.value));
		}
		isIterator(e$4) {
			return e$4 === "iterator" || e$4 === "asyncIterator";
		}
		readIterator() {
			let e$4 = super.readWord1(), s$8 = "@@" + e$4;
			(!this.isIterator(e$4) || !this.state.inType) && this.raise(p$2.InvalidIdentifier, this.state.curPosition(), { identifierName: s$8 }), this.finishToken(132, s$8);
		}
		getTokenFromCode(e$4) {
			let s$8 = this.input.charCodeAt(this.state.pos + 1);
			e$4 === 123 && s$8 === 124 ? this.finishOp(6, 2) : this.state.inType && (e$4 === 62 || e$4 === 60) ? this.finishOp(e$4 === 62 ? 48 : 47, 1) : this.state.inType && e$4 === 63 ? s$8 === 46 ? this.finishOp(18, 2) : this.finishOp(17, 1) : ar$5(e$4, s$8, this.input.charCodeAt(this.state.pos + 2)) ? (this.state.pos += 2, this.readIterator()) : super.getTokenFromCode(e$4);
		}
		isAssignable(e$4, s$8) {
			return e$4.type === "TypeCastExpression" ? this.isAssignable(e$4.expression, s$8) : super.isAssignable(e$4, s$8);
		}
		toAssignable(e$4, s$8 = !1) {
			!s$8 && e$4.type === "AssignmentExpression" && e$4.left.type === "TypeCastExpression" && (e$4.left = this.typeCastToParameter(e$4.left)), super.toAssignable(e$4, s$8);
		}
		toAssignableList(e$4, s$8, i$18) {
			for (let r$12 = 0; r$12 < e$4.length; r$12++) {
				let n$8 = e$4[r$12];
				(n$8 == null ? void 0 : n$8.type) === "TypeCastExpression" && (e$4[r$12] = this.typeCastToParameter(n$8));
			}
			super.toAssignableList(e$4, s$8, i$18);
		}
		toReferencedList(e$4, s$8) {
			for (let r$12 = 0; r$12 < e$4.length; r$12++) {
				var i$18;
				let n$8 = e$4[r$12];
				n$8 && n$8.type === "TypeCastExpression" && !((i$18 = n$8.extra) != null && i$18.parenthesized) && (e$4.length > 1 || !s$8) && this.raise(g$2.TypeCastInPattern, n$8.typeAnnotation);
			}
			return e$4;
		}
		parseArrayLike(e$4, s$8, i$18, r$12) {
			let n$8 = super.parseArrayLike(e$4, s$8, i$18, r$12);
			return s$8 && !this.state.maybeInArrowParameters && this.toReferencedList(n$8.elements), n$8;
		}
		isValidLVal(e$4, s$8, i$18) {
			return e$4 === "TypeCastExpression" || super.isValidLVal(e$4, s$8, i$18);
		}
		parseClassProperty(e$4) {
			return this.match(14) && (e$4.typeAnnotation = this.flowParseTypeAnnotation()), super.parseClassProperty(e$4);
		}
		parseClassPrivateProperty(e$4) {
			return this.match(14) && (e$4.typeAnnotation = this.flowParseTypeAnnotation()), super.parseClassPrivateProperty(e$4);
		}
		isClassMethod() {
			return this.match(47) || super.isClassMethod();
		}
		isClassProperty() {
			return this.match(14) || super.isClassProperty();
		}
		isNonstaticConstructor(e$4) {
			return !this.match(14) && super.isNonstaticConstructor(e$4);
		}
		pushClassMethod(e$4, s$8, i$18, r$12, n$8, o$9) {
			if (s$8.variance && this.unexpected(s$8.variance.loc.start), delete s$8.variance, this.match(47) && (s$8.typeParameters = this.flowParseTypeParameterDeclaration()), super.pushClassMethod(e$4, s$8, i$18, r$12, n$8, o$9), s$8.params && n$8) {
				let l$10 = s$8.params;
				l$10.length > 0 && this.isThisParam(l$10[0]) && this.raise(g$2.ThisParamBannedInConstructor, s$8);
			} else if (s$8.type === "MethodDefinition" && n$8 && s$8.value.params) {
				let l$10 = s$8.value.params;
				l$10.length > 0 && this.isThisParam(l$10[0]) && this.raise(g$2.ThisParamBannedInConstructor, s$8);
			}
		}
		pushClassPrivateMethod(e$4, s$8, i$18, r$12) {
			s$8.variance && this.unexpected(s$8.variance.loc.start), delete s$8.variance, this.match(47) && (s$8.typeParameters = this.flowParseTypeParameterDeclaration()), super.pushClassPrivateMethod(e$4, s$8, i$18, r$12);
		}
		parseClassSuper(e$4) {
			if (super.parseClassSuper(e$4), e$4.superClass && (this.match(47) || this.match(51)) && (e$4.superTypeParameters = this.flowParseTypeParameterInstantiationInExpression()), this.isContextual(113)) {
				this.next();
				let s$8 = e$4.implements = [];
				do {
					let i$18 = this.startNode();
					i$18.id = this.flowParseRestrictedIdentifier(!0), this.match(47) ? i$18.typeParameters = this.flowParseTypeParameterInstantiation() : i$18.typeParameters = null, s$8.push(this.finishNode(i$18, "ClassImplements"));
				} while (this.eat(12));
			}
		}
		checkGetterSetterParams(e$4) {
			super.checkGetterSetterParams(e$4);
			let s$8 = this.getObjectOrClassMethodParams(e$4);
			if (s$8.length > 0) {
				let i$18 = s$8[0];
				this.isThisParam(i$18) && e$4.kind === "get" ? this.raise(g$2.GetterMayNotHaveThisParam, i$18) : this.isThisParam(i$18) && this.raise(g$2.SetterMayNotHaveThisParam, i$18);
			}
		}
		parsePropertyNamePrefixOperator(e$4) {
			e$4.variance = this.flowParseVariance();
		}
		parseObjPropValue(e$4, s$8, i$18, r$12, n$8, o$9, l$10) {
			e$4.variance && this.unexpected(e$4.variance.loc.start), delete e$4.variance;
			let h$3;
			this.match(47) && !o$9 && (h$3 = this.flowParseTypeParameterDeclaration(), this.match(10) || this.unexpected());
			let c$3 = super.parseObjPropValue(e$4, s$8, i$18, r$12, n$8, o$9, l$10);
			return h$3 && ((c$3.value || c$3).typeParameters = h$3), c$3;
		}
		parseFunctionParamType(e$4) {
			return this.eat(17) && (e$4.type !== "Identifier" && this.raise(g$2.PatternIsOptional, e$4), this.isThisParam(e$4) && this.raise(g$2.ThisParamMayNotBeOptional, e$4), e$4.optional = !0), this.match(14) ? e$4.typeAnnotation = this.flowParseTypeAnnotation() : this.isThisParam(e$4) && this.raise(g$2.ThisParamAnnotationRequired, e$4), this.match(29) && this.isThisParam(e$4) && this.raise(g$2.ThisParamNoDefault, e$4), this.resetEndLocation(e$4), e$4;
		}
		parseMaybeDefault(e$4, s$8) {
			let i$18 = super.parseMaybeDefault(e$4, s$8);
			return i$18.type === "AssignmentPattern" && i$18.typeAnnotation && i$18.right.start < i$18.typeAnnotation.start && this.raise(g$2.TypeBeforeInitializer, i$18.typeAnnotation), i$18;
		}
		checkImportReflection(e$4) {
			super.checkImportReflection(e$4), e$4.module && e$4.importKind !== "value" && this.raise(g$2.ImportReflectionHasImportType, e$4.specifiers[0].loc.start);
		}
		parseImportSpecifierLocal(e$4, s$8, i$18) {
			s$8.local = ds$2(e$4) ? this.flowParseRestrictedIdentifier(!0, !0) : this.parseIdentifier(), e$4.specifiers.push(this.finishImportSpecifier(s$8, i$18));
		}
		isPotentialImportPhase(e$4) {
			if (super.isPotentialImportPhase(e$4)) return !0;
			if (this.isContextual(130)) {
				if (!e$4) return !0;
				let s$8 = this.lookaheadCharCode();
				return s$8 === 123 || s$8 === 42;
			}
			return !e$4 && this.isContextual(87);
		}
		applyImportPhase(e$4, s$8, i$18, r$12) {
			if (super.applyImportPhase(e$4, s$8, i$18, r$12), s$8) {
				if (!i$18 && this.match(65)) return;
				e$4.exportKind = i$18 === "type" ? i$18 : "value";
			} else i$18 === "type" && this.match(55) && this.unexpected(), e$4.importKind = i$18 === "type" || i$18 === "typeof" ? i$18 : "value";
		}
		parseImportSpecifier(e$4, s$8, i$18, r$12, n$8) {
			let o$9 = e$4.imported, l$10 = null;
			o$9.type === "Identifier" && (o$9.name === "type" ? l$10 = "type" : o$9.name === "typeof" && (l$10 = "typeof"));
			let h$3 = !1;
			if (this.isContextual(93) && !this.isLookaheadContextual("as")) {
				let u$14 = this.parseIdentifier(!0);
				l$10 !== null && !M$2(this.state.type) ? (e$4.imported = u$14, e$4.importKind = l$10, e$4.local = this.cloneIdentifier(u$14)) : (e$4.imported = o$9, e$4.importKind = null, e$4.local = this.parseIdentifier());
			} else {
				if (l$10 !== null && M$2(this.state.type)) e$4.imported = this.parseIdentifier(!0), e$4.importKind = l$10;
				else {
					if (s$8) throw this.raise(p$2.ImportBindingIsString, e$4, { importName: o$9.value });
					e$4.imported = o$9, e$4.importKind = null;
				}
				this.eatContextual(93) ? e$4.local = this.parseIdentifier() : (h$3 = !0, e$4.local = this.cloneIdentifier(e$4.imported));
			}
			let c$3 = ds$2(e$4);
			return i$18 && c$3 && this.raise(g$2.ImportTypeShorthandOnlyInPureImport, e$4), (i$18 || c$3) && this.checkReservedType(e$4.local.name, e$4.local.loc.start, !0), h$3 && !i$18 && !c$3 && this.checkReservedWord(e$4.local.name, e$4.loc.start, !0, !0), this.finishImportSpecifier(e$4, "ImportSpecifier");
		}
		parseBindingAtom() {
			switch (this.state.type) {
				case 78: return this.parseIdentifier(!0);
				default: return super.parseBindingAtom();
			}
		}
		parseFunctionParams(e$4, s$8) {
			let i$18 = e$4.kind;
			i$18 !== "get" && i$18 !== "set" && this.match(47) && (e$4.typeParameters = this.flowParseTypeParameterDeclaration()), super.parseFunctionParams(e$4, s$8);
		}
		parseVarId(e$4, s$8) {
			super.parseVarId(e$4, s$8), this.match(14) && (e$4.id.typeAnnotation = this.flowParseTypeAnnotation(), this.resetEndLocation(e$4.id));
		}
		parseAsyncArrowFromCallExpression(e$4, s$8) {
			if (this.match(14)) {
				let i$18 = this.state.noAnonFunctionType;
				this.state.noAnonFunctionType = !0, e$4.returnType = this.flowParseTypeAnnotation(), this.state.noAnonFunctionType = i$18;
			}
			return super.parseAsyncArrowFromCallExpression(e$4, s$8);
		}
		shouldParseAsyncArrow() {
			return this.match(14) || super.shouldParseAsyncArrow();
		}
		parseMaybeAssign(e$4, s$8) {
			var i$18;
			let r$12 = null, n$8;
			if (this.hasPlugin("jsx") && (this.match(143) || this.match(47))) {
				if (r$12 = this.state.clone(), n$8 = this.tryParse(() => super.parseMaybeAssign(e$4, s$8), r$12), !n$8.error) return n$8.node;
				let { context: h$3 } = this.state, c$3 = h$3[h$3.length - 1];
				(c$3 === C$3.j_oTag || c$3 === C$3.j_expr) && h$3.pop();
			}
			if ((i$18 = n$8) != null && i$18.error || this.match(47)) {
				var o$9, l$10;
				r$12 = r$12 || this.state.clone();
				let h$3, c$3 = this.tryParse((f$3) => {
					var d$14;
					h$3 = this.flowParseTypeParameterDeclaration();
					let x$3 = this.forwardNoArrowParamsConversionAt(h$3, () => {
						let N$5 = super.parseMaybeAssign(e$4, s$8);
						return this.resetStartLocationFromNode(N$5, h$3), N$5;
					});
					(d$14 = x$3.extra) != null && d$14.parenthesized && f$3();
					let A$3 = this.maybeUnwrapTypeCastExpression(x$3);
					return A$3.type !== "ArrowFunctionExpression" && f$3(), A$3.typeParameters = h$3, this.resetStartLocationFromNode(A$3, h$3), x$3;
				}, r$12), u$14 = null;
				if (c$3.node && this.maybeUnwrapTypeCastExpression(c$3.node).type === "ArrowFunctionExpression") {
					if (!c$3.error && !c$3.aborted) return c$3.node.async && this.raise(g$2.UnexpectedTypeParameterBeforeAsyncArrowFunction, h$3), c$3.node;
					u$14 = c$3.node;
				}
				if ((o$9 = n$8) != null && o$9.node) return this.state = n$8.failState, n$8.node;
				if (u$14) return this.state = c$3.failState, u$14;
				throw (l$10 = n$8) != null && l$10.thrown ? n$8.error : c$3.thrown ? c$3.error : this.raise(g$2.UnexpectedTokenAfterTypeParameter, h$3);
			}
			return super.parseMaybeAssign(e$4, s$8);
		}
		parseArrow(e$4) {
			if (this.match(14)) {
				let s$8 = this.tryParse(() => {
					let i$18 = this.state.noAnonFunctionType;
					this.state.noAnonFunctionType = !0;
					let r$12 = this.startNode();
					return [r$12.typeAnnotation, e$4.predicate] = this.flowParseTypeAndPredicateInitialiser(), this.state.noAnonFunctionType = i$18, this.canInsertSemicolon() && this.unexpected(), this.match(19) || this.unexpected(), r$12;
				});
				if (s$8.thrown) return null;
				s$8.error && (this.state = s$8.failState), e$4.returnType = s$8.node.typeAnnotation ? this.finishNode(s$8.node, "TypeAnnotation") : null;
			}
			return super.parseArrow(e$4);
		}
		shouldParseArrow(e$4) {
			return this.match(14) || super.shouldParseArrow(e$4);
		}
		setArrowFunctionParameters(e$4, s$8) {
			this.state.noArrowParamsConversionAt.includes(this.offsetToSourcePos(e$4.start)) ? e$4.params = s$8 : super.setArrowFunctionParameters(e$4, s$8);
		}
		checkParams(e$4, s$8, i$18, r$12 = !0) {
			if (!(i$18 && this.state.noArrowParamsConversionAt.includes(this.offsetToSourcePos(e$4.start)))) {
				for (let n$8 = 0; n$8 < e$4.params.length; n$8++) this.isThisParam(e$4.params[n$8]) && n$8 > 0 && this.raise(g$2.ThisParamMustBeFirst, e$4.params[n$8]);
				super.checkParams(e$4, s$8, i$18, r$12);
			}
		}
		parseParenAndDistinguishExpression(e$4) {
			return super.parseParenAndDistinguishExpression(e$4 && !this.state.noArrowAt.includes(this.sourceToOffsetPos(this.state.start)));
		}
		parseSubscripts(e$4, s$8, i$18) {
			if (e$4.type === "Identifier" && e$4.name === "async" && this.state.noArrowAt.includes(s$8.index)) {
				this.next();
				let r$12 = this.startNodeAt(s$8);
				r$12.callee = e$4, r$12.arguments = super.parseCallExpressionArguments(11), e$4 = this.finishNode(r$12, "CallExpression");
			} else if (e$4.type === "Identifier" && e$4.name === "async" && this.match(47)) {
				let r$12 = this.state.clone(), n$8 = this.tryParse((l$10) => this.parseAsyncArrowWithTypeParameters(s$8) || l$10(), r$12);
				if (!n$8.error && !n$8.aborted) return n$8.node;
				let o$9 = this.tryParse(() => super.parseSubscripts(e$4, s$8, i$18), r$12);
				if (o$9.node && !o$9.error) return o$9.node;
				if (n$8.node) return this.state = n$8.failState, n$8.node;
				if (o$9.node) return this.state = o$9.failState, o$9.node;
				throw n$8.error || o$9.error;
			}
			return super.parseSubscripts(e$4, s$8, i$18);
		}
		parseSubscript(e$4, s$8, i$18, r$12) {
			if (this.match(18) && this.isLookaheadToken_lt()) {
				if (r$12.optionalChainMember = !0, i$18) return r$12.stop = !0, e$4;
				this.next();
				let n$8 = this.startNodeAt(s$8);
				return n$8.callee = e$4, n$8.typeArguments = this.flowParseTypeParameterInstantiationInExpression(), this.expect(10), n$8.arguments = this.parseCallExpressionArguments(11), n$8.optional = !0, this.finishCallExpression(n$8, !0);
			} else if (!i$18 && this.shouldParseTypes() && (this.match(47) || this.match(51))) {
				let n$8 = this.startNodeAt(s$8);
				n$8.callee = e$4;
				let o$9 = this.tryParse(() => (n$8.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew(), this.expect(10), n$8.arguments = super.parseCallExpressionArguments(11), r$12.optionalChainMember && (n$8.optional = !1), this.finishCallExpression(n$8, r$12.optionalChainMember)));
				if (o$9.node) return o$9.error && (this.state = o$9.failState), o$9.node;
			}
			return super.parseSubscript(e$4, s$8, i$18, r$12);
		}
		parseNewCallee(e$4) {
			super.parseNewCallee(e$4);
			let s$8 = null;
			this.shouldParseTypes() && this.match(47) && (s$8 = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node), e$4.typeArguments = s$8;
		}
		parseAsyncArrowWithTypeParameters(e$4) {
			let s$8 = this.startNodeAt(e$4);
			if (this.parseFunctionParams(s$8, !1), !!this.parseArrow(s$8)) return super.parseArrowExpression(s$8, void 0, !0);
		}
		readToken_mult_modulo(e$4) {
			let s$8 = this.input.charCodeAt(this.state.pos + 1);
			if (e$4 === 42 && s$8 === 47 && this.state.hasFlowComment) {
				this.state.hasFlowComment = !1, this.state.pos += 2, this.nextToken();
				return;
			}
			super.readToken_mult_modulo(e$4);
		}
		readToken_pipe_amp(e$4) {
			let s$8 = this.input.charCodeAt(this.state.pos + 1);
			if (e$4 === 124 && s$8 === 125) {
				this.finishOp(9, 2);
				return;
			}
			super.readToken_pipe_amp(e$4);
		}
		parseTopLevel(e$4, s$8) {
			let i$18 = super.parseTopLevel(e$4, s$8);
			return this.state.hasFlowComment && this.raise(g$2.UnterminatedFlowComment, this.state.curPosition()), i$18;
		}
		skipBlockComment() {
			if (this.hasPlugin("flowComments") && this.skipFlowComment()) {
				if (this.state.hasFlowComment) throw this.raise(g$2.NestedFlowComment, this.state.startLoc);
				this.hasFlowCommentCompletion();
				let e$4 = this.skipFlowComment();
				e$4 && (this.state.pos += e$4, this.state.hasFlowComment = !0);
				return;
			}
			return super.skipBlockComment(this.state.hasFlowComment ? "*-/" : "*/");
		}
		skipFlowComment() {
			let { pos: e$4 } = this.state, s$8 = 2;
			for (; [32, 9].includes(this.input.charCodeAt(e$4 + s$8));) s$8++;
			let i$18 = this.input.charCodeAt(s$8 + e$4), r$12 = this.input.charCodeAt(s$8 + e$4 + 1);
			return i$18 === 58 && r$12 === 58 ? s$8 + 2 : this.input.slice(s$8 + e$4, s$8 + e$4 + 12) === "flow-include" ? s$8 + 12 : i$18 === 58 && r$12 !== 58 ? s$8 : !1;
		}
		hasFlowCommentCompletion() {
			if (this.input.indexOf("*/", this.state.pos) === -1) throw this.raise(p$2.UnterminatedComment, this.state.curPosition());
		}
		flowEnumErrorBooleanMemberNotInitialized(e$4, { enumName: s$8, memberName: i$18 }) {
			this.raise(g$2.EnumBooleanMemberNotInitialized, e$4, {
				memberName: i$18,
				enumName: s$8
			});
		}
		flowEnumErrorInvalidMemberInitializer(e$4, s$8) {
			return this.raise(s$8.explicitType ? s$8.explicitType === "symbol" ? g$2.EnumInvalidMemberInitializerSymbolType : g$2.EnumInvalidMemberInitializerPrimaryType : g$2.EnumInvalidMemberInitializerUnknownType, e$4, s$8);
		}
		flowEnumErrorNumberMemberNotInitialized(e$4, s$8) {
			this.raise(g$2.EnumNumberMemberNotInitialized, e$4, s$8);
		}
		flowEnumErrorStringMemberInconsistentlyInitialized(e$4, s$8) {
			this.raise(g$2.EnumStringMemberInconsistentlyInitialized, e$4, s$8);
		}
		flowEnumMemberInit() {
			let e$4 = this.state.startLoc, s$8 = () => this.match(12) || this.match(8);
			switch (this.state.type) {
				case 135: {
					let i$18 = this.parseNumericLiteral(this.state.value);
					return s$8() ? {
						type: "number",
						loc: i$18.loc.start,
						value: i$18
					} : {
						type: "invalid",
						loc: e$4
					};
				}
				case 134: {
					let i$18 = this.parseStringLiteral(this.state.value);
					return s$8() ? {
						type: "string",
						loc: i$18.loc.start,
						value: i$18
					} : {
						type: "invalid",
						loc: e$4
					};
				}
				case 85:
				case 86: {
					let i$18 = this.parseBooleanLiteral(this.match(85));
					return s$8() ? {
						type: "boolean",
						loc: i$18.loc.start,
						value: i$18
					} : {
						type: "invalid",
						loc: e$4
					};
				}
				default: return {
					type: "invalid",
					loc: e$4
				};
			}
		}
		flowEnumMemberRaw() {
			let e$4 = this.state.startLoc, s$8 = this.parseIdentifier(!0), i$18 = this.eat(29) ? this.flowEnumMemberInit() : {
				type: "none",
				loc: e$4
			};
			return {
				id: s$8,
				init: i$18
			};
		}
		flowEnumCheckExplicitTypeMismatch(e$4, s$8, i$18) {
			let { explicitType: r$12 } = s$8;
			r$12 !== null && r$12 !== i$18 && this.flowEnumErrorInvalidMemberInitializer(e$4, s$8);
		}
		flowEnumMembers({ enumName: e$4, explicitType: s$8 }) {
			let i$18 = /* @__PURE__ */ new Set(), r$12 = {
				booleanMembers: [],
				numberMembers: [],
				stringMembers: [],
				defaultedMembers: []
			}, n$8 = !1;
			for (; !this.match(8);) {
				if (this.eat(21)) {
					n$8 = !0;
					break;
				}
				let o$9 = this.startNode(), { id: l$10, init: h$3 } = this.flowEnumMemberRaw(), c$3 = l$10.name;
				if (c$3 === "") continue;
				/^[a-z]/.test(c$3) && this.raise(g$2.EnumInvalidMemberName, l$10, {
					memberName: c$3,
					suggestion: c$3[0].toUpperCase() + c$3.slice(1),
					enumName: e$4
				}), i$18.has(c$3) && this.raise(g$2.EnumDuplicateMemberName, l$10, {
					memberName: c$3,
					enumName: e$4
				}), i$18.add(c$3);
				let u$14 = {
					enumName: e$4,
					explicitType: s$8,
					memberName: c$3
				};
				switch (o$9.id = l$10, h$3.type) {
					case "boolean":
						this.flowEnumCheckExplicitTypeMismatch(h$3.loc, u$14, "boolean"), o$9.init = h$3.value, r$12.booleanMembers.push(this.finishNode(o$9, "EnumBooleanMember"));
						break;
					case "number":
						this.flowEnumCheckExplicitTypeMismatch(h$3.loc, u$14, "number"), o$9.init = h$3.value, r$12.numberMembers.push(this.finishNode(o$9, "EnumNumberMember"));
						break;
					case "string":
						this.flowEnumCheckExplicitTypeMismatch(h$3.loc, u$14, "string"), o$9.init = h$3.value, r$12.stringMembers.push(this.finishNode(o$9, "EnumStringMember"));
						break;
					case "invalid": throw this.flowEnumErrorInvalidMemberInitializer(h$3.loc, u$14);
					case "none": switch (s$8) {
						case "boolean":
							this.flowEnumErrorBooleanMemberNotInitialized(h$3.loc, u$14);
							break;
						case "number":
							this.flowEnumErrorNumberMemberNotInitialized(h$3.loc, u$14);
							break;
						default: r$12.defaultedMembers.push(this.finishNode(o$9, "EnumDefaultedMember"));
					}
				}
				this.match(8) || this.expect(12);
			}
			return {
				members: r$12,
				hasUnknownMembers: n$8
			};
		}
		flowEnumStringMembers(e$4, s$8, { enumName: i$18 }) {
			if (e$4.length === 0) return s$8;
			if (s$8.length === 0) return e$4;
			if (s$8.length > e$4.length) {
				for (let r$12 of e$4) this.flowEnumErrorStringMemberInconsistentlyInitialized(r$12, { enumName: i$18 });
				return s$8;
			} else {
				for (let r$12 of s$8) this.flowEnumErrorStringMemberInconsistentlyInitialized(r$12, { enumName: i$18 });
				return e$4;
			}
		}
		flowEnumParseExplicitType({ enumName: e$4 }) {
			if (!this.eatContextual(102)) return null;
			if (!w$3(this.state.type)) throw this.raise(g$2.EnumInvalidExplicitTypeUnknownSupplied, this.state.startLoc, { enumName: e$4 });
			let { value: s$8 } = this.state;
			return this.next(), s$8 !== "boolean" && s$8 !== "number" && s$8 !== "string" && s$8 !== "symbol" && this.raise(g$2.EnumInvalidExplicitType, this.state.startLoc, {
				enumName: e$4,
				invalidEnumType: s$8
			}), s$8;
		}
		flowEnumBody(e$4, s$8) {
			let i$18 = s$8.name, r$12 = s$8.loc.start, n$8 = this.flowEnumParseExplicitType({ enumName: i$18 });
			this.expect(5);
			let { members: o$9, hasUnknownMembers: l$10 } = this.flowEnumMembers({
				enumName: i$18,
				explicitType: n$8
			});
			switch (e$4.hasUnknownMembers = l$10, n$8) {
				case "boolean": return e$4.explicitType = !0, e$4.members = o$9.booleanMembers, this.expect(8), this.finishNode(e$4, "EnumBooleanBody");
				case "number": return e$4.explicitType = !0, e$4.members = o$9.numberMembers, this.expect(8), this.finishNode(e$4, "EnumNumberBody");
				case "string": return e$4.explicitType = !0, e$4.members = this.flowEnumStringMembers(o$9.stringMembers, o$9.defaultedMembers, { enumName: i$18 }), this.expect(8), this.finishNode(e$4, "EnumStringBody");
				case "symbol": return e$4.members = o$9.defaultedMembers, this.expect(8), this.finishNode(e$4, "EnumSymbolBody");
				default: {
					let h$3 = () => (e$4.members = [], this.expect(8), this.finishNode(e$4, "EnumStringBody"));
					e$4.explicitType = !1;
					let c$3 = o$9.booleanMembers.length, u$14 = o$9.numberMembers.length, f$3 = o$9.stringMembers.length, d$14 = o$9.defaultedMembers.length;
					if (!c$3 && !u$14 && !f$3 && !d$14) return h$3();
					if (!c$3 && !u$14) return e$4.members = this.flowEnumStringMembers(o$9.stringMembers, o$9.defaultedMembers, { enumName: i$18 }), this.expect(8), this.finishNode(e$4, "EnumStringBody");
					if (!u$14 && !f$3 && c$3 >= d$14) {
						for (let x$3 of o$9.defaultedMembers) this.flowEnumErrorBooleanMemberNotInitialized(x$3.loc.start, {
							enumName: i$18,
							memberName: x$3.id.name
						});
						return e$4.members = o$9.booleanMembers, this.expect(8), this.finishNode(e$4, "EnumBooleanBody");
					} else if (!c$3 && !f$3 && u$14 >= d$14) {
						for (let x$3 of o$9.defaultedMembers) this.flowEnumErrorNumberMemberNotInitialized(x$3.loc.start, {
							enumName: i$18,
							memberName: x$3.id.name
						});
						return e$4.members = o$9.numberMembers, this.expect(8), this.finishNode(e$4, "EnumNumberBody");
					} else return this.raise(g$2.EnumInconsistentMemberValues, r$12, { enumName: i$18 }), h$3();
				}
			}
		}
		flowParseEnumDeclaration(e$4) {
			let s$8 = this.parseIdentifier();
			return e$4.id = s$8, e$4.body = this.flowEnumBody(this.startNode(), s$8), this.finishNode(e$4, "EnumDeclaration");
		}
		jsxParseOpeningElementAfterName(e$4) {
			return this.shouldParseTypes() && (this.match(47) || this.match(51)) && (e$4.typeArguments = this.flowParseTypeParameterInstantiationInExpression()), super.jsxParseOpeningElementAfterName(e$4);
		}
		isLookaheadToken_lt() {
			let e$4 = this.nextTokenStart();
			if (this.input.charCodeAt(e$4) === 60) {
				let s$8 = this.input.charCodeAt(e$4 + 1);
				return s$8 !== 60 && s$8 !== 61;
			}
			return !1;
		}
		reScan_lt_gt() {
			let { type: e$4 } = this.state;
			e$4 === 47 ? (this.state.pos -= 1, this.readToken_lt()) : e$4 === 48 && (this.state.pos -= 1, this.readToken_gt());
		}
		reScan_lt() {
			let { type: e$4 } = this.state;
			return e$4 === 51 ? (this.state.pos -= 2, this.finishOp(47, 1), 47) : e$4;
		}
		maybeUnwrapTypeCastExpression(e$4) {
			return e$4.type === "TypeCastExpression" ? e$4.expression : e$4;
		}
	}, dr$5 = /\r\n|[\r\n\u2028\u2029]/, be$5 = new RegExp(dr$5.source, "g");
	function ee$4(a$13) {
		switch (a$13) {
			case 10:
			case 13:
			case 8232:
			case 8233: return !0;
			default: return !1;
		}
	}
	function ms$2(a$13, t$13, e$4) {
		for (let s$8 = t$13; s$8 < e$4; s$8++) if (ee$4(a$13.charCodeAt(s$8))) return !0;
		return !1;
	}
	var $e$5 = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g, Ve$5 = /(?:[^\S\n\r\u2028\u2029]|\/\/.*|\/\*.*?\*\/)*/g;
	function mr$5(a$13) {
		switch (a$13) {
			case 9:
			case 11:
			case 12:
			case 32:
			case 160:
			case 5760:
			case 8192:
			case 8193:
			case 8194:
			case 8195:
			case 8196:
			case 8197:
			case 8198:
			case 8199:
			case 8200:
			case 8201:
			case 8202:
			case 8239:
			case 8287:
			case 12288:
			case 65279: return !0;
			default: return !1;
		}
	}
	var J$4 = F$4`jsx`({
		AttributeIsEmpty: "JSX attributes must only be assigned a non-empty expression.",
		MissingClosingTagElement: ({ openingTagName: a$13 }) => `Expected corresponding JSX closing tag for <${a$13}>.`,
		MissingClosingTagFragment: "Expected corresponding JSX closing tag for <>.",
		UnexpectedSequenceExpression: "Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?",
		UnexpectedToken: ({ unexpected: a$13, HTMLEntity: t$13 }) => `Unexpected token \`${a$13}\`. Did you mean \`${t$13}\` or \`{'${a$13}'}\`?`,
		UnsupportedJsxValue: "JSX value should be either an expression or a quoted JSX text.",
		UnterminatedJsxContent: "Unterminated JSX contents.",
		UnwrappedAdjacentJSXElements: "Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?"
	});
	function q$3(a$13) {
		return a$13 ? a$13.type === "JSXOpeningFragment" || a$13.type === "JSXClosingFragment" : !1;
	}
	function Q$4(a$13) {
		if (a$13.type === "JSXIdentifier") return a$13.name;
		if (a$13.type === "JSXNamespacedName") return a$13.namespace.name + ":" + a$13.name.name;
		if (a$13.type === "JSXMemberExpression") return Q$4(a$13.object) + "." + Q$4(a$13.property);
		throw new Error("Node had unexpected type: " + a$13.type);
	}
	var yr$4 = (a$13) => class extends a$13 {
		jsxReadToken() {
			let e$4 = "", s$8 = this.state.pos;
			for (;;) {
				if (this.state.pos >= this.length) throw this.raise(J$4.UnterminatedJsxContent, this.state.startLoc);
				let i$18 = this.input.charCodeAt(this.state.pos);
				switch (i$18) {
					case 60:
					case 123:
						if (this.state.pos === this.state.start) {
							i$18 === 60 && this.state.canStartJSXElement ? (++this.state.pos, this.finishToken(143)) : super.getTokenFromCode(i$18);
							return;
						}
						e$4 += this.input.slice(s$8, this.state.pos), this.finishToken(142, e$4);
						return;
					case 38:
						e$4 += this.input.slice(s$8, this.state.pos), e$4 += this.jsxReadEntity(), s$8 = this.state.pos;
						break;
					case 62:
					case 125:
					default: ee$4(i$18) ? (e$4 += this.input.slice(s$8, this.state.pos), e$4 += this.jsxReadNewLine(!0), s$8 = this.state.pos) : ++this.state.pos;
				}
			}
		}
		jsxReadNewLine(e$4) {
			let s$8 = this.input.charCodeAt(this.state.pos), i$18;
			return ++this.state.pos, s$8 === 13 && this.input.charCodeAt(this.state.pos) === 10 ? (++this.state.pos, i$18 = e$4 ? `
` : `\r
`) : i$18 = String.fromCharCode(s$8), ++this.state.curLine, this.state.lineStart = this.state.pos, i$18;
		}
		jsxReadString(e$4) {
			let s$8 = "", i$18 = ++this.state.pos;
			for (;;) {
				if (this.state.pos >= this.length) throw this.raise(p$2.UnterminatedString, this.state.startLoc);
				let r$12 = this.input.charCodeAt(this.state.pos);
				if (r$12 === e$4) break;
				r$12 === 38 ? (s$8 += this.input.slice(i$18, this.state.pos), s$8 += this.jsxReadEntity(), i$18 = this.state.pos) : ee$4(r$12) ? (s$8 += this.input.slice(i$18, this.state.pos), s$8 += this.jsxReadNewLine(!1), i$18 = this.state.pos) : ++this.state.pos;
			}
			s$8 += this.input.slice(i$18, this.state.pos++), this.finishToken(134, s$8);
		}
		jsxReadEntity() {
			let e$4 = ++this.state.pos;
			if (this.codePointAtPos(this.state.pos) === 35) {
				++this.state.pos;
				let s$8 = 10;
				this.codePointAtPos(this.state.pos) === 120 && (s$8 = 16, ++this.state.pos);
				let i$18 = this.readInt(s$8, void 0, !1, "bail");
				if (i$18 !== null && this.codePointAtPos(this.state.pos) === 59) return ++this.state.pos, String.fromCodePoint(i$18);
			} else {
				let s$8 = 0, i$18 = !1;
				for (; s$8++ < 10 && this.state.pos < this.length && !(i$18 = this.codePointAtPos(this.state.pos) === 59);) ++this.state.pos;
				if (i$18) {
					this.input.slice(e$4, this.state.pos);
					if (++this.state.pos, void 0);
				}
			}
			return this.state.pos = e$4, "&";
		}
		jsxReadWord() {
			let e$4, s$8 = this.state.pos;
			do
				e$4 = this.input.charCodeAt(++this.state.pos);
			while (Z$4(e$4) || e$4 === 45);
			this.finishToken(141, this.input.slice(s$8, this.state.pos));
		}
		jsxParseIdentifier() {
			let e$4 = this.startNode();
			return this.match(141) ? e$4.name = this.state.value : xt$4(this.state.type) ? e$4.name = H$6(this.state.type) : this.unexpected(), this.next(), this.finishNode(e$4, "JSXIdentifier");
		}
		jsxParseNamespacedName() {
			let e$4 = this.state.startLoc, s$8 = this.jsxParseIdentifier();
			if (!this.eat(14)) return s$8;
			let i$18 = this.startNodeAt(e$4);
			return i$18.namespace = s$8, i$18.name = this.jsxParseIdentifier(), this.finishNode(i$18, "JSXNamespacedName");
		}
		jsxParseElementName() {
			let e$4 = this.state.startLoc, s$8 = this.jsxParseNamespacedName();
			if (s$8.type === "JSXNamespacedName") return s$8;
			for (; this.eat(16);) {
				let i$18 = this.startNodeAt(e$4);
				i$18.object = s$8, i$18.property = this.jsxParseIdentifier(), s$8 = this.finishNode(i$18, "JSXMemberExpression");
			}
			return s$8;
		}
		jsxParseAttributeValue() {
			let e$4;
			switch (this.state.type) {
				case 5: return e$4 = this.startNode(), this.setContext(C$3.brace), this.next(), e$4 = this.jsxParseExpressionContainer(e$4, C$3.j_oTag), e$4.expression.type === "JSXEmptyExpression" && this.raise(J$4.AttributeIsEmpty, e$4), e$4;
				case 143:
				case 134: return this.parseExprAtom();
				default: throw this.raise(J$4.UnsupportedJsxValue, this.state.startLoc);
			}
		}
		jsxParseEmptyExpression() {
			let e$4 = this.startNodeAt(this.state.lastTokEndLoc);
			return this.finishNodeAt(e$4, "JSXEmptyExpression", this.state.startLoc);
		}
		jsxParseSpreadChild(e$4) {
			return this.next(), e$4.expression = this.parseExpression(), this.setContext(C$3.j_expr), this.state.canStartJSXElement = !0, this.expect(8), this.finishNode(e$4, "JSXSpreadChild");
		}
		jsxParseExpressionContainer(e$4, s$8) {
			if (this.match(8)) e$4.expression = this.jsxParseEmptyExpression();
			else e$4.expression = this.parseExpression();
			return this.setContext(s$8), this.state.canStartJSXElement = !0, this.expect(8), this.finishNode(e$4, "JSXExpressionContainer");
		}
		jsxParseAttribute() {
			let e$4 = this.startNode();
			return this.match(5) ? (this.setContext(C$3.brace), this.next(), this.expect(21), e$4.argument = this.parseMaybeAssignAllowIn(), this.setContext(C$3.j_oTag), this.state.canStartJSXElement = !0, this.expect(8), this.finishNode(e$4, "JSXSpreadAttribute")) : (e$4.name = this.jsxParseNamespacedName(), e$4.value = this.eat(29) ? this.jsxParseAttributeValue() : null, this.finishNode(e$4, "JSXAttribute"));
		}
		jsxParseOpeningElementAt(e$4) {
			let s$8 = this.startNodeAt(e$4);
			return this.eat(144) ? this.finishNode(s$8, "JSXOpeningFragment") : (s$8.name = this.jsxParseElementName(), this.jsxParseOpeningElementAfterName(s$8));
		}
		jsxParseOpeningElementAfterName(e$4) {
			let s$8 = [];
			for (; !this.match(56) && !this.match(144);) s$8.push(this.jsxParseAttribute());
			return e$4.attributes = s$8, e$4.selfClosing = this.eat(56), this.expect(144), this.finishNode(e$4, "JSXOpeningElement");
		}
		jsxParseClosingElementAt(e$4) {
			let s$8 = this.startNodeAt(e$4);
			return this.eat(144) ? this.finishNode(s$8, "JSXClosingFragment") : (s$8.name = this.jsxParseElementName(), this.expect(144), this.finishNode(s$8, "JSXClosingElement"));
		}
		jsxParseElementAt(e$4) {
			let s$8 = this.startNodeAt(e$4), i$18 = [], r$12 = this.jsxParseOpeningElementAt(e$4), n$8 = null;
			if (!r$12.selfClosing) {
				e: for (;;) switch (this.state.type) {
					case 143:
						if (e$4 = this.state.startLoc, this.next(), this.eat(56)) {
							n$8 = this.jsxParseClosingElementAt(e$4);
							break e;
						}
						i$18.push(this.jsxParseElementAt(e$4));
						break;
					case 142:
						i$18.push(this.parseLiteral(this.state.value, "JSXText"));
						break;
					case 5: {
						let o$9 = this.startNode();
						this.setContext(C$3.brace), this.next(), this.match(21) ? i$18.push(this.jsxParseSpreadChild(o$9)) : i$18.push(this.jsxParseExpressionContainer(o$9, C$3.j_expr));
						break;
					}
					default: this.unexpected();
				}
				q$3(r$12) && !q$3(n$8) && n$8 !== null ? this.raise(J$4.MissingClosingTagFragment, n$8) : !q$3(r$12) && q$3(n$8) ? this.raise(J$4.MissingClosingTagElement, n$8, { openingTagName: Q$4(r$12.name) }) : !q$3(r$12) && !q$3(n$8) && Q$4(n$8.name) !== Q$4(r$12.name) && this.raise(J$4.MissingClosingTagElement, n$8, { openingTagName: Q$4(r$12.name) });
			}
			if (q$3(r$12) ? (s$8.openingFragment = r$12, s$8.closingFragment = n$8) : (s$8.openingElement = r$12, s$8.closingElement = n$8), s$8.children = i$18, this.match(47)) throw this.raise(J$4.UnwrappedAdjacentJSXElements, this.state.startLoc);
			return q$3(r$12) ? this.finishNode(s$8, "JSXFragment") : this.finishNode(s$8, "JSXElement");
		}
		jsxParseElement() {
			let e$4 = this.state.startLoc;
			return this.next(), this.jsxParseElementAt(e$4);
		}
		setContext(e$4) {
			let { context: s$8 } = this.state;
			s$8[s$8.length - 1] = e$4;
		}
		parseExprAtom(e$4) {
			return this.match(143) ? this.jsxParseElement() : this.match(47) && this.input.charCodeAt(this.state.pos) !== 33 ? (this.replaceToken(143), this.jsxParseElement()) : super.parseExprAtom(e$4);
		}
		skipSpace() {
			this.curContext().preserveSpace || super.skipSpace();
		}
		getTokenFromCode(e$4) {
			let s$8 = this.curContext();
			if (s$8 === C$3.j_expr) {
				this.jsxReadToken();
				return;
			}
			if (s$8 === C$3.j_oTag || s$8 === C$3.j_cTag) {
				if (U$4(e$4)) {
					this.jsxReadWord();
					return;
				}
				if (e$4 === 62) {
					++this.state.pos, this.finishToken(144);
					return;
				}
				if ((e$4 === 34 || e$4 === 39) && s$8 === C$3.j_oTag) {
					this.jsxReadString(e$4);
					return;
				}
			}
			if (e$4 === 60 && this.state.canStartJSXElement && this.input.charCodeAt(this.state.pos + 1) !== 33) {
				++this.state.pos, this.finishToken(143);
				return;
			}
			super.getTokenFromCode(e$4);
		}
		updateContext(e$4) {
			let { context: s$8, type: i$18 } = this.state;
			if (i$18 === 56 && e$4 === 143) s$8.splice(-2, 2, C$3.j_cTag), this.state.canStartJSXElement = !1;
			else if (i$18 === 143) s$8.push(C$3.j_oTag);
			else if (i$18 === 144) {
				let r$12 = s$8[s$8.length - 1];
				r$12 === C$3.j_oTag && e$4 === 56 || r$12 === C$3.j_cTag ? (s$8.pop(), this.state.canStartJSXElement = s$8[s$8.length - 1] === C$3.j_expr) : (this.setContext(C$3.j_expr), this.state.canStartJSXElement = !0);
			} else this.state.canStartJSXElement = qi$3(i$18);
		}
	}, Je$6 = class extends me$5 {
		constructor(...t$13) {
			super(...t$13), this.tsNames = /* @__PURE__ */ new Map();
		}
	}, Xe$4 = class extends ye$4 {
		constructor(...t$13) {
			super(...t$13), this.importsStack = [];
		}
		createScope(t$13) {
			return this.importsStack.push(/* @__PURE__ */ new Set()), new Je$6(t$13);
		}
		enter(t$13) {
			t$13 === 1024 && this.importsStack.push(/* @__PURE__ */ new Set()), super.enter(t$13);
		}
		exit() {
			let t$13 = super.exit();
			return t$13 === 1024 && this.importsStack.pop(), t$13;
		}
		hasImport(t$13, e$4) {
			let s$8 = this.importsStack.length;
			if (this.importsStack[s$8 - 1].has(t$13)) return !0;
			if (!e$4 && s$8 > 1) {
				for (let i$18 = 0; i$18 < s$8 - 1; i$18++) if (this.importsStack[i$18].has(t$13)) return !0;
			}
			return !1;
		}
		declareName(t$13, e$4, s$8) {
			if (e$4 & 4096) {
				this.hasImport(t$13, !0) && this.parser.raise(p$2.VarRedeclaration, s$8, { identifierName: t$13 }), this.importsStack[this.importsStack.length - 1].add(t$13);
				return;
			}
			let i$18 = this.currentScope(), r$12 = i$18.tsNames.get(t$13) || 0;
			if (e$4 & 1024) {
				this.maybeExportDefined(i$18, t$13), i$18.tsNames.set(t$13, r$12 | 16);
				return;
			}
			super.declareName(t$13, e$4, s$8), e$4 & 2 && (e$4 & 1 || (this.checkRedeclarationInScope(i$18, t$13, e$4, s$8), this.maybeExportDefined(i$18, t$13)), r$12 = r$12 | 1), e$4 & 256 && (r$12 = r$12 | 2), e$4 & 512 && (r$12 = r$12 | 4), e$4 & 128 && (r$12 = r$12 | 8), r$12 && i$18.tsNames.set(t$13, r$12);
		}
		isRedeclaredInScope(t$13, e$4, s$8) {
			let i$18 = t$13.tsNames.get(e$4);
			if ((i$18 & 2) > 0) {
				if (s$8 & 256) {
					let r$12 = !!(s$8 & 512), n$8 = (i$18 & 4) > 0;
					return r$12 !== n$8;
				}
				return !0;
			}
			return s$8 & 128 && (i$18 & 8) > 0 ? t$13.names.get(e$4) & 2 ? !!(s$8 & 1) : !1 : s$8 & 2 && (i$18 & 1) > 0 ? !0 : super.isRedeclaredInScope(t$13, e$4, s$8);
		}
		checkLocalExport(t$13) {
			let { name: e$4 } = t$13;
			if (this.hasImport(e$4)) return;
			let s$8 = this.scopeStack.length;
			for (let i$18 = s$8 - 1; i$18 >= 0; i$18--) {
				let n$8 = this.scopeStack[i$18].tsNames.get(e$4);
				if ((n$8 & 1) > 0 || (n$8 & 16) > 0) return;
			}
			super.checkLocalExport(t$13);
		}
	}, Ge$5 = class {
		constructor() {
			this.stacks = [];
		}
		enter(t$13) {
			this.stacks.push(t$13);
		}
		exit() {
			this.stacks.pop();
		}
		currentFlags() {
			return this.stacks[this.stacks.length - 1];
		}
		get hasAwait() {
			return (this.currentFlags() & 2) > 0;
		}
		get hasYield() {
			return (this.currentFlags() & 1) > 0;
		}
		get hasReturn() {
			return (this.currentFlags() & 4) > 0;
		}
		get hasIn() {
			return (this.currentFlags() & 8) > 0;
		}
	};
	function Ce$6(a$13, t$13) {
		return (a$13 ? 2 : 0) | (t$13 ? 1 : 0);
	}
	var Ye$6 = class {
		constructor() {
			this.sawUnambiguousESM = !1, this.ambiguousScriptDifferentAst = !1;
		}
		sourceToOffsetPos(t$13) {
			return t$13 + this.startIndex;
		}
		offsetToSourcePos(t$13) {
			return t$13 - this.startIndex;
		}
		hasPlugin(t$13) {
			if (typeof t$13 == "string") return this.plugins.has(t$13);
			{
				let [e$4, s$8] = t$13;
				if (!this.hasPlugin(e$4)) return !1;
				let i$18 = this.plugins.get(e$4);
				for (let r$12 of Object.keys(s$8)) if ((i$18 == null ? void 0 : i$18[r$12]) !== s$8[r$12]) return !1;
				return !0;
			}
		}
		getPluginOption(t$13, e$4) {
			var s$8;
			return (s$8 = this.plugins.get(t$13)) == null ? void 0 : s$8[e$4];
		}
	};
	function Ls$3(a$13, t$13) {
		a$13.trailingComments === void 0 ? a$13.trailingComments = t$13 : a$13.trailingComments.unshift(...t$13);
	}
	function xr$4(a$13, t$13) {
		a$13.leadingComments === void 0 ? a$13.leadingComments = t$13 : a$13.leadingComments.unshift(...t$13);
	}
	function xe$4(a$13, t$13) {
		a$13.innerComments === void 0 ? a$13.innerComments = t$13 : a$13.innerComments.unshift(...t$13);
	}
	function z$5(a$13, t$13, e$4) {
		let s$8 = null, i$18 = t$13.length;
		for (; s$8 === null && i$18 > 0;) s$8 = t$13[--i$18];
		s$8 === null || s$8.start > e$4.start ? xe$4(a$13, e$4.comments) : Ls$3(s$8, e$4.comments);
	}
	var Qe$4 = class extends Ye$6 {
		addComment(t$13) {
			this.filename && (t$13.loc.filename = this.filename);
			let { commentsLen: e$4 } = this.state;
			this.comments.length !== e$4 && (this.comments.length = e$4), this.comments.push(t$13), this.state.commentsLen++;
		}
		processComment(t$13) {
			let { commentStack: e$4 } = this.state, s$8 = e$4.length;
			if (s$8 === 0) return;
			let i$18 = s$8 - 1, r$12 = e$4[i$18];
			r$12.start === t$13.end && (r$12.leadingNode = t$13, i$18--);
			let { start: n$8 } = t$13;
			for (; i$18 >= 0; i$18--) {
				let o$9 = e$4[i$18], l$10 = o$9.end;
				if (l$10 > n$8) o$9.containingNode = t$13, this.finalizeComment(o$9), e$4.splice(i$18, 1);
				else {
					l$10 === n$8 && (o$9.trailingNode = t$13);
					break;
				}
			}
		}
		finalizeComment(t$13) {
			var e$4;
			let { comments: s$8 } = t$13;
			if (t$13.leadingNode !== null || t$13.trailingNode !== null) t$13.leadingNode !== null && Ls$3(t$13.leadingNode, s$8), t$13.trailingNode !== null && xr$4(t$13.trailingNode, s$8);
			else {
				let { containingNode: i$18, start: r$12 } = t$13;
				if (this.input.charCodeAt(this.offsetToSourcePos(r$12) - 1) === 44) switch (i$18.type) {
					case "ObjectExpression":
					case "ObjectPattern":
					case "RecordExpression":
						z$5(i$18, i$18.properties, t$13);
						break;
					case "CallExpression":
					case "OptionalCallExpression":
						z$5(i$18, i$18.arguments, t$13);
						break;
					case "ImportExpression":
						z$5(i$18, [i$18.source, (e$4 = i$18.options) != null ? e$4 : null], t$13);
						break;
					case "FunctionDeclaration":
					case "FunctionExpression":
					case "ArrowFunctionExpression":
					case "ObjectMethod":
					case "ClassMethod":
					case "ClassPrivateMethod":
						z$5(i$18, i$18.params, t$13);
						break;
					case "ArrayExpression":
					case "ArrayPattern":
					case "TupleExpression":
						z$5(i$18, i$18.elements, t$13);
						break;
					case "ExportNamedDeclaration":
					case "ImportDeclaration":
						z$5(i$18, i$18.specifiers, t$13);
						break;
					case "TSEnumDeclaration":
						z$5(i$18, i$18.members, t$13);
						break;
					case "TSEnumBody":
						z$5(i$18, i$18.members, t$13);
						break;
					default: xe$4(i$18, s$8);
				}
				else xe$4(i$18, s$8);
			}
		}
		finalizeRemainingComments() {
			let { commentStack: t$13 } = this.state;
			for (let e$4 = t$13.length - 1; e$4 >= 0; e$4--) this.finalizeComment(t$13[e$4]);
			this.state.commentStack = [];
		}
		resetPreviousNodeTrailingComments(t$13) {
			let { commentStack: e$4 } = this.state, { length: s$8 } = e$4;
			if (s$8 === 0) return;
			let i$18 = e$4[s$8 - 1];
			i$18.leadingNode === t$13 && (i$18.leadingNode = null);
		}
		takeSurroundingComments(t$13, e$4, s$8) {
			let { commentStack: i$18 } = this.state, r$12 = i$18.length;
			if (r$12 === 0) return;
			let n$8 = r$12 - 1;
			for (; n$8 >= 0; n$8--) {
				let o$9 = i$18[n$8], l$10 = o$9.end;
				if (o$9.start === s$8) o$9.leadingNode = t$13;
				else if (l$10 === e$4) o$9.trailingNode = t$13;
				else if (l$10 < e$4) break;
			}
		}
	}, Ze$6 = class a$13 {
		constructor() {
			this.flags = 1024, this.startIndex = void 0, this.curLine = void 0, this.lineStart = void 0, this.startLoc = void 0, this.endLoc = void 0, this.errors = [], this.potentialArrowAt = -1, this.noArrowAt = [], this.noArrowParamsConversionAt = [], this.topicContext = {
				maxNumOfResolvableTopics: 0,
				maxTopicIndex: null
			}, this.labels = [], this.commentsLen = 0, this.commentStack = [], this.pos = 0, this.type = 140, this.value = null, this.start = 0, this.end = 0, this.lastTokEndLoc = null, this.lastTokStartLoc = null, this.context = [C$3.brace], this.firstInvalidTemplateEscapePos = null, this.strictErrors = /* @__PURE__ */ new Map(), this.tokensLength = 0;
		}
		get strict() {
			return (this.flags & 1) > 0;
		}
		set strict(t$13) {
			t$13 ? this.flags |= 1 : this.flags &= -2;
		}
		init({ strictMode: t$13, sourceType: e$4, startIndex: s$8, startLine: i$18, startColumn: r$12 }) {
			this.strict = t$13 === !1 ? !1 : t$13 === !0 ? !0 : e$4 === "module", this.startIndex = s$8, this.curLine = i$18, this.lineStart = -r$12, this.startLoc = this.endLoc = new B$4(i$18, r$12, s$8);
		}
		get maybeInArrowParameters() {
			return (this.flags & 2) > 0;
		}
		set maybeInArrowParameters(t$13) {
			t$13 ? this.flags |= 2 : this.flags &= -3;
		}
		get inType() {
			return (this.flags & 4) > 0;
		}
		set inType(t$13) {
			t$13 ? this.flags |= 4 : this.flags &= -5;
		}
		get noAnonFunctionType() {
			return (this.flags & 8) > 0;
		}
		set noAnonFunctionType(t$13) {
			t$13 ? this.flags |= 8 : this.flags &= -9;
		}
		get hasFlowComment() {
			return (this.flags & 16) > 0;
		}
		set hasFlowComment(t$13) {
			t$13 ? this.flags |= 16 : this.flags &= -17;
		}
		get isAmbientContext() {
			return (this.flags & 32) > 0;
		}
		set isAmbientContext(t$13) {
			t$13 ? this.flags |= 32 : this.flags &= -33;
		}
		get inAbstractClass() {
			return (this.flags & 64) > 0;
		}
		set inAbstractClass(t$13) {
			t$13 ? this.flags |= 64 : this.flags &= -65;
		}
		get inDisallowConditionalTypesContext() {
			return (this.flags & 128) > 0;
		}
		set inDisallowConditionalTypesContext(t$13) {
			t$13 ? this.flags |= 128 : this.flags &= -129;
		}
		get soloAwait() {
			return (this.flags & 256) > 0;
		}
		set soloAwait(t$13) {
			t$13 ? this.flags |= 256 : this.flags &= -257;
		}
		get inFSharpPipelineDirectBody() {
			return (this.flags & 512) > 0;
		}
		set inFSharpPipelineDirectBody(t$13) {
			t$13 ? this.flags |= 512 : this.flags &= -513;
		}
		get canStartJSXElement() {
			return (this.flags & 1024) > 0;
		}
		set canStartJSXElement(t$13) {
			t$13 ? this.flags |= 1024 : this.flags &= -1025;
		}
		get containsEsc() {
			return (this.flags & 2048) > 0;
		}
		set containsEsc(t$13) {
			t$13 ? this.flags |= 2048 : this.flags &= -2049;
		}
		get hasTopLevelAwait() {
			return (this.flags & 4096) > 0;
		}
		set hasTopLevelAwait(t$13) {
			t$13 ? this.flags |= 4096 : this.flags &= -4097;
		}
		curPosition() {
			return new B$4(this.curLine, this.pos - this.lineStart, this.pos + this.startIndex);
		}
		clone() {
			let t$13 = new a$13();
			return t$13.flags = this.flags, t$13.startIndex = this.startIndex, t$13.curLine = this.curLine, t$13.lineStart = this.lineStart, t$13.startLoc = this.startLoc, t$13.endLoc = this.endLoc, t$13.errors = this.errors.slice(), t$13.potentialArrowAt = this.potentialArrowAt, t$13.noArrowAt = this.noArrowAt.slice(), t$13.noArrowParamsConversionAt = this.noArrowParamsConversionAt.slice(), t$13.topicContext = this.topicContext, t$13.labels = this.labels.slice(), t$13.commentsLen = this.commentsLen, t$13.commentStack = this.commentStack.slice(), t$13.pos = this.pos, t$13.type = this.type, t$13.value = this.value, t$13.start = this.start, t$13.end = this.end, t$13.lastTokEndLoc = this.lastTokEndLoc, t$13.lastTokStartLoc = this.lastTokStartLoc, t$13.context = this.context.slice(), t$13.firstInvalidTemplateEscapePos = this.firstInvalidTemplateEscapePos, t$13.strictErrors = this.strictErrors, t$13.tokensLength = this.tokensLength, t$13;
		}
	}, Pr$6 = function(t$13) {
		return t$13 >= 48 && t$13 <= 57;
	}, ys$2 = {
		decBinOct: new Set([
			46,
			66,
			69,
			79,
			95,
			98,
			101,
			111
		]),
		hex: new Set([
			46,
			88,
			95,
			120
		])
	}, Ae$5 = {
		bin: (a$13) => a$13 === 48 || a$13 === 49,
		oct: (a$13) => a$13 >= 48 && a$13 <= 55,
		dec: (a$13) => a$13 >= 48 && a$13 <= 57,
		hex: (a$13) => a$13 >= 48 && a$13 <= 57 || a$13 >= 65 && a$13 <= 70 || a$13 >= 97 && a$13 <= 102
	};
	function xs$3(a$13, t$13, e$4, s$8, i$18, r$12) {
		let n$8 = e$4, o$9 = s$8, l$10 = i$18, h$3 = "", c$3 = null, u$14 = e$4, { length: f$3 } = t$13;
		for (;;) {
			if (e$4 >= f$3) {
				r$12.unterminated(n$8, o$9, l$10), h$3 += t$13.slice(u$14, e$4);
				break;
			}
			let d$14 = t$13.charCodeAt(e$4);
			if (gr$4(a$13, d$14, t$13, e$4)) {
				h$3 += t$13.slice(u$14, e$4);
				break;
			}
			if (d$14 === 92) {
				h$3 += t$13.slice(u$14, e$4);
				let x$3 = Tr$4(t$13, e$4, s$8, i$18, a$13 === "template", r$12);
				x$3.ch === null && !c$3 ? c$3 = {
					pos: e$4,
					lineStart: s$8,
					curLine: i$18
				} : h$3 += x$3.ch, {pos: e$4, lineStart: s$8, curLine: i$18} = x$3, u$14 = e$4;
			} else d$14 === 8232 || d$14 === 8233 ? (++e$4, ++i$18, s$8 = e$4) : d$14 === 10 || d$14 === 13 ? a$13 === "template" ? (h$3 += t$13.slice(u$14, e$4) + `
`, ++e$4, d$14 === 13 && t$13.charCodeAt(e$4) === 10 && ++e$4, ++i$18, u$14 = s$8 = e$4) : r$12.unterminated(n$8, o$9, l$10) : ++e$4;
		}
		return {
			pos: e$4,
			str: h$3,
			firstInvalidLoc: c$3,
			lineStart: s$8,
			curLine: i$18,
			containsInvalid: !!c$3
		};
	}
	function gr$4(a$13, t$13, e$4, s$8) {
		return a$13 === "template" ? t$13 === 96 || t$13 === 36 && e$4.charCodeAt(s$8 + 1) === 123 : t$13 === (a$13 === "double" ? 34 : 39);
	}
	function Tr$4(a$13, t$13, e$4, s$8, i$18, r$12) {
		let n$8 = !i$18;
		t$13++;
		let o$9 = (h$3) => ({
			pos: t$13,
			ch: h$3,
			lineStart: e$4,
			curLine: s$8
		}), l$10 = a$13.charCodeAt(t$13++);
		switch (l$10) {
			case 110: return o$9(`
`);
			case 114: return o$9("\r");
			case 120: {
				let h$3;
				return {code: h$3, pos: t$13} = et$5(a$13, t$13, e$4, s$8, 2, !1, n$8, r$12), o$9(h$3 === null ? null : String.fromCharCode(h$3));
			}
			case 117: {
				let h$3;
				return {code: h$3, pos: t$13} = Ms$3(a$13, t$13, e$4, s$8, n$8, r$12), o$9(h$3 === null ? null : String.fromCodePoint(h$3));
			}
			case 116: return o$9("	");
			case 98: return o$9("\b");
			case 118: return o$9("\v");
			case 102: return o$9("\f");
			case 13: a$13.charCodeAt(t$13) === 10 && ++t$13;
			case 10: e$4 = t$13, ++s$8;
			case 8232:
			case 8233: return o$9("");
			case 56:
			case 57:
				if (i$18) return o$9(null);
				r$12.strictNumericEscape(t$13 - 1, e$4, s$8);
			default:
				if (l$10 >= 48 && l$10 <= 55) {
					let h$3 = t$13 - 1, u$14 = /^[0-7]+/.exec(a$13.slice(h$3, t$13 + 2))[0], f$3 = parseInt(u$14, 8);
					f$3 > 255 && (u$14 = u$14.slice(0, -1), f$3 = parseInt(u$14, 8)), t$13 += u$14.length - 1;
					let d$14 = a$13.charCodeAt(t$13);
					if (u$14 !== "0" || d$14 === 56 || d$14 === 57) {
						if (i$18) return o$9(null);
						r$12.strictNumericEscape(h$3, e$4, s$8);
					}
					return o$9(String.fromCharCode(f$3));
				}
				return o$9(String.fromCharCode(l$10));
		}
	}
	function et$5(a$13, t$13, e$4, s$8, i$18, r$12, n$8, o$9) {
		let l$10 = t$13, h$3;
		return {n: h$3, pos: t$13} = Ds$2(a$13, t$13, e$4, s$8, 16, i$18, r$12, !1, o$9, !n$8), h$3 === null && (n$8 ? o$9.invalidEscapeSequence(l$10, e$4, s$8) : t$13 = l$10 - 1), {
			code: h$3,
			pos: t$13
		};
	}
	function Ds$2(a$13, t$13, e$4, s$8, i$18, r$12, n$8, o$9, l$10, h$3) {
		let c$3 = t$13, u$14 = i$18 === 16 ? ys$2.hex : ys$2.decBinOct, f$3 = i$18 === 16 ? Ae$5.hex : i$18 === 10 ? Ae$5.dec : i$18 === 8 ? Ae$5.oct : Ae$5.bin, d$14 = !1, x$3 = 0;
		for (let A$3 = 0, N$5 = r$12 ?? Infinity; A$3 < N$5; ++A$3) {
			let S$4 = a$13.charCodeAt(t$13), I$2;
			if (S$4 === 95 && o$9 !== "bail") {
				let W$2 = a$13.charCodeAt(t$13 - 1), $$4 = a$13.charCodeAt(t$13 + 1);
				if (o$9) {
					if (Number.isNaN($$4) || !f$3($$4) || u$14.has(W$2) || u$14.has($$4)) {
						if (h$3) return {
							n: null,
							pos: t$13
						};
						l$10.unexpectedNumericSeparator(t$13, e$4, s$8);
					}
				} else {
					if (h$3) return {
						n: null,
						pos: t$13
					};
					l$10.numericSeparatorInEscapeSequence(t$13, e$4, s$8);
				}
				++t$13;
				continue;
			}
			if (S$4 >= 97 ? I$2 = S$4 - 97 + 10 : S$4 >= 65 ? I$2 = S$4 - 65 + 10 : Pr$6(S$4) ? I$2 = S$4 - 48 : I$2 = Infinity, I$2 >= i$18) {
				if (I$2 <= 9 && h$3) return {
					n: null,
					pos: t$13
				};
				if (I$2 <= 9 && l$10.invalidDigit(t$13, e$4, s$8, i$18)) I$2 = 0;
				else if (n$8) I$2 = 0, d$14 = !0;
				else break;
			}
			++t$13, x$3 = x$3 * i$18 + I$2;
		}
		return t$13 === c$3 || r$12 != null && t$13 - c$3 !== r$12 || d$14 ? {
			n: null,
			pos: t$13
		} : {
			n: x$3,
			pos: t$13
		};
	}
	function Ms$3(a$13, t$13, e$4, s$8, i$18, r$12) {
		let n$8 = a$13.charCodeAt(t$13), o$9;
		if (n$8 === 123) {
			if (++t$13, {code: o$9, pos: t$13} = et$5(a$13, t$13, e$4, s$8, a$13.indexOf("}", t$13) - t$13, !0, i$18, r$12), ++t$13, o$9 !== null && o$9 > 1114111) if (i$18) r$12.invalidCodePoint(t$13, e$4, s$8);
			else return {
				code: null,
				pos: t$13
			};
		} else ({code: o$9, pos: t$13} = et$5(a$13, t$13, e$4, s$8, 4, !1, i$18, r$12));
		return {
			code: o$9,
			pos: t$13
		};
	}
	function pe$6(a$13, t$13, e$4) {
		return new B$4(e$4, a$13 - t$13, a$13);
	}
	var br$4 = new Set([
		103,
		109,
		115,
		105,
		121,
		117,
		100,
		118
	]), O$3 = class {
		constructor(t$13) {
			let e$4 = t$13.startIndex || 0;
			this.type = t$13.type, this.value = t$13.value, this.start = e$4 + t$13.start, this.end = e$4 + t$13.end, this.loc = new se$3(t$13.startLoc, t$13.endLoc);
		}
	}, tt$5 = class extends Qe$4 {
		constructor(t$13, e$4) {
			super(), this.isLookahead = void 0, this.tokens = [], this.errorHandlers_readInt = {
				invalidDigit: (s$8, i$18, r$12, n$8) => this.optionFlags & 2048 ? (this.raise(p$2.InvalidDigit, pe$6(s$8, i$18, r$12), { radix: n$8 }), !0) : !1,
				numericSeparatorInEscapeSequence: this.errorBuilder(p$2.NumericSeparatorInEscapeSequence),
				unexpectedNumericSeparator: this.errorBuilder(p$2.UnexpectedNumericSeparator)
			}, this.errorHandlers_readCodePoint = Object.assign({}, this.errorHandlers_readInt, {
				invalidEscapeSequence: this.errorBuilder(p$2.InvalidEscapeSequence),
				invalidCodePoint: this.errorBuilder(p$2.InvalidCodePoint)
			}), this.errorHandlers_readStringContents_string = Object.assign({}, this.errorHandlers_readCodePoint, {
				strictNumericEscape: (s$8, i$18, r$12) => {
					this.recordStrictModeErrors(p$2.StrictNumericEscape, pe$6(s$8, i$18, r$12));
				},
				unterminated: (s$8, i$18, r$12) => {
					throw this.raise(p$2.UnterminatedString, pe$6(s$8 - 1, i$18, r$12));
				}
			}), this.errorHandlers_readStringContents_template = Object.assign({}, this.errorHandlers_readCodePoint, {
				strictNumericEscape: this.errorBuilder(p$2.StrictNumericEscape),
				unterminated: (s$8, i$18, r$12) => {
					throw this.raise(p$2.UnterminatedTemplate, pe$6(s$8, i$18, r$12));
				}
			}), this.state = new Ze$6(), this.state.init(t$13), this.input = e$4, this.length = e$4.length, this.comments = [], this.isLookahead = !1;
		}
		pushToken(t$13) {
			this.tokens.length = this.state.tokensLength, this.tokens.push(t$13), ++this.state.tokensLength;
		}
		next() {
			this.checkKeywordEscapes(), this.optionFlags & 256 && this.pushToken(new O$3(this.state)), this.state.lastTokEndLoc = this.state.endLoc, this.state.lastTokStartLoc = this.state.startLoc, this.nextToken();
		}
		eat(t$13) {
			return this.match(t$13) ? (this.next(), !0) : !1;
		}
		match(t$13) {
			return this.state.type === t$13;
		}
		createLookaheadState(t$13) {
			return {
				pos: t$13.pos,
				value: null,
				type: t$13.type,
				start: t$13.start,
				end: t$13.end,
				context: [this.curContext()],
				inType: t$13.inType,
				startLoc: t$13.startLoc,
				lastTokEndLoc: t$13.lastTokEndLoc,
				curLine: t$13.curLine,
				lineStart: t$13.lineStart,
				curPosition: t$13.curPosition
			};
		}
		lookahead() {
			let t$13 = this.state;
			this.state = this.createLookaheadState(t$13), this.isLookahead = !0, this.nextToken(), this.isLookahead = !1;
			let e$4 = this.state;
			return this.state = t$13, e$4;
		}
		nextTokenStart() {
			return this.nextTokenStartSince(this.state.pos);
		}
		nextTokenStartSince(t$13) {
			return $e$5.lastIndex = t$13, $e$5.test(this.input) ? $e$5.lastIndex : t$13;
		}
		lookaheadCharCode() {
			return this.lookaheadCharCodeSince(this.state.pos);
		}
		lookaheadCharCodeSince(t$13) {
			return this.input.charCodeAt(this.nextTokenStartSince(t$13));
		}
		nextTokenInLineStart() {
			return this.nextTokenInLineStartSince(this.state.pos);
		}
		nextTokenInLineStartSince(t$13) {
			return Ve$5.lastIndex = t$13, Ve$5.test(this.input) ? Ve$5.lastIndex : t$13;
		}
		lookaheadInLineCharCode() {
			return this.input.charCodeAt(this.nextTokenInLineStart());
		}
		codePointAtPos(t$13) {
			let e$4 = this.input.charCodeAt(t$13);
			if ((e$4 & 64512) === 55296 && ++t$13 < this.input.length) {
				let s$8 = this.input.charCodeAt(t$13);
				(s$8 & 64512) === 56320 && (e$4 = 65536 + ((e$4 & 1023) << 10) + (s$8 & 1023));
			}
			return e$4;
		}
		setStrict(t$13) {
			this.state.strict = t$13, t$13 && (this.state.strictErrors.forEach(([e$4, s$8]) => this.raise(e$4, s$8)), this.state.strictErrors.clear());
		}
		curContext() {
			return this.state.context[this.state.context.length - 1];
		}
		nextToken() {
			if (this.skipSpace(), this.state.start = this.state.pos, this.isLookahead || (this.state.startLoc = this.state.curPosition()), this.state.pos >= this.length) {
				this.finishToken(140);
				return;
			}
			this.getTokenFromCode(this.codePointAtPos(this.state.pos));
		}
		skipBlockComment(t$13) {
			let e$4;
			this.isLookahead || (e$4 = this.state.curPosition());
			let s$8 = this.state.pos, i$18 = this.input.indexOf(t$13, s$8 + 2);
			if (i$18 === -1) throw this.raise(p$2.UnterminatedComment, this.state.curPosition());
			for (this.state.pos = i$18 + t$13.length, be$5.lastIndex = s$8 + 2; be$5.test(this.input) && be$5.lastIndex <= i$18;) ++this.state.curLine, this.state.lineStart = be$5.lastIndex;
			if (this.isLookahead) return;
			let r$12 = {
				type: "CommentBlock",
				value: this.input.slice(s$8 + 2, i$18),
				start: this.sourceToOffsetPos(s$8),
				end: this.sourceToOffsetPos(i$18 + t$13.length),
				loc: new se$3(e$4, this.state.curPosition())
			};
			return this.optionFlags & 256 && this.pushToken(r$12), r$12;
		}
		skipLineComment(t$13) {
			let e$4 = this.state.pos, s$8;
			this.isLookahead || (s$8 = this.state.curPosition());
			let i$18 = this.input.charCodeAt(this.state.pos += t$13);
			if (this.state.pos < this.length) for (; !ee$4(i$18) && ++this.state.pos < this.length;) i$18 = this.input.charCodeAt(this.state.pos);
			if (this.isLookahead) return;
			let r$12 = this.state.pos, o$9 = {
				type: "CommentLine",
				value: this.input.slice(e$4 + t$13, r$12),
				start: this.sourceToOffsetPos(e$4),
				end: this.sourceToOffsetPos(r$12),
				loc: new se$3(s$8, this.state.curPosition())
			};
			return this.optionFlags & 256 && this.pushToken(o$9), o$9;
		}
		skipSpace() {
			let t$13 = this.state.pos, e$4 = this.optionFlags & 4096 ? [] : null;
			e: for (; this.state.pos < this.length;) {
				let s$8 = this.input.charCodeAt(this.state.pos);
				switch (s$8) {
					case 32:
					case 160:
					case 9:
						++this.state.pos;
						break;
					case 13: this.input.charCodeAt(this.state.pos + 1) === 10 && ++this.state.pos;
					case 10:
					case 8232:
					case 8233:
						++this.state.pos, ++this.state.curLine, this.state.lineStart = this.state.pos;
						break;
					case 47:
						switch (this.input.charCodeAt(this.state.pos + 1)) {
							case 42: {
								let i$18 = this.skipBlockComment("*/");
								i$18 !== void 0 && (this.addComment(i$18), e$4?.push(i$18));
								break;
							}
							case 47: {
								let i$18 = this.skipLineComment(2);
								i$18 !== void 0 && (this.addComment(i$18), e$4?.push(i$18));
								break;
							}
							default: break e;
						}
						break;
					default: if (mr$5(s$8)) ++this.state.pos;
					else if (s$8 === 45 && !this.inModule && this.optionFlags & 8192) {
						let i$18 = this.state.pos;
						if (this.input.charCodeAt(i$18 + 1) === 45 && this.input.charCodeAt(i$18 + 2) === 62 && (t$13 === 0 || this.state.lineStart > t$13)) {
							let r$12 = this.skipLineComment(3);
							r$12 !== void 0 && (this.addComment(r$12), e$4?.push(r$12));
						} else break e;
					} else if (s$8 === 60 && !this.inModule && this.optionFlags & 8192) {
						let i$18 = this.state.pos;
						if (this.input.charCodeAt(i$18 + 1) === 33 && this.input.charCodeAt(i$18 + 2) === 45 && this.input.charCodeAt(i$18 + 3) === 45) {
							let r$12 = this.skipLineComment(4);
							r$12 !== void 0 && (this.addComment(r$12), e$4?.push(r$12));
						} else break e;
					} else break e;
				}
			}
			if ((e$4 == null ? void 0 : e$4.length) > 0) {
				let s$8 = this.state.pos, i$18 = {
					start: this.sourceToOffsetPos(t$13),
					end: this.sourceToOffsetPos(s$8),
					comments: e$4,
					leadingNode: null,
					trailingNode: null,
					containingNode: null
				};
				this.state.commentStack.push(i$18);
			}
		}
		finishToken(t$13, e$4) {
			this.state.end = this.state.pos, this.state.endLoc = this.state.curPosition();
			let s$8 = this.state.type;
			this.state.type = t$13, this.state.value = e$4, this.isLookahead || this.updateContext(s$8);
		}
		replaceToken(t$13) {
			this.state.type = t$13, this.updateContext();
		}
		readToken_numberSign() {
			if (this.state.pos === 0 && this.readToken_interpreter()) return;
			let t$13 = this.state.pos + 1, e$4 = this.codePointAtPos(t$13);
			if (e$4 >= 48 && e$4 <= 57) throw this.raise(p$2.UnexpectedDigitAfterHash, this.state.curPosition());
			if (e$4 === 123 || e$4 === 91 && this.hasPlugin("recordAndTuple")) {
				if (this.expectPlugin("recordAndTuple"), this.getPluginOption("recordAndTuple", "syntaxType") === "bar") throw this.raise(e$4 === 123 ? p$2.RecordExpressionHashIncorrectStartSyntaxType : p$2.TupleExpressionHashIncorrectStartSyntaxType, this.state.curPosition());
				this.state.pos += 2, e$4 === 123 ? this.finishToken(7) : this.finishToken(1);
			} else U$4(e$4) ? (++this.state.pos, this.finishToken(139, this.readWord1(e$4))) : e$4 === 92 ? (++this.state.pos, this.finishToken(139, this.readWord1())) : this.finishOp(27, 1);
		}
		readToken_dot() {
			let t$13 = this.input.charCodeAt(this.state.pos + 1);
			if (t$13 >= 48 && t$13 <= 57) {
				this.readNumber(!0);
				return;
			}
			t$13 === 46 && this.input.charCodeAt(this.state.pos + 2) === 46 ? (this.state.pos += 3, this.finishToken(21)) : (++this.state.pos, this.finishToken(16));
		}
		readToken_slash() {
			this.input.charCodeAt(this.state.pos + 1) === 61 ? this.finishOp(31, 2) : this.finishOp(56, 1);
		}
		readToken_interpreter() {
			if (this.state.pos !== 0 || this.length < 2) return !1;
			let t$13 = this.input.charCodeAt(this.state.pos + 1);
			if (t$13 !== 33) return !1;
			let e$4 = this.state.pos;
			for (this.state.pos += 1; !ee$4(t$13) && ++this.state.pos < this.length;) t$13 = this.input.charCodeAt(this.state.pos);
			let s$8 = this.input.slice(e$4 + 2, this.state.pos);
			return this.finishToken(28, s$8), !0;
		}
		readToken_mult_modulo(t$13) {
			let e$4 = t$13 === 42 ? 55 : 54, s$8 = 1, i$18 = this.input.charCodeAt(this.state.pos + 1);
			t$13 === 42 && i$18 === 42 && (s$8++, i$18 = this.input.charCodeAt(this.state.pos + 2), e$4 = 57), i$18 === 61 && !this.state.inType && (s$8++, e$4 = t$13 === 37 ? 33 : 30), this.finishOp(e$4, s$8);
		}
		readToken_pipe_amp(t$13) {
			let e$4 = this.input.charCodeAt(this.state.pos + 1);
			if (e$4 === t$13) {
				this.input.charCodeAt(this.state.pos + 2) === 61 ? this.finishOp(30, 3) : this.finishOp(t$13 === 124 ? 41 : 42, 2);
				return;
			}
			if (t$13 === 124) {
				if (e$4 === 62) {
					this.finishOp(39, 2);
					return;
				}
				if (this.hasPlugin("recordAndTuple") && e$4 === 125) {
					if (this.getPluginOption("recordAndTuple", "syntaxType") !== "bar") throw this.raise(p$2.RecordExpressionBarIncorrectEndSyntaxType, this.state.curPosition());
					this.state.pos += 2, this.finishToken(9);
					return;
				}
				if (this.hasPlugin("recordAndTuple") && e$4 === 93) {
					if (this.getPluginOption("recordAndTuple", "syntaxType") !== "bar") throw this.raise(p$2.TupleExpressionBarIncorrectEndSyntaxType, this.state.curPosition());
					this.state.pos += 2, this.finishToken(4);
					return;
				}
			}
			if (e$4 === 61) {
				this.finishOp(30, 2);
				return;
			}
			this.finishOp(t$13 === 124 ? 43 : 45, 1);
		}
		readToken_caret() {
			let t$13 = this.input.charCodeAt(this.state.pos + 1);
			t$13 === 61 && !this.state.inType ? this.finishOp(32, 2) : t$13 === 94 && this.hasPlugin(["pipelineOperator", {
				proposal: "hack",
				topicToken: "^^"
			}]) ? (this.finishOp(37, 2), this.input.codePointAt(this.state.pos) === 94 && this.unexpected()) : this.finishOp(44, 1);
		}
		readToken_atSign() {
			this.input.charCodeAt(this.state.pos + 1) === 64 && this.hasPlugin(["pipelineOperator", {
				proposal: "hack",
				topicToken: "@@"
			}]) ? this.finishOp(38, 2) : this.finishOp(26, 1);
		}
		readToken_plus_min(t$13) {
			let e$4 = this.input.charCodeAt(this.state.pos + 1);
			if (e$4 === t$13) {
				this.finishOp(34, 2);
				return;
			}
			e$4 === 61 ? this.finishOp(30, 2) : this.finishOp(53, 1);
		}
		readToken_lt() {
			let { pos: t$13 } = this.state, e$4 = this.input.charCodeAt(t$13 + 1);
			if (e$4 === 60) {
				if (this.input.charCodeAt(t$13 + 2) === 61) {
					this.finishOp(30, 3);
					return;
				}
				this.finishOp(51, 2);
				return;
			}
			if (e$4 === 61) {
				this.finishOp(49, 2);
				return;
			}
			this.finishOp(47, 1);
		}
		readToken_gt() {
			let { pos: t$13 } = this.state, e$4 = this.input.charCodeAt(t$13 + 1);
			if (e$4 === 62) {
				let s$8 = this.input.charCodeAt(t$13 + 2) === 62 ? 3 : 2;
				if (this.input.charCodeAt(t$13 + s$8) === 61) {
					this.finishOp(30, s$8 + 1);
					return;
				}
				this.finishOp(52, s$8);
				return;
			}
			if (e$4 === 61) {
				this.finishOp(49, 2);
				return;
			}
			this.finishOp(48, 1);
		}
		readToken_eq_excl(t$13) {
			let e$4 = this.input.charCodeAt(this.state.pos + 1);
			if (e$4 === 61) {
				this.finishOp(46, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);
				return;
			}
			if (t$13 === 61 && e$4 === 62) {
				this.state.pos += 2, this.finishToken(19);
				return;
			}
			this.finishOp(t$13 === 61 ? 29 : 35, 1);
		}
		readToken_question() {
			let t$13 = this.input.charCodeAt(this.state.pos + 1), e$4 = this.input.charCodeAt(this.state.pos + 2);
			t$13 === 63 ? e$4 === 61 ? this.finishOp(30, 3) : this.finishOp(40, 2) : t$13 === 46 && !(e$4 >= 48 && e$4 <= 57) ? (this.state.pos += 2, this.finishToken(18)) : (++this.state.pos, this.finishToken(17));
		}
		getTokenFromCode(t$13) {
			switch (t$13) {
				case 46:
					this.readToken_dot();
					return;
				case 40:
					++this.state.pos, this.finishToken(10);
					return;
				case 41:
					++this.state.pos, this.finishToken(11);
					return;
				case 59:
					++this.state.pos, this.finishToken(13);
					return;
				case 44:
					++this.state.pos, this.finishToken(12);
					return;
				case 91:
					if (this.hasPlugin("recordAndTuple") && this.input.charCodeAt(this.state.pos + 1) === 124) {
						if (this.getPluginOption("recordAndTuple", "syntaxType") !== "bar") throw this.raise(p$2.TupleExpressionBarIncorrectStartSyntaxType, this.state.curPosition());
						this.state.pos += 2, this.finishToken(2);
					} else ++this.state.pos, this.finishToken(0);
					return;
				case 93:
					++this.state.pos, this.finishToken(3);
					return;
				case 123:
					if (this.hasPlugin("recordAndTuple") && this.input.charCodeAt(this.state.pos + 1) === 124) {
						if (this.getPluginOption("recordAndTuple", "syntaxType") !== "bar") throw this.raise(p$2.RecordExpressionBarIncorrectStartSyntaxType, this.state.curPosition());
						this.state.pos += 2, this.finishToken(6);
					} else ++this.state.pos, this.finishToken(5);
					return;
				case 125:
					++this.state.pos, this.finishToken(8);
					return;
				case 58:
					this.hasPlugin("functionBind") && this.input.charCodeAt(this.state.pos + 1) === 58 ? this.finishOp(15, 2) : (++this.state.pos, this.finishToken(14));
					return;
				case 63:
					this.readToken_question();
					return;
				case 96:
					this.readTemplateToken();
					return;
				case 48: {
					let e$4 = this.input.charCodeAt(this.state.pos + 1);
					if (e$4 === 120 || e$4 === 88) {
						this.readRadixNumber(16);
						return;
					}
					if (e$4 === 111 || e$4 === 79) {
						this.readRadixNumber(8);
						return;
					}
					if (e$4 === 98 || e$4 === 66) {
						this.readRadixNumber(2);
						return;
					}
				}
				case 49:
				case 50:
				case 51:
				case 52:
				case 53:
				case 54:
				case 55:
				case 56:
				case 57:
					this.readNumber(!1);
					return;
				case 34:
				case 39:
					this.readString(t$13);
					return;
				case 47:
					this.readToken_slash();
					return;
				case 37:
				case 42:
					this.readToken_mult_modulo(t$13);
					return;
				case 124:
				case 38:
					this.readToken_pipe_amp(t$13);
					return;
				case 94:
					this.readToken_caret();
					return;
				case 43:
				case 45:
					this.readToken_plus_min(t$13);
					return;
				case 60:
					this.readToken_lt();
					return;
				case 62:
					this.readToken_gt();
					return;
				case 61:
				case 33:
					this.readToken_eq_excl(t$13);
					return;
				case 126:
					this.finishOp(36, 1);
					return;
				case 64:
					this.readToken_atSign();
					return;
				case 35:
					this.readToken_numberSign();
					return;
				case 92:
					this.readWord();
					return;
				default: if (U$4(t$13)) {
					this.readWord(t$13);
					return;
				}
			}
			throw this.raise(p$2.InvalidOrUnexpectedToken, this.state.curPosition(), { unexpected: String.fromCodePoint(t$13) });
		}
		finishOp(t$13, e$4) {
			let s$8 = this.input.slice(this.state.pos, this.state.pos + e$4);
			this.state.pos += e$4, this.finishToken(t$13, s$8);
		}
		readRegexp() {
			let t$13 = this.state.startLoc, e$4 = this.state.start + 1, s$8, i$18, { pos: r$12 } = this.state;
			for (;; ++r$12) {
				if (r$12 >= this.length) throw this.raise(p$2.UnterminatedRegExp, D$4(t$13, 1));
				let h$3 = this.input.charCodeAt(r$12);
				if (ee$4(h$3)) throw this.raise(p$2.UnterminatedRegExp, D$4(t$13, 1));
				if (s$8) s$8 = !1;
				else {
					if (h$3 === 91) i$18 = !0;
					else if (h$3 === 93 && i$18) i$18 = !1;
					else if (h$3 === 47 && !i$18) break;
					s$8 = h$3 === 92;
				}
			}
			let n$8 = this.input.slice(e$4, r$12);
			++r$12;
			let o$9 = "", l$10 = () => D$4(t$13, r$12 + 2 - e$4);
			for (; r$12 < this.length;) {
				let h$3 = this.codePointAtPos(r$12), c$3 = String.fromCharCode(h$3);
				if (br$4.has(h$3)) h$3 === 118 ? o$9.includes("u") && this.raise(p$2.IncompatibleRegExpUVFlags, l$10()) : h$3 === 117 && o$9.includes("v") && this.raise(p$2.IncompatibleRegExpUVFlags, l$10()), o$9.includes(c$3) && this.raise(p$2.DuplicateRegExpFlags, l$10());
				else if (Z$4(h$3) || h$3 === 92) this.raise(p$2.MalformedRegExpFlags, l$10());
				else break;
				++r$12, o$9 += c$3;
			}
			this.state.pos = r$12, this.finishToken(138, {
				pattern: n$8,
				flags: o$9
			});
		}
		readInt(t$13, e$4, s$8 = !1, i$18 = !0) {
			let { n: r$12, pos: n$8 } = Ds$2(this.input, this.state.pos, this.state.lineStart, this.state.curLine, t$13, e$4, s$8, i$18, this.errorHandlers_readInt, !1);
			return this.state.pos = n$8, r$12;
		}
		readRadixNumber(t$13) {
			let e$4 = this.state.pos, s$8 = this.state.curPosition(), i$18 = !1;
			this.state.pos += 2;
			let r$12 = this.readInt(t$13);
			r$12 ?? this.raise(p$2.InvalidDigit, D$4(s$8, 2), { radix: t$13 });
			let n$8 = this.input.charCodeAt(this.state.pos);
			if (n$8 === 110) ++this.state.pos, i$18 = !0;
			else if (n$8 === 109) throw this.raise(p$2.InvalidDecimal, s$8);
			if (U$4(this.codePointAtPos(this.state.pos))) throw this.raise(p$2.NumberIdentifier, this.state.curPosition());
			if (i$18) {
				let o$9 = this.input.slice(e$4, this.state.pos).replace(/[_n]/g, "");
				this.finishToken(136, o$9);
				return;
			}
			this.finishToken(135, r$12);
		}
		readNumber(t$13) {
			let e$4 = this.state.pos, s$8 = this.state.curPosition(), i$18 = !1, r$12 = !1, n$8 = !1, o$9 = !1;
			!t$13 && this.readInt(10) === null && this.raise(p$2.InvalidNumber, this.state.curPosition());
			let l$10 = this.state.pos - e$4 >= 2 && this.input.charCodeAt(e$4) === 48;
			if (l$10) {
				let d$14 = this.input.slice(e$4, this.state.pos);
				if (this.recordStrictModeErrors(p$2.StrictOctalLiteral, s$8), !this.state.strict) {
					let x$3 = d$14.indexOf("_");
					x$3 > 0 && this.raise(p$2.ZeroDigitNumericSeparator, D$4(s$8, x$3));
				}
				o$9 = l$10 && !/[89]/.test(d$14);
			}
			let h$3 = this.input.charCodeAt(this.state.pos);
			if (h$3 === 46 && !o$9 && (++this.state.pos, this.readInt(10), i$18 = !0, h$3 = this.input.charCodeAt(this.state.pos)), (h$3 === 69 || h$3 === 101) && !o$9 && (h$3 = this.input.charCodeAt(++this.state.pos), (h$3 === 43 || h$3 === 45) && ++this.state.pos, this.readInt(10) === null && this.raise(p$2.InvalidOrMissingExponent, s$8), i$18 = !0, n$8 = !0, h$3 = this.input.charCodeAt(this.state.pos)), h$3 === 110 && ((i$18 || l$10) && this.raise(p$2.InvalidBigIntLiteral, s$8), ++this.state.pos, r$12 = !0), h$3 === 109) {
				this.expectPlugin("decimal", this.state.curPosition()), (n$8 || l$10) && this.raise(p$2.InvalidDecimal, s$8), ++this.state.pos;
				var c$3 = !0;
			}
			if (U$4(this.codePointAtPos(this.state.pos))) throw this.raise(p$2.NumberIdentifier, this.state.curPosition());
			let u$14 = this.input.slice(e$4, this.state.pos).replace(/[_mn]/g, "");
			if (r$12) {
				this.finishToken(136, u$14);
				return;
			}
			if (c$3) {
				this.finishToken(137, u$14);
				return;
			}
			let f$3 = o$9 ? parseInt(u$14, 8) : parseFloat(u$14);
			this.finishToken(135, f$3);
		}
		readCodePoint(t$13) {
			let { code: e$4, pos: s$8 } = Ms$3(this.input, this.state.pos, this.state.lineStart, this.state.curLine, t$13, this.errorHandlers_readCodePoint);
			return this.state.pos = s$8, e$4;
		}
		readString(t$13) {
			let { str: e$4, pos: s$8, curLine: i$18, lineStart: r$12 } = xs$3(t$13 === 34 ? "double" : "single", this.input, this.state.pos + 1, this.state.lineStart, this.state.curLine, this.errorHandlers_readStringContents_string);
			this.state.pos = s$8 + 1, this.state.lineStart = r$12, this.state.curLine = i$18, this.finishToken(134, e$4);
		}
		readTemplateContinuation() {
			this.match(8) || this.unexpected(null, 8), this.state.pos--, this.readTemplateToken();
		}
		readTemplateToken() {
			let t$13 = this.input[this.state.pos], { str: e$4, firstInvalidLoc: s$8, pos: i$18, curLine: r$12, lineStart: n$8 } = xs$3("template", this.input, this.state.pos + 1, this.state.lineStart, this.state.curLine, this.errorHandlers_readStringContents_template);
			this.state.pos = i$18 + 1, this.state.lineStart = n$8, this.state.curLine = r$12, s$8 && (this.state.firstInvalidTemplateEscapePos = new B$4(s$8.curLine, s$8.pos - s$8.lineStart, this.sourceToOffsetPos(s$8.pos))), this.input.codePointAt(i$18) === 96 ? this.finishToken(24, s$8 ? null : t$13 + e$4 + "`") : (this.state.pos++, this.finishToken(25, s$8 ? null : t$13 + e$4 + "${"));
		}
		recordStrictModeErrors(t$13, e$4) {
			let s$8 = e$4.index;
			this.state.strict && !this.state.strictErrors.has(s$8) ? this.raise(t$13, e$4) : this.state.strictErrors.set(s$8, [t$13, e$4]);
		}
		readWord1(t$13) {
			this.state.containsEsc = !1;
			let e$4 = "", s$8 = this.state.pos, i$18 = this.state.pos;
			for (t$13 !== void 0 && (this.state.pos += t$13 <= 65535 ? 1 : 2); this.state.pos < this.length;) {
				let r$12 = this.codePointAtPos(this.state.pos);
				if (Z$4(r$12)) this.state.pos += r$12 <= 65535 ? 1 : 2;
				else if (r$12 === 92) {
					this.state.containsEsc = !0, e$4 += this.input.slice(i$18, this.state.pos);
					let n$8 = this.state.curPosition(), o$9 = this.state.pos === s$8 ? U$4 : Z$4;
					if (this.input.charCodeAt(++this.state.pos) !== 117) {
						this.raise(p$2.MissingUnicodeEscape, this.state.curPosition()), i$18 = this.state.pos - 1;
						continue;
					}
					++this.state.pos;
					let l$10 = this.readCodePoint(!0);
					l$10 !== null && (o$9(l$10) || this.raise(p$2.EscapedCharNotAnIdentifier, n$8), e$4 += String.fromCodePoint(l$10)), i$18 = this.state.pos;
				} else break;
			}
			return e$4 + this.input.slice(i$18, this.state.pos);
		}
		readWord(t$13) {
			let e$4 = this.readWord1(t$13), s$8 = pt$4.get(e$4);
			s$8 !== void 0 ? this.finishToken(s$8, H$6(s$8)) : this.finishToken(132, e$4);
		}
		checkKeywordEscapes() {
			let { type: t$13 } = this.state;
			xt$4(t$13) && this.state.containsEsc && this.raise(p$2.InvalidEscapedReservedWord, this.state.startLoc, { reservedWord: H$6(t$13) });
		}
		raise(t$13, e$4, s$8 = {}) {
			let i$18 = e$4 instanceof B$4 ? e$4 : e$4.loc.start, r$12 = t$13(i$18, s$8);
			if (!(this.optionFlags & 2048)) throw r$12;
			return this.isLookahead || this.state.errors.push(r$12), r$12;
		}
		raiseOverwrite(t$13, e$4, s$8 = {}) {
			let i$18 = e$4 instanceof B$4 ? e$4 : e$4.loc.start, r$12 = i$18.index, n$8 = this.state.errors;
			for (let o$9 = n$8.length - 1; o$9 >= 0; o$9--) {
				let l$10 = n$8[o$9];
				if (l$10.loc.index === r$12) return n$8[o$9] = t$13(i$18, s$8);
				if (l$10.loc.index < r$12) break;
			}
			return this.raise(t$13, e$4, s$8);
		}
		updateContext(t$13) {}
		unexpected(t$13, e$4) {
			throw this.raise(p$2.UnexpectedToken, t$13 ?? this.state.startLoc, { expected: e$4 ? H$6(e$4) : null });
		}
		expectPlugin(t$13, e$4) {
			if (this.hasPlugin(t$13)) return !0;
			throw this.raise(p$2.MissingPlugin, e$4 ?? this.state.startLoc, { missingPlugin: [t$13] });
		}
		expectOnePlugin(t$13) {
			if (!t$13.some((e$4) => this.hasPlugin(e$4))) throw this.raise(p$2.MissingOneOfPlugins, this.state.startLoc, { missingPlugin: t$13 });
		}
		errorBuilder(t$13) {
			return (e$4, s$8, i$18) => {
				this.raise(t$13, pe$6(e$4, s$8, i$18));
			};
		}
	}, st$5 = class {
		constructor() {
			this.privateNames = /* @__PURE__ */ new Set(), this.loneAccessors = /* @__PURE__ */ new Map(), this.undefinedPrivateNames = /* @__PURE__ */ new Map();
		}
	}, it$6 = class {
		constructor(t$13) {
			this.parser = void 0, this.stack = [], this.undefinedPrivateNames = /* @__PURE__ */ new Map(), this.parser = t$13;
		}
		current() {
			return this.stack[this.stack.length - 1];
		}
		enter() {
			this.stack.push(new st$5());
		}
		exit() {
			let t$13 = this.stack.pop(), e$4 = this.current();
			for (let [s$8, i$18] of Array.from(t$13.undefinedPrivateNames)) e$4 ? e$4.undefinedPrivateNames.has(s$8) || e$4.undefinedPrivateNames.set(s$8, i$18) : this.parser.raise(p$2.InvalidPrivateFieldResolution, i$18, { identifierName: s$8 });
		}
		declarePrivateName(t$13, e$4, s$8) {
			let { privateNames: i$18, loneAccessors: r$12, undefinedPrivateNames: n$8 } = this.current(), o$9 = i$18.has(t$13);
			if (e$4 & 3) {
				let l$10 = o$9 && r$12.get(t$13);
				if (l$10) {
					let h$3 = l$10 & 4, c$3 = e$4 & 4, u$14 = l$10 & 3, f$3 = e$4 & 3;
					o$9 = u$14 === f$3 || h$3 !== c$3, o$9 || r$12.delete(t$13);
				} else o$9 || r$12.set(t$13, e$4);
			}
			o$9 && this.parser.raise(p$2.PrivateNameRedeclaration, s$8, { identifierName: t$13 }), i$18.add(t$13), n$8.delete(t$13);
		}
		usePrivateName(t$13, e$4) {
			let s$8;
			for (s$8 of this.stack) if (s$8.privateNames.has(t$13)) return;
			s$8 ? s$8.undefinedPrivateNames.set(t$13, e$4) : this.parser.raise(p$2.InvalidPrivateFieldResolution, e$4, { identifierName: t$13 });
		}
	}, ie$6 = class {
		constructor(t$13 = 0) {
			this.type = t$13;
		}
		canBeArrowParameterDeclaration() {
			return this.type === 2 || this.type === 1;
		}
		isCertainlyParameterDeclaration() {
			return this.type === 3;
		}
	}, Ne$5 = class extends ie$6 {
		constructor(t$13) {
			super(t$13), this.declarationErrors = /* @__PURE__ */ new Map();
		}
		recordDeclarationError(t$13, e$4) {
			let s$8 = e$4.index;
			this.declarationErrors.set(s$8, [t$13, e$4]);
		}
		clearDeclarationError(t$13) {
			this.declarationErrors.delete(t$13);
		}
		iterateErrors(t$13) {
			this.declarationErrors.forEach(t$13);
		}
	}, rt$5 = class {
		constructor(t$13) {
			this.parser = void 0, this.stack = [new ie$6()], this.parser = t$13;
		}
		enter(t$13) {
			this.stack.push(t$13);
		}
		exit() {
			this.stack.pop();
		}
		recordParameterInitializerError(t$13, e$4) {
			let s$8 = e$4.loc.start, { stack: i$18 } = this, r$12 = i$18.length - 1, n$8 = i$18[r$12];
			for (; !n$8.isCertainlyParameterDeclaration();) {
				if (n$8.canBeArrowParameterDeclaration()) n$8.recordDeclarationError(t$13, s$8);
				else return;
				n$8 = i$18[--r$12];
			}
			this.parser.raise(t$13, s$8);
		}
		recordArrowParameterBindingError(t$13, e$4) {
			let { stack: s$8 } = this, i$18 = s$8[s$8.length - 1], r$12 = e$4.loc.start;
			if (i$18.isCertainlyParameterDeclaration()) this.parser.raise(t$13, r$12);
			else if (i$18.canBeArrowParameterDeclaration()) i$18.recordDeclarationError(t$13, r$12);
			else return;
		}
		recordAsyncArrowParametersError(t$13) {
			let { stack: e$4 } = this, s$8 = e$4.length - 1, i$18 = e$4[s$8];
			for (; i$18.canBeArrowParameterDeclaration();) i$18.type === 2 && i$18.recordDeclarationError(p$2.AwaitBindingIdentifier, t$13), i$18 = e$4[--s$8];
		}
		validateAsPattern() {
			let { stack: t$13 } = this, e$4 = t$13[t$13.length - 1];
			e$4.canBeArrowParameterDeclaration() && e$4.iterateErrors(([s$8, i$18]) => {
				this.parser.raise(s$8, i$18);
				let r$12 = t$13.length - 2, n$8 = t$13[r$12];
				for (; n$8.canBeArrowParameterDeclaration();) n$8.clearDeclarationError(i$18.index), n$8 = t$13[--r$12];
			});
		}
	};
	function Ar$5() {
		return new ie$6(3);
	}
	function Sr$5() {
		return new Ne$5(1);
	}
	function Er$5() {
		return new Ne$5(2);
	}
	function Os$2() {
		return new ie$6();
	}
	var at$4 = class extends tt$5 {
		addExtra(t$13, e$4, s$8, i$18 = !0) {
			if (!t$13) return;
			let { extra: r$12 } = t$13;
			r$12 ?? (r$12 = {}, t$13.extra = r$12), i$18 ? r$12[e$4] = s$8 : Object.defineProperty(r$12, e$4, {
				enumerable: i$18,
				value: s$8
			});
		}
		isContextual(t$13) {
			return this.state.type === t$13 && !this.state.containsEsc;
		}
		isUnparsedContextual(t$13, e$4) {
			if (this.input.startsWith(e$4, t$13)) {
				let s$8 = this.input.charCodeAt(t$13 + e$4.length);
				return !(Z$4(s$8) || (s$8 & 64512) === 55296);
			}
			return !1;
		}
		isLookaheadContextual(t$13) {
			let e$4 = this.nextTokenStart();
			return this.isUnparsedContextual(e$4, t$13);
		}
		eatContextual(t$13) {
			return this.isContextual(t$13) ? (this.next(), !0) : !1;
		}
		expectContextual(t$13, e$4) {
			if (!this.eatContextual(t$13)) {
				if (e$4 != null) throw this.raise(e$4, this.state.startLoc);
				this.unexpected(null, t$13);
			}
		}
		canInsertSemicolon() {
			return this.match(140) || this.match(8) || this.hasPrecedingLineBreak();
		}
		hasPrecedingLineBreak() {
			return ms$2(this.input, this.offsetToSourcePos(this.state.lastTokEndLoc.index), this.state.start);
		}
		hasFollowingLineBreak() {
			return ms$2(this.input, this.state.end, this.nextTokenStart());
		}
		isLineTerminator() {
			return this.eat(13) || this.canInsertSemicolon();
		}
		semicolon(t$13 = !0) {
			(t$13 ? this.isLineTerminator() : this.eat(13)) || this.raise(p$2.MissingSemicolon, this.state.lastTokEndLoc);
		}
		expect(t$13, e$4) {
			this.eat(t$13) || this.unexpected(e$4, t$13);
		}
		tryParse(t$13, e$4 = this.state.clone()) {
			let s$8 = { node: null };
			try {
				let i$18 = t$13((r$12 = null) => {
					throw s$8.node = r$12, s$8;
				});
				if (this.state.errors.length > e$4.errors.length) {
					let r$12 = this.state;
					return this.state = e$4, this.state.tokensLength = r$12.tokensLength, {
						node: i$18,
						error: r$12.errors[e$4.errors.length],
						thrown: !1,
						aborted: !1,
						failState: r$12
					};
				}
				return {
					node: i$18,
					error: null,
					thrown: !1,
					aborted: !1,
					failState: null
				};
			} catch (i$18) {
				let r$12 = this.state;
				if (this.state = e$4, i$18 instanceof SyntaxError) return {
					node: null,
					error: i$18,
					thrown: !0,
					aborted: !1,
					failState: r$12
				};
				if (i$18 === s$8) return {
					node: s$8.node,
					error: null,
					thrown: !1,
					aborted: !0,
					failState: r$12
				};
				throw i$18;
			}
		}
		checkExpressionErrors(t$13, e$4) {
			if (!t$13) return !1;
			let { shorthandAssignLoc: s$8, doubleProtoLoc: i$18, privateKeyLoc: r$12, optionalParametersLoc: n$8 } = t$13, o$9 = !!s$8 || !!i$18 || !!n$8 || !!r$12;
			if (!e$4) return o$9;
			s$8 != null && this.raise(p$2.InvalidCoverInitializedName, s$8), i$18 != null && this.raise(p$2.DuplicateProto, i$18), r$12 != null && this.raise(p$2.UnexpectedPrivateField, r$12), n$8 != null && this.unexpected(n$8);
		}
		isLiteralPropertyName() {
			return Es$2(this.state.type);
		}
		isPrivateName(t$13) {
			return t$13.type === "PrivateName";
		}
		getPrivateNameSV(t$13) {
			return t$13.id.name;
		}
		hasPropertyAsPrivateName(t$13) {
			return (t$13.type === "MemberExpression" || t$13.type === "OptionalMemberExpression") && this.isPrivateName(t$13.property);
		}
		isObjectProperty(t$13) {
			return t$13.type === "ObjectProperty";
		}
		isObjectMethod(t$13) {
			return t$13.type === "ObjectMethod";
		}
		initializeScopes(t$13 = this.options.sourceType === "module") {
			let e$4 = this.state.labels;
			this.state.labels = [];
			let s$8 = this.exportedIdentifiers;
			this.exportedIdentifiers = /* @__PURE__ */ new Set();
			let i$18 = this.inModule;
			this.inModule = t$13;
			let r$12 = this.scope;
			this.scope = new (this.getScopeHandler())(this, t$13);
			let o$9 = this.prodParam;
			this.prodParam = new Ge$5();
			let l$10 = this.classScope;
			this.classScope = new it$6(this);
			let h$3 = this.expressionScope;
			return this.expressionScope = new rt$5(this), () => {
				this.state.labels = e$4, this.exportedIdentifiers = s$8, this.inModule = i$18, this.scope = r$12, this.prodParam = o$9, this.classScope = l$10, this.expressionScope = h$3;
			};
		}
		enterInitialScopes() {
			let t$13 = 0;
			(this.inModule || this.optionFlags & 1) && (t$13 |= 2), this.optionFlags & 32 && (t$13 |= 1), this.optionFlags & 2 && (t$13 |= 4);
			let e$4 = 1;
			this.optionFlags & 4 && (e$4 |= 512), this.scope.enter(e$4), this.prodParam.enter(t$13);
		}
		checkDestructuringPrivate(t$13) {
			let { privateKeyLoc: e$4 } = t$13;
			e$4 !== null && this.expectPlugin("destructuringPrivate", e$4);
		}
	}, te$5 = class {
		constructor() {
			this.shorthandAssignLoc = null, this.doubleProtoLoc = null, this.privateKeyLoc = null, this.optionalParametersLoc = null;
		}
	}, re$5 = class {
		constructor(t$13, e$4, s$8) {
			this.type = "", this.start = e$4, this.end = 0, this.loc = new se$3(s$8), (t$13 == null ? void 0 : t$13.optionFlags) & 128 && (this.range = [e$4, 0]), t$13 != null && t$13.filename && (this.loc.filename = t$13.filename);
		}
	}, nt$4 = re$5.prototype;
	nt$4.__clone = function() {
		let a$13 = new re$5(void 0, this.start, this.loc.start), t$13 = Object.keys(this);
		for (let e$4 = 0, s$8 = t$13.length; e$4 < s$8; e$4++) {
			let i$18 = t$13[e$4];
			i$18 !== "leadingComments" && i$18 !== "trailingComments" && i$18 !== "innerComments" && (a$13[i$18] = this[i$18]);
		}
		return a$13;
	};
	var ot$6 = class extends at$4 {
		startNode() {
			let t$13 = this.state.startLoc;
			return new re$5(this, t$13.index, t$13);
		}
		startNodeAt(t$13) {
			return new re$5(this, t$13.index, t$13);
		}
		startNodeAtNode(t$13) {
			return this.startNodeAt(t$13.loc.start);
		}
		finishNode(t$13, e$4) {
			return this.finishNodeAt(t$13, e$4, this.state.lastTokEndLoc);
		}
		finishNodeAt(t$13, e$4, s$8) {
			return t$13.type = e$4, t$13.end = s$8.index, t$13.loc.end = s$8, this.optionFlags & 128 && (t$13.range[1] = s$8.index), this.optionFlags & 4096 && this.processComment(t$13), t$13;
		}
		resetStartLocation(t$13, e$4) {
			t$13.start = e$4.index, t$13.loc.start = e$4, this.optionFlags & 128 && (t$13.range[0] = e$4.index);
		}
		resetEndLocation(t$13, e$4 = this.state.lastTokEndLoc) {
			t$13.end = e$4.index, t$13.loc.end = e$4, this.optionFlags & 128 && (t$13.range[1] = e$4.index);
		}
		resetStartLocationFromNode(t$13, e$4) {
			this.resetStartLocation(t$13, e$4.loc.start);
		}
		castNodeTo(t$13, e$4) {
			return t$13.type = e$4, t$13;
		}
		cloneIdentifier(t$13) {
			let { type: e$4, start: s$8, end: i$18, loc: r$12, range: n$8, name: o$9 } = t$13, l$10 = Object.create(nt$4);
			return l$10.type = e$4, l$10.start = s$8, l$10.end = i$18, l$10.loc = r$12, l$10.range = n$8, l$10.name = o$9, t$13.extra && (l$10.extra = t$13.extra), l$10;
		}
		cloneStringLiteral(t$13) {
			let { type: e$4, start: s$8, end: i$18, loc: r$12, range: n$8, extra: o$9 } = t$13, l$10 = Object.create(nt$4);
			return l$10.type = e$4, l$10.start = s$8, l$10.end = i$18, l$10.loc = r$12, l$10.range = n$8, l$10.extra = o$9, l$10.value = t$13.value, l$10;
		}
	}, Fs$4 = (a$13) => a$13.type === "ParenthesizedExpression" ? Fs$4(a$13.expression) : a$13, lt$3 = class extends ot$6 {
		toAssignable(t$13, e$4 = !1) {
			var s$8, i$18;
			let r$12;
			switch ((t$13.type === "ParenthesizedExpression" || (s$8 = t$13.extra) != null && s$8.parenthesized) && (r$12 = Fs$4(t$13), e$4 ? r$12.type === "Identifier" ? this.expressionScope.recordArrowParameterBindingError(p$2.InvalidParenthesizedAssignment, t$13) : r$12.type !== "MemberExpression" && !this.isOptionalMemberExpression(r$12) && this.raise(p$2.InvalidParenthesizedAssignment, t$13) : this.raise(p$2.InvalidParenthesizedAssignment, t$13)), t$13.type) {
				case "Identifier":
				case "ObjectPattern":
				case "ArrayPattern":
				case "AssignmentPattern":
				case "RestElement": break;
				case "ObjectExpression":
					this.castNodeTo(t$13, "ObjectPattern");
					for (let o$9 = 0, l$10 = t$13.properties.length, h$3 = l$10 - 1; o$9 < l$10; o$9++) {
						var n$8;
						let c$3 = t$13.properties[o$9], u$14 = o$9 === h$3;
						this.toAssignableObjectExpressionProp(c$3, u$14, e$4), u$14 && c$3.type === "RestElement" && (n$8 = t$13.extra) != null && n$8.trailingCommaLoc && this.raise(p$2.RestTrailingComma, t$13.extra.trailingCommaLoc);
					}
					break;
				case "ObjectProperty": {
					let { key: o$9, value: l$10 } = t$13;
					this.isPrivateName(o$9) && this.classScope.usePrivateName(this.getPrivateNameSV(o$9), o$9.loc.start), this.toAssignable(l$10, e$4);
					break;
				}
				case "SpreadElement": throw new Error("Internal @babel/parser error (this is a bug, please report it). SpreadElement should be converted by .toAssignable's caller.");
				case "ArrayExpression":
					this.castNodeTo(t$13, "ArrayPattern"), this.toAssignableList(t$13.elements, (i$18 = t$13.extra) == null ? void 0 : i$18.trailingCommaLoc, e$4);
					break;
				case "AssignmentExpression":
					t$13.operator !== "=" && this.raise(p$2.MissingEqInAssignment, t$13.left.loc.end), this.castNodeTo(t$13, "AssignmentPattern"), delete t$13.operator, this.toAssignable(t$13.left, e$4);
					break;
				case "ParenthesizedExpression":
					this.toAssignable(r$12, e$4);
					break;
			}
		}
		toAssignableObjectExpressionProp(t$13, e$4, s$8) {
			if (t$13.type === "ObjectMethod") this.raise(t$13.kind === "get" || t$13.kind === "set" ? p$2.PatternHasAccessor : p$2.PatternHasMethod, t$13.key);
			else if (t$13.type === "SpreadElement") {
				this.castNodeTo(t$13, "RestElement");
				let i$18 = t$13.argument;
				this.checkToRestConversion(i$18, !1), this.toAssignable(i$18, s$8), e$4 || this.raise(p$2.RestTrailingComma, t$13);
			} else this.toAssignable(t$13, s$8);
		}
		toAssignableList(t$13, e$4, s$8) {
			let i$18 = t$13.length - 1;
			for (let r$12 = 0; r$12 <= i$18; r$12++) {
				let n$8 = t$13[r$12];
				n$8 && (this.toAssignableListItem(t$13, r$12, s$8), n$8.type === "RestElement" && (r$12 < i$18 ? this.raise(p$2.RestTrailingComma, n$8) : e$4 && this.raise(p$2.RestTrailingComma, e$4)));
			}
		}
		toAssignableListItem(t$13, e$4, s$8) {
			let i$18 = t$13[e$4];
			if (i$18.type === "SpreadElement") {
				this.castNodeTo(i$18, "RestElement");
				let r$12 = i$18.argument;
				this.checkToRestConversion(r$12, !0), this.toAssignable(r$12, s$8);
			} else this.toAssignable(i$18, s$8);
		}
		isAssignable(t$13, e$4) {
			switch (t$13.type) {
				case "Identifier":
				case "ObjectPattern":
				case "ArrayPattern":
				case "AssignmentPattern":
				case "RestElement": return !0;
				case "ObjectExpression": {
					let s$8 = t$13.properties.length - 1;
					return t$13.properties.every((i$18, r$12) => i$18.type !== "ObjectMethod" && (r$12 === s$8 || i$18.type !== "SpreadElement") && this.isAssignable(i$18));
				}
				case "ObjectProperty": return this.isAssignable(t$13.value);
				case "SpreadElement": return this.isAssignable(t$13.argument);
				case "ArrayExpression": return t$13.elements.every((s$8) => s$8 === null || this.isAssignable(s$8));
				case "AssignmentExpression": return t$13.operator === "=";
				case "ParenthesizedExpression": return this.isAssignable(t$13.expression);
				case "MemberExpression":
				case "OptionalMemberExpression": return !e$4;
				default: return !1;
			}
		}
		toReferencedList(t$13, e$4) {
			return t$13;
		}
		toReferencedListDeep(t$13, e$4) {
			this.toReferencedList(t$13, e$4);
			for (let s$8 of t$13) (s$8 == null ? void 0 : s$8.type) === "ArrayExpression" && this.toReferencedListDeep(s$8.elements);
		}
		parseSpread(t$13) {
			let e$4 = this.startNode();
			return this.next(), e$4.argument = this.parseMaybeAssignAllowIn(t$13, void 0), this.finishNode(e$4, "SpreadElement");
		}
		parseRestBinding() {
			let t$13 = this.startNode();
			return this.next(), t$13.argument = this.parseBindingAtom(), this.finishNode(t$13, "RestElement");
		}
		parseBindingAtom() {
			switch (this.state.type) {
				case 0: {
					let t$13 = this.startNode();
					return this.next(), t$13.elements = this.parseBindingList(3, 93, 1), this.finishNode(t$13, "ArrayPattern");
				}
				case 5: return this.parseObjectLike(8, !0);
			}
			return this.parseIdentifier();
		}
		parseBindingList(t$13, e$4, s$8) {
			let i$18 = s$8 & 1, r$12 = [], n$8 = !0;
			for (; !this.eat(t$13);) if (n$8 ? n$8 = !1 : this.expect(12), i$18 && this.match(12)) r$12.push(null);
			else {
				if (this.eat(t$13)) break;
				if (this.match(21)) {
					let o$9 = this.parseRestBinding();
					if ((this.hasPlugin("flow") || s$8 & 2) && (o$9 = this.parseFunctionParamType(o$9)), r$12.push(o$9), !this.checkCommaAfterRest(e$4)) {
						this.expect(t$13);
						break;
					}
				} else {
					let o$9 = [];
					if (s$8 & 2) for (this.match(26) && this.hasPlugin("decorators") && this.raise(p$2.UnsupportedParameterDecorator, this.state.startLoc); this.match(26);) o$9.push(this.parseDecorator());
					r$12.push(this.parseBindingElement(s$8, o$9));
				}
			}
			return r$12;
		}
		parseBindingRestProperty(t$13) {
			return this.next(), t$13.argument = this.parseIdentifier(), this.checkCommaAfterRest(125), this.finishNode(t$13, "RestElement");
		}
		parseBindingProperty() {
			let { type: t$13, startLoc: e$4 } = this.state;
			if (t$13 === 21) return this.parseBindingRestProperty(this.startNode());
			let s$8 = this.startNode();
			return t$13 === 139 ? (this.expectPlugin("destructuringPrivate", e$4), this.classScope.usePrivateName(this.state.value, e$4), s$8.key = this.parsePrivateName()) : this.parsePropertyName(s$8), s$8.method = !1, this.parseObjPropValue(s$8, e$4, !1, !1, !0, !1);
		}
		parseBindingElement(t$13, e$4) {
			let s$8 = this.parseMaybeDefault();
			return (this.hasPlugin("flow") || t$13 & 2) && this.parseFunctionParamType(s$8), e$4.length && (s$8.decorators = e$4, this.resetStartLocationFromNode(s$8, e$4[0])), this.parseMaybeDefault(s$8.loc.start, s$8);
		}
		parseFunctionParamType(t$13) {
			return t$13;
		}
		parseMaybeDefault(t$13, e$4) {
			if (t$13 ?? (t$13 = this.state.startLoc), e$4 = e$4 ?? this.parseBindingAtom(), !this.eat(29)) return e$4;
			let s$8 = this.startNodeAt(t$13);
			return s$8.left = e$4, s$8.right = this.parseMaybeAssignAllowIn(), this.finishNode(s$8, "AssignmentPattern");
		}
		isValidLVal(t$13, e$4, s$8) {
			switch (t$13) {
				case "AssignmentPattern": return "left";
				case "RestElement": return "argument";
				case "ObjectProperty": return "value";
				case "ParenthesizedExpression": return "expression";
				case "ArrayPattern": return "elements";
				case "ObjectPattern": return "properties";
			}
			return !1;
		}
		isOptionalMemberExpression(t$13) {
			return t$13.type === "OptionalMemberExpression";
		}
		checkLVal(t$13, e$4, s$8 = 64, i$18 = !1, r$12 = !1, n$8 = !1) {
			var o$9;
			let l$10 = t$13.type;
			if (this.isObjectMethod(t$13)) return;
			let h$3 = this.isOptionalMemberExpression(t$13);
			if (h$3 || l$10 === "MemberExpression") {
				h$3 && (this.expectPlugin("optionalChainingAssign", t$13.loc.start), e$4.type !== "AssignmentExpression" && this.raise(p$2.InvalidLhsOptionalChaining, t$13, { ancestor: e$4 })), s$8 !== 64 && this.raise(p$2.InvalidPropertyBindingPattern, t$13);
				return;
			}
			if (l$10 === "Identifier") {
				this.checkIdentifier(t$13, s$8, r$12);
				let { name: A$3 } = t$13;
				i$18 && (i$18.has(A$3) ? this.raise(p$2.ParamDupe, t$13) : i$18.add(A$3));
				return;
			}
			let c$3 = this.isValidLVal(l$10, !(n$8 || (o$9 = t$13.extra) != null && o$9.parenthesized) && e$4.type === "AssignmentExpression", s$8);
			if (c$3 === !0) return;
			if (c$3 === !1) {
				let A$3 = s$8 === 64 ? p$2.InvalidLhs : p$2.InvalidLhsBinding;
				this.raise(A$3, t$13, { ancestor: e$4 });
				return;
			}
			let u$14, f$3;
			typeof c$3 == "string" ? (u$14 = c$3, f$3 = l$10 === "ParenthesizedExpression") : [u$14, f$3] = c$3;
			let d$14 = l$10 === "ArrayPattern" || l$10 === "ObjectPattern" ? { type: l$10 } : e$4, x$3 = t$13[u$14];
			if (Array.isArray(x$3)) for (let A$3 of x$3) A$3 && this.checkLVal(A$3, d$14, s$8, i$18, r$12, f$3);
			else x$3 && this.checkLVal(x$3, d$14, s$8, i$18, r$12, f$3);
		}
		checkIdentifier(t$13, e$4, s$8 = !1) {
			this.state.strict && (s$8 ? vs$2(t$13.name, this.inModule) : ks$3(t$13.name)) && (e$4 === 64 ? this.raise(p$2.StrictEvalArguments, t$13, { referenceName: t$13.name }) : this.raise(p$2.StrictEvalArgumentsBinding, t$13, { bindingName: t$13.name })), e$4 & 8192 && t$13.name === "let" && this.raise(p$2.LetInLexicalBinding, t$13), e$4 & 64 || this.declareNameFromIdentifier(t$13, e$4);
		}
		declareNameFromIdentifier(t$13, e$4) {
			this.scope.declareName(t$13.name, e$4, t$13.loc.start);
		}
		checkToRestConversion(t$13, e$4) {
			switch (t$13.type) {
				case "ParenthesizedExpression":
					this.checkToRestConversion(t$13.expression, e$4);
					break;
				case "Identifier":
				case "MemberExpression": break;
				case "ArrayExpression":
				case "ObjectExpression": if (e$4) break;
				default: this.raise(p$2.InvalidRestAssignmentPattern, t$13);
			}
		}
		checkCommaAfterRest(t$13) {
			return this.match(12) ? (this.raise(this.lookaheadCharCode() === t$13 ? p$2.RestTrailingComma : p$2.ElementAfterRest, this.state.startLoc), !0) : !1;
		}
	};
	function Cr$4(a$13) {
		if (a$13 == null) throw new Error(`Unexpected ${a$13} value.`);
		return a$13;
	}
	function Ps$4(a$13) {
		if (!a$13) throw new Error("Assert fail");
	}
	var y$7 = F$4`typescript`({
		AbstractMethodHasImplementation: ({ methodName: a$13 }) => `Method '${a$13}' cannot have an implementation because it is marked abstract.`,
		AbstractPropertyHasInitializer: ({ propertyName: a$13 }) => `Property '${a$13}' cannot have an initializer because it is marked abstract.`,
		AccessorCannotBeOptional: "An 'accessor' property cannot be declared optional.",
		AccessorCannotDeclareThisParameter: "'get' and 'set' accessors cannot declare 'this' parameters.",
		AccessorCannotHaveTypeParameters: "An accessor cannot have type parameters.",
		ClassMethodHasDeclare: "Class methods cannot have the 'declare' modifier.",
		ClassMethodHasReadonly: "Class methods cannot have the 'readonly' modifier.",
		ConstInitializerMustBeStringOrNumericLiteralOrLiteralEnumReference: "A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.",
		ConstructorHasTypeParameters: "Type parameters cannot appear on a constructor declaration.",
		DeclareAccessor: ({ kind: a$13 }) => `'declare' is not allowed in ${a$13}ters.`,
		DeclareClassFieldHasInitializer: "Initializers are not allowed in ambient contexts.",
		DeclareFunctionHasImplementation: "An implementation cannot be declared in ambient contexts.",
		DuplicateAccessibilityModifier: ({ modifier: a$13 }) => `Accessibility modifier already seen: '${a$13}'.`,
		DuplicateModifier: ({ modifier: a$13 }) => `Duplicate modifier: '${a$13}'.`,
		EmptyHeritageClauseType: ({ token: a$13 }) => `'${a$13}' list cannot be empty.`,
		EmptyTypeArguments: "Type argument list cannot be empty.",
		EmptyTypeParameters: "Type parameter list cannot be empty.",
		ExpectedAmbientAfterExportDeclare: "'export declare' must be followed by an ambient declaration.",
		ImportAliasHasImportType: "An import alias can not use 'import type'.",
		ImportReflectionHasImportType: "An `import module` declaration can not use `type` modifier",
		IncompatibleModifiers: ({ modifiers: a$13 }) => `'${a$13[0]}' modifier cannot be used with '${a$13[1]}' modifier.`,
		IndexSignatureHasAbstract: "Index signatures cannot have the 'abstract' modifier.",
		IndexSignatureHasAccessibility: ({ modifier: a$13 }) => `Index signatures cannot have an accessibility modifier ('${a$13}').`,
		IndexSignatureHasDeclare: "Index signatures cannot have the 'declare' modifier.",
		IndexSignatureHasOverride: "'override' modifier cannot appear on an index signature.",
		IndexSignatureHasStatic: "Index signatures cannot have the 'static' modifier.",
		InitializerNotAllowedInAmbientContext: "Initializers are not allowed in ambient contexts.",
		InvalidHeritageClauseType: ({ token: a$13 }) => `'${a$13}' list can only include identifiers or qualified-names with optional type arguments.`,
		InvalidModifierOnAwaitUsingDeclaration: (a$13) => `'${a$13}' modifier cannot appear on an await using declaration.`,
		InvalidModifierOnTypeMember: ({ modifier: a$13 }) => `'${a$13}' modifier cannot appear on a type member.`,
		InvalidModifierOnTypeParameter: ({ modifier: a$13 }) => `'${a$13}' modifier cannot appear on a type parameter.`,
		InvalidModifierOnTypeParameterPositions: ({ modifier: a$13 }) => `'${a$13}' modifier can only appear on a type parameter of a class, interface or type alias.`,
		InvalidModifierOnUsingDeclaration: (a$13) => `'${a$13}' modifier cannot appear on a using declaration.`,
		InvalidModifiersOrder: ({ orderedModifiers: a$13 }) => `'${a$13[0]}' modifier must precede '${a$13[1]}' modifier.`,
		InvalidPropertyAccessAfterInstantiationExpression: "Invalid property access after an instantiation expression. You can either wrap the instantiation expression in parentheses, or delete the type arguments.",
		InvalidTupleMemberLabel: "Tuple members must be labeled with a simple identifier.",
		MissingInterfaceName: "'interface' declarations must be followed by an identifier.",
		NonAbstractClassHasAbstractMethod: "Abstract methods can only appear within an abstract class.",
		NonClassMethodPropertyHasAbstractModifier: "'abstract' modifier can only appear on a class, method, or property declaration.",
		OptionalTypeBeforeRequired: "A required element cannot follow an optional element.",
		OverrideNotInSubClass: "This member cannot have an 'override' modifier because its containing class does not extend another class.",
		PatternIsOptional: "A binding pattern parameter cannot be optional in an implementation signature.",
		PrivateElementHasAbstract: "Private elements cannot have the 'abstract' modifier.",
		PrivateElementHasAccessibility: ({ modifier: a$13 }) => `Private elements cannot have an accessibility modifier ('${a$13}').`,
		ReadonlyForMethodSignature: "'readonly' modifier can only appear on a property declaration or index signature.",
		ReservedArrowTypeParam: "This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.",
		ReservedTypeAssertion: "This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.",
		SetAccessorCannotHaveOptionalParameter: "A 'set' accessor cannot have an optional parameter.",
		SetAccessorCannotHaveRestParameter: "A 'set' accessor cannot have rest parameter.",
		SetAccessorCannotHaveReturnType: "A 'set' accessor cannot have a return type annotation.",
		SingleTypeParameterWithoutTrailingComma: ({ typeParameterName: a$13 }) => `Single type parameter ${a$13} should have a trailing comma. Example usage: <${a$13},>.`,
		StaticBlockCannotHaveModifier: "Static class blocks cannot have any modifier.",
		TupleOptionalAfterType: "A labeled tuple optional element must be declared using a question mark after the name and before the colon (`name?: type`), rather than after the type (`name: type?`).",
		TypeAnnotationAfterAssign: "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.",
		TypeImportCannotSpecifyDefaultAndNamed: "A type-only import can specify a default import or named bindings, but not both.",
		TypeModifierIsUsedInTypeExports: "The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.",
		TypeModifierIsUsedInTypeImports: "The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.",
		UnexpectedParameterModifier: "A parameter property is only allowed in a constructor implementation.",
		UnexpectedReadonly: "'readonly' type modifier is only permitted on array and tuple literal types.",
		UnexpectedTypeAnnotation: "Did not expect a type annotation here.",
		UnexpectedTypeCastInParameter: "Unexpected type cast in parameter position.",
		UnsupportedImportTypeArgument: "Argument in a type import must be a string literal.",
		UnsupportedParameterPropertyKind: "A parameter property may not be declared using a binding pattern.",
		UnsupportedSignatureParameterKind: ({ type: a$13 }) => `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${a$13}.`,
		UsingDeclarationInAmbientContext: (a$13) => `'${a$13}' declarations are not allowed in ambient contexts.`
	});
	function wr$4(a$13) {
		switch (a$13) {
			case "any": return "TSAnyKeyword";
			case "boolean": return "TSBooleanKeyword";
			case "bigint": return "TSBigIntKeyword";
			case "never": return "TSNeverKeyword";
			case "number": return "TSNumberKeyword";
			case "object": return "TSObjectKeyword";
			case "string": return "TSStringKeyword";
			case "symbol": return "TSSymbolKeyword";
			case "undefined": return "TSUndefinedKeyword";
			case "unknown": return "TSUnknownKeyword";
			default: return;
		}
	}
	function gs$3(a$13) {
		return a$13 === "private" || a$13 === "public" || a$13 === "protected";
	}
	function Ir$6(a$13) {
		return a$13 === "in" || a$13 === "out";
	}
	var Nr$6 = (a$13) => class extends a$13 {
		constructor(...e$4) {
			super(...e$4), this.tsParseInOutModifiers = this.tsParseModifiers.bind(this, {
				allowedModifiers: ["in", "out"],
				disallowedModifiers: [
					"const",
					"public",
					"private",
					"protected",
					"readonly",
					"declare",
					"abstract",
					"override"
				],
				errorTemplate: y$7.InvalidModifierOnTypeParameter
			}), this.tsParseConstModifier = this.tsParseModifiers.bind(this, {
				allowedModifiers: ["const"],
				disallowedModifiers: ["in", "out"],
				errorTemplate: y$7.InvalidModifierOnTypeParameterPositions
			}), this.tsParseInOutConstModifiers = this.tsParseModifiers.bind(this, {
				allowedModifiers: [
					"in",
					"out",
					"const"
				],
				disallowedModifiers: [
					"public",
					"private",
					"protected",
					"readonly",
					"declare",
					"abstract",
					"override"
				],
				errorTemplate: y$7.InvalidModifierOnTypeParameter
			});
		}
		getScopeHandler() {
			return Xe$4;
		}
		tsIsIdentifier() {
			return w$3(this.state.type);
		}
		tsTokenCanFollowModifier() {
			return this.match(0) || this.match(5) || this.match(55) || this.match(21) || this.match(139) || this.isLiteralPropertyName();
		}
		tsNextTokenOnSameLineAndCanFollowModifier() {
			return this.next(), this.hasPrecedingLineBreak() ? !1 : this.tsTokenCanFollowModifier();
		}
		tsNextTokenCanFollowModifier() {
			return this.match(106) ? (this.next(), this.tsTokenCanFollowModifier()) : this.tsNextTokenOnSameLineAndCanFollowModifier();
		}
		tsParseModifier(e$4, s$8, i$18) {
			if (!w$3(this.state.type) && this.state.type !== 58 && this.state.type !== 75) return;
			let r$12 = this.state.value;
			if (e$4.includes(r$12)) {
				if (i$18 && this.match(106) || s$8 && this.tsIsStartOfStaticBlocks()) return;
				if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) return r$12;
			}
		}
		tsParseModifiers({ allowedModifiers: e$4, disallowedModifiers: s$8, stopOnStartOfClassStaticBlock: i$18, errorTemplate: r$12 = y$7.InvalidModifierOnTypeMember }, n$8) {
			let o$9 = (h$3, c$3, u$14, f$3) => {
				c$3 === u$14 && n$8[f$3] && this.raise(y$7.InvalidModifiersOrder, h$3, { orderedModifiers: [u$14, f$3] });
			}, l$10 = (h$3, c$3, u$14, f$3) => {
				(n$8[u$14] && c$3 === f$3 || n$8[f$3] && c$3 === u$14) && this.raise(y$7.IncompatibleModifiers, h$3, { modifiers: [u$14, f$3] });
			};
			for (;;) {
				let { startLoc: h$3 } = this.state, c$3 = this.tsParseModifier(e$4.concat(s$8 ?? []), i$18, n$8.static);
				if (!c$3) break;
				gs$3(c$3) ? n$8.accessibility ? this.raise(y$7.DuplicateAccessibilityModifier, h$3, { modifier: c$3 }) : (o$9(h$3, c$3, c$3, "override"), o$9(h$3, c$3, c$3, "static"), o$9(h$3, c$3, c$3, "readonly"), n$8.accessibility = c$3) : Ir$6(c$3) ? (n$8[c$3] && this.raise(y$7.DuplicateModifier, h$3, { modifier: c$3 }), n$8[c$3] = !0, o$9(h$3, c$3, "in", "out")) : (hasOwnProperty.call(n$8, c$3) ? this.raise(y$7.DuplicateModifier, h$3, { modifier: c$3 }) : (o$9(h$3, c$3, "static", "readonly"), o$9(h$3, c$3, "static", "override"), o$9(h$3, c$3, "override", "readonly"), o$9(h$3, c$3, "abstract", "override"), l$10(h$3, c$3, "declare", "override"), l$10(h$3, c$3, "static", "abstract")), n$8[c$3] = !0), s$8 != null && s$8.includes(c$3) && this.raise(r$12, h$3, { modifier: c$3 });
			}
		}
		tsIsListTerminator(e$4) {
			switch (e$4) {
				case "EnumMembers":
				case "TypeMembers": return this.match(8);
				case "HeritageClauseElement": return this.match(5);
				case "TupleElementTypes": return this.match(3);
				case "TypeParametersOrArguments": return this.match(48);
			}
		}
		tsParseList(e$4, s$8) {
			let i$18 = [];
			for (; !this.tsIsListTerminator(e$4);) i$18.push(s$8());
			return i$18;
		}
		tsParseDelimitedList(e$4, s$8, i$18) {
			return Cr$4(this.tsParseDelimitedListWorker(e$4, s$8, !0, i$18));
		}
		tsParseDelimitedListWorker(e$4, s$8, i$18, r$12) {
			let n$8 = [], o$9 = -1;
			for (; !this.tsIsListTerminator(e$4);) {
				o$9 = -1;
				let l$10 = s$8();
				if (l$10 == null) return;
				if (n$8.push(l$10), this.eat(12)) {
					o$9 = this.state.lastTokStartLoc.index;
					continue;
				}
				if (this.tsIsListTerminator(e$4)) break;
				i$18 && this.expect(12);
				return;
			}
			return r$12 && (r$12.value = o$9), n$8;
		}
		tsParseBracketedList(e$4, s$8, i$18, r$12, n$8) {
			r$12 || (i$18 ? this.expect(0) : this.expect(47));
			let o$9 = this.tsParseDelimitedList(e$4, s$8, n$8);
			return i$18 ? this.expect(3) : this.expect(48), o$9;
		}
		tsParseImportType() {
			let e$4 = this.startNode();
			return this.expect(83), this.expect(10), this.match(134) ? e$4.argument = this.parseStringLiteral(this.state.value) : (this.raise(y$7.UnsupportedImportTypeArgument, this.state.startLoc), e$4.argument = super.parseExprAtom()), this.eat(12) ? e$4.options = this.tsParseImportTypeOptions() : e$4.options = null, this.expect(11), this.eat(16) && (e$4.qualifier = this.tsParseEntityName(3)), this.match(47) && (e$4.typeParameters = this.tsParseTypeArguments()), this.finishNode(e$4, "TSImportType");
		}
		tsParseImportTypeOptions() {
			let e$4 = this.startNode();
			this.expect(5);
			let s$8 = this.startNode();
			return this.isContextual(76) ? (s$8.method = !1, s$8.key = this.parseIdentifier(!0), s$8.computed = !1, s$8.shorthand = !1) : this.unexpected(null, 76), this.expect(14), s$8.value = this.tsParseImportTypeWithPropertyValue(), e$4.properties = [this.finishObjectProperty(s$8)], this.expect(8), this.finishNode(e$4, "ObjectExpression");
		}
		tsParseImportTypeWithPropertyValue() {
			let e$4 = this.startNode(), s$8 = [];
			for (this.expect(5); !this.match(8);) {
				let i$18 = this.state.type;
				w$3(i$18) || i$18 === 134 ? s$8.push(super.parsePropertyDefinition(null)) : this.unexpected(), this.eat(12);
			}
			return e$4.properties = s$8, this.next(), this.finishNode(e$4, "ObjectExpression");
		}
		tsParseEntityName(e$4) {
			let s$8;
			if (e$4 & 1 && this.match(78)) if (e$4 & 2) s$8 = this.parseIdentifier(!0);
			else {
				let i$18 = this.startNode();
				this.next(), s$8 = this.finishNode(i$18, "ThisExpression");
			}
			else s$8 = this.parseIdentifier(!!(e$4 & 1));
			for (; this.eat(16);) {
				let i$18 = this.startNodeAtNode(s$8);
				i$18.left = s$8, i$18.right = this.parseIdentifier(!!(e$4 & 1)), s$8 = this.finishNode(i$18, "TSQualifiedName");
			}
			return s$8;
		}
		tsParseTypeReference() {
			let e$4 = this.startNode();
			return e$4.typeName = this.tsParseEntityName(1), !this.hasPrecedingLineBreak() && this.match(47) && (e$4.typeParameters = this.tsParseTypeArguments()), this.finishNode(e$4, "TSTypeReference");
		}
		tsParseThisTypePredicate(e$4) {
			this.next();
			let s$8 = this.startNodeAtNode(e$4);
			return s$8.parameterName = e$4, s$8.typeAnnotation = this.tsParseTypeAnnotation(!1), s$8.asserts = !1, this.finishNode(s$8, "TSTypePredicate");
		}
		tsParseThisTypeNode() {
			let e$4 = this.startNode();
			return this.next(), this.finishNode(e$4, "TSThisType");
		}
		tsParseTypeQuery() {
			let e$4 = this.startNode();
			return this.expect(87), this.match(83) ? e$4.exprName = this.tsParseImportType() : e$4.exprName = this.tsParseEntityName(3), !this.hasPrecedingLineBreak() && this.match(47) && (e$4.typeParameters = this.tsParseTypeArguments()), this.finishNode(e$4, "TSTypeQuery");
		}
		tsParseTypeParameter(e$4) {
			let s$8 = this.startNode();
			return e$4(s$8), s$8.name = this.tsParseTypeParameterName(), s$8.constraint = this.tsEatThenParseType(81), s$8.default = this.tsEatThenParseType(29), this.finishNode(s$8, "TSTypeParameter");
		}
		tsTryParseTypeParameters(e$4) {
			if (this.match(47)) return this.tsParseTypeParameters(e$4);
		}
		tsParseTypeParameters(e$4) {
			let s$8 = this.startNode();
			this.match(47) || this.match(143) ? this.next() : this.unexpected();
			let i$18 = { value: -1 };
			return s$8.params = this.tsParseBracketedList("TypeParametersOrArguments", this.tsParseTypeParameter.bind(this, e$4), !1, !0, i$18), s$8.params.length === 0 && this.raise(y$7.EmptyTypeParameters, s$8), i$18.value !== -1 && this.addExtra(s$8, "trailingComma", i$18.value), this.finishNode(s$8, "TSTypeParameterDeclaration");
		}
		tsFillSignature(e$4, s$8) {
			let i$18 = e$4 === 19, r$12 = "parameters", n$8 = "typeAnnotation";
			s$8.typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier), this.expect(10), s$8[r$12] = this.tsParseBindingListForSignature(), i$18 ? s$8[n$8] = this.tsParseTypeOrTypePredicateAnnotation(e$4) : this.match(e$4) && (s$8[n$8] = this.tsParseTypeOrTypePredicateAnnotation(e$4));
		}
		tsParseBindingListForSignature() {
			let e$4 = super.parseBindingList(11, 41, 2);
			for (let s$8 of e$4) {
				let { type: i$18 } = s$8;
				(i$18 === "AssignmentPattern" || i$18 === "TSParameterProperty") && this.raise(y$7.UnsupportedSignatureParameterKind, s$8, { type: i$18 });
			}
			return e$4;
		}
		tsParseTypeMemberSemicolon() {
			!this.eat(12) && !this.isLineTerminator() && this.expect(13);
		}
		tsParseSignatureMember(e$4, s$8) {
			return this.tsFillSignature(14, s$8), this.tsParseTypeMemberSemicolon(), this.finishNode(s$8, e$4);
		}
		tsIsUnambiguouslyIndexSignature() {
			return this.next(), w$3(this.state.type) ? (this.next(), this.match(14)) : !1;
		}
		tsTryParseIndexSignature(e$4) {
			if (!(this.match(0) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) return;
			this.expect(0);
			let s$8 = this.parseIdentifier();
			s$8.typeAnnotation = this.tsParseTypeAnnotation(), this.resetEndLocation(s$8), this.expect(3), e$4.parameters = [s$8];
			let i$18 = this.tsTryParseTypeAnnotation();
			return i$18 && (e$4.typeAnnotation = i$18), this.tsParseTypeMemberSemicolon(), this.finishNode(e$4, "TSIndexSignature");
		}
		tsParsePropertyOrMethodSignature(e$4, s$8) {
			if (this.eat(17) && (e$4.optional = !0), this.match(10) || this.match(47)) {
				s$8 && this.raise(y$7.ReadonlyForMethodSignature, e$4);
				let i$18 = e$4;
				i$18.kind && this.match(47) && this.raise(y$7.AccessorCannotHaveTypeParameters, this.state.curPosition()), this.tsFillSignature(14, i$18), this.tsParseTypeMemberSemicolon();
				let r$12 = "parameters", n$8 = "typeAnnotation";
				if (i$18.kind === "get") i$18[r$12].length > 0 && (this.raise(p$2.BadGetterArity, this.state.curPosition()), this.isThisParam(i$18[r$12][0]) && this.raise(y$7.AccessorCannotDeclareThisParameter, this.state.curPosition()));
				else if (i$18.kind === "set") {
					if (i$18[r$12].length !== 1) this.raise(p$2.BadSetterArity, this.state.curPosition());
					else {
						let o$9 = i$18[r$12][0];
						this.isThisParam(o$9) && this.raise(y$7.AccessorCannotDeclareThisParameter, this.state.curPosition()), o$9.type === "Identifier" && o$9.optional && this.raise(y$7.SetAccessorCannotHaveOptionalParameter, this.state.curPosition()), o$9.type === "RestElement" && this.raise(y$7.SetAccessorCannotHaveRestParameter, this.state.curPosition());
					}
					i$18[n$8] && this.raise(y$7.SetAccessorCannotHaveReturnType, i$18[n$8]);
				} else i$18.kind = "method";
				return this.finishNode(i$18, "TSMethodSignature");
			} else {
				let i$18 = e$4;
				s$8 && (i$18.readonly = !0);
				let r$12 = this.tsTryParseTypeAnnotation();
				return r$12 && (i$18.typeAnnotation = r$12), this.tsParseTypeMemberSemicolon(), this.finishNode(i$18, "TSPropertySignature");
			}
		}
		tsParseTypeMember() {
			let e$4 = this.startNode();
			if (this.match(10) || this.match(47)) return this.tsParseSignatureMember("TSCallSignatureDeclaration", e$4);
			if (this.match(77)) {
				let i$18 = this.startNode();
				return this.next(), this.match(10) || this.match(47) ? this.tsParseSignatureMember("TSConstructSignatureDeclaration", e$4) : (e$4.key = this.createIdentifier(i$18, "new"), this.tsParsePropertyOrMethodSignature(e$4, !1));
			}
			this.tsParseModifiers({
				allowedModifiers: ["readonly"],
				disallowedModifiers: [
					"declare",
					"abstract",
					"private",
					"protected",
					"public",
					"static",
					"override"
				]
			}, e$4);
			return this.tsTryParseIndexSignature(e$4) || (super.parsePropertyName(e$4), !e$4.computed && e$4.key.type === "Identifier" && (e$4.key.name === "get" || e$4.key.name === "set") && this.tsTokenCanFollowModifier() && (e$4.kind = e$4.key.name, super.parsePropertyName(e$4), !this.match(10) && !this.match(47) && this.unexpected(null, 10)), this.tsParsePropertyOrMethodSignature(e$4, !!e$4.readonly));
		}
		tsParseTypeLiteral() {
			let e$4 = this.startNode();
			return e$4.members = this.tsParseObjectTypeMembers(), this.finishNode(e$4, "TSTypeLiteral");
		}
		tsParseObjectTypeMembers() {
			this.expect(5);
			let e$4 = this.tsParseList("TypeMembers", this.tsParseTypeMember.bind(this));
			return this.expect(8), e$4;
		}
		tsIsStartOfMappedType() {
			return this.next(), this.eat(53) ? this.isContextual(122) : (this.isContextual(122) && this.next(), !this.match(0) || (this.next(), !this.tsIsIdentifier()) ? !1 : (this.next(), this.match(58)));
		}
		tsParseMappedType() {
			let e$4 = this.startNode();
			this.expect(5), this.match(53) ? (e$4.readonly = this.state.value, this.next(), this.expectContextual(122)) : this.eatContextual(122) && (e$4.readonly = !0), this.expect(0);
			{
				let s$8 = this.startNode();
				s$8.name = this.tsParseTypeParameterName(), s$8.constraint = this.tsExpectThenParseType(58), e$4.typeParameter = this.finishNode(s$8, "TSTypeParameter");
			}
			return e$4.nameType = this.eatContextual(93) ? this.tsParseType() : null, this.expect(3), this.match(53) ? (e$4.optional = this.state.value, this.next(), this.expect(17)) : this.eat(17) && (e$4.optional = !0), e$4.typeAnnotation = this.tsTryParseType(), this.semicolon(), this.expect(8), this.finishNode(e$4, "TSMappedType");
		}
		tsParseTupleType() {
			let e$4 = this.startNode();
			e$4.elementTypes = this.tsParseBracketedList("TupleElementTypes", this.tsParseTupleElementType.bind(this), !0, !1);
			let s$8 = !1;
			return e$4.elementTypes.forEach((i$18) => {
				let { type: r$12 } = i$18;
				s$8 && r$12 !== "TSRestType" && r$12 !== "TSOptionalType" && !(r$12 === "TSNamedTupleMember" && i$18.optional) && this.raise(y$7.OptionalTypeBeforeRequired, i$18), s$8 || (s$8 = r$12 === "TSNamedTupleMember" && i$18.optional || r$12 === "TSOptionalType");
			}), this.finishNode(e$4, "TSTupleType");
		}
		tsParseTupleElementType() {
			let e$4 = this.state.startLoc, s$8 = this.eat(21), { startLoc: i$18 } = this.state, r$12, n$8, o$9, l$10, c$3 = M$2(this.state.type) ? this.lookaheadCharCode() : null;
			if (c$3 === 58) r$12 = !0, o$9 = !1, n$8 = this.parseIdentifier(!0), this.expect(14), l$10 = this.tsParseType();
			else if (c$3 === 63) {
				o$9 = !0;
				let u$14 = this.state.value, f$3 = this.tsParseNonArrayType();
				this.lookaheadCharCode() === 58 ? (r$12 = !0, n$8 = this.createIdentifier(this.startNodeAt(i$18), u$14), this.expect(17), this.expect(14), l$10 = this.tsParseType()) : (r$12 = !1, l$10 = f$3, this.expect(17));
			} else l$10 = this.tsParseType(), o$9 = this.eat(17), r$12 = this.eat(14);
			if (r$12) {
				let u$14;
				n$8 ? (u$14 = this.startNodeAt(i$18), u$14.optional = o$9, u$14.label = n$8, u$14.elementType = l$10, this.eat(17) && (u$14.optional = !0, this.raise(y$7.TupleOptionalAfterType, this.state.lastTokStartLoc))) : (u$14 = this.startNodeAt(i$18), u$14.optional = o$9, this.raise(y$7.InvalidTupleMemberLabel, l$10), u$14.label = l$10, u$14.elementType = this.tsParseType()), l$10 = this.finishNode(u$14, "TSNamedTupleMember");
			} else if (o$9) {
				let u$14 = this.startNodeAt(i$18);
				u$14.typeAnnotation = l$10, l$10 = this.finishNode(u$14, "TSOptionalType");
			}
			if (s$8) {
				let u$14 = this.startNodeAt(e$4);
				u$14.typeAnnotation = l$10, l$10 = this.finishNode(u$14, "TSRestType");
			}
			return l$10;
		}
		tsParseParenthesizedType() {
			let e$4 = this.startNode();
			return this.expect(10), e$4.typeAnnotation = this.tsParseType(), this.expect(11), this.finishNode(e$4, "TSParenthesizedType");
		}
		tsParseFunctionOrConstructorType(e$4, s$8) {
			let i$18 = this.startNode();
			return e$4 === "TSConstructorType" && (i$18.abstract = !!s$8, s$8 && this.next(), this.next()), this.tsInAllowConditionalTypesContext(() => this.tsFillSignature(19, i$18)), this.finishNode(i$18, e$4);
		}
		tsParseLiteralTypeNode() {
			let e$4 = this.startNode();
			switch (this.state.type) {
				case 135:
				case 136:
				case 134:
				case 85:
				case 86:
					e$4.literal = super.parseExprAtom();
					break;
				default: this.unexpected();
			}
			return this.finishNode(e$4, "TSLiteralType");
		}
		tsParseTemplateLiteralType() {
			{
				let e$4 = this.startNode();
				return e$4.literal = super.parseTemplate(!1), this.finishNode(e$4, "TSLiteralType");
			}
		}
		parseTemplateSubstitution() {
			return this.state.inType ? this.tsParseType() : super.parseTemplateSubstitution();
		}
		tsParseThisTypeOrThisTypePredicate() {
			let e$4 = this.tsParseThisTypeNode();
			return this.isContextual(116) && !this.hasPrecedingLineBreak() ? this.tsParseThisTypePredicate(e$4) : e$4;
		}
		tsParseNonArrayType() {
			switch (this.state.type) {
				case 134:
				case 135:
				case 136:
				case 85:
				case 86: return this.tsParseLiteralTypeNode();
				case 53:
					if (this.state.value === "-") {
						let e$4 = this.startNode(), s$8 = this.lookahead();
						return s$8.type !== 135 && s$8.type !== 136 && this.unexpected(), e$4.literal = this.parseMaybeUnary(), this.finishNode(e$4, "TSLiteralType");
					}
					break;
				case 78: return this.tsParseThisTypeOrThisTypePredicate();
				case 87: return this.tsParseTypeQuery();
				case 83: return this.tsParseImportType();
				case 5: return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();
				case 0: return this.tsParseTupleType();
				case 10: return this.tsParseParenthesizedType();
				case 25:
				case 24: return this.tsParseTemplateLiteralType();
				default: {
					let { type: e$4 } = this.state;
					if (w$3(e$4) || e$4 === 88 || e$4 === 84) {
						let s$8 = e$4 === 88 ? "TSVoidKeyword" : e$4 === 84 ? "TSNullKeyword" : wr$4(this.state.value);
						if (s$8 !== void 0 && this.lookaheadCharCode() !== 46) {
							let i$18 = this.startNode();
							return this.next(), this.finishNode(i$18, s$8);
						}
						return this.tsParseTypeReference();
					}
				}
			}
			this.unexpected();
		}
		tsParseArrayTypeOrHigher() {
			let { startLoc: e$4 } = this.state, s$8 = this.tsParseNonArrayType();
			for (; !this.hasPrecedingLineBreak() && this.eat(0);) if (this.match(3)) {
				let i$18 = this.startNodeAt(e$4);
				i$18.elementType = s$8, this.expect(3), s$8 = this.finishNode(i$18, "TSArrayType");
			} else {
				let i$18 = this.startNodeAt(e$4);
				i$18.objectType = s$8, i$18.indexType = this.tsParseType(), this.expect(3), s$8 = this.finishNode(i$18, "TSIndexedAccessType");
			}
			return s$8;
		}
		tsParseTypeOperator() {
			let e$4 = this.startNode(), s$8 = this.state.value;
			return this.next(), e$4.operator = s$8, e$4.typeAnnotation = this.tsParseTypeOperatorOrHigher(), s$8 === "readonly" && this.tsCheckTypeAnnotationForReadOnly(e$4), this.finishNode(e$4, "TSTypeOperator");
		}
		tsCheckTypeAnnotationForReadOnly(e$4) {
			switch (e$4.typeAnnotation.type) {
				case "TSTupleType":
				case "TSArrayType": return;
				default: this.raise(y$7.UnexpectedReadonly, e$4);
			}
		}
		tsParseInferType() {
			let e$4 = this.startNode();
			this.expectContextual(115);
			let s$8 = this.startNode();
			return s$8.name = this.tsParseTypeParameterName(), s$8.constraint = this.tsTryParse(() => this.tsParseConstraintForInferType()), e$4.typeParameter = this.finishNode(s$8, "TSTypeParameter"), this.finishNode(e$4, "TSInferType");
		}
		tsParseConstraintForInferType() {
			if (this.eat(81)) {
				let e$4 = this.tsInDisallowConditionalTypesContext(() => this.tsParseType());
				if (this.state.inDisallowConditionalTypesContext || !this.match(17)) return e$4;
			}
		}
		tsParseTypeOperatorOrHigher() {
			return Xi$5(this.state.type) && !this.state.containsEsc ? this.tsParseTypeOperator() : this.isContextual(115) ? this.tsParseInferType() : this.tsInAllowConditionalTypesContext(() => this.tsParseArrayTypeOrHigher());
		}
		tsParseUnionOrIntersectionType(e$4, s$8, i$18) {
			let r$12 = this.startNode(), n$8 = this.eat(i$18), o$9 = [];
			do
				o$9.push(s$8());
			while (this.eat(i$18));
			return o$9.length === 1 && !n$8 ? o$9[0] : (r$12.types = o$9, this.finishNode(r$12, e$4));
		}
		tsParseIntersectionTypeOrHigher() {
			return this.tsParseUnionOrIntersectionType("TSIntersectionType", this.tsParseTypeOperatorOrHigher.bind(this), 45);
		}
		tsParseUnionTypeOrHigher() {
			return this.tsParseUnionOrIntersectionType("TSUnionType", this.tsParseIntersectionTypeOrHigher.bind(this), 43);
		}
		tsIsStartOfFunctionType() {
			return this.match(47) ? !0 : this.match(10) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));
		}
		tsSkipParameterStart() {
			if (w$3(this.state.type) || this.match(78)) return this.next(), !0;
			if (this.match(5)) {
				let { errors: e$4 } = this.state, s$8 = e$4.length;
				try {
					return this.parseObjectLike(8, !0), e$4.length === s$8;
				} catch {
					return !1;
				}
			}
			if (this.match(0)) {
				this.next();
				let { errors: e$4 } = this.state, s$8 = e$4.length;
				try {
					return super.parseBindingList(3, 93, 1), e$4.length === s$8;
				} catch {
					return !1;
				}
			}
			return !1;
		}
		tsIsUnambiguouslyStartOfFunctionType() {
			return this.next(), !!(this.match(11) || this.match(21) || this.tsSkipParameterStart() && (this.match(14) || this.match(12) || this.match(17) || this.match(29) || this.match(11) && (this.next(), this.match(19))));
		}
		tsParseTypeOrTypePredicateAnnotation(e$4) {
			return this.tsInType(() => {
				let s$8 = this.startNode();
				this.expect(e$4);
				let i$18 = this.startNode(), r$12 = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));
				if (r$12 && this.match(78)) {
					let l$10 = this.tsParseThisTypeOrThisTypePredicate();
					return l$10.type === "TSThisType" ? (i$18.parameterName = l$10, i$18.asserts = !0, i$18.typeAnnotation = null, l$10 = this.finishNode(i$18, "TSTypePredicate")) : (this.resetStartLocationFromNode(l$10, i$18), l$10.asserts = !0), s$8.typeAnnotation = l$10, this.finishNode(s$8, "TSTypeAnnotation");
				}
				let n$8 = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));
				if (!n$8) return r$12 ? (i$18.parameterName = this.parseIdentifier(), i$18.asserts = r$12, i$18.typeAnnotation = null, s$8.typeAnnotation = this.finishNode(i$18, "TSTypePredicate"), this.finishNode(s$8, "TSTypeAnnotation")) : this.tsParseTypeAnnotation(!1, s$8);
				let o$9 = this.tsParseTypeAnnotation(!1);
				return i$18.parameterName = n$8, i$18.typeAnnotation = o$9, i$18.asserts = r$12, s$8.typeAnnotation = this.finishNode(i$18, "TSTypePredicate"), this.finishNode(s$8, "TSTypeAnnotation");
			});
		}
		tsTryParseTypeOrTypePredicateAnnotation() {
			if (this.match(14)) return this.tsParseTypeOrTypePredicateAnnotation(14);
		}
		tsTryParseTypeAnnotation() {
			if (this.match(14)) return this.tsParseTypeAnnotation();
		}
		tsTryParseType() {
			return this.tsEatThenParseType(14);
		}
		tsParseTypePredicatePrefix() {
			let e$4 = this.parseIdentifier();
			if (this.isContextual(116) && !this.hasPrecedingLineBreak()) return this.next(), e$4;
		}
		tsParseTypePredicateAsserts() {
			if (this.state.type !== 109) return !1;
			let e$4 = this.state.containsEsc;
			return this.next(), !w$3(this.state.type) && !this.match(78) ? !1 : (e$4 && this.raise(p$2.InvalidEscapedReservedWord, this.state.lastTokStartLoc, { reservedWord: "asserts" }), !0);
		}
		tsParseTypeAnnotation(e$4 = !0, s$8 = this.startNode()) {
			return this.tsInType(() => {
				e$4 && this.expect(14), s$8.typeAnnotation = this.tsParseType();
			}), this.finishNode(s$8, "TSTypeAnnotation");
		}
		tsParseType() {
			Ps$4(this.state.inType);
			let e$4 = this.tsParseNonConditionalType();
			if (this.state.inDisallowConditionalTypesContext || this.hasPrecedingLineBreak() || !this.eat(81)) return e$4;
			let s$8 = this.startNodeAtNode(e$4);
			return s$8.checkType = e$4, s$8.extendsType = this.tsInDisallowConditionalTypesContext(() => this.tsParseNonConditionalType()), this.expect(17), s$8.trueType = this.tsInAllowConditionalTypesContext(() => this.tsParseType()), this.expect(14), s$8.falseType = this.tsInAllowConditionalTypesContext(() => this.tsParseType()), this.finishNode(s$8, "TSConditionalType");
		}
		isAbstractConstructorSignature() {
			return this.isContextual(124) && this.isLookaheadContextual("new");
		}
		tsParseNonConditionalType() {
			return this.tsIsStartOfFunctionType() ? this.tsParseFunctionOrConstructorType("TSFunctionType") : this.match(77) ? this.tsParseFunctionOrConstructorType("TSConstructorType") : this.isAbstractConstructorSignature() ? this.tsParseFunctionOrConstructorType("TSConstructorType", !0) : this.tsParseUnionTypeOrHigher();
		}
		tsParseTypeAssertion() {
			this.getPluginOption("typescript", "disallowAmbiguousJSXLike") && this.raise(y$7.ReservedTypeAssertion, this.state.startLoc);
			let e$4 = this.startNode();
			return e$4.typeAnnotation = this.tsInType(() => (this.next(), this.match(75) ? this.tsParseTypeReference() : this.tsParseType())), this.expect(48), e$4.expression = this.parseMaybeUnary(), this.finishNode(e$4, "TSTypeAssertion");
		}
		tsParseHeritageClause(e$4) {
			let s$8 = this.state.startLoc, i$18 = this.tsParseDelimitedList("HeritageClauseElement", () => {
				{
					let r$12 = this.startNode();
					return r$12.expression = this.tsParseEntityName(3), this.match(47) && (r$12.typeParameters = this.tsParseTypeArguments()), this.finishNode(r$12, "TSExpressionWithTypeArguments");
				}
			});
			return i$18.length || this.raise(y$7.EmptyHeritageClauseType, s$8, { token: e$4 }), i$18;
		}
		tsParseInterfaceDeclaration(e$4, s$8 = {}) {
			if (this.hasFollowingLineBreak()) return null;
			this.expectContextual(129), s$8.declare && (e$4.declare = !0), w$3(this.state.type) ? (e$4.id = this.parseIdentifier(), this.checkIdentifier(e$4.id, 130)) : (e$4.id = null, this.raise(y$7.MissingInterfaceName, this.state.startLoc)), e$4.typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers), this.eat(81) && (e$4.extends = this.tsParseHeritageClause("extends"));
			let i$18 = this.startNode();
			return i$18.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this)), e$4.body = this.finishNode(i$18, "TSInterfaceBody"), this.finishNode(e$4, "TSInterfaceDeclaration");
		}
		tsParseTypeAliasDeclaration(e$4) {
			return e$4.id = this.parseIdentifier(), this.checkIdentifier(e$4.id, 2), e$4.typeAnnotation = this.tsInType(() => {
				if (e$4.typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutModifiers), this.expect(29), this.isContextual(114) && this.lookaheadCharCode() !== 46) {
					let s$8 = this.startNode();
					return this.next(), this.finishNode(s$8, "TSIntrinsicKeyword");
				}
				return this.tsParseType();
			}), this.semicolon(), this.finishNode(e$4, "TSTypeAliasDeclaration");
		}
		tsInTopLevelContext(e$4) {
			if (this.curContext() !== C$3.brace) {
				let s$8 = this.state.context;
				this.state.context = [s$8[0]];
				try {
					return e$4();
				} finally {
					this.state.context = s$8;
				}
			} else return e$4();
		}
		tsInType(e$4) {
			let s$8 = this.state.inType;
			this.state.inType = !0;
			try {
				return e$4();
			} finally {
				this.state.inType = s$8;
			}
		}
		tsInDisallowConditionalTypesContext(e$4) {
			let s$8 = this.state.inDisallowConditionalTypesContext;
			this.state.inDisallowConditionalTypesContext = !0;
			try {
				return e$4();
			} finally {
				this.state.inDisallowConditionalTypesContext = s$8;
			}
		}
		tsInAllowConditionalTypesContext(e$4) {
			let s$8 = this.state.inDisallowConditionalTypesContext;
			this.state.inDisallowConditionalTypesContext = !1;
			try {
				return e$4();
			} finally {
				this.state.inDisallowConditionalTypesContext = s$8;
			}
		}
		tsEatThenParseType(e$4) {
			if (this.match(e$4)) return this.tsNextThenParseType();
		}
		tsExpectThenParseType(e$4) {
			return this.tsInType(() => (this.expect(e$4), this.tsParseType()));
		}
		tsNextThenParseType() {
			return this.tsInType(() => (this.next(), this.tsParseType()));
		}
		tsParseEnumMember() {
			let e$4 = this.startNode();
			return e$4.id = this.match(134) ? super.parseStringLiteral(this.state.value) : this.parseIdentifier(!0), this.eat(29) && (e$4.initializer = super.parseMaybeAssignAllowIn()), this.finishNode(e$4, "TSEnumMember");
		}
		tsParseEnumDeclaration(e$4, s$8 = {}) {
			return s$8.const && (e$4.const = !0), s$8.declare && (e$4.declare = !0), this.expectContextual(126), e$4.id = this.parseIdentifier(), this.checkIdentifier(e$4.id, e$4.const ? 8971 : 8459), this.expect(5), e$4.members = this.tsParseDelimitedList("EnumMembers", this.tsParseEnumMember.bind(this)), this.expect(8), this.finishNode(e$4, "TSEnumDeclaration");
		}
		tsParseEnumBody() {
			let e$4 = this.startNode();
			return this.expect(5), e$4.members = this.tsParseDelimitedList("EnumMembers", this.tsParseEnumMember.bind(this)), this.expect(8), this.finishNode(e$4, "TSEnumBody");
		}
		tsParseModuleBlock() {
			let e$4 = this.startNode();
			return this.scope.enter(0), this.expect(5), super.parseBlockOrModuleBlockBody(e$4.body = [], void 0, !0, 8), this.scope.exit(), this.finishNode(e$4, "TSModuleBlock");
		}
		tsParseModuleOrNamespaceDeclaration(e$4, s$8 = !1) {
			if (e$4.id = this.parseIdentifier(), s$8 || this.checkIdentifier(e$4.id, 1024), this.eat(16)) {
				let i$18 = this.startNode();
				this.tsParseModuleOrNamespaceDeclaration(i$18, !0), e$4.body = i$18;
			} else this.scope.enter(1024), this.prodParam.enter(0), e$4.body = this.tsParseModuleBlock(), this.prodParam.exit(), this.scope.exit();
			return this.finishNode(e$4, "TSModuleDeclaration");
		}
		tsParseAmbientExternalModuleDeclaration(e$4) {
			return this.isContextual(112) ? (e$4.kind = "global", e$4.global = !0, e$4.id = this.parseIdentifier()) : this.match(134) ? (e$4.kind = "module", e$4.id = super.parseStringLiteral(this.state.value)) : this.unexpected(), this.match(5) ? (this.scope.enter(1024), this.prodParam.enter(0), e$4.body = this.tsParseModuleBlock(), this.prodParam.exit(), this.scope.exit()) : this.semicolon(), this.finishNode(e$4, "TSModuleDeclaration");
		}
		tsParseImportEqualsDeclaration(e$4, s$8, i$18) {
			e$4.isExport = i$18 || !1, e$4.id = s$8 || this.parseIdentifier(), this.checkIdentifier(e$4.id, 4096), this.expect(29);
			let r$12 = this.tsParseModuleReference();
			return e$4.importKind === "type" && r$12.type !== "TSExternalModuleReference" && this.raise(y$7.ImportAliasHasImportType, r$12), e$4.moduleReference = r$12, this.semicolon(), this.finishNode(e$4, "TSImportEqualsDeclaration");
		}
		tsIsExternalModuleReference() {
			return this.isContextual(119) && this.lookaheadCharCode() === 40;
		}
		tsParseModuleReference() {
			return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(0);
		}
		tsParseExternalModuleReference() {
			let e$4 = this.startNode();
			return this.expectContextual(119), this.expect(10), this.match(134) || this.unexpected(), e$4.expression = super.parseExprAtom(), this.expect(11), this.sawUnambiguousESM = !0, this.finishNode(e$4, "TSExternalModuleReference");
		}
		tsLookAhead(e$4) {
			let s$8 = this.state.clone(), i$18 = e$4();
			return this.state = s$8, i$18;
		}
		tsTryParseAndCatch(e$4) {
			let s$8 = this.tryParse((i$18) => e$4() || i$18());
			if (!(s$8.aborted || !s$8.node)) return s$8.error && (this.state = s$8.failState), s$8.node;
		}
		tsTryParse(e$4) {
			let s$8 = this.state.clone(), i$18 = e$4();
			if (i$18 !== void 0 && i$18 !== !1) return i$18;
			this.state = s$8;
		}
		tsTryParseDeclare(e$4) {
			if (this.isLineTerminator()) return;
			let s$8 = this.state.type;
			return this.tsInAmbientContext(() => {
				switch (s$8) {
					case 68: return e$4.declare = !0, super.parseFunctionStatement(e$4, !1, !1);
					case 80: return e$4.declare = !0, this.parseClass(e$4, !0, !1);
					case 126: return this.tsParseEnumDeclaration(e$4, { declare: !0 });
					case 112: return this.tsParseAmbientExternalModuleDeclaration(e$4);
					case 100: if (this.state.containsEsc) return;
					case 75:
					case 74: return !this.match(75) || !this.isLookaheadContextual("enum") ? (e$4.declare = !0, this.parseVarStatement(e$4, this.state.value, !0)) : (this.expect(75), this.tsParseEnumDeclaration(e$4, {
						const: !0,
						declare: !0
					}));
					case 107:
						if (this.hasPlugin("explicitResourceManagement") && this.isUsing()) return this.raise(y$7.InvalidModifierOnUsingDeclaration, this.state.startLoc, "declare"), e$4.declare = !0, this.parseVarStatement(e$4, "using", !0);
						break;
					case 96:
						if (this.hasPlugin("explicitResourceManagement") && this.isAwaitUsing()) return this.raise(y$7.InvalidModifierOnAwaitUsingDeclaration, this.state.startLoc, "declare"), e$4.declare = !0, this.next(), this.parseVarStatement(e$4, "await using", !0);
						break;
					case 129: {
						let i$18 = this.tsParseInterfaceDeclaration(e$4, { declare: !0 });
						if (i$18) return i$18;
					}
					default: if (w$3(s$8)) return this.tsParseDeclaration(e$4, this.state.value, !0, null);
				}
			});
		}
		tsTryParseExportDeclaration() {
			return this.tsParseDeclaration(this.startNode(), this.state.value, !0, null);
		}
		tsParseExpressionStatement(e$4, s$8, i$18) {
			switch (s$8.name) {
				case "declare": {
					let r$12 = this.tsTryParseDeclare(e$4);
					return r$12 && (r$12.declare = !0), r$12;
				}
				case "global":
					if (this.match(5)) {
						this.scope.enter(1024), this.prodParam.enter(0);
						let r$12 = e$4;
						return r$12.kind = "global", e$4.global = !0, r$12.id = s$8, r$12.body = this.tsParseModuleBlock(), this.scope.exit(), this.prodParam.exit(), this.finishNode(r$12, "TSModuleDeclaration");
					}
					break;
				default: return this.tsParseDeclaration(e$4, s$8.name, !1, i$18);
			}
		}
		tsParseDeclaration(e$4, s$8, i$18, r$12) {
			switch (s$8) {
				case "abstract":
					if (this.tsCheckLineTerminator(i$18) && (this.match(80) || w$3(this.state.type))) return this.tsParseAbstractDeclaration(e$4, r$12);
					break;
				case "module":
					if (this.tsCheckLineTerminator(i$18)) {
						if (this.match(134)) return this.tsParseAmbientExternalModuleDeclaration(e$4);
						if (w$3(this.state.type)) return e$4.kind = "module", this.tsParseModuleOrNamespaceDeclaration(e$4);
					}
					break;
				case "namespace":
					if (this.tsCheckLineTerminator(i$18) && w$3(this.state.type)) return e$4.kind = "namespace", this.tsParseModuleOrNamespaceDeclaration(e$4);
					break;
				case "type":
					if (this.tsCheckLineTerminator(i$18) && w$3(this.state.type)) return this.tsParseTypeAliasDeclaration(e$4);
					break;
			}
		}
		tsCheckLineTerminator(e$4) {
			return e$4 ? this.hasFollowingLineBreak() ? !1 : (this.next(), !0) : !this.isLineTerminator();
		}
		tsTryParseGenericAsyncArrowFunction(e$4) {
			if (!this.match(47)) return;
			let s$8 = this.state.maybeInArrowParameters;
			this.state.maybeInArrowParameters = !0;
			let i$18 = this.tsTryParseAndCatch(() => {
				let r$12 = this.startNodeAt(e$4);
				return r$12.typeParameters = this.tsParseTypeParameters(this.tsParseConstModifier), super.parseFunctionParams(r$12), r$12.returnType = this.tsTryParseTypeOrTypePredicateAnnotation(), this.expect(19), r$12;
			});
			if (this.state.maybeInArrowParameters = s$8, !!i$18) return super.parseArrowExpression(i$18, null, !0);
		}
		tsParseTypeArgumentsInExpression() {
			if (this.reScan_lt() === 47) return this.tsParseTypeArguments();
		}
		tsParseTypeArguments() {
			let e$4 = this.startNode();
			return e$4.params = this.tsInType(() => this.tsInTopLevelContext(() => (this.expect(47), this.tsParseDelimitedList("TypeParametersOrArguments", this.tsParseType.bind(this))))), e$4.params.length === 0 ? this.raise(y$7.EmptyTypeArguments, e$4) : !this.state.inType && this.curContext() === C$3.brace && this.reScan_lt_gt(), this.expect(48), this.finishNode(e$4, "TSTypeParameterInstantiation");
		}
		tsIsDeclarationStart() {
			return Gi$5(this.state.type);
		}
		isExportDefaultSpecifier() {
			return this.tsIsDeclarationStart() ? !1 : super.isExportDefaultSpecifier();
		}
		parseBindingElement(e$4, s$8) {
			let i$18 = s$8.length ? s$8[0].loc.start : this.state.startLoc, r$12 = {};
			this.tsParseModifiers({ allowedModifiers: [
				"public",
				"private",
				"protected",
				"override",
				"readonly"
			] }, r$12);
			let n$8 = r$12.accessibility, o$9 = r$12.override, l$10 = r$12.readonly;
			!(e$4 & 4) && (n$8 || l$10 || o$9) && this.raise(y$7.UnexpectedParameterModifier, i$18);
			let h$3 = this.parseMaybeDefault();
			e$4 & 2 && this.parseFunctionParamType(h$3);
			let c$3 = this.parseMaybeDefault(h$3.loc.start, h$3);
			if (n$8 || l$10 || o$9) {
				let u$14 = this.startNodeAt(i$18);
				return s$8.length && (u$14.decorators = s$8), n$8 && (u$14.accessibility = n$8), l$10 && (u$14.readonly = l$10), o$9 && (u$14.override = o$9), c$3.type !== "Identifier" && c$3.type !== "AssignmentPattern" && this.raise(y$7.UnsupportedParameterPropertyKind, u$14), u$14.parameter = c$3, this.finishNode(u$14, "TSParameterProperty");
			}
			return s$8.length && (h$3.decorators = s$8), c$3;
		}
		isSimpleParameter(e$4) {
			return e$4.type === "TSParameterProperty" && super.isSimpleParameter(e$4.parameter) || super.isSimpleParameter(e$4);
		}
		tsDisallowOptionalPattern(e$4) {
			for (let s$8 of e$4.params) s$8.type !== "Identifier" && s$8.optional && !this.state.isAmbientContext && this.raise(y$7.PatternIsOptional, s$8);
		}
		setArrowFunctionParameters(e$4, s$8, i$18) {
			super.setArrowFunctionParameters(e$4, s$8, i$18), this.tsDisallowOptionalPattern(e$4);
		}
		parseFunctionBodyAndFinish(e$4, s$8, i$18 = !1) {
			this.match(14) && (e$4.returnType = this.tsParseTypeOrTypePredicateAnnotation(14));
			let r$12 = s$8 === "FunctionDeclaration" ? "TSDeclareFunction" : s$8 === "ClassMethod" || s$8 === "ClassPrivateMethod" ? "TSDeclareMethod" : void 0;
			return r$12 && !this.match(5) && this.isLineTerminator() ? this.finishNode(e$4, r$12) : r$12 === "TSDeclareFunction" && this.state.isAmbientContext && (this.raise(y$7.DeclareFunctionHasImplementation, e$4), e$4.declare) ? super.parseFunctionBodyAndFinish(e$4, r$12, i$18) : (this.tsDisallowOptionalPattern(e$4), super.parseFunctionBodyAndFinish(e$4, s$8, i$18));
		}
		registerFunctionStatementId(e$4) {
			!e$4.body && e$4.id ? this.checkIdentifier(e$4.id, 1024) : super.registerFunctionStatementId(e$4);
		}
		tsCheckForInvalidTypeCasts(e$4) {
			e$4.forEach((s$8) => {
				(s$8 == null ? void 0 : s$8.type) === "TSTypeCastExpression" && this.raise(y$7.UnexpectedTypeAnnotation, s$8.typeAnnotation);
			});
		}
		toReferencedList(e$4, s$8) {
			return this.tsCheckForInvalidTypeCasts(e$4), e$4;
		}
		parseArrayLike(e$4, s$8, i$18, r$12) {
			let n$8 = super.parseArrayLike(e$4, s$8, i$18, r$12);
			return n$8.type === "ArrayExpression" && this.tsCheckForInvalidTypeCasts(n$8.elements), n$8;
		}
		parseSubscript(e$4, s$8, i$18, r$12) {
			if (!this.hasPrecedingLineBreak() && this.match(35)) {
				this.state.canStartJSXElement = !1, this.next();
				let o$9 = this.startNodeAt(s$8);
				return o$9.expression = e$4, this.finishNode(o$9, "TSNonNullExpression");
			}
			let n$8 = !1;
			if (this.match(18) && this.lookaheadCharCode() === 60) {
				if (i$18) return r$12.stop = !0, e$4;
				r$12.optionalChainMember = n$8 = !0, this.next();
			}
			if (this.match(47) || this.match(51)) {
				let o$9, l$10 = this.tsTryParseAndCatch(() => {
					if (!i$18 && this.atPossibleAsyncArrow(e$4)) {
						let f$3 = this.tsTryParseGenericAsyncArrowFunction(s$8);
						if (f$3) return f$3;
					}
					let h$3 = this.tsParseTypeArgumentsInExpression();
					if (!h$3) return;
					if (n$8 && !this.match(10)) {
						o$9 = this.state.curPosition();
						return;
					}
					if (Ie$7(this.state.type)) {
						let f$3 = super.parseTaggedTemplateExpression(e$4, s$8, r$12);
						return f$3.typeParameters = h$3, f$3;
					}
					if (!i$18 && this.eat(10)) {
						let f$3 = this.startNodeAt(s$8);
						return f$3.callee = e$4, f$3.arguments = this.parseCallExpressionArguments(11), this.tsCheckForInvalidTypeCasts(f$3.arguments), f$3.typeParameters = h$3, r$12.optionalChainMember && (f$3.optional = n$8), this.finishCallExpression(f$3, r$12.optionalChainMember);
					}
					let c$3 = this.state.type;
					if (c$3 === 48 || c$3 === 52 || c$3 !== 10 && ue$4(c$3) && !this.hasPrecedingLineBreak()) return;
					let u$14 = this.startNodeAt(s$8);
					return u$14.expression = e$4, u$14.typeParameters = h$3, this.finishNode(u$14, "TSInstantiationExpression");
				});
				if (o$9 && this.unexpected(o$9, 10), l$10) return l$10.type === "TSInstantiationExpression" && ((this.match(16) || this.match(18) && this.lookaheadCharCode() !== 40) && this.raise(y$7.InvalidPropertyAccessAfterInstantiationExpression, this.state.startLoc), !this.match(16) && !this.match(18) && (l$10.expression = super.stopParseSubscript(e$4, r$12))), l$10;
			}
			return super.parseSubscript(e$4, s$8, i$18, r$12);
		}
		parseNewCallee(e$4) {
			var s$8;
			super.parseNewCallee(e$4);
			let { callee: i$18 } = e$4;
			i$18.type === "TSInstantiationExpression" && !((s$8 = i$18.extra) != null && s$8.parenthesized) && (e$4.typeParameters = i$18.typeParameters, e$4.callee = i$18.expression);
		}
		parseExprOp(e$4, s$8, i$18) {
			let r$12;
			if (Ee$4(58) > i$18 && !this.hasPrecedingLineBreak() && (this.isContextual(93) || (r$12 = this.isContextual(120)))) {
				let n$8 = this.startNodeAt(s$8);
				return n$8.expression = e$4, n$8.typeAnnotation = this.tsInType(() => (this.next(), this.match(75) ? (r$12 && this.raise(p$2.UnexpectedKeyword, this.state.startLoc, { keyword: "const" }), this.tsParseTypeReference()) : this.tsParseType())), this.finishNode(n$8, r$12 ? "TSSatisfiesExpression" : "TSAsExpression"), this.reScan_lt_gt(), this.parseExprOp(n$8, s$8, i$18);
			}
			return super.parseExprOp(e$4, s$8, i$18);
		}
		checkReservedWord(e$4, s$8, i$18, r$12) {
			this.state.isAmbientContext || super.checkReservedWord(e$4, s$8, i$18, r$12);
		}
		checkImportReflection(e$4) {
			super.checkImportReflection(e$4), e$4.module && e$4.importKind !== "value" && this.raise(y$7.ImportReflectionHasImportType, e$4.specifiers[0].loc.start);
		}
		checkDuplicateExports() {}
		isPotentialImportPhase(e$4) {
			if (super.isPotentialImportPhase(e$4)) return !0;
			if (this.isContextual(130)) {
				let s$8 = this.lookaheadCharCode();
				return e$4 ? s$8 === 123 || s$8 === 42 : s$8 !== 61;
			}
			return !e$4 && this.isContextual(87);
		}
		applyImportPhase(e$4, s$8, i$18, r$12) {
			super.applyImportPhase(e$4, s$8, i$18, r$12), s$8 ? e$4.exportKind = i$18 === "type" ? "type" : "value" : e$4.importKind = i$18 === "type" || i$18 === "typeof" ? i$18 : "value";
		}
		parseImport(e$4) {
			if (this.match(134)) return e$4.importKind = "value", super.parseImport(e$4);
			let s$8;
			if (w$3(this.state.type) && this.lookaheadCharCode() === 61) return e$4.importKind = "value", this.tsParseImportEqualsDeclaration(e$4);
			if (this.isContextual(130)) {
				let i$18 = this.parseMaybeImportPhase(e$4, !1);
				if (this.lookaheadCharCode() === 61) return this.tsParseImportEqualsDeclaration(e$4, i$18);
				s$8 = super.parseImportSpecifiersAndAfter(e$4, i$18);
			} else s$8 = super.parseImport(e$4);
			return s$8.importKind === "type" && s$8.specifiers.length > 1 && s$8.specifiers[0].type === "ImportDefaultSpecifier" && this.raise(y$7.TypeImportCannotSpecifyDefaultAndNamed, s$8), s$8;
		}
		parseExport(e$4, s$8) {
			if (this.match(83)) {
				let i$18 = e$4;
				this.next();
				let r$12 = null;
				return this.isContextual(130) && this.isPotentialImportPhase(!1) ? r$12 = this.parseMaybeImportPhase(i$18, !1) : i$18.importKind = "value", this.tsParseImportEqualsDeclaration(i$18, r$12, !0);
			} else if (this.eat(29)) {
				let i$18 = e$4;
				return i$18.expression = super.parseExpression(), this.semicolon(), this.sawUnambiguousESM = !0, this.finishNode(i$18, "TSExportAssignment");
			} else if (this.eatContextual(93)) {
				let i$18 = e$4;
				return this.expectContextual(128), i$18.id = this.parseIdentifier(), this.semicolon(), this.finishNode(i$18, "TSNamespaceExportDeclaration");
			} else return super.parseExport(e$4, s$8);
		}
		isAbstractClass() {
			return this.isContextual(124) && this.isLookaheadContextual("class");
		}
		parseExportDefaultExpression() {
			if (this.isAbstractClass()) {
				let e$4 = this.startNode();
				return this.next(), e$4.abstract = !0, this.parseClass(e$4, !0, !0);
			}
			if (this.match(129)) {
				let e$4 = this.tsParseInterfaceDeclaration(this.startNode());
				if (e$4) return e$4;
			}
			return super.parseExportDefaultExpression();
		}
		parseVarStatement(e$4, s$8, i$18 = !1) {
			let { isAmbientContext: r$12 } = this.state, n$8 = super.parseVarStatement(e$4, s$8, i$18 || r$12);
			if (!r$12) return n$8;
			if (!e$4.declare && (s$8 === "using" || s$8 === "await using")) return this.raiseOverwrite(y$7.UsingDeclarationInAmbientContext, e$4, s$8), n$8;
			for (let { id: o$9, init: l$10 } of n$8.declarations) l$10 && (s$8 === "var" || s$8 === "let" || o$9.typeAnnotation ? this.raise(y$7.InitializerNotAllowedInAmbientContext, l$10) : vr$4(l$10, this.hasPlugin("estree")) || this.raise(y$7.ConstInitializerMustBeStringOrNumericLiteralOrLiteralEnumReference, l$10));
			return n$8;
		}
		parseStatementContent(e$4, s$8) {
			if (this.match(75) && this.isLookaheadContextual("enum")) {
				let i$18 = this.startNode();
				return this.expect(75), this.tsParseEnumDeclaration(i$18, { const: !0 });
			}
			if (this.isContextual(126)) return this.tsParseEnumDeclaration(this.startNode());
			if (this.isContextual(129)) {
				let i$18 = this.tsParseInterfaceDeclaration(this.startNode());
				if (i$18) return i$18;
			}
			return super.parseStatementContent(e$4, s$8);
		}
		parseAccessModifier() {
			return this.tsParseModifier([
				"public",
				"protected",
				"private"
			]);
		}
		tsHasSomeModifiers(e$4, s$8) {
			return s$8.some((i$18) => gs$3(i$18) ? e$4.accessibility === i$18 : !!e$4[i$18]);
		}
		tsIsStartOfStaticBlocks() {
			return this.isContextual(106) && this.lookaheadCharCode() === 123;
		}
		parseClassMember(e$4, s$8, i$18) {
			let r$12 = [
				"declare",
				"private",
				"public",
				"protected",
				"override",
				"abstract",
				"readonly",
				"static"
			];
			this.tsParseModifiers({
				allowedModifiers: r$12,
				disallowedModifiers: ["in", "out"],
				stopOnStartOfClassStaticBlock: !0,
				errorTemplate: y$7.InvalidModifierOnTypeParameterPositions
			}, s$8);
			let n$8 = () => {
				this.tsIsStartOfStaticBlocks() ? (this.next(), this.next(), this.tsHasSomeModifiers(s$8, r$12) && this.raise(y$7.StaticBlockCannotHaveModifier, this.state.curPosition()), super.parseClassStaticBlock(e$4, s$8)) : this.parseClassMemberWithIsStatic(e$4, s$8, i$18, !!s$8.static);
			};
			s$8.declare ? this.tsInAmbientContext(n$8) : n$8();
		}
		parseClassMemberWithIsStatic(e$4, s$8, i$18, r$12) {
			let n$8 = this.tsTryParseIndexSignature(s$8);
			if (n$8) {
				e$4.body.push(n$8), s$8.abstract && this.raise(y$7.IndexSignatureHasAbstract, s$8), s$8.accessibility && this.raise(y$7.IndexSignatureHasAccessibility, s$8, { modifier: s$8.accessibility }), s$8.declare && this.raise(y$7.IndexSignatureHasDeclare, s$8), s$8.override && this.raise(y$7.IndexSignatureHasOverride, s$8);
				return;
			}
			!this.state.inAbstractClass && s$8.abstract && this.raise(y$7.NonAbstractClassHasAbstractMethod, s$8), s$8.override && (i$18.hadSuperClass || this.raise(y$7.OverrideNotInSubClass, s$8)), super.parseClassMemberWithIsStatic(e$4, s$8, i$18, r$12);
		}
		parsePostMemberNameModifiers(e$4) {
			this.eat(17) && (e$4.optional = !0), e$4.readonly && this.match(10) && this.raise(y$7.ClassMethodHasReadonly, e$4), e$4.declare && this.match(10) && this.raise(y$7.ClassMethodHasDeclare, e$4);
		}
		parseExpressionStatement(e$4, s$8, i$18) {
			return (s$8.type === "Identifier" ? this.tsParseExpressionStatement(e$4, s$8, i$18) : void 0) || super.parseExpressionStatement(e$4, s$8, i$18);
		}
		shouldParseExportDeclaration() {
			return this.tsIsDeclarationStart() ? !0 : super.shouldParseExportDeclaration();
		}
		parseConditional(e$4, s$8, i$18) {
			if (!this.match(17)) return e$4;
			if (this.state.maybeInArrowParameters) {
				let r$12 = this.lookaheadCharCode();
				if (r$12 === 44 || r$12 === 61 || r$12 === 58 || r$12 === 41) return this.setOptionalParametersError(i$18), e$4;
			}
			return super.parseConditional(e$4, s$8, i$18);
		}
		parseParenItem(e$4, s$8) {
			let i$18 = super.parseParenItem(e$4, s$8);
			if (this.eat(17) && (i$18.optional = !0, this.resetEndLocation(e$4)), this.match(14)) {
				let r$12 = this.startNodeAt(s$8);
				return r$12.expression = e$4, r$12.typeAnnotation = this.tsParseTypeAnnotation(), this.finishNode(r$12, "TSTypeCastExpression");
			}
			return e$4;
		}
		parseExportDeclaration(e$4) {
			if (!this.state.isAmbientContext && this.isContextual(125)) return this.tsInAmbientContext(() => this.parseExportDeclaration(e$4));
			let s$8 = this.state.startLoc, i$18 = this.eatContextual(125);
			if (i$18 && (this.isContextual(125) || !this.shouldParseExportDeclaration())) throw this.raise(y$7.ExpectedAmbientAfterExportDeclare, this.state.startLoc);
			let n$8 = w$3(this.state.type) && this.tsTryParseExportDeclaration() || super.parseExportDeclaration(e$4);
			return n$8 ? ((n$8.type === "TSInterfaceDeclaration" || n$8.type === "TSTypeAliasDeclaration" || i$18) && (e$4.exportKind = "type"), i$18 && n$8.type !== "TSImportEqualsDeclaration" && (this.resetStartLocation(n$8, s$8), n$8.declare = !0), n$8) : null;
		}
		parseClassId(e$4, s$8, i$18, r$12) {
			if ((!s$8 || i$18) && this.isContextual(113)) return;
			super.parseClassId(e$4, s$8, i$18, e$4.declare ? 1024 : 8331);
			let n$8 = this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers);
			n$8 && (e$4.typeParameters = n$8);
		}
		parseClassPropertyAnnotation(e$4) {
			e$4.optional || (this.eat(35) ? e$4.definite = !0 : this.eat(17) && (e$4.optional = !0));
			let s$8 = this.tsTryParseTypeAnnotation();
			s$8 && (e$4.typeAnnotation = s$8);
		}
		parseClassProperty(e$4) {
			if (this.parseClassPropertyAnnotation(e$4), this.state.isAmbientContext && !(e$4.readonly && !e$4.typeAnnotation) && this.match(29) && this.raise(y$7.DeclareClassFieldHasInitializer, this.state.startLoc), e$4.abstract && this.match(29)) {
				let { key: s$8 } = e$4;
				this.raise(y$7.AbstractPropertyHasInitializer, this.state.startLoc, { propertyName: s$8.type === "Identifier" && !e$4.computed ? s$8.name : `[${this.input.slice(this.offsetToSourcePos(s$8.start), this.offsetToSourcePos(s$8.end))}]` });
			}
			return super.parseClassProperty(e$4);
		}
		parseClassPrivateProperty(e$4) {
			return e$4.abstract && this.raise(y$7.PrivateElementHasAbstract, e$4), e$4.accessibility && this.raise(y$7.PrivateElementHasAccessibility, e$4, { modifier: e$4.accessibility }), this.parseClassPropertyAnnotation(e$4), super.parseClassPrivateProperty(e$4);
		}
		parseClassAccessorProperty(e$4) {
			return this.parseClassPropertyAnnotation(e$4), e$4.optional && this.raise(y$7.AccessorCannotBeOptional, e$4), super.parseClassAccessorProperty(e$4);
		}
		pushClassMethod(e$4, s$8, i$18, r$12, n$8, o$9) {
			let l$10 = this.tsTryParseTypeParameters(this.tsParseConstModifier);
			l$10 && n$8 && this.raise(y$7.ConstructorHasTypeParameters, l$10);
			let { declare: h$3 = !1, kind: c$3 } = s$8;
			h$3 && (c$3 === "get" || c$3 === "set") && this.raise(y$7.DeclareAccessor, s$8, { kind: c$3 }), l$10 && (s$8.typeParameters = l$10), super.pushClassMethod(e$4, s$8, i$18, r$12, n$8, o$9);
		}
		pushClassPrivateMethod(e$4, s$8, i$18, r$12) {
			let n$8 = this.tsTryParseTypeParameters(this.tsParseConstModifier);
			n$8 && (s$8.typeParameters = n$8), super.pushClassPrivateMethod(e$4, s$8, i$18, r$12);
		}
		declareClassPrivateMethodInScope(e$4, s$8) {
			e$4.type !== "TSDeclareMethod" && (e$4.type === "MethodDefinition" && e$4.value.body == null || super.declareClassPrivateMethodInScope(e$4, s$8));
		}
		parseClassSuper(e$4) {
			super.parseClassSuper(e$4), e$4.superClass && (this.match(47) || this.match(51)) && (e$4.superTypeParameters = this.tsParseTypeArgumentsInExpression()), this.eatContextual(113) && (e$4.implements = this.tsParseHeritageClause("implements"));
		}
		parseObjPropValue(e$4, s$8, i$18, r$12, n$8, o$9, l$10) {
			let h$3 = this.tsTryParseTypeParameters(this.tsParseConstModifier);
			return h$3 && (e$4.typeParameters = h$3), super.parseObjPropValue(e$4, s$8, i$18, r$12, n$8, o$9, l$10);
		}
		parseFunctionParams(e$4, s$8) {
			let i$18 = this.tsTryParseTypeParameters(this.tsParseConstModifier);
			i$18 && (e$4.typeParameters = i$18), super.parseFunctionParams(e$4, s$8);
		}
		parseVarId(e$4, s$8) {
			super.parseVarId(e$4, s$8), e$4.id.type === "Identifier" && !this.hasPrecedingLineBreak() && this.eat(35) && (e$4.definite = !0);
			let i$18 = this.tsTryParseTypeAnnotation();
			i$18 && (e$4.id.typeAnnotation = i$18, this.resetEndLocation(e$4.id));
		}
		parseAsyncArrowFromCallExpression(e$4, s$8) {
			return this.match(14) && (e$4.returnType = this.tsParseTypeAnnotation()), super.parseAsyncArrowFromCallExpression(e$4, s$8);
		}
		parseMaybeAssign(e$4, s$8) {
			var i$18, r$12, n$8, o$9, l$10;
			let h$3, c$3, u$14;
			if (this.hasPlugin("jsx") && (this.match(143) || this.match(47))) {
				if (h$3 = this.state.clone(), c$3 = this.tryParse(() => super.parseMaybeAssign(e$4, s$8), h$3), !c$3.error) return c$3.node;
				let { context: x$3 } = this.state, A$3 = x$3[x$3.length - 1];
				(A$3 === C$3.j_oTag || A$3 === C$3.j_expr) && x$3.pop();
			}
			if (!((i$18 = c$3) != null && i$18.error) && !this.match(47)) return super.parseMaybeAssign(e$4, s$8);
			(!h$3 || h$3 === this.state) && (h$3 = this.state.clone());
			let f$3, d$14 = this.tryParse((x$3) => {
				var A$3, N$5;
				f$3 = this.tsParseTypeParameters(this.tsParseConstModifier);
				let S$4 = super.parseMaybeAssign(e$4, s$8);
				return (S$4.type !== "ArrowFunctionExpression" || (A$3 = S$4.extra) != null && A$3.parenthesized) && x$3(), ((N$5 = f$3) == null ? void 0 : N$5.params.length) !== 0 && this.resetStartLocationFromNode(S$4, f$3), S$4.typeParameters = f$3, S$4;
			}, h$3);
			if (!d$14.error && !d$14.aborted) return f$3 && this.reportReservedArrowTypeParam(f$3), d$14.node;
			if (!c$3 && (Ps$4(!this.hasPlugin("jsx")), u$14 = this.tryParse(() => super.parseMaybeAssign(e$4, s$8), h$3), !u$14.error)) return u$14.node;
			if ((r$12 = c$3) != null && r$12.node) return this.state = c$3.failState, c$3.node;
			if (d$14.node) return this.state = d$14.failState, f$3 && this.reportReservedArrowTypeParam(f$3), d$14.node;
			if ((n$8 = u$14) != null && n$8.node) return this.state = u$14.failState, u$14.node;
			throw ((o$9 = c$3) == null ? void 0 : o$9.error) || d$14.error || ((l$10 = u$14) == null ? void 0 : l$10.error);
		}
		reportReservedArrowTypeParam(e$4) {
			var s$8;
			e$4.params.length === 1 && !e$4.params[0].constraint && !((s$8 = e$4.extra) != null && s$8.trailingComma) && this.getPluginOption("typescript", "disallowAmbiguousJSXLike") && this.raise(y$7.ReservedArrowTypeParam, e$4);
		}
		parseMaybeUnary(e$4, s$8) {
			return !this.hasPlugin("jsx") && this.match(47) ? this.tsParseTypeAssertion() : super.parseMaybeUnary(e$4, s$8);
		}
		parseArrow(e$4) {
			if (this.match(14)) {
				let s$8 = this.tryParse((i$18) => {
					let r$12 = this.tsParseTypeOrTypePredicateAnnotation(14);
					return (this.canInsertSemicolon() || !this.match(19)) && i$18(), r$12;
				});
				if (s$8.aborted) return;
				s$8.thrown || (s$8.error && (this.state = s$8.failState), e$4.returnType = s$8.node);
			}
			return super.parseArrow(e$4);
		}
		parseFunctionParamType(e$4) {
			this.eat(17) && (e$4.optional = !0);
			let s$8 = this.tsTryParseTypeAnnotation();
			return s$8 && (e$4.typeAnnotation = s$8), this.resetEndLocation(e$4), e$4;
		}
		isAssignable(e$4, s$8) {
			switch (e$4.type) {
				case "TSTypeCastExpression": return this.isAssignable(e$4.expression, s$8);
				case "TSParameterProperty": return !0;
				default: return super.isAssignable(e$4, s$8);
			}
		}
		toAssignable(e$4, s$8 = !1) {
			switch (e$4.type) {
				case "ParenthesizedExpression":
					this.toAssignableParenthesizedExpression(e$4, s$8);
					break;
				case "TSAsExpression":
				case "TSSatisfiesExpression":
				case "TSNonNullExpression":
				case "TSTypeAssertion":
					s$8 ? this.expressionScope.recordArrowParameterBindingError(y$7.UnexpectedTypeCastInParameter, e$4) : this.raise(y$7.UnexpectedTypeCastInParameter, e$4), this.toAssignable(e$4.expression, s$8);
					break;
				case "AssignmentExpression": !s$8 && e$4.left.type === "TSTypeCastExpression" && (e$4.left = this.typeCastToParameter(e$4.left));
				default: super.toAssignable(e$4, s$8);
			}
		}
		toAssignableParenthesizedExpression(e$4, s$8) {
			switch (e$4.expression.type) {
				case "TSAsExpression":
				case "TSSatisfiesExpression":
				case "TSNonNullExpression":
				case "TSTypeAssertion":
				case "ParenthesizedExpression":
					this.toAssignable(e$4.expression, s$8);
					break;
				default: super.toAssignable(e$4, s$8);
			}
		}
		checkToRestConversion(e$4, s$8) {
			switch (e$4.type) {
				case "TSAsExpression":
				case "TSSatisfiesExpression":
				case "TSTypeAssertion":
				case "TSNonNullExpression":
					this.checkToRestConversion(e$4.expression, !1);
					break;
				default: super.checkToRestConversion(e$4, s$8);
			}
		}
		isValidLVal(e$4, s$8, i$18) {
			switch (e$4) {
				case "TSTypeCastExpression": return !0;
				case "TSParameterProperty": return "parameter";
				case "TSNonNullExpression": return "expression";
				case "TSAsExpression":
				case "TSSatisfiesExpression":
				case "TSTypeAssertion": return (i$18 !== 64 || !s$8) && ["expression", !0];
				default: return super.isValidLVal(e$4, s$8, i$18);
			}
		}
		parseBindingAtom() {
			return this.state.type === 78 ? this.parseIdentifier(!0) : super.parseBindingAtom();
		}
		parseMaybeDecoratorArguments(e$4, s$8) {
			if (this.match(47) || this.match(51)) {
				let i$18 = this.tsParseTypeArgumentsInExpression();
				if (this.match(10)) {
					let r$12 = super.parseMaybeDecoratorArguments(e$4, s$8);
					return r$12.typeParameters = i$18, r$12;
				}
				this.unexpected(null, 10);
			}
			return super.parseMaybeDecoratorArguments(e$4, s$8);
		}
		checkCommaAfterRest(e$4) {
			return this.state.isAmbientContext && this.match(12) && this.lookaheadCharCode() === e$4 ? (this.next(), !1) : super.checkCommaAfterRest(e$4);
		}
		isClassMethod() {
			return this.match(47) || super.isClassMethod();
		}
		isClassProperty() {
			return this.match(35) || this.match(14) || super.isClassProperty();
		}
		parseMaybeDefault(e$4, s$8) {
			let i$18 = super.parseMaybeDefault(e$4, s$8);
			return i$18.type === "AssignmentPattern" && i$18.typeAnnotation && i$18.right.start < i$18.typeAnnotation.start && this.raise(y$7.TypeAnnotationAfterAssign, i$18.typeAnnotation), i$18;
		}
		getTokenFromCode(e$4) {
			if (this.state.inType) {
				if (e$4 === 62) {
					this.finishOp(48, 1);
					return;
				}
				if (e$4 === 60) {
					this.finishOp(47, 1);
					return;
				}
			}
			super.getTokenFromCode(e$4);
		}
		reScan_lt_gt() {
			let { type: e$4 } = this.state;
			e$4 === 47 ? (this.state.pos -= 1, this.readToken_lt()) : e$4 === 48 && (this.state.pos -= 1, this.readToken_gt());
		}
		reScan_lt() {
			let { type: e$4 } = this.state;
			return e$4 === 51 ? (this.state.pos -= 2, this.finishOp(47, 1), 47) : e$4;
		}
		toAssignableListItem(e$4, s$8, i$18) {
			let r$12 = e$4[s$8];
			r$12.type === "TSTypeCastExpression" && (e$4[s$8] = this.typeCastToParameter(r$12)), super.toAssignableListItem(e$4, s$8, i$18);
		}
		typeCastToParameter(e$4) {
			return e$4.expression.typeAnnotation = e$4.typeAnnotation, this.resetEndLocation(e$4.expression, e$4.typeAnnotation.loc.end), e$4.expression;
		}
		shouldParseArrow(e$4) {
			return this.match(14) ? e$4.every((s$8) => this.isAssignable(s$8, !0)) : super.shouldParseArrow(e$4);
		}
		shouldParseAsyncArrow() {
			return this.match(14) || super.shouldParseAsyncArrow();
		}
		canHaveLeadingDecorator() {
			return super.canHaveLeadingDecorator() || this.isAbstractClass();
		}
		jsxParseOpeningElementAfterName(e$4) {
			if (this.match(47) || this.match(51)) {
				let s$8 = this.tsTryParseAndCatch(() => this.tsParseTypeArgumentsInExpression());
				s$8 && (e$4.typeParameters = s$8);
			}
			return super.jsxParseOpeningElementAfterName(e$4);
		}
		getGetterSetterExpectedParamCount(e$4) {
			let s$8 = super.getGetterSetterExpectedParamCount(e$4), r$12 = this.getObjectOrClassMethodParams(e$4)[0];
			return r$12 && this.isThisParam(r$12) ? s$8 + 1 : s$8;
		}
		parseCatchClauseParam() {
			let e$4 = super.parseCatchClauseParam(), s$8 = this.tsTryParseTypeAnnotation();
			return s$8 && (e$4.typeAnnotation = s$8, this.resetEndLocation(e$4)), e$4;
		}
		tsInAmbientContext(e$4) {
			let { isAmbientContext: s$8, strict: i$18 } = this.state;
			this.state.isAmbientContext = !0, this.state.strict = !1;
			try {
				return e$4();
			} finally {
				this.state.isAmbientContext = s$8, this.state.strict = i$18;
			}
		}
		parseClass(e$4, s$8, i$18) {
			let r$12 = this.state.inAbstractClass;
			this.state.inAbstractClass = !!e$4.abstract;
			try {
				return super.parseClass(e$4, s$8, i$18);
			} finally {
				this.state.inAbstractClass = r$12;
			}
		}
		tsParseAbstractDeclaration(e$4, s$8) {
			if (this.match(80)) return e$4.abstract = !0, this.maybeTakeDecorators(s$8, this.parseClass(e$4, !0, !1));
			if (this.isContextual(129)) {
				if (!this.hasFollowingLineBreak()) return e$4.abstract = !0, this.raise(y$7.NonClassMethodPropertyHasAbstractModifier, e$4), this.tsParseInterfaceDeclaration(e$4);
			} else this.unexpected(null, 80);
		}
		parseMethod(e$4, s$8, i$18, r$12, n$8, o$9, l$10) {
			let h$3 = super.parseMethod(e$4, s$8, i$18, r$12, n$8, o$9, l$10);
			if ((h$3.abstract || h$3.type === "TSAbstractMethodDefinition") && (this.hasPlugin("estree") ? h$3.value : h$3).body) {
				let { key: f$3 } = h$3;
				this.raise(y$7.AbstractMethodHasImplementation, h$3, { methodName: f$3.type === "Identifier" && !h$3.computed ? f$3.name : `[${this.input.slice(this.offsetToSourcePos(f$3.start), this.offsetToSourcePos(f$3.end))}]` });
			}
			return h$3;
		}
		tsParseTypeParameterName() {
			return this.parseIdentifier().name;
		}
		shouldParseAsAmbientContext() {
			return !!this.getPluginOption("typescript", "dts");
		}
		parse() {
			return this.shouldParseAsAmbientContext() && (this.state.isAmbientContext = !0), super.parse();
		}
		getExpression() {
			return this.shouldParseAsAmbientContext() && (this.state.isAmbientContext = !0), super.getExpression();
		}
		parseExportSpecifier(e$4, s$8, i$18, r$12) {
			return !s$8 && r$12 ? (this.parseTypeOnlyImportExportSpecifier(e$4, !1, i$18), this.finishNode(e$4, "ExportSpecifier")) : (e$4.exportKind = "value", super.parseExportSpecifier(e$4, s$8, i$18, r$12));
		}
		parseImportSpecifier(e$4, s$8, i$18, r$12, n$8) {
			return !s$8 && r$12 ? (this.parseTypeOnlyImportExportSpecifier(e$4, !0, i$18), this.finishNode(e$4, "ImportSpecifier")) : (e$4.importKind = "value", super.parseImportSpecifier(e$4, s$8, i$18, r$12, i$18 ? 4098 : 4096));
		}
		parseTypeOnlyImportExportSpecifier(e$4, s$8, i$18) {
			let r$12 = s$8 ? "imported" : "local", n$8 = s$8 ? "local" : "exported", o$9 = e$4[r$12], l$10, h$3 = !1, c$3 = !0, u$14 = o$9.loc.start;
			if (this.isContextual(93)) {
				let d$14 = this.parseIdentifier();
				if (this.isContextual(93)) {
					let x$3 = this.parseIdentifier();
					M$2(this.state.type) ? (h$3 = !0, o$9 = d$14, l$10 = s$8 ? this.parseIdentifier() : this.parseModuleExportName(), c$3 = !1) : (l$10 = x$3, c$3 = !1);
				} else M$2(this.state.type) ? (c$3 = !1, l$10 = s$8 ? this.parseIdentifier() : this.parseModuleExportName()) : (h$3 = !0, o$9 = d$14);
			} else M$2(this.state.type) && (h$3 = !0, s$8 ? (o$9 = this.parseIdentifier(!0), this.isContextual(93) || this.checkReservedWord(o$9.name, o$9.loc.start, !0, !0)) : o$9 = this.parseModuleExportName());
			h$3 && i$18 && this.raise(s$8 ? y$7.TypeModifierIsUsedInTypeImports : y$7.TypeModifierIsUsedInTypeExports, u$14), e$4[r$12] = o$9, e$4[n$8] = l$10;
			let f$3 = s$8 ? "importKind" : "exportKind";
			e$4[f$3] = h$3 ? "type" : "value", c$3 && this.eatContextual(93) && (e$4[n$8] = s$8 ? this.parseIdentifier() : this.parseModuleExportName()), e$4[n$8] || (e$4[n$8] = this.cloneIdentifier(e$4[r$12])), s$8 && this.checkIdentifier(e$4[n$8], h$3 ? 4098 : 4096);
		}
		fillOptionalPropertiesForTSESLint(e$4) {
			switch (e$4.type) {
				case "ExpressionStatement":
					e$4.directive ??= void 0;
					return;
				case "RestElement": e$4.value = void 0;
				case "Identifier":
				case "ArrayPattern":
				case "AssignmentPattern":
				case "ObjectPattern":
					e$4.decorators ??= [], e$4.optional ??= !1, e$4.typeAnnotation ??= void 0;
					return;
				case "TSParameterProperty":
					e$4.accessibility ??= void 0, e$4.decorators ??= [], e$4.override ??= !1, e$4.readonly ??= !1, e$4.static ??= !1;
					return;
				case "TSEmptyBodyFunctionExpression": e$4.body = null;
				case "TSDeclareFunction":
				case "FunctionDeclaration":
				case "FunctionExpression":
				case "ClassMethod":
				case "ClassPrivateMethod":
					e$4.declare ??= !1, e$4.returnType ??= void 0, e$4.typeParameters ??= void 0;
					return;
				case "Property":
					e$4.optional ??= !1;
					return;
				case "TSMethodSignature":
				case "TSPropertySignature": e$4.optional ??= !1;
				case "TSIndexSignature":
					e$4.accessibility ??= void 0, e$4.readonly ??= !1, e$4.static ??= !1;
					return;
				case "TSAbstractPropertyDefinition":
				case "PropertyDefinition":
				case "TSAbstractAccessorProperty":
				case "AccessorProperty": e$4.declare ??= !1, e$4.definite ??= !1, e$4.readonly ??= !1, e$4.typeAnnotation ??= void 0;
				case "TSAbstractMethodDefinition":
				case "MethodDefinition":
					e$4.accessibility ??= void 0, e$4.decorators ??= [], e$4.override ??= !1, e$4.optional ??= !1;
					return;
				case "ClassExpression": e$4.id ??= null;
				case "ClassDeclaration":
					e$4.abstract ??= !1, e$4.declare ??= !1, e$4.decorators ??= [], e$4.implements ??= [], e$4.superTypeArguments ??= void 0, e$4.typeParameters ??= void 0;
					return;
				case "TSTypeAliasDeclaration":
				case "VariableDeclaration":
					e$4.declare ??= !1;
					return;
				case "VariableDeclarator":
					e$4.definite ??= !1;
					return;
				case "TSEnumDeclaration":
					e$4.const ??= !1, e$4.declare ??= !1;
					return;
				case "TSEnumMember":
					e$4.computed ??= !1;
					return;
				case "TSImportType":
					e$4.qualifier ??= null, e$4.options ??= null;
					return;
				case "TSInterfaceDeclaration":
					e$4.declare ??= !1, e$4.extends ??= [];
					return;
				case "TSModuleDeclaration":
					e$4.declare ??= !1, e$4.global ??= e$4.kind === "global";
					return;
				case "TSTypeParameter":
					e$4.const ??= !1, e$4.in ??= !1, e$4.out ??= !1;
					return;
			}
		}
	};
	function kr$5(a$13) {
		if (a$13.type !== "MemberExpression") return !1;
		let { computed: t$13, property: e$4 } = a$13;
		return t$13 && e$4.type !== "StringLiteral" && (e$4.type !== "TemplateLiteral" || e$4.expressions.length > 0) ? !1 : Rs$3(a$13.object);
	}
	function vr$4(a$13, t$13) {
		var e$4;
		let { type: s$8 } = a$13;
		if ((e$4 = a$13.extra) != null && e$4.parenthesized) return !1;
		if (t$13) {
			if (s$8 === "Literal") {
				let { value: i$18 } = a$13;
				if (typeof i$18 == "string" || typeof i$18 == "boolean") return !0;
			}
		} else if (s$8 === "StringLiteral" || s$8 === "BooleanLiteral") return !0;
		return !!(Bs$4(a$13, t$13) || Lr$5(a$13, t$13) || s$8 === "TemplateLiteral" && a$13.expressions.length === 0 || kr$5(a$13));
	}
	function Bs$4(a$13, t$13) {
		return t$13 ? a$13.type === "Literal" && (typeof a$13.value == "number" || "bigint" in a$13) : a$13.type === "NumericLiteral" || a$13.type === "BigIntLiteral";
	}
	function Lr$5(a$13, t$13) {
		if (a$13.type === "UnaryExpression") {
			let { operator: e$4, argument: s$8 } = a$13;
			if (e$4 === "-" && Bs$4(s$8, t$13)) return !0;
		}
		return !1;
	}
	function Rs$3(a$13) {
		return a$13.type === "Identifier" ? !0 : a$13.type !== "MemberExpression" || a$13.computed ? !1 : Rs$3(a$13.object);
	}
	var Ts$3 = F$4`placeholders`({
		ClassNameIsRequired: "A class name is required.",
		UnexpectedSpace: "Unexpected space in placeholder."
	}), Dr$5 = (a$13) => class extends a$13 {
		parsePlaceholder(e$4) {
			if (this.match(133)) {
				let s$8 = this.startNode();
				return this.next(), this.assertNoSpace(), s$8.name = super.parseIdentifier(!0), this.assertNoSpace(), this.expect(133), this.finishPlaceholder(s$8, e$4);
			}
		}
		finishPlaceholder(e$4, s$8) {
			let i$18 = e$4;
			return (!i$18.expectedNode || !i$18.type) && (i$18 = this.finishNode(i$18, "Placeholder")), i$18.expectedNode = s$8, i$18;
		}
		getTokenFromCode(e$4) {
			e$4 === 37 && this.input.charCodeAt(this.state.pos + 1) === 37 ? this.finishOp(133, 2) : super.getTokenFromCode(e$4);
		}
		parseExprAtom(e$4) {
			return this.parsePlaceholder("Expression") || super.parseExprAtom(e$4);
		}
		parseIdentifier(e$4) {
			return this.parsePlaceholder("Identifier") || super.parseIdentifier(e$4);
		}
		checkReservedWord(e$4, s$8, i$18, r$12) {
			e$4 !== void 0 && super.checkReservedWord(e$4, s$8, i$18, r$12);
		}
		cloneIdentifier(e$4) {
			let s$8 = super.cloneIdentifier(e$4);
			return s$8.type === "Placeholder" && (s$8.expectedNode = e$4.expectedNode), s$8;
		}
		cloneStringLiteral(e$4) {
			return e$4.type === "Placeholder" ? this.cloneIdentifier(e$4) : super.cloneStringLiteral(e$4);
		}
		parseBindingAtom() {
			return this.parsePlaceholder("Pattern") || super.parseBindingAtom();
		}
		isValidLVal(e$4, s$8, i$18) {
			return e$4 === "Placeholder" || super.isValidLVal(e$4, s$8, i$18);
		}
		toAssignable(e$4, s$8) {
			e$4 && e$4.type === "Placeholder" && e$4.expectedNode === "Expression" ? e$4.expectedNode = "Pattern" : super.toAssignable(e$4, s$8);
		}
		chStartsBindingIdentifier(e$4, s$8) {
			if (super.chStartsBindingIdentifier(e$4, s$8)) return !0;
			let i$18 = this.nextTokenStart();
			return this.input.charCodeAt(i$18) === 37 && this.input.charCodeAt(i$18 + 1) === 37;
		}
		verifyBreakContinue(e$4, s$8) {
			e$4.label && e$4.label.type === "Placeholder" || super.verifyBreakContinue(e$4, s$8);
		}
		parseExpressionStatement(e$4, s$8) {
			var i$18;
			if (s$8.type !== "Placeholder" || (i$18 = s$8.extra) != null && i$18.parenthesized) return super.parseExpressionStatement(e$4, s$8);
			if (this.match(14)) {
				let n$8 = e$4;
				return n$8.label = this.finishPlaceholder(s$8, "Identifier"), this.next(), n$8.body = super.parseStatementOrSloppyAnnexBFunctionDeclaration(), this.finishNode(n$8, "LabeledStatement");
			}
			this.semicolon();
			let r$12 = e$4;
			return r$12.name = s$8.name, this.finishPlaceholder(r$12, "Statement");
		}
		parseBlock(e$4, s$8, i$18) {
			return this.parsePlaceholder("BlockStatement") || super.parseBlock(e$4, s$8, i$18);
		}
		parseFunctionId(e$4) {
			return this.parsePlaceholder("Identifier") || super.parseFunctionId(e$4);
		}
		parseClass(e$4, s$8, i$18) {
			let r$12 = s$8 ? "ClassDeclaration" : "ClassExpression";
			this.next();
			let n$8 = this.state.strict, o$9 = this.parsePlaceholder("Identifier");
			if (o$9) if (this.match(81) || this.match(133) || this.match(5)) e$4.id = o$9;
			else {
				if (i$18 || !s$8) return e$4.id = null, e$4.body = this.finishPlaceholder(o$9, "ClassBody"), this.finishNode(e$4, r$12);
				throw this.raise(Ts$3.ClassNameIsRequired, this.state.startLoc);
			}
			else this.parseClassId(e$4, s$8, i$18);
			return super.parseClassSuper(e$4), e$4.body = this.parsePlaceholder("ClassBody") || super.parseClassBody(!!e$4.superClass, n$8), this.finishNode(e$4, r$12);
		}
		parseExport(e$4, s$8) {
			let i$18 = this.parsePlaceholder("Identifier");
			if (!i$18) return super.parseExport(e$4, s$8);
			let r$12 = e$4;
			if (!this.isContextual(98) && !this.match(12)) return r$12.specifiers = [], r$12.source = null, r$12.declaration = this.finishPlaceholder(i$18, "Declaration"), this.finishNode(r$12, "ExportNamedDeclaration");
			this.expectPlugin("exportDefaultFrom");
			let n$8 = this.startNode();
			return n$8.exported = i$18, r$12.specifiers = [this.finishNode(n$8, "ExportDefaultSpecifier")], super.parseExport(r$12, s$8);
		}
		isExportDefaultSpecifier() {
			if (this.match(65)) {
				let e$4 = this.nextTokenStart();
				if (this.isUnparsedContextual(e$4, "from") && this.input.startsWith(H$6(133), this.nextTokenStartSince(e$4 + 4))) return !0;
			}
			return super.isExportDefaultSpecifier();
		}
		maybeParseExportDefaultSpecifier(e$4, s$8) {
			var i$18;
			return (i$18 = e$4.specifiers) != null && i$18.length ? !0 : super.maybeParseExportDefaultSpecifier(e$4, s$8);
		}
		checkExport(e$4) {
			let { specifiers: s$8 } = e$4;
			s$8 != null && s$8.length && (e$4.specifiers = s$8.filter((i$18) => i$18.exported.type === "Placeholder")), super.checkExport(e$4), e$4.specifiers = s$8;
		}
		parseImport(e$4) {
			let s$8 = this.parsePlaceholder("Identifier");
			if (!s$8) return super.parseImport(e$4);
			if (e$4.specifiers = [], !this.isContextual(98) && !this.match(12)) return e$4.source = this.finishPlaceholder(s$8, "StringLiteral"), this.semicolon(), this.finishNode(e$4, "ImportDeclaration");
			let i$18 = this.startNodeAtNode(s$8);
			return i$18.local = s$8, e$4.specifiers.push(this.finishNode(i$18, "ImportDefaultSpecifier")), this.eat(12) && (this.maybeParseStarImportSpecifier(e$4) || this.parseNamedImportSpecifiers(e$4)), this.expectContextual(98), e$4.source = this.parseImportSource(), this.semicolon(), this.finishNode(e$4, "ImportDeclaration");
		}
		parseImportSource() {
			return this.parsePlaceholder("StringLiteral") || super.parseImportSource();
		}
		assertNoSpace() {
			this.state.start > this.offsetToSourcePos(this.state.lastTokEndLoc.index) && this.raise(Ts$3.UnexpectedSpace, this.state.lastTokEndLoc);
		}
	}, Mr$4 = (a$13) => class extends a$13 {
		parseV8Intrinsic() {
			if (this.match(54)) {
				let e$4 = this.state.startLoc, s$8 = this.startNode();
				if (this.next(), w$3(this.state.type)) {
					let i$18 = this.parseIdentifierName(), r$12 = this.createIdentifier(s$8, i$18);
					if (this.castNodeTo(r$12, "V8IntrinsicIdentifier"), this.match(10)) return r$12;
				}
				this.unexpected(e$4);
			}
		}
		parseExprAtom(e$4) {
			return this.parseV8Intrinsic() || super.parseExprAtom(e$4);
		}
	}, bs$4 = [
		"minimal",
		"fsharp",
		"hack",
		"smart"
	], As$2 = [
		"^^",
		"@@",
		"^",
		"%",
		"#"
	];
	function Or$5(a$13) {
		if (a$13.has("decorators")) {
			if (a$13.has("decorators-legacy")) throw new Error("Cannot use the decorators and decorators-legacy plugin together");
			let s$8 = a$13.get("decorators").decoratorsBeforeExport;
			if (s$8 != null && typeof s$8 != "boolean") throw new Error("'decoratorsBeforeExport' must be a boolean, if specified.");
			let i$18 = a$13.get("decorators").allowCallParenthesized;
			if (i$18 != null && typeof i$18 != "boolean") throw new Error("'allowCallParenthesized' must be a boolean.");
		}
		if (a$13.has("flow") && a$13.has("typescript")) throw new Error("Cannot combine flow and typescript plugins.");
		if (a$13.has("placeholders") && a$13.has("v8intrinsic")) throw new Error("Cannot combine placeholders and v8intrinsic plugins.");
		if (a$13.has("pipelineOperator")) {
			var t$13;
			let s$8 = a$13.get("pipelineOperator").proposal;
			if (!bs$4.includes(s$8)) {
				let i$18 = bs$4.map((r$12) => `"${r$12}"`).join(", ");
				throw new Error(`"pipelineOperator" requires "proposal" option whose value must be one of: ${i$18}.`);
			}
			if (s$8 === "hack") {
				if (a$13.has("placeholders")) throw new Error("Cannot combine placeholders plugin and Hack-style pipes.");
				if (a$13.has("v8intrinsic")) throw new Error("Cannot combine v8intrinsic plugin and Hack-style pipes.");
				let i$18 = a$13.get("pipelineOperator").topicToken;
				if (!As$2.includes(i$18)) {
					let r$12 = As$2.map((n$8) => `"${n$8}"`).join(", ");
					throw new Error(`"pipelineOperator" in "proposal": "hack" mode also requires a "topicToken" option whose value must be one of: ${r$12}.`);
				}
				var e$4;
				if (i$18 === "#" && ((e$4 = a$13.get("recordAndTuple")) == null ? void 0 : e$4.syntaxType) === "hash") throw new Error(`Plugin conflict between \`["pipelineOperator", { proposal: "hack", topicToken: "#" }]\` and \`${JSON.stringify(["recordAndTuple", a$13.get("recordAndTuple")])}\`.`);
			} else if (s$8 === "smart" && ((t$13 = a$13.get("recordAndTuple")) == null ? void 0 : t$13.syntaxType) === "hash") throw new Error(`Plugin conflict between \`["pipelineOperator", { proposal: "smart" }]\` and \`${JSON.stringify(["recordAndTuple", a$13.get("recordAndTuple")])}\`.`);
		}
		if (a$13.has("moduleAttributes")) {
			if (a$13.has("deprecatedImportAssert") || a$13.has("importAssertions")) throw new Error("Cannot combine importAssertions, deprecatedImportAssert and moduleAttributes plugins.");
			if (a$13.get("moduleAttributes").version !== "may-2020") throw new Error("The 'moduleAttributes' plugin requires a 'version' option, representing the last proposal update. Currently, the only supported value is 'may-2020'.");
		}
		if (a$13.has("importAssertions") && a$13.has("deprecatedImportAssert")) throw new Error("Cannot combine importAssertions and deprecatedImportAssert plugins.");
		if (!a$13.has("deprecatedImportAssert") && a$13.has("importAttributes") && a$13.get("importAttributes").deprecatedAssertSyntax && a$13.set("deprecatedImportAssert", {}), a$13.has("recordAndTuple")) {
			let s$8 = a$13.get("recordAndTuple").syntaxType;
			if (s$8 != null) {
				let i$18 = ["hash", "bar"];
				if (!i$18.includes(s$8)) throw new Error("The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: " + i$18.map((r$12) => `'${r$12}'`).join(", "));
			}
		}
		if (a$13.has("asyncDoExpressions") && !a$13.has("doExpressions")) {
			let s$8 = /* @__PURE__ */ new Error("'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.");
			throw s$8.missingPlugins = "doExpressions", s$8;
		}
		if (a$13.has("optionalChainingAssign") && a$13.get("optionalChainingAssign").version !== "2023-07") throw new Error("The 'optionalChainingAssign' plugin requires a 'version' option, representing the last proposal update. Currently, the only supported value is '2023-07'.");
	}
	var _s$3 = {
		estree: Ui$4,
		jsx: yr$4,
		flow: fr$5,
		typescript: Nr$6,
		v8intrinsic: Mr$4,
		placeholders: Dr$5
	}, Fr$5 = Object.keys(_s$3), ht$4 = class extends lt$3 {
		checkProto(t$13, e$4, s$8, i$18) {
			if (t$13.type === "SpreadElement" || this.isObjectMethod(t$13) || t$13.computed || t$13.shorthand) return s$8;
			let r$12 = t$13.key;
			return (r$12.type === "Identifier" ? r$12.name : r$12.value) === "__proto__" ? e$4 ? (this.raise(p$2.RecordNoProto, r$12), !0) : (s$8 && (i$18 ? i$18.doubleProtoLoc === null && (i$18.doubleProtoLoc = r$12.loc.start) : this.raise(p$2.DuplicateProto, r$12)), !0) : s$8;
		}
		shouldExitDescending(t$13, e$4) {
			return t$13.type === "ArrowFunctionExpression" && this.offsetToSourcePos(t$13.start) === e$4;
		}
		getExpression() {
			if (this.enterInitialScopes(), this.nextToken(), this.match(140)) throw this.raise(p$2.ParseExpressionEmptyInput, this.state.startLoc);
			let t$13 = this.parseExpression();
			if (!this.match(140)) throw this.raise(p$2.ParseExpressionExpectsEOF, this.state.startLoc, { unexpected: this.input.codePointAt(this.state.start) });
			return this.finalizeRemainingComments(), t$13.comments = this.comments, t$13.errors = this.state.errors, this.optionFlags & 256 && (t$13.tokens = this.tokens), t$13;
		}
		parseExpression(t$13, e$4) {
			return t$13 ? this.disallowInAnd(() => this.parseExpressionBase(e$4)) : this.allowInAnd(() => this.parseExpressionBase(e$4));
		}
		parseExpressionBase(t$13) {
			let e$4 = this.state.startLoc, s$8 = this.parseMaybeAssign(t$13);
			if (this.match(12)) {
				let i$18 = this.startNodeAt(e$4);
				for (i$18.expressions = [s$8]; this.eat(12);) i$18.expressions.push(this.parseMaybeAssign(t$13));
				return this.toReferencedList(i$18.expressions), this.finishNode(i$18, "SequenceExpression");
			}
			return s$8;
		}
		parseMaybeAssignDisallowIn(t$13, e$4) {
			return this.disallowInAnd(() => this.parseMaybeAssign(t$13, e$4));
		}
		parseMaybeAssignAllowIn(t$13, e$4) {
			return this.allowInAnd(() => this.parseMaybeAssign(t$13, e$4));
		}
		setOptionalParametersError(t$13) {
			t$13.optionalParametersLoc = this.state.startLoc;
		}
		parseMaybeAssign(t$13, e$4) {
			let s$8 = this.state.startLoc, i$18 = this.isContextual(108);
			if (i$18 && this.prodParam.hasYield) {
				this.next();
				let l$10 = this.parseYield(s$8);
				return e$4 && (l$10 = e$4.call(this, l$10, s$8)), l$10;
			}
			let r$12;
			t$13 ? r$12 = !1 : (t$13 = new te$5(), r$12 = !0);
			let { type: n$8 } = this.state;
			(n$8 === 10 || w$3(n$8)) && (this.state.potentialArrowAt = this.state.start);
			let o$9 = this.parseMaybeConditional(t$13);
			if (e$4 && (o$9 = e$4.call(this, o$9, s$8)), zi$4(this.state.type)) {
				let l$10 = this.startNodeAt(s$8);
				if (l$10.operator = this.state.value, this.match(29)) {
					this.toAssignable(o$9, !0), l$10.left = o$9;
					let c$3 = s$8.index;
					t$13.doubleProtoLoc != null && t$13.doubleProtoLoc.index >= c$3 && (t$13.doubleProtoLoc = null), t$13.shorthandAssignLoc != null && t$13.shorthandAssignLoc.index >= c$3 && (t$13.shorthandAssignLoc = null), t$13.privateKeyLoc != null && t$13.privateKeyLoc.index >= c$3 && (this.checkDestructuringPrivate(t$13), t$13.privateKeyLoc = null);
				} else l$10.left = o$9;
				return this.next(), l$10.right = this.parseMaybeAssign(), this.checkLVal(o$9, this.finishNode(l$10, "AssignmentExpression")), l$10;
			} else r$12 && this.checkExpressionErrors(t$13, !0);
			if (i$18) {
				let { type: l$10 } = this.state;
				if ((this.hasPlugin("v8intrinsic") ? ue$4(l$10) : ue$4(l$10) && !this.match(54)) && !this.isAmbiguousPrefixOrIdentifier()) return this.raiseOverwrite(p$2.YieldNotInGeneratorFunction, s$8), this.parseYield(s$8);
			}
			return o$9;
		}
		parseMaybeConditional(t$13) {
			let e$4 = this.state.startLoc, s$8 = this.state.potentialArrowAt, i$18 = this.parseExprOps(t$13);
			return this.shouldExitDescending(i$18, s$8) ? i$18 : this.parseConditional(i$18, e$4, t$13);
		}
		parseConditional(t$13, e$4, s$8) {
			if (this.eat(17)) {
				let i$18 = this.startNodeAt(e$4);
				return i$18.test = t$13, i$18.consequent = this.parseMaybeAssignAllowIn(), this.expect(14), i$18.alternate = this.parseMaybeAssign(), this.finishNode(i$18, "ConditionalExpression");
			}
			return t$13;
		}
		parseMaybeUnaryOrPrivate(t$13) {
			return this.match(139) ? this.parsePrivateName() : this.parseMaybeUnary(t$13);
		}
		parseExprOps(t$13) {
			let e$4 = this.state.startLoc, s$8 = this.state.potentialArrowAt, i$18 = this.parseMaybeUnaryOrPrivate(t$13);
			return this.shouldExitDescending(i$18, s$8) ? i$18 : this.parseExprOp(i$18, e$4, -1);
		}
		parseExprOp(t$13, e$4, s$8) {
			if (this.isPrivateName(t$13)) {
				let r$12 = this.getPrivateNameSV(t$13);
				(s$8 >= Ee$4(58) || !this.prodParam.hasIn || !this.match(58)) && this.raise(p$2.PrivateInExpectedIn, t$13, { identifierName: r$12 }), this.classScope.usePrivateName(r$12, t$13.loc.start);
			}
			let i$18 = this.state.type;
			if (Ki$5(i$18) && (this.prodParam.hasIn || !this.match(58))) {
				let r$12 = Ee$4(i$18);
				if (r$12 > s$8) {
					if (i$18 === 39) {
						if (this.expectPlugin("pipelineOperator"), this.state.inFSharpPipelineDirectBody) return t$13;
						this.checkPipelineAtInfixOperator(t$13, e$4);
					}
					let n$8 = this.startNodeAt(e$4);
					n$8.left = t$13, n$8.operator = this.state.value;
					let o$9 = i$18 === 41 || i$18 === 42, l$10 = i$18 === 40;
					if (l$10 && (r$12 = Ee$4(42)), this.next(), i$18 === 39 && this.hasPlugin(["pipelineOperator", { proposal: "minimal" }]) && this.state.type === 96 && this.prodParam.hasAwait) throw this.raise(p$2.UnexpectedAwaitAfterPipelineBody, this.state.startLoc);
					n$8.right = this.parseExprOpRightExpr(i$18, r$12);
					let h$3 = this.finishNode(n$8, o$9 || l$10 ? "LogicalExpression" : "BinaryExpression"), c$3 = this.state.type;
					if (l$10 && (c$3 === 41 || c$3 === 42) || o$9 && c$3 === 40) throw this.raise(p$2.MixingCoalesceWithLogical, this.state.startLoc);
					return this.parseExprOp(h$3, e$4, s$8);
				}
			}
			return t$13;
		}
		parseExprOpRightExpr(t$13, e$4) {
			let s$8 = this.state.startLoc;
			switch (t$13) {
				case 39:
					switch (this.getPluginOption("pipelineOperator", "proposal")) {
						case "hack": return this.withTopicBindingContext(() => this.parseHackPipeBody());
						case "fsharp": return this.withSoloAwaitPermittingContext(() => this.parseFSharpPipelineBody(e$4));
					}
					if (this.getPluginOption("pipelineOperator", "proposal") === "smart") return this.withTopicBindingContext(() => {
						if (this.prodParam.hasYield && this.isContextual(108)) throw this.raise(p$2.PipeBodyIsTighter, this.state.startLoc);
						return this.parseSmartPipelineBodyInStyle(this.parseExprOpBaseRightExpr(t$13, e$4), s$8);
					});
				default: return this.parseExprOpBaseRightExpr(t$13, e$4);
			}
		}
		parseExprOpBaseRightExpr(t$13, e$4) {
			let s$8 = this.state.startLoc;
			return this.parseExprOp(this.parseMaybeUnaryOrPrivate(), s$8, Yi$5(t$13) ? e$4 - 1 : e$4);
		}
		parseHackPipeBody() {
			var t$13;
			let { startLoc: e$4 } = this.state, s$8 = this.parseMaybeAssign();
			return Di$3.has(s$8.type) && !((t$13 = s$8.extra) != null && t$13.parenthesized) && this.raise(p$2.PipeUnparenthesizedBody, e$4, { type: s$8.type }), this.topicReferenceWasUsedInCurrentContext() || this.raise(p$2.PipeTopicUnused, e$4), s$8;
		}
		checkExponentialAfterUnary(t$13) {
			this.match(57) && this.raise(p$2.UnexpectedTokenUnaryExponentiation, t$13.argument);
		}
		parseMaybeUnary(t$13, e$4) {
			let s$8 = this.state.startLoc, i$18 = this.isContextual(96);
			if (i$18 && this.recordAwaitIfAllowed()) {
				this.next();
				let l$10 = this.parseAwait(s$8);
				return e$4 || this.checkExponentialAfterUnary(l$10), l$10;
			}
			let r$12 = this.match(34), n$8 = this.startNode();
			if (Ji$4(this.state.type)) {
				n$8.operator = this.state.value, n$8.prefix = !0, this.match(72) && this.expectPlugin("throwExpressions");
				let l$10 = this.match(89);
				if (this.next(), n$8.argument = this.parseMaybeUnary(null, !0), this.checkExpressionErrors(t$13, !0), this.state.strict && l$10) {
					let h$3 = n$8.argument;
					h$3.type === "Identifier" ? this.raise(p$2.StrictDelete, n$8) : this.hasPropertyAsPrivateName(h$3) && this.raise(p$2.DeletePrivateField, n$8);
				}
				if (!r$12) return e$4 || this.checkExponentialAfterUnary(n$8), this.finishNode(n$8, "UnaryExpression");
			}
			let o$9 = this.parseUpdate(n$8, r$12, t$13);
			if (i$18) {
				let { type: l$10 } = this.state;
				if ((this.hasPlugin("v8intrinsic") ? ue$4(l$10) : ue$4(l$10) && !this.match(54)) && !this.isAmbiguousPrefixOrIdentifier()) return this.raiseOverwrite(p$2.AwaitNotInAsyncContext, s$8), this.parseAwait(s$8);
			}
			return o$9;
		}
		parseUpdate(t$13, e$4, s$8) {
			if (e$4) {
				let n$8 = t$13;
				return this.checkLVal(n$8.argument, this.finishNode(n$8, "UpdateExpression")), t$13;
			}
			let i$18 = this.state.startLoc, r$12 = this.parseExprSubscripts(s$8);
			if (this.checkExpressionErrors(s$8, !1)) return r$12;
			for (; Wi$5(this.state.type) && !this.canInsertSemicolon();) {
				let n$8 = this.startNodeAt(i$18);
				n$8.operator = this.state.value, n$8.prefix = !1, n$8.argument = r$12, this.next(), this.checkLVal(r$12, r$12 = this.finishNode(n$8, "UpdateExpression"));
			}
			return r$12;
		}
		parseExprSubscripts(t$13) {
			let e$4 = this.state.startLoc, s$8 = this.state.potentialArrowAt, i$18 = this.parseExprAtom(t$13);
			return this.shouldExitDescending(i$18, s$8) ? i$18 : this.parseSubscripts(i$18, e$4);
		}
		parseSubscripts(t$13, e$4, s$8) {
			let i$18 = {
				optionalChainMember: !1,
				maybeAsyncArrow: this.atPossibleAsyncArrow(t$13),
				stop: !1
			};
			do
				t$13 = this.parseSubscript(t$13, e$4, s$8, i$18), i$18.maybeAsyncArrow = !1;
			while (!i$18.stop);
			return t$13;
		}
		parseSubscript(t$13, e$4, s$8, i$18) {
			let { type: r$12 } = this.state;
			if (!s$8 && r$12 === 15) return this.parseBind(t$13, e$4, s$8, i$18);
			if (Ie$7(r$12)) return this.parseTaggedTemplateExpression(t$13, e$4, i$18);
			let n$8 = !1;
			if (r$12 === 18) {
				if (s$8 && (this.raise(p$2.OptionalChainingNoNew, this.state.startLoc), this.lookaheadCharCode() === 40)) return this.stopParseSubscript(t$13, i$18);
				i$18.optionalChainMember = n$8 = !0, this.next();
			}
			if (!s$8 && this.match(10)) return this.parseCoverCallAndAsyncArrowHead(t$13, e$4, i$18, n$8);
			{
				let o$9 = this.eat(0);
				return o$9 || n$8 || this.eat(16) ? this.parseMember(t$13, e$4, i$18, o$9, n$8) : this.stopParseSubscript(t$13, i$18);
			}
		}
		stopParseSubscript(t$13, e$4) {
			return e$4.stop = !0, t$13;
		}
		parseMember(t$13, e$4, s$8, i$18, r$12) {
			let n$8 = this.startNodeAt(e$4);
			return n$8.object = t$13, n$8.computed = i$18, i$18 ? (n$8.property = this.parseExpression(), this.expect(3)) : this.match(139) ? (t$13.type === "Super" && this.raise(p$2.SuperPrivateField, e$4), this.classScope.usePrivateName(this.state.value, this.state.startLoc), n$8.property = this.parsePrivateName()) : n$8.property = this.parseIdentifier(!0), s$8.optionalChainMember ? (n$8.optional = r$12, this.finishNode(n$8, "OptionalMemberExpression")) : this.finishNode(n$8, "MemberExpression");
		}
		parseBind(t$13, e$4, s$8, i$18) {
			let r$12 = this.startNodeAt(e$4);
			return r$12.object = t$13, this.next(), r$12.callee = this.parseNoCallExpr(), i$18.stop = !0, this.parseSubscripts(this.finishNode(r$12, "BindExpression"), e$4, s$8);
		}
		parseCoverCallAndAsyncArrowHead(t$13, e$4, s$8, i$18) {
			let r$12 = this.state.maybeInArrowParameters, n$8 = null;
			this.state.maybeInArrowParameters = !0, this.next();
			let o$9 = this.startNodeAt(e$4);
			o$9.callee = t$13;
			let { maybeAsyncArrow: l$10, optionalChainMember: h$3 } = s$8;
			l$10 && (this.expressionScope.enter(Er$5()), n$8 = new te$5()), h$3 && (o$9.optional = i$18), i$18 ? o$9.arguments = this.parseCallExpressionArguments(11) : o$9.arguments = this.parseCallExpressionArguments(11, t$13.type !== "Super", o$9, n$8);
			let c$3 = this.finishCallExpression(o$9, h$3);
			return l$10 && this.shouldParseAsyncArrow() && !i$18 ? (s$8.stop = !0, this.checkDestructuringPrivate(n$8), this.expressionScope.validateAsPattern(), this.expressionScope.exit(), c$3 = this.parseAsyncArrowFromCallExpression(this.startNodeAt(e$4), c$3)) : (l$10 && (this.checkExpressionErrors(n$8, !0), this.expressionScope.exit()), this.toReferencedArguments(c$3)), this.state.maybeInArrowParameters = r$12, c$3;
		}
		toReferencedArguments(t$13, e$4) {
			this.toReferencedListDeep(t$13.arguments, e$4);
		}
		parseTaggedTemplateExpression(t$13, e$4, s$8) {
			let i$18 = this.startNodeAt(e$4);
			return i$18.tag = t$13, i$18.quasi = this.parseTemplate(!0), s$8.optionalChainMember && this.raise(p$2.OptionalChainingNoTemplate, e$4), this.finishNode(i$18, "TaggedTemplateExpression");
		}
		atPossibleAsyncArrow(t$13) {
			return t$13.type === "Identifier" && t$13.name === "async" && this.state.lastTokEndLoc.index === t$13.end && !this.canInsertSemicolon() && t$13.end - t$13.start === 5 && this.offsetToSourcePos(t$13.start) === this.state.potentialArrowAt;
		}
		finishCallExpression(t$13, e$4) {
			if (t$13.callee.type === "Import") if (t$13.arguments.length === 0 || t$13.arguments.length > 2) this.raise(p$2.ImportCallArity, t$13);
			else for (let s$8 of t$13.arguments) s$8.type === "SpreadElement" && this.raise(p$2.ImportCallSpreadArgument, s$8);
			return this.finishNode(t$13, e$4 ? "OptionalCallExpression" : "CallExpression");
		}
		parseCallExpressionArguments(t$13, e$4, s$8, i$18) {
			let r$12 = [], n$8 = !0, o$9 = this.state.inFSharpPipelineDirectBody;
			for (this.state.inFSharpPipelineDirectBody = !1; !this.eat(t$13);) {
				if (n$8) n$8 = !1;
				else if (this.expect(12), this.match(t$13)) {
					s$8 && this.addTrailingCommaExtraToNode(s$8), this.next();
					break;
				}
				r$12.push(this.parseExprListItem(!1, i$18, e$4));
			}
			return this.state.inFSharpPipelineDirectBody = o$9, r$12;
		}
		shouldParseAsyncArrow() {
			return this.match(19) && !this.canInsertSemicolon();
		}
		parseAsyncArrowFromCallExpression(t$13, e$4) {
			var s$8;
			return this.resetPreviousNodeTrailingComments(e$4), this.expect(19), this.parseArrowExpression(t$13, e$4.arguments, !0, (s$8 = e$4.extra) == null ? void 0 : s$8.trailingCommaLoc), e$4.innerComments && xe$4(t$13, e$4.innerComments), e$4.callee.trailingComments && xe$4(t$13, e$4.callee.trailingComments), t$13;
		}
		parseNoCallExpr() {
			let t$13 = this.state.startLoc;
			return this.parseSubscripts(this.parseExprAtom(), t$13, !0);
		}
		parseExprAtom(t$13) {
			let e$4, s$8 = null, { type: i$18 } = this.state;
			switch (i$18) {
				case 79: return this.parseSuper();
				case 83: return e$4 = this.startNode(), this.next(), this.match(16) ? this.parseImportMetaPropertyOrPhaseCall(e$4) : this.match(10) ? this.optionFlags & 512 ? this.parseImportCall(e$4) : this.finishNode(e$4, "Import") : (this.raise(p$2.UnsupportedImport, this.state.lastTokStartLoc), this.finishNode(e$4, "Import"));
				case 78: return e$4 = this.startNode(), this.next(), this.finishNode(e$4, "ThisExpression");
				case 90: return this.parseDo(this.startNode(), !1);
				case 56:
				case 31: return this.readRegexp(), this.parseRegExpLiteral(this.state.value);
				case 135: return this.parseNumericLiteral(this.state.value);
				case 136: return this.parseBigIntLiteral(this.state.value);
				case 134: return this.parseStringLiteral(this.state.value);
				case 84: return this.parseNullLiteral();
				case 85: return this.parseBooleanLiteral(!0);
				case 86: return this.parseBooleanLiteral(!1);
				case 10: {
					let r$12 = this.state.potentialArrowAt === this.state.start;
					return this.parseParenAndDistinguishExpression(r$12);
				}
				case 0: return this.parseArrayLike(3, !0, !1, t$13);
				case 5: return this.parseObjectLike(8, !1, !1, t$13);
				case 68: return this.parseFunctionOrFunctionSent();
				case 26: s$8 = this.parseDecorators();
				case 80: return this.parseClass(this.maybeTakeDecorators(s$8, this.startNode()), !1);
				case 77: return this.parseNewOrNewTarget();
				case 25:
				case 24: return this.parseTemplate(!1);
				case 15: {
					e$4 = this.startNode(), this.next(), e$4.object = null;
					let r$12 = e$4.callee = this.parseNoCallExpr();
					if (r$12.type === "MemberExpression") return this.finishNode(e$4, "BindExpression");
					throw this.raise(p$2.UnsupportedBind, r$12);
				}
				case 139: return this.raise(p$2.PrivateInExpectedIn, this.state.startLoc, { identifierName: this.state.value }), this.parsePrivateName();
				case 33: return this.parseTopicReferenceThenEqualsSign(54, "%");
				case 32: return this.parseTopicReferenceThenEqualsSign(44, "^");
				case 37:
				case 38: return this.parseTopicReference("hack");
				case 44:
				case 54:
				case 27: {
					let r$12 = this.getPluginOption("pipelineOperator", "proposal");
					if (r$12) return this.parseTopicReference(r$12);
					this.unexpected();
					break;
				}
				case 47: {
					let r$12 = this.input.codePointAt(this.nextTokenStart());
					U$4(r$12) || r$12 === 62 ? this.expectOnePlugin([
						"jsx",
						"flow",
						"typescript"
					]) : this.unexpected();
					break;
				}
				default:
					if (i$18 === 137) return this.parseDecimalLiteral(this.state.value);
					if (i$18 === 2 || i$18 === 1) return this.parseArrayLike(this.state.type === 2 ? 4 : 3, !1, !0);
					if (i$18 === 6 || i$18 === 7) return this.parseObjectLike(this.state.type === 6 ? 9 : 8, !1, !0);
					if (w$3(i$18)) {
						if (this.isContextual(127) && this.lookaheadInLineCharCode() === 123) return this.parseModuleExpression();
						let r$12 = this.state.potentialArrowAt === this.state.start, n$8 = this.state.containsEsc, o$9 = this.parseIdentifier();
						if (!n$8 && o$9.name === "async" && !this.canInsertSemicolon()) {
							let { type: l$10 } = this.state;
							if (l$10 === 68) return this.resetPreviousNodeTrailingComments(o$9), this.next(), this.parseAsyncFunctionExpression(this.startNodeAtNode(o$9));
							if (w$3(l$10)) return this.lookaheadCharCode() === 61 ? this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(o$9)) : o$9;
							if (l$10 === 90) return this.resetPreviousNodeTrailingComments(o$9), this.parseDo(this.startNodeAtNode(o$9), !0);
						}
						return r$12 && this.match(19) && !this.canInsertSemicolon() ? (this.next(), this.parseArrowExpression(this.startNodeAtNode(o$9), [o$9], !1)) : o$9;
					} else this.unexpected();
			}
		}
		parseTopicReferenceThenEqualsSign(t$13, e$4) {
			let s$8 = this.getPluginOption("pipelineOperator", "proposal");
			if (s$8) return this.state.type = t$13, this.state.value = e$4, this.state.pos--, this.state.end--, this.state.endLoc = D$4(this.state.endLoc, -1), this.parseTopicReference(s$8);
			this.unexpected();
		}
		parseTopicReference(t$13) {
			let e$4 = this.startNode(), s$8 = this.state.startLoc, i$18 = this.state.type;
			return this.next(), this.finishTopicReference(e$4, s$8, t$13, i$18);
		}
		finishTopicReference(t$13, e$4, s$8, i$18) {
			if (this.testTopicReferenceConfiguration(s$8, e$4, i$18)) return s$8 === "hack" ? (this.topicReferenceIsAllowedInCurrentContext() || this.raise(p$2.PipeTopicUnbound, e$4), this.registerTopicReference(), this.finishNode(t$13, "TopicReference")) : (this.topicReferenceIsAllowedInCurrentContext() || this.raise(p$2.PrimaryTopicNotAllowed, e$4), this.registerTopicReference(), this.finishNode(t$13, "PipelinePrimaryTopicReference"));
			throw this.raise(p$2.PipeTopicUnconfiguredToken, e$4, { token: H$6(i$18) });
		}
		testTopicReferenceConfiguration(t$13, e$4, s$8) {
			switch (t$13) {
				case "hack": return this.hasPlugin(["pipelineOperator", { topicToken: H$6(s$8) }]);
				case "smart": return s$8 === 27;
				default: throw this.raise(p$2.PipeTopicRequiresHackPipes, e$4);
			}
		}
		parseAsyncArrowUnaryFunction(t$13) {
			this.prodParam.enter(Ce$6(!0, this.prodParam.hasYield));
			let e$4 = [this.parseIdentifier()];
			return this.prodParam.exit(), this.hasPrecedingLineBreak() && this.raise(p$2.LineTerminatorBeforeArrow, this.state.curPosition()), this.expect(19), this.parseArrowExpression(t$13, e$4, !0);
		}
		parseDo(t$13, e$4) {
			this.expectPlugin("doExpressions"), e$4 && this.expectPlugin("asyncDoExpressions"), t$13.async = e$4, this.next();
			let s$8 = this.state.labels;
			return this.state.labels = [], e$4 ? (this.prodParam.enter(2), t$13.body = this.parseBlock(), this.prodParam.exit()) : t$13.body = this.parseBlock(), this.state.labels = s$8, this.finishNode(t$13, "DoExpression");
		}
		parseSuper() {
			let t$13 = this.startNode();
			return this.next(), this.match(10) && !this.scope.allowDirectSuper && !(this.optionFlags & 16) ? this.raise(p$2.SuperNotAllowed, t$13) : !this.scope.allowSuper && !(this.optionFlags & 16) && this.raise(p$2.UnexpectedSuper, t$13), !this.match(10) && !this.match(0) && !this.match(16) && this.raise(p$2.UnsupportedSuper, t$13), this.finishNode(t$13, "Super");
		}
		parsePrivateName() {
			let t$13 = this.startNode(), e$4 = this.startNodeAt(D$4(this.state.startLoc, 1)), s$8 = this.state.value;
			return this.next(), t$13.id = this.createIdentifier(e$4, s$8), this.finishNode(t$13, "PrivateName");
		}
		parseFunctionOrFunctionSent() {
			let t$13 = this.startNode();
			if (this.next(), this.prodParam.hasYield && this.match(16)) {
				let e$4 = this.createIdentifier(this.startNodeAtNode(t$13), "function");
				return this.next(), this.match(103) ? this.expectPlugin("functionSent") : this.hasPlugin("functionSent") || this.unexpected(), this.parseMetaProperty(t$13, e$4, "sent");
			}
			return this.parseFunction(t$13);
		}
		parseMetaProperty(t$13, e$4, s$8) {
			t$13.meta = e$4;
			let i$18 = this.state.containsEsc;
			return t$13.property = this.parseIdentifier(!0), (t$13.property.name !== s$8 || i$18) && this.raise(p$2.UnsupportedMetaProperty, t$13.property, {
				target: e$4.name,
				onlyValidPropertyName: s$8
			}), this.finishNode(t$13, "MetaProperty");
		}
		parseImportMetaPropertyOrPhaseCall(t$13) {
			if (this.next(), this.isContextual(105) || this.isContextual(97)) {
				let e$4 = this.isContextual(105);
				return this.expectPlugin(e$4 ? "sourcePhaseImports" : "deferredImportEvaluation"), this.next(), t$13.phase = e$4 ? "source" : "defer", this.parseImportCall(t$13);
			} else {
				let e$4 = this.createIdentifierAt(this.startNodeAtNode(t$13), "import", this.state.lastTokStartLoc);
				return this.isContextual(101) && (this.inModule || this.raise(p$2.ImportMetaOutsideModule, e$4), this.sawUnambiguousESM = !0), this.parseMetaProperty(t$13, e$4, "meta");
			}
		}
		parseLiteralAtNode(t$13, e$4, s$8) {
			return this.addExtra(s$8, "rawValue", t$13), this.addExtra(s$8, "raw", this.input.slice(this.offsetToSourcePos(s$8.start), this.state.end)), s$8.value = t$13, this.next(), this.finishNode(s$8, e$4);
		}
		parseLiteral(t$13, e$4) {
			let s$8 = this.startNode();
			return this.parseLiteralAtNode(t$13, e$4, s$8);
		}
		parseStringLiteral(t$13) {
			return this.parseLiteral(t$13, "StringLiteral");
		}
		parseNumericLiteral(t$13) {
			return this.parseLiteral(t$13, "NumericLiteral");
		}
		parseBigIntLiteral(t$13) {
			return this.parseLiteral(t$13, "BigIntLiteral");
		}
		parseDecimalLiteral(t$13) {
			return this.parseLiteral(t$13, "DecimalLiteral");
		}
		parseRegExpLiteral(t$13) {
			let e$4 = this.startNode();
			return this.addExtra(e$4, "raw", this.input.slice(this.offsetToSourcePos(e$4.start), this.state.end)), e$4.pattern = t$13.pattern, e$4.flags = t$13.flags, this.next(), this.finishNode(e$4, "RegExpLiteral");
		}
		parseBooleanLiteral(t$13) {
			let e$4 = this.startNode();
			return e$4.value = t$13, this.next(), this.finishNode(e$4, "BooleanLiteral");
		}
		parseNullLiteral() {
			let t$13 = this.startNode();
			return this.next(), this.finishNode(t$13, "NullLiteral");
		}
		parseParenAndDistinguishExpression(t$13) {
			let e$4 = this.state.startLoc, s$8;
			this.next(), this.expressionScope.enter(Sr$5());
			let i$18 = this.state.maybeInArrowParameters, r$12 = this.state.inFSharpPipelineDirectBody;
			this.state.maybeInArrowParameters = !0, this.state.inFSharpPipelineDirectBody = !1;
			let n$8 = this.state.startLoc, o$9 = [], l$10 = new te$5(), h$3 = !0, c$3, u$14;
			for (; !this.match(11);) {
				if (h$3) h$3 = !1;
				else if (this.expect(12, l$10.optionalParametersLoc === null ? null : l$10.optionalParametersLoc), this.match(11)) {
					u$14 = this.state.startLoc;
					break;
				}
				if (this.match(21)) {
					let x$3 = this.state.startLoc;
					if (c$3 = this.state.startLoc, o$9.push(this.parseParenItem(this.parseRestBinding(), x$3)), !this.checkCommaAfterRest(41)) break;
				} else o$9.push(this.parseMaybeAssignAllowIn(l$10, this.parseParenItem));
			}
			let f$3 = this.state.lastTokEndLoc;
			this.expect(11), this.state.maybeInArrowParameters = i$18, this.state.inFSharpPipelineDirectBody = r$12;
			let d$14 = this.startNodeAt(e$4);
			return t$13 && this.shouldParseArrow(o$9) && (d$14 = this.parseArrow(d$14)) ? (this.checkDestructuringPrivate(l$10), this.expressionScope.validateAsPattern(), this.expressionScope.exit(), this.parseArrowExpression(d$14, o$9, !1), d$14) : (this.expressionScope.exit(), o$9.length || this.unexpected(this.state.lastTokStartLoc), u$14 && this.unexpected(u$14), c$3 && this.unexpected(c$3), this.checkExpressionErrors(l$10, !0), this.toReferencedListDeep(o$9, !0), o$9.length > 1 ? (s$8 = this.startNodeAt(n$8), s$8.expressions = o$9, this.finishNode(s$8, "SequenceExpression"), this.resetEndLocation(s$8, f$3)) : s$8 = o$9[0], this.wrapParenthesis(e$4, s$8));
		}
		wrapParenthesis(t$13, e$4) {
			if (!(this.optionFlags & 1024)) return this.addExtra(e$4, "parenthesized", !0), this.addExtra(e$4, "parenStart", t$13.index), this.takeSurroundingComments(e$4, t$13.index, this.state.lastTokEndLoc.index), e$4;
			let s$8 = this.startNodeAt(t$13);
			return s$8.expression = e$4, this.finishNode(s$8, "ParenthesizedExpression");
		}
		shouldParseArrow(t$13) {
			return !this.canInsertSemicolon();
		}
		parseArrow(t$13) {
			if (this.eat(19)) return t$13;
		}
		parseParenItem(t$13, e$4) {
			return t$13;
		}
		parseNewOrNewTarget() {
			let t$13 = this.startNode();
			if (this.next(), this.match(16)) {
				let e$4 = this.createIdentifier(this.startNodeAtNode(t$13), "new");
				this.next();
				let s$8 = this.parseMetaProperty(t$13, e$4, "target");
				return this.scope.allowNewTarget || this.raise(p$2.UnexpectedNewTarget, s$8), s$8;
			}
			return this.parseNew(t$13);
		}
		parseNew(t$13) {
			if (this.parseNewCallee(t$13), this.eat(10)) {
				let e$4 = this.parseExprList(11);
				this.toReferencedList(e$4), t$13.arguments = e$4;
			} else t$13.arguments = [];
			return this.finishNode(t$13, "NewExpression");
		}
		parseNewCallee(t$13) {
			let e$4 = this.match(83), s$8 = this.parseNoCallExpr();
			t$13.callee = s$8, e$4 && (s$8.type === "Import" || s$8.type === "ImportExpression") && this.raise(p$2.ImportCallNotNewExpression, s$8);
		}
		parseTemplateElement(t$13) {
			let { start: e$4, startLoc: s$8, end: i$18, value: r$12 } = this.state, n$8 = e$4 + 1, o$9 = this.startNodeAt(D$4(s$8, 1));
			r$12 === null && (t$13 || this.raise(p$2.InvalidEscapeSequenceTemplate, D$4(this.state.firstInvalidTemplateEscapePos, 1)));
			let l$10 = this.match(24), h$3 = l$10 ? -1 : -2, c$3 = i$18 + h$3;
			o$9.value = {
				raw: this.input.slice(n$8, c$3).replace(/\r\n?/g, `
`),
				cooked: r$12 === null ? null : r$12.slice(1, h$3)
			}, o$9.tail = l$10, this.next();
			let u$14 = this.finishNode(o$9, "TemplateElement");
			return this.resetEndLocation(u$14, D$4(this.state.lastTokEndLoc, h$3)), u$14;
		}
		parseTemplate(t$13) {
			let e$4 = this.startNode(), s$8 = this.parseTemplateElement(t$13), i$18 = [s$8], r$12 = [];
			for (; !s$8.tail;) r$12.push(this.parseTemplateSubstitution()), this.readTemplateContinuation(), i$18.push(s$8 = this.parseTemplateElement(t$13));
			return e$4.expressions = r$12, e$4.quasis = i$18, this.finishNode(e$4, "TemplateLiteral");
		}
		parseTemplateSubstitution() {
			return this.parseExpression();
		}
		parseObjectLike(t$13, e$4, s$8, i$18) {
			s$8 && this.expectPlugin("recordAndTuple");
			let r$12 = this.state.inFSharpPipelineDirectBody;
			this.state.inFSharpPipelineDirectBody = !1;
			let n$8 = !1, o$9 = !0, l$10 = this.startNode();
			for (l$10.properties = [], this.next(); !this.match(t$13);) {
				if (o$9) o$9 = !1;
				else if (this.expect(12), this.match(t$13)) {
					this.addTrailingCommaExtraToNode(l$10);
					break;
				}
				let c$3;
				e$4 ? c$3 = this.parseBindingProperty() : (c$3 = this.parsePropertyDefinition(i$18), n$8 = this.checkProto(c$3, s$8, n$8, i$18)), s$8 && !this.isObjectProperty(c$3) && c$3.type !== "SpreadElement" && this.raise(p$2.InvalidRecordProperty, c$3), c$3.shorthand && this.addExtra(c$3, "shorthand", !0), l$10.properties.push(c$3);
			}
			this.next(), this.state.inFSharpPipelineDirectBody = r$12;
			let h$3 = "ObjectExpression";
			return e$4 ? h$3 = "ObjectPattern" : s$8 && (h$3 = "RecordExpression"), this.finishNode(l$10, h$3);
		}
		addTrailingCommaExtraToNode(t$13) {
			this.addExtra(t$13, "trailingComma", this.state.lastTokStartLoc.index), this.addExtra(t$13, "trailingCommaLoc", this.state.lastTokStartLoc, !1);
		}
		maybeAsyncOrAccessorProp(t$13) {
			return !t$13.computed && t$13.key.type === "Identifier" && (this.isLiteralPropertyName() || this.match(0) || this.match(55));
		}
		parsePropertyDefinition(t$13) {
			let e$4 = [];
			if (this.match(26)) for (this.hasPlugin("decorators") && this.raise(p$2.UnsupportedPropertyDecorator, this.state.startLoc); this.match(26);) e$4.push(this.parseDecorator());
			let s$8 = this.startNode(), i$18 = !1, r$12 = !1, n$8;
			if (this.match(21)) return e$4.length && this.unexpected(), this.parseSpread();
			e$4.length && (s$8.decorators = e$4, e$4 = []), s$8.method = !1, t$13 && (n$8 = this.state.startLoc);
			let o$9 = this.eat(55);
			this.parsePropertyNamePrefixOperator(s$8);
			let l$10 = this.state.containsEsc;
			if (this.parsePropertyName(s$8, t$13), !o$9 && !l$10 && this.maybeAsyncOrAccessorProp(s$8)) {
				let { key: h$3 } = s$8, c$3 = h$3.name;
				c$3 === "async" && !this.hasPrecedingLineBreak() && (i$18 = !0, this.resetPreviousNodeTrailingComments(h$3), o$9 = this.eat(55), this.parsePropertyName(s$8)), (c$3 === "get" || c$3 === "set") && (r$12 = !0, this.resetPreviousNodeTrailingComments(h$3), s$8.kind = c$3, this.match(55) && (o$9 = !0, this.raise(p$2.AccessorIsGenerator, this.state.curPosition(), { kind: c$3 }), this.next()), this.parsePropertyName(s$8));
			}
			return this.parseObjPropValue(s$8, n$8, o$9, i$18, !1, r$12, t$13);
		}
		getGetterSetterExpectedParamCount(t$13) {
			return t$13.kind === "get" ? 0 : 1;
		}
		getObjectOrClassMethodParams(t$13) {
			return t$13.params;
		}
		checkGetterSetterParams(t$13) {
			var e$4;
			let s$8 = this.getGetterSetterExpectedParamCount(t$13), i$18 = this.getObjectOrClassMethodParams(t$13);
			i$18.length !== s$8 && this.raise(t$13.kind === "get" ? p$2.BadGetterArity : p$2.BadSetterArity, t$13), t$13.kind === "set" && ((e$4 = i$18[i$18.length - 1]) == null ? void 0 : e$4.type) === "RestElement" && this.raise(p$2.BadSetterRestParameter, t$13);
		}
		parseObjectMethod(t$13, e$4, s$8, i$18, r$12) {
			if (r$12) {
				let n$8 = this.parseMethod(t$13, e$4, !1, !1, !1, "ObjectMethod");
				return this.checkGetterSetterParams(n$8), n$8;
			}
			if (s$8 || e$4 || this.match(10)) return i$18 && this.unexpected(), t$13.kind = "method", t$13.method = !0, this.parseMethod(t$13, e$4, s$8, !1, !1, "ObjectMethod");
		}
		parseObjectProperty(t$13, e$4, s$8, i$18) {
			if (t$13.shorthand = !1, this.eat(14)) return t$13.value = s$8 ? this.parseMaybeDefault(this.state.startLoc) : this.parseMaybeAssignAllowIn(i$18), this.finishObjectProperty(t$13);
			if (!t$13.computed && t$13.key.type === "Identifier") {
				if (this.checkReservedWord(t$13.key.name, t$13.key.loc.start, !0, !1), s$8) t$13.value = this.parseMaybeDefault(e$4, this.cloneIdentifier(t$13.key));
				else if (this.match(29)) {
					let r$12 = this.state.startLoc;
					i$18 != null ? i$18.shorthandAssignLoc === null && (i$18.shorthandAssignLoc = r$12) : this.raise(p$2.InvalidCoverInitializedName, r$12), t$13.value = this.parseMaybeDefault(e$4, this.cloneIdentifier(t$13.key));
				} else t$13.value = this.cloneIdentifier(t$13.key);
				return t$13.shorthand = !0, this.finishObjectProperty(t$13);
			}
		}
		finishObjectProperty(t$13) {
			return this.finishNode(t$13, "ObjectProperty");
		}
		parseObjPropValue(t$13, e$4, s$8, i$18, r$12, n$8, o$9) {
			let l$10 = this.parseObjectMethod(t$13, s$8, i$18, r$12, n$8) || this.parseObjectProperty(t$13, e$4, r$12, o$9);
			return l$10 || this.unexpected(), l$10;
		}
		parsePropertyName(t$13, e$4) {
			if (this.eat(0)) t$13.computed = !0, t$13.key = this.parseMaybeAssignAllowIn(), this.expect(3);
			else {
				let { type: s$8, value: i$18 } = this.state, r$12;
				if (M$2(s$8)) r$12 = this.parseIdentifier(!0);
				else switch (s$8) {
					case 135:
						r$12 = this.parseNumericLiteral(i$18);
						break;
					case 134:
						r$12 = this.parseStringLiteral(i$18);
						break;
					case 136:
						r$12 = this.parseBigIntLiteral(i$18);
						break;
					case 139: {
						let n$8 = this.state.startLoc;
						e$4 != null ? e$4.privateKeyLoc === null && (e$4.privateKeyLoc = n$8) : this.raise(p$2.UnexpectedPrivateField, n$8), r$12 = this.parsePrivateName();
						break;
					}
					default:
						if (s$8 === 137) {
							r$12 = this.parseDecimalLiteral(i$18);
							break;
						}
						this.unexpected();
				}
				t$13.key = r$12, s$8 !== 139 && (t$13.computed = !1);
			}
		}
		initFunction(t$13, e$4) {
			t$13.id = null, t$13.generator = !1, t$13.async = e$4;
		}
		parseMethod(t$13, e$4, s$8, i$18, r$12, n$8, o$9 = !1) {
			this.initFunction(t$13, s$8), t$13.generator = e$4, this.scope.enter(530 | (o$9 ? 576 : 0) | (r$12 ? 32 : 0)), this.prodParam.enter(Ce$6(s$8, t$13.generator)), this.parseFunctionParams(t$13, i$18);
			let l$10 = this.parseFunctionBodyAndFinish(t$13, n$8, !0);
			return this.prodParam.exit(), this.scope.exit(), l$10;
		}
		parseArrayLike(t$13, e$4, s$8, i$18) {
			s$8 && this.expectPlugin("recordAndTuple");
			let r$12 = this.state.inFSharpPipelineDirectBody;
			this.state.inFSharpPipelineDirectBody = !1;
			let n$8 = this.startNode();
			return this.next(), n$8.elements = this.parseExprList(t$13, !s$8, i$18, n$8), this.state.inFSharpPipelineDirectBody = r$12, this.finishNode(n$8, s$8 ? "TupleExpression" : "ArrayExpression");
		}
		parseArrowExpression(t$13, e$4, s$8, i$18) {
			this.scope.enter(518);
			let r$12 = Ce$6(s$8, !1);
			!this.match(5) && this.prodParam.hasIn && (r$12 |= 8), this.prodParam.enter(r$12), this.initFunction(t$13, s$8);
			let n$8 = this.state.maybeInArrowParameters;
			return e$4 && (this.state.maybeInArrowParameters = !0, this.setArrowFunctionParameters(t$13, e$4, i$18)), this.state.maybeInArrowParameters = !1, this.parseFunctionBody(t$13, !0), this.prodParam.exit(), this.scope.exit(), this.state.maybeInArrowParameters = n$8, this.finishNode(t$13, "ArrowFunctionExpression");
		}
		setArrowFunctionParameters(t$13, e$4, s$8) {
			this.toAssignableList(e$4, s$8, !1), t$13.params = e$4;
		}
		parseFunctionBodyAndFinish(t$13, e$4, s$8 = !1) {
			return this.parseFunctionBody(t$13, !1, s$8), this.finishNode(t$13, e$4);
		}
		parseFunctionBody(t$13, e$4, s$8 = !1) {
			let i$18 = e$4 && !this.match(5);
			if (this.expressionScope.enter(Os$2()), i$18) t$13.body = this.parseMaybeAssign(), this.checkParams(t$13, !1, e$4, !1);
			else {
				let r$12 = this.state.strict, n$8 = this.state.labels;
				this.state.labels = [], this.prodParam.enter(this.prodParam.currentFlags() | 4), t$13.body = this.parseBlock(!0, !1, (o$9) => {
					let l$10 = !this.isSimpleParamList(t$13.params);
					o$9 && l$10 && this.raise(p$2.IllegalLanguageModeDirective, (t$13.kind === "method" || t$13.kind === "constructor") && t$13.key ? t$13.key.loc.end : t$13);
					let h$3 = !r$12 && this.state.strict;
					this.checkParams(t$13, !this.state.strict && !e$4 && !s$8 && !l$10, e$4, h$3), this.state.strict && t$13.id && this.checkIdentifier(t$13.id, 65, h$3);
				}), this.prodParam.exit(), this.state.labels = n$8;
			}
			this.expressionScope.exit();
		}
		isSimpleParameter(t$13) {
			return t$13.type === "Identifier";
		}
		isSimpleParamList(t$13) {
			for (let e$4 = 0, s$8 = t$13.length; e$4 < s$8; e$4++) if (!this.isSimpleParameter(t$13[e$4])) return !1;
			return !0;
		}
		checkParams(t$13, e$4, s$8, i$18 = !0) {
			let r$12 = !e$4 && /* @__PURE__ */ new Set(), n$8 = { type: "FormalParameters" };
			for (let o$9 of t$13.params) this.checkLVal(o$9, n$8, 5, r$12, i$18);
		}
		parseExprList(t$13, e$4, s$8, i$18) {
			let r$12 = [], n$8 = !0;
			for (; !this.eat(t$13);) {
				if (n$8) n$8 = !1;
				else if (this.expect(12), this.match(t$13)) {
					i$18 && this.addTrailingCommaExtraToNode(i$18), this.next();
					break;
				}
				r$12.push(this.parseExprListItem(e$4, s$8));
			}
			return r$12;
		}
		parseExprListItem(t$13, e$4, s$8) {
			let i$18;
			if (this.match(12)) t$13 || this.raise(p$2.UnexpectedToken, this.state.curPosition(), { unexpected: "," }), i$18 = null;
			else if (this.match(21)) {
				let r$12 = this.state.startLoc;
				i$18 = this.parseParenItem(this.parseSpread(e$4), r$12);
			} else if (this.match(17)) {
				this.expectPlugin("partialApplication"), s$8 || this.raise(p$2.UnexpectedArgumentPlaceholder, this.state.startLoc);
				let r$12 = this.startNode();
				this.next(), i$18 = this.finishNode(r$12, "ArgumentPlaceholder");
			} else i$18 = this.parseMaybeAssignAllowIn(e$4, this.parseParenItem);
			return i$18;
		}
		parseIdentifier(t$13) {
			let e$4 = this.startNode(), s$8 = this.parseIdentifierName(t$13);
			return this.createIdentifier(e$4, s$8);
		}
		createIdentifier(t$13, e$4) {
			return t$13.name = e$4, t$13.loc.identifierName = e$4, this.finishNode(t$13, "Identifier");
		}
		createIdentifierAt(t$13, e$4, s$8) {
			return t$13.name = e$4, t$13.loc.identifierName = e$4, this.finishNodeAt(t$13, "Identifier", s$8);
		}
		parseIdentifierName(t$13) {
			let e$4, { startLoc: s$8, type: i$18 } = this.state;
			M$2(i$18) ? e$4 = this.state.value : this.unexpected();
			let r$12 = Vi$5(i$18);
			return t$13 ? r$12 && this.replaceToken(132) : this.checkReservedWord(e$4, s$8, r$12, !1), this.next(), e$4;
		}
		checkReservedWord(t$13, e$4, s$8, i$18) {
			if (t$13.length > 10 || !or$5(t$13)) return;
			if (s$8 && rr$5(t$13)) {
				this.raise(p$2.UnexpectedKeyword, e$4, { keyword: t$13 });
				return;
			}
			if ((this.state.strict ? i$18 ? vs$2 : Ns$1 : Is$3)(t$13, this.inModule)) {
				this.raise(p$2.UnexpectedReservedWord, e$4, { reservedWord: t$13 });
				return;
			} else if (t$13 === "yield") {
				if (this.prodParam.hasYield) {
					this.raise(p$2.YieldBindingIdentifier, e$4);
					return;
				}
			} else if (t$13 === "await") {
				if (this.prodParam.hasAwait) {
					this.raise(p$2.AwaitBindingIdentifier, e$4);
					return;
				}
				if (this.scope.inStaticBlock) {
					this.raise(p$2.AwaitBindingIdentifierInStaticBlock, e$4);
					return;
				}
				this.expressionScope.recordAsyncArrowParametersError(e$4);
			} else if (t$13 === "arguments" && this.scope.inClassAndNotInNonArrowFunction) {
				this.raise(p$2.ArgumentsInClass, e$4);
				return;
			}
		}
		recordAwaitIfAllowed() {
			let t$13 = this.prodParam.hasAwait;
			return t$13 && !this.scope.inFunction && (this.state.hasTopLevelAwait = !0), t$13;
		}
		parseAwait(t$13) {
			let e$4 = this.startNodeAt(t$13);
			return this.expressionScope.recordParameterInitializerError(p$2.AwaitExpressionFormalParameter, e$4), this.eat(55) && this.raise(p$2.ObsoleteAwaitStar, e$4), !this.scope.inFunction && !(this.optionFlags & 1) && (this.isAmbiguousPrefixOrIdentifier() ? this.ambiguousScriptDifferentAst = !0 : this.sawUnambiguousESM = !0), this.state.soloAwait || (e$4.argument = this.parseMaybeUnary(null, !0)), this.finishNode(e$4, "AwaitExpression");
		}
		isAmbiguousPrefixOrIdentifier() {
			if (this.hasPrecedingLineBreak()) return !0;
			let { type: t$13 } = this.state;
			return t$13 === 53 || t$13 === 10 || t$13 === 0 || Ie$7(t$13) || t$13 === 102 && !this.state.containsEsc || t$13 === 138 || t$13 === 56 || this.hasPlugin("v8intrinsic") && t$13 === 54;
		}
		parseYield(t$13) {
			let e$4 = this.startNodeAt(t$13);
			this.expressionScope.recordParameterInitializerError(p$2.YieldInParameter, e$4);
			let s$8 = !1, i$18 = null;
			if (!this.hasPrecedingLineBreak()) switch (s$8 = this.eat(55), this.state.type) {
				case 13:
				case 140:
				case 8:
				case 11:
				case 3:
				case 9:
				case 14:
				case 12: if (!s$8) break;
				default: i$18 = this.parseMaybeAssign();
			}
			return e$4.delegate = s$8, e$4.argument = i$18, this.finishNode(e$4, "YieldExpression");
		}
		parseImportCall(t$13) {
			if (this.next(), t$13.source = this.parseMaybeAssignAllowIn(), t$13.options = null, this.eat(12)) {
				if (this.match(11)) this.addTrailingCommaExtraToNode(t$13.source);
				else if (t$13.options = this.parseMaybeAssignAllowIn(), this.eat(12) && (this.addTrailingCommaExtraToNode(t$13.options), !this.match(11))) {
					do
						this.parseMaybeAssignAllowIn();
					while (this.eat(12) && !this.match(11));
					this.raise(p$2.ImportCallArity, t$13);
				}
			}
			return this.expect(11), this.finishNode(t$13, "ImportExpression");
		}
		checkPipelineAtInfixOperator(t$13, e$4) {
			this.hasPlugin(["pipelineOperator", { proposal: "smart" }]) && t$13.type === "SequenceExpression" && this.raise(p$2.PipelineHeadSequenceExpression, e$4);
		}
		parseSmartPipelineBodyInStyle(t$13, e$4) {
			if (this.isSimpleReference(t$13)) {
				let s$8 = this.startNodeAt(e$4);
				return s$8.callee = t$13, this.finishNode(s$8, "PipelineBareFunction");
			} else {
				let s$8 = this.startNodeAt(e$4);
				return this.checkSmartPipeTopicBodyEarlyErrors(e$4), s$8.expression = t$13, this.finishNode(s$8, "PipelineTopicExpression");
			}
		}
		isSimpleReference(t$13) {
			switch (t$13.type) {
				case "MemberExpression": return !t$13.computed && this.isSimpleReference(t$13.object);
				case "Identifier": return !0;
				default: return !1;
			}
		}
		checkSmartPipeTopicBodyEarlyErrors(t$13) {
			if (this.match(19)) throw this.raise(p$2.PipelineBodyNoArrow, this.state.startLoc);
			this.topicReferenceWasUsedInCurrentContext() || this.raise(p$2.PipelineTopicUnused, t$13);
		}
		withTopicBindingContext(t$13) {
			let e$4 = this.state.topicContext;
			this.state.topicContext = {
				maxNumOfResolvableTopics: 1,
				maxTopicIndex: null
			};
			try {
				return t$13();
			} finally {
				this.state.topicContext = e$4;
			}
		}
		withSmartMixTopicForbiddingContext(t$13) {
			if (this.hasPlugin(["pipelineOperator", { proposal: "smart" }])) {
				let e$4 = this.state.topicContext;
				this.state.topicContext = {
					maxNumOfResolvableTopics: 0,
					maxTopicIndex: null
				};
				try {
					return t$13();
				} finally {
					this.state.topicContext = e$4;
				}
			} else return t$13();
		}
		withSoloAwaitPermittingContext(t$13) {
			let e$4 = this.state.soloAwait;
			this.state.soloAwait = !0;
			try {
				return t$13();
			} finally {
				this.state.soloAwait = e$4;
			}
		}
		allowInAnd(t$13) {
			let e$4 = this.prodParam.currentFlags();
			if (8 & ~e$4) {
				this.prodParam.enter(e$4 | 8);
				try {
					return t$13();
				} finally {
					this.prodParam.exit();
				}
			}
			return t$13();
		}
		disallowInAnd(t$13) {
			let e$4 = this.prodParam.currentFlags();
			if (8 & e$4) {
				this.prodParam.enter(e$4 & -9);
				try {
					return t$13();
				} finally {
					this.prodParam.exit();
				}
			}
			return t$13();
		}
		registerTopicReference() {
			this.state.topicContext.maxTopicIndex = 0;
		}
		topicReferenceIsAllowedInCurrentContext() {
			return this.state.topicContext.maxNumOfResolvableTopics >= 1;
		}
		topicReferenceWasUsedInCurrentContext() {
			return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;
		}
		parseFSharpPipelineBody(t$13) {
			let e$4 = this.state.startLoc;
			this.state.potentialArrowAt = this.state.start;
			let s$8 = this.state.inFSharpPipelineDirectBody;
			this.state.inFSharpPipelineDirectBody = !0;
			let i$18 = this.parseExprOp(this.parseMaybeUnaryOrPrivate(), e$4, t$13);
			return this.state.inFSharpPipelineDirectBody = s$8, i$18;
		}
		parseModuleExpression() {
			this.expectPlugin("moduleBlocks");
			let t$13 = this.startNode();
			this.next(), this.match(5) || this.unexpected(null, 5);
			let e$4 = this.startNodeAt(this.state.endLoc);
			this.next();
			let s$8 = this.initializeScopes(!0);
			this.enterInitialScopes();
			try {
				t$13.body = this.parseProgram(e$4, 8, "module");
			} finally {
				s$8();
			}
			return this.finishNode(t$13, "ModuleExpression");
		}
		parsePropertyNamePrefixOperator(t$13) {}
	}, qe$6 = { kind: 1 }, Br$5 = { kind: 2 }, Rr$5 = /[\uD800-\uDFFF]/u, ze$6 = /in(?:stanceof)?/y;
	function _r$5(a$13, t$13, e$4) {
		for (let s$8 = 0; s$8 < a$13.length; s$8++) {
			let i$18 = a$13[s$8], { type: r$12 } = i$18;
			if (typeof r$12 == "number") {
				if (r$12 === 139) {
					let { loc: n$8, start: o$9, value: l$10, end: h$3 } = i$18, c$3 = o$9 + 1, u$14 = D$4(n$8.start, 1);
					a$13.splice(s$8, 1, new O$3({
						type: R$6(27),
						value: "#",
						start: o$9,
						end: c$3,
						startLoc: n$8.start,
						endLoc: u$14
					}), new O$3({
						type: R$6(132),
						value: l$10,
						start: c$3,
						end: h$3,
						startLoc: u$14,
						endLoc: n$8.end
					})), s$8++;
					continue;
				}
				if (Ie$7(r$12)) {
					let { loc: n$8, start: o$9, value: l$10, end: h$3 } = i$18, c$3 = o$9 + 1, u$14 = D$4(n$8.start, 1), f$3;
					t$13.charCodeAt(o$9 - e$4) === 96 ? f$3 = new O$3({
						type: R$6(22),
						value: "`",
						start: o$9,
						end: c$3,
						startLoc: n$8.start,
						endLoc: u$14
					}) : f$3 = new O$3({
						type: R$6(8),
						value: "}",
						start: o$9,
						end: c$3,
						startLoc: n$8.start,
						endLoc: u$14
					});
					let d$14, x$3, A$3, N$5;
					r$12 === 24 ? (x$3 = h$3 - 1, A$3 = D$4(n$8.end, -1), d$14 = l$10 === null ? null : l$10.slice(1, -1), N$5 = new O$3({
						type: R$6(22),
						value: "`",
						start: x$3,
						end: h$3,
						startLoc: A$3,
						endLoc: n$8.end
					})) : (x$3 = h$3 - 2, A$3 = D$4(n$8.end, -2), d$14 = l$10 === null ? null : l$10.slice(1, -2), N$5 = new O$3({
						type: R$6(23),
						value: "${",
						start: x$3,
						end: h$3,
						startLoc: A$3,
						endLoc: n$8.end
					})), a$13.splice(s$8, 1, f$3, new O$3({
						type: R$6(20),
						value: d$14,
						start: c$3,
						end: x$3,
						startLoc: u$14,
						endLoc: A$3
					}), N$5), s$8 += 2;
					continue;
				}
				i$18.type = R$6(r$12);
			}
		}
		return a$13;
	}
	var ct$4 = class extends ht$4 {
		parseTopLevel(t$13, e$4) {
			return t$13.program = this.parseProgram(e$4), t$13.comments = this.comments, this.optionFlags & 256 && (t$13.tokens = _r$5(this.tokens, this.input, this.startIndex)), this.finishNode(t$13, "File");
		}
		parseProgram(t$13, e$4 = 140, s$8 = this.options.sourceType) {
			if (t$13.sourceType = s$8, t$13.interpreter = this.parseInterpreterDirective(), this.parseBlockBody(t$13, !0, !0, e$4), this.inModule) {
				if (!(this.optionFlags & 64) && this.scope.undefinedExports.size > 0) for (let [r$12, n$8] of Array.from(this.scope.undefinedExports)) this.raise(p$2.ModuleExportUndefined, n$8, { localName: r$12 });
				this.addExtra(t$13, "topLevelAwait", this.state.hasTopLevelAwait);
			}
			let i$18;
			return e$4 === 140 ? i$18 = this.finishNode(t$13, "Program") : i$18 = this.finishNodeAt(t$13, "Program", D$4(this.state.startLoc, -1)), i$18;
		}
		stmtToDirective(t$13) {
			let e$4 = this.castNodeTo(t$13, "Directive"), s$8 = this.castNodeTo(t$13.expression, "DirectiveLiteral"), i$18 = s$8.value, r$12 = this.input.slice(this.offsetToSourcePos(s$8.start), this.offsetToSourcePos(s$8.end)), n$8 = s$8.value = r$12.slice(1, -1);
			return this.addExtra(s$8, "raw", r$12), this.addExtra(s$8, "rawValue", n$8), this.addExtra(s$8, "expressionValue", i$18), e$4.value = s$8, delete t$13.expression, e$4;
		}
		parseInterpreterDirective() {
			if (!this.match(28)) return null;
			let t$13 = this.startNode();
			return t$13.value = this.state.value, this.next(), this.finishNode(t$13, "InterpreterDirective");
		}
		isLet() {
			return this.isContextual(100) ? this.hasFollowingBindingAtom() : !1;
		}
		isUsing() {
			if (!this.isContextual(107)) return !1;
			let t$13 = this.nextTokenInLineStart(), e$4 = this.codePointAtPos(t$13);
			return this.chStartsBindingIdentifier(e$4, t$13);
		}
		isForUsing() {
			if (!this.isContextual(107)) return !1;
			let t$13 = this.nextTokenInLineStart(), e$4 = this.codePointAtPos(t$13);
			if (this.isUnparsedContextual(t$13, "of")) {
				let s$8 = this.lookaheadCharCodeSince(t$13 + 2);
				if (s$8 !== 61 && s$8 !== 58 && s$8 !== 59) return !1;
			}
			return this.chStartsBindingIdentifier(e$4, t$13) ? (this.expectPlugin("explicitResourceManagement"), !0) : !1;
		}
		isAwaitUsing() {
			if (!this.isContextual(96)) return !1;
			let t$13 = this.nextTokenInLineStart();
			if (this.isUnparsedContextual(t$13, "using")) {
				t$13 = this.nextTokenInLineStartSince(t$13 + 5);
				let e$4 = this.codePointAtPos(t$13);
				if (this.chStartsBindingIdentifier(e$4, t$13)) return this.expectPlugin("explicitResourceManagement"), !0;
			}
			return !1;
		}
		chStartsBindingIdentifier(t$13, e$4) {
			if (U$4(t$13)) {
				if (ze$6.lastIndex = e$4, ze$6.test(this.input)) {
					let s$8 = this.codePointAtPos(ze$6.lastIndex);
					if (!Z$4(s$8) && s$8 !== 92) return !1;
				}
				return !0;
			} else return t$13 === 92;
		}
		chStartsBindingPattern(t$13) {
			return t$13 === 91 || t$13 === 123;
		}
		hasFollowingBindingAtom() {
			let t$13 = this.nextTokenStart(), e$4 = this.codePointAtPos(t$13);
			return this.chStartsBindingPattern(e$4) || this.chStartsBindingIdentifier(e$4, t$13);
		}
		hasInLineFollowingBindingIdentifierOrBrace() {
			let t$13 = this.nextTokenInLineStart(), e$4 = this.codePointAtPos(t$13);
			return e$4 === 123 || this.chStartsBindingIdentifier(e$4, t$13);
		}
		allowsUsing() {
			return (this.scope.inModule || !this.scope.inTopLevel) && !this.scope.inBareCaseStatement;
		}
		parseModuleItem() {
			return this.parseStatementLike(15);
		}
		parseStatementListItem() {
			return this.parseStatementLike(6 | (!this.options.annexB || this.state.strict ? 0 : 8));
		}
		parseStatementOrSloppyAnnexBFunctionDeclaration(t$13 = !1) {
			let e$4 = 0;
			return this.options.annexB && !this.state.strict && (e$4 |= 4, t$13 && (e$4 |= 8)), this.parseStatementLike(e$4);
		}
		parseStatement() {
			return this.parseStatementLike(0);
		}
		parseStatementLike(t$13) {
			let e$4 = null;
			return this.match(26) && (e$4 = this.parseDecorators(!0)), this.parseStatementContent(t$13, e$4);
		}
		parseStatementContent(t$13, e$4) {
			let s$8 = this.state.type, i$18 = this.startNode(), r$12 = !!(t$13 & 2), n$8 = !!(t$13 & 4), o$9 = t$13 & 1;
			switch (s$8) {
				case 60: return this.parseBreakContinueStatement(i$18, !0);
				case 63: return this.parseBreakContinueStatement(i$18, !1);
				case 64: return this.parseDebuggerStatement(i$18);
				case 90: return this.parseDoWhileStatement(i$18);
				case 91: return this.parseForStatement(i$18);
				case 68:
					if (this.lookaheadCharCode() === 46) break;
					return n$8 || this.raise(this.state.strict ? p$2.StrictFunction : this.options.annexB ? p$2.SloppyFunctionAnnexB : p$2.SloppyFunction, this.state.startLoc), this.parseFunctionStatement(i$18, !1, !r$12 && n$8);
				case 80: return r$12 || this.unexpected(), this.parseClass(this.maybeTakeDecorators(e$4, i$18), !0);
				case 69: return this.parseIfStatement(i$18);
				case 70: return this.parseReturnStatement(i$18);
				case 71: return this.parseSwitchStatement(i$18);
				case 72: return this.parseThrowStatement(i$18);
				case 73: return this.parseTryStatement(i$18);
				case 96:
					if (this.isAwaitUsing()) return this.allowsUsing() ? r$12 ? this.recordAwaitIfAllowed() || this.raise(p$2.AwaitUsingNotInAsyncContext, i$18) : this.raise(p$2.UnexpectedLexicalDeclaration, i$18) : this.raise(p$2.UnexpectedUsingDeclaration, i$18), this.next(), this.parseVarStatement(i$18, "await using");
					break;
				case 107:
					if (this.state.containsEsc || !this.hasInLineFollowingBindingIdentifierOrBrace()) break;
					return this.expectPlugin("explicitResourceManagement"), this.allowsUsing() ? r$12 || this.raise(p$2.UnexpectedLexicalDeclaration, this.state.startLoc) : this.raise(p$2.UnexpectedUsingDeclaration, this.state.startLoc), this.parseVarStatement(i$18, "using");
				case 100: {
					if (this.state.containsEsc) break;
					let c$3 = this.nextTokenStart(), u$14 = this.codePointAtPos(c$3);
					if (u$14 !== 91 && (!r$12 && this.hasFollowingLineBreak() || !this.chStartsBindingIdentifier(u$14, c$3) && u$14 !== 123)) break;
				}
				case 75: r$12 || this.raise(p$2.UnexpectedLexicalDeclaration, this.state.startLoc);
				case 74: {
					let c$3 = this.state.value;
					return this.parseVarStatement(i$18, c$3);
				}
				case 92: return this.parseWhileStatement(i$18);
				case 76: return this.parseWithStatement(i$18);
				case 5: return this.parseBlock();
				case 13: return this.parseEmptyStatement(i$18);
				case 83: {
					let c$3 = this.lookaheadCharCode();
					if (c$3 === 40 || c$3 === 46) break;
				}
				case 82: {
					!(this.optionFlags & 8) && !o$9 && this.raise(p$2.UnexpectedImportExport, this.state.startLoc), this.next();
					let c$3;
					return s$8 === 83 ? c$3 = this.parseImport(i$18) : c$3 = this.parseExport(i$18, e$4), this.assertModuleNodeAllowed(c$3), c$3;
				}
				default: if (this.isAsyncFunction()) return r$12 || this.raise(p$2.AsyncFunctionInSingleStatementContext, this.state.startLoc), this.next(), this.parseFunctionStatement(i$18, !0, !r$12 && n$8);
			}
			let l$10 = this.state.value, h$3 = this.parseExpression();
			return w$3(s$8) && h$3.type === "Identifier" && this.eat(14) ? this.parseLabeledStatement(i$18, l$10, h$3, t$13) : this.parseExpressionStatement(i$18, h$3, e$4);
		}
		assertModuleNodeAllowed(t$13) {
			!(this.optionFlags & 8) && !this.inModule && this.raise(p$2.ImportOutsideModule, t$13);
		}
		decoratorsEnabledBeforeExport() {
			return this.hasPlugin("decorators-legacy") ? !0 : this.hasPlugin("decorators") && this.getPluginOption("decorators", "decoratorsBeforeExport") !== !1;
		}
		maybeTakeDecorators(t$13, e$4, s$8) {
			if (t$13) {
				var i$18;
				(i$18 = e$4.decorators) != null && i$18.length ? (typeof this.getPluginOption("decorators", "decoratorsBeforeExport") != "boolean" && this.raise(p$2.DecoratorsBeforeAfterExport, e$4.decorators[0]), e$4.decorators.unshift(...t$13)) : e$4.decorators = t$13, this.resetStartLocationFromNode(e$4, t$13[0]), s$8 && this.resetStartLocationFromNode(s$8, e$4);
			}
			return e$4;
		}
		canHaveLeadingDecorator() {
			return this.match(80);
		}
		parseDecorators(t$13) {
			let e$4 = [];
			do
				e$4.push(this.parseDecorator());
			while (this.match(26));
			if (this.match(82)) t$13 || this.unexpected(), this.decoratorsEnabledBeforeExport() || this.raise(p$2.DecoratorExportClass, this.state.startLoc);
			else if (!this.canHaveLeadingDecorator()) throw this.raise(p$2.UnexpectedLeadingDecorator, this.state.startLoc);
			return e$4;
		}
		parseDecorator() {
			this.expectOnePlugin(["decorators", "decorators-legacy"]);
			let t$13 = this.startNode();
			if (this.next(), this.hasPlugin("decorators")) {
				let e$4 = this.state.startLoc, s$8;
				if (this.match(10)) {
					let i$18 = this.state.startLoc;
					this.next(), s$8 = this.parseExpression(), this.expect(11), s$8 = this.wrapParenthesis(i$18, s$8);
					let r$12 = this.state.startLoc;
					t$13.expression = this.parseMaybeDecoratorArguments(s$8, i$18), this.getPluginOption("decorators", "allowCallParenthesized") === !1 && t$13.expression !== s$8 && this.raise(p$2.DecoratorArgumentsOutsideParentheses, r$12);
				} else {
					for (s$8 = this.parseIdentifier(!1); this.eat(16);) {
						let i$18 = this.startNodeAt(e$4);
						i$18.object = s$8, this.match(139) ? (this.classScope.usePrivateName(this.state.value, this.state.startLoc), i$18.property = this.parsePrivateName()) : i$18.property = this.parseIdentifier(!0), i$18.computed = !1, s$8 = this.finishNode(i$18, "MemberExpression");
					}
					t$13.expression = this.parseMaybeDecoratorArguments(s$8, e$4);
				}
			} else t$13.expression = this.parseExprSubscripts();
			return this.finishNode(t$13, "Decorator");
		}
		parseMaybeDecoratorArguments(t$13, e$4) {
			if (this.eat(10)) {
				let s$8 = this.startNodeAt(e$4);
				return s$8.callee = t$13, s$8.arguments = this.parseCallExpressionArguments(11), this.toReferencedList(s$8.arguments), this.finishNode(s$8, "CallExpression");
			}
			return t$13;
		}
		parseBreakContinueStatement(t$13, e$4) {
			return this.next(), this.isLineTerminator() ? t$13.label = null : (t$13.label = this.parseIdentifier(), this.semicolon()), this.verifyBreakContinue(t$13, e$4), this.finishNode(t$13, e$4 ? "BreakStatement" : "ContinueStatement");
		}
		verifyBreakContinue(t$13, e$4) {
			let s$8;
			for (s$8 = 0; s$8 < this.state.labels.length; ++s$8) {
				let i$18 = this.state.labels[s$8];
				if ((t$13.label == null || i$18.name === t$13.label.name) && (i$18.kind != null && (e$4 || i$18.kind === 1) || t$13.label && e$4)) break;
			}
			if (s$8 === this.state.labels.length) {
				let i$18 = e$4 ? "BreakStatement" : "ContinueStatement";
				this.raise(p$2.IllegalBreakContinue, t$13, { type: i$18 });
			}
		}
		parseDebuggerStatement(t$13) {
			return this.next(), this.semicolon(), this.finishNode(t$13, "DebuggerStatement");
		}
		parseHeaderExpression() {
			this.expect(10);
			let t$13 = this.parseExpression();
			return this.expect(11), t$13;
		}
		parseDoWhileStatement(t$13) {
			return this.next(), this.state.labels.push(qe$6), t$13.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement()), this.state.labels.pop(), this.expect(92), t$13.test = this.parseHeaderExpression(), this.eat(13), this.finishNode(t$13, "DoWhileStatement");
		}
		parseForStatement(t$13) {
			this.next(), this.state.labels.push(qe$6);
			let e$4 = null;
			if (this.isContextual(96) && this.recordAwaitIfAllowed() && (e$4 = this.state.startLoc, this.next()), this.scope.enter(0), this.expect(10), this.match(13)) return e$4 !== null && this.unexpected(e$4), this.parseFor(t$13, null);
			let s$8 = this.isContextual(100);
			{
				let l$10 = this.isAwaitUsing(), h$3 = l$10 || this.isForUsing(), c$3 = s$8 && this.hasFollowingBindingAtom() || h$3;
				if (this.match(74) || this.match(75) || c$3) {
					let u$14 = this.startNode(), f$3;
					l$10 ? (f$3 = "await using", this.recordAwaitIfAllowed() || this.raise(p$2.AwaitUsingNotInAsyncContext, this.state.startLoc), this.next()) : f$3 = this.state.value, this.next(), this.parseVar(u$14, !0, f$3);
					let d$14 = this.finishNode(u$14, "VariableDeclaration"), x$3 = this.match(58);
					return x$3 && h$3 && this.raise(p$2.ForInUsing, d$14), (x$3 || this.isContextual(102)) && d$14.declarations.length === 1 ? this.parseForIn(t$13, d$14, e$4) : (e$4 !== null && this.unexpected(e$4), this.parseFor(t$13, d$14));
				}
			}
			let i$18 = this.isContextual(95), r$12 = new te$5(), n$8 = this.parseExpression(!0, r$12), o$9 = this.isContextual(102);
			if (o$9 && (s$8 && this.raise(p$2.ForOfLet, n$8), e$4 === null && i$18 && n$8.type === "Identifier" && this.raise(p$2.ForOfAsync, n$8)), o$9 || this.match(58)) {
				this.checkDestructuringPrivate(r$12), this.toAssignable(n$8, !0);
				let l$10 = o$9 ? "ForOfStatement" : "ForInStatement";
				return this.checkLVal(n$8, { type: l$10 }), this.parseForIn(t$13, n$8, e$4);
			} else this.checkExpressionErrors(r$12, !0);
			return e$4 !== null && this.unexpected(e$4), this.parseFor(t$13, n$8);
		}
		parseFunctionStatement(t$13, e$4, s$8) {
			return this.next(), this.parseFunction(t$13, 1 | (s$8 ? 2 : 0) | (e$4 ? 8 : 0));
		}
		parseIfStatement(t$13) {
			return this.next(), t$13.test = this.parseHeaderExpression(), t$13.consequent = this.parseStatementOrSloppyAnnexBFunctionDeclaration(), t$13.alternate = this.eat(66) ? this.parseStatementOrSloppyAnnexBFunctionDeclaration() : null, this.finishNode(t$13, "IfStatement");
		}
		parseReturnStatement(t$13) {
			return this.prodParam.hasReturn || this.raise(p$2.IllegalReturn, this.state.startLoc), this.next(), this.isLineTerminator() ? t$13.argument = null : (t$13.argument = this.parseExpression(), this.semicolon()), this.finishNode(t$13, "ReturnStatement");
		}
		parseSwitchStatement(t$13) {
			this.next(), t$13.discriminant = this.parseHeaderExpression();
			let e$4 = t$13.cases = [];
			this.expect(5), this.state.labels.push(Br$5), this.scope.enter(256);
			let s$8;
			for (let i$18; !this.match(8);) if (this.match(61) || this.match(65)) {
				let r$12 = this.match(61);
				s$8 && this.finishNode(s$8, "SwitchCase"), e$4.push(s$8 = this.startNode()), s$8.consequent = [], this.next(), r$12 ? s$8.test = this.parseExpression() : (i$18 && this.raise(p$2.MultipleDefaultsInSwitch, this.state.lastTokStartLoc), i$18 = !0, s$8.test = null), this.expect(14);
			} else s$8 ? s$8.consequent.push(this.parseStatementListItem()) : this.unexpected();
			return this.scope.exit(), s$8 && this.finishNode(s$8, "SwitchCase"), this.next(), this.state.labels.pop(), this.finishNode(t$13, "SwitchStatement");
		}
		parseThrowStatement(t$13) {
			return this.next(), this.hasPrecedingLineBreak() && this.raise(p$2.NewlineAfterThrow, this.state.lastTokEndLoc), t$13.argument = this.parseExpression(), this.semicolon(), this.finishNode(t$13, "ThrowStatement");
		}
		parseCatchClauseParam() {
			let t$13 = this.parseBindingAtom();
			return this.scope.enter(this.options.annexB && t$13.type === "Identifier" ? 8 : 0), this.checkLVal(t$13, { type: "CatchClause" }, 9), t$13;
		}
		parseTryStatement(t$13) {
			if (this.next(), t$13.block = this.parseBlock(), t$13.handler = null, this.match(62)) {
				let e$4 = this.startNode();
				this.next(), this.match(10) ? (this.expect(10), e$4.param = this.parseCatchClauseParam(), this.expect(11)) : (e$4.param = null, this.scope.enter(0)), e$4.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(!1, !1)), this.scope.exit(), t$13.handler = this.finishNode(e$4, "CatchClause");
			}
			return t$13.finalizer = this.eat(67) ? this.parseBlock() : null, !t$13.handler && !t$13.finalizer && this.raise(p$2.NoCatchOrFinally, t$13), this.finishNode(t$13, "TryStatement");
		}
		parseVarStatement(t$13, e$4, s$8 = !1) {
			return this.next(), this.parseVar(t$13, !1, e$4, s$8), this.semicolon(), this.finishNode(t$13, "VariableDeclaration");
		}
		parseWhileStatement(t$13) {
			return this.next(), t$13.test = this.parseHeaderExpression(), this.state.labels.push(qe$6), t$13.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement()), this.state.labels.pop(), this.finishNode(t$13, "WhileStatement");
		}
		parseWithStatement(t$13) {
			return this.state.strict && this.raise(p$2.StrictWith, this.state.startLoc), this.next(), t$13.object = this.parseHeaderExpression(), t$13.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement()), this.finishNode(t$13, "WithStatement");
		}
		parseEmptyStatement(t$13) {
			return this.next(), this.finishNode(t$13, "EmptyStatement");
		}
		parseLabeledStatement(t$13, e$4, s$8, i$18) {
			for (let n$8 of this.state.labels) n$8.name === e$4 && this.raise(p$2.LabelRedeclaration, s$8, { labelName: e$4 });
			let r$12 = Hi$5(this.state.type) ? 1 : this.match(71) ? 2 : null;
			for (let n$8 = this.state.labels.length - 1; n$8 >= 0; n$8--) {
				let o$9 = this.state.labels[n$8];
				if (o$9.statementStart === t$13.start) o$9.statementStart = this.sourceToOffsetPos(this.state.start), o$9.kind = r$12;
				else break;
			}
			return this.state.labels.push({
				name: e$4,
				kind: r$12,
				statementStart: this.sourceToOffsetPos(this.state.start)
			}), t$13.body = i$18 & 8 ? this.parseStatementOrSloppyAnnexBFunctionDeclaration(!0) : this.parseStatement(), this.state.labels.pop(), t$13.label = s$8, this.finishNode(t$13, "LabeledStatement");
		}
		parseExpressionStatement(t$13, e$4, s$8) {
			return t$13.expression = e$4, this.semicolon(), this.finishNode(t$13, "ExpressionStatement");
		}
		parseBlock(t$13 = !1, e$4 = !0, s$8) {
			let i$18 = this.startNode();
			return t$13 && this.state.strictErrors.clear(), this.expect(5), e$4 && this.scope.enter(0), this.parseBlockBody(i$18, t$13, !1, 8, s$8), e$4 && this.scope.exit(), this.finishNode(i$18, "BlockStatement");
		}
		isValidDirective(t$13) {
			return t$13.type === "ExpressionStatement" && t$13.expression.type === "StringLiteral" && !t$13.expression.extra.parenthesized;
		}
		parseBlockBody(t$13, e$4, s$8, i$18, r$12) {
			let n$8 = t$13.body = [], o$9 = t$13.directives = [];
			this.parseBlockOrModuleBlockBody(n$8, e$4 ? o$9 : void 0, s$8, i$18, r$12);
		}
		parseBlockOrModuleBlockBody(t$13, e$4, s$8, i$18, r$12) {
			let n$8 = this.state.strict, o$9 = !1, l$10 = !1;
			for (; !this.match(i$18);) {
				let h$3 = s$8 ? this.parseModuleItem() : this.parseStatementListItem();
				if (e$4 && !l$10) {
					if (this.isValidDirective(h$3)) {
						let c$3 = this.stmtToDirective(h$3);
						e$4.push(c$3), !o$9 && c$3.value.value === "use strict" && (o$9 = !0, this.setStrict(!0));
						continue;
					}
					l$10 = !0, this.state.strictErrors.clear();
				}
				t$13.push(h$3);
			}
			r$12?.call(this, o$9), n$8 || this.setStrict(!1), this.next();
		}
		parseFor(t$13, e$4) {
			return t$13.init = e$4, this.semicolon(!1), t$13.test = this.match(13) ? null : this.parseExpression(), this.semicolon(!1), t$13.update = this.match(11) ? null : this.parseExpression(), this.expect(11), t$13.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement()), this.scope.exit(), this.state.labels.pop(), this.finishNode(t$13, "ForStatement");
		}
		parseForIn(t$13, e$4, s$8) {
			let i$18 = this.match(58);
			return this.next(), i$18 ? s$8 !== null && this.unexpected(s$8) : t$13.await = s$8 !== null, e$4.type === "VariableDeclaration" && e$4.declarations[0].init != null && (!i$18 || !this.options.annexB || this.state.strict || e$4.kind !== "var" || e$4.declarations[0].id.type !== "Identifier") && this.raise(p$2.ForInOfLoopInitializer, e$4, { type: i$18 ? "ForInStatement" : "ForOfStatement" }), e$4.type === "AssignmentPattern" && this.raise(p$2.InvalidLhs, e$4, { ancestor: { type: "ForStatement" } }), t$13.left = e$4, t$13.right = i$18 ? this.parseExpression() : this.parseMaybeAssignAllowIn(), this.expect(11), t$13.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement()), this.scope.exit(), this.state.labels.pop(), this.finishNode(t$13, i$18 ? "ForInStatement" : "ForOfStatement");
		}
		parseVar(t$13, e$4, s$8, i$18 = !1) {
			let r$12 = t$13.declarations = [];
			for (t$13.kind = s$8;;) {
				let n$8 = this.startNode();
				if (this.parseVarId(n$8, s$8), n$8.init = this.eat(29) ? e$4 ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn() : null, n$8.init === null && !i$18 && (n$8.id.type !== "Identifier" && !(e$4 && (this.match(58) || this.isContextual(102))) ? this.raise(p$2.DeclarationMissingInitializer, this.state.lastTokEndLoc, { kind: "destructuring" }) : (s$8 === "const" || s$8 === "using" || s$8 === "await using") && !(this.match(58) || this.isContextual(102)) && this.raise(p$2.DeclarationMissingInitializer, this.state.lastTokEndLoc, { kind: s$8 })), r$12.push(this.finishNode(n$8, "VariableDeclarator")), !this.eat(12)) break;
			}
			return t$13;
		}
		parseVarId(t$13, e$4) {
			let s$8 = this.parseBindingAtom();
			(e$4 === "using" || e$4 === "await using") && (s$8.type === "ArrayPattern" || s$8.type === "ObjectPattern") && this.raise(p$2.UsingDeclarationHasBindingPattern, s$8.loc.start), this.checkLVal(s$8, { type: "VariableDeclarator" }, e$4 === "var" ? 5 : 8201), t$13.id = s$8;
		}
		parseAsyncFunctionExpression(t$13) {
			return this.parseFunction(t$13, 8);
		}
		parseFunction(t$13, e$4 = 0) {
			let s$8 = e$4 & 2, i$18 = !!(e$4 & 1), r$12 = i$18 && !(e$4 & 4), n$8 = !!(e$4 & 8);
			this.initFunction(t$13, n$8), this.match(55) && (s$8 && this.raise(p$2.GeneratorInSingleStatementContext, this.state.startLoc), this.next(), t$13.generator = !0), i$18 && (t$13.id = this.parseFunctionId(r$12));
			let o$9 = this.state.maybeInArrowParameters;
			return this.state.maybeInArrowParameters = !1, this.scope.enter(514), this.prodParam.enter(Ce$6(n$8, t$13.generator)), i$18 || (t$13.id = this.parseFunctionId()), this.parseFunctionParams(t$13, !1), this.withSmartMixTopicForbiddingContext(() => {
				this.parseFunctionBodyAndFinish(t$13, i$18 ? "FunctionDeclaration" : "FunctionExpression");
			}), this.prodParam.exit(), this.scope.exit(), i$18 && !s$8 && this.registerFunctionStatementId(t$13), this.state.maybeInArrowParameters = o$9, t$13;
		}
		parseFunctionId(t$13) {
			return t$13 || w$3(this.state.type) ? this.parseIdentifier() : null;
		}
		parseFunctionParams(t$13, e$4) {
			this.expect(10), this.expressionScope.enter(Ar$5()), t$13.params = this.parseBindingList(11, 41, 2 | (e$4 ? 4 : 0)), this.expressionScope.exit();
		}
		registerFunctionStatementId(t$13) {
			t$13.id && this.scope.declareName(t$13.id.name, !this.options.annexB || this.state.strict || t$13.generator || t$13.async ? this.scope.treatFunctionsAsVar ? 5 : 8201 : 17, t$13.id.loc.start);
		}
		parseClass(t$13, e$4, s$8) {
			this.next();
			let i$18 = this.state.strict;
			return this.state.strict = !0, this.parseClassId(t$13, e$4, s$8), this.parseClassSuper(t$13), t$13.body = this.parseClassBody(!!t$13.superClass, i$18), this.finishNode(t$13, e$4 ? "ClassDeclaration" : "ClassExpression");
		}
		isClassProperty() {
			return this.match(29) || this.match(13) || this.match(8);
		}
		isClassMethod() {
			return this.match(10);
		}
		nameIsConstructor(t$13) {
			return t$13.type === "Identifier" && t$13.name === "constructor" || t$13.type === "StringLiteral" && t$13.value === "constructor";
		}
		isNonstaticConstructor(t$13) {
			return !t$13.computed && !t$13.static && this.nameIsConstructor(t$13.key);
		}
		parseClassBody(t$13, e$4) {
			this.classScope.enter();
			let s$8 = {
				hadConstructor: !1,
				hadSuperClass: t$13
			}, i$18 = [], r$12 = this.startNode();
			if (r$12.body = [], this.expect(5), this.withSmartMixTopicForbiddingContext(() => {
				for (; !this.match(8);) {
					if (this.eat(13)) {
						if (i$18.length > 0) throw this.raise(p$2.DecoratorSemicolon, this.state.lastTokEndLoc);
						continue;
					}
					if (this.match(26)) {
						i$18.push(this.parseDecorator());
						continue;
					}
					let n$8 = this.startNode();
					i$18.length && (n$8.decorators = i$18, this.resetStartLocationFromNode(n$8, i$18[0]), i$18 = []), this.parseClassMember(r$12, n$8, s$8), n$8.kind === "constructor" && n$8.decorators && n$8.decorators.length > 0 && this.raise(p$2.DecoratorConstructor, n$8);
				}
			}), this.state.strict = e$4, this.next(), i$18.length) throw this.raise(p$2.TrailingDecorator, this.state.startLoc);
			return this.classScope.exit(), this.finishNode(r$12, "ClassBody");
		}
		parseClassMemberFromModifier(t$13, e$4) {
			let s$8 = this.parseIdentifier(!0);
			if (this.isClassMethod()) {
				let i$18 = e$4;
				return i$18.kind = "method", i$18.computed = !1, i$18.key = s$8, i$18.static = !1, this.pushClassMethod(t$13, i$18, !1, !1, !1, !1), !0;
			} else if (this.isClassProperty()) {
				let i$18 = e$4;
				return i$18.computed = !1, i$18.key = s$8, i$18.static = !1, t$13.body.push(this.parseClassProperty(i$18)), !0;
			}
			return this.resetPreviousNodeTrailingComments(s$8), !1;
		}
		parseClassMember(t$13, e$4, s$8) {
			let i$18 = this.isContextual(106);
			if (i$18) {
				if (this.parseClassMemberFromModifier(t$13, e$4)) return;
				if (this.eat(5)) {
					this.parseClassStaticBlock(t$13, e$4);
					return;
				}
			}
			this.parseClassMemberWithIsStatic(t$13, e$4, s$8, i$18);
		}
		parseClassMemberWithIsStatic(t$13, e$4, s$8, i$18) {
			let r$12 = e$4, n$8 = e$4, o$9 = e$4, l$10 = e$4, h$3 = e$4, c$3 = r$12, u$14 = r$12;
			if (e$4.static = i$18, this.parsePropertyNamePrefixOperator(e$4), this.eat(55)) {
				c$3.kind = "method";
				let S$4 = this.match(139);
				if (this.parseClassElementName(c$3), this.parsePostMemberNameModifiers(c$3), S$4) {
					this.pushClassPrivateMethod(t$13, n$8, !0, !1);
					return;
				}
				this.isNonstaticConstructor(r$12) && this.raise(p$2.ConstructorIsGenerator, r$12.key), this.pushClassMethod(t$13, r$12, !0, !1, !1, !1);
				return;
			}
			let f$3 = !this.state.containsEsc && w$3(this.state.type), d$14 = this.parseClassElementName(e$4), x$3 = f$3 ? d$14.name : null, A$3 = this.isPrivateName(d$14), N$5 = this.state.startLoc;
			if (this.parsePostMemberNameModifiers(u$14), this.isClassMethod()) {
				if (c$3.kind = "method", A$3) {
					this.pushClassPrivateMethod(t$13, n$8, !1, !1);
					return;
				}
				let S$4 = this.isNonstaticConstructor(r$12), I$2 = !1;
				S$4 && (r$12.kind = "constructor", s$8.hadConstructor && !this.hasPlugin("typescript") && this.raise(p$2.DuplicateConstructor, d$14), S$4 && this.hasPlugin("typescript") && e$4.override && this.raise(p$2.OverrideOnConstructor, d$14), s$8.hadConstructor = !0, I$2 = s$8.hadSuperClass), this.pushClassMethod(t$13, r$12, !1, !1, S$4, I$2);
			} else if (this.isClassProperty()) A$3 ? this.pushClassPrivateProperty(t$13, l$10) : this.pushClassProperty(t$13, o$9);
			else if (x$3 === "async" && !this.isLineTerminator()) {
				this.resetPreviousNodeTrailingComments(d$14);
				let S$4 = this.eat(55);
				u$14.optional && this.unexpected(N$5), c$3.kind = "method";
				let I$2 = this.match(139);
				this.parseClassElementName(c$3), this.parsePostMemberNameModifiers(u$14), I$2 ? this.pushClassPrivateMethod(t$13, n$8, S$4, !0) : (this.isNonstaticConstructor(r$12) && this.raise(p$2.ConstructorIsAsync, r$12.key), this.pushClassMethod(t$13, r$12, S$4, !0, !1, !1));
			} else if ((x$3 === "get" || x$3 === "set") && !(this.match(55) && this.isLineTerminator())) {
				this.resetPreviousNodeTrailingComments(d$14), c$3.kind = x$3;
				let S$4 = this.match(139);
				this.parseClassElementName(r$12), S$4 ? this.pushClassPrivateMethod(t$13, n$8, !1, !1) : (this.isNonstaticConstructor(r$12) && this.raise(p$2.ConstructorIsAccessor, r$12.key), this.pushClassMethod(t$13, r$12, !1, !1, !1, !1)), this.checkGetterSetterParams(r$12);
			} else if (x$3 === "accessor" && !this.isLineTerminator()) {
				this.expectPlugin("decoratorAutoAccessors"), this.resetPreviousNodeTrailingComments(d$14);
				let S$4 = this.match(139);
				this.parseClassElementName(o$9), this.pushClassAccessorProperty(t$13, h$3, S$4);
			} else this.isLineTerminator() ? A$3 ? this.pushClassPrivateProperty(t$13, l$10) : this.pushClassProperty(t$13, o$9) : this.unexpected();
		}
		parseClassElementName(t$13) {
			let { type: e$4, value: s$8 } = this.state;
			if ((e$4 === 132 || e$4 === 134) && t$13.static && s$8 === "prototype" && this.raise(p$2.StaticPrototype, this.state.startLoc), e$4 === 139) {
				s$8 === "constructor" && this.raise(p$2.ConstructorClassPrivateField, this.state.startLoc);
				let i$18 = this.parsePrivateName();
				return t$13.key = i$18, i$18;
			}
			return this.parsePropertyName(t$13), t$13.key;
		}
		parseClassStaticBlock(t$13, e$4) {
			var s$8;
			this.scope.enter(720);
			let i$18 = this.state.labels;
			this.state.labels = [], this.prodParam.enter(0);
			let r$12 = e$4.body = [];
			this.parseBlockOrModuleBlockBody(r$12, void 0, !1, 8), this.prodParam.exit(), this.scope.exit(), this.state.labels = i$18, t$13.body.push(this.finishNode(e$4, "StaticBlock")), (s$8 = e$4.decorators) != null && s$8.length && this.raise(p$2.DecoratorStaticBlock, e$4);
		}
		pushClassProperty(t$13, e$4) {
			!e$4.computed && this.nameIsConstructor(e$4.key) && this.raise(p$2.ConstructorClassField, e$4.key), t$13.body.push(this.parseClassProperty(e$4));
		}
		pushClassPrivateProperty(t$13, e$4) {
			let s$8 = this.parseClassPrivateProperty(e$4);
			t$13.body.push(s$8), this.classScope.declarePrivateName(this.getPrivateNameSV(s$8.key), 0, s$8.key.loc.start);
		}
		pushClassAccessorProperty(t$13, e$4, s$8) {
			!s$8 && !e$4.computed && this.nameIsConstructor(e$4.key) && this.raise(p$2.ConstructorClassField, e$4.key);
			let i$18 = this.parseClassAccessorProperty(e$4);
			t$13.body.push(i$18), s$8 && this.classScope.declarePrivateName(this.getPrivateNameSV(i$18.key), 0, i$18.key.loc.start);
		}
		pushClassMethod(t$13, e$4, s$8, i$18, r$12, n$8) {
			t$13.body.push(this.parseMethod(e$4, s$8, i$18, r$12, n$8, "ClassMethod", !0));
		}
		pushClassPrivateMethod(t$13, e$4, s$8, i$18) {
			let r$12 = this.parseMethod(e$4, s$8, i$18, !1, !1, "ClassPrivateMethod", !0);
			t$13.body.push(r$12);
			let n$8 = r$12.kind === "get" ? r$12.static ? 6 : 2 : r$12.kind === "set" ? r$12.static ? 5 : 1 : 0;
			this.declareClassPrivateMethodInScope(r$12, n$8);
		}
		declareClassPrivateMethodInScope(t$13, e$4) {
			this.classScope.declarePrivateName(this.getPrivateNameSV(t$13.key), e$4, t$13.key.loc.start);
		}
		parsePostMemberNameModifiers(t$13) {}
		parseClassPrivateProperty(t$13) {
			return this.parseInitializer(t$13), this.semicolon(), this.finishNode(t$13, "ClassPrivateProperty");
		}
		parseClassProperty(t$13) {
			return this.parseInitializer(t$13), this.semicolon(), this.finishNode(t$13, "ClassProperty");
		}
		parseClassAccessorProperty(t$13) {
			return this.parseInitializer(t$13), this.semicolon(), this.finishNode(t$13, "ClassAccessorProperty");
		}
		parseInitializer(t$13) {
			this.scope.enter(592), this.expressionScope.enter(Os$2()), this.prodParam.enter(0), t$13.value = this.eat(29) ? this.parseMaybeAssignAllowIn() : null, this.expressionScope.exit(), this.prodParam.exit(), this.scope.exit();
		}
		parseClassId(t$13, e$4, s$8, i$18 = 8331) {
			if (w$3(this.state.type)) t$13.id = this.parseIdentifier(), e$4 && this.declareNameFromIdentifier(t$13.id, i$18);
			else if (s$8 || !e$4) t$13.id = null;
			else throw this.raise(p$2.MissingClassName, this.state.startLoc);
		}
		parseClassSuper(t$13) {
			t$13.superClass = this.eat(81) ? this.parseExprSubscripts() : null;
		}
		parseExport(t$13, e$4) {
			let s$8 = this.parseMaybeImportPhase(t$13, !0), i$18 = this.maybeParseExportDefaultSpecifier(t$13, s$8), r$12 = !i$18 || this.eat(12), n$8 = r$12 && this.eatExportStar(t$13), o$9 = n$8 && this.maybeParseExportNamespaceSpecifier(t$13), l$10 = r$12 && (!o$9 || this.eat(12)), h$3 = i$18 || n$8;
			if (n$8 && !o$9) {
				if (i$18 && this.unexpected(), e$4) throw this.raise(p$2.UnsupportedDecoratorExport, t$13);
				return this.parseExportFrom(t$13, !0), this.sawUnambiguousESM = !0, this.finishNode(t$13, "ExportAllDeclaration");
			}
			let c$3 = this.maybeParseExportNamedSpecifiers(t$13);
			i$18 && r$12 && !n$8 && !c$3 && this.unexpected(null, 5), o$9 && l$10 && this.unexpected(null, 98);
			let u$14;
			if (h$3 || c$3) {
				if (u$14 = !1, e$4) throw this.raise(p$2.UnsupportedDecoratorExport, t$13);
				this.parseExportFrom(t$13, h$3);
			} else u$14 = this.maybeParseExportDeclaration(t$13);
			if (h$3 || c$3 || u$14) {
				var f$3;
				let d$14 = t$13;
				if (this.checkExport(d$14, !0, !1, !!d$14.source), ((f$3 = d$14.declaration) == null ? void 0 : f$3.type) === "ClassDeclaration") this.maybeTakeDecorators(e$4, d$14.declaration, d$14);
				else if (e$4) throw this.raise(p$2.UnsupportedDecoratorExport, t$13);
				return this.sawUnambiguousESM = !0, this.finishNode(d$14, "ExportNamedDeclaration");
			}
			if (this.eat(65)) {
				let d$14 = t$13, x$3 = this.parseExportDefaultExpression();
				if (d$14.declaration = x$3, x$3.type === "ClassDeclaration") this.maybeTakeDecorators(e$4, x$3, d$14);
				else if (e$4) throw this.raise(p$2.UnsupportedDecoratorExport, t$13);
				return this.checkExport(d$14, !0, !0), this.sawUnambiguousESM = !0, this.finishNode(d$14, "ExportDefaultDeclaration");
			}
			this.unexpected(null, 5);
		}
		eatExportStar(t$13) {
			return this.eat(55);
		}
		maybeParseExportDefaultSpecifier(t$13, e$4) {
			if (e$4 || this.isExportDefaultSpecifier()) {
				this.expectPlugin("exportDefaultFrom", e$4 == null ? void 0 : e$4.loc.start);
				let s$8 = e$4 || this.parseIdentifier(!0), i$18 = this.startNodeAtNode(s$8);
				return i$18.exported = s$8, t$13.specifiers = [this.finishNode(i$18, "ExportDefaultSpecifier")], !0;
			}
			return !1;
		}
		maybeParseExportNamespaceSpecifier(t$13) {
			if (this.isContextual(93)) {
				var e$4;
				(e$4 = t$13).specifiers ?? (e$4.specifiers = []);
				let i$18 = this.startNodeAt(this.state.lastTokStartLoc);
				return this.next(), i$18.exported = this.parseModuleExportName(), t$13.specifiers.push(this.finishNode(i$18, "ExportNamespaceSpecifier")), !0;
			}
			return !1;
		}
		maybeParseExportNamedSpecifiers(t$13) {
			if (this.match(5)) {
				let e$4 = t$13;
				e$4.specifiers || (e$4.specifiers = []);
				let s$8 = e$4.exportKind === "type";
				return e$4.specifiers.push(...this.parseExportSpecifiers(s$8)), e$4.source = null, this.hasPlugin("importAssertions") ? e$4.assertions = [] : e$4.attributes = [], e$4.declaration = null, !0;
			}
			return !1;
		}
		maybeParseExportDeclaration(t$13) {
			return this.shouldParseExportDeclaration() ? (t$13.specifiers = [], t$13.source = null, this.hasPlugin("importAssertions") ? t$13.assertions = [] : t$13.attributes = [], t$13.declaration = this.parseExportDeclaration(t$13), !0) : !1;
		}
		isAsyncFunction() {
			if (!this.isContextual(95)) return !1;
			let t$13 = this.nextTokenInLineStart();
			return this.isUnparsedContextual(t$13, "function");
		}
		parseExportDefaultExpression() {
			let t$13 = this.startNode();
			if (this.match(68)) return this.next(), this.parseFunction(t$13, 5);
			if (this.isAsyncFunction()) return this.next(), this.next(), this.parseFunction(t$13, 13);
			if (this.match(80)) return this.parseClass(t$13, !0, !0);
			if (this.match(26)) return this.hasPlugin("decorators") && this.getPluginOption("decorators", "decoratorsBeforeExport") === !0 && this.raise(p$2.DecoratorBeforeExport, this.state.startLoc), this.parseClass(this.maybeTakeDecorators(this.parseDecorators(!1), this.startNode()), !0, !0);
			if (this.match(75) || this.match(74) || this.isLet() || this.hasPlugin("explicitResourceManagement") && (this.isUsing() || this.isAwaitUsing())) throw this.raise(p$2.UnsupportedDefaultExport, this.state.startLoc);
			let e$4 = this.parseMaybeAssignAllowIn();
			return this.semicolon(), e$4;
		}
		parseExportDeclaration(t$13) {
			return this.match(80) ? this.parseClass(this.startNode(), !0, !1) : this.parseStatementListItem();
		}
		isExportDefaultSpecifier() {
			let { type: t$13 } = this.state;
			if (w$3(t$13)) {
				if (t$13 === 95 && !this.state.containsEsc || t$13 === 100) return !1;
				if ((t$13 === 130 || t$13 === 129) && !this.state.containsEsc) {
					let i$18 = this.nextTokenStart(), r$12 = this.input.charCodeAt(i$18);
					if (r$12 === 123 || this.chStartsBindingIdentifier(r$12, i$18) && !this.input.startsWith("from", i$18)) return this.expectOnePlugin(["flow", "typescript"]), !1;
				}
			} else if (!this.match(65)) return !1;
			let e$4 = this.nextTokenStart(), s$8 = this.isUnparsedContextual(e$4, "from");
			if (this.input.charCodeAt(e$4) === 44 || w$3(this.state.type) && s$8) return !0;
			if (this.match(65) && s$8) {
				let i$18 = this.input.charCodeAt(this.nextTokenStartSince(e$4 + 4));
				return i$18 === 34 || i$18 === 39;
			}
			return !1;
		}
		parseExportFrom(t$13, e$4) {
			this.eatContextual(98) ? (t$13.source = this.parseImportSource(), this.checkExport(t$13), this.maybeParseImportAttributes(t$13), this.checkJSONModuleImport(t$13)) : e$4 && this.unexpected(), this.semicolon();
		}
		shouldParseExportDeclaration() {
			let { type: t$13 } = this.state;
			if (t$13 === 26 && (this.expectOnePlugin(["decorators", "decorators-legacy"]), this.hasPlugin("decorators"))) return this.getPluginOption("decorators", "decoratorsBeforeExport") === !0 && this.raise(p$2.DecoratorBeforeExport, this.state.startLoc), !0;
			if (this.hasPlugin("explicitResourceManagement")) {
				if (this.isUsing()) return this.raise(p$2.UsingDeclarationExport, this.state.startLoc), !0;
				if (this.isAwaitUsing()) return this.raise(p$2.UsingDeclarationExport, this.state.startLoc), !0;
			}
			return t$13 === 74 || t$13 === 75 || t$13 === 68 || t$13 === 80 || this.isLet() || this.isAsyncFunction();
		}
		checkExport(t$13, e$4, s$8, i$18) {
			if (e$4) {
				var r$12;
				if (s$8) {
					if (this.checkDuplicateExports(t$13, "default"), this.hasPlugin("exportDefaultFrom")) {
						var n$8;
						let o$9 = t$13.declaration;
						o$9.type === "Identifier" && o$9.name === "from" && o$9.end - o$9.start === 4 && !((n$8 = o$9.extra) != null && n$8.parenthesized) && this.raise(p$2.ExportDefaultFromAsIdentifier, o$9);
					}
				} else if ((r$12 = t$13.specifiers) != null && r$12.length) for (let o$9 of t$13.specifiers) {
					let { exported: l$10 } = o$9, h$3 = l$10.type === "Identifier" ? l$10.name : l$10.value;
					if (this.checkDuplicateExports(o$9, h$3), !i$18 && o$9.local) {
						let { local: c$3 } = o$9;
						c$3.type !== "Identifier" ? this.raise(p$2.ExportBindingIsString, o$9, {
							localName: c$3.value,
							exportName: h$3
						}) : (this.checkReservedWord(c$3.name, c$3.loc.start, !0, !1), this.scope.checkLocalExport(c$3));
					}
				}
				else if (t$13.declaration) {
					let o$9 = t$13.declaration;
					if (o$9.type === "FunctionDeclaration" || o$9.type === "ClassDeclaration") {
						let { id: l$10 } = o$9;
						if (!l$10) throw new Error("Assertion failure");
						this.checkDuplicateExports(t$13, l$10.name);
					} else if (o$9.type === "VariableDeclaration") for (let l$10 of o$9.declarations) this.checkDeclaration(l$10.id);
				}
			}
		}
		checkDeclaration(t$13) {
			if (t$13.type === "Identifier") this.checkDuplicateExports(t$13, t$13.name);
			else if (t$13.type === "ObjectPattern") for (let e$4 of t$13.properties) this.checkDeclaration(e$4);
			else if (t$13.type === "ArrayPattern") for (let e$4 of t$13.elements) e$4 && this.checkDeclaration(e$4);
			else t$13.type === "ObjectProperty" ? this.checkDeclaration(t$13.value) : t$13.type === "RestElement" ? this.checkDeclaration(t$13.argument) : t$13.type === "AssignmentPattern" && this.checkDeclaration(t$13.left);
		}
		checkDuplicateExports(t$13, e$4) {
			this.exportedIdentifiers.has(e$4) && (e$4 === "default" ? this.raise(p$2.DuplicateDefaultExport, t$13) : this.raise(p$2.DuplicateExport, t$13, { exportName: e$4 })), this.exportedIdentifiers.add(e$4);
		}
		parseExportSpecifiers(t$13) {
			let e$4 = [], s$8 = !0;
			for (this.expect(5); !this.eat(8);) {
				if (s$8) s$8 = !1;
				else if (this.expect(12), this.eat(8)) break;
				let i$18 = this.isContextual(130), r$12 = this.match(134), n$8 = this.startNode();
				n$8.local = this.parseModuleExportName(), e$4.push(this.parseExportSpecifier(n$8, r$12, t$13, i$18));
			}
			return e$4;
		}
		parseExportSpecifier(t$13, e$4, s$8, i$18) {
			return this.eatContextual(93) ? t$13.exported = this.parseModuleExportName() : e$4 ? t$13.exported = this.cloneStringLiteral(t$13.local) : t$13.exported || (t$13.exported = this.cloneIdentifier(t$13.local)), this.finishNode(t$13, "ExportSpecifier");
		}
		parseModuleExportName() {
			if (this.match(134)) {
				let t$13 = this.parseStringLiteral(this.state.value), e$4 = Rr$5.exec(t$13.value);
				return e$4 && this.raise(p$2.ModuleExportNameHasLoneSurrogate, t$13, { surrogateCharCode: e$4[0].charCodeAt(0) }), t$13;
			}
			return this.parseIdentifier(!0);
		}
		isJSONModuleImport(t$13) {
			return t$13.assertions != null ? t$13.assertions.some(({ key: e$4, value: s$8 }) => s$8.value === "json" && (e$4.type === "Identifier" ? e$4.name === "type" : e$4.value === "type")) : !1;
		}
		checkImportReflection(t$13) {
			let { specifiers: e$4 } = t$13, s$8 = e$4.length === 1 ? e$4[0].type : null;
			if (t$13.phase === "source") s$8 !== "ImportDefaultSpecifier" && this.raise(p$2.SourcePhaseImportRequiresDefault, e$4[0].loc.start);
			else if (t$13.phase === "defer") s$8 !== "ImportNamespaceSpecifier" && this.raise(p$2.DeferImportRequiresNamespace, e$4[0].loc.start);
			else if (t$13.module) {
				var i$18;
				s$8 !== "ImportDefaultSpecifier" && this.raise(p$2.ImportReflectionNotBinding, e$4[0].loc.start), ((i$18 = t$13.assertions) == null ? void 0 : i$18.length) > 0 && this.raise(p$2.ImportReflectionHasAssertion, e$4[0].loc.start);
			}
		}
		checkJSONModuleImport(t$13) {
			if (this.isJSONModuleImport(t$13) && t$13.type !== "ExportAllDeclaration") {
				let { specifiers: e$4 } = t$13;
				if (e$4 != null) {
					let s$8 = e$4.find((i$18) => {
						let r$12;
						if (i$18.type === "ExportSpecifier" ? r$12 = i$18.local : i$18.type === "ImportSpecifier" && (r$12 = i$18.imported), r$12 !== void 0) return r$12.type === "Identifier" ? r$12.name !== "default" : r$12.value !== "default";
					});
					s$8 !== void 0 && this.raise(p$2.ImportJSONBindingNotDefault, s$8.loc.start);
				}
			}
		}
		isPotentialImportPhase(t$13) {
			return t$13 ? !1 : this.isContextual(105) || this.isContextual(97) || this.isContextual(127);
		}
		applyImportPhase(t$13, e$4, s$8, i$18) {
			e$4 || (s$8 === "module" ? (this.expectPlugin("importReflection", i$18), t$13.module = !0) : this.hasPlugin("importReflection") && (t$13.module = !1), s$8 === "source" ? (this.expectPlugin("sourcePhaseImports", i$18), t$13.phase = "source") : s$8 === "defer" ? (this.expectPlugin("deferredImportEvaluation", i$18), t$13.phase = "defer") : this.hasPlugin("sourcePhaseImports") && (t$13.phase = null));
		}
		parseMaybeImportPhase(t$13, e$4) {
			if (!this.isPotentialImportPhase(e$4)) return this.applyImportPhase(t$13, e$4, null), null;
			let s$8 = this.startNode(), i$18 = this.parseIdentifierName(!0), { type: r$12 } = this.state;
			return (M$2(r$12) ? r$12 !== 98 || this.lookaheadCharCode() === 102 : r$12 !== 12) ? (this.applyImportPhase(t$13, e$4, i$18, s$8.loc.start), null) : (this.applyImportPhase(t$13, e$4, null), this.createIdentifier(s$8, i$18));
		}
		isPrecedingIdImportPhase(t$13) {
			let { type: e$4 } = this.state;
			return w$3(e$4) ? e$4 !== 98 || this.lookaheadCharCode() === 102 : e$4 !== 12;
		}
		parseImport(t$13) {
			return this.match(134) ? this.parseImportSourceAndAttributes(t$13) : this.parseImportSpecifiersAndAfter(t$13, this.parseMaybeImportPhase(t$13, !1));
		}
		parseImportSpecifiersAndAfter(t$13, e$4) {
			t$13.specifiers = [];
			let i$18 = !this.maybeParseDefaultImportSpecifier(t$13, e$4) || this.eat(12), r$12 = i$18 && this.maybeParseStarImportSpecifier(t$13);
			return i$18 && !r$12 && this.parseNamedImportSpecifiers(t$13), this.expectContextual(98), this.parseImportSourceAndAttributes(t$13);
		}
		parseImportSourceAndAttributes(t$13) {
			return t$13.specifiers ??= [], t$13.source = this.parseImportSource(), this.maybeParseImportAttributes(t$13), this.checkImportReflection(t$13), this.checkJSONModuleImport(t$13), this.semicolon(), this.sawUnambiguousESM = !0, this.finishNode(t$13, "ImportDeclaration");
		}
		parseImportSource() {
			return this.match(134) || this.unexpected(), this.parseExprAtom();
		}
		parseImportSpecifierLocal(t$13, e$4, s$8) {
			e$4.local = this.parseIdentifier(), t$13.specifiers.push(this.finishImportSpecifier(e$4, s$8));
		}
		finishImportSpecifier(t$13, e$4, s$8 = 8201) {
			return this.checkLVal(t$13.local, { type: e$4 }, s$8), this.finishNode(t$13, e$4);
		}
		parseImportAttributes() {
			this.expect(5);
			let t$13 = [], e$4 = /* @__PURE__ */ new Set();
			do {
				if (this.match(8)) break;
				let s$8 = this.startNode(), i$18 = this.state.value;
				if (e$4.has(i$18) && this.raise(p$2.ModuleAttributesWithDuplicateKeys, this.state.startLoc, { key: i$18 }), e$4.add(i$18), this.match(134) ? s$8.key = this.parseStringLiteral(i$18) : s$8.key = this.parseIdentifier(!0), this.expect(14), !this.match(134)) throw this.raise(p$2.ModuleAttributeInvalidValue, this.state.startLoc);
				s$8.value = this.parseStringLiteral(this.state.value), t$13.push(this.finishNode(s$8, "ImportAttribute"));
			} while (this.eat(12));
			return this.expect(8), t$13;
		}
		parseModuleAttributes() {
			let t$13 = [], e$4 = /* @__PURE__ */ new Set();
			do {
				let s$8 = this.startNode();
				if (s$8.key = this.parseIdentifier(!0), s$8.key.name !== "type" && this.raise(p$2.ModuleAttributeDifferentFromType, s$8.key), e$4.has(s$8.key.name) && this.raise(p$2.ModuleAttributesWithDuplicateKeys, s$8.key, { key: s$8.key.name }), e$4.add(s$8.key.name), this.expect(14), !this.match(134)) throw this.raise(p$2.ModuleAttributeInvalidValue, this.state.startLoc);
				s$8.value = this.parseStringLiteral(this.state.value), t$13.push(this.finishNode(s$8, "ImportAttribute"));
			} while (this.eat(12));
			return t$13;
		}
		maybeParseImportAttributes(t$13) {
			let e$4;
			var s$8 = !1;
			if (this.match(76)) {
				if (this.hasPrecedingLineBreak() && this.lookaheadCharCode() === 40) return;
				this.next(), this.hasPlugin("moduleAttributes") ? (e$4 = this.parseModuleAttributes(), this.addExtra(t$13, "deprecatedWithLegacySyntax", !0)) : e$4 = this.parseImportAttributes(), s$8 = !0;
			} else this.isContextual(94) && !this.hasPrecedingLineBreak() ? (!this.hasPlugin("deprecatedImportAssert") && !this.hasPlugin("importAssertions") && this.raise(p$2.ImportAttributesUseAssert, this.state.startLoc), this.hasPlugin("importAssertions") || this.addExtra(t$13, "deprecatedAssertSyntax", !0), this.next(), e$4 = this.parseImportAttributes()) : e$4 = [];
			!s$8 && this.hasPlugin("importAssertions") ? t$13.assertions = e$4 : t$13.attributes = e$4;
		}
		maybeParseDefaultImportSpecifier(t$13, e$4) {
			if (e$4) {
				let s$8 = this.startNodeAtNode(e$4);
				return s$8.local = e$4, t$13.specifiers.push(this.finishImportSpecifier(s$8, "ImportDefaultSpecifier")), !0;
			} else if (M$2(this.state.type)) return this.parseImportSpecifierLocal(t$13, this.startNode(), "ImportDefaultSpecifier"), !0;
			return !1;
		}
		maybeParseStarImportSpecifier(t$13) {
			if (this.match(55)) {
				let e$4 = this.startNode();
				return this.next(), this.expectContextual(93), this.parseImportSpecifierLocal(t$13, e$4, "ImportNamespaceSpecifier"), !0;
			}
			return !1;
		}
		parseNamedImportSpecifiers(t$13) {
			let e$4 = !0;
			for (this.expect(5); !this.eat(8);) {
				if (e$4) e$4 = !1;
				else {
					if (this.eat(14)) throw this.raise(p$2.DestructureNamedImport, this.state.startLoc);
					if (this.expect(12), this.eat(8)) break;
				}
				let s$8 = this.startNode(), i$18 = this.match(134), r$12 = this.isContextual(130);
				s$8.imported = this.parseModuleExportName();
				let n$8 = this.parseImportSpecifier(s$8, i$18, t$13.importKind === "type" || t$13.importKind === "typeof", r$12, void 0);
				t$13.specifiers.push(n$8);
			}
		}
		parseImportSpecifier(t$13, e$4, s$8, i$18, r$12) {
			if (this.eatContextual(93)) t$13.local = this.parseIdentifier();
			else {
				let { imported: n$8 } = t$13;
				if (e$4) throw this.raise(p$2.ImportBindingIsString, t$13, { importName: n$8.value });
				this.checkReservedWord(n$8.name, t$13.loc.start, !0, !0), t$13.local || (t$13.local = this.cloneIdentifier(n$8));
			}
			return this.finishImportSpecifier(t$13, "ImportSpecifier", r$12);
		}
		isThisParam(t$13) {
			return t$13.type === "Identifier" && t$13.name === "this";
		}
	}, ke$6 = class extends ct$4 {
		constructor(t$13, e$4, s$8) {
			t$13 = Ri$4(t$13), super(t$13, e$4), this.options = t$13, this.initializeScopes(), this.plugins = s$8, this.filename = t$13.sourceFilename, this.startIndex = t$13.startIndex;
			let i$18 = 0;
			t$13.allowAwaitOutsideFunction && (i$18 |= 1), t$13.allowReturnOutsideFunction && (i$18 |= 2), t$13.allowImportExportEverywhere && (i$18 |= 8), t$13.allowSuperOutsideMethod && (i$18 |= 16), t$13.allowUndeclaredExports && (i$18 |= 64), t$13.allowNewTargetOutsideFunction && (i$18 |= 4), t$13.allowYieldOutsideFunction && (i$18 |= 32), t$13.ranges && (i$18 |= 128), t$13.tokens && (i$18 |= 256), t$13.createImportExpressions && (i$18 |= 512), t$13.createParenthesizedExpressions && (i$18 |= 1024), t$13.errorRecovery && (i$18 |= 2048), t$13.attachComment && (i$18 |= 4096), t$13.annexB && (i$18 |= 8192), this.optionFlags = i$18;
		}
		getScopeHandler() {
			return ye$4;
		}
		parse() {
			this.enterInitialScopes();
			let t$13 = this.startNode(), e$4 = this.startNode();
			return this.nextToken(), t$13.errors = null, this.parseTopLevel(t$13, e$4), t$13.errors = this.state.errors, t$13.comments.length = this.state.commentsLen, t$13;
		}
	};
	function Ur$5(a$13, t$13) {
		var e$4;
		if (((e$4 = t$13) == null ? void 0 : e$4.sourceType) === "unambiguous") {
			t$13 = Object.assign({}, t$13);
			try {
				t$13.sourceType = "module";
				let s$8 = fe$4(t$13, a$13), i$18 = s$8.parse();
				if (s$8.sawUnambiguousESM) return i$18;
				if (s$8.ambiguousScriptDifferentAst) try {
					return t$13.sourceType = "script", fe$4(t$13, a$13).parse();
				} catch {}
				else i$18.program.sourceType = "script";
				return i$18;
			} catch (s$8) {
				try {
					return t$13.sourceType = "script", fe$4(t$13, a$13).parse();
				} catch {}
				throw s$8;
			}
		} else return fe$4(t$13, a$13).parse();
	}
	function jr$5(a$13, t$13) {
		let e$4 = fe$4(t$13, a$13);
		return e$4.options.strictMode && (e$4.state.strict = !0), e$4.getExpression();
	}
	function $r$6(a$13) {
		let t$13 = {};
		for (let e$4 of Object.keys(a$13)) t$13[e$4] = R$6(a$13[e$4]);
		return t$13;
	}
	var Vr$4 = $r$6($i$5);
	function fe$4(a$13, t$13) {
		let e$4 = ke$6, s$8 = /* @__PURE__ */ new Map();
		if (a$13 != null && a$13.plugins) {
			for (let i$18 of a$13.plugins) {
				let r$12, n$8;
				typeof i$18 == "string" ? r$12 = i$18 : [r$12, n$8] = i$18, s$8.has(r$12) || s$8.set(r$12, n$8 || {});
			}
			Or$5(s$8), e$4 = qr$4(s$8);
		}
		return new e$4(a$13, t$13, s$8);
	}
	var Ss$2 = /* @__PURE__ */ new Map();
	function qr$4(a$13) {
		let t$13 = [];
		for (let i$18 of Fr$5) a$13.has(i$18) && t$13.push(i$18);
		let e$4 = t$13.join("|"), s$8 = Ss$2.get(e$4);
		if (!s$8) {
			s$8 = ke$6;
			for (let i$18 of t$13) s$8 = _s$3[i$18](s$8);
			Ss$2.set(e$4, s$8);
		}
		return s$8;
	}
	Pe$6.parse = Ur$5;
	Pe$6.parseExpression = jr$5;
	Pe$6.tokTypes = Vr$4;
});
var Mt$4 = {};
Ue$4(Mt$4, { parsers: () => ja$5 });
var vt$5 = {};
Ue$4(vt$5, {
	__babel_estree: () => Ma$4,
	__js_expression: () => La$4,
	__ts_expression: () => Da$2,
	__vue_event_binding: () => ka$3,
	__vue_expression: () => La$4,
	__vue_ts_event_binding: () => va$3,
	__vue_ts_expression: () => Da$2,
	babel: () => ka$3,
	"babel-flow": () => Pi$4,
	"babel-ts": () => va$3
});
var Fe$3 = ls$2(Tt$6(), 1);
function ve$5(a$13) {
	return (t$13, e$4, s$8) => {
		let i$18 = !!(s$8 != null && s$8.backwards);
		if (e$4 === !1) return !1;
		let { length: r$12 } = t$13, n$8 = e$4;
		for (; n$8 >= 0 && n$8 < r$12;) {
			let o$9 = t$13.charAt(n$8);
			if (a$13 instanceof RegExp) {
				if (!a$13.test(o$9)) return n$8;
			} else if (!a$13.includes(o$9)) return n$8;
			i$18 ? n$8-- : n$8++;
		}
		return n$8 === -1 || n$8 === r$12 ? n$8 : !1;
	};
}
ve$5(/\s/u);
var Us$5 = ve$5(" 	");
ve$5(",; 	");
var js$3 = ve$5(/[^\n\r]/u);
function zr$4(a$13, t$13) {
	if (t$13 === !1) return !1;
	if (a$13.charAt(t$13) === "/" && a$13.charAt(t$13 + 1) === "*") {
		for (let e$4 = t$13 + 2; e$4 < a$13.length; ++e$4) if (a$13.charAt(e$4) === "*" && a$13.charAt(e$4 + 1) === "/") return e$4 + 2;
	}
	return t$13;
}
var $s$1 = zr$4;
function Hr$5(a$13, t$13, e$4) {
	let s$8 = !!(e$4 != null && e$4.backwards);
	if (t$13 === !1) return !1;
	let i$18 = a$13.charAt(t$13);
	if (s$8) {
		if (a$13.charAt(t$13 - 1) === "\r" && i$18 === `
`) return t$13 - 2;
		if (i$18 === `
` || i$18 === "\r" || i$18 === "\u2028" || i$18 === "\u2029") return t$13 - 1;
	} else {
		if (i$18 === "\r" && a$13.charAt(t$13 + 1) === `
`) return t$13 + 2;
		if (i$18 === `
` || i$18 === "\r" || i$18 === "\u2028" || i$18 === "\u2029") return t$13 + 1;
	}
	return t$13;
}
var Vs$3 = Hr$5;
function Kr$5(a$13, t$13) {
	return t$13 === !1 ? !1 : a$13.charAt(t$13) === "/" && a$13.charAt(t$13 + 1) === "/" ? js$3(a$13, t$13) : t$13;
}
var qs$2 = Kr$5;
function Wr$5(a$13, t$13) {
	let e$4 = null, s$8 = t$13;
	for (; s$8 !== e$4;) e$4 = s$8, s$8 = Us$5(a$13, s$8), s$8 = $s$1(a$13, s$8), s$8 = qs$2(a$13, s$8), s$8 = Vs$3(a$13, s$8);
	return s$8;
}
var zs$3 = Wr$5;
function Jr$5(a$13) {
	let t$13 = [];
	for (let e$4 of a$13) try {
		return e$4();
	} catch (s$8) {
		t$13.push(s$8);
	}
	throw Object.assign(/* @__PURE__ */ new Error("All combinations failed"), { errors: t$13 });
}
var Hs$3 = Jr$5;
function Xr$7(a$13) {
	if (!a$13.startsWith("#!")) return "";
	let t$13 = a$13.indexOf(`
`);
	return t$13 === -1 ? a$13 : a$13.slice(0, t$13);
}
var Le$5 = Xr$7;
var Gr$5 = (a$13, t$13, e$4) => {
	if (!(a$13 && t$13 == null)) {
		if (t$13.findLast) return t$13.findLast(e$4);
		for (let s$8 = t$13.length - 1; s$8 >= 0; s$8--) {
			let i$18 = t$13[s$8];
			if (e$4(i$18, s$8, t$13)) return i$18;
		}
	}
}, Ks$4 = Gr$5;
var Yr$5 = (a$13, t$13, e$4) => {
	if (!(a$13 && t$13 == null)) return Array.isArray(t$13) || typeof t$13 == "string" ? t$13[e$4 < 0 ? t$13.length + e$4 : e$4] : t$13.at(e$4);
}, Ws$3 = Yr$5;
var Qr$7 = new Proxy(() => {}, { get: () => Qr$7 });
function v$4(a$13) {
	var s$8, i$18, r$12;
	let t$13 = ((s$8 = a$13.range) == null ? void 0 : s$8[0]) ?? a$13.start, e$4 = (r$12 = ((i$18 = a$13.declaration) == null ? void 0 : i$18.decorators) ?? a$13.decorators) == null ? void 0 : r$12[0];
	return e$4 ? Math.min(v$4(e$4), t$13) : t$13;
}
function k$4(a$13) {
	var e$4;
	return ((e$4 = a$13.range) == null ? void 0 : e$4[1]) ?? a$13.end;
}
function Zr$5(a$13) {
	let t$13 = new Set(a$13);
	return (e$4) => t$13.has(e$4 == null ? void 0 : e$4.type);
}
var ae$5 = Zr$5;
function ea$3(a$13, t$13, e$4) {
	let s$8 = a$13.originalText.slice(t$13, e$4);
	for (let i$18 of a$13[Symbol.for("comments")]) {
		let r$12 = v$4(i$18);
		if (r$12 > e$4) break;
		let n$8 = k$4(i$18);
		if (n$8 < t$13) continue;
		let o$9 = n$8 - r$12;
		s$8 = s$8.slice(0, r$12 - t$13) + " ".repeat(o$9) + s$8.slice(n$8 - t$13);
	}
	return s$8;
}
var Js$2 = ea$3;
var ta$3 = ae$5([
	"Block",
	"CommentBlock",
	"MultiLine"
]), G$5 = ta$3;
var sa$3 = ae$5([
	"Line",
	"CommentLine",
	"SingleLine",
	"HashbangComment",
	"HTMLOpen",
	"HTMLClose",
	"Hashbang",
	"InterpreterDirective"
]), bt$6 = sa$3;
var At$7 = /* @__PURE__ */ new WeakMap();
function ia$3(a$13) {
	return At$7.has(a$13) || At$7.set(a$13, G$5(a$13) && a$13.value[0] === "*" && /@(?:type|satisfies)\b/u.test(a$13.value)), At$7.get(a$13);
}
var Xs$4 = ia$3;
function ra$3(a$13) {
	if (!G$5(a$13)) return !1;
	let t$13 = `*${a$13.value}*`.split(`
`);
	return t$13.length > 1 && t$13.every((e$4) => e$4.trimStart()[0] === "*");
}
var St$4 = /* @__PURE__ */ new WeakMap();
function aa$4(a$13) {
	return St$4.has(a$13) || St$4.set(a$13, ra$3(a$13)), St$4.get(a$13);
}
var Et$4 = aa$4;
function na$4(a$13) {
	if (a$13.length < 2) return;
	let t$13;
	for (let e$4 = a$13.length - 1; e$4 >= 0; e$4--) {
		let s$8 = a$13[e$4];
		if (t$13 && k$4(s$8) === v$4(t$13) && Et$4(s$8) && Et$4(t$13) && (a$13.splice(e$4 + 1, 1), s$8.value += "*//*" + t$13.value, s$8.range = [v$4(s$8), k$4(t$13)]), !bt$6(s$8) && !G$5(s$8)) throw new TypeError(`Unknown comment type: "${s$8.type}".`);
		t$13 = s$8;
	}
}
var Gs$3 = na$4;
var ge$5 = null;
function Te$6(a$13) {
	if (ge$5 !== null && typeof ge$5.property) {
		let t$13 = ge$5;
		return ge$5 = Te$6.prototype = null, t$13;
	}
	return ge$5 = Te$6.prototype = a$13 ?? Object.create(null), new Te$6();
}
var oa$3 = 10;
for (let a$13 = 0; a$13 <= oa$3; a$13++) Te$6();
function Ct$6(a$13) {
	return Te$6(a$13);
}
function la$3(a$13, t$13 = "type") {
	Ct$6(a$13);
	function e$4(s$8) {
		let i$18 = s$8[t$13], r$12 = a$13[i$18];
		if (!Array.isArray(r$12)) throw Object.assign(/* @__PURE__ */ new Error(`Missing visitor keys for '${i$18}'.`), { node: s$8 });
		return r$12;
	}
	return e$4;
}
var ha$4 = la$3({
	ArrayExpression: ["elements"],
	AssignmentExpression: ["left", "right"],
	BinaryExpression: ["left", "right"],
	InterpreterDirective: [],
	Directive: ["value"],
	DirectiveLiteral: [],
	BlockStatement: ["directives", "body"],
	BreakStatement: ["label"],
	CallExpression: [
		"callee",
		"typeParameters",
		"typeArguments",
		"arguments"
	],
	CatchClause: ["param", "body"],
	ConditionalExpression: [
		"test",
		"consequent",
		"alternate"
	],
	ContinueStatement: ["label"],
	DebuggerStatement: [],
	DoWhileStatement: ["body", "test"],
	EmptyStatement: [],
	ExpressionStatement: ["expression"],
	File: ["program"],
	ForInStatement: [
		"left",
		"right",
		"body"
	],
	ForStatement: [
		"init",
		"test",
		"update",
		"body"
	],
	FunctionDeclaration: [
		"id",
		"typeParameters",
		"params",
		"predicate",
		"returnType",
		"body"
	],
	FunctionExpression: [
		"id",
		"typeParameters",
		"params",
		"returnType",
		"body"
	],
	Identifier: ["typeAnnotation", "decorators"],
	IfStatement: [
		"test",
		"consequent",
		"alternate"
	],
	LabeledStatement: ["label", "body"],
	StringLiteral: [],
	NumericLiteral: [],
	NullLiteral: [],
	BooleanLiteral: [],
	RegExpLiteral: [],
	LogicalExpression: ["left", "right"],
	MemberExpression: ["object", "property"],
	NewExpression: [
		"callee",
		"typeParameters",
		"typeArguments",
		"arguments"
	],
	Program: ["directives", "body"],
	ObjectExpression: ["properties"],
	ObjectMethod: [
		"decorators",
		"key",
		"typeParameters",
		"params",
		"returnType",
		"body"
	],
	ObjectProperty: [
		"decorators",
		"key",
		"value"
	],
	RestElement: [
		"argument",
		"typeAnnotation",
		"decorators"
	],
	ReturnStatement: ["argument"],
	SequenceExpression: ["expressions"],
	ParenthesizedExpression: ["expression"],
	SwitchCase: ["test", "consequent"],
	SwitchStatement: ["discriminant", "cases"],
	ThisExpression: [],
	ThrowStatement: ["argument"],
	TryStatement: [
		"block",
		"handler",
		"finalizer"
	],
	UnaryExpression: ["argument"],
	UpdateExpression: ["argument"],
	VariableDeclaration: ["declarations"],
	VariableDeclarator: ["id", "init"],
	WhileStatement: ["test", "body"],
	WithStatement: ["object", "body"],
	AssignmentPattern: [
		"left",
		"right",
		"decorators",
		"typeAnnotation"
	],
	ArrayPattern: [
		"elements",
		"typeAnnotation",
		"decorators"
	],
	ArrowFunctionExpression: [
		"typeParameters",
		"params",
		"predicate",
		"returnType",
		"body"
	],
	ClassBody: ["body"],
	ClassExpression: [
		"decorators",
		"id",
		"typeParameters",
		"superClass",
		"superTypeParameters",
		"mixins",
		"implements",
		"body",
		"superTypeArguments"
	],
	ClassDeclaration: [
		"decorators",
		"id",
		"typeParameters",
		"superClass",
		"superTypeParameters",
		"mixins",
		"implements",
		"body",
		"superTypeArguments"
	],
	ExportAllDeclaration: [
		"source",
		"attributes",
		"exported"
	],
	ExportDefaultDeclaration: ["declaration"],
	ExportNamedDeclaration: [
		"declaration",
		"specifiers",
		"source",
		"attributes"
	],
	ExportSpecifier: ["local", "exported"],
	ForOfStatement: [
		"left",
		"right",
		"body"
	],
	ImportDeclaration: [
		"specifiers",
		"source",
		"attributes"
	],
	ImportDefaultSpecifier: ["local"],
	ImportNamespaceSpecifier: ["local"],
	ImportSpecifier: ["imported", "local"],
	ImportExpression: ["source", "options"],
	MetaProperty: ["meta", "property"],
	ClassMethod: [
		"decorators",
		"key",
		"typeParameters",
		"params",
		"returnType",
		"body"
	],
	ObjectPattern: [
		"decorators",
		"properties",
		"typeAnnotation"
	],
	SpreadElement: ["argument"],
	Super: [],
	TaggedTemplateExpression: [
		"tag",
		"typeParameters",
		"quasi",
		"typeArguments"
	],
	TemplateElement: [],
	TemplateLiteral: ["quasis", "expressions"],
	YieldExpression: ["argument"],
	AwaitExpression: ["argument"],
	BigIntLiteral: [],
	ExportNamespaceSpecifier: ["exported"],
	OptionalMemberExpression: ["object", "property"],
	OptionalCallExpression: [
		"callee",
		"typeParameters",
		"typeArguments",
		"arguments"
	],
	ClassProperty: [
		"decorators",
		"variance",
		"key",
		"typeAnnotation",
		"value"
	],
	ClassAccessorProperty: [
		"decorators",
		"key",
		"typeAnnotation",
		"value"
	],
	ClassPrivateProperty: [
		"decorators",
		"variance",
		"key",
		"typeAnnotation",
		"value"
	],
	ClassPrivateMethod: [
		"decorators",
		"key",
		"typeParameters",
		"params",
		"returnType",
		"body"
	],
	PrivateName: ["id"],
	StaticBlock: ["body"],
	ImportAttribute: ["key", "value"],
	AnyTypeAnnotation: [],
	ArrayTypeAnnotation: ["elementType"],
	BooleanTypeAnnotation: [],
	BooleanLiteralTypeAnnotation: [],
	NullLiteralTypeAnnotation: [],
	ClassImplements: ["id", "typeParameters"],
	DeclareClass: [
		"id",
		"typeParameters",
		"extends",
		"mixins",
		"implements",
		"body"
	],
	DeclareFunction: ["id", "predicate"],
	DeclareInterface: [
		"id",
		"typeParameters",
		"extends",
		"body"
	],
	DeclareModule: ["id", "body"],
	DeclareModuleExports: ["typeAnnotation"],
	DeclareTypeAlias: [
		"id",
		"typeParameters",
		"right"
	],
	DeclareOpaqueType: [
		"id",
		"typeParameters",
		"supertype"
	],
	DeclareVariable: ["id"],
	DeclareExportDeclaration: [
		"declaration",
		"specifiers",
		"source",
		"attributes"
	],
	DeclareExportAllDeclaration: ["source", "attributes"],
	DeclaredPredicate: ["value"],
	ExistsTypeAnnotation: [],
	FunctionTypeAnnotation: [
		"typeParameters",
		"this",
		"params",
		"rest",
		"returnType"
	],
	FunctionTypeParam: ["name", "typeAnnotation"],
	GenericTypeAnnotation: ["id", "typeParameters"],
	InferredPredicate: [],
	InterfaceExtends: ["id", "typeParameters"],
	InterfaceDeclaration: [
		"id",
		"typeParameters",
		"extends",
		"body"
	],
	InterfaceTypeAnnotation: ["extends", "body"],
	IntersectionTypeAnnotation: ["types"],
	MixedTypeAnnotation: [],
	EmptyTypeAnnotation: [],
	NullableTypeAnnotation: ["typeAnnotation"],
	NumberLiteralTypeAnnotation: [],
	NumberTypeAnnotation: [],
	ObjectTypeAnnotation: [
		"properties",
		"indexers",
		"callProperties",
		"internalSlots"
	],
	ObjectTypeInternalSlot: ["id", "value"],
	ObjectTypeCallProperty: ["value"],
	ObjectTypeIndexer: [
		"variance",
		"id",
		"key",
		"value"
	],
	ObjectTypeProperty: [
		"key",
		"value",
		"variance"
	],
	ObjectTypeSpreadProperty: ["argument"],
	OpaqueType: [
		"id",
		"typeParameters",
		"supertype",
		"impltype"
	],
	QualifiedTypeIdentifier: ["qualification", "id"],
	StringLiteralTypeAnnotation: [],
	StringTypeAnnotation: [],
	SymbolTypeAnnotation: [],
	ThisTypeAnnotation: [],
	TupleTypeAnnotation: ["types", "elementTypes"],
	TypeofTypeAnnotation: ["argument", "typeArguments"],
	TypeAlias: [
		"id",
		"typeParameters",
		"right"
	],
	TypeAnnotation: ["typeAnnotation"],
	TypeCastExpression: ["expression", "typeAnnotation"],
	TypeParameter: [
		"bound",
		"default",
		"variance"
	],
	TypeParameterDeclaration: ["params"],
	TypeParameterInstantiation: ["params"],
	UnionTypeAnnotation: ["types"],
	Variance: [],
	VoidTypeAnnotation: [],
	EnumDeclaration: ["id", "body"],
	EnumBooleanBody: ["members"],
	EnumNumberBody: ["members"],
	EnumStringBody: ["members"],
	EnumSymbolBody: ["members"],
	EnumBooleanMember: ["id", "init"],
	EnumNumberMember: ["id", "init"],
	EnumStringMember: ["id", "init"],
	EnumDefaultedMember: ["id"],
	IndexedAccessType: ["objectType", "indexType"],
	OptionalIndexedAccessType: ["objectType", "indexType"],
	JSXAttribute: ["name", "value"],
	JSXClosingElement: ["name"],
	JSXElement: [
		"openingElement",
		"children",
		"closingElement"
	],
	JSXEmptyExpression: [],
	JSXExpressionContainer: ["expression"],
	JSXSpreadChild: ["expression"],
	JSXIdentifier: [],
	JSXMemberExpression: ["object", "property"],
	JSXNamespacedName: ["namespace", "name"],
	JSXOpeningElement: [
		"name",
		"typeParameters",
		"typeArguments",
		"attributes"
	],
	JSXSpreadAttribute: ["argument"],
	JSXText: [],
	JSXFragment: [
		"openingFragment",
		"children",
		"closingFragment"
	],
	JSXOpeningFragment: [],
	JSXClosingFragment: [],
	Noop: [],
	Placeholder: [],
	V8IntrinsicIdentifier: [],
	ArgumentPlaceholder: [],
	BindExpression: ["object", "callee"],
	Decorator: ["expression"],
	DoExpression: ["body"],
	ExportDefaultSpecifier: ["exported"],
	ModuleExpression: ["body"],
	TopicReference: [],
	PipelineTopicExpression: ["expression"],
	PipelineBareFunction: ["callee"],
	PipelinePrimaryTopicReference: [],
	TSParameterProperty: ["parameter", "decorators"],
	TSDeclareFunction: [
		"id",
		"typeParameters",
		"params",
		"returnType",
		"body"
	],
	TSDeclareMethod: [
		"decorators",
		"key",
		"typeParameters",
		"params",
		"returnType"
	],
	TSQualifiedName: ["left", "right"],
	TSCallSignatureDeclaration: [
		"typeParameters",
		"parameters",
		"typeAnnotation",
		"params",
		"returnType"
	],
	TSConstructSignatureDeclaration: [
		"typeParameters",
		"parameters",
		"typeAnnotation",
		"params",
		"returnType"
	],
	TSPropertySignature: ["key", "typeAnnotation"],
	TSMethodSignature: [
		"key",
		"typeParameters",
		"parameters",
		"typeAnnotation",
		"params",
		"returnType"
	],
	TSIndexSignature: ["parameters", "typeAnnotation"],
	TSAnyKeyword: [],
	TSBooleanKeyword: [],
	TSBigIntKeyword: [],
	TSIntrinsicKeyword: [],
	TSNeverKeyword: [],
	TSNullKeyword: [],
	TSNumberKeyword: [],
	TSObjectKeyword: [],
	TSStringKeyword: [],
	TSSymbolKeyword: [],
	TSUndefinedKeyword: [],
	TSUnknownKeyword: [],
	TSVoidKeyword: [],
	TSThisType: [],
	TSFunctionType: [
		"typeParameters",
		"parameters",
		"typeAnnotation",
		"params",
		"returnType"
	],
	TSConstructorType: [
		"typeParameters",
		"parameters",
		"typeAnnotation",
		"params",
		"returnType"
	],
	TSTypeReference: [
		"typeName",
		"typeParameters",
		"typeArguments"
	],
	TSTypePredicate: ["parameterName", "typeAnnotation"],
	TSTypeQuery: [
		"exprName",
		"typeParameters",
		"typeArguments"
	],
	TSTypeLiteral: ["members"],
	TSArrayType: ["elementType"],
	TSTupleType: ["elementTypes"],
	TSOptionalType: ["typeAnnotation"],
	TSRestType: ["typeAnnotation"],
	TSNamedTupleMember: ["label", "elementType"],
	TSUnionType: ["types"],
	TSIntersectionType: ["types"],
	TSConditionalType: [
		"checkType",
		"extendsType",
		"trueType",
		"falseType"
	],
	TSInferType: ["typeParameter"],
	TSParenthesizedType: ["typeAnnotation"],
	TSTypeOperator: ["typeAnnotation"],
	TSIndexedAccessType: ["objectType", "indexType"],
	TSMappedType: [
		"nameType",
		"typeAnnotation",
		"key",
		"constraint"
	],
	TSTemplateLiteralType: ["quasis", "types"],
	TSLiteralType: ["literal"],
	TSExpressionWithTypeArguments: ["expression", "typeParameters"],
	TSInterfaceDeclaration: [
		"id",
		"typeParameters",
		"extends",
		"body"
	],
	TSInterfaceBody: ["body"],
	TSTypeAliasDeclaration: [
		"id",
		"typeParameters",
		"typeAnnotation"
	],
	TSInstantiationExpression: [
		"expression",
		"typeParameters",
		"typeArguments"
	],
	TSAsExpression: ["expression", "typeAnnotation"],
	TSSatisfiesExpression: ["expression", "typeAnnotation"],
	TSTypeAssertion: ["typeAnnotation", "expression"],
	TSEnumBody: ["members"],
	TSEnumDeclaration: ["id", "body"],
	TSEnumMember: ["id", "initializer"],
	TSModuleDeclaration: ["id", "body"],
	TSModuleBlock: ["body"],
	TSImportType: [
		"argument",
		"options",
		"qualifier",
		"typeParameters",
		"typeArguments"
	],
	TSImportEqualsDeclaration: ["id", "moduleReference"],
	TSExternalModuleReference: ["expression"],
	TSNonNullExpression: ["expression"],
	TSExportAssignment: ["expression"],
	TSNamespaceExportDeclaration: ["id"],
	TSTypeAnnotation: ["typeAnnotation"],
	TSTypeParameterInstantiation: ["params"],
	TSTypeParameterDeclaration: ["params"],
	TSTypeParameter: [
		"constraint",
		"default",
		"name"
	],
	ChainExpression: ["expression"],
	ExperimentalRestProperty: ["argument"],
	ExperimentalSpreadProperty: ["argument"],
	Literal: [],
	MethodDefinition: [
		"decorators",
		"key",
		"value"
	],
	PrivateIdentifier: [],
	Property: ["key", "value"],
	PropertyDefinition: [
		"decorators",
		"key",
		"typeAnnotation",
		"value",
		"variance"
	],
	AccessorProperty: [
		"decorators",
		"key",
		"typeAnnotation",
		"value"
	],
	TSAbstractAccessorProperty: [
		"decorators",
		"key",
		"typeAnnotation"
	],
	TSAbstractKeyword: [],
	TSAbstractMethodDefinition: ["key", "value"],
	TSAbstractPropertyDefinition: [
		"decorators",
		"key",
		"typeAnnotation"
	],
	TSAsyncKeyword: [],
	TSClassImplements: [
		"expression",
		"typeArguments",
		"typeParameters"
	],
	TSDeclareKeyword: [],
	TSEmptyBodyFunctionExpression: [
		"id",
		"typeParameters",
		"params",
		"returnType"
	],
	TSExportKeyword: [],
	TSInterfaceHeritage: [
		"expression",
		"typeArguments",
		"typeParameters"
	],
	TSPrivateKeyword: [],
	TSProtectedKeyword: [],
	TSPublicKeyword: [],
	TSReadonlyKeyword: [],
	TSStaticKeyword: [],
	AsConstExpression: ["expression"],
	AsExpression: ["expression", "typeAnnotation"],
	BigIntLiteralTypeAnnotation: [],
	BigIntTypeAnnotation: [],
	ComponentDeclaration: [
		"id",
		"params",
		"body",
		"typeParameters",
		"rendersType"
	],
	ComponentParameter: ["name", "local"],
	ComponentTypeAnnotation: [
		"params",
		"rest",
		"typeParameters",
		"rendersType"
	],
	ComponentTypeParameter: ["name", "typeAnnotation"],
	ConditionalTypeAnnotation: [
		"checkType",
		"extendsType",
		"trueType",
		"falseType"
	],
	DeclareComponent: [
		"id",
		"params",
		"rest",
		"typeParameters",
		"rendersType"
	],
	DeclareEnum: ["id", "body"],
	DeclareHook: ["id"],
	DeclareNamespace: ["id", "body"],
	EnumBigIntBody: ["members"],
	EnumBigIntMember: ["id", "init"],
	HookDeclaration: [
		"id",
		"params",
		"body",
		"typeParameters",
		"returnType"
	],
	HookTypeAnnotation: [
		"params",
		"returnType",
		"rest",
		"typeParameters"
	],
	InferTypeAnnotation: ["typeParameter"],
	KeyofTypeAnnotation: ["argument"],
	ObjectTypeMappedTypeProperty: [
		"keyTparam",
		"propType",
		"sourceType",
		"variance"
	],
	QualifiedTypeofIdentifier: ["qualification", "id"],
	TupleTypeLabeledElement: [
		"label",
		"elementType",
		"variance"
	],
	TupleTypeSpreadElement: ["label", "typeAnnotation"],
	TypeOperator: ["typeAnnotation"],
	TypePredicate: [
		"parameterName",
		"typeAnnotation",
		"asserts"
	],
	NGChainedExpression: ["expressions"],
	NGEmptyExpression: [],
	NGPipeExpression: [
		"left",
		"right",
		"arguments"
	],
	NGMicrosyntax: ["body"],
	NGMicrosyntaxAs: ["key", "alias"],
	NGMicrosyntaxExpression: ["expression", "alias"],
	NGMicrosyntaxKey: [],
	NGMicrosyntaxKeyedExpression: ["key", "expression"],
	NGMicrosyntaxLet: ["key", "value"],
	NGRoot: ["node"],
	JsExpressionRoot: ["node"],
	JsonRoot: ["node"],
	TSJSDocAllType: [],
	TSJSDocUnknownType: [],
	TSJSDocNullableType: ["typeAnnotation"],
	TSJSDocNonNullableType: ["typeAnnotation"],
	NeverTypeAnnotation: [],
	SatisfiesExpression: ["expression", "typeAnnotation"],
	UndefinedTypeAnnotation: [],
	UnknownTypeAnnotation: []
}), Zs$4 = ha$4;
function wt$6(a$13, t$13) {
	if (!(a$13 !== null && typeof a$13 == "object")) return a$13;
	if (Array.isArray(a$13)) {
		for (let s$8 = 0; s$8 < a$13.length; s$8++) a$13[s$8] = wt$6(a$13[s$8], t$13);
		return a$13;
	}
	let e$4 = Zs$4(a$13);
	for (let s$8 = 0; s$8 < e$4.length; s$8++) a$13[e$4[s$8]] = wt$6(a$13[e$4[s$8]], t$13);
	return t$13(a$13) || a$13;
}
var ei$6 = wt$6;
ae$5([
	"RegExpLiteral",
	"BigIntLiteral",
	"NumericLiteral",
	"StringLiteral",
	"DirectiveLiteral",
	"Literal",
	"JSXText",
	"TemplateElement",
	"StringLiteralTypeAnnotation",
	"NumberLiteralTypeAnnotation",
	"BigIntLiteralTypeAnnotation"
]);
function ca$3(a$13, t$13) {
	let { parser: e$4, text: s$8 } = t$13, { comments: i$18 } = a$13, r$12 = e$4 === "oxc" && t$13.oxcAstType === "ts";
	Gs$3(i$18);
	let n$8;
	a$13 = ei$6(a$13, (l$10) => {
		switch (l$10.type) {
			case "ParenthesizedExpression": {
				let { expression: h$3 } = l$10, c$3 = v$4(l$10);
				if (h$3.type === "TypeCastExpression") return h$3.range = [c$3, k$4(l$10)], h$3;
				let u$14 = !1;
				if (!r$12) {
					if (!n$8) {
						n$8 = [];
						for (let d$14 of i$18) Xs$4(d$14) && n$8.push(k$4(d$14));
					}
					let f$3 = Ks$4(!1, n$8, (d$14) => d$14 <= c$3);
					u$14 = f$3 && s$8.slice(f$3, c$3).trim().length === 0;
				}
				if (!u$14) return h$3.extra = {
					...h$3.extra,
					parenthesized: !0
				}, h$3;
				break;
			}
			case "LogicalExpression":
				if (si$5(l$10)) return It$6(l$10);
				break;
			case "TemplateLiteral":
				if (l$10.expressions.length !== l$10.quasis.length - 1) throw new Error("Malformed template literal.");
				break;
			case "TemplateElement":
				if (e$4 === "flow" || e$4 === "hermes" || e$4 === "espree" || e$4 === "typescript" || r$12) {
					let h$3 = v$4(l$10) + 1, c$3 = k$4(l$10) - (l$10.tail ? 1 : 2);
					l$10.range = [h$3, c$3];
				}
				break;
			case "VariableDeclaration": {
				let h$3 = Ws$3(!1, l$10.declarations, -1);
				h$3 != null && h$3.init && s$8[k$4(h$3)] !== ";" && (l$10.range = [v$4(l$10), k$4(h$3)]);
				break;
			}
			case "TSParenthesizedType": return l$10.typeAnnotation;
			case "TSTypeParameter":
				ti$6(l$10);
				break;
			case "TopicReference":
				a$13.extra = {
					...a$13.extra,
					__isUsingHackPipeline: !0
				};
				break;
			case "TSUnionType":
			case "TSIntersectionType":
				if (l$10.types.length === 1) return l$10.types[0];
				break;
			case "TSMappedType":
				if (!l$10.constraint && !l$10.key) {
					let { name: h$3, constraint: c$3 } = ti$6(l$10.typeParameter);
					l$10.constraint = c$3, l$10.key = h$3, delete l$10.typeParameter;
				}
				break;
			case "TSEnumDeclaration":
				if (!l$10.body) {
					let h$3 = k$4(l$10.id), { members: c$3 } = l$10, u$14 = Js$2({
						originalText: s$8,
						[Symbol.for("comments")]: i$18
					}, h$3, c$3[0] ? v$4(c$3[0]) : k$4(l$10)), f$3 = h$3 + u$14.indexOf("{");
					l$10.body = {
						type: "TSEnumBody",
						members: c$3,
						range: [f$3, k$4(l$10)]
					}, delete l$10.members;
				}
				break;
			case "ImportExpression":
				e$4 === "hermes" && l$10.attributes && !l$10.options && (l$10.options = l$10.attributes);
				break;
		}
	});
	let o$9 = a$13.type === "File" ? a$13.program : a$13;
	return o$9.interpreter && (i$18.unshift(o$9.interpreter), delete o$9.interpreter), r$12 && a$13.hashbang && (i$18.unshift(a$13.hashbang), delete a$13.hashbang), a$13.type === "Program" && (a$13.range = [0, s$8.length]), a$13;
}
function ti$6(a$13) {
	if (a$13.type === "TSTypeParameter" && typeof a$13.name == "string") {
		let t$13 = v$4(a$13);
		a$13.name = {
			type: "Identifier",
			name: a$13.name,
			range: [t$13, t$13 + a$13.name.length]
		};
	}
	return a$13;
}
function si$5(a$13) {
	return a$13.type === "LogicalExpression" && a$13.right.type === "LogicalExpression" && a$13.operator === a$13.right.operator;
}
function It$6(a$13) {
	return si$5(a$13) ? It$6({
		type: "LogicalExpression",
		operator: a$13.operator,
		left: It$6({
			type: "LogicalExpression",
			operator: a$13.operator,
			left: a$13.left,
			right: a$13.right.left,
			range: [v$4(a$13.left), k$4(a$13.right.left)]
		}),
		right: a$13.right.right,
		range: [v$4(a$13), k$4(a$13)]
	}) : a$13;
}
var ii$5 = ca$3;
function pa$2(a$13, t$13) {
	let e$4 = /* @__PURE__ */ new SyntaxError(a$13 + " (" + t$13.loc.start.line + ":" + t$13.loc.start.column + ")");
	return Object.assign(e$4, t$13);
}
var De$6 = pa$2;
var ri$6 = "Unexpected parseExpression() input: ";
function ua$2(a$13) {
	let { message: t$13, loc: e$4, reasonCode: s$8 } = a$13;
	if (!e$4) return a$13;
	let { line: i$18, column: r$12 } = e$4, n$8 = a$13;
	(s$8 === "MissingPlugin" || s$8 === "MissingOneOfPlugins") && (t$13 = "Unexpected token.", n$8 = void 0);
	let o$9 = ` (${i$18}:${r$12})`;
	return t$13.endsWith(o$9) && (t$13 = t$13.slice(0, -o$9.length)), t$13.startsWith(ri$6) && (t$13 = t$13.slice(ri$6.length)), De$6(t$13, {
		loc: { start: {
			line: i$18,
			column: r$12 + 1
		} },
		cause: n$8
	});
}
var Me$5 = ua$2;
var fa$4 = (a$13, t$13, e$4, s$8) => {
	if (!(a$13 && t$13 == null)) return t$13.replaceAll ? t$13.replaceAll(e$4, s$8) : e$4.global ? t$13.replace(e$4, s$8) : t$13.split(e$4).join(s$8);
}, ne$5 = fa$4;
var da$3 = /\*\/$/, ma$2 = /^\/\*\*?/, ya$2 = /^\s*(\/\*\*?(.|\r?\n)*?\*\/)/, xa$4 = /(^|\s+)\/\/([^\n\r]*)/g, ai$4 = /^(\r?\n)+/, Pa$2 = /(?:^|\r?\n) *(@[^\n\r]*?) *\r?\n *(?![^\n\r@]*\/\/[^]*)([^\s@][^\n\r@]+?) *\r?\n/g, ni$6 = /(?:^|\r?\n) *@(\S+) *([^\n\r]*)/g, ga$2 = /(\r?\n|^) *\* ?/g, Ta$2 = [];
function oi$4(a$13) {
	let t$13 = a$13.match(ya$2);
	return t$13 ? t$13[0].trimStart() : "";
}
function li$5(a$13) {
	let t$13 = `
`;
	a$13 = ne$5(!1, a$13.replace(ma$2, "").replace(da$3, ""), ga$2, "$1");
	let e$4 = "";
	for (; e$4 !== a$13;) e$4 = a$13, a$13 = ne$5(!1, a$13, Pa$2, `${t$13}$1 $2${t$13}`);
	a$13 = a$13.replace(ai$4, "").trimEnd();
	let s$8 = Object.create(null), i$18 = ne$5(!1, a$13, ni$6, "").replace(ai$4, "").trimEnd(), r$12;
	for (; r$12 = ni$6.exec(a$13);) {
		let n$8 = ne$5(!1, r$12[2], xa$4, "");
		if (typeof s$8[r$12[1]] == "string" || Array.isArray(s$8[r$12[1]])) {
			let o$9 = s$8[r$12[1]];
			s$8[r$12[1]] = [
				...Ta$2,
				...Array.isArray(o$9) ? o$9 : [o$9],
				n$8
			];
		} else s$8[r$12[1]] = n$8;
	}
	return {
		comments: i$18,
		pragmas: s$8
	};
}
var hi$6 = ["noformat", "noprettier"], ci$5 = ["format", "prettier"];
function pi$5(a$13) {
	let t$13 = Le$5(a$13);
	t$13 && (a$13 = a$13.slice(t$13.length + 1));
	let e$4 = oi$4(a$13), { pragmas: s$8, comments: i$18 } = li$5(e$4);
	return {
		shebang: t$13,
		text: a$13,
		pragmas: s$8,
		comments: i$18
	};
}
function ui$5(a$13) {
	let { pragmas: t$13 } = pi$5(a$13);
	return ci$5.some((e$4) => Object.prototype.hasOwnProperty.call(t$13, e$4));
}
function fi$6(a$13) {
	let { pragmas: t$13 } = pi$5(a$13);
	return hi$6.some((e$4) => Object.prototype.hasOwnProperty.call(t$13, e$4));
}
function ba$3(a$13) {
	return a$13 = typeof a$13 == "function" ? { parse: a$13 } : a$13, {
		astFormat: "estree",
		hasPragma: ui$5,
		hasIgnorePragma: fi$6,
		locStart: v$4,
		locEnd: k$4,
		...a$13
	};
}
var Y$5 = ba$3;
var Nt$5 = "module", kt$5 = "script";
function di$6(a$13) {
	if (typeof a$13 == "string") {
		if (a$13 = a$13.toLowerCase(), /\.(?:mjs|mts)$/iu.test(a$13)) return Nt$5;
		if (/\.(?:cjs|cts)$/iu.test(a$13)) return kt$5;
	}
}
function Aa$3(a$13, t$13) {
	let { type: e$4 = "JsExpressionRoot", rootMarker: s$8, text: i$18 } = t$13, { tokens: r$12, comments: n$8 } = a$13;
	return delete a$13.tokens, delete a$13.comments, {
		tokens: r$12,
		comments: n$8,
		type: e$4,
		node: a$13,
		range: [0, i$18.length],
		rootMarker: s$8
	};
}
var Oe$5 = Aa$3;
var oe$5 = (a$13) => Y$5(Ia$2(a$13)), Sa$3 = {
	sourceType: Nt$5,
	allowImportExportEverywhere: !0,
	allowReturnOutsideFunction: !0,
	allowNewTargetOutsideFunction: !0,
	allowSuperOutsideMethod: !0,
	allowUndeclaredExports: !0,
	errorRecovery: !0,
	createParenthesizedExpressions: !0,
	createImportExpressions: !0,
	attachComment: !1,
	plugins: [
		"doExpressions",
		"exportDefaultFrom",
		"functionBind",
		"functionSent",
		"throwExpressions",
		"partialApplication",
		"decorators",
		"moduleBlocks",
		"asyncDoExpressions",
		"destructuringPrivate",
		"decoratorAutoAccessors",
		"explicitResourceManagement",
		"sourcePhaseImports",
		"deferredImportEvaluation",
		["optionalChainingAssign", { version: "2023-07" }]
	],
	tokens: !1,
	ranges: !1
}, mi$6 = "v8intrinsic", yi$6 = [["pipelineOperator", {
	proposal: "hack",
	topicToken: "%"
}], ["pipelineOperator", { proposal: "fsharp" }]], j$6 = (a$13, t$13 = Sa$3) => ({
	...t$13,
	plugins: [...t$13.plugins, ...a$13]
}), Ea$3 = /@(?:no)?flow\b/u;
function Ca$2(a$13, t$13) {
	if (t$13 != null && t$13.endsWith(".js.flow")) return !0;
	let e$4 = Le$5(a$13);
	e$4 && (a$13 = a$13.slice(e$4.length));
	let s$8 = zs$3(a$13, 0);
	return s$8 !== !1 && (a$13 = a$13.slice(0, s$8)), Ea$3.test(a$13);
}
function wa$2(a$13, t$13, e$4) {
	let s$8 = a$13(t$13, e$4), i$18 = s$8.errors.find((r$12) => !Na$3.has(r$12.reasonCode));
	if (i$18) throw i$18;
	return s$8;
}
function Ia$2({ isExpression: a$13 = !1, optionsCombinations: t$13 }) {
	return (e$4, s$8 = {}) => {
		let { filepath: i$18 } = s$8;
		if (typeof i$18 != "string" && (i$18 = void 0), (s$8.parser === "babel" || s$8.parser === "__babel_estree") && Ca$2(e$4, i$18)) return s$8.parser = "babel-flow", Pi$4.parse(e$4, s$8);
		let r$12 = t$13, n$8 = s$8.__babelSourceType ?? di$6(i$18);
		n$8 === kt$5 && (r$12 = r$12.map((c$3) => ({
			...c$3,
			sourceType: n$8
		})));
		let o$9 = /%[A-Z]/u.test(e$4);
		e$4.includes("|>") ? r$12 = (o$9 ? [...yi$6, mi$6] : yi$6).flatMap((u$14) => r$12.map((f$3) => j$6([u$14], f$3))) : o$9 && (r$12 = r$12.map((c$3) => j$6([mi$6], c$3)));
		let l$10 = a$13 ? Fe$3.parseExpression : Fe$3.parse, h$3;
		try {
			h$3 = Hs$3(r$12.map((c$3) => () => wa$2(l$10, e$4, c$3)));
		} catch ({ errors: [c$3] }) {
			throw Me$5(c$3);
		}
		return a$13 && (h$3 = Oe$5(h$3, {
			text: e$4,
			rootMarker: s$8.rootMarker
		})), ii$5(h$3, { text: e$4 });
	};
}
var Na$3 = new Set([
	"StrictNumericEscape",
	"StrictWith",
	"StrictOctalLiteral",
	"StrictDelete",
	"StrictEvalArguments",
	"StrictEvalArgumentsBinding",
	"StrictFunction",
	"ForInOfLoopInitializer",
	"EmptyTypeArguments",
	"EmptyTypeParameters",
	"ConstructorHasTypeParameters",
	"UnsupportedParameterPropertyKind",
	"DecoratorExportClass",
	"ParamDupe",
	"InvalidDecimal",
	"RestTrailingComma",
	"UnsupportedParameterDecorator",
	"UnterminatedJsxContent",
	"UnexpectedReservedWord",
	"ModuleAttributesWithDuplicateKeys",
	"InvalidEscapeSequenceTemplate",
	"NonAbstractClassHasAbstractMethod",
	"OptionalTypeBeforeRequired",
	"PatternIsOptional",
	"OptionalBindingPattern",
	"DeclareClassFieldHasInitializer",
	"TypeImportCannotSpecifyDefaultAndNamed",
	"ConstructorClassField",
	"VarRedeclaration",
	"InvalidPrivateFieldResolution",
	"DuplicateExport",
	"ImportAttributesUseAssert",
	"DeclarationMissingInitializer"
]), xi$6 = [j$6(["jsx"])], ka$3 = oe$5({ optionsCombinations: xi$6 }), va$3 = oe$5({ optionsCombinations: [j$6(["jsx", "typescript"]), j$6(["typescript"])] }), La$4 = oe$5({
	isExpression: !0,
	optionsCombinations: [j$6(["jsx"])]
}), Da$2 = oe$5({
	isExpression: !0,
	optionsCombinations: [j$6(["typescript"])]
}), Pi$4 = oe$5({ optionsCombinations: [j$6([
	"jsx",
	["flow", { all: !0 }],
	"flowComments"
])] }), Ma$4 = oe$5({ optionsCombinations: xi$6.map((a$13) => j$6(["estree"], a$13)) });
var Dt$5 = {};
Ue$4(Dt$5, {
	json: () => Ba$3,
	"json-stringify": () => Ua$6,
	json5: () => Ra$5,
	jsonc: () => _a$3
});
var Be$3 = ls$2(Tt$6(), 1);
function Oa$2(a$13) {
	return Array.isArray(a$13) && a$13.length > 0;
}
var Lt$5 = Oa$2;
var gi$5 = {
	tokens: !1,
	ranges: !1,
	attachComment: !1,
	createParenthesizedExpressions: !0
};
function Fa$5(a$13) {
	let t$13 = (0, Be$3.parse)(a$13, gi$5), { program: e$4 } = t$13;
	if (e$4.body.length === 0 && e$4.directives.length === 0 && !e$4.interpreter) return t$13;
}
function Re$6(a$13, t$13 = {}) {
	let { allowComments: e$4 = !0, allowEmpty: s$8 = !1 } = t$13, i$18;
	try {
		i$18 = (0, Be$3.parseExpression)(a$13, gi$5);
	} catch (r$12) {
		if (s$8 && r$12.code === "BABEL_PARSER_SYNTAX_ERROR" && r$12.reasonCode === "ParseExpressionEmptyInput") try {
			i$18 = Fa$5(a$13);
		} catch {}
		if (!i$18) throw Me$5(r$12);
	}
	if (!e$4 && Lt$5(i$18.comments)) throw K$5(i$18.comments[0], "Comment");
	return i$18 = Oe$5(i$18, {
		type: "JsonRoot",
		text: a$13
	}), i$18.node.type === "File" ? delete i$18.node : le$6(i$18.node), i$18;
}
function K$5(a$13, t$13) {
	let [e$4, s$8] = [a$13.loc.start, a$13.loc.end].map(({ line: i$18, column: r$12 }) => ({
		line: i$18,
		column: r$12 + 1
	}));
	return De$6(`${t$13} is not allowed in JSON.`, { loc: {
		start: e$4,
		end: s$8
	} });
}
function le$6(a$13) {
	switch (a$13.type) {
		case "ArrayExpression":
			for (let t$13 of a$13.elements) t$13 !== null && le$6(t$13);
			return;
		case "ObjectExpression":
			for (let t$13 of a$13.properties) le$6(t$13);
			return;
		case "ObjectProperty":
			if (a$13.computed) throw K$5(a$13.key, "Computed key");
			if (a$13.shorthand) throw K$5(a$13.key, "Shorthand property");
			a$13.key.type !== "Identifier" && le$6(a$13.key), le$6(a$13.value);
			return;
		case "UnaryExpression": {
			let { operator: t$13, argument: e$4 } = a$13;
			if (t$13 !== "+" && t$13 !== "-") throw K$5(a$13, `Operator '${a$13.operator}'`);
			if (e$4.type === "NumericLiteral" || e$4.type === "Identifier" && (e$4.name === "Infinity" || e$4.name === "NaN")) return;
			throw K$5(e$4, `Operator '${t$13}' before '${e$4.type}'`);
		}
		case "Identifier":
			if (a$13.name !== "Infinity" && a$13.name !== "NaN" && a$13.name !== "undefined") throw K$5(a$13, `Identifier '${a$13.name}'`);
			return;
		case "TemplateLiteral":
			if (Lt$5(a$13.expressions)) throw K$5(a$13.expressions[0], "'TemplateLiteral' with expression");
			for (let t$13 of a$13.quasis) le$6(t$13);
			return;
		case "NullLiteral":
		case "BooleanLiteral":
		case "NumericLiteral":
		case "StringLiteral":
		case "TemplateElement": return;
		default: throw K$5(a$13, `'${a$13.type}'`);
	}
}
var Ba$3 = Y$5({
	parse: (a$13) => Re$6(a$13),
	hasPragma: () => !0,
	hasIgnorePragma: () => !1
}), Ra$5 = Y$5((a$13) => Re$6(a$13)), _a$3 = Y$5((a$13) => Re$6(a$13, { allowEmpty: !0 })), Ua$6 = Y$5({
	parse: (a$13) => Re$6(a$13, { allowComments: !1 }),
	astFormat: "estree-json"
});
var ja$5 = {
	...vt$5,
	...Dt$5
};
var Vo = Mt$4;

//#endregion
//#region node_modules/.pnpm/prettier@3.6.2_patch_hash=2c5fac0fd268a2b2ab314d9e790cb805e3eb5e35106fc2644635eb6950a6ec1f/node_modules/prettier/plugins/estree.mjs
var za$3 = Object.defineProperty;
var Us$4 = (e$4) => {
	throw TypeError(e$4);
};
var xr$3 = (e$4, t$13) => {
	for (var r$12 in t$13) za$3(e$4, r$12, {
		get: t$13[r$12],
		enumerable: !0
	});
};
var Xs$3 = (e$4, t$13, r$12) => t$13.has(e$4) || Us$4("Cannot " + r$12);
var mt$4 = (e$4, t$13, r$12) => (Xs$3(e$4, t$13, "read from private field"), r$12 ? r$12.call(e$4) : t$13.get(e$4)), Ys$2 = (e$4, t$13, r$12) => t$13.has(e$4) ? Us$4("Cannot add the same private member more than once") : t$13 instanceof WeakSet ? t$13.add(e$4) : t$13.set(e$4, r$12), Hs$2 = (e$4, t$13, r$12, n$8) => (Xs$3(e$4, t$13, "write to private field"), n$8 ? n$8.call(e$4, r$12) : t$13.set(e$4, r$12), r$12);
var Rs$2 = {};
xr$3(Rs$2, {
	languages: () => Tm$1,
	options: () => Ha$4,
	printers: () => dm$1
});
var Vs$2 = [
	{
		name: "JavaScript",
		type: "programming",
		extensions: [
			".js",
			"._js",
			".bones",
			".cjs",
			".es",
			".es6",
			".gs",
			".jake",
			".javascript",
			".jsb",
			".jscad",
			".jsfl",
			".jslib",
			".jsm",
			".jspre",
			".jss",
			".mjs",
			".njs",
			".pac",
			".sjs",
			".ssjs",
			".xsjs",
			".xsjslib",
			".start.frag",
			".end.frag",
			".wxs"
		],
		tmScope: "source.js",
		aceMode: "javascript",
		aliases: ["js", "node"],
		codemirrorMode: "javascript",
		codemirrorMimeType: "text/javascript",
		interpreters: [
			"chakra",
			"d8",
			"gjs",
			"js",
			"node",
			"nodejs",
			"qjs",
			"rhino",
			"v8",
			"v8-shell",
			"zx"
		],
		filenames: [
			"Jakefile",
			"start.frag",
			"end.frag"
		],
		parsers: [
			"babel",
			"acorn",
			"espree",
			"meriyah",
			"babel-flow",
			"babel-ts",
			"flow",
			"typescript"
		],
		vscodeLanguageIds: ["javascript", "mongo"],
		linguistLanguageId: 183
	},
	{
		name: "Flow",
		type: "programming",
		extensions: [".js.flow"],
		tmScope: "source.js",
		aceMode: "javascript",
		aliases: [],
		codemirrorMode: "javascript",
		codemirrorMimeType: "text/javascript",
		interpreters: [
			"chakra",
			"d8",
			"gjs",
			"js",
			"node",
			"nodejs",
			"qjs",
			"rhino",
			"v8",
			"v8-shell"
		],
		filenames: [],
		parsers: ["flow", "babel-flow"],
		vscodeLanguageIds: ["javascript"],
		linguistLanguageId: 183
	},
	{
		name: "JSX",
		type: "programming",
		extensions: [".jsx"],
		tmScope: "source.js.jsx",
		aceMode: "javascript",
		aliases: void 0,
		codemirrorMode: "jsx",
		codemirrorMimeType: "text/jsx",
		interpreters: void 0,
		filenames: void 0,
		parsers: [
			"babel",
			"babel-flow",
			"babel-ts",
			"flow",
			"typescript",
			"espree",
			"meriyah"
		],
		vscodeLanguageIds: ["javascriptreact"],
		group: "JavaScript",
		linguistLanguageId: 183
	},
	{
		name: "TypeScript",
		type: "programming",
		extensions: [
			".ts",
			".cts",
			".mts"
		],
		tmScope: "source.ts",
		aceMode: "typescript",
		aliases: ["ts"],
		codemirrorMode: "javascript",
		codemirrorMimeType: "application/typescript",
		interpreters: [
			"bun",
			"deno",
			"ts-node",
			"tsx"
		],
		parsers: ["typescript", "babel-ts"],
		vscodeLanguageIds: ["typescript"],
		linguistLanguageId: 378
	},
	{
		name: "TSX",
		type: "programming",
		extensions: [".tsx"],
		tmScope: "source.tsx",
		aceMode: "javascript",
		codemirrorMode: "jsx",
		codemirrorMimeType: "text/jsx",
		group: "TypeScript",
		parsers: ["typescript", "babel-ts"],
		vscodeLanguageIds: ["typescriptreact"],
		linguistLanguageId: 94901924
	}
];
var vs$1 = {};
xr$3(vs$1, {
	canAttachComment: () => kp$1,
	embed: () => oi$3,
	experimentalFeatures: () => fm$1,
	getCommentChildNodes: () => Ip$1,
	getVisitorKeys: () => br$3,
	handleComments: () => ts$2,
	insertPragma: () => di$5,
	isBlockComment: () => te$4,
	isGap: () => Lp$1,
	massageAstNode: () => Bu$2,
	print: () => Ga$4,
	printComment: () => ju$2,
	willPrintOwnComments: () => rs$2
});
var Za$4 = (e$4, t$13, r$12, n$8) => {
	if (!(e$4 && t$13 == null)) return t$13.replaceAll ? t$13.replaceAll(r$12, n$8) : r$12.global ? t$13.replace(r$12, n$8) : t$13.split(r$12).join(n$8);
}, X$5 = Za$4;
var eo$3 = (e$4, t$13, r$12) => {
	if (!(e$4 && t$13 == null)) return Array.isArray(t$13) || typeof t$13 == "string" ? t$13[r$12 < 0 ? t$13.length + r$12 : r$12] : t$13.at(r$12);
}, v$3 = eo$3;
function to$3(e$4) {
	return e$4 !== null && typeof e$4 == "object";
}
var $s = to$3;
function* ro$3(e$4, t$13) {
	let { getVisitorKeys: r$12, filter: n$8 = () => !0 } = t$13, s$8 = (u$14) => $s(u$14) && n$8(u$14);
	for (let u$14 of r$12(e$4)) {
		let i$18 = e$4[u$14];
		if (Array.isArray(i$18)) for (let a$13 of i$18) s$8(a$13) && (yield a$13);
		else s$8(i$18) && (yield i$18);
	}
}
function* no$4(e$4, t$13) {
	let r$12 = [e$4];
	for (let n$8 = 0; n$8 < r$12.length; n$8++) {
		let s$8 = r$12[n$8];
		for (let u$14 of ro$3(s$8, t$13)) yield u$14, r$12.push(u$14);
	}
}
function Ks$3(e$4, { getVisitorKeys: t$13, predicate: r$12 }) {
	for (let n$8 of no$4(e$4, { getVisitorKeys: t$13 })) if (r$12(n$8)) return !0;
	return !1;
}
var Qs$2 = () => /[#*0-9]\uFE0F?\u20E3|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26AA\u26B0\u26B1\u26BD\u26BE\u26C4\u26C8\u26CF\u26D1\u26E9\u26F0-\u26F5\u26F7\u26F8\u26FA\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2757\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B55\u3030\u303D\u3297\u3299]\uFE0F?|[\u261D\u270C\u270D](?:\uD83C[\uDFFB-\uDFFF]|\uFE0F)?|[\u270A\u270B](?:\uD83C[\uDFFB-\uDFFF])?|[\u23E9-\u23EC\u23F0\u23F3\u25FD\u2693\u26A1\u26AB\u26C5\u26CE\u26D4\u26EA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2795-\u2797\u27B0\u27BF\u2B50]|\u26D3\uFE0F?(?:\u200D\uD83D\uDCA5)?|\u26F9(?:\uD83C[\uDFFB-\uDFFF]|\uFE0F)?(?:\u200D[\u2640\u2642]\uFE0F?)?|\u2764\uFE0F?(?:\u200D(?:\uD83D\uDD25|\uD83E\uDE79))?|\uD83C(?:[\uDC04\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]\uFE0F?|[\uDF85\uDFC2\uDFC7](?:\uD83C[\uDFFB-\uDFFF])?|[\uDFC4\uDFCA](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDFCB\uDFCC](?:\uD83C[\uDFFB-\uDFFF]|\uFE0F)?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF43\uDF45-\uDF4A\uDF4C-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uDDE6\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF]|\uDDE7\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF]|\uDDE8\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF7\uDDFA-\uDDFF]|\uDDE9\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF]|\uDDEA\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA]|\uDDEB\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7]|\uDDEC\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE]|\uDDED\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA]|\uDDEE\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9]|\uDDEF\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5]|\uDDF0\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF]|\uDDF1\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE]|\uDDF2\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF]|\uDDF3\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF]|\uDDF4\uD83C\uDDF2|\uDDF5\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE]|\uDDF6\uD83C\uDDE6|\uDDF7\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC]|\uDDF8\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF]|\uDDF9\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF]|\uDDFA\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF]|\uDDFB\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA]|\uDDFC\uD83C[\uDDEB\uDDF8]|\uDDFD\uD83C\uDDF0|\uDDFE\uD83C[\uDDEA\uDDF9]|\uDDFF\uD83C[\uDDE6\uDDF2\uDDFC]|\uDF44(?:\u200D\uD83D\uDFEB)?|\uDF4B(?:\u200D\uD83D\uDFE9)?|\uDFC3(?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D(?:[\u2640\u2642]\uFE0F?(?:\u200D\u27A1\uFE0F?)?|\u27A1\uFE0F?))?|\uDFF3\uFE0F?(?:\u200D(?:\u26A7\uFE0F?|\uD83C\uDF08))?|\uDFF4(?:\u200D\u2620\uFE0F?|\uDB40\uDC67\uDB40\uDC62\uDB40(?:\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDC73\uDB40\uDC63\uDB40\uDC74|\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F)?)|\uD83D(?:[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3]\uFE0F?|[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC](?:\uD83C[\uDFFB-\uDFFF])?|[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4\uDEB5](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDD74\uDD90](?:\uD83C[\uDFFB-\uDFFF]|\uFE0F)?|[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC25\uDC27-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE41\uDE43\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEDC-\uDEDF\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB\uDFF0]|\uDC08(?:\u200D\u2B1B)?|\uDC15(?:\u200D\uD83E\uDDBA)?|\uDC26(?:\u200D(?:\u2B1B|\uD83D\uDD25))?|\uDC3B(?:\u200D\u2744\uFE0F?)?|\uDC41\uFE0F?(?:\u200D\uD83D\uDDE8\uFE0F?)?|\uDC68(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D(?:[\uDC68\uDC69]\u200D\uD83D(?:\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?)|[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?)|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFC-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB\uDFFD-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB-\uDFFD\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB-\uDFFE])))?))?|\uDC69(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?[\uDC68\uDC69]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D(?:[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?|\uDC69\u200D\uD83D(?:\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?))|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFC-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB\uDFFD-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB-\uDFFD\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB-\uDFFE])))?))?|\uDC6F(?:\u200D[\u2640\u2642]\uFE0F?)?|\uDD75(?:\uD83C[\uDFFB-\uDFFF]|\uFE0F)?(?:\u200D[\u2640\u2642]\uFE0F?)?|\uDE2E(?:\u200D\uD83D\uDCA8)?|\uDE35(?:\u200D\uD83D\uDCAB)?|\uDE36(?:\u200D\uD83C\uDF2B\uFE0F?)?|\uDE42(?:\u200D[\u2194\u2195]\uFE0F?)?|\uDEB6(?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D(?:[\u2640\u2642]\uFE0F?(?:\u200D\u27A1\uFE0F?)?|\u27A1\uFE0F?))?)|\uD83E(?:[\uDD0C\uDD0F\uDD18-\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5\uDEC3-\uDEC5\uDEF0\uDEF2-\uDEF8](?:\uD83C[\uDFFB-\uDFFF])?|[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD\uDDCF\uDDD4\uDDD6-\uDDDD](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDDDE\uDDDF](?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDD0D\uDD0E\uDD10-\uDD17\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCC\uDDD0\uDDE0-\uDDFF\uDE70-\uDE7C\uDE80-\uDE89\uDE8F-\uDEC2\uDEC6\uDECE-\uDEDC\uDEDF-\uDEE9]|\uDD3C(?:\u200D[\u2640\u2642]\uFE0F?|\uD83C[\uDFFB-\uDFFF])?|\uDDCE(?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D(?:[\u2640\u2642]\uFE0F?(?:\u200D\u27A1\uFE0F?)?|\u27A1\uFE0F?))?|\uDDD1(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1|\uDDD1\u200D\uD83E\uDDD2(?:\u200D\uD83E\uDDD2)?|\uDDD2(?:\u200D\uD83E\uDDD2)?))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFC-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB\uDFFD-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB-\uDFFD\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB-\uDFFE]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?))?|\uDEF1(?:\uD83C(?:\uDFFB(?:\u200D\uD83E\uDEF2\uD83C[\uDFFC-\uDFFF])?|\uDFFC(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB\uDFFD-\uDFFF])?|\uDFFD(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])?|\uDFFE(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB-\uDFFD\uDFFF])?|\uDFFF(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB-\uDFFE])?))?)/g;
function zs$2(e$4) {
	return e$4 === 12288 || e$4 >= 65281 && e$4 <= 65376 || e$4 >= 65504 && e$4 <= 65510;
}
function Zs$3(e$4) {
	return e$4 >= 4352 && e$4 <= 4447 || e$4 === 8986 || e$4 === 8987 || e$4 === 9001 || e$4 === 9002 || e$4 >= 9193 && e$4 <= 9196 || e$4 === 9200 || e$4 === 9203 || e$4 === 9725 || e$4 === 9726 || e$4 === 9748 || e$4 === 9749 || e$4 >= 9776 && e$4 <= 9783 || e$4 >= 9800 && e$4 <= 9811 || e$4 === 9855 || e$4 >= 9866 && e$4 <= 9871 || e$4 === 9875 || e$4 === 9889 || e$4 === 9898 || e$4 === 9899 || e$4 === 9917 || e$4 === 9918 || e$4 === 9924 || e$4 === 9925 || e$4 === 9934 || e$4 === 9940 || e$4 === 9962 || e$4 === 9970 || e$4 === 9971 || e$4 === 9973 || e$4 === 9978 || e$4 === 9981 || e$4 === 9989 || e$4 === 9994 || e$4 === 9995 || e$4 === 10024 || e$4 === 10060 || e$4 === 10062 || e$4 >= 10067 && e$4 <= 10069 || e$4 === 10071 || e$4 >= 10133 && e$4 <= 10135 || e$4 === 10160 || e$4 === 10175 || e$4 === 11035 || e$4 === 11036 || e$4 === 11088 || e$4 === 11093 || e$4 >= 11904 && e$4 <= 11929 || e$4 >= 11931 && e$4 <= 12019 || e$4 >= 12032 && e$4 <= 12245 || e$4 >= 12272 && e$4 <= 12287 || e$4 >= 12289 && e$4 <= 12350 || e$4 >= 12353 && e$4 <= 12438 || e$4 >= 12441 && e$4 <= 12543 || e$4 >= 12549 && e$4 <= 12591 || e$4 >= 12593 && e$4 <= 12686 || e$4 >= 12688 && e$4 <= 12773 || e$4 >= 12783 && e$4 <= 12830 || e$4 >= 12832 && e$4 <= 12871 || e$4 >= 12880 && e$4 <= 42124 || e$4 >= 42128 && e$4 <= 42182 || e$4 >= 43360 && e$4 <= 43388 || e$4 >= 44032 && e$4 <= 55203 || e$4 >= 63744 && e$4 <= 64255 || e$4 >= 65040 && e$4 <= 65049 || e$4 >= 65072 && e$4 <= 65106 || e$4 >= 65108 && e$4 <= 65126 || e$4 >= 65128 && e$4 <= 65131 || e$4 >= 94176 && e$4 <= 94180 || e$4 === 94192 || e$4 === 94193 || e$4 >= 94208 && e$4 <= 100343 || e$4 >= 100352 && e$4 <= 101589 || e$4 >= 101631 && e$4 <= 101640 || e$4 >= 110576 && e$4 <= 110579 || e$4 >= 110581 && e$4 <= 110587 || e$4 === 110589 || e$4 === 110590 || e$4 >= 110592 && e$4 <= 110882 || e$4 === 110898 || e$4 >= 110928 && e$4 <= 110930 || e$4 === 110933 || e$4 >= 110948 && e$4 <= 110951 || e$4 >= 110960 && e$4 <= 111355 || e$4 >= 119552 && e$4 <= 119638 || e$4 >= 119648 && e$4 <= 119670 || e$4 === 126980 || e$4 === 127183 || e$4 === 127374 || e$4 >= 127377 && e$4 <= 127386 || e$4 >= 127488 && e$4 <= 127490 || e$4 >= 127504 && e$4 <= 127547 || e$4 >= 127552 && e$4 <= 127560 || e$4 === 127568 || e$4 === 127569 || e$4 >= 127584 && e$4 <= 127589 || e$4 >= 127744 && e$4 <= 127776 || e$4 >= 127789 && e$4 <= 127797 || e$4 >= 127799 && e$4 <= 127868 || e$4 >= 127870 && e$4 <= 127891 || e$4 >= 127904 && e$4 <= 127946 || e$4 >= 127951 && e$4 <= 127955 || e$4 >= 127968 && e$4 <= 127984 || e$4 === 127988 || e$4 >= 127992 && e$4 <= 128062 || e$4 === 128064 || e$4 >= 128066 && e$4 <= 128252 || e$4 >= 128255 && e$4 <= 128317 || e$4 >= 128331 && e$4 <= 128334 || e$4 >= 128336 && e$4 <= 128359 || e$4 === 128378 || e$4 === 128405 || e$4 === 128406 || e$4 === 128420 || e$4 >= 128507 && e$4 <= 128591 || e$4 >= 128640 && e$4 <= 128709 || e$4 === 128716 || e$4 >= 128720 && e$4 <= 128722 || e$4 >= 128725 && e$4 <= 128727 || e$4 >= 128732 && e$4 <= 128735 || e$4 === 128747 || e$4 === 128748 || e$4 >= 128756 && e$4 <= 128764 || e$4 >= 128992 && e$4 <= 129003 || e$4 === 129008 || e$4 >= 129292 && e$4 <= 129338 || e$4 >= 129340 && e$4 <= 129349 || e$4 >= 129351 && e$4 <= 129535 || e$4 >= 129648 && e$4 <= 129660 || e$4 >= 129664 && e$4 <= 129673 || e$4 >= 129679 && e$4 <= 129734 || e$4 >= 129742 && e$4 <= 129756 || e$4 >= 129759 && e$4 <= 129769 || e$4 >= 129776 && e$4 <= 129784 || e$4 >= 131072 && e$4 <= 196605 || e$4 >= 196608 && e$4 <= 262141;
}
var eu$3 = (e$4) => !(zs$2(e$4) || Zs$3(e$4));
var so$3 = /[^\x20-\x7F]/u;
function uo$3(e$4) {
	if (!e$4) return 0;
	if (!so$3.test(e$4)) return e$4.length;
	e$4 = e$4.replace(Qs$2(), "  ");
	let t$13 = 0;
	for (let r$12 of e$4) {
		let n$8 = r$12.codePointAt(0);
		n$8 <= 31 || n$8 >= 127 && n$8 <= 159 || n$8 >= 768 && n$8 <= 879 || (t$13 += eu$3(n$8) ? 1 : 2);
	}
	return t$13;
}
var st$4 = uo$3;
function hr$3(e$4) {
	return (t$13, r$12, n$8) => {
		let s$8 = !!(n$8 != null && n$8.backwards);
		if (r$12 === !1) return !1;
		let { length: u$14 } = t$13, i$18 = r$12;
		for (; i$18 >= 0 && i$18 < u$14;) {
			let a$13 = t$13.charAt(i$18);
			if (e$4 instanceof RegExp) {
				if (!e$4.test(a$13)) return i$18;
			} else if (!e$4.includes(a$13)) return i$18;
			s$8 ? i$18-- : i$18++;
		}
		return i$18 === -1 || i$18 === u$14 ? i$18 : !1;
	};
}
hr$3(/\s/u);
var Ye$5 = hr$3(" 	"), tu$4 = hr$3(",; 	"), ru$3 = hr$3(/[^\n\r]/u);
function io$3(e$4, t$13, r$12) {
	let n$8 = !!(r$12 != null && r$12.backwards);
	if (t$13 === !1) return !1;
	let s$8 = e$4.charAt(t$13);
	if (n$8) {
		if (e$4.charAt(t$13 - 1) === "\r" && s$8 === `
`) return t$13 - 2;
		if (s$8 === `
` || s$8 === "\r" || s$8 === "\u2028" || s$8 === "\u2029") return t$13 - 1;
	} else {
		if (s$8 === "\r" && e$4.charAt(t$13 + 1) === `
`) return t$13 + 2;
		if (s$8 === `
` || s$8 === "\r" || s$8 === "\u2028" || s$8 === "\u2029") return t$13 + 1;
	}
	return t$13;
}
var He$6 = io$3;
function ao$3(e$4, t$13, r$12 = {}) {
	let n$8 = Ye$5(e$4, r$12.backwards ? t$13 - 1 : t$13, r$12), s$8 = He$6(e$4, n$8, r$12);
	return n$8 !== s$8;
}
var ee$3 = ao$3;
function oo$3(e$4, t$13) {
	if (t$13 === !1) return !1;
	if (e$4.charAt(t$13) === "/" && e$4.charAt(t$13 + 1) === "*") {
		for (let r$12 = t$13 + 2; r$12 < e$4.length; ++r$12) if (e$4.charAt(r$12) === "*" && e$4.charAt(r$12 + 1) === "/") return r$12 + 2;
	}
	return t$13;
}
var _t$4 = oo$3;
function po$4(e$4, t$13) {
	return t$13 === !1 ? !1 : e$4.charAt(t$13) === "/" && e$4.charAt(t$13 + 1) === "/" ? ru$3(e$4, t$13) : t$13;
}
var Mt$3 = po$4;
function co$4(e$4, t$13) {
	let r$12 = null, n$8 = t$13;
	for (; n$8 !== r$12;) r$12 = n$8, n$8 = tu$4(e$4, n$8), n$8 = _t$4(e$4, n$8), n$8 = Ye$5(e$4, n$8);
	return n$8 = Mt$3(e$4, n$8), n$8 = He$6(e$4, n$8), n$8 !== !1 && ee$3(e$4, n$8);
}
var vt$4 = co$4;
function lo$3(e$4) {
	return Array.isArray(e$4) && e$4.length > 0;
}
var O$2 = lo$3;
var nu$2 = new Proxy(() => {}, { get: () => nu$2 }), jt$4 = nu$2;
var gr$3 = "'", su$2 = "\"";
function mo$2(e$4, t$13) {
	let r$12 = t$13 === !0 || t$13 === gr$3 ? gr$3 : su$2, n$8 = r$12 === gr$3 ? su$2 : gr$3, s$8 = 0, u$14 = 0;
	for (let i$18 of e$4) i$18 === r$12 ? s$8++ : i$18 === n$8 && u$14++;
	return s$8 > u$14 ? n$8 : r$12;
}
var Sr$4 = mo$2;
function yo$2(e$4, t$13, r$12) {
	let n$8 = t$13 === "\"" ? "'" : "\"", u$14 = X$5(!1, e$4, /\\(.)|(["'])/gsu, (i$18, a$13, o$9) => a$13 === n$8 ? a$13 : o$9 === t$13 ? "\\" + o$9 : o$9 || (r$12 && /^[^\n\r"'0-7\\bfnrt-vx\u2028\u2029]$/u.test(a$13) ? a$13 : "\\" + a$13));
	return t$13 + u$14 + t$13;
}
var uu$2 = yo$2;
function fo$1(e$4, t$13) {
	jt$4.ok(/^(?<quote>["']).*\k<quote>$/su.test(e$4));
	let r$12 = e$4.slice(1, -1), n$8 = t$13.parser === "json" || t$13.parser === "jsonc" || t$13.parser === "json5" && t$13.quoteProps === "preserve" && !t$13.singleQuote ? "\"" : t$13.__isInHtmlAttribute ? "'" : Sr$4(r$12, t$13.singleQuote);
	return e$4.charAt(0) === n$8 ? e$4 : uu$2(r$12, n$8, !1);
}
var ut$3 = fo$1;
var iu$3 = (e$4) => Number.isInteger(e$4) && e$4 >= 0;
function j$5(e$4) {
	var n$8, s$8, u$14;
	let t$13 = ((n$8 = e$4.range) == null ? void 0 : n$8[0]) ?? e$4.start, r$12 = (u$14 = ((s$8 = e$4.declaration) == null ? void 0 : s$8.decorators) ?? e$4.decorators) == null ? void 0 : u$14[0];
	return r$12 ? Math.min(j$5(r$12), t$13) : t$13;
}
function P$4(e$4) {
	var r$12;
	return ((r$12 = e$4.range) == null ? void 0 : r$12[1]) ?? e$4.end;
}
function Bt$4(e$4, t$13) {
	let r$12 = j$5(e$4);
	return iu$3(r$12) && r$12 === j$5(t$13);
}
function Do$1(e$4, t$13) {
	let r$12 = P$4(e$4);
	return iu$3(r$12) && r$12 === P$4(t$13);
}
function au$2(e$4, t$13) {
	return Bt$4(e$4, t$13) && Do$1(e$4, t$13);
}
var rr$4 = null;
function nr$5(e$4) {
	if (rr$4 !== null && typeof rr$4.property) {
		let t$13 = rr$4;
		return rr$4 = nr$5.prototype = null, t$13;
	}
	return rr$4 = nr$5.prototype = e$4 ?? Object.create(null), new nr$5();
}
var Eo$3 = 10;
for (let e$4 = 0; e$4 <= Eo$3; e$4++) nr$5();
function On$4(e$4) {
	return nr$5(e$4);
}
function Fo$1(e$4, t$13 = "type") {
	On$4(e$4);
	function r$12(n$8) {
		let s$8 = n$8[t$13], u$14 = e$4[s$8];
		if (!Array.isArray(u$14)) throw Object.assign(/* @__PURE__ */ new Error(`Missing visitor keys for '${s$8}'.`), { node: n$8 });
		return u$14;
	}
	return r$12;
}
var Br$4 = Fo$1;
var Co = Br$4({
	ArrayExpression: ["elements"],
	AssignmentExpression: ["left", "right"],
	BinaryExpression: ["left", "right"],
	InterpreterDirective: [],
	Directive: ["value"],
	DirectiveLiteral: [],
	BlockStatement: ["directives", "body"],
	BreakStatement: ["label"],
	CallExpression: [
		"callee",
		"typeParameters",
		"typeArguments",
		"arguments"
	],
	CatchClause: ["param", "body"],
	ConditionalExpression: [
		"test",
		"consequent",
		"alternate"
	],
	ContinueStatement: ["label"],
	DebuggerStatement: [],
	DoWhileStatement: ["body", "test"],
	EmptyStatement: [],
	ExpressionStatement: ["expression"],
	File: ["program"],
	ForInStatement: [
		"left",
		"right",
		"body"
	],
	ForStatement: [
		"init",
		"test",
		"update",
		"body"
	],
	FunctionDeclaration: [
		"id",
		"typeParameters",
		"params",
		"predicate",
		"returnType",
		"body"
	],
	FunctionExpression: [
		"id",
		"typeParameters",
		"params",
		"returnType",
		"body"
	],
	Identifier: ["typeAnnotation", "decorators"],
	IfStatement: [
		"test",
		"consequent",
		"alternate"
	],
	LabeledStatement: ["label", "body"],
	StringLiteral: [],
	NumericLiteral: [],
	NullLiteral: [],
	BooleanLiteral: [],
	RegExpLiteral: [],
	LogicalExpression: ["left", "right"],
	MemberExpression: ["object", "property"],
	NewExpression: [
		"callee",
		"typeParameters",
		"typeArguments",
		"arguments"
	],
	Program: ["directives", "body"],
	ObjectExpression: ["properties"],
	ObjectMethod: [
		"decorators",
		"key",
		"typeParameters",
		"params",
		"returnType",
		"body"
	],
	ObjectProperty: [
		"decorators",
		"key",
		"value"
	],
	RestElement: [
		"argument",
		"typeAnnotation",
		"decorators"
	],
	ReturnStatement: ["argument"],
	SequenceExpression: ["expressions"],
	ParenthesizedExpression: ["expression"],
	SwitchCase: ["test", "consequent"],
	SwitchStatement: ["discriminant", "cases"],
	ThisExpression: [],
	ThrowStatement: ["argument"],
	TryStatement: [
		"block",
		"handler",
		"finalizer"
	],
	UnaryExpression: ["argument"],
	UpdateExpression: ["argument"],
	VariableDeclaration: ["declarations"],
	VariableDeclarator: ["id", "init"],
	WhileStatement: ["test", "body"],
	WithStatement: ["object", "body"],
	AssignmentPattern: [
		"left",
		"right",
		"decorators",
		"typeAnnotation"
	],
	ArrayPattern: [
		"elements",
		"typeAnnotation",
		"decorators"
	],
	ArrowFunctionExpression: [
		"typeParameters",
		"params",
		"predicate",
		"returnType",
		"body"
	],
	ClassBody: ["body"],
	ClassExpression: [
		"decorators",
		"id",
		"typeParameters",
		"superClass",
		"superTypeParameters",
		"mixins",
		"implements",
		"body",
		"superTypeArguments"
	],
	ClassDeclaration: [
		"decorators",
		"id",
		"typeParameters",
		"superClass",
		"superTypeParameters",
		"mixins",
		"implements",
		"body",
		"superTypeArguments"
	],
	ExportAllDeclaration: [
		"source",
		"attributes",
		"exported"
	],
	ExportDefaultDeclaration: ["declaration"],
	ExportNamedDeclaration: [
		"declaration",
		"specifiers",
		"source",
		"attributes"
	],
	ExportSpecifier: ["local", "exported"],
	ForOfStatement: [
		"left",
		"right",
		"body"
	],
	ImportDeclaration: [
		"specifiers",
		"source",
		"attributes"
	],
	ImportDefaultSpecifier: ["local"],
	ImportNamespaceSpecifier: ["local"],
	ImportSpecifier: ["imported", "local"],
	ImportExpression: ["source", "options"],
	MetaProperty: ["meta", "property"],
	ClassMethod: [
		"decorators",
		"key",
		"typeParameters",
		"params",
		"returnType",
		"body"
	],
	ObjectPattern: [
		"decorators",
		"properties",
		"typeAnnotation"
	],
	SpreadElement: ["argument"],
	Super: [],
	TaggedTemplateExpression: [
		"tag",
		"typeParameters",
		"quasi",
		"typeArguments"
	],
	TemplateElement: [],
	TemplateLiteral: ["quasis", "expressions"],
	YieldExpression: ["argument"],
	AwaitExpression: ["argument"],
	BigIntLiteral: [],
	ExportNamespaceSpecifier: ["exported"],
	OptionalMemberExpression: ["object", "property"],
	OptionalCallExpression: [
		"callee",
		"typeParameters",
		"typeArguments",
		"arguments"
	],
	ClassProperty: [
		"decorators",
		"variance",
		"key",
		"typeAnnotation",
		"value"
	],
	ClassAccessorProperty: [
		"decorators",
		"key",
		"typeAnnotation",
		"value"
	],
	ClassPrivateProperty: [
		"decorators",
		"variance",
		"key",
		"typeAnnotation",
		"value"
	],
	ClassPrivateMethod: [
		"decorators",
		"key",
		"typeParameters",
		"params",
		"returnType",
		"body"
	],
	PrivateName: ["id"],
	StaticBlock: ["body"],
	ImportAttribute: ["key", "value"],
	AnyTypeAnnotation: [],
	ArrayTypeAnnotation: ["elementType"],
	BooleanTypeAnnotation: [],
	BooleanLiteralTypeAnnotation: [],
	NullLiteralTypeAnnotation: [],
	ClassImplements: ["id", "typeParameters"],
	DeclareClass: [
		"id",
		"typeParameters",
		"extends",
		"mixins",
		"implements",
		"body"
	],
	DeclareFunction: ["id", "predicate"],
	DeclareInterface: [
		"id",
		"typeParameters",
		"extends",
		"body"
	],
	DeclareModule: ["id", "body"],
	DeclareModuleExports: ["typeAnnotation"],
	DeclareTypeAlias: [
		"id",
		"typeParameters",
		"right"
	],
	DeclareOpaqueType: [
		"id",
		"typeParameters",
		"supertype"
	],
	DeclareVariable: ["id"],
	DeclareExportDeclaration: [
		"declaration",
		"specifiers",
		"source",
		"attributes"
	],
	DeclareExportAllDeclaration: ["source", "attributes"],
	DeclaredPredicate: ["value"],
	ExistsTypeAnnotation: [],
	FunctionTypeAnnotation: [
		"typeParameters",
		"this",
		"params",
		"rest",
		"returnType"
	],
	FunctionTypeParam: ["name", "typeAnnotation"],
	GenericTypeAnnotation: ["id", "typeParameters"],
	InferredPredicate: [],
	InterfaceExtends: ["id", "typeParameters"],
	InterfaceDeclaration: [
		"id",
		"typeParameters",
		"extends",
		"body"
	],
	InterfaceTypeAnnotation: ["extends", "body"],
	IntersectionTypeAnnotation: ["types"],
	MixedTypeAnnotation: [],
	EmptyTypeAnnotation: [],
	NullableTypeAnnotation: ["typeAnnotation"],
	NumberLiteralTypeAnnotation: [],
	NumberTypeAnnotation: [],
	ObjectTypeAnnotation: [
		"properties",
		"indexers",
		"callProperties",
		"internalSlots"
	],
	ObjectTypeInternalSlot: ["id", "value"],
	ObjectTypeCallProperty: ["value"],
	ObjectTypeIndexer: [
		"variance",
		"id",
		"key",
		"value"
	],
	ObjectTypeProperty: [
		"key",
		"value",
		"variance"
	],
	ObjectTypeSpreadProperty: ["argument"],
	OpaqueType: [
		"id",
		"typeParameters",
		"supertype",
		"impltype"
	],
	QualifiedTypeIdentifier: ["qualification", "id"],
	StringLiteralTypeAnnotation: [],
	StringTypeAnnotation: [],
	SymbolTypeAnnotation: [],
	ThisTypeAnnotation: [],
	TupleTypeAnnotation: ["types", "elementTypes"],
	TypeofTypeAnnotation: ["argument", "typeArguments"],
	TypeAlias: [
		"id",
		"typeParameters",
		"right"
	],
	TypeAnnotation: ["typeAnnotation"],
	TypeCastExpression: ["expression", "typeAnnotation"],
	TypeParameter: [
		"bound",
		"default",
		"variance"
	],
	TypeParameterDeclaration: ["params"],
	TypeParameterInstantiation: ["params"],
	UnionTypeAnnotation: ["types"],
	Variance: [],
	VoidTypeAnnotation: [],
	EnumDeclaration: ["id", "body"],
	EnumBooleanBody: ["members"],
	EnumNumberBody: ["members"],
	EnumStringBody: ["members"],
	EnumSymbolBody: ["members"],
	EnumBooleanMember: ["id", "init"],
	EnumNumberMember: ["id", "init"],
	EnumStringMember: ["id", "init"],
	EnumDefaultedMember: ["id"],
	IndexedAccessType: ["objectType", "indexType"],
	OptionalIndexedAccessType: ["objectType", "indexType"],
	JSXAttribute: ["name", "value"],
	JSXClosingElement: ["name"],
	JSXElement: [
		"openingElement",
		"children",
		"closingElement"
	],
	JSXEmptyExpression: [],
	JSXExpressionContainer: ["expression"],
	JSXSpreadChild: ["expression"],
	JSXIdentifier: [],
	JSXMemberExpression: ["object", "property"],
	JSXNamespacedName: ["namespace", "name"],
	JSXOpeningElement: [
		"name",
		"typeParameters",
		"typeArguments",
		"attributes"
	],
	JSXSpreadAttribute: ["argument"],
	JSXText: [],
	JSXFragment: [
		"openingFragment",
		"children",
		"closingFragment"
	],
	JSXOpeningFragment: [],
	JSXClosingFragment: [],
	Noop: [],
	Placeholder: [],
	V8IntrinsicIdentifier: [],
	ArgumentPlaceholder: [],
	BindExpression: ["object", "callee"],
	Decorator: ["expression"],
	DoExpression: ["body"],
	ExportDefaultSpecifier: ["exported"],
	ModuleExpression: ["body"],
	TopicReference: [],
	PipelineTopicExpression: ["expression"],
	PipelineBareFunction: ["callee"],
	PipelinePrimaryTopicReference: [],
	TSParameterProperty: ["parameter", "decorators"],
	TSDeclareFunction: [
		"id",
		"typeParameters",
		"params",
		"returnType",
		"body"
	],
	TSDeclareMethod: [
		"decorators",
		"key",
		"typeParameters",
		"params",
		"returnType"
	],
	TSQualifiedName: ["left", "right"],
	TSCallSignatureDeclaration: [
		"typeParameters",
		"parameters",
		"typeAnnotation",
		"params",
		"returnType"
	],
	TSConstructSignatureDeclaration: [
		"typeParameters",
		"parameters",
		"typeAnnotation",
		"params",
		"returnType"
	],
	TSPropertySignature: ["key", "typeAnnotation"],
	TSMethodSignature: [
		"key",
		"typeParameters",
		"parameters",
		"typeAnnotation",
		"params",
		"returnType"
	],
	TSIndexSignature: ["parameters", "typeAnnotation"],
	TSAnyKeyword: [],
	TSBooleanKeyword: [],
	TSBigIntKeyword: [],
	TSIntrinsicKeyword: [],
	TSNeverKeyword: [],
	TSNullKeyword: [],
	TSNumberKeyword: [],
	TSObjectKeyword: [],
	TSStringKeyword: [],
	TSSymbolKeyword: [],
	TSUndefinedKeyword: [],
	TSUnknownKeyword: [],
	TSVoidKeyword: [],
	TSThisType: [],
	TSFunctionType: [
		"typeParameters",
		"parameters",
		"typeAnnotation",
		"params",
		"returnType"
	],
	TSConstructorType: [
		"typeParameters",
		"parameters",
		"typeAnnotation",
		"params",
		"returnType"
	],
	TSTypeReference: [
		"typeName",
		"typeParameters",
		"typeArguments"
	],
	TSTypePredicate: ["parameterName", "typeAnnotation"],
	TSTypeQuery: [
		"exprName",
		"typeParameters",
		"typeArguments"
	],
	TSTypeLiteral: ["members"],
	TSArrayType: ["elementType"],
	TSTupleType: ["elementTypes"],
	TSOptionalType: ["typeAnnotation"],
	TSRestType: ["typeAnnotation"],
	TSNamedTupleMember: ["label", "elementType"],
	TSUnionType: ["types"],
	TSIntersectionType: ["types"],
	TSConditionalType: [
		"checkType",
		"extendsType",
		"trueType",
		"falseType"
	],
	TSInferType: ["typeParameter"],
	TSParenthesizedType: ["typeAnnotation"],
	TSTypeOperator: ["typeAnnotation"],
	TSIndexedAccessType: ["objectType", "indexType"],
	TSMappedType: [
		"nameType",
		"typeAnnotation",
		"key",
		"constraint"
	],
	TSTemplateLiteralType: ["quasis", "types"],
	TSLiteralType: ["literal"],
	TSExpressionWithTypeArguments: ["expression", "typeParameters"],
	TSInterfaceDeclaration: [
		"id",
		"typeParameters",
		"extends",
		"body"
	],
	TSInterfaceBody: ["body"],
	TSTypeAliasDeclaration: [
		"id",
		"typeParameters",
		"typeAnnotation"
	],
	TSInstantiationExpression: [
		"expression",
		"typeParameters",
		"typeArguments"
	],
	TSAsExpression: ["expression", "typeAnnotation"],
	TSSatisfiesExpression: ["expression", "typeAnnotation"],
	TSTypeAssertion: ["typeAnnotation", "expression"],
	TSEnumBody: ["members"],
	TSEnumDeclaration: ["id", "body"],
	TSEnumMember: ["id", "initializer"],
	TSModuleDeclaration: ["id", "body"],
	TSModuleBlock: ["body"],
	TSImportType: [
		"argument",
		"options",
		"qualifier",
		"typeParameters",
		"typeArguments"
	],
	TSImportEqualsDeclaration: ["id", "moduleReference"],
	TSExternalModuleReference: ["expression"],
	TSNonNullExpression: ["expression"],
	TSExportAssignment: ["expression"],
	TSNamespaceExportDeclaration: ["id"],
	TSTypeAnnotation: ["typeAnnotation"],
	TSTypeParameterInstantiation: ["params"],
	TSTypeParameterDeclaration: ["params"],
	TSTypeParameter: [
		"constraint",
		"default",
		"name"
	],
	ChainExpression: ["expression"],
	ExperimentalRestProperty: ["argument"],
	ExperimentalSpreadProperty: ["argument"],
	Literal: [],
	MethodDefinition: [
		"decorators",
		"key",
		"value"
	],
	PrivateIdentifier: [],
	Property: ["key", "value"],
	PropertyDefinition: [
		"decorators",
		"key",
		"typeAnnotation",
		"value",
		"variance"
	],
	AccessorProperty: [
		"decorators",
		"key",
		"typeAnnotation",
		"value"
	],
	TSAbstractAccessorProperty: [
		"decorators",
		"key",
		"typeAnnotation"
	],
	TSAbstractKeyword: [],
	TSAbstractMethodDefinition: ["key", "value"],
	TSAbstractPropertyDefinition: [
		"decorators",
		"key",
		"typeAnnotation"
	],
	TSAsyncKeyword: [],
	TSClassImplements: [
		"expression",
		"typeArguments",
		"typeParameters"
	],
	TSDeclareKeyword: [],
	TSEmptyBodyFunctionExpression: [
		"id",
		"typeParameters",
		"params",
		"returnType"
	],
	TSExportKeyword: [],
	TSInterfaceHeritage: [
		"expression",
		"typeArguments",
		"typeParameters"
	],
	TSPrivateKeyword: [],
	TSProtectedKeyword: [],
	TSPublicKeyword: [],
	TSReadonlyKeyword: [],
	TSStaticKeyword: [],
	AsConstExpression: ["expression"],
	AsExpression: ["expression", "typeAnnotation"],
	BigIntLiteralTypeAnnotation: [],
	BigIntTypeAnnotation: [],
	ComponentDeclaration: [
		"id",
		"params",
		"body",
		"typeParameters",
		"rendersType"
	],
	ComponentParameter: ["name", "local"],
	ComponentTypeAnnotation: [
		"params",
		"rest",
		"typeParameters",
		"rendersType"
	],
	ComponentTypeParameter: ["name", "typeAnnotation"],
	ConditionalTypeAnnotation: [
		"checkType",
		"extendsType",
		"trueType",
		"falseType"
	],
	DeclareComponent: [
		"id",
		"params",
		"rest",
		"typeParameters",
		"rendersType"
	],
	DeclareEnum: ["id", "body"],
	DeclareHook: ["id"],
	DeclareNamespace: ["id", "body"],
	EnumBigIntBody: ["members"],
	EnumBigIntMember: ["id", "init"],
	HookDeclaration: [
		"id",
		"params",
		"body",
		"typeParameters",
		"returnType"
	],
	HookTypeAnnotation: [
		"params",
		"returnType",
		"rest",
		"typeParameters"
	],
	InferTypeAnnotation: ["typeParameter"],
	KeyofTypeAnnotation: ["argument"],
	ObjectTypeMappedTypeProperty: [
		"keyTparam",
		"propType",
		"sourceType",
		"variance"
	],
	QualifiedTypeofIdentifier: ["qualification", "id"],
	TupleTypeLabeledElement: [
		"label",
		"elementType",
		"variance"
	],
	TupleTypeSpreadElement: ["label", "typeAnnotation"],
	TypeOperator: ["typeAnnotation"],
	TypePredicate: [
		"parameterName",
		"typeAnnotation",
		"asserts"
	],
	NGChainedExpression: ["expressions"],
	NGEmptyExpression: [],
	NGPipeExpression: [
		"left",
		"right",
		"arguments"
	],
	NGMicrosyntax: ["body"],
	NGMicrosyntaxAs: ["key", "alias"],
	NGMicrosyntaxExpression: ["expression", "alias"],
	NGMicrosyntaxKey: [],
	NGMicrosyntaxKeyedExpression: ["key", "expression"],
	NGMicrosyntaxLet: ["key", "value"],
	NGRoot: ["node"],
	JsExpressionRoot: ["node"],
	JsonRoot: ["node"],
	TSJSDocAllType: [],
	TSJSDocUnknownType: [],
	TSJSDocNullableType: ["typeAnnotation"],
	TSJSDocNonNullableType: ["typeAnnotation"],
	NeverTypeAnnotation: [],
	SatisfiesExpression: ["expression", "typeAnnotation"],
	UndefinedTypeAnnotation: [],
	UnknownTypeAnnotation: []
}), br$3 = Co;
function Ao$1(e$4) {
	let t$13 = new Set(e$4);
	return (r$12) => t$13.has(r$12 == null ? void 0 : r$12.type);
}
var R$5 = Ao$1;
function To$2(e$4) {
	var t$13;
	return ((t$13 = e$4.extra) == null ? void 0 : t$13.raw) ?? e$4.raw;
}
var ae$4 = To$2;
var xo$1 = R$5([
	"Block",
	"CommentBlock",
	"MultiLine"
]), te$4 = xo$1;
var ho$2 = R$5([
	"AnyTypeAnnotation",
	"ThisTypeAnnotation",
	"NumberTypeAnnotation",
	"VoidTypeAnnotation",
	"BooleanTypeAnnotation",
	"BigIntTypeAnnotation",
	"SymbolTypeAnnotation",
	"StringTypeAnnotation",
	"NeverTypeAnnotation",
	"UndefinedTypeAnnotation",
	"UnknownTypeAnnotation",
	"EmptyTypeAnnotation",
	"MixedTypeAnnotation"
]), Pr$5 = ho$2;
var go$3 = R$5([
	"Line",
	"CommentLine",
	"SingleLine",
	"HashbangComment",
	"HTMLOpen",
	"HTMLClose",
	"Hashbang",
	"InterpreterDirective"
]), At$6 = go$3;
function So$3(e$4, t$13) {
	let r$12 = t$13.split(".");
	for (let n$8 = r$12.length - 1; n$8 >= 0; n$8--) {
		let s$8 = r$12[n$8];
		if (n$8 === 0) return e$4.type === "Identifier" && e$4.name === s$8;
		if (e$4.type !== "MemberExpression" || e$4.optional || e$4.computed || e$4.property.type !== "Identifier" || e$4.property.name !== s$8) return !1;
		e$4 = e$4.object;
	}
}
function Bo$2(e$4, t$13) {
	return t$13.some((r$12) => So$3(e$4, r$12));
}
var pu$1 = Bo$2;
function bo$2({ type: e$4 }) {
	return e$4.startsWith("TS") && e$4.endsWith("Keyword");
}
var kr$4 = bo$2;
function ur$5(e$4, t$13) {
	return t$13(e$4) || Ks$3(e$4, {
		getVisitorKeys: br$3,
		predicate: t$13
	});
}
function Jt$2(e$4) {
	return e$4.type === "AssignmentExpression" || e$4.type === "BinaryExpression" || e$4.type === "LogicalExpression" || e$4.type === "NGPipeExpression" || e$4.type === "ConditionalExpression" || w$2(e$4) || G$4(e$4) || e$4.type === "SequenceExpression" || e$4.type === "TaggedTemplateExpression" || e$4.type === "BindExpression" || e$4.type === "UpdateExpression" && !e$4.prefix || xe$3(e$4) || e$4.type === "TSNonNullExpression" || e$4.type === "ChainExpression";
}
function mu$3(e$4) {
	return e$4.expressions ? e$4.expressions[0] : e$4.left ?? e$4.test ?? e$4.callee ?? e$4.object ?? e$4.tag ?? e$4.argument ?? e$4.expression;
}
function Lr$4(e$4) {
	if (e$4.expressions) return ["expressions", 0];
	if (e$4.left) return ["left"];
	if (e$4.test) return ["test"];
	if (e$4.object) return ["object"];
	if (e$4.callee) return ["callee"];
	if (e$4.tag) return ["tag"];
	if (e$4.argument) return ["argument"];
	if (e$4.expression) return ["expression"];
	throw new Error("Unexpected node has no left side.");
}
var yu$2 = R$5([
	"ExportDefaultDeclaration",
	"DeclareExportDeclaration",
	"ExportNamedDeclaration",
	"ExportAllDeclaration",
	"DeclareExportAllDeclaration"
]), U$3 = R$5(["ArrayExpression"]), ue$3 = R$5(["ObjectExpression"]);
function fu$2(e$4) {
	return e$4.type === "LogicalExpression" && e$4.operator === "??";
}
function ye$3(e$4) {
	return e$4.type === "NumericLiteral" || e$4.type === "Literal" && typeof e$4.value == "number";
}
function Du$2(e$4) {
	return e$4.type === "BooleanLiteral" || e$4.type === "Literal" && typeof e$4.value == "boolean";
}
function Rn$3(e$4) {
	return e$4.type === "UnaryExpression" && (e$4.operator === "+" || e$4.operator === "-") && ye$3(e$4.argument);
}
function K$4(e$4) {
	return !!(e$4 && (e$4.type === "StringLiteral" || e$4.type === "Literal" && typeof e$4.value == "string"));
}
function Jn$4(e$4) {
	return e$4.type === "RegExpLiteral" || e$4.type === "Literal" && !!e$4.regex;
}
var wr$3 = R$5([
	"Literal",
	"BooleanLiteral",
	"BigIntLiteral",
	"DirectiveLiteral",
	"NullLiteral",
	"NumericLiteral",
	"RegExpLiteral",
	"StringLiteral"
]), Po$1 = R$5([
	"Identifier",
	"ThisExpression",
	"Super",
	"PrivateName",
	"PrivateIdentifier"
]), Re$5 = R$5([
	"ObjectTypeAnnotation",
	"TSTypeLiteral",
	"TSMappedType"
]), Rt$4 = R$5(["FunctionExpression", "ArrowFunctionExpression"]);
function ko$1(e$4) {
	return e$4.type === "FunctionExpression" || e$4.type === "ArrowFunctionExpression" && e$4.body.type === "BlockStatement";
}
function _n$4(e$4) {
	return w$2(e$4) && e$4.callee.type === "Identifier" && [
		"async",
		"inject",
		"fakeAsync",
		"waitForAsync"
	].includes(e$4.callee.name);
}
var Y$4 = R$5(["JSXElement", "JSXFragment"]);
function bt$5(e$4) {
	return e$4.method && e$4.kind === "init" || e$4.kind === "get" || e$4.kind === "set";
}
function Or$4(e$4) {
	return (e$4.type === "ObjectTypeProperty" || e$4.type === "ObjectTypeInternalSlot") && !e$4.static && !e$4.method && e$4.kind !== "get" && e$4.kind !== "set" && e$4.value.type === "FunctionTypeAnnotation";
}
function Eu$1(e$4) {
	return (e$4.type === "TypeAnnotation" || e$4.type === "TSTypeAnnotation") && e$4.typeAnnotation.type === "FunctionTypeAnnotation" && !e$4.static && !Bt$4(e$4, e$4.typeAnnotation);
}
var Fe$2 = R$5([
	"BinaryExpression",
	"LogicalExpression",
	"NGPipeExpression"
]);
function dt$2(e$4) {
	return G$4(e$4) || e$4.type === "BindExpression" && !!e$4.object;
}
var Io$3 = R$5([
	"TSThisType",
	"NullLiteralTypeAnnotation",
	"BooleanLiteralTypeAnnotation",
	"StringLiteralTypeAnnotation",
	"BigIntLiteralTypeAnnotation",
	"NumberLiteralTypeAnnotation",
	"TSLiteralType",
	"TSTemplateLiteralType"
]);
function Nt$4(e$4) {
	return kr$4(e$4) || Pr$5(e$4) || Io$3(e$4) || (e$4.type === "GenericTypeAnnotation" || e$4.type === "TSTypeReference") && !e$4.typeParameters && !e$4.typeArguments;
}
function Lo$1(e$4) {
	return e$4.type === "Identifier" && (e$4.name === "beforeEach" || e$4.name === "beforeAll" || e$4.name === "afterEach" || e$4.name === "afterAll");
}
var wo$2 = [
	"it",
	"it.only",
	"it.skip",
	"describe",
	"describe.only",
	"describe.skip",
	"test",
	"test.only",
	"test.skip",
	"test.step",
	"test.describe",
	"test.describe.only",
	"test.describe.parallel",
	"test.describe.parallel.only",
	"test.describe.serial",
	"test.describe.serial.only",
	"skip",
	"xit",
	"xdescribe",
	"xtest",
	"fit",
	"fdescribe",
	"ftest"
];
function Oo$3(e$4) {
	return pu$1(e$4, wo$2);
}
function Pt$4(e$4, t$13) {
	if ((e$4 == null ? void 0 : e$4.type) !== "CallExpression" || e$4.optional) return !1;
	let r$12 = le$5(e$4);
	if (r$12.length === 1) {
		if (_n$4(e$4) && Pt$4(t$13)) return Rt$4(r$12[0]);
		if (Lo$1(e$4.callee)) return _n$4(r$12[0]);
	} else if ((r$12.length === 2 || r$12.length === 3) && (r$12[0].type === "TemplateLiteral" || K$4(r$12[0])) && Oo$3(e$4.callee)) return r$12[2] && !ye$3(r$12[2]) ? !1 : (r$12.length === 2 ? Rt$4(r$12[1]) : ko$1(r$12[1]) && Q$3(r$12[1]).length <= 1) || _n$4(r$12[1]);
	return !1;
}
var Fu$2 = (e$4) => (t$13) => ((t$13 == null ? void 0 : t$13.type) === "ChainExpression" && (t$13 = t$13.expression), e$4(t$13)), w$2 = Fu$2(R$5(["CallExpression", "OptionalCallExpression"])), G$4 = Fu$2(R$5(["MemberExpression", "OptionalMemberExpression"]));
function Nn$5(e$4, t$13 = 5) {
	return Cu$1(e$4, t$13) <= t$13;
}
function Cu$1(e$4, t$13) {
	let r$12 = 0;
	for (let n$8 in e$4) {
		let s$8 = e$4[n$8];
		if (s$8 && typeof s$8 == "object" && typeof s$8.type == "string" && (r$12++, r$12 += Cu$1(s$8, t$13 - r$12)), r$12 > t$13) return r$12;
	}
	return r$12;
}
var _o$1 = .25;
function ir$4(e$4, t$13) {
	let { printWidth: r$12 } = t$13;
	if (d$13(e$4)) return !1;
	let n$8 = r$12 * _o$1;
	if (e$4.type === "ThisExpression" || e$4.type === "Identifier" && e$4.name.length <= n$8 || Rn$3(e$4) && !d$13(e$4.argument)) return !0;
	let s$8 = e$4.type === "Literal" && "regex" in e$4 && e$4.regex.pattern || e$4.type === "RegExpLiteral" && e$4.pattern;
	return s$8 ? s$8.length <= n$8 : K$4(e$4) ? ut$3(ae$4(e$4), t$13).length <= n$8 : e$4.type === "TemplateLiteral" ? e$4.expressions.length === 0 && e$4.quasis[0].value.raw.length <= n$8 && !e$4.quasis[0].value.raw.includes(`
`) : e$4.type === "UnaryExpression" ? ir$4(e$4.argument, { printWidth: r$12 }) : e$4.type === "CallExpression" && e$4.arguments.length === 0 && e$4.callee.type === "Identifier" ? e$4.callee.name.length <= n$8 - 2 : wr$3(e$4);
}
function de$5(e$4, t$13) {
	return Y$4(t$13) ? kt$4(t$13) : d$13(t$13, h$2.Leading, (r$12) => ee$3(e$4, P$4(r$12)));
}
function cu$2(e$4) {
	return e$4.quasis.some((t$13) => t$13.value.raw.includes(`
`));
}
function _r$4(e$4, t$13) {
	return (e$4.type === "TemplateLiteral" && cu$2(e$4) || e$4.type === "TaggedTemplateExpression" && cu$2(e$4.quasi)) && !ee$3(t$13, j$5(e$4), { backwards: !0 });
}
function Mr$3(e$4) {
	if (!d$13(e$4)) return !1;
	let t$13 = v$3(!1, Ve$4(e$4, h$2.Dangling), -1);
	return t$13 && !te$4(t$13);
}
function Au$3(e$4) {
	if (e$4.length <= 1) return !1;
	let t$13 = 0;
	for (let r$12 of e$4) if (Rt$4(r$12)) {
		if (t$13 += 1, t$13 > 1) return !0;
	} else if (w$2(r$12)) {
		for (let n$8 of le$5(r$12)) if (Rt$4(n$8)) return !0;
	}
	return !1;
}
function vr$3(e$4) {
	let { node: t$13, parent: r$12, key: n$8 } = e$4;
	return n$8 === "callee" && w$2(t$13) && w$2(r$12) && r$12.arguments.length > 0 && t$13.arguments.length > r$12.arguments.length;
}
var Mo$2 = new Set([
	"!",
	"-",
	"+",
	"~"
]);
function we$2(e$4, t$13 = 2) {
	if (t$13 <= 0) return !1;
	if (e$4.type === "ChainExpression" || e$4.type === "TSNonNullExpression") return we$2(e$4.expression, t$13);
	let r$12 = (n$8) => we$2(n$8, t$13 - 1);
	if (Jn$4(e$4)) return st$4(e$4.pattern ?? e$4.regex.pattern) <= 5;
	if (wr$3(e$4) || Po$1(e$4) || e$4.type === "ArgumentPlaceholder") return !0;
	if (e$4.type === "TemplateLiteral") return e$4.quasis.every((n$8) => !n$8.value.raw.includes(`
`)) && e$4.expressions.every(r$12);
	if (ue$3(e$4)) return e$4.properties.every((n$8) => !n$8.computed && (n$8.shorthand || n$8.value && r$12(n$8.value)));
	if (U$3(e$4)) return e$4.elements.every((n$8) => n$8 === null || r$12(n$8));
	if (yt$3(e$4)) {
		if (e$4.type === "ImportExpression" || we$2(e$4.callee, t$13)) {
			let n$8 = le$5(e$4);
			return n$8.length <= t$13 && n$8.every(r$12);
		}
		return !1;
	}
	return G$4(e$4) ? we$2(e$4.object, t$13) && we$2(e$4.property, t$13) : e$4.type === "UnaryExpression" && Mo$2.has(e$4.operator) || e$4.type === "UpdateExpression" ? we$2(e$4.argument, t$13) : !1;
}
function du$1(e$4) {
	return e$4;
}
function ce$3(e$4, t$13 = "es5") {
	return e$4.trailingComma === "es5" && t$13 === "es5" || e$4.trailingComma === "all" && (t$13 === "all" || t$13 === "es5");
}
function pe$5(e$4, t$13) {
	switch (e$4.type) {
		case "BinaryExpression":
		case "LogicalExpression":
		case "AssignmentExpression":
		case "NGPipeExpression": return pe$5(e$4.left, t$13);
		case "MemberExpression":
		case "OptionalMemberExpression": return pe$5(e$4.object, t$13);
		case "TaggedTemplateExpression": return e$4.tag.type === "FunctionExpression" ? !1 : pe$5(e$4.tag, t$13);
		case "CallExpression":
		case "OptionalCallExpression": return e$4.callee.type === "FunctionExpression" ? !1 : pe$5(e$4.callee, t$13);
		case "ConditionalExpression": return pe$5(e$4.test, t$13);
		case "UpdateExpression": return !e$4.prefix && pe$5(e$4.argument, t$13);
		case "BindExpression": return e$4.object && pe$5(e$4.object, t$13);
		case "SequenceExpression": return pe$5(e$4.expressions[0], t$13);
		case "ChainExpression":
		case "TSSatisfiesExpression":
		case "TSAsExpression":
		case "TSNonNullExpression":
		case "AsExpression":
		case "AsConstExpression":
		case "SatisfiesExpression": return pe$5(e$4.expression, t$13);
		default: return t$13(e$4);
	}
}
var lu = {
	"==": !0,
	"!=": !0,
	"===": !0,
	"!==": !0
}, Ir$5 = {
	"*": !0,
	"/": !0,
	"%": !0
}, jn$4 = {
	">>": !0,
	">>>": !0,
	"<<": !0
};
function ar$4(e$4, t$13) {
	return !(sr$4(t$13) !== sr$4(e$4) || e$4 === "**" || lu[e$4] && lu[t$13] || t$13 === "%" && Ir$5[e$4] || e$4 === "%" && Ir$5[t$13] || t$13 !== e$4 && Ir$5[t$13] && Ir$5[e$4] || jn$4[e$4] && jn$4[t$13]);
}
var vo$3 = new Map([
	["|>"],
	["??"],
	["||"],
	["&&"],
	["|"],
	["^"],
	["&"],
	[
		"==",
		"===",
		"!=",
		"!=="
	],
	[
		"<",
		">",
		"<=",
		">=",
		"in",
		"instanceof"
	],
	[
		">>",
		"<<",
		">>>"
	],
	["+", "-"],
	[
		"*",
		"/",
		"%"
	],
	["**"]
].flatMap((e$4, t$13) => e$4.map((r$12) => [r$12, t$13])));
function sr$4(e$4) {
	return vo$3.get(e$4);
}
function Tu$2(e$4) {
	return !!jn$4[e$4] || e$4 === "|" || e$4 === "^" || e$4 === "&";
}
function xu$3(e$4) {
	var r$12;
	if (e$4.rest) return !0;
	let t$13 = Q$3(e$4);
	return ((r$12 = v$3(!1, t$13, -1)) == null ? void 0 : r$12.type) === "RestElement";
}
var Mn$3 = /* @__PURE__ */ new WeakMap();
function Q$3(e$4) {
	if (Mn$3.has(e$4)) return Mn$3.get(e$4);
	let t$13 = [];
	return e$4.this && t$13.push(e$4.this), Array.isArray(e$4.parameters) ? t$13.push(...e$4.parameters) : Array.isArray(e$4.params) && t$13.push(...e$4.params), e$4.rest && t$13.push(e$4.rest), Mn$3.set(e$4, t$13), t$13;
}
function hu$2(e$4, t$13) {
	let { node: r$12 } = e$4, n$8 = 0, s$8 = (u$14) => t$13(u$14, n$8++);
	r$12.this && e$4.call(s$8, "this"), Array.isArray(r$12.parameters) ? e$4.each(s$8, "parameters") : Array.isArray(r$12.params) && e$4.each(s$8, "params"), r$12.rest && e$4.call(s$8, "rest");
}
var vn$3 = /* @__PURE__ */ new WeakMap();
function le$5(e$4) {
	if (vn$3.has(e$4)) return vn$3.get(e$4);
	if (e$4.type === "ChainExpression") return le$5(e$4.expression);
	let t$13 = e$4.arguments;
	return (e$4.type === "ImportExpression" || e$4.type === "TSImportType") && (t$13 = [e$4.type === "ImportExpression" ? e$4.source : e$4.argument], e$4.options && t$13.push(e$4.options)), vn$3.set(e$4, t$13), t$13;
}
function Gt$3(e$4, t$13) {
	let { node: r$12 } = e$4;
	if (r$12.type === "ChainExpression") return e$4.call(() => Gt$3(e$4, t$13), "expression");
	r$12.type === "ImportExpression" || r$12.type === "TSImportType" ? (e$4.call((n$8) => t$13(n$8, 0), r$12.type === "ImportExpression" ? "source" : "argument"), r$12.options && e$4.call((n$8) => t$13(n$8, 1), "options")) : e$4.each(t$13, "arguments");
}
function Gn$5(e$4, t$13) {
	let r$12 = [];
	if (e$4.type === "ChainExpression" && (e$4 = e$4.expression, r$12.push("expression")), e$4.type === "ImportExpression" || e$4.type === "TSImportType") {
		if (t$13 === 0 || t$13 === (e$4.options ? -2 : -1)) return [...r$12, e$4.type === "ImportExpression" ? "source" : "argument"];
		if (e$4.options && (t$13 === 1 || t$13 === -1)) return [...r$12, "options"];
		throw new RangeError("Invalid argument index");
	}
	if (t$13 < 0 && (t$13 = e$4.arguments.length + t$13), t$13 < 0 || t$13 >= e$4.arguments.length) throw new RangeError("Invalid argument index");
	return [
		...r$12,
		"arguments",
		t$13
	];
}
function or$4(e$4) {
	return e$4.value.trim() === "prettier-ignore" && !e$4.unignore;
}
function kt$4(e$4) {
	return (e$4 == null ? void 0 : e$4.prettierIgnore) || d$13(e$4, h$2.PrettierIgnore);
}
var h$2 = {
	Leading: 2,
	Trailing: 4,
	Dangling: 8,
	Block: 16,
	Line: 32,
	PrettierIgnore: 64,
	First: 128,
	Last: 256
}, gu$2 = (e$4, t$13) => {
	if (typeof e$4 == "function" && (t$13 = e$4, e$4 = 0), e$4 || t$13) return (r$12, n$8, s$8) => !(e$4 & h$2.Leading && !r$12.leading || e$4 & h$2.Trailing && !r$12.trailing || e$4 & h$2.Dangling && (r$12.leading || r$12.trailing) || e$4 & h$2.Block && !te$4(r$12) || e$4 & h$2.Line && !At$6(r$12) || e$4 & h$2.First && n$8 !== 0 || e$4 & h$2.Last && n$8 !== s$8.length - 1 || e$4 & h$2.PrettierIgnore && !or$4(r$12) || t$13 && !t$13(r$12));
};
function d$13(e$4, t$13, r$12) {
	if (!O$2(e$4 == null ? void 0 : e$4.comments)) return !1;
	let n$8 = gu$2(t$13, r$12);
	return n$8 ? e$4.comments.some(n$8) : !0;
}
function Ve$4(e$4, t$13, r$12) {
	if (!Array.isArray(e$4 == null ? void 0 : e$4.comments)) return [];
	let n$8 = gu$2(t$13, r$12);
	return n$8 ? e$4.comments.filter(n$8) : e$4.comments;
}
var me$4 = (e$4, { originalText: t$13 }) => vt$4(t$13, P$4(e$4));
function yt$3(e$4) {
	return w$2(e$4) || e$4.type === "NewExpression" || e$4.type === "ImportExpression";
}
function Te$5(e$4) {
	return e$4 && (e$4.type === "ObjectProperty" || e$4.type === "Property" && !bt$5(e$4));
}
var xe$3 = R$5([
	"TSAsExpression",
	"TSSatisfiesExpression",
	"AsExpression",
	"AsConstExpression",
	"SatisfiesExpression"
]), Oe$4 = R$5(["TSUnionType", "UnionTypeAnnotation"]), qt$4 = R$5(["TSIntersectionType", "IntersectionTypeAnnotation"]), Je$5 = R$5(["TSConditionalType", "ConditionalTypeAnnotation"]);
var jo$2 = new Set([
	"range",
	"raw",
	"comments",
	"leadingComments",
	"trailingComments",
	"innerComments",
	"extra",
	"start",
	"end",
	"loc",
	"flags",
	"errors",
	"tokens"
]), Wt$3 = (e$4) => {
	for (let t$13 of e$4.quasis) delete t$13.value;
};
function Su$2(e$4, t$13) {
	var n$8;
	if (e$4.type === "Program" && delete t$13.sourceType, (e$4.type === "BigIntLiteral" || e$4.type === "BigIntLiteralTypeAnnotation") && e$4.value && (t$13.value = e$4.value.toLowerCase()), (e$4.type === "BigIntLiteral" || e$4.type === "Literal") && e$4.bigint && (t$13.bigint = e$4.bigint.toLowerCase()), e$4.type === "EmptyStatement" || e$4.type === "JSXText" || e$4.type === "JSXExpressionContainer" && (e$4.expression.type === "Literal" || e$4.expression.type === "StringLiteral") && e$4.expression.value === " ") return null;
	if ((e$4.type === "Property" || e$4.type === "ObjectProperty" || e$4.type === "MethodDefinition" || e$4.type === "ClassProperty" || e$4.type === "ClassMethod" || e$4.type === "PropertyDefinition" || e$4.type === "TSDeclareMethod" || e$4.type === "TSPropertySignature" || e$4.type === "ObjectTypeProperty" || e$4.type === "ImportAttribute") && e$4.key && !e$4.computed) {
		let { key: s$8 } = e$4;
		K$4(s$8) || ye$3(s$8) ? t$13.key = String(s$8.value) : s$8.type === "Identifier" && (t$13.key = s$8.name);
	}
	if (e$4.type === "JSXElement" && e$4.openingElement.name.name === "style" && e$4.openingElement.attributes.some((s$8) => s$8.type === "JSXAttribute" && s$8.name.name === "jsx")) for (let { type: s$8, expression: u$14 } of t$13.children) s$8 === "JSXExpressionContainer" && u$14.type === "TemplateLiteral" && Wt$3(u$14);
	e$4.type === "JSXAttribute" && e$4.name.name === "css" && e$4.value.type === "JSXExpressionContainer" && e$4.value.expression.type === "TemplateLiteral" && Wt$3(t$13.value.expression), e$4.type === "JSXAttribute" && ((n$8 = e$4.value) == null ? void 0 : n$8.type) === "Literal" && /["']|&quot;|&apos;/u.test(e$4.value.value) && (t$13.value.value = X$5(!1, e$4.value.value, /["']|&quot;|&apos;/gu, "\""));
	let r$12 = e$4.expression || e$4.callee;
	if (e$4.type === "Decorator" && r$12.type === "CallExpression" && r$12.callee.name === "Component" && r$12.arguments.length === 1) {
		let s$8 = e$4.expression.arguments[0].properties;
		for (let [u$14, i$18] of t$13.expression.arguments[0].properties.entries()) switch (s$8[u$14].key.name) {
			case "styles":
				U$3(i$18.value) && Wt$3(i$18.value.elements[0]);
				break;
			case "template":
				i$18.value.type === "TemplateLiteral" && Wt$3(i$18.value);
				break;
		}
	}
	e$4.type === "TaggedTemplateExpression" && (e$4.tag.type === "MemberExpression" || e$4.tag.type === "Identifier" && (e$4.tag.name === "gql" || e$4.tag.name === "graphql" || e$4.tag.name === "css" || e$4.tag.name === "md" || e$4.tag.name === "markdown" || e$4.tag.name === "html") || e$4.tag.type === "CallExpression") && Wt$3(t$13.quasi), e$4.type === "TemplateLiteral" && Wt$3(t$13), e$4.type === "ChainExpression" && e$4.expression.type === "TSNonNullExpression" && (t$13.type = "TSNonNullExpression", t$13.expression.type = "ChainExpression");
}
Su$2.ignoredProperties = jo$2;
var Bu$2 = Su$2;
var Ne$4 = "string", ge$4 = "array", it$5 = "cursor", $e$4 = "indent", Ke$3 = "align", Qe$3 = "trim", fe$3 = "group", _e$5 = "fill", he$6 = "if-break", ze$5 = "indent-if-break", Ze$5 = "line-suffix", Ge$4 = "line-suffix-boundary", oe$4 = "line", Se$4 = "label", Me$4 = "break-parent", jr$4 = new Set([
	it$5,
	$e$4,
	Ke$3,
	Qe$3,
	fe$3,
	_e$5,
	he$6,
	ze$5,
	Ze$5,
	Ge$4,
	oe$4,
	Se$4,
	Me$4
]);
function Ro$4(e$4) {
	if (typeof e$4 == "string") return Ne$4;
	if (Array.isArray(e$4)) return ge$4;
	if (!e$4) return;
	let { type: t$13 } = e$4;
	if (jr$4.has(t$13)) return t$13;
}
var Be$2 = Ro$4;
var Jo$2 = (e$4) => new Intl.ListFormat("en-US", { type: "disjunction" }).format(e$4);
function No$2(e$4) {
	let t$13 = e$4 === null ? "null" : typeof e$4;
	if (t$13 !== "string" && t$13 !== "object") return `Unexpected doc '${t$13}', 
Expected it to be 'string' or 'object'.`;
	if (Be$2(e$4)) throw new Error("doc is valid.");
	let r$12 = Object.prototype.toString.call(e$4);
	if (r$12 !== "[object Object]") return `Unexpected doc '${r$12}'.`;
	let n$8 = Jo$2([...jr$4].map((s$8) => `'${s$8}'`));
	return `Unexpected doc.type '${e$4.type}'.
Expected it to be ${n$8}.`;
}
var qn$4 = class extends Error {
	name = "InvalidDocError";
	constructor(t$13) {
		super(No$2(t$13)), this.doc = t$13;
	}
}, Tt$5 = qn$4;
var bu$1 = {};
function Go$2(e$4, t$13, r$12, n$8) {
	let s$8 = [e$4];
	for (; s$8.length > 0;) {
		let u$14 = s$8.pop();
		if (u$14 === bu$1) {
			r$12(s$8.pop());
			continue;
		}
		r$12 && s$8.push(u$14, bu$1);
		let i$18 = Be$2(u$14);
		if (!i$18) throw new Tt$5(u$14);
		if ((t$13 == null ? void 0 : t$13(u$14)) !== !1) switch (i$18) {
			case ge$4:
			case _e$5: {
				let a$13 = i$18 === ge$4 ? u$14 : u$14.parts;
				for (let o$9 = a$13.length, p$2 = o$9 - 1; p$2 >= 0; --p$2) s$8.push(a$13[p$2]);
				break;
			}
			case he$6:
				s$8.push(u$14.flatContents, u$14.breakContents);
				break;
			case fe$3:
				if (n$8 && u$14.expandedStates) for (let a$13 = u$14.expandedStates.length, o$9 = a$13 - 1; o$9 >= 0; --o$9) s$8.push(u$14.expandedStates[o$9]);
				else s$8.push(u$14.contents);
				break;
			case Ke$3:
			case $e$4:
			case ze$5:
			case Se$4:
			case Ze$5:
				s$8.push(u$14.contents);
				break;
			case Ne$4:
			case it$5:
			case Qe$3:
			case Ge$4:
			case oe$4:
			case Me$4: break;
			default: throw new Tt$5(u$14);
		}
	}
}
var pr$3 = Go$2;
function ft$3(e$4, t$13) {
	if (typeof e$4 == "string") return t$13(e$4);
	let r$12 = /* @__PURE__ */ new Map();
	return n$8(e$4);
	function n$8(u$14) {
		if (r$12.has(u$14)) return r$12.get(u$14);
		let i$18 = s$8(u$14);
		return r$12.set(u$14, i$18), i$18;
	}
	function s$8(u$14) {
		switch (Be$2(u$14)) {
			case ge$4: return t$13(u$14.map(n$8));
			case _e$5: return t$13({
				...u$14,
				parts: u$14.parts.map(n$8)
			});
			case he$6: return t$13({
				...u$14,
				breakContents: n$8(u$14.breakContents),
				flatContents: n$8(u$14.flatContents)
			});
			case fe$3: {
				let { expandedStates: i$18, contents: a$13 } = u$14;
				return i$18 ? (i$18 = i$18.map(n$8), a$13 = i$18[0]) : a$13 = n$8(a$13), t$13({
					...u$14,
					contents: a$13,
					expandedStates: i$18
				});
			}
			case Ke$3:
			case $e$4:
			case ze$5:
			case Se$4:
			case Ze$5: return t$13({
				...u$14,
				contents: n$8(u$14.contents)
			});
			case Ne$4:
			case it$5:
			case Qe$3:
			case Ge$4:
			case oe$4:
			case Me$4: return t$13(u$14);
			default: throw new Tt$5(u$14);
		}
	}
}
function ku$2(e$4, t$13, r$12) {
	let n$8 = r$12, s$8 = !1;
	function u$14(i$18) {
		if (s$8) return !1;
		let a$13 = t$13(i$18);
		a$13 !== void 0 && (s$8 = !0, n$8 = a$13);
	}
	return pr$3(e$4, u$14), n$8;
}
function qo$2(e$4) {
	if (e$4.type === fe$3 && e$4.break || e$4.type === oe$4 && e$4.hard || e$4.type === Me$4) return !0;
}
function re$4(e$4) {
	return ku$2(e$4, qo$2, !1);
}
function Pu$2(e$4) {
	if (e$4.length > 0) {
		let t$13 = v$3(!1, e$4, -1);
		!t$13.expandedStates && !t$13.break && (t$13.break = "propagated");
	}
	return null;
}
function Iu$1(e$4) {
	let t$13 = /* @__PURE__ */ new Set(), r$12 = [];
	function n$8(u$14) {
		if (u$14.type === Me$4 && Pu$2(r$12), u$14.type === fe$3) {
			if (r$12.push(u$14), t$13.has(u$14)) return !1;
			t$13.add(u$14);
		}
	}
	function s$8(u$14) {
		u$14.type === fe$3 && r$12.pop().break && Pu$2(r$12);
	}
	pr$3(e$4, n$8, s$8, !0);
}
function Wo$3(e$4) {
	return e$4.type === oe$4 && !e$4.hard ? e$4.soft ? "" : " " : e$4.type === he$6 ? e$4.flatContents : e$4;
}
function cr$4(e$4) {
	return ft$3(e$4, Wo$3);
}
function Uo$2(e$4) {
	switch (Be$2(e$4)) {
		case _e$5:
			if (e$4.parts.every((t$13) => t$13 === "")) return "";
			break;
		case fe$3:
			if (!e$4.contents && !e$4.id && !e$4.break && !e$4.expandedStates) return "";
			if (e$4.contents.type === fe$3 && e$4.contents.id === e$4.id && e$4.contents.break === e$4.break && e$4.contents.expandedStates === e$4.expandedStates) return e$4.contents;
			break;
		case Ke$3:
		case $e$4:
		case ze$5:
		case Ze$5:
			if (!e$4.contents) return "";
			break;
		case he$6:
			if (!e$4.flatContents && !e$4.breakContents) return "";
			break;
		case ge$4: {
			let t$13 = [];
			for (let r$12 of e$4) {
				if (!r$12) continue;
				let [n$8, ...s$8] = Array.isArray(r$12) ? r$12 : [r$12];
				typeof n$8 == "string" && typeof v$3(!1, t$13, -1) == "string" ? t$13[t$13.length - 1] += n$8 : t$13.push(n$8), t$13.push(...s$8);
			}
			return t$13.length === 0 ? "" : t$13.length === 1 ? t$13[0] : t$13;
		}
		case Ne$4:
		case it$5:
		case Qe$3:
		case Ge$4:
		case oe$4:
		case Se$4:
		case Me$4: break;
		default: throw new Tt$5(e$4);
	}
	return e$4;
}
function Ut$3(e$4) {
	return ft$3(e$4, (t$13) => Uo$2(t$13));
}
function ve$4(e$4, t$13 = Rr$4) {
	return ft$3(e$4, (r$12) => typeof r$12 == "string" ? b$6(t$13, r$12.split(`
`)) : r$12);
}
function Xo$3(e$4) {
	if (e$4.type === oe$4) return !0;
}
function Lu$1(e$4) {
	return ku$2(e$4, Xo$3, !1);
}
function lr$4(e$4, t$13) {
	return e$4.type === Se$4 ? {
		...e$4,
		contents: t$13(e$4.contents)
	} : t$13(e$4);
}
function wu$1(e$4) {
	let t$13 = !0;
	return pr$3(e$4, (r$12) => {
		switch (Be$2(r$12)) {
			case Ne$4: if (r$12 === "") break;
			case Qe$3:
			case Ge$4:
			case oe$4:
			case Me$4: return t$13 = !1, !1;
		}
	}), t$13;
}
var Wn$4 = () => {}, et$4 = Wn$4, Un$5 = Wn$4, Ou$3 = Wn$4;
function D$3(e$4) {
	return et$4(e$4), {
		type: $e$4,
		contents: e$4
	};
}
function be$4(e$4, t$13) {
	return et$4(t$13), {
		type: Ke$3,
		contents: t$13,
		n: e$4
	};
}
function l$9(e$4, t$13 = {}) {
	return et$4(e$4), Un$5(t$13.expandedStates, !0), {
		type: fe$3,
		id: t$13.id,
		contents: e$4,
		break: !!t$13.shouldBreak,
		expandedStates: t$13.expandedStates
	};
}
function _u$3(e$4) {
	return be$4(Number.NEGATIVE_INFINITY, e$4);
}
function Jr$4(e$4) {
	return be$4(-1, e$4);
}
function tt$4(e$4, t$13) {
	return l$9(e$4[0], {
		...t$13,
		expandedStates: e$4
	});
}
function Nr$5(e$4) {
	return Ou$3(e$4), {
		type: _e$5,
		parts: e$4
	};
}
function S$3(e$4, t$13 = "", r$12 = {}) {
	return et$4(e$4), t$13 !== "" && et$4(t$13), {
		type: he$6,
		breakContents: e$4,
		flatContents: t$13,
		groupId: r$12.groupId
	};
}
function xt$3(e$4, t$13) {
	return et$4(e$4), {
		type: ze$5,
		contents: e$4,
		groupId: t$13.groupId,
		negate: t$13.negate
	};
}
function Xn$4(e$4) {
	return et$4(e$4), {
		type: Ze$5,
		contents: e$4
	};
}
var je$3 = { type: Ge$4 }, Ce$5 = { type: Me$4 };
var Yn$4 = {
	type: oe$4,
	hard: !0
}, Yo$2 = {
	type: oe$4,
	hard: !0,
	literal: !0
}, x$2 = { type: oe$4 }, E$2 = {
	type: oe$4,
	soft: !0
}, F$3 = [Yn$4, Ce$5], Rr$4 = [Yo$2, Ce$5], mr$4 = { type: it$5 };
function b$6(e$4, t$13) {
	et$4(e$4), Un$5(t$13);
	let r$12 = [];
	for (let n$8 = 0; n$8 < t$13.length; n$8++) n$8 !== 0 && r$12.push(e$4), r$12.push(t$13[n$8]);
	return r$12;
}
function Mu$1(e$4, t$13, r$12) {
	et$4(e$4);
	let n$8 = e$4;
	if (t$13 > 0) {
		for (let s$8 = 0; s$8 < Math.floor(t$13 / r$12); ++s$8) n$8 = D$3(n$8);
		n$8 = be$4(t$13 % r$12, n$8), n$8 = be$4(Number.NEGATIVE_INFINITY, n$8);
	}
	return n$8;
}
function at$3(e$4, t$13) {
	return et$4(t$13), e$4 ? {
		type: Se$4,
		label: e$4,
		contents: t$13
	} : t$13;
}
function Ho$2(e$4) {
	if (!te$4(e$4)) return !1;
	let t$13 = `*${e$4.value}*`.split(`
`);
	return t$13.length > 1 && t$13.every((r$12) => r$12.trimStart()[0] === "*");
}
var Hn$3 = /* @__PURE__ */ new WeakMap();
function Vo$3(e$4) {
	return Hn$3.has(e$4) || Hn$3.set(e$4, Ho$2(e$4)), Hn$3.get(e$4);
}
var vu$2 = Vo$3;
function ju$2(e$4, t$13) {
	let r$12 = e$4.node;
	if (At$6(r$12)) return t$13.originalText.slice(j$5(r$12), P$4(r$12)).trimEnd();
	if (vu$2(r$12)) return $o$2(r$12);
	if (te$4(r$12)) return [
		"/*",
		ve$4(r$12.value),
		"*/"
	];
	throw new Error("Not a comment: " + JSON.stringify(r$12));
}
function $o$2(e$4) {
	let t$13 = e$4.value.split(`
`);
	return [
		"/*",
		b$6(F$3, t$13.map((r$12, n$8) => n$8 === 0 ? r$12.trimEnd() : " " + (n$8 < t$13.length - 1 ? r$12.trim() : r$12.trimStart()))),
		"*/"
	];
}
var ts$2 = {};
xr$3(ts$2, {
	endOfLine: () => rp,
	ownLine: () => tp,
	remaining: () => np
});
function Ko$4(e$4) {
	let t$13 = e$4.type || e$4.kind || "(unknown type)", r$12 = String(e$4.name || e$4.id && (typeof e$4.id == "object" ? e$4.id.name : e$4.id) || e$4.key && (typeof e$4.key == "object" ? e$4.key.name : e$4.key) || e$4.value && (typeof e$4.value == "object" ? "" : String(e$4.value)) || e$4.operator || "");
	return r$12.length > 20 && (r$12 = r$12.slice(0, 19) + "…"), t$13 + (r$12 ? " " + r$12 : "");
}
function Vn$4(e$4, t$13) {
	(e$4.comments ?? (e$4.comments = [])).push(t$13), t$13.printed = !1, t$13.nodeDescription = Ko$4(e$4);
}
function De$5(e$4, t$13) {
	t$13.leading = !0, t$13.trailing = !1, Vn$4(e$4, t$13);
}
function Pe$5(e$4, t$13, r$12) {
	t$13.leading = !1, t$13.trailing = !1, r$12 && (t$13.marker = r$12), Vn$4(e$4, t$13);
}
function z$4(e$4, t$13) {
	t$13.leading = !1, t$13.trailing = !0, Vn$4(e$4, t$13);
}
function Qo$3(e$4, t$13) {
	let r$12 = null, n$8 = t$13;
	for (; n$8 !== r$12;) r$12 = n$8, n$8 = Ye$5(e$4, n$8), n$8 = _t$4(e$4, n$8), n$8 = Mt$3(e$4, n$8), n$8 = He$6(e$4, n$8);
	return n$8;
}
var ot$5 = Qo$3;
function zo$3(e$4, t$13) {
	let r$12 = ot$5(e$4, t$13);
	return r$12 === !1 ? "" : e$4.charAt(r$12);
}
var ke$5 = zo$3;
function Zo$2(e$4, t$13, r$12) {
	for (let n$8 = t$13; n$8 < r$12; ++n$8) if (e$4.charAt(n$8) === `
`) return !0;
	return !1;
}
var ie$5 = Zo$2;
var $n$4 = /* @__PURE__ */ new WeakMap();
function ep(e$4) {
	return $n$4.has(e$4) || $n$4.set(e$4, te$4(e$4) && e$4.value[0] === "*" && /@(?:type|satisfies)\b/u.test(e$4.value)), $n$4.get(e$4);
}
var Gr$4 = ep;
var Ru$2 = (e$4, t$13) => At$6(e$4) || !ie$5(t$13, j$5(e$4), P$4(e$4));
function tp(e$4) {
	return [
		Yu$2,
		Nu$2,
		Wu$2,
		fp,
		up,
		Qn$4,
		zn$5,
		Ju$1,
		Gu$1,
		Cp$1,
		Ep$2,
		es$2,
		Xu$2,
		Ap$1,
		qu$3,
		Uu$1,
		Zn$4,
		ip,
		Bp$1,
		Hu$1
	].some((t$13) => t$13(e$4));
}
function rp(e$4) {
	return [
		sp,
		Wu$2,
		Nu$2,
		Xu$2,
		Qn$4,
		zn$5,
		Ju$1,
		Gu$1,
		Uu$1,
		Dp$1,
		Fp$1,
		es$2,
		xp$1,
		Zn$4,
		gp$1,
		Sp$1,
		bp$1,
		Hu$1
	].some((t$13) => t$13(e$4));
}
function np(e$4) {
	return [
		Yu$2,
		Qn$4,
		zn$5,
		ap,
		yp,
		qu$3,
		es$2,
		mp,
		lp,
		Zn$4,
		hp
	].some((t$13) => t$13(e$4));
}
function It$5(e$4, t$13) {
	let r$12 = (e$4.body || e$4.properties).find(({ type: n$8 }) => n$8 !== "EmptyStatement");
	r$12 ? De$5(r$12, t$13) : Pe$5(e$4, t$13);
}
function Kn$4(e$4, t$13) {
	e$4.type === "BlockStatement" ? It$5(e$4, t$13) : De$5(e$4, t$13);
}
function sp({ comment: e$4, followingNode: t$13 }) {
	return t$13 && Gr$4(e$4) ? (De$5(t$13, e$4), !0) : !1;
}
function Qn$4({ comment: e$4, precedingNode: t$13, enclosingNode: r$12, followingNode: n$8, text: s$8 }) {
	if ((r$12 == null ? void 0 : r$12.type) !== "IfStatement" || !n$8) return !1;
	if (ke$5(s$8, P$4(e$4)) === ")") return z$4(t$13, e$4), !0;
	if (t$13 === r$12.consequent && n$8 === r$12.alternate) {
		let i$18 = ot$5(s$8, P$4(r$12.consequent));
		if (j$5(e$4) < i$18 || r$12.alternate.type === "BlockStatement") return t$13.type === "BlockStatement" ? (z$4(t$13, e$4), !0) : Ru$2(e$4, s$8) && !ie$5(s$8, j$5(t$13), j$5(e$4)) ? (z$4(t$13, e$4), !0) : (Pe$5(r$12, e$4), !0);
	}
	return n$8.type === "BlockStatement" ? (It$5(n$8, e$4), !0) : n$8.type === "IfStatement" ? (Kn$4(n$8.consequent, e$4), !0) : r$12.consequent === n$8 ? (De$5(n$8, e$4), !0) : !1;
}
function zn$5({ comment: e$4, precedingNode: t$13, enclosingNode: r$12, followingNode: n$8, text: s$8 }) {
	return (r$12 == null ? void 0 : r$12.type) !== "WhileStatement" || !n$8 ? !1 : ke$5(s$8, P$4(e$4)) === ")" ? (z$4(t$13, e$4), !0) : n$8.type === "BlockStatement" ? (It$5(n$8, e$4), !0) : r$12.body === n$8 ? (De$5(n$8, e$4), !0) : !1;
}
function Ju$1({ comment: e$4, precedingNode: t$13, enclosingNode: r$12, followingNode: n$8 }) {
	return (r$12 == null ? void 0 : r$12.type) !== "TryStatement" && (r$12 == null ? void 0 : r$12.type) !== "CatchClause" || !n$8 ? !1 : r$12.type === "CatchClause" && t$13 ? (z$4(t$13, e$4), !0) : n$8.type === "BlockStatement" ? (It$5(n$8, e$4), !0) : n$8.type === "TryStatement" ? (Kn$4(n$8.finalizer, e$4), !0) : n$8.type === "CatchClause" ? (Kn$4(n$8.body, e$4), !0) : !1;
}
function up({ comment: e$4, enclosingNode: t$13, followingNode: r$12 }) {
	return G$4(t$13) && (r$12 == null ? void 0 : r$12.type) === "Identifier" ? (De$5(t$13, e$4), !0) : !1;
}
function ip({ comment: e$4, enclosingNode: t$13, followingNode: r$12, options: n$8 }) {
	return !n$8.experimentalTernaries || !((t$13 == null ? void 0 : t$13.type) === "ConditionalExpression" || Je$5(t$13)) ? !1 : (r$12 == null ? void 0 : r$12.type) === "ConditionalExpression" || Je$5(r$12) ? (Pe$5(t$13, e$4), !0) : !1;
}
function Nu$2({ comment: e$4, precedingNode: t$13, enclosingNode: r$12, followingNode: n$8, text: s$8, options: u$14 }) {
	let i$18 = t$13 && !ie$5(s$8, P$4(t$13), j$5(e$4));
	return (!t$13 || !i$18) && ((r$12 == null ? void 0 : r$12.type) === "ConditionalExpression" || Je$5(r$12)) && n$8 ? u$14.experimentalTernaries && r$12.alternate === n$8 && !(te$4(e$4) && !ie$5(u$14.originalText, j$5(e$4), P$4(e$4))) ? (Pe$5(r$12, e$4), !0) : (De$5(n$8, e$4), !0) : !1;
}
function ap({ comment: e$4, precedingNode: t$13, enclosingNode: r$12 }) {
	return Te$5(r$12) && r$12.shorthand && r$12.key === t$13 && r$12.value.type === "AssignmentPattern" ? (z$4(r$12.value.left, e$4), !0) : !1;
}
var op = new Set([
	"ClassDeclaration",
	"ClassExpression",
	"DeclareClass",
	"DeclareInterface",
	"InterfaceDeclaration",
	"TSInterfaceDeclaration"
]);
function Gu$1({ comment: e$4, precedingNode: t$13, enclosingNode: r$12, followingNode: n$8 }) {
	if (op.has(r$12 == null ? void 0 : r$12.type)) {
		if (O$2(r$12.decorators) && (n$8 == null ? void 0 : n$8.type) !== "Decorator") return z$4(v$3(!1, r$12.decorators, -1), e$4), !0;
		if (r$12.body && n$8 === r$12.body) return It$5(r$12.body, e$4), !0;
		if (n$8) {
			if (r$12.superClass && n$8 === r$12.superClass && t$13 && (t$13 === r$12.id || t$13 === r$12.typeParameters)) return z$4(t$13, e$4), !0;
			for (let s$8 of [
				"implements",
				"extends",
				"mixins"
			]) if (r$12[s$8] && n$8 === r$12[s$8][0]) return t$13 && (t$13 === r$12.id || t$13 === r$12.typeParameters || t$13 === r$12.superClass) ? z$4(t$13, e$4) : Pe$5(r$12, e$4, s$8), !0;
		}
	}
	return !1;
}
var pp = new Set([
	"ClassMethod",
	"ClassProperty",
	"PropertyDefinition",
	"TSAbstractPropertyDefinition",
	"TSAbstractMethodDefinition",
	"TSDeclareMethod",
	"MethodDefinition",
	"ClassAccessorProperty",
	"AccessorProperty",
	"TSAbstractAccessorProperty",
	"TSParameterProperty"
]);
function qu$3({ comment: e$4, precedingNode: t$13, enclosingNode: r$12, text: n$8 }) {
	return r$12 && t$13 && ke$5(n$8, P$4(e$4)) === "(" && (r$12.type === "Property" || r$12.type === "TSDeclareMethod" || r$12.type === "TSAbstractMethodDefinition") && t$13.type === "Identifier" && r$12.key === t$13 && ke$5(n$8, P$4(t$13)) !== ":" ? (z$4(t$13, e$4), !0) : (t$13 == null ? void 0 : t$13.type) === "Decorator" && pp.has(r$12 == null ? void 0 : r$12.type) && (At$6(e$4) || e$4.placement === "ownLine") ? (z$4(t$13, e$4), !0) : !1;
}
var cp$1 = new Set([
	"FunctionDeclaration",
	"FunctionExpression",
	"ClassMethod",
	"MethodDefinition",
	"ObjectMethod"
]);
function lp({ comment: e$4, precedingNode: t$13, enclosingNode: r$12, text: n$8 }) {
	return ke$5(n$8, P$4(e$4)) !== "(" ? !1 : t$13 && cp$1.has(r$12 == null ? void 0 : r$12.type) ? (z$4(t$13, e$4), !0) : !1;
}
function mp({ comment: e$4, enclosingNode: t$13, text: r$12 }) {
	if ((t$13 == null ? void 0 : t$13.type) !== "ArrowFunctionExpression") return !1;
	let n$8 = ot$5(r$12, P$4(e$4));
	return n$8 !== !1 && r$12.slice(n$8, n$8 + 2) === "=>" ? (Pe$5(t$13, e$4), !0) : !1;
}
function yp({ comment: e$4, enclosingNode: t$13, text: r$12 }) {
	return ke$5(r$12, P$4(e$4)) !== ")" ? !1 : t$13 && (Vu$1(t$13) && Q$3(t$13).length === 0 || yt$3(t$13) && le$5(t$13).length === 0) ? (Pe$5(t$13, e$4), !0) : ((t$13 == null ? void 0 : t$13.type) === "MethodDefinition" || (t$13 == null ? void 0 : t$13.type) === "TSAbstractMethodDefinition") && Q$3(t$13.value).length === 0 ? (Pe$5(t$13.value, e$4), !0) : !1;
}
function fp({ comment: e$4, precedingNode: t$13, enclosingNode: r$12, followingNode: n$8, text: s$8 }) {
	return (t$13 == null ? void 0 : t$13.type) === "ComponentTypeParameter" && ((r$12 == null ? void 0 : r$12.type) === "DeclareComponent" || (r$12 == null ? void 0 : r$12.type) === "ComponentTypeAnnotation") && (n$8 == null ? void 0 : n$8.type) !== "ComponentTypeParameter" ? (z$4(t$13, e$4), !0) : ((t$13 == null ? void 0 : t$13.type) === "ComponentParameter" || (t$13 == null ? void 0 : t$13.type) === "RestElement") && (r$12 == null ? void 0 : r$12.type) === "ComponentDeclaration" && ke$5(s$8, P$4(e$4)) === ")" ? (z$4(t$13, e$4), !0) : !1;
}
function Wu$2({ comment: e$4, precedingNode: t$13, enclosingNode: r$12, followingNode: n$8, text: s$8 }) {
	return (t$13 == null ? void 0 : t$13.type) === "FunctionTypeParam" && (r$12 == null ? void 0 : r$12.type) === "FunctionTypeAnnotation" && (n$8 == null ? void 0 : n$8.type) !== "FunctionTypeParam" ? (z$4(t$13, e$4), !0) : ((t$13 == null ? void 0 : t$13.type) === "Identifier" || (t$13 == null ? void 0 : t$13.type) === "AssignmentPattern" || (t$13 == null ? void 0 : t$13.type) === "ObjectPattern" || (t$13 == null ? void 0 : t$13.type) === "ArrayPattern" || (t$13 == null ? void 0 : t$13.type) === "RestElement" || (t$13 == null ? void 0 : t$13.type) === "TSParameterProperty") && Vu$1(r$12) && ke$5(s$8, P$4(e$4)) === ")" ? (z$4(t$13, e$4), !0) : !te$4(e$4) && ((r$12 == null ? void 0 : r$12.type) === "FunctionDeclaration" || (r$12 == null ? void 0 : r$12.type) === "FunctionExpression" || (r$12 == null ? void 0 : r$12.type) === "ObjectMethod") && (n$8 == null ? void 0 : n$8.type) === "BlockStatement" && r$12.body === n$8 && ot$5(s$8, P$4(e$4)) === j$5(n$8) ? (It$5(n$8, e$4), !0) : !1;
}
function Uu$1({ comment: e$4, enclosingNode: t$13 }) {
	return (t$13 == null ? void 0 : t$13.type) === "LabeledStatement" ? (De$5(t$13, e$4), !0) : !1;
}
function Zn$4({ comment: e$4, enclosingNode: t$13 }) {
	return ((t$13 == null ? void 0 : t$13.type) === "ContinueStatement" || (t$13 == null ? void 0 : t$13.type) === "BreakStatement") && !t$13.label ? (z$4(t$13, e$4), !0) : !1;
}
function Dp$1({ comment: e$4, precedingNode: t$13, enclosingNode: r$12 }) {
	return w$2(r$12) && t$13 && r$12.callee === t$13 && r$12.arguments.length > 0 ? (De$5(r$12.arguments[0], e$4), !0) : !1;
}
function Ep$2({ comment: e$4, precedingNode: t$13, enclosingNode: r$12, followingNode: n$8 }) {
	return Oe$4(r$12) ? (or$4(e$4) && (n$8.prettierIgnore = !0, e$4.unignore = !0), t$13 ? (z$4(t$13, e$4), !0) : !1) : (Oe$4(n$8) && or$4(e$4) && (n$8.types[0].prettierIgnore = !0, e$4.unignore = !0), !1);
}
function Fp$1({ comment: e$4, enclosingNode: t$13 }) {
	return Te$5(t$13) ? (De$5(t$13, e$4), !0) : !1;
}
function es$2({ comment: e$4, enclosingNode: t$13, ast: r$12, isLastComment: n$8 }) {
	var s$8;
	return ((s$8 = r$12 == null ? void 0 : r$12.body) == null ? void 0 : s$8.length) === 0 ? (n$8 ? Pe$5(r$12, e$4) : De$5(r$12, e$4), !0) : (t$13 == null ? void 0 : t$13.type) === "Program" && t$13.body.length === 0 && !O$2(t$13.directives) ? (n$8 ? Pe$5(t$13, e$4) : De$5(t$13, e$4), !0) : !1;
}
function Cp$1({ comment: e$4, enclosingNode: t$13 }) {
	return (t$13 == null ? void 0 : t$13.type) === "ForInStatement" || (t$13 == null ? void 0 : t$13.type) === "ForOfStatement" ? (De$5(t$13, e$4), !0) : !1;
}
function Xu$2({ comment: e$4, precedingNode: t$13, enclosingNode: r$12, text: n$8 }) {
	if ((r$12 == null ? void 0 : r$12.type) === "ImportSpecifier" || (r$12 == null ? void 0 : r$12.type) === "ExportSpecifier") return De$5(r$12, e$4), !0;
	let s$8 = (t$13 == null ? void 0 : t$13.type) === "ImportSpecifier" && (r$12 == null ? void 0 : r$12.type) === "ImportDeclaration", u$14 = (t$13 == null ? void 0 : t$13.type) === "ExportSpecifier" && (r$12 == null ? void 0 : r$12.type) === "ExportNamedDeclaration";
	return (s$8 || u$14) && ee$3(n$8, P$4(e$4)) ? (z$4(t$13, e$4), !0) : !1;
}
function Ap$1({ comment: e$4, enclosingNode: t$13 }) {
	return (t$13 == null ? void 0 : t$13.type) === "AssignmentPattern" ? (De$5(t$13, e$4), !0) : !1;
}
var dp = new Set([
	"VariableDeclarator",
	"AssignmentExpression",
	"TypeAlias",
	"TSTypeAliasDeclaration"
]), Tp$1 = new Set([
	"ObjectExpression",
	"ArrayExpression",
	"TemplateLiteral",
	"TaggedTemplateExpression",
	"ObjectTypeAnnotation",
	"TSTypeLiteral"
]);
function xp$1({ comment: e$4, enclosingNode: t$13, followingNode: r$12 }) {
	return dp.has(t$13 == null ? void 0 : t$13.type) && r$12 && (Tp$1.has(r$12.type) || te$4(e$4)) ? (De$5(r$12, e$4), !0) : !1;
}
function hp({ comment: e$4, enclosingNode: t$13, followingNode: r$12, text: n$8 }) {
	return !r$12 && ((t$13 == null ? void 0 : t$13.type) === "TSMethodSignature" || (t$13 == null ? void 0 : t$13.type) === "TSDeclareFunction" || (t$13 == null ? void 0 : t$13.type) === "TSAbstractMethodDefinition") && ke$5(n$8, P$4(e$4)) === ";" ? (z$4(t$13, e$4), !0) : !1;
}
function Yu$2({ comment: e$4, enclosingNode: t$13, followingNode: r$12 }) {
	if (or$4(e$4) && (t$13 == null ? void 0 : t$13.type) === "TSMappedType" && r$12 === t$13.key) return t$13.prettierIgnore = !0, e$4.unignore = !0, !0;
}
function Hu$1({ comment: e$4, precedingNode: t$13, enclosingNode: r$12 }) {
	if ((r$12 == null ? void 0 : r$12.type) === "TSMappedType" && !t$13) return Pe$5(r$12, e$4), !0;
}
function gp$1({ comment: e$4, enclosingNode: t$13, followingNode: r$12 }) {
	return !t$13 || t$13.type !== "SwitchCase" || t$13.test || !r$12 || r$12 !== t$13.consequent[0] ? !1 : (r$12.type === "BlockStatement" && At$6(e$4) ? It$5(r$12, e$4) : Pe$5(t$13, e$4), !0);
}
function Sp$1({ comment: e$4, precedingNode: t$13, enclosingNode: r$12, followingNode: n$8 }) {
	return Oe$4(t$13) && ((r$12.type === "TSArrayType" || r$12.type === "ArrayTypeAnnotation") && !n$8 || qt$4(r$12)) ? (z$4(v$3(!1, t$13.types, -1), e$4), !0) : !1;
}
function Bp$1({ comment: e$4, enclosingNode: t$13, precedingNode: r$12, followingNode: n$8 }) {
	if (((t$13 == null ? void 0 : t$13.type) === "ObjectPattern" || (t$13 == null ? void 0 : t$13.type) === "ArrayPattern") && (n$8 == null ? void 0 : n$8.type) === "TSTypeAnnotation") return r$12 ? z$4(r$12, e$4) : Pe$5(t$13, e$4), !0;
}
function bp$1({ comment: e$4, precedingNode: t$13, enclosingNode: r$12, followingNode: n$8, text: s$8 }) {
	return !n$8 && (r$12 == null ? void 0 : r$12.type) === "UnaryExpression" && ((t$13 == null ? void 0 : t$13.type) === "LogicalExpression" || (t$13 == null ? void 0 : t$13.type) === "BinaryExpression") && ie$5(s$8, j$5(r$12.argument), j$5(t$13.right)) && Ru$2(e$4, s$8) && !ie$5(s$8, j$5(t$13.right), j$5(e$4)) ? (z$4(t$13.right, e$4), !0) : !1;
}
var Vu$1 = R$5([
	"ArrowFunctionExpression",
	"FunctionExpression",
	"FunctionDeclaration",
	"ObjectMethod",
	"ClassMethod",
	"TSDeclareFunction",
	"TSCallSignatureDeclaration",
	"TSConstructSignatureDeclaration",
	"TSMethodSignature",
	"TSConstructorType",
	"TSFunctionType",
	"TSDeclareMethod"
]);
var Pp$1 = new Set([
	"EmptyStatement",
	"TemplateElement",
	"TSEmptyBodyFunctionExpression",
	"ChainExpression"
]);
function kp$1(e$4) {
	return !Pp$1.has(e$4.type);
}
function Ip$1(e$4, t$13) {
	var r$12;
	if ((t$13.parser === "typescript" || t$13.parser === "flow" || t$13.parser === "hermes" || t$13.parser === "acorn" || t$13.parser === "oxc" || t$13.parser === "oxc-ts" || t$13.parser === "espree" || t$13.parser === "meriyah" || t$13.parser === "__babel_estree") && e$4.type === "MethodDefinition" && ((r$12 = e$4.value) == null ? void 0 : r$12.type) === "FunctionExpression" && Q$3(e$4.value).length === 0 && !e$4.value.returnType && !O$2(e$4.value.typeParameters) && e$4.value.body) return [
		...e$4.decorators || [],
		e$4.key,
		e$4.value.body
	];
}
function rs$2(e$4) {
	let { node: t$13, parent: r$12 } = e$4;
	return (Y$4(t$13) || r$12 && (r$12.type === "JSXSpreadAttribute" || r$12.type === "JSXSpreadChild" || Oe$4(r$12) || (r$12.type === "ClassDeclaration" || r$12.type === "ClassExpression") && r$12.superClass === t$13)) && (!kt$4(t$13) || Oe$4(r$12));
}
function Lp$1(e$4, { parser: t$13 }) {
	if (t$13 === "flow" || t$13 === "hermes" || t$13 === "babel-flow") return e$4 = X$5(!1, e$4, /[\s(]/gu, ""), e$4 === "" || e$4 === "/*" || e$4 === "/*::";
}
function $u$1(e$4) {
	switch (e$4) {
		case "cr": return "\r";
		case "crlf": return `\r
`;
		default: return `
`;
	}
}
var Ie$6 = Symbol("MODE_BREAK"), pt$3 = Symbol("MODE_FLAT"), Xt$4 = Symbol("cursor"), ns$4 = Symbol("DOC_FILL_PRINTED_LENGTH");
function Ku$1() {
	return {
		value: "",
		length: 0,
		queue: []
	};
}
function wp$1(e$4, t$13) {
	return ss$2(e$4, { type: "indent" }, t$13);
}
function Op$1(e$4, t$13, r$12) {
	return t$13 === Number.NEGATIVE_INFINITY ? e$4.root || Ku$1() : t$13 < 0 ? ss$2(e$4, { type: "dedent" }, r$12) : t$13 ? t$13.type === "root" ? {
		...e$4,
		root: e$4
	} : ss$2(e$4, {
		type: typeof t$13 == "string" ? "stringAlign" : "numberAlign",
		n: t$13
	}, r$12) : e$4;
}
function ss$2(e$4, t$13, r$12) {
	let n$8 = t$13.type === "dedent" ? e$4.queue.slice(0, -1) : [...e$4.queue, t$13], s$8 = "", u$14 = 0, i$18 = 0, a$13 = 0;
	for (let c$3 of n$8) switch (c$3.type) {
		case "indent":
			m$11(), r$12.useTabs ? o$9(1) : p$2(r$12.tabWidth);
			break;
		case "stringAlign":
			m$11(), s$8 += c$3.n, u$14 += c$3.n.length;
			break;
		case "numberAlign":
			i$18 += 1, a$13 += c$3.n;
			break;
		default: throw new Error(`Unexpected type '${c$3.type}'`);
	}
	return y$7(), {
		...e$4,
		value: s$8,
		length: u$14,
		queue: n$8
	};
	function o$9(c$3) {
		s$8 += "	".repeat(c$3), u$14 += r$12.tabWidth * c$3;
	}
	function p$2(c$3) {
		s$8 += " ".repeat(c$3), u$14 += c$3;
	}
	function m$11() {
		r$12.useTabs ? f$3() : y$7();
	}
	function f$3() {
		i$18 > 0 && o$9(i$18), C$3();
	}
	function y$7() {
		a$13 > 0 && p$2(a$13), C$3();
	}
	function C$3() {
		i$18 = 0, a$13 = 0;
	}
}
function us$1(e$4) {
	let t$13 = 0, r$12 = 0, n$8 = e$4.length;
	e: for (; n$8--;) {
		let s$8 = e$4[n$8];
		if (s$8 === Xt$4) {
			r$12++;
			continue;
		}
		for (let u$14 = s$8.length - 1; u$14 >= 0; u$14--) {
			let i$18 = s$8[u$14];
			if (i$18 === " " || i$18 === "	") t$13++;
			else {
				e$4[n$8] = s$8.slice(0, u$14 + 1);
				break e;
			}
		}
	}
	if (t$13 > 0 || r$12 > 0) for (e$4.length = n$8 + 1; r$12-- > 0;) e$4.push(Xt$4);
	return t$13;
}
function qr$3(e$4, t$13, r$12, n$8, s$8, u$14) {
	if (r$12 === Number.POSITIVE_INFINITY) return !0;
	let i$18 = t$13.length, a$13 = [e$4], o$9 = [];
	for (; r$12 >= 0;) {
		if (a$13.length === 0) {
			if (i$18 === 0) return !0;
			a$13.push(t$13[--i$18]);
			continue;
		}
		let { mode: p$2, doc: m$11 } = a$13.pop(), f$3 = Be$2(m$11);
		switch (f$3) {
			case Ne$4:
				o$9.push(m$11), r$12 -= st$4(m$11);
				break;
			case ge$4:
			case _e$5: {
				let y$7 = f$3 === ge$4 ? m$11 : m$11.parts, C$3 = m$11[ns$4] ?? 0;
				for (let c$3 = y$7.length - 1; c$3 >= C$3; c$3--) a$13.push({
					mode: p$2,
					doc: y$7[c$3]
				});
				break;
			}
			case $e$4:
			case Ke$3:
			case ze$5:
			case Se$4:
				a$13.push({
					mode: p$2,
					doc: m$11.contents
				});
				break;
			case Qe$3:
				r$12 += us$1(o$9);
				break;
			case fe$3: {
				if (u$14 && m$11.break) return !1;
				let y$7 = m$11.break ? Ie$6 : p$2, C$3 = m$11.expandedStates && y$7 === Ie$6 ? v$3(!1, m$11.expandedStates, -1) : m$11.contents;
				a$13.push({
					mode: y$7,
					doc: C$3
				});
				break;
			}
			case he$6: {
				let C$3 = (m$11.groupId ? s$8[m$11.groupId] || pt$3 : p$2) === Ie$6 ? m$11.breakContents : m$11.flatContents;
				C$3 && a$13.push({
					mode: p$2,
					doc: C$3
				});
				break;
			}
			case oe$4:
				if (p$2 === Ie$6 || m$11.hard) return !0;
				m$11.soft || (o$9.push(" "), r$12--);
				break;
			case Ze$5:
				n$8 = !0;
				break;
			case Ge$4:
				if (n$8) return !1;
				break;
		}
	}
	return !1;
}
function is$1(e$4, t$13) {
	let r$12 = {}, n$8 = t$13.printWidth, s$8 = $u$1(t$13.endOfLine), u$14 = 0, i$18 = [{
		ind: Ku$1(),
		mode: Ie$6,
		doc: e$4
	}], a$13 = [], o$9 = !1, p$2 = [], m$11 = 0;
	for (Iu$1(e$4); i$18.length > 0;) {
		let { ind: y$7, mode: C$3, doc: c$3 } = i$18.pop();
		switch (Be$2(c$3)) {
			case Ne$4: {
				let A$3 = s$8 !== `
` ? X$5(!1, c$3, `
`, s$8) : c$3;
				a$13.push(A$3), i$18.length > 0 && (u$14 += st$4(A$3));
				break;
			}
			case ge$4:
				for (let A$3 = c$3.length - 1; A$3 >= 0; A$3--) i$18.push({
					ind: y$7,
					mode: C$3,
					doc: c$3[A$3]
				});
				break;
			case it$5:
				if (m$11 >= 2) throw new Error("There are too many 'cursor' in doc.");
				a$13.push(Xt$4), m$11++;
				break;
			case $e$4:
				i$18.push({
					ind: wp$1(y$7, t$13),
					mode: C$3,
					doc: c$3.contents
				});
				break;
			case Ke$3:
				i$18.push({
					ind: Op$1(y$7, c$3.n, t$13),
					mode: C$3,
					doc: c$3.contents
				});
				break;
			case Qe$3:
				u$14 -= us$1(a$13);
				break;
			case fe$3:
				switch (C$3) {
					case pt$3: if (!o$9) {
						i$18.push({
							ind: y$7,
							mode: c$3.break ? Ie$6 : pt$3,
							doc: c$3.contents
						});
						break;
					}
					case Ie$6: {
						o$9 = !1;
						let A$3 = {
							ind: y$7,
							mode: pt$3,
							doc: c$3.contents
						}, T$9 = n$8 - u$14, B$4 = p$2.length > 0;
						if (!c$3.break && qr$3(A$3, i$18, T$9, B$4, r$12)) i$18.push(A$3);
						else if (c$3.expandedStates) {
							let g$2 = v$3(!1, c$3.expandedStates, -1);
							if (c$3.break) {
								i$18.push({
									ind: y$7,
									mode: Ie$6,
									doc: g$2
								});
								break;
							} else for (let _$2 = 1; _$2 < c$3.expandedStates.length + 1; _$2++) if (_$2 >= c$3.expandedStates.length) {
								i$18.push({
									ind: y$7,
									mode: Ie$6,
									doc: g$2
								});
								break;
							} else {
								let M$2 = c$3.expandedStates[_$2], J$4 = {
									ind: y$7,
									mode: pt$3,
									doc: M$2
								};
								if (qr$3(J$4, i$18, T$9, B$4, r$12)) {
									i$18.push(J$4);
									break;
								}
							}
						} else i$18.push({
							ind: y$7,
							mode: Ie$6,
							doc: c$3.contents
						});
						break;
					}
				}
				c$3.id && (r$12[c$3.id] = v$3(!1, i$18, -1).mode);
				break;
			case _e$5: {
				let A$3 = n$8 - u$14, T$9 = c$3[ns$4] ?? 0, { parts: B$4 } = c$3, g$2 = B$4.length - T$9;
				if (g$2 === 0) break;
				let _$2 = B$4[T$9 + 0], M$2 = B$4[T$9 + 1], J$4 = {
					ind: y$7,
					mode: pt$3,
					doc: _$2
				}, I$2 = {
					ind: y$7,
					mode: Ie$6,
					doc: _$2
				}, q$3 = qr$3(J$4, [], A$3, p$2.length > 0, r$12, !0);
				if (g$2 === 1) {
					q$3 ? i$18.push(J$4) : i$18.push(I$2);
					break;
				}
				let k$5 = {
					ind: y$7,
					mode: pt$3,
					doc: M$2
				}, W$2 = {
					ind: y$7,
					mode: Ie$6,
					doc: M$2
				};
				if (g$2 === 2) {
					q$3 ? i$18.push(k$5, J$4) : i$18.push(W$2, I$2);
					break;
				}
				let ne$6 = B$4[T$9 + 2], Z$4 = {
					ind: y$7,
					mode: C$3,
					doc: {
						...c$3,
						[ns$4]: T$9 + 2
					}
				};
				qr$3({
					ind: y$7,
					mode: pt$3,
					doc: [
						_$2,
						M$2,
						ne$6
					]
				}, [], A$3, p$2.length > 0, r$12, !0) ? i$18.push(Z$4, k$5, J$4) : q$3 ? i$18.push(Z$4, W$2, J$4) : i$18.push(Z$4, W$2, I$2);
				break;
			}
			case he$6:
			case ze$5: {
				let A$3 = c$3.groupId ? r$12[c$3.groupId] : C$3;
				if (A$3 === Ie$6) {
					let T$9 = c$3.type === he$6 ? c$3.breakContents : c$3.negate ? c$3.contents : D$3(c$3.contents);
					T$9 && i$18.push({
						ind: y$7,
						mode: C$3,
						doc: T$9
					});
				}
				if (A$3 === pt$3) {
					let T$9 = c$3.type === he$6 ? c$3.flatContents : c$3.negate ? D$3(c$3.contents) : c$3.contents;
					T$9 && i$18.push({
						ind: y$7,
						mode: C$3,
						doc: T$9
					});
				}
				break;
			}
			case Ze$5:
				p$2.push({
					ind: y$7,
					mode: C$3,
					doc: c$3.contents
				});
				break;
			case Ge$4:
				p$2.length > 0 && i$18.push({
					ind: y$7,
					mode: C$3,
					doc: Yn$4
				});
				break;
			case oe$4:
				switch (C$3) {
					case pt$3: if (c$3.hard) o$9 = !0;
					else {
						c$3.soft || (a$13.push(" "), u$14 += 1);
						break;
					}
					case Ie$6:
						if (p$2.length > 0) {
							i$18.push({
								ind: y$7,
								mode: C$3,
								doc: c$3
							}, ...p$2.reverse()), p$2.length = 0;
							break;
						}
						c$3.literal ? y$7.root ? (a$13.push(s$8, y$7.root.value), u$14 = y$7.root.length) : (a$13.push(s$8), u$14 = 0) : (u$14 -= us$1(a$13), a$13.push(s$8 + y$7.value), u$14 = y$7.length);
						break;
				}
				break;
			case Se$4:
				i$18.push({
					ind: y$7,
					mode: C$3,
					doc: c$3.contents
				});
				break;
			case Me$4: break;
			default: throw new Tt$5(c$3);
		}
		i$18.length === 0 && p$2.length > 0 && (i$18.push(...p$2.reverse()), p$2.length = 0);
	}
	let f$3 = a$13.indexOf(Xt$4);
	if (f$3 !== -1) {
		let y$7 = a$13.indexOf(Xt$4, f$3 + 1);
		if (y$7 === -1) return { formatted: a$13.filter((T$9) => T$9 !== Xt$4).join("") };
		let C$3 = a$13.slice(0, f$3).join(""), c$3 = a$13.slice(f$3 + 1, y$7).join(""), A$3 = a$13.slice(y$7 + 1).join("");
		return {
			formatted: C$3 + c$3 + A$3,
			cursorNodeStart: C$3.length,
			cursorNodeText: c$3
		};
	}
	return { formatted: a$13.join("") };
}
function _p$1(e$4, t$13, r$12 = 0) {
	let n$8 = 0;
	for (let s$8 = r$12; s$8 < e$4.length; ++s$8) e$4[s$8] === "	" ? n$8 = n$8 + t$13 - n$8 % t$13 : n$8++;
	return n$8;
}
var Qu$1 = _p$1;
function Mp$1(e$4, t$13) {
	let r$12 = e$4.lastIndexOf(`
`);
	return r$12 === -1 ? 0 : Qu$1(e$4.slice(r$12 + 1).match(/^[\t ]*/u)[0], t$13);
}
var zu$3 = Mp$1;
function Wr$4(e$4, t$13, r$12) {
	let { node: n$8 } = e$4;
	if (n$8.type === "TemplateLiteral" && Rp$1(e$4)) {
		let p$2 = vp$1(e$4, t$13, r$12);
		if (p$2) return p$2;
	}
	let u$14 = "expressions";
	n$8.type === "TSTemplateLiteralType" && (u$14 = "types");
	let i$18 = [], a$13 = e$4.map(r$12, u$14);
	i$18.push(je$3, "`");
	let o$9 = 0;
	return e$4.each(({ index: p$2, node: m$11 }) => {
		if (i$18.push(r$12()), m$11.tail) return;
		let { tabWidth: f$3 } = t$13, y$7 = m$11.value.raw, C$3 = y$7.includes(`
`) ? zu$3(y$7, f$3) : o$9;
		o$9 = C$3;
		let c$3 = a$13[p$2], A$3 = n$8[u$14][p$2], T$9 = ie$5(t$13.originalText, P$4(m$11), j$5(n$8.quasis[p$2 + 1]));
		if (!T$9) {
			let g$2 = is$1(c$3, {
				...t$13,
				printWidth: Number.POSITIVE_INFINITY
			}).formatted;
			g$2.includes(`
`) ? T$9 = !0 : c$3 = g$2;
		}
		T$9 && (d$13(A$3) || A$3.type === "Identifier" || G$4(A$3) || A$3.type === "ConditionalExpression" || A$3.type === "SequenceExpression" || xe$3(A$3) || Fe$2(A$3)) && (c$3 = [D$3([E$2, c$3]), E$2]);
		let B$4 = C$3 === 0 && y$7.endsWith(`
`) ? be$4(Number.NEGATIVE_INFINITY, c$3) : Mu$1(c$3, C$3, f$3);
		i$18.push(l$9([
			"${",
			B$4,
			je$3,
			"}"
		]));
	}, "quasis"), i$18.push("`"), i$18;
}
function Zu$2(e$4, t$13, r$12) {
	let n$8 = r$12("quasi"), { node: s$8 } = e$4, u$14 = "", i$18 = Ve$4(s$8.quasi, h$2.Leading)[0];
	return i$18 && (ie$5(t$13.originalText, P$4(s$8.typeArguments ?? s$8.typeParameters ?? s$8.tag), j$5(i$18)) ? u$14 = E$2 : u$14 = " "), at$3(n$8.label && {
		tagged: !0,
		...n$8.label
	}, [
		r$12("tag"),
		r$12(s$8.typeArguments ? "typeArguments" : "typeParameters"),
		u$14,
		je$3,
		n$8
	]);
}
function vp$1(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = n$8.quasis[0].value.raw.trim().split(/\s*\|\s*/u);
	if (s$8.length > 1 || s$8.some((u$14) => u$14.length > 0)) {
		t$13.__inJestEach = !0;
		let u$14 = e$4.map(r$12, "expressions");
		t$13.__inJestEach = !1;
		let i$18 = [], a$13 = u$14.map((y$7) => "${" + is$1(y$7, {
			...t$13,
			printWidth: Number.POSITIVE_INFINITY,
			endOfLine: "lf"
		}).formatted + "}"), o$9 = [{
			hasLineBreak: !1,
			cells: []
		}];
		for (let y$7 = 1; y$7 < n$8.quasis.length; y$7++) {
			let C$3 = v$3(!1, o$9, -1), c$3 = a$13[y$7 - 1];
			C$3.cells.push(c$3), c$3.includes(`
`) && (C$3.hasLineBreak = !0), n$8.quasis[y$7].value.raw.includes(`
`) && o$9.push({
				hasLineBreak: !1,
				cells: []
			});
		}
		let p$2 = Math.max(s$8.length, ...o$9.map((y$7) => y$7.cells.length)), m$11 = Array.from({ length: p$2 }).fill(0), f$3 = [{ cells: s$8 }, ...o$9.filter((y$7) => y$7.cells.length > 0)];
		for (let { cells: y$7 } of f$3.filter((C$3) => !C$3.hasLineBreak)) for (let [C$3, c$3] of y$7.entries()) m$11[C$3] = Math.max(m$11[C$3], st$4(c$3));
		return i$18.push(je$3, "`", D$3([F$3, b$6(F$3, f$3.map((y$7) => b$6(" | ", y$7.cells.map((C$3, c$3) => y$7.hasLineBreak ? C$3 : C$3 + " ".repeat(m$11[c$3] - st$4(C$3))))))]), F$3, "`"), i$18;
	}
}
function jp$1(e$4, t$13) {
	let { node: r$12 } = e$4, n$8 = t$13();
	return d$13(r$12) && (n$8 = l$9([D$3([E$2, n$8]), E$2])), [
		"${",
		n$8,
		je$3,
		"}"
	];
}
function Yt$3(e$4, t$13) {
	return e$4.map((r$12) => jp$1(r$12, t$13), "expressions");
}
function Ur$4(e$4, t$13) {
	return ft$3(e$4, (r$12) => typeof r$12 == "string" ? t$13 ? X$5(!1, r$12, /(\\*)`/gu, "$1$1\\`") : as$1(r$12) : r$12);
}
function as$1(e$4) {
	return X$5(!1, e$4, /([\\`]|\$\{)/gu, String.raw`\$1`);
}
function Rp$1({ node: e$4, parent: t$13 }) {
	let r$12 = /^[fx]?(?:describe|it|test)$/u;
	return t$13.type === "TaggedTemplateExpression" && t$13.quasi === e$4 && t$13.tag.type === "MemberExpression" && t$13.tag.property.type === "Identifier" && t$13.tag.property.name === "each" && (t$13.tag.object.type === "Identifier" && r$12.test(t$13.tag.object.name) || t$13.tag.object.type === "MemberExpression" && t$13.tag.object.property.type === "Identifier" && (t$13.tag.object.property.name === "only" || t$13.tag.object.property.name === "skip") && t$13.tag.object.object.type === "Identifier" && r$12.test(t$13.tag.object.object.name));
}
var ps$2 = [
	(e$4, t$13) => e$4.type === "ObjectExpression" && t$13 === "properties",
	(e$4, t$13) => e$4.type === "CallExpression" && e$4.callee.type === "Identifier" && e$4.callee.name === "Component" && t$13 === "arguments",
	(e$4, t$13) => e$4.type === "Decorator" && t$13 === "expression"
];
function ei$5(e$4) {
	let t$13 = (n$8) => n$8.type === "TemplateLiteral", r$12 = (n$8, s$8) => Te$5(n$8) && !n$8.computed && n$8.key.type === "Identifier" && n$8.key.name === "styles" && s$8 === "value";
	return e$4.match(t$13, (n$8, s$8) => U$3(n$8) && s$8 === "elements", r$12, ...ps$2) || e$4.match(t$13, r$12, ...ps$2);
}
function ti$5(e$4) {
	return e$4.match((t$13) => t$13.type === "TemplateLiteral", (t$13, r$12) => Te$5(t$13) && !t$13.computed && t$13.key.type === "Identifier" && t$13.key.name === "template" && r$12 === "value", ...ps$2);
}
function os$3(e$4, t$13) {
	return d$13(e$4, h$2.Block | h$2.Leading, ({ value: r$12 }) => r$12 === ` ${t$13} `);
}
function Xr$6({ node: e$4, parent: t$13 }, r$12) {
	return os$3(e$4, r$12) || Jp$1(t$13) && os$3(t$13, r$12) || t$13.type === "ExpressionStatement" && os$3(t$13, r$12);
}
function Jp$1(e$4) {
	return e$4.type === "AsConstExpression" || e$4.type === "TSAsExpression" && e$4.typeAnnotation.type === "TSTypeReference" && e$4.typeAnnotation.typeName.type === "Identifier" && e$4.typeAnnotation.typeName.name === "const";
}
async function Np$1(e$4, t$13, r$12) {
	let { node: n$8 } = r$12, s$8 = n$8.quasis.map((m$11) => m$11.value.raw), u$14 = 0, i$18 = s$8.reduce((m$11, f$3, y$7) => y$7 === 0 ? f$3 : m$11 + "@prettier-placeholder-" + u$14++ + "-id" + f$3, ""), a$13 = await e$4(i$18, { parser: "scss" }), o$9 = Yt$3(r$12, t$13), p$2 = Gp$1(a$13, o$9);
	if (!p$2) throw new Error("Couldn't insert all the expressions");
	return [
		"`",
		D$3([F$3, p$2]),
		E$2,
		"`"
	];
}
function Gp$1(e$4, t$13) {
	if (!O$2(t$13)) return e$4;
	let r$12 = 0, n$8 = ft$3(Ut$3(e$4), (s$8) => typeof s$8 != "string" || !s$8.includes("@prettier-placeholder") ? s$8 : s$8.split(/@prettier-placeholder-(\d+)-id/u).map((u$14, i$18) => i$18 % 2 === 0 ? ve$4(u$14) : (r$12++, t$13[u$14])));
	return t$13.length === r$12 ? n$8 : null;
}
function qp$1({ node: e$4, parent: t$13, grandparent: r$12 }) {
	return r$12 && e$4.quasis && t$13.type === "JSXExpressionContainer" && r$12.type === "JSXElement" && r$12.openingElement.name.name === "style" && r$12.openingElement.attributes.some((n$8) => n$8.type === "JSXAttribute" && n$8.name.name === "jsx") || (t$13 == null ? void 0 : t$13.type) === "TaggedTemplateExpression" && t$13.tag.type === "Identifier" && t$13.tag.name === "css" || (t$13 == null ? void 0 : t$13.type) === "TaggedTemplateExpression" && t$13.tag.type === "MemberExpression" && t$13.tag.object.name === "css" && (t$13.tag.property.name === "global" || t$13.tag.property.name === "resolve");
}
function Yr$4(e$4) {
	return e$4.type === "Identifier" && e$4.name === "styled";
}
function ri$5(e$4) {
	return /^[A-Z]/u.test(e$4.object.name) && e$4.property.name === "extend";
}
function Wp$1({ parent: e$4 }) {
	if (!e$4 || e$4.type !== "TaggedTemplateExpression") return !1;
	let t$13 = e$4.tag.type === "ParenthesizedExpression" ? e$4.tag.expression : e$4.tag;
	switch (t$13.type) {
		case "MemberExpression": return Yr$4(t$13.object) || ri$5(t$13);
		case "CallExpression": return Yr$4(t$13.callee) || t$13.callee.type === "MemberExpression" && (t$13.callee.object.type === "MemberExpression" && (Yr$4(t$13.callee.object.object) || ri$5(t$13.callee.object)) || t$13.callee.object.type === "CallExpression" && Yr$4(t$13.callee.object.callee));
		case "Identifier": return t$13.name === "css";
		default: return !1;
	}
}
function Up$1({ parent: e$4, grandparent: t$13 }) {
	return (t$13 == null ? void 0 : t$13.type) === "JSXAttribute" && e$4.type === "JSXExpressionContainer" && t$13.name.type === "JSXIdentifier" && t$13.name.name === "css";
}
function Xp$1(e$4) {
	if (qp$1(e$4) || Wp$1(e$4) || Up$1(e$4) || ei$5(e$4)) return Np$1;
}
var ni$5 = Xp$1;
async function Yp$1(e$4, t$13, r$12) {
	let { node: n$8 } = r$12, s$8 = n$8.quasis.length, u$14 = Yt$3(r$12, t$13), i$18 = [];
	for (let a$13 = 0; a$13 < s$8; a$13++) {
		let o$9 = n$8.quasis[a$13], p$2 = a$13 === 0, m$11 = a$13 === s$8 - 1, f$3 = o$9.value.cooked, y$7 = f$3.split(`
`), C$3 = y$7.length, c$3 = u$14[a$13], A$3 = C$3 > 2 && y$7[0].trim() === "" && y$7[1].trim() === "", T$9 = C$3 > 2 && y$7[C$3 - 1].trim() === "" && y$7[C$3 - 2].trim() === "", B$4 = y$7.every((_$2) => /^\s*(?:#[^\n\r]*)?$/u.test(_$2));
		if (!m$11 && /#[^\n\r]*$/u.test(y$7[C$3 - 1])) return null;
		let g$2 = null;
		B$4 ? g$2 = Hp$1(y$7) : g$2 = await e$4(f$3, { parser: "graphql" }), g$2 ? (g$2 = Ur$4(g$2, !1), !p$2 && A$3 && i$18.push(""), i$18.push(g$2), !m$11 && T$9 && i$18.push("")) : !p$2 && !m$11 && A$3 && i$18.push(""), c$3 && i$18.push(c$3);
	}
	return [
		"`",
		D$3([F$3, b$6(F$3, i$18)]),
		F$3,
		"`"
	];
}
function Hp$1(e$4) {
	let t$13 = [], r$12 = !1, n$8 = e$4.map((s$8) => s$8.trim());
	for (let [s$8, u$14] of n$8.entries()) u$14 !== "" && (n$8[s$8 - 1] === "" && r$12 ? t$13.push([F$3, u$14]) : t$13.push(u$14), r$12 = !0);
	return t$13.length === 0 ? null : b$6(F$3, t$13);
}
function Vp$1({ node: e$4, parent: t$13 }) {
	return Xr$6({
		node: e$4,
		parent: t$13
	}, "GraphQL") || t$13 && (t$13.type === "TaggedTemplateExpression" && (t$13.tag.type === "MemberExpression" && t$13.tag.object.name === "graphql" && t$13.tag.property.name === "experimental" || t$13.tag.type === "Identifier" && (t$13.tag.name === "gql" || t$13.tag.name === "graphql")) || t$13.type === "CallExpression" && t$13.callee.type === "Identifier" && t$13.callee.name === "graphql");
}
function $p$1(e$4) {
	if (Vp$1(e$4)) return Yp$1;
}
var si$4 = $p$1;
var cs$1 = 0;
async function ui$4(e$4, t$13, r$12, n$8, s$8) {
	let { node: u$14 } = n$8, i$18 = cs$1;
	cs$1 = cs$1 + 1 >>> 0;
	let a$13 = (B$4) => `PRETTIER_HTML_PLACEHOLDER_${B$4}_${i$18}_IN_JS`, o$9 = u$14.quasis.map((B$4, g$2, _$2) => g$2 === _$2.length - 1 ? B$4.value.cooked : B$4.value.cooked + a$13(g$2)).join(""), p$2 = Yt$3(n$8, r$12), m$11 = new RegExp(a$13(String.raw`(\d+)`), "gu"), f$3 = 0, y$7 = await t$13(o$9, {
		parser: e$4,
		__onHtmlRoot(B$4) {
			f$3 = B$4.children.length;
		}
	}), C$3 = ft$3(y$7, (B$4) => {
		if (typeof B$4 != "string") return B$4;
		let g$2 = [], _$2 = B$4.split(m$11);
		for (let M$2 = 0; M$2 < _$2.length; M$2++) {
			let J$4 = _$2[M$2];
			if (M$2 % 2 === 0) {
				J$4 && (J$4 = as$1(J$4), s$8.__embeddedInHtml && (J$4 = X$5(!1, J$4, /<\/(?=script\b)/giu, String.raw`<\/`)), g$2.push(J$4));
				continue;
			}
			let I$2 = Number(J$4);
			g$2.push(p$2[I$2]);
		}
		return g$2;
	}), c$3 = /^\s/u.test(o$9) ? " " : "", A$3 = /\s$/u.test(o$9) ? " " : "", T$9 = s$8.htmlWhitespaceSensitivity === "ignore" ? F$3 : c$3 && A$3 ? x$2 : null;
	return T$9 ? l$9([
		"`",
		D$3([T$9, l$9(C$3)]),
		T$9,
		"`"
	]) : at$3({ hug: !1 }, l$9([
		"`",
		c$3,
		f$3 > 1 ? D$3(l$9(C$3)) : l$9(C$3),
		A$3,
		"`"
	]));
}
function Kp$1(e$4) {
	return Xr$6(e$4, "HTML") || e$4.match((t$13) => t$13.type === "TemplateLiteral", (t$13, r$12) => t$13.type === "TaggedTemplateExpression" && t$13.tag.type === "Identifier" && t$13.tag.name === "html" && r$12 === "quasi");
}
var Qp$1 = ui$4.bind(void 0, "html"), zp$1 = ui$4.bind(void 0, "angular");
function Zp$1(e$4) {
	if (Kp$1(e$4)) return Qp$1;
	if (ti$5(e$4)) return zp$1;
}
var ii$4 = Zp$1;
async function ec$3(e$4, t$13, r$12) {
	let { node: n$8 } = r$12, s$8 = X$5(!1, n$8.quasis[0].value.raw, /((?:\\\\)*)\\`/gu, (o$9, p$2) => "\\".repeat(p$2.length / 2) + "`"), u$14 = tc$2(s$8), i$18 = u$14 !== "";
	i$18 && (s$8 = X$5(!1, s$8, new RegExp(`^${u$14}`, "gmu"), ""));
	let a$13 = Ur$4(await e$4(s$8, {
		parser: "markdown",
		__inJsTemplate: !0
	}), !0);
	return [
		"`",
		i$18 ? D$3([E$2, a$13]) : [Rr$4, _u$3(a$13)],
		E$2,
		"`"
	];
}
function tc$2(e$4) {
	let t$13 = e$4.match(/^([^\S\n]*)\S/mu);
	return t$13 === null ? "" : t$13[1];
}
function rc$2(e$4) {
	if (nc$3(e$4)) return ec$3;
}
function nc$3({ node: e$4, parent: t$13 }) {
	return (t$13 == null ? void 0 : t$13.type) === "TaggedTemplateExpression" && e$4.quasis.length === 1 && t$13.tag.type === "Identifier" && (t$13.tag.name === "md" || t$13.tag.name === "markdown");
}
var ai$3 = rc$2;
function sc$2(e$4) {
	let { node: t$13 } = e$4;
	if (t$13.type !== "TemplateLiteral" || uc$2(t$13)) return;
	let r$12;
	for (let n$8 of [
		ni$5,
		si$4,
		ii$4,
		ai$3
	]) if (r$12 = n$8(e$4), !!r$12) return t$13.quasis.length === 1 && t$13.quasis[0].value.raw.trim() === "" ? "``" : async (...s$8) => {
		let u$14 = await r$12(...s$8);
		return u$14 && at$3({
			embed: !0,
			...u$14.label
		}, u$14);
	};
}
function uc$2({ quasis: e$4 }) {
	return e$4.some(({ value: { cooked: t$13 } }) => t$13 === null);
}
var oi$3 = sc$2;
var ic$1 = /\*\/$/, ac$1 = /^\/\*\*?/, mi$5 = /^\s*(\/\*\*?(.|\r?\n)*?\*\/)/, oc$1 = /(^|\s+)\/\/([^\n\r]*)/g, pi$4 = /^(\r?\n)+/, pc$2 = /(?:^|\r?\n) *(@[^\n\r]*?) *\r?\n *(?![^\n\r@]*\/\/[^]*)([^\s@][^\n\r@]+?) *\r?\n/g, ci$4 = /(?:^|\r?\n) *@(\S+) *([^\n\r]*)/g, cc$2 = /(\r?\n|^) *\* ?/g, yi$5 = [];
function fi$5(e$4) {
	let t$13 = e$4.match(mi$5);
	return t$13 ? t$13[0].trimStart() : "";
}
function Di$2(e$4) {
	let t$13 = e$4.match(mi$5), r$12 = t$13 == null ? void 0 : t$13[0];
	return r$12 == null ? e$4 : e$4.slice(r$12.length);
}
function Ei$3(e$4) {
	let t$13 = `
`;
	e$4 = X$5(!1, e$4.replace(ac$1, "").replace(ic$1, ""), cc$2, "$1");
	let r$12 = "";
	for (; r$12 !== e$4;) r$12 = e$4, e$4 = X$5(!1, e$4, pc$2, `${t$13}$1 $2${t$13}`);
	e$4 = e$4.replace(pi$4, "").trimEnd();
	let n$8 = Object.create(null), s$8 = X$5(!1, e$4, ci$4, "").replace(pi$4, "").trimEnd(), u$14;
	for (; u$14 = ci$4.exec(e$4);) {
		let i$18 = X$5(!1, u$14[2], oc$1, "");
		if (typeof n$8[u$14[1]] == "string" || Array.isArray(n$8[u$14[1]])) {
			let a$13 = n$8[u$14[1]];
			n$8[u$14[1]] = [
				...yi$5,
				...Array.isArray(a$13) ? a$13 : [a$13],
				i$18
			];
		} else n$8[u$14[1]] = i$18;
	}
	return {
		comments: s$8,
		pragmas: n$8
	};
}
function Fi$3({ comments: e$4 = "", pragmas: t$13 = {} }) {
	let r$12 = `
`, n$8 = "/**", s$8 = " *", u$14 = " */", i$18 = Object.keys(t$13), a$13 = i$18.flatMap((p$2) => li$4(p$2, t$13[p$2])).map((p$2) => `${s$8} ${p$2}${r$12}`).join("");
	if (!e$4) {
		if (i$18.length === 0) return "";
		if (i$18.length === 1 && !Array.isArray(t$13[i$18[0]])) {
			let p$2 = t$13[i$18[0]];
			return `${n$8} ${li$4(i$18[0], p$2)[0]}${u$14}`;
		}
	}
	let o$9 = e$4.split(r$12).map((p$2) => `${s$8} ${p$2}`).join(r$12) + r$12;
	return n$8 + r$12 + (e$4 ? o$9 : "") + (e$4 && i$18.length > 0 ? s$8 + r$12 : "") + a$13 + u$14;
}
function li$4(e$4, t$13) {
	return [...yi$5, ...Array.isArray(t$13) ? t$13 : [t$13]].map((r$12) => `@${e$4} ${r$12}`.trim());
}
var Ci$3 = "format";
function lc$1(e$4) {
	if (!e$4.startsWith("#!")) return "";
	let t$13 = e$4.indexOf(`
`);
	return t$13 === -1 ? e$4 : e$4.slice(0, t$13);
}
var Ai$3 = lc$1;
function mc$1(e$4) {
	let t$13 = Ai$3(e$4);
	t$13 && (e$4 = e$4.slice(t$13.length + 1));
	let r$12 = fi$5(e$4), { pragmas: n$8, comments: s$8 } = Ei$3(r$12);
	return {
		shebang: t$13,
		text: e$4,
		pragmas: n$8,
		comments: s$8
	};
}
function di$5(e$4) {
	let { shebang: t$13, text: r$12, pragmas: n$8, comments: s$8 } = mc$1(e$4), u$14 = Di$2(r$12), i$18 = Fi$3({
		pragmas: {
			[Ci$3]: "",
			...n$8
		},
		comments: s$8.trimStart()
	});
	return (t$13 ? `${t$13}
` : "") + i$18 + (u$14.startsWith(`
`) ? `
` : `

`) + u$14;
}
function yc$1(e$4, t$13) {
	let { originalText: r$12, [Symbol.for("comments")]: n$8, locStart: s$8, locEnd: u$14, [Symbol.for("printedComments")]: i$18 } = t$13, { node: a$13 } = e$4, o$9 = s$8(a$13), p$2 = u$14(a$13);
	for (let m$11 of n$8) s$8(m$11) >= o$9 && u$14(m$11) <= p$2 && i$18.add(m$11);
	return r$12.slice(o$9, p$2);
}
var Ti$2 = yc$1;
function ls$1(e$4, t$13) {
	var u$14, i$18, a$13, o$9, p$2, m$11, f$3, y$7, C$3;
	if (e$4.isRoot) return !1;
	let { node: r$12, key: n$8, parent: s$8 } = e$4;
	if (t$13.__isInHtmlInterpolation && !t$13.bracketSpacing && Fc(r$12) && yr$3(e$4)) return !0;
	if (fc$1(r$12)) return !1;
	if (r$12.type === "Identifier") {
		if ((u$14 = r$12.extra) != null && u$14.parenthesized && /^PRETTIER_HTML_PLACEHOLDER_\d+_\d+_IN_JS$/u.test(r$12.name) || n$8 === "left" && (r$12.name === "async" && !s$8.await || r$12.name === "let") && s$8.type === "ForOfStatement") return !0;
		if (r$12.name === "let") {
			let c$3 = (i$18 = e$4.findAncestor((A$3) => A$3.type === "ForOfStatement")) == null ? void 0 : i$18.left;
			if (c$3 && pe$5(c$3, (A$3) => A$3 === r$12)) return !0;
		}
		if (n$8 === "object" && r$12.name === "let" && s$8.type === "MemberExpression" && s$8.computed && !s$8.optional) {
			let c$3 = e$4.findAncestor((T$9) => T$9.type === "ExpressionStatement" || T$9.type === "ForStatement" || T$9.type === "ForInStatement"), A$3 = c$3 ? c$3.type === "ExpressionStatement" ? c$3.expression : c$3.type === "ForStatement" ? c$3.init : c$3.left : void 0;
			if (A$3 && pe$5(A$3, (T$9) => T$9 === r$12)) return !0;
		}
		if (n$8 === "expression") switch (r$12.name) {
			case "await":
			case "interface":
			case "module":
			case "using":
			case "yield":
			case "let":
			case "component":
			case "hook":
			case "type": {
				let c$3 = e$4.findAncestor((A$3) => !xe$3(A$3));
				if (c$3 !== s$8 && c$3.type === "ExpressionStatement") return !0;
			}
		}
		return !1;
	}
	if (r$12.type === "ObjectExpression" || r$12.type === "FunctionExpression" || r$12.type === "ClassExpression" || r$12.type === "DoExpression") {
		let c$3 = (a$13 = e$4.findAncestor((A$3) => A$3.type === "ExpressionStatement")) == null ? void 0 : a$13.expression;
		if (c$3 && pe$5(c$3, (A$3) => A$3 === r$12)) return !0;
	}
	if (r$12.type === "ObjectExpression") {
		let c$3 = (o$9 = e$4.findAncestor((A$3) => A$3.type === "ArrowFunctionExpression")) == null ? void 0 : o$9.body;
		if (c$3 && c$3.type !== "SequenceExpression" && c$3.type !== "AssignmentExpression" && pe$5(c$3, (A$3) => A$3 === r$12)) return !0;
	}
	switch (s$8.type) {
		case "ParenthesizedExpression": return !1;
		case "ClassDeclaration":
		case "ClassExpression":
			if (n$8 === "superClass" && (r$12.type === "ArrowFunctionExpression" || r$12.type === "AssignmentExpression" || r$12.type === "AwaitExpression" || r$12.type === "BinaryExpression" || r$12.type === "ConditionalExpression" || r$12.type === "LogicalExpression" || r$12.type === "NewExpression" || r$12.type === "ObjectExpression" || r$12.type === "SequenceExpression" || r$12.type === "TaggedTemplateExpression" || r$12.type === "UnaryExpression" || r$12.type === "UpdateExpression" || r$12.type === "YieldExpression" || r$12.type === "TSNonNullExpression" || r$12.type === "ClassExpression" && O$2(r$12.decorators))) return !0;
			break;
		case "ExportDefaultDeclaration": return xi$5(e$4, t$13) || r$12.type === "SequenceExpression";
		case "Decorator":
			if (n$8 === "expression" && !Ac(r$12)) return !0;
			break;
		case "TypeAnnotation":
			if (e$4.match(void 0, void 0, (c$3, A$3) => A$3 === "returnType" && c$3.type === "ArrowFunctionExpression") && Ec$1(r$12)) return !0;
			break;
		case "BinaryExpression":
			if (n$8 === "left" && (s$8.operator === "in" || s$8.operator === "instanceof") && r$12.type === "UnaryExpression") return !0;
			break;
		case "VariableDeclarator":
			if (n$8 === "init" && e$4.match(void 0, void 0, (c$3, A$3) => A$3 === "declarations" && c$3.type === "VariableDeclaration", (c$3, A$3) => A$3 === "left" && c$3.type === "ForInStatement")) return !0;
			break;
	}
	switch (r$12.type) {
		case "UpdateExpression": if (s$8.type === "UnaryExpression") return r$12.prefix && (r$12.operator === "++" && s$8.operator === "+" || r$12.operator === "--" && s$8.operator === "-");
		case "UnaryExpression": switch (s$8.type) {
			case "UnaryExpression": return r$12.operator === s$8.operator && (r$12.operator === "+" || r$12.operator === "-");
			case "BindExpression": return !0;
			case "MemberExpression":
			case "OptionalMemberExpression": return n$8 === "object";
			case "TaggedTemplateExpression": return !0;
			case "NewExpression":
			case "CallExpression":
			case "OptionalCallExpression": return n$8 === "callee";
			case "BinaryExpression": return n$8 === "left" && s$8.operator === "**";
			case "TSNonNullExpression": return !0;
			default: return !1;
		}
		case "BinaryExpression":
			if (s$8.type === "UpdateExpression" || r$12.operator === "in" && Dc(e$4)) return !0;
			if (r$12.operator === "|>" && (p$2 = r$12.extra) != null && p$2.parenthesized) {
				let c$3 = e$4.grandparent;
				if (c$3.type === "BinaryExpression" && c$3.operator === "|>") return !0;
			}
		case "TSTypeAssertion":
		case "TSAsExpression":
		case "TSSatisfiesExpression":
		case "AsExpression":
		case "AsConstExpression":
		case "SatisfiesExpression":
		case "LogicalExpression": switch (s$8.type) {
			case "TSAsExpression":
			case "TSSatisfiesExpression":
			case "AsExpression":
			case "AsConstExpression":
			case "SatisfiesExpression": return !xe$3(r$12);
			case "ConditionalExpression": return xe$3(r$12) || fu$2(r$12);
			case "CallExpression":
			case "NewExpression":
			case "OptionalCallExpression": return n$8 === "callee";
			case "ClassExpression":
			case "ClassDeclaration": return n$8 === "superClass";
			case "TSTypeAssertion":
			case "TaggedTemplateExpression":
			case "UnaryExpression":
			case "JSXSpreadAttribute":
			case "SpreadElement":
			case "BindExpression":
			case "AwaitExpression":
			case "TSNonNullExpression":
			case "UpdateExpression": return !0;
			case "MemberExpression":
			case "OptionalMemberExpression": return n$8 === "object";
			case "AssignmentExpression":
			case "AssignmentPattern": return n$8 === "left" && (r$12.type === "TSTypeAssertion" || xe$3(r$12));
			case "LogicalExpression": if (r$12.type === "LogicalExpression") return s$8.operator !== r$12.operator;
			case "BinaryExpression": {
				let { operator: c$3, type: A$3 } = r$12;
				if (!c$3 && A$3 !== "TSTypeAssertion") return !0;
				let T$9 = sr$4(c$3), B$4 = s$8.operator, g$2 = sr$4(B$4);
				return g$2 > T$9 || n$8 === "right" && g$2 === T$9 || g$2 === T$9 && !ar$4(B$4, c$3) ? !0 : g$2 < T$9 && c$3 === "%" ? B$4 === "+" || B$4 === "-" : !!Tu$2(B$4);
			}
			default: return !1;
		}
		case "SequenceExpression": return s$8.type !== "ForStatement";
		case "YieldExpression": if (s$8.type === "AwaitExpression" || s$8.type === "TSTypeAssertion") return !0;
		case "AwaitExpression": switch (s$8.type) {
			case "TaggedTemplateExpression":
			case "UnaryExpression":
			case "LogicalExpression":
			case "SpreadElement":
			case "TSAsExpression":
			case "TSSatisfiesExpression":
			case "TSNonNullExpression":
			case "AsExpression":
			case "AsConstExpression":
			case "SatisfiesExpression":
			case "BindExpression": return !0;
			case "MemberExpression":
			case "OptionalMemberExpression": return n$8 === "object";
			case "NewExpression":
			case "CallExpression":
			case "OptionalCallExpression": return n$8 === "callee";
			case "ConditionalExpression": return n$8 === "test";
			case "BinaryExpression": return !(!r$12.argument && s$8.operator === "|>");
			default: return !1;
		}
		case "TSFunctionType": if (e$4.match((c$3) => c$3.type === "TSFunctionType", (c$3, A$3) => A$3 === "typeAnnotation" && c$3.type === "TSTypeAnnotation", (c$3, A$3) => A$3 === "returnType" && c$3.type === "ArrowFunctionExpression")) return !0;
		case "TSConditionalType":
		case "TSConstructorType":
		case "ConditionalTypeAnnotation":
			if (n$8 === "extendsType" && Je$5(r$12) && s$8.type === r$12.type || n$8 === "checkType" && Je$5(s$8)) return !0;
			if (n$8 === "extendsType" && s$8.type === "TSConditionalType") {
				let { typeAnnotation: c$3 } = r$12.returnType || r$12.typeAnnotation;
				if (c$3.type === "TSTypePredicate" && c$3.typeAnnotation && (c$3 = c$3.typeAnnotation.typeAnnotation), c$3.type === "TSInferType" && c$3.typeParameter.constraint) return !0;
			}
		case "TSUnionType":
		case "TSIntersectionType": if ((Oe$4(s$8) || qt$4(s$8)) && s$8.types.length > 1 && (!r$12.types || r$12.types.length > 1)) return !0;
		case "TSInferType": if (r$12.type === "TSInferType") {
			if (s$8.type === "TSRestType") return !1;
			if (n$8 === "types" && (s$8.type === "TSUnionType" || s$8.type === "TSIntersectionType") && r$12.typeParameter.type === "TSTypeParameter" && r$12.typeParameter.constraint) return !0;
		}
		case "TSTypeOperator": return s$8.type === "TSArrayType" || s$8.type === "TSOptionalType" || s$8.type === "TSRestType" || n$8 === "objectType" && s$8.type === "TSIndexedAccessType" || s$8.type === "TSTypeOperator" || s$8.type === "TSTypeAnnotation" && e$4.grandparent.type.startsWith("TSJSDoc");
		case "TSTypeQuery": return n$8 === "objectType" && s$8.type === "TSIndexedAccessType" || n$8 === "elementType" && s$8.type === "TSArrayType";
		case "TypeOperator": return s$8.type === "ArrayTypeAnnotation" || s$8.type === "NullableTypeAnnotation" || n$8 === "objectType" && (s$8.type === "IndexedAccessType" || s$8.type === "OptionalIndexedAccessType") || s$8.type === "TypeOperator";
		case "TypeofTypeAnnotation": return n$8 === "objectType" && (s$8.type === "IndexedAccessType" || s$8.type === "OptionalIndexedAccessType") || n$8 === "elementType" && s$8.type === "ArrayTypeAnnotation";
		case "ArrayTypeAnnotation": return s$8.type === "NullableTypeAnnotation";
		case "IntersectionTypeAnnotation":
		case "UnionTypeAnnotation": return s$8.type === "TypeOperator" || s$8.type === "ArrayTypeAnnotation" || s$8.type === "NullableTypeAnnotation" || s$8.type === "IntersectionTypeAnnotation" || s$8.type === "UnionTypeAnnotation" || n$8 === "objectType" && (s$8.type === "IndexedAccessType" || s$8.type === "OptionalIndexedAccessType");
		case "InferTypeAnnotation":
		case "NullableTypeAnnotation": return s$8.type === "ArrayTypeAnnotation" || n$8 === "objectType" && (s$8.type === "IndexedAccessType" || s$8.type === "OptionalIndexedAccessType");
		case "ComponentTypeAnnotation":
		case "FunctionTypeAnnotation": {
			if (r$12.type === "ComponentTypeAnnotation" && (r$12.rendersType === null || r$12.rendersType === void 0)) return !1;
			if (e$4.match(void 0, (A$3, T$9) => T$9 === "typeAnnotation" && A$3.type === "TypeAnnotation", (A$3, T$9) => T$9 === "returnType" && A$3.type === "ArrowFunctionExpression") || e$4.match(void 0, (A$3, T$9) => T$9 === "typeAnnotation" && A$3.type === "TypePredicate", (A$3, T$9) => T$9 === "typeAnnotation" && A$3.type === "TypeAnnotation", (A$3, T$9) => T$9 === "returnType" && A$3.type === "ArrowFunctionExpression")) return !0;
			let c$3 = s$8.type === "NullableTypeAnnotation" ? e$4.grandparent : s$8;
			return c$3.type === "UnionTypeAnnotation" || c$3.type === "IntersectionTypeAnnotation" || c$3.type === "ArrayTypeAnnotation" || n$8 === "objectType" && (c$3.type === "IndexedAccessType" || c$3.type === "OptionalIndexedAccessType") || n$8 === "checkType" && s$8.type === "ConditionalTypeAnnotation" || n$8 === "extendsType" && s$8.type === "ConditionalTypeAnnotation" && ((m$11 = r$12.returnType) == null ? void 0 : m$11.type) === "InferTypeAnnotation" && ((f$3 = r$12.returnType) == null ? void 0 : f$3.typeParameter.bound) || c$3.type === "NullableTypeAnnotation" || s$8.type === "FunctionTypeParam" && s$8.name === null && Q$3(r$12).some((A$3) => {
				var T$9;
				return ((T$9 = A$3.typeAnnotation) == null ? void 0 : T$9.type) === "NullableTypeAnnotation";
			});
		}
		case "OptionalIndexedAccessType": return n$8 === "objectType" && s$8.type === "IndexedAccessType";
		case "StringLiteral":
		case "NumericLiteral":
		case "Literal":
			if (typeof r$12.value == "string" && s$8.type === "ExpressionStatement" && typeof s$8.directive != "string") {
				let c$3 = e$4.grandparent;
				return c$3.type === "Program" || c$3.type === "BlockStatement";
			}
			return n$8 === "object" && G$4(s$8) && ye$3(r$12);
		case "AssignmentExpression": return !((n$8 === "init" || n$8 === "update") && s$8.type === "ForStatement" || n$8 === "expression" && r$12.left.type !== "ObjectPattern" && s$8.type === "ExpressionStatement" || n$8 === "key" && s$8.type === "TSPropertySignature" || s$8.type === "AssignmentExpression" || n$8 === "expressions" && s$8.type === "SequenceExpression" && e$4.match(void 0, void 0, (c$3, A$3) => (A$3 === "init" || A$3 === "update") && c$3.type === "ForStatement") || n$8 === "value" && s$8.type === "Property" && e$4.match(void 0, void 0, (c$3, A$3) => A$3 === "properties" && c$3.type === "ObjectPattern") || s$8.type === "NGChainedExpression" || n$8 === "node" && s$8.type === "JsExpressionRoot");
		case "ConditionalExpression": switch (s$8.type) {
			case "TaggedTemplateExpression":
			case "UnaryExpression":
			case "SpreadElement":
			case "BinaryExpression":
			case "LogicalExpression":
			case "NGPipeExpression":
			case "ExportDefaultDeclaration":
			case "AwaitExpression":
			case "JSXSpreadAttribute":
			case "TSTypeAssertion":
			case "TypeCastExpression":
			case "TSAsExpression":
			case "TSSatisfiesExpression":
			case "AsExpression":
			case "AsConstExpression":
			case "SatisfiesExpression":
			case "TSNonNullExpression": return !0;
			case "NewExpression":
			case "CallExpression":
			case "OptionalCallExpression": return n$8 === "callee";
			case "ConditionalExpression": return t$13.experimentalTernaries ? !1 : n$8 === "test";
			case "MemberExpression":
			case "OptionalMemberExpression": return n$8 === "object";
			default: return !1;
		}
		case "FunctionExpression": switch (s$8.type) {
			case "NewExpression":
			case "CallExpression":
			case "OptionalCallExpression": return n$8 === "callee";
			case "TaggedTemplateExpression": return !0;
			default: return !1;
		}
		case "ArrowFunctionExpression": switch (s$8.type) {
			case "BinaryExpression": return s$8.operator !== "|>" || ((y$7 = r$12.extra) == null ? void 0 : y$7.parenthesized);
			case "NewExpression":
			case "CallExpression":
			case "OptionalCallExpression": return n$8 === "callee";
			case "MemberExpression":
			case "OptionalMemberExpression": return n$8 === "object";
			case "TSAsExpression":
			case "TSSatisfiesExpression":
			case "AsExpression":
			case "AsConstExpression":
			case "SatisfiesExpression":
			case "TSNonNullExpression":
			case "BindExpression":
			case "TaggedTemplateExpression":
			case "UnaryExpression":
			case "LogicalExpression":
			case "AwaitExpression":
			case "TSTypeAssertion": return !0;
			case "ConditionalExpression": return n$8 === "test";
			default: return !1;
		}
		case "ClassExpression": switch (s$8.type) {
			case "NewExpression": return n$8 === "callee";
			default: return !1;
		}
		case "OptionalMemberExpression":
		case "OptionalCallExpression":
		case "CallExpression":
		case "MemberExpression": if (Cc(e$4)) return !0;
		case "TaggedTemplateExpression":
		case "TSNonNullExpression":
			if (n$8 === "callee" && (s$8.type === "BindExpression" || s$8.type === "NewExpression")) {
				let c$3 = r$12;
				for (; c$3;) switch (c$3.type) {
					case "CallExpression":
					case "OptionalCallExpression": return !0;
					case "MemberExpression":
					case "OptionalMemberExpression":
					case "BindExpression":
						c$3 = c$3.object;
						break;
					case "TaggedTemplateExpression":
						c$3 = c$3.tag;
						break;
					case "TSNonNullExpression":
						c$3 = c$3.expression;
						break;
					default: return !1;
				}
			}
			return !1;
		case "BindExpression": return n$8 === "callee" && (s$8.type === "BindExpression" || s$8.type === "NewExpression") || n$8 === "object" && G$4(s$8);
		case "NGPipeExpression": return !(s$8.type === "NGRoot" || s$8.type === "NGMicrosyntaxExpression" || s$8.type === "ObjectProperty" && !((C$3 = r$12.extra) != null && C$3.parenthesized) || U$3(s$8) || n$8 === "arguments" && w$2(s$8) || n$8 === "right" && s$8.type === "NGPipeExpression" || n$8 === "property" && s$8.type === "MemberExpression" || s$8.type === "AssignmentExpression");
		case "JSXFragment":
		case "JSXElement": return n$8 === "callee" || n$8 === "left" && s$8.type === "BinaryExpression" && s$8.operator === "<" || !U$3(s$8) && s$8.type !== "ArrowFunctionExpression" && s$8.type !== "AssignmentExpression" && s$8.type !== "AssignmentPattern" && s$8.type !== "BinaryExpression" && s$8.type !== "NewExpression" && s$8.type !== "ConditionalExpression" && s$8.type !== "ExpressionStatement" && s$8.type !== "JsExpressionRoot" && s$8.type !== "JSXAttribute" && s$8.type !== "JSXElement" && s$8.type !== "JSXExpressionContainer" && s$8.type !== "JSXFragment" && s$8.type !== "LogicalExpression" && !w$2(s$8) && !Te$5(s$8) && s$8.type !== "ReturnStatement" && s$8.type !== "ThrowStatement" && s$8.type !== "TypeCastExpression" && s$8.type !== "VariableDeclarator" && s$8.type !== "YieldExpression";
		case "TSInstantiationExpression": return n$8 === "object" && G$4(s$8);
	}
	return !1;
}
var fc$1 = R$5([
	"BlockStatement",
	"BreakStatement",
	"ComponentDeclaration",
	"ClassBody",
	"ClassDeclaration",
	"ClassMethod",
	"ClassProperty",
	"PropertyDefinition",
	"ClassPrivateProperty",
	"ContinueStatement",
	"DebuggerStatement",
	"DeclareComponent",
	"DeclareClass",
	"DeclareExportAllDeclaration",
	"DeclareExportDeclaration",
	"DeclareFunction",
	"DeclareHook",
	"DeclareInterface",
	"DeclareModule",
	"DeclareModuleExports",
	"DeclareNamespace",
	"DeclareVariable",
	"DeclareEnum",
	"DoWhileStatement",
	"EnumDeclaration",
	"ExportAllDeclaration",
	"ExportDefaultDeclaration",
	"ExportNamedDeclaration",
	"ExpressionStatement",
	"ForInStatement",
	"ForOfStatement",
	"ForStatement",
	"FunctionDeclaration",
	"HookDeclaration",
	"IfStatement",
	"ImportDeclaration",
	"InterfaceDeclaration",
	"LabeledStatement",
	"MethodDefinition",
	"ReturnStatement",
	"SwitchStatement",
	"ThrowStatement",
	"TryStatement",
	"TSDeclareFunction",
	"TSEnumDeclaration",
	"TSImportEqualsDeclaration",
	"TSInterfaceDeclaration",
	"TSModuleDeclaration",
	"TSNamespaceExportDeclaration",
	"TypeAlias",
	"VariableDeclaration",
	"WhileStatement",
	"WithStatement"
]);
function Dc(e$4) {
	let t$13 = 0, { node: r$12 } = e$4;
	for (; r$12;) {
		let n$8 = e$4.getParentNode(t$13++);
		if ((n$8 == null ? void 0 : n$8.type) === "ForStatement" && n$8.init === r$12) return !0;
		r$12 = n$8;
	}
	return !1;
}
function Ec$1(e$4) {
	return ur$5(e$4, (t$13) => t$13.type === "ObjectTypeAnnotation" && ur$5(t$13, (r$12) => r$12.type === "FunctionTypeAnnotation"));
}
function Fc(e$4) {
	return ue$3(e$4);
}
function yr$3(e$4) {
	let { parent: t$13, key: r$12 } = e$4;
	switch (t$13.type) {
		case "NGPipeExpression":
			if (r$12 === "arguments" && e$4.isLast) return e$4.callParent(yr$3);
			break;
		case "ObjectProperty":
			if (r$12 === "value") return e$4.callParent(() => e$4.key === "properties" && e$4.isLast);
			break;
		case "BinaryExpression":
		case "LogicalExpression":
			if (r$12 === "right") return e$4.callParent(yr$3);
			break;
		case "ConditionalExpression":
			if (r$12 === "alternate") return e$4.callParent(yr$3);
			break;
		case "UnaryExpression":
			if (t$13.prefix) return e$4.callParent(yr$3);
			break;
	}
	return !1;
}
function xi$5(e$4, t$13) {
	let { node: r$12, parent: n$8 } = e$4;
	return r$12.type === "FunctionExpression" || r$12.type === "ClassExpression" ? n$8.type === "ExportDefaultDeclaration" || !ls$1(e$4, t$13) : !Jt$2(r$12) || n$8.type !== "ExportDefaultDeclaration" && ls$1(e$4, t$13) ? !1 : e$4.call(() => xi$5(e$4, t$13), ...Lr$4(r$12));
}
function Cc(e$4) {
	return !!(e$4.match(void 0, (t$13, r$12) => r$12 === "expression" && t$13.type === "ChainExpression", (t$13, r$12) => r$12 === "tag" && t$13.type === "TaggedTemplateExpression") || e$4.match((t$13) => t$13.type === "OptionalCallExpression" || t$13.type === "OptionalMemberExpression", (t$13, r$12) => r$12 === "tag" && t$13.type === "TaggedTemplateExpression") || e$4.match((t$13) => t$13.type === "OptionalCallExpression" || t$13.type === "OptionalMemberExpression", (t$13, r$12) => r$12 === "expression" && t$13.type === "TSNonNullExpression", (t$13, r$12) => r$12 === "tag" && t$13.type === "TaggedTemplateExpression") || e$4.match(void 0, (t$13, r$12) => r$12 === "expression" && t$13.type === "ChainExpression", (t$13, r$12) => r$12 === "expression" && t$13.type === "TSNonNullExpression", (t$13, r$12) => r$12 === "tag" && t$13.type === "TaggedTemplateExpression") || e$4.match(void 0, (t$13, r$12) => r$12 === "expression" && t$13.type === "TSNonNullExpression", (t$13, r$12) => r$12 === "expression" && t$13.type === "ChainExpression", (t$13, r$12) => r$12 === "tag" && t$13.type === "TaggedTemplateExpression") || e$4.match((t$13) => t$13.type === "OptionalMemberExpression" || t$13.type === "OptionalCallExpression", (t$13, r$12) => r$12 === "object" && t$13.type === "MemberExpression" || r$12 === "callee" && (t$13.type === "CallExpression" || t$13.type === "NewExpression")) || e$4.match((t$13) => t$13.type === "OptionalMemberExpression" || t$13.type === "OptionalCallExpression", (t$13, r$12) => r$12 === "expression" && t$13.type === "TSNonNullExpression", (t$13, r$12) => r$12 === "object" && t$13.type === "MemberExpression" || r$12 === "callee" && t$13.type === "CallExpression") || e$4.match((t$13) => t$13.type === "CallExpression" || t$13.type === "MemberExpression", (t$13, r$12) => r$12 === "expression" && t$13.type === "ChainExpression") && (e$4.match(void 0, void 0, (t$13, r$12) => r$12 === "callee" && (t$13.type === "CallExpression" && !t$13.optional || t$13.type === "NewExpression") || r$12 === "object" && t$13.type === "MemberExpression" && !t$13.optional) || e$4.match(void 0, void 0, (t$13, r$12) => r$12 === "expression" && t$13.type === "TSNonNullExpression", (t$13, r$12) => r$12 === "object" && t$13.type === "MemberExpression" || r$12 === "callee" && t$13.type === "CallExpression")) || e$4.match((t$13) => t$13.type === "CallExpression" || t$13.type === "MemberExpression", (t$13, r$12) => r$12 === "expression" && t$13.type === "TSNonNullExpression", (t$13, r$12) => r$12 === "expression" && t$13.type === "ChainExpression", (t$13, r$12) => r$12 === "object" && t$13.type === "MemberExpression" || r$12 === "callee" && t$13.type === "CallExpression"));
}
function ms$1(e$4) {
	return e$4.type === "Identifier" ? !0 : G$4(e$4) ? !e$4.computed && !e$4.optional && e$4.property.type === "Identifier" && ms$1(e$4.object) : !1;
}
function Ac(e$4) {
	return e$4.type === "ChainExpression" && (e$4 = e$4.expression), ms$1(e$4) || w$2(e$4) && !e$4.optional && ms$1(e$4.callee);
}
var Le$4 = ls$1;
function dc$2(e$4, t$13) {
	let r$12 = t$13 - 1;
	r$12 = Ye$5(e$4, r$12, { backwards: !0 }), r$12 = He$6(e$4, r$12, { backwards: !0 }), r$12 = Ye$5(e$4, r$12, { backwards: !0 });
	let n$8 = He$6(e$4, r$12, { backwards: !0 });
	return r$12 !== n$8;
}
var hi$5 = dc$2;
var Tc$1 = () => !0;
function ys$1(e$4, t$13) {
	let r$12 = e$4.node;
	return r$12.printed = !0, t$13.printer.printComment(e$4, t$13);
}
function xc$2(e$4, t$13) {
	var m$11;
	let r$12 = e$4.node, n$8 = [ys$1(e$4, t$13)], { printer: s$8, originalText: u$14, locStart: i$18, locEnd: a$13 } = t$13;
	if ((m$11 = s$8.isBlockComment) == null ? void 0 : m$11.call(s$8, r$12)) {
		let f$3 = ee$3(u$14, a$13(r$12)) ? ee$3(u$14, i$18(r$12), { backwards: !0 }) ? F$3 : x$2 : " ";
		n$8.push(f$3);
	} else n$8.push(F$3);
	let p$2 = He$6(u$14, Ye$5(u$14, a$13(r$12)));
	return p$2 !== !1 && ee$3(u$14, p$2) && n$8.push(F$3), n$8;
}
function hc$1(e$4, t$13, r$12) {
	var p$2;
	let n$8 = e$4.node, s$8 = ys$1(e$4, t$13), { printer: u$14, originalText: i$18, locStart: a$13 } = t$13, o$9 = (p$2 = u$14.isBlockComment) == null ? void 0 : p$2.call(u$14, n$8);
	if (r$12 != null && r$12.hasLineSuffix && !(r$12 != null && r$12.isBlock) || ee$3(i$18, a$13(n$8), { backwards: !0 })) {
		let m$11 = hi$5(i$18, a$13(n$8));
		return {
			doc: Xn$4([
				F$3,
				m$11 ? F$3 : "",
				s$8
			]),
			isBlock: o$9,
			hasLineSuffix: !0
		};
	}
	return !o$9 || r$12 != null && r$12.hasLineSuffix ? {
		doc: [Xn$4([" ", s$8]), Ce$5],
		isBlock: o$9,
		hasLineSuffix: !0
	} : {
		doc: [" ", s$8],
		isBlock: o$9,
		hasLineSuffix: !1
	};
}
function N$4(e$4, t$13, r$12 = {}) {
	let { node: n$8 } = e$4;
	if (!O$2(n$8 == null ? void 0 : n$8.comments)) return "";
	let { indent: s$8 = !1, marker: u$14, filter: i$18 = Tc$1 } = r$12, a$13 = [];
	if (e$4.each(({ node: p$2 }) => {
		p$2.leading || p$2.trailing || p$2.marker !== u$14 || !i$18(p$2) || a$13.push(ys$1(e$4, t$13));
	}, "comments"), a$13.length === 0) return "";
	let o$9 = b$6(F$3, a$13);
	return s$8 ? D$3([F$3, o$9]) : o$9;
}
function fs$2(e$4, t$13) {
	let r$12 = e$4.node;
	if (!r$12) return {};
	let n$8 = t$13[Symbol.for("printedComments")];
	if ((r$12.comments || []).filter((o$9) => !n$8.has(o$9)).length === 0) return {
		leading: "",
		trailing: ""
	};
	let u$14 = [], i$18 = [], a$13;
	return e$4.each(() => {
		let o$9 = e$4.node;
		if (n$8 != null && n$8.has(o$9)) return;
		let { leading: p$2, trailing: m$11 } = o$9;
		p$2 ? u$14.push(xc$2(e$4, t$13)) : m$11 && (a$13 = hc$1(e$4, t$13, a$13), i$18.push(a$13.doc));
	}, "comments"), {
		leading: u$14,
		trailing: i$18
	};
}
function Ee$3(e$4, t$13, r$12) {
	let { leading: n$8, trailing: s$8 } = fs$2(e$4, r$12);
	return !n$8 && !s$8 ? t$13 : lr$4(t$13, (u$14) => [
		n$8,
		u$14,
		s$8
	]);
}
var Ds$1 = class extends Error {
	name = "UnexpectedNodeError";
	constructor(t$13, r$12, n$8 = "type") {
		super(`Unexpected ${r$12} node ${n$8}: ${JSON.stringify(t$13[n$8])}.`), this.node = t$13;
	}
}, qe$5 = Ds$1;
function Es$1(e$4) {
	if (typeof e$4 != "string") throw new TypeError("Expected a string");
	return e$4.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d");
}
var We$1, Fs$3 = class {
	constructor(t$13) {
		Ys$2(this, We$1);
		Hs$2(this, We$1, new Set(t$13));
	}
	getLeadingWhitespaceCount(t$13) {
		let r$12 = mt$4(this, We$1), n$8 = 0;
		for (let s$8 = 0; s$8 < t$13.length && r$12.has(t$13.charAt(s$8)); s$8++) n$8++;
		return n$8;
	}
	getTrailingWhitespaceCount(t$13) {
		let r$12 = mt$4(this, We$1), n$8 = 0;
		for (let s$8 = t$13.length - 1; s$8 >= 0 && r$12.has(t$13.charAt(s$8)); s$8--) n$8++;
		return n$8;
	}
	getLeadingWhitespace(t$13) {
		let r$12 = this.getLeadingWhitespaceCount(t$13);
		return t$13.slice(0, r$12);
	}
	getTrailingWhitespace(t$13) {
		let r$12 = this.getTrailingWhitespaceCount(t$13);
		return t$13.slice(t$13.length - r$12);
	}
	hasLeadingWhitespace(t$13) {
		return mt$4(this, We$1).has(t$13.charAt(0));
	}
	hasTrailingWhitespace(t$13) {
		return mt$4(this, We$1).has(v$3(!1, t$13, -1));
	}
	trimStart(t$13) {
		let r$12 = this.getLeadingWhitespaceCount(t$13);
		return t$13.slice(r$12);
	}
	trimEnd(t$13) {
		let r$12 = this.getTrailingWhitespaceCount(t$13);
		return t$13.slice(0, t$13.length - r$12);
	}
	trim(t$13) {
		return this.trimEnd(this.trimStart(t$13));
	}
	split(t$13, r$12 = !1) {
		let n$8 = `[${Es$1([...mt$4(this, We$1)].join(""))}]+`, s$8 = new RegExp(r$12 ? `(${n$8})` : n$8, "u");
		return t$13.split(s$8);
	}
	hasWhitespaceCharacter(t$13) {
		let r$12 = mt$4(this, We$1);
		return Array.prototype.some.call(t$13, (n$8) => r$12.has(n$8));
	}
	hasNonWhitespaceCharacter(t$13) {
		let r$12 = mt$4(this, We$1);
		return Array.prototype.some.call(t$13, (n$8) => !r$12.has(n$8));
	}
	isWhitespaceOnly(t$13) {
		let r$12 = mt$4(this, We$1);
		return Array.prototype.every.call(t$13, (n$8) => r$12.has(n$8));
	}
};
We$1 = /* @__PURE__ */ new WeakMap();
var Hr$4 = new Fs$3(` 
\r	`), Cs$1 = (e$4) => e$4 === "" || e$4 === x$2 || e$4 === F$3 || e$4 === E$2;
function gc$1(e$4, t$13, r$12) {
	var _$2, M$2, J$4, I$2, q$3;
	let { node: n$8 } = e$4;
	if (n$8.type === "JSXElement" && Jc$1(n$8)) return [r$12("openingElement"), r$12("closingElement")];
	let s$8 = n$8.type === "JSXElement" ? r$12("openingElement") : r$12("openingFragment"), u$14 = n$8.type === "JSXElement" ? r$12("closingElement") : r$12("closingFragment");
	if (n$8.children.length === 1 && n$8.children[0].type === "JSXExpressionContainer" && (n$8.children[0].expression.type === "TemplateLiteral" || n$8.children[0].expression.type === "TaggedTemplateExpression")) return [
		s$8,
		...e$4.map(r$12, "children"),
		u$14
	];
	n$8.children = n$8.children.map((k$5) => Nc$1(k$5) ? {
		type: "JSXText",
		value: " ",
		raw: " "
	} : k$5);
	let i$18 = n$8.children.some(Y$4), a$13 = n$8.children.filter((k$5) => k$5.type === "JSXExpressionContainer").length > 1, o$9 = n$8.type === "JSXElement" && n$8.openingElement.attributes.length > 1, p$2 = re$4(s$8) || i$18 || o$9 || a$13, m$11 = e$4.parent.rootMarker === "mdx", f$3 = t$13.singleQuote ? "{' '}" : "{\" \"}", y$7 = m$11 ? x$2 : S$3([f$3, E$2], " "), C$3 = ((M$2 = (_$2 = n$8.openingElement) == null ? void 0 : _$2.name) == null ? void 0 : M$2.name) === "fbt", c$3 = Sc(e$4, t$13, r$12, y$7, C$3), A$3 = n$8.children.some((k$5) => fr$4(k$5));
	for (let k$5 = c$3.length - 2; k$5 >= 0; k$5--) {
		let W$2 = c$3[k$5] === "" && c$3[k$5 + 1] === "", ne$6 = c$3[k$5] === F$3 && c$3[k$5 + 1] === "" && c$3[k$5 + 2] === F$3, Z$4 = (c$3[k$5] === E$2 || c$3[k$5] === F$3) && c$3[k$5 + 1] === "" && c$3[k$5 + 2] === y$7, lt$3 = c$3[k$5] === y$7 && c$3[k$5 + 1] === "" && (c$3[k$5 + 2] === E$2 || c$3[k$5 + 2] === F$3), L$4 = c$3[k$5] === y$7 && c$3[k$5 + 1] === "" && c$3[k$5 + 2] === y$7, se$3 = c$3[k$5] === E$2 && c$3[k$5 + 1] === "" && c$3[k$5 + 2] === F$3 || c$3[k$5] === F$3 && c$3[k$5 + 1] === "" && c$3[k$5 + 2] === E$2;
		ne$6 && A$3 || W$2 || Z$4 || L$4 || se$3 ? c$3.splice(k$5, 2) : lt$3 && c$3.splice(k$5 + 1, 2);
	}
	for (; c$3.length > 0 && Cs$1(v$3(!1, c$3, -1));) c$3.pop();
	for (; c$3.length > 1 && Cs$1(c$3[0]) && Cs$1(c$3[1]);) c$3.shift(), c$3.shift();
	let T$9 = [""];
	for (let [k$5, W$2] of c$3.entries()) {
		if (W$2 === y$7) {
			if (k$5 === 1 && wu$1(c$3[k$5 - 1])) {
				if (c$3.length === 2) {
					T$9.push([T$9.pop(), f$3]);
					continue;
				}
				T$9.push([f$3, F$3], "");
				continue;
			} else if (k$5 === c$3.length - 1) {
				T$9.push([T$9.pop(), f$3]);
				continue;
			} else if (c$3[k$5 - 1] === "" && c$3[k$5 - 2] === F$3) {
				T$9.push([T$9.pop(), f$3]);
				continue;
			}
		}
		k$5 % 2 === 0 ? T$9.push([T$9.pop(), W$2]) : T$9.push(W$2, ""), re$4(W$2) && (p$2 = !0);
	}
	let B$4 = A$3 ? Nr$5(T$9) : l$9(T$9, { shouldBreak: !0 });
	if (((J$4 = t$13.cursorNode) == null ? void 0 : J$4.type) === "JSXText" && n$8.children.includes(t$13.cursorNode) ? B$4 = [
		mr$4,
		B$4,
		mr$4
	] : ((I$2 = t$13.nodeBeforeCursor) == null ? void 0 : I$2.type) === "JSXText" && n$8.children.includes(t$13.nodeBeforeCursor) ? B$4 = [mr$4, B$4] : ((q$3 = t$13.nodeAfterCursor) == null ? void 0 : q$3.type) === "JSXText" && n$8.children.includes(t$13.nodeAfterCursor) && (B$4 = [B$4, mr$4]), m$11) return B$4;
	let g$2 = l$9([
		s$8,
		D$3([F$3, B$4]),
		F$3,
		u$14
	]);
	return p$2 ? g$2 : tt$4([l$9([
		s$8,
		...c$3,
		u$14
	]), g$2]);
}
function Sc(e$4, t$13, r$12, n$8, s$8) {
	let u$14 = "", i$18 = [u$14];
	function a$13(p$2) {
		u$14 = p$2, i$18.push([i$18.pop(), p$2]);
	}
	function o$9(p$2) {
		p$2 !== "" && (u$14 = p$2, i$18.push(p$2, ""));
	}
	return e$4.each(({ node: p$2, next: m$11 }) => {
		if (p$2.type === "JSXText") {
			let f$3 = ae$4(p$2);
			if (fr$4(p$2)) {
				let y$7 = Hr$4.split(f$3, !0);
				y$7[0] === "" && (y$7.shift(), /\n/u.test(y$7[0]) ? o$9(Bi$3(s$8, y$7[1], p$2, m$11)) : o$9(n$8), y$7.shift());
				let C$3;
				if (v$3(!1, y$7, -1) === "" && (y$7.pop(), C$3 = y$7.pop()), y$7.length === 0) return;
				for (let [c$3, A$3] of y$7.entries()) c$3 % 2 === 1 ? o$9(x$2) : a$13(A$3);
				C$3 !== void 0 ? /\n/u.test(C$3) ? o$9(Bi$3(s$8, u$14, p$2, m$11)) : o$9(n$8) : o$9(Si$5(s$8, u$14, p$2, m$11));
			} else /\n/u.test(f$3) ? f$3.match(/\n/gu).length > 1 && o$9(F$3) : o$9(n$8);
		} else {
			let f$3 = r$12();
			if (a$13(f$3), m$11 && fr$4(m$11)) {
				let C$3 = Hr$4.trim(ae$4(m$11)), [c$3] = Hr$4.split(C$3);
				o$9(Si$5(s$8, c$3, p$2, m$11));
			} else o$9(F$3);
		}
	}, "children"), i$18;
}
function Si$5(e$4, t$13, r$12, n$8) {
	return e$4 ? "" : r$12.type === "JSXElement" && !r$12.closingElement || (n$8 == null ? void 0 : n$8.type) === "JSXElement" && !n$8.closingElement ? t$13.length === 1 ? E$2 : F$3 : E$2;
}
function Bi$3(e$4, t$13, r$12, n$8) {
	return e$4 ? F$3 : t$13.length === 1 ? r$12.type === "JSXElement" && !r$12.closingElement || (n$8 == null ? void 0 : n$8.type) === "JSXElement" && !n$8.closingElement ? F$3 : E$2 : F$3;
}
var Bc = new Set([
	"ArrayExpression",
	"JSXAttribute",
	"JSXElement",
	"JSXExpressionContainer",
	"JSXFragment",
	"ExpressionStatement",
	"CallExpression",
	"OptionalCallExpression",
	"ConditionalExpression",
	"JsExpressionRoot"
]);
function bc$1(e$4, t$13, r$12) {
	let { parent: n$8 } = e$4;
	if (Bc.has(n$8.type)) return t$13;
	let s$8 = Pc(e$4), u$14 = Le$4(e$4, r$12);
	return l$9([
		u$14 ? "" : S$3("("),
		D$3([E$2, t$13]),
		E$2,
		u$14 ? "" : S$3(")")
	], { shouldBreak: s$8 });
}
function Pc(e$4) {
	return e$4.match(void 0, (t$13) => t$13.type === "ArrowFunctionExpression", w$2) && (e$4.match(void 0, void 0, void 0, (t$13) => t$13.type === "JSXExpressionContainer") || e$4.match(void 0, void 0, void 0, (t$13) => t$13.type === "ChainExpression", (t$13) => t$13.type === "JSXExpressionContainer"));
}
function kc$2(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = [];
	if (s$8.push(r$12("name")), n$8.value) {
		let u$14;
		if (K$4(n$8.value)) {
			let i$18 = ae$4(n$8.value), a$13 = X$5(!1, X$5(!1, i$18.slice(1, -1), "&apos;", "'"), "&quot;", "\""), o$9 = Sr$4(a$13, t$13.jsxSingleQuote);
			a$13 = o$9 === "\"" ? X$5(!1, a$13, "\"", "&quot;") : X$5(!1, a$13, "'", "&apos;"), u$14 = e$4.call(() => Ee$3(e$4, ve$4(o$9 + a$13 + o$9), t$13), "value");
		} else u$14 = r$12("value");
		s$8.push("=", u$14);
	}
	return s$8;
}
function Ic(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = (u$14, i$18) => u$14.type === "JSXEmptyExpression" || !d$13(u$14) && (U$3(u$14) || ue$3(u$14) || u$14.type === "ArrowFunctionExpression" || u$14.type === "AwaitExpression" && (s$8(u$14.argument, u$14) || u$14.argument.type === "JSXElement") || w$2(u$14) || u$14.type === "ChainExpression" && w$2(u$14.expression) || u$14.type === "FunctionExpression" || u$14.type === "TemplateLiteral" || u$14.type === "TaggedTemplateExpression" || u$14.type === "DoExpression" || Y$4(i$18) && (u$14.type === "ConditionalExpression" || Fe$2(u$14)));
	return s$8(n$8.expression, e$4.parent) ? l$9([
		"{",
		r$12("expression"),
		je$3,
		"}"
	]) : l$9([
		"{",
		D$3([E$2, r$12("expression")]),
		E$2,
		je$3,
		"}"
	]);
}
function Lc(e$4, t$13, r$12) {
	var a$13, o$9;
	let { node: n$8 } = e$4, s$8 = d$13(n$8.name) || d$13(n$8.typeParameters) || d$13(n$8.typeArguments);
	if (n$8.selfClosing && n$8.attributes.length === 0 && !s$8) return [
		"<",
		r$12("name"),
		n$8.typeArguments ? r$12("typeArguments") : r$12("typeParameters"),
		" />"
	];
	if (((a$13 = n$8.attributes) == null ? void 0 : a$13.length) === 1 && K$4(n$8.attributes[0].value) && !n$8.attributes[0].value.value.includes(`
`) && !s$8 && !d$13(n$8.attributes[0])) return l$9([
		"<",
		r$12("name"),
		n$8.typeArguments ? r$12("typeArguments") : r$12("typeParameters"),
		" ",
		...e$4.map(r$12, "attributes"),
		n$8.selfClosing ? " />" : ">"
	]);
	let u$14 = (o$9 = n$8.attributes) == null ? void 0 : o$9.some((p$2) => K$4(p$2.value) && p$2.value.value.includes(`
`)), i$18 = t$13.singleAttributePerLine && n$8.attributes.length > 1 ? F$3 : x$2;
	return l$9([
		"<",
		r$12("name"),
		n$8.typeArguments ? r$12("typeArguments") : r$12("typeParameters"),
		D$3(e$4.map(() => [i$18, r$12()], "attributes")),
		...wc$1(n$8, t$13, s$8)
	], { shouldBreak: u$14 });
}
function wc$1(e$4, t$13, r$12) {
	return e$4.selfClosing ? [x$2, "/>"] : Oc$1(e$4, t$13, r$12) ? [">"] : [E$2, ">"];
}
function Oc$1(e$4, t$13, r$12) {
	let n$8 = e$4.attributes.length > 0 && d$13(v$3(!1, e$4.attributes, -1), h$2.Trailing);
	return e$4.attributes.length === 0 && !r$12 || (t$13.bracketSameLine || t$13.jsxBracketSameLine) && (!r$12 || e$4.attributes.length > 0) && !n$8;
}
function _c$1(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = [];
	s$8.push("</");
	let u$14 = r$12("name");
	return d$13(n$8.name, h$2.Leading | h$2.Line) ? s$8.push(D$3([F$3, u$14]), F$3) : d$13(n$8.name, h$2.Leading | h$2.Block) ? s$8.push(" ", u$14) : s$8.push(u$14), s$8.push(">"), s$8;
}
function Mc(e$4, t$13) {
	let { node: r$12 } = e$4, n$8 = d$13(r$12), s$8 = d$13(r$12, h$2.Line), u$14 = r$12.type === "JSXOpeningFragment";
	return [
		u$14 ? "<" : "</",
		D$3([s$8 ? F$3 : n$8 && !u$14 ? " " : "", N$4(e$4, t$13)]),
		s$8 ? F$3 : "",
		">"
	];
}
function vc$1(e$4, t$13, r$12) {
	let n$8 = Ee$3(e$4, gc$1(e$4, t$13, r$12), t$13);
	return bc$1(e$4, n$8, t$13);
}
function jc(e$4, t$13) {
	let { node: r$12 } = e$4, n$8 = d$13(r$12, h$2.Line);
	return [N$4(e$4, t$13, { indent: n$8 }), n$8 ? F$3 : ""];
}
function Rc(e$4, t$13, r$12) {
	let { node: n$8 } = e$4;
	return [
		"{",
		e$4.call(({ node: s$8 }) => {
			let u$14 = ["...", r$12()];
			return !d$13(s$8) || !rs$2(e$4) ? u$14 : [D$3([E$2, Ee$3(e$4, u$14, t$13)]), E$2];
		}, n$8.type === "JSXSpreadAttribute" ? "argument" : "expression"),
		"}"
	];
}
function bi$5(e$4, t$13, r$12) {
	let { node: n$8 } = e$4;
	if (n$8.type.startsWith("JSX")) switch (n$8.type) {
		case "JSXAttribute": return kc$2(e$4, t$13, r$12);
		case "JSXIdentifier": return n$8.name;
		case "JSXNamespacedName": return b$6(":", [r$12("namespace"), r$12("name")]);
		case "JSXMemberExpression": return b$6(".", [r$12("object"), r$12("property")]);
		case "JSXSpreadAttribute":
		case "JSXSpreadChild": return Rc(e$4, t$13, r$12);
		case "JSXExpressionContainer": return Ic(e$4, t$13, r$12);
		case "JSXFragment":
		case "JSXElement": return vc$1(e$4, t$13, r$12);
		case "JSXOpeningElement": return Lc(e$4, t$13, r$12);
		case "JSXClosingElement": return _c$1(e$4, t$13, r$12);
		case "JSXOpeningFragment":
		case "JSXClosingFragment": return Mc(e$4, t$13);
		case "JSXEmptyExpression": return jc(e$4, t$13);
		case "JSXText": throw new Error("JSXText should be handled by JSXElement");
		default: throw new qe$5(n$8, "JSX");
	}
}
function Jc$1(e$4) {
	if (e$4.children.length === 0) return !0;
	if (e$4.children.length > 1) return !1;
	let t$13 = e$4.children[0];
	return t$13.type === "JSXText" && !fr$4(t$13);
}
function fr$4(e$4) {
	return e$4.type === "JSXText" && (Hr$4.hasNonWhitespaceCharacter(ae$4(e$4)) || !/\n/u.test(ae$4(e$4)));
}
function Nc$1(e$4) {
	return e$4.type === "JSXExpressionContainer" && K$4(e$4.expression) && e$4.expression.value === " " && !d$13(e$4.expression);
}
function Pi$3(e$4) {
	let { node: t$13, parent: r$12 } = e$4;
	if (!Y$4(t$13) || !Y$4(r$12)) return !1;
	let { index: n$8, siblings: s$8 } = e$4, u$14;
	for (let i$18 = n$8; i$18 > 0; i$18--) {
		let a$13 = s$8[i$18 - 1];
		if (!(a$13.type === "JSXText" && !fr$4(a$13))) {
			u$14 = a$13;
			break;
		}
	}
	return (u$14 == null ? void 0 : u$14.type) === "JSXExpressionContainer" && u$14.expression.type === "JSXEmptyExpression" && kt$4(u$14.expression);
}
function Gc$1(e$4) {
	return kt$4(e$4.node) || Pi$3(e$4);
}
var Vr$3 = Gc$1;
var qc = 0;
function $r$5(e$4, t$13, r$12) {
	var M$2;
	let { node: n$8, parent: s$8, grandparent: u$14, key: i$18 } = e$4, a$13 = i$18 !== "body" && (s$8.type === "IfStatement" || s$8.type === "WhileStatement" || s$8.type === "SwitchStatement" || s$8.type === "DoWhileStatement"), o$9 = n$8.operator === "|>" && ((M$2 = e$4.root.extra) == null ? void 0 : M$2.__isUsingHackPipeline), p$2 = As$1(e$4, t$13, r$12, !1, a$13);
	if (a$13) return p$2;
	if (o$9) return l$9(p$2);
	if (w$2(s$8) && s$8.callee === n$8 || s$8.type === "UnaryExpression" || G$4(s$8) && !s$8.computed) return l$9([D$3([E$2, ...p$2]), E$2]);
	let m$11 = s$8.type === "ReturnStatement" || s$8.type === "ThrowStatement" || s$8.type === "JSXExpressionContainer" && u$14.type === "JSXAttribute" || n$8.operator !== "|" && s$8.type === "JsExpressionRoot" || n$8.type !== "NGPipeExpression" && (s$8.type === "NGRoot" && t$13.parser === "__ng_binding" || s$8.type === "NGMicrosyntaxExpression" && u$14.type === "NGMicrosyntax" && u$14.body.length === 1) || n$8 === s$8.body && s$8.type === "ArrowFunctionExpression" || n$8 !== s$8.body && s$8.type === "ForStatement" || s$8.type === "ConditionalExpression" && u$14.type !== "ReturnStatement" && u$14.type !== "ThrowStatement" && !w$2(u$14) || s$8.type === "TemplateLiteral", f$3 = s$8.type === "AssignmentExpression" || s$8.type === "VariableDeclarator" || s$8.type === "ClassProperty" || s$8.type === "PropertyDefinition" || s$8.type === "TSAbstractPropertyDefinition" || s$8.type === "ClassPrivateProperty" || Te$5(s$8), y$7 = Fe$2(n$8.left) && ar$4(n$8.operator, n$8.left.operator);
	if (m$11 || Ht$4(n$8) && !y$7 || !Ht$4(n$8) && f$3) return l$9(p$2);
	if (p$2.length === 0) return "";
	let C$3 = Y$4(n$8.right), c$3 = p$2.findIndex((J$4) => typeof J$4 != "string" && !Array.isArray(J$4) && J$4.type === fe$3), A$3 = p$2.slice(0, c$3 === -1 ? 1 : c$3 + 1), T$9 = p$2.slice(A$3.length, C$3 ? -1 : void 0), B$4 = Symbol("logicalChain-" + ++qc), g$2 = l$9([...A$3, D$3(T$9)], { id: B$4 });
	if (!C$3) return g$2;
	let _$2 = v$3(!1, p$2, -1);
	return l$9([g$2, xt$3(_$2, { groupId: B$4 })]);
}
function As$1(e$4, t$13, r$12, n$8, s$8) {
	var B$4;
	let { node: u$14 } = e$4;
	if (!Fe$2(u$14)) return [l$9(r$12())];
	let i$18 = [];
	ar$4(u$14.operator, u$14.left.operator) ? i$18 = e$4.call((g$2) => As$1(g$2, t$13, r$12, !0, s$8), "left") : i$18.push(l$9(r$12("left")));
	let a$13 = Ht$4(u$14), o$9 = (u$14.operator === "|>" || u$14.type === "NGPipeExpression" || Wc$1(e$4, t$13)) && !de$5(t$13.originalText, u$14.right), m$11 = !d$13(u$14.right, h$2.Leading, Gr$4) && de$5(t$13.originalText, u$14.right), f$3 = u$14.type === "NGPipeExpression" ? "|" : u$14.operator, y$7 = u$14.type === "NGPipeExpression" && u$14.arguments.length > 0 ? l$9(D$3([
		E$2,
		": ",
		b$6([x$2, ": "], e$4.map(() => be$4(2, l$9(r$12())), "arguments"))
	])) : "", C$3;
	if (a$13) C$3 = [f$3, de$5(t$13.originalText, u$14.right) ? D$3([
		x$2,
		r$12("right"),
		y$7
	]) : [
		" ",
		r$12("right"),
		y$7
	]];
	else {
		let _$2 = f$3 === "|>" && ((B$4 = e$4.root.extra) == null ? void 0 : B$4.__isUsingHackPipeline) ? e$4.call((M$2) => As$1(M$2, t$13, r$12, !0, s$8), "right") : r$12("right");
		if (t$13.experimentalOperatorPosition === "start") {
			let M$2 = "";
			if (m$11) switch (Be$2(_$2)) {
				case ge$4:
					M$2 = _$2.splice(0, 1)[0];
					break;
				case Se$4:
					M$2 = _$2.contents.splice(0, 1)[0];
					break;
			}
			C$3 = [
				x$2,
				M$2,
				f$3,
				" ",
				_$2,
				y$7
			];
		} else C$3 = [
			o$9 ? x$2 : "",
			f$3,
			o$9 ? " " : x$2,
			_$2,
			y$7
		];
	}
	let { parent: c$3 } = e$4, A$3 = d$13(u$14.left, h$2.Trailing | h$2.Line);
	if ((A$3 || !(s$8 && u$14.type === "LogicalExpression") && c$3.type !== u$14.type && u$14.left.type !== u$14.type && u$14.right.type !== u$14.type) && (C$3 = l$9(C$3, { shouldBreak: A$3 })), t$13.experimentalOperatorPosition === "start" ? i$18.push(a$13 || m$11 ? " " : "", C$3) : i$18.push(o$9 ? "" : " ", C$3), n$8 && d$13(u$14)) {
		let g$2 = Ut$3(Ee$3(e$4, i$18, t$13));
		return g$2.type === _e$5 ? g$2.parts : Array.isArray(g$2) ? g$2 : [g$2];
	}
	return i$18;
}
function Ht$4(e$4) {
	return e$4.type !== "LogicalExpression" ? !1 : !!(ue$3(e$4.right) && e$4.right.properties.length > 0 || U$3(e$4.right) && e$4.right.elements.length > 0 || Y$4(e$4.right));
}
var ki$4 = (e$4) => e$4.type === "BinaryExpression" && e$4.operator === "|";
function Wc$1(e$4, t$13) {
	return (t$13.parser === "__vue_expression" || t$13.parser === "__vue_ts_expression") && ki$4(e$4.node) && !e$4.hasAncestor((r$12) => !ki$4(r$12) && r$12.type !== "JsExpressionRoot");
}
function Li$3(e$4, t$13, r$12) {
	let { node: n$8 } = e$4;
	if (n$8.type.startsWith("NG")) switch (n$8.type) {
		case "NGRoot": return [r$12("node"), d$13(n$8.node) ? " //" + Ve$4(n$8.node)[0].value.trimEnd() : ""];
		case "NGPipeExpression": return $r$5(e$4, t$13, r$12);
		case "NGChainedExpression": return l$9(b$6([";", x$2], e$4.map(() => Yc(e$4) ? r$12() : [
			"(",
			r$12(),
			")"
		], "expressions")));
		case "NGEmptyExpression": return "";
		case "NGMicrosyntax": return e$4.map(() => [e$4.isFirst ? "" : Ii$3(e$4) ? " " : [";", x$2], r$12()], "body");
		case "NGMicrosyntaxKey": return /^[$_a-z][\w$]*(?:-[$_a-z][\w$])*$/iu.test(n$8.name) ? n$8.name : JSON.stringify(n$8.name);
		case "NGMicrosyntaxExpression": return [r$12("expression"), n$8.alias === null ? "" : [" as ", r$12("alias")]];
		case "NGMicrosyntaxKeyedExpression": {
			let { index: s$8, parent: u$14 } = e$4, i$18 = Ii$3(e$4) || Uc(e$4) || (s$8 === 1 && (n$8.key.name === "then" || n$8.key.name === "else" || n$8.key.name === "as") || s$8 === 2 && (n$8.key.name === "else" && u$14.body[s$8 - 1].type === "NGMicrosyntaxKeyedExpression" && u$14.body[s$8 - 1].key.name === "then" || n$8.key.name === "track")) && u$14.body[0].type === "NGMicrosyntaxExpression";
			return [
				r$12("key"),
				i$18 ? " " : ": ",
				r$12("expression")
			];
		}
		case "NGMicrosyntaxLet": return [
			"let ",
			r$12("key"),
			n$8.value === null ? "" : [" = ", r$12("value")]
		];
		case "NGMicrosyntaxAs": return [
			r$12("key"),
			" as ",
			r$12("alias")
		];
		default: throw new qe$5(n$8, "Angular");
	}
}
function Ii$3({ node: e$4, index: t$13 }) {
	return e$4.type === "NGMicrosyntaxKeyedExpression" && e$4.key.name === "of" && t$13 === 1;
}
function Uc(e$4) {
	let { node: t$13 } = e$4;
	return e$4.parent.body[1].key.name === "of" && t$13.type === "NGMicrosyntaxKeyedExpression" && t$13.key.name === "track" && t$13.key.type === "NGMicrosyntaxKey";
}
var Xc = R$5([
	"CallExpression",
	"OptionalCallExpression",
	"AssignmentExpression"
]);
function Yc({ node: e$4 }) {
	return ur$5(e$4, Xc);
}
function ds$1(e$4, t$13, r$12) {
	let { node: n$8 } = e$4;
	return l$9([b$6(x$2, e$4.map(r$12, "decorators")), _i$4(n$8, t$13) ? F$3 : x$2]);
}
function wi$5(e$4, t$13, r$12) {
	return Mi$3(e$4.node) ? [b$6(F$3, e$4.map(r$12, "declaration", "decorators")), F$3] : "";
}
function Oi$4(e$4, t$13, r$12) {
	let { node: n$8, parent: s$8 } = e$4, { decorators: u$14 } = n$8;
	if (!O$2(u$14) || Mi$3(s$8) || Vr$3(e$4)) return "";
	let i$18 = n$8.type === "ClassExpression" || n$8.type === "ClassDeclaration" || _i$4(n$8, t$13);
	return [
		e$4.key === "declaration" && yu$2(s$8) ? F$3 : i$18 ? Ce$5 : "",
		b$6(x$2, e$4.map(r$12, "decorators")),
		x$2
	];
}
function _i$4(e$4, t$13) {
	return e$4.decorators.some((r$12) => ee$3(t$13.originalText, P$4(r$12)));
}
function Mi$3(e$4) {
	var r$12;
	if (e$4.type !== "ExportDefaultDeclaration" && e$4.type !== "ExportNamedDeclaration" && e$4.type !== "DeclareExportDeclaration") return !1;
	let t$13 = (r$12 = e$4.declaration) == null ? void 0 : r$12.decorators;
	return O$2(t$13) && Bt$4(e$4, t$13[0]);
}
var Dt$4 = class extends Error {
	name = "ArgExpansionBailout";
};
function Hc(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = le$5(n$8);
	if (s$8.length === 0) return [
		"(",
		N$4(e$4, t$13),
		")"
	];
	let u$14 = s$8.length - 1;
	if (Kc$1(s$8)) {
		let f$3 = ["("];
		return Gt$3(e$4, (y$7, C$3) => {
			f$3.push(r$12()), C$3 !== u$14 && f$3.push(", ");
		}), f$3.push(")"), f$3;
	}
	let i$18 = !1, a$13 = [];
	Gt$3(e$4, ({ node: f$3 }, y$7) => {
		let C$3 = r$12();
		y$7 === u$14 || (me$4(f$3, t$13) ? (i$18 = !0, C$3 = [
			C$3,
			",",
			F$3,
			F$3
		]) : C$3 = [
			C$3,
			",",
			x$2
		]), a$13.push(C$3);
	});
	let o$9 = !t$13.parser.startsWith("__ng_") && n$8.type !== "ImportExpression" && n$8.type !== "TSImportType" && ce$3(t$13, "all") ? "," : "";
	if (n$8.type === "TSImportType" && s$8.length === 1 && (s$8[0].type === "TSLiteralType" && K$4(s$8[0].literal) || K$4(s$8[0])) && !d$13(s$8[0])) return l$9([
		"(",
		...a$13,
		S$3(o$9),
		")"
	]);
	function p$2() {
		return l$9([
			"(",
			D$3([x$2, ...a$13]),
			o$9,
			x$2,
			")"
		], { shouldBreak: !0 });
	}
	if (i$18 || e$4.parent.type !== "Decorator" && Au$3(s$8)) return p$2();
	if ($c$1(s$8)) {
		let f$3 = a$13.slice(1);
		if (f$3.some(re$4)) return p$2();
		let y$7;
		try {
			y$7 = r$12(Gn$5(n$8, 0), { expandFirstArg: !0 });
		} catch (C$3) {
			if (C$3 instanceof Dt$4) return p$2();
			throw C$3;
		}
		return re$4(y$7) ? [Ce$5, tt$4([[
			"(",
			l$9(y$7, { shouldBreak: !0 }),
			", ",
			...f$3,
			")"
		], p$2()])] : tt$4([
			[
				"(",
				y$7,
				", ",
				...f$3,
				")"
			],
			[
				"(",
				l$9(y$7, { shouldBreak: !0 }),
				", ",
				...f$3,
				")"
			],
			p$2()
		]);
	}
	if (Vc(s$8, a$13, t$13)) {
		let f$3 = a$13.slice(0, -1);
		if (f$3.some(re$4)) return p$2();
		let y$7;
		try {
			y$7 = r$12(Gn$5(n$8, -1), { expandLastArg: !0 });
		} catch (C$3) {
			if (C$3 instanceof Dt$4) return p$2();
			throw C$3;
		}
		return re$4(y$7) ? [Ce$5, tt$4([[
			"(",
			...f$3,
			l$9(y$7, { shouldBreak: !0 }),
			")"
		], p$2()])] : tt$4([
			[
				"(",
				...f$3,
				y$7,
				")"
			],
			[
				"(",
				...f$3,
				l$9(y$7, { shouldBreak: !0 }),
				")"
			],
			p$2()
		]);
	}
	let m$11 = [
		"(",
		D$3([E$2, ...a$13]),
		S$3(o$9),
		E$2,
		")"
	];
	return vr$3(e$4) ? m$11 : l$9(m$11, { shouldBreak: a$13.some(re$4) || i$18 });
}
function Dr$4(e$4, t$13 = !1) {
	return ue$3(e$4) && (e$4.properties.length > 0 || d$13(e$4)) || U$3(e$4) && (e$4.elements.length > 0 || d$13(e$4)) || e$4.type === "TSTypeAssertion" && Dr$4(e$4.expression) || xe$3(e$4) && Dr$4(e$4.expression) || e$4.type === "FunctionExpression" || e$4.type === "ArrowFunctionExpression" && (!e$4.returnType || !e$4.returnType.typeAnnotation || e$4.returnType.typeAnnotation.type !== "TSTypeReference" || Qc(e$4.body)) && (e$4.body.type === "BlockStatement" || e$4.body.type === "ArrowFunctionExpression" && Dr$4(e$4.body, !0) || ue$3(e$4.body) || U$3(e$4.body) || !t$13 && (w$2(e$4.body) || e$4.body.type === "ConditionalExpression") || Y$4(e$4.body)) || e$4.type === "DoExpression" || e$4.type === "ModuleExpression";
}
function Vc(e$4, t$13, r$12) {
	var u$14, i$18;
	let n$8 = v$3(!1, e$4, -1);
	if (e$4.length === 1) {
		let a$13 = v$3(!1, t$13, -1);
		if ((u$14 = a$13.label) != null && u$14.embed && ((i$18 = a$13.label) == null ? void 0 : i$18.hug) !== !1) return !0;
	}
	let s$8 = v$3(!1, e$4, -2);
	return !d$13(n$8, h$2.Leading) && !d$13(n$8, h$2.Trailing) && Dr$4(n$8) && (!s$8 || s$8.type !== n$8.type) && (e$4.length !== 2 || s$8.type !== "ArrowFunctionExpression" || !U$3(n$8)) && !(e$4.length > 1 && Ts$2(n$8, r$12));
}
function $c$1(e$4) {
	if (e$4.length !== 2) return !1;
	let [t$13, r$12] = e$4;
	return t$13.type === "ModuleExpression" && zc$1(r$12) ? !0 : !d$13(t$13) && (t$13.type === "FunctionExpression" || t$13.type === "ArrowFunctionExpression" && t$13.body.type === "BlockStatement") && r$12.type !== "FunctionExpression" && r$12.type !== "ArrowFunctionExpression" && r$12.type !== "ConditionalExpression" && ji$4(r$12) && !Dr$4(r$12);
}
function ji$4(e$4) {
	if (e$4.type === "ParenthesizedExpression") return ji$4(e$4.expression);
	if (xe$3(e$4) || e$4.type === "TypeCastExpression") {
		let { typeAnnotation: t$13 } = e$4;
		if (t$13.type === "TypeAnnotation" && (t$13 = t$13.typeAnnotation), t$13.type === "TSArrayType" && (t$13 = t$13.elementType, t$13.type === "TSArrayType" && (t$13 = t$13.elementType)), t$13.type === "GenericTypeAnnotation" || t$13.type === "TSTypeReference") {
			let r$12 = t$13.typeArguments ?? t$13.typeParameters;
			(r$12 == null ? void 0 : r$12.params.length) === 1 && (t$13 = r$12.params[0]);
		}
		return Nt$4(t$13) && we$2(e$4.expression, 1);
	}
	return yt$3(e$4) && le$5(e$4).length > 1 ? !1 : Fe$2(e$4) ? we$2(e$4.left, 1) && we$2(e$4.right, 1) : Jn$4(e$4) || we$2(e$4);
}
function Kc$1(e$4) {
	return e$4.length === 2 ? vi$5(e$4, 0) : e$4.length === 3 ? e$4[0].type === "Identifier" && vi$5(e$4, 1) : !1;
}
function vi$5(e$4, t$13) {
	let r$12 = e$4[t$13], n$8 = e$4[t$13 + 1];
	return r$12.type === "ArrowFunctionExpression" && Q$3(r$12).length === 0 && r$12.body.type === "BlockStatement" && n$8.type === "ArrayExpression" && !e$4.some((s$8) => d$13(s$8));
}
function Qc(e$4) {
	return e$4.type === "BlockStatement" && (e$4.body.some((t$13) => t$13.type !== "EmptyStatement") || d$13(e$4, h$2.Dangling));
}
function zc$1(e$4) {
	if (!(e$4.type === "ObjectExpression" && e$4.properties.length === 1)) return !1;
	let [t$13] = e$4.properties;
	return Te$5(t$13) ? !t$13.computed && (t$13.key.type === "Identifier" && t$13.key.name === "type" || K$4(t$13.key) && t$13.key.value === "type") && K$4(t$13.value) && t$13.value.value === "module" : !1;
}
var Lt$4 = Hc;
var Zc = (e$4) => ((e$4.type === "ChainExpression" || e$4.type === "TSNonNullExpression") && (e$4 = e$4.expression), w$2(e$4) && le$5(e$4).length > 0);
function Ri$3(e$4, t$13, r$12) {
	var p$2;
	let n$8 = r$12("object"), s$8 = xs$2(e$4, t$13, r$12), { node: u$14 } = e$4, i$18 = e$4.findAncestor((m$11) => !(G$4(m$11) || m$11.type === "TSNonNullExpression")), a$13 = e$4.findAncestor((m$11) => !(m$11.type === "ChainExpression" || m$11.type === "TSNonNullExpression")), o$9 = i$18 && (i$18.type === "NewExpression" || i$18.type === "BindExpression" || i$18.type === "AssignmentExpression" && i$18.left.type !== "Identifier") || u$14.computed || u$14.object.type === "Identifier" && u$14.property.type === "Identifier" && !G$4(a$13) || (a$13.type === "AssignmentExpression" || a$13.type === "VariableDeclarator") && (Zc(u$14.object) || ((p$2 = n$8.label) == null ? void 0 : p$2.memberChain));
	return at$3(n$8.label, [n$8, o$9 ? s$8 : l$9(D$3([E$2, s$8]))]);
}
function xs$2(e$4, t$13, r$12) {
	let n$8 = r$12("property"), { node: s$8 } = e$4, u$14 = V$4(e$4);
	return s$8.computed ? !s$8.property || ye$3(s$8.property) ? [
		u$14,
		"[",
		n$8,
		"]"
	] : l$9([
		u$14,
		"[",
		D$3([E$2, n$8]),
		E$2,
		"]"
	]) : [
		u$14,
		".",
		n$8
	];
}
function Ji$3(e$4, t$13, r$12) {
	if (e$4.node.type === "ChainExpression") return e$4.call(() => Ji$3(e$4, t$13, r$12), "expression");
	let n$8 = (e$4.parent.type === "ChainExpression" ? e$4.grandparent : e$4.parent).type === "ExpressionStatement", s$8 = [];
	function u$14(L$4) {
		let { originalText: se$3 } = t$13, Ae$5 = ot$5(se$3, P$4(L$4));
		return se$3.charAt(Ae$5) === ")" ? Ae$5 !== !1 && vt$4(se$3, Ae$5 + 1) : me$4(L$4, t$13);
	}
	function i$18() {
		let { node: L$4 } = e$4;
		if (L$4.type === "ChainExpression") return e$4.call(i$18, "expression");
		if (w$2(L$4) && (dt$2(L$4.callee) || w$2(L$4.callee))) {
			let se$3 = u$14(L$4);
			s$8.unshift({
				node: L$4,
				hasTrailingEmptyLine: se$3,
				printed: [Ee$3(e$4, [
					V$4(e$4),
					rt$4(e$4, t$13, r$12),
					Lt$4(e$4, t$13, r$12)
				], t$13), se$3 ? F$3 : ""]
			}), e$4.call(i$18, "callee");
		} else dt$2(L$4) ? (s$8.unshift({
			node: L$4,
			needsParens: Le$4(e$4, t$13),
			printed: Ee$3(e$4, G$4(L$4) ? xs$2(e$4, t$13, r$12) : Kr$4(e$4, t$13, r$12), t$13)
		}), e$4.call(i$18, "object")) : L$4.type === "TSNonNullExpression" ? (s$8.unshift({
			node: L$4,
			printed: Ee$3(e$4, "!", t$13)
		}), e$4.call(i$18, "expression")) : s$8.unshift({
			node: L$4,
			printed: r$12()
		});
	}
	let { node: a$13 } = e$4;
	s$8.unshift({
		node: a$13,
		printed: [
			V$4(e$4),
			rt$4(e$4, t$13, r$12),
			Lt$4(e$4, t$13, r$12)
		]
	}), a$13.callee && e$4.call(i$18, "callee");
	let o$9 = [], p$2 = [s$8[0]], m$11 = 1;
	for (; m$11 < s$8.length && (s$8[m$11].node.type === "TSNonNullExpression" || w$2(s$8[m$11].node) || G$4(s$8[m$11].node) && s$8[m$11].node.computed && ye$3(s$8[m$11].node.property)); ++m$11) p$2.push(s$8[m$11]);
	if (!w$2(s$8[0].node)) for (; m$11 + 1 < s$8.length && dt$2(s$8[m$11].node) && dt$2(s$8[m$11 + 1].node); ++m$11) p$2.push(s$8[m$11]);
	o$9.push(p$2), p$2 = [];
	let f$3 = !1;
	for (; m$11 < s$8.length; ++m$11) {
		if (f$3 && dt$2(s$8[m$11].node)) {
			if (s$8[m$11].node.computed && ye$3(s$8[m$11].node.property)) {
				p$2.push(s$8[m$11]);
				continue;
			}
			o$9.push(p$2), p$2 = [], f$3 = !1;
		}
		(w$2(s$8[m$11].node) || s$8[m$11].node.type === "ImportExpression") && (f$3 = !0), p$2.push(s$8[m$11]), d$13(s$8[m$11].node, h$2.Trailing) && (o$9.push(p$2), p$2 = [], f$3 = !1);
	}
	p$2.length > 0 && o$9.push(p$2);
	function y$7(L$4) {
		return /^[A-Z]|^[$_]+$/u.test(L$4);
	}
	function C$3(L$4) {
		return L$4.length <= t$13.tabWidth;
	}
	function c$3(L$4) {
		var Ot$4;
		let se$3 = (Ot$4 = L$4[1][0]) == null ? void 0 : Ot$4.node.computed;
		if (L$4[0].length === 1) {
			let nt$4 = L$4[0][0].node;
			return nt$4.type === "ThisExpression" || nt$4.type === "Identifier" && (y$7(nt$4.name) || n$8 && C$3(nt$4.name) || se$3);
		}
		let Ae$5 = v$3(!1, L$4[0], -1).node;
		return G$4(Ae$5) && Ae$5.property.type === "Identifier" && (y$7(Ae$5.property.name) || se$3);
	}
	let A$3 = o$9.length >= 2 && !d$13(o$9[1][0].node) && c$3(o$9);
	function T$9(L$4) {
		let se$3 = L$4.map((Ae$5) => Ae$5.printed);
		return L$4.length > 0 && v$3(!1, L$4, -1).needsParens ? [
			"(",
			...se$3,
			")"
		] : se$3;
	}
	function B$4(L$4) {
		return L$4.length === 0 ? "" : D$3([F$3, b$6(F$3, L$4.map(T$9))]);
	}
	let g$2 = o$9.map(T$9), _$2 = g$2, M$2 = A$3 ? 3 : 2, J$4 = o$9.flat(), I$2 = J$4.slice(1, -1).some((L$4) => d$13(L$4.node, h$2.Leading)) || J$4.slice(0, -1).some((L$4) => d$13(L$4.node, h$2.Trailing)) || o$9[M$2] && d$13(o$9[M$2][0].node, h$2.Leading);
	if (o$9.length <= M$2 && !I$2 && !o$9.some((L$4) => v$3(!1, L$4, -1).hasTrailingEmptyLine)) return vr$3(e$4) ? _$2 : l$9(_$2);
	let q$3 = v$3(!1, o$9[A$3 ? 1 : 0], -1).node, k$5 = !w$2(q$3) && u$14(q$3), W$2 = [
		T$9(o$9[0]),
		A$3 ? o$9.slice(1, 2).map(T$9) : "",
		k$5 ? F$3 : "",
		B$4(o$9.slice(A$3 ? 2 : 1))
	], ne$6 = s$8.map(({ node: L$4 }) => L$4).filter(w$2);
	function Z$4() {
		let L$4 = v$3(!1, v$3(!1, o$9, -1), -1).node, se$3 = v$3(!1, g$2, -1);
		return w$2(L$4) && re$4(se$3) && ne$6.slice(0, -1).some((Ae$5) => Ae$5.arguments.some(Rt$4));
	}
	let lt$3;
	return I$2 || ne$6.length > 2 && ne$6.some((L$4) => !L$4.arguments.every((se$3) => we$2(se$3))) || g$2.slice(0, -1).some(re$4) || Z$4() ? lt$3 = l$9(W$2) : lt$3 = [re$4(_$2) || k$5 ? Ce$5 : "", tt$4([_$2, W$2])], at$3({ memberChain: !0 }, lt$3);
}
var Ni$3 = Ji$3;
function Qr$6(e$4, t$13, r$12) {
	var m$11;
	let { node: n$8 } = e$4, s$8 = n$8.type === "NewExpression", u$14 = n$8.type === "ImportExpression", i$18 = V$4(e$4), a$13 = le$5(n$8), o$9 = a$13.length === 1 && _r$4(a$13[0], t$13.originalText);
	if (o$9 || el(e$4) || Pt$4(n$8, e$4.parent)) {
		let f$3 = [];
		if (Gt$3(e$4, () => {
			f$3.push(r$12());
		}), !(o$9 && (m$11 = f$3[0].label) != null && m$11.embed)) return [
			s$8 ? "new " : "",
			Gi$4(e$4, r$12),
			i$18,
			rt$4(e$4, t$13, r$12),
			"(",
			b$6(", ", f$3),
			")"
		];
	}
	if (!u$14 && !s$8 && dt$2(n$8.callee) && !e$4.call((f$3) => Le$4(f$3, t$13), "callee", ...n$8.callee.type === "ChainExpression" ? ["expression"] : [])) return Ni$3(e$4, t$13, r$12);
	let p$2 = [
		s$8 ? "new " : "",
		Gi$4(e$4, r$12),
		i$18,
		rt$4(e$4, t$13, r$12),
		Lt$4(e$4, t$13, r$12)
	];
	return u$14 || w$2(n$8.callee) ? l$9(p$2) : p$2;
}
function Gi$4(e$4, t$13) {
	let { node: r$12 } = e$4;
	return r$12.type === "ImportExpression" ? `import${r$12.phase ? `.${r$12.phase}` : ""}` : t$13("callee");
}
function el(e$4) {
	let { node: t$13 } = e$4;
	if (t$13.type !== "CallExpression" || t$13.optional || t$13.callee.type !== "Identifier") return !1;
	let r$12 = le$5(t$13);
	return t$13.callee.name === "require" ? r$12.length === 1 && K$4(r$12[0]) || r$12.length > 1 : t$13.callee.name === "define" && e$4.parent.type === "ExpressionStatement" ? r$12.length === 1 || r$12.length === 2 && r$12[0].type === "ArrayExpression" || r$12.length === 3 && K$4(r$12[0]) && r$12[1].type === "ArrayExpression" : !1;
}
function ht$3(e$4, t$13, r$12, n$8, s$8, u$14) {
	let i$18 = tl(e$4, t$13, r$12, n$8, u$14), a$13 = u$14 ? r$12(u$14, { assignmentLayout: i$18 }) : "";
	switch (i$18) {
		case "break-after-operator": return l$9([
			l$9(n$8),
			s$8,
			l$9(D$3([x$2, a$13]))
		]);
		case "never-break-after-operator": return l$9([
			l$9(n$8),
			s$8,
			" ",
			a$13
		]);
		case "fluid": {
			let o$9 = Symbol("assignment");
			return l$9([
				l$9(n$8),
				s$8,
				l$9(D$3(x$2), { id: o$9 }),
				je$3,
				xt$3(a$13, { groupId: o$9 })
			]);
		}
		case "break-lhs": return l$9([
			n$8,
			s$8,
			" ",
			l$9(a$13)
		]);
		case "chain": return [
			l$9(n$8),
			s$8,
			x$2,
			a$13
		];
		case "chain-tail": return [
			l$9(n$8),
			s$8,
			D$3([x$2, a$13])
		];
		case "chain-tail-arrow-chain": return [
			l$9(n$8),
			s$8,
			a$13
		];
		case "only-left": return n$8;
	}
}
function Wi$4(e$4, t$13, r$12) {
	let { node: n$8 } = e$4;
	return ht$3(e$4, t$13, r$12, r$12("left"), [" ", n$8.operator], "right");
}
function Ui$3(e$4, t$13, r$12) {
	return ht$3(e$4, t$13, r$12, r$12("id"), " =", "init");
}
function tl(e$4, t$13, r$12, n$8, s$8) {
	let { node: u$14 } = e$4, i$18 = u$14[s$8];
	if (!i$18) return "only-left";
	let a$13 = !zr$3(i$18);
	if (e$4.match(zr$3, Xi$4, (y$7) => !a$13 || y$7.type !== "ExpressionStatement" && y$7.type !== "VariableDeclaration")) return a$13 ? i$18.type === "ArrowFunctionExpression" && i$18.body.type === "ArrowFunctionExpression" ? "chain-tail-arrow-chain" : "chain-tail" : "chain";
	if (!a$13 && zr$3(i$18.right) || de$5(t$13.originalText, i$18)) return "break-after-operator";
	if (u$14.type === "ImportAttribute" || i$18.type === "CallExpression" && i$18.callee.name === "require" || t$13.parser === "json5" || t$13.parser === "jsonc" || t$13.parser === "json") return "never-break-after-operator";
	let m$11 = Lu$1(n$8);
	if (nl$2(u$14) || al$3(u$14) || hs$2(u$14) && m$11) return "break-lhs";
	let f$3 = pl$3(u$14, n$8, t$13);
	return e$4.call(() => rl$1(e$4, t$13, r$12, f$3), s$8) ? "break-after-operator" : sl$3(u$14) ? "break-lhs" : !m$11 && (f$3 || i$18.type === "TemplateLiteral" || i$18.type === "TaggedTemplateExpression" || Du$2(i$18) || ye$3(i$18) || i$18.type === "ClassExpression") ? "never-break-after-operator" : "fluid";
}
function rl$1(e$4, t$13, r$12, n$8) {
	let s$8 = e$4.node;
	if (Fe$2(s$8) && !Ht$4(s$8)) return !0;
	switch (s$8.type) {
		case "StringLiteralTypeAnnotation":
		case "SequenceExpression": return !0;
		case "TSConditionalType":
		case "ConditionalTypeAnnotation":
			if (!t$13.experimentalTernaries && !ml$3(s$8)) break;
			return !0;
		case "ConditionalExpression": {
			if (!t$13.experimentalTernaries) {
				let { test: p$2 } = s$8;
				return Fe$2(p$2) && !Ht$4(p$2);
			}
			let { consequent: a$13, alternate: o$9 } = s$8;
			return a$13.type === "ConditionalExpression" || o$9.type === "ConditionalExpression";
		}
		case "ClassExpression": return O$2(s$8.decorators);
	}
	if (n$8) return !1;
	let u$14 = s$8, i$18 = [];
	for (;;) if (u$14.type === "UnaryExpression" || u$14.type === "AwaitExpression" || u$14.type === "YieldExpression" && u$14.argument !== null) u$14 = u$14.argument, i$18.push("argument");
	else if (u$14.type === "TSNonNullExpression") u$14 = u$14.expression, i$18.push("expression");
	else break;
	return !!(K$4(u$14) || e$4.call(() => Yi$4(e$4, t$13, r$12), ...i$18));
}
function nl$2(e$4) {
	if (Xi$4(e$4)) {
		let t$13 = e$4.left || e$4.id;
		return t$13.type === "ObjectPattern" && t$13.properties.length > 2 && t$13.properties.some((r$12) => {
			var n$8;
			return Te$5(r$12) && (!r$12.shorthand || ((n$8 = r$12.value) == null ? void 0 : n$8.type) === "AssignmentPattern");
		});
	}
	return !1;
}
function zr$3(e$4) {
	return e$4.type === "AssignmentExpression";
}
function Xi$4(e$4) {
	return zr$3(e$4) || e$4.type === "VariableDeclarator";
}
function sl$3(e$4) {
	let t$13 = il$2(e$4);
	if (O$2(t$13)) {
		let r$12 = e$4.type === "TSTypeAliasDeclaration" ? "constraint" : "bound";
		if (t$13.length > 1 && t$13.some((n$8) => n$8[r$12] || n$8.default)) return !0;
	}
	return !1;
}
var ul$2 = R$5(["TSTypeAliasDeclaration", "TypeAlias"]);
function il$2(e$4) {
	var t$13;
	if (ul$2(e$4)) return (t$13 = e$4.typeParameters) == null ? void 0 : t$13.params;
}
function al$3(e$4) {
	if (e$4.type !== "VariableDeclarator") return !1;
	let { typeAnnotation: t$13 } = e$4.id;
	if (!t$13 || !t$13.typeAnnotation) return !1;
	let r$12 = qi$2(t$13.typeAnnotation);
	return O$2(r$12) && r$12.length > 1 && r$12.some((n$8) => O$2(qi$2(n$8)) || n$8.type === "TSConditionalType");
}
function hs$2(e$4) {
	var t$13;
	return e$4.type === "VariableDeclarator" && ((t$13 = e$4.init) == null ? void 0 : t$13.type) === "ArrowFunctionExpression";
}
var ol$3 = R$5(["TSTypeReference", "GenericTypeAnnotation"]);
function qi$2(e$4) {
	var t$13;
	if (ol$3(e$4)) return (t$13 = e$4.typeArguments ?? e$4.typeParameters) == null ? void 0 : t$13.params;
}
function Yi$4(e$4, t$13, r$12, n$8 = !1) {
	var i$18;
	let { node: s$8 } = e$4, u$14 = () => Yi$4(e$4, t$13, r$12, !0);
	if (s$8.type === "ChainExpression" || s$8.type === "TSNonNullExpression") return e$4.call(u$14, "expression");
	if (w$2(s$8)) {
		if ((i$18 = Qr$6(e$4, t$13, r$12).label) != null && i$18.memberChain) return !1;
		let o$9 = le$5(s$8);
		return !(o$9.length === 0 || o$9.length === 1 && ir$4(o$9[0], t$13)) || cl$3(s$8, r$12) ? !1 : e$4.call(u$14, "callee");
	}
	return G$4(s$8) ? e$4.call(u$14, "object") : n$8 && (s$8.type === "Identifier" || s$8.type === "ThisExpression");
}
function pl$3(e$4, t$13, r$12) {
	return Te$5(e$4) ? (t$13 = Ut$3(t$13), typeof t$13 == "string" && st$4(t$13) < r$12.tabWidth + 3) : !1;
}
function cl$3(e$4, t$13) {
	let r$12 = ll$3(e$4);
	if (O$2(r$12)) {
		if (r$12.length > 1) return !0;
		if (r$12.length === 1) {
			let s$8 = r$12[0];
			if (Oe$4(s$8) || qt$4(s$8) || s$8.type === "TSTypeLiteral" || s$8.type === "ObjectTypeAnnotation") return !0;
		}
		let n$8 = e$4.typeParameters ? "typeParameters" : "typeArguments";
		if (re$4(t$13(n$8))) return !0;
	}
	return !1;
}
function ll$3(e$4) {
	var t$13;
	return (t$13 = e$4.typeParameters ?? e$4.typeArguments) == null ? void 0 : t$13.params;
}
function ml$3(e$4) {
	function t$13(r$12) {
		switch (r$12.type) {
			case "FunctionTypeAnnotation":
			case "GenericTypeAnnotation":
			case "TSFunctionType": return !!r$12.typeParameters;
			case "TSTypeReference": return !!(r$12.typeArguments ?? r$12.typeParameters);
			default: return !1;
		}
	}
	return t$13(e$4.checkType) || t$13(e$4.extendsType);
}
function Ue$3(e$4, t$13, r$12, n$8, s$8) {
	let u$14 = e$4.node, i$18 = Q$3(u$14), a$13 = s$8 ? rt$4(e$4, t$13, r$12) : "";
	if (i$18.length === 0) return [
		a$13,
		"(",
		N$4(e$4, t$13, { filter: (c$3) => ke$5(t$13.originalText, P$4(c$3)) === ")" }),
		")"
	];
	let { parent: o$9 } = e$4, p$2 = Pt$4(o$9), m$11 = gs$2(u$14), f$3 = [];
	if (hu$2(e$4, (c$3, A$3) => {
		let T$9 = A$3 === i$18.length - 1;
		T$9 && u$14.rest && f$3.push("..."), f$3.push(r$12()), !T$9 && (f$3.push(","), p$2 || m$11 ? f$3.push(" ") : me$4(i$18[A$3], t$13) ? f$3.push(F$3, F$3) : f$3.push(x$2));
	}), n$8 && !fl$3(e$4)) {
		if (re$4(a$13) || re$4(f$3)) throw new Dt$4();
		return l$9([
			cr$4(a$13),
			"(",
			cr$4(f$3),
			")"
		]);
	}
	let y$7 = i$18.every((c$3) => !O$2(c$3.decorators));
	return m$11 && y$7 ? [
		a$13,
		"(",
		...f$3,
		")"
	] : p$2 ? [
		a$13,
		"(",
		...f$3,
		")"
	] : (Or$4(o$9) || Eu$1(o$9) || o$9.type === "TypeAlias" || o$9.type === "UnionTypeAnnotation" || o$9.type === "IntersectionTypeAnnotation" || o$9.type === "FunctionTypeAnnotation" && o$9.returnType === u$14) && i$18.length === 1 && i$18[0].name === null && u$14.this !== i$18[0] && i$18[0].typeAnnotation && u$14.typeParameters === null && Nt$4(i$18[0].typeAnnotation) && !u$14.rest ? t$13.arrowParens === "always" || u$14.type === "HookTypeAnnotation" ? [
		"(",
		...f$3,
		")"
	] : f$3 : [
		a$13,
		"(",
		D$3([E$2, ...f$3]),
		S$3(!xu$3(u$14) && ce$3(t$13, "all") ? "," : ""),
		E$2,
		")"
	];
}
function gs$2(e$4) {
	if (!e$4) return !1;
	let t$13 = Q$3(e$4);
	if (t$13.length !== 1) return !1;
	let [r$12] = t$13;
	return !d$13(r$12) && (r$12.type === "ObjectPattern" || r$12.type === "ArrayPattern" || r$12.type === "Identifier" && r$12.typeAnnotation && (r$12.typeAnnotation.type === "TypeAnnotation" || r$12.typeAnnotation.type === "TSTypeAnnotation") && Re$5(r$12.typeAnnotation.typeAnnotation) || r$12.type === "FunctionTypeParam" && Re$5(r$12.typeAnnotation) && r$12 !== e$4.rest || r$12.type === "AssignmentPattern" && (r$12.left.type === "ObjectPattern" || r$12.left.type === "ArrayPattern") && (r$12.right.type === "Identifier" || ue$3(r$12.right) && r$12.right.properties.length === 0 || U$3(r$12.right) && r$12.right.elements.length === 0));
}
function yl$3(e$4) {
	let t$13;
	return e$4.returnType ? (t$13 = e$4.returnType, t$13.typeAnnotation && (t$13 = t$13.typeAnnotation)) : e$4.typeAnnotation && (t$13 = e$4.typeAnnotation), t$13;
}
function ct$3(e$4, t$13) {
	var s$8;
	let r$12 = yl$3(e$4);
	if (!r$12) return !1;
	let n$8 = (s$8 = e$4.typeParameters) == null ? void 0 : s$8.params;
	if (n$8) {
		if (n$8.length > 1) return !1;
		if (n$8.length === 1) {
			let u$14 = n$8[0];
			if (u$14.constraint || u$14.default) return !1;
		}
	}
	return Q$3(e$4).length === 1 && (Re$5(r$12) || re$4(t$13));
}
function fl$3(e$4) {
	return e$4.match((t$13) => t$13.type === "ArrowFunctionExpression" && t$13.body.type === "BlockStatement", (t$13, r$12) => {
		if (t$13.type === "CallExpression" && r$12 === "arguments" && t$13.arguments.length === 1 && t$13.callee.type === "CallExpression") {
			let n$8 = t$13.callee.callee;
			return n$8.type === "Identifier" || n$8.type === "MemberExpression" && !n$8.computed && n$8.object.type === "Identifier" && n$8.property.type === "Identifier";
		}
		return !1;
	}, (t$13, r$12) => t$13.type === "VariableDeclarator" && r$12 === "init" || t$13.type === "ExportDefaultDeclaration" && r$12 === "declaration" || t$13.type === "TSExportAssignment" && r$12 === "expression" || t$13.type === "AssignmentExpression" && r$12 === "right" && t$13.left.type === "MemberExpression" && t$13.left.object.type === "Identifier" && t$13.left.object.name === "module" && t$13.left.property.type === "Identifier" && t$13.left.property.name === "exports", (t$13) => t$13.type !== "VariableDeclaration" || t$13.kind === "const" && t$13.declarations.length === 1);
}
function Hi$4(e$4) {
	let t$13 = Q$3(e$4);
	return t$13.length > 1 && t$13.some((r$12) => r$12.type === "TSParameterProperty");
}
var Dl$3 = R$5([
	"VoidTypeAnnotation",
	"TSVoidKeyword",
	"NullLiteralTypeAnnotation",
	"TSNullKeyword"
]), El$3 = R$5([
	"ObjectTypeAnnotation",
	"TSTypeLiteral",
	"GenericTypeAnnotation",
	"TSTypeReference"
]);
function Fl$2(e$4) {
	let { types: t$13 } = e$4;
	if (t$13.some((n$8) => d$13(n$8))) return !1;
	let r$12 = t$13.find((n$8) => El$3(n$8));
	return r$12 ? t$13.every((n$8) => n$8 === r$12 || Dl$3(n$8)) : !1;
}
function Ss$1(e$4) {
	return Nt$4(e$4) || Re$5(e$4) ? !0 : Oe$4(e$4) ? Fl$2(e$4) : !1;
}
function Vi$4(e$4, t$13, r$12) {
	let n$8 = t$13.semi ? ";" : "", { node: s$8 } = e$4, u$14 = [
		$$3(e$4),
		"opaque type ",
		r$12("id"),
		r$12("typeParameters")
	];
	return s$8.supertype && u$14.push(": ", r$12("supertype")), s$8.impltype && u$14.push(" = ", r$12("impltype")), u$14.push(n$8), u$14;
}
function Zr$4(e$4, t$13, r$12) {
	let n$8 = t$13.semi ? ";" : "", { node: s$8 } = e$4, u$14 = [$$3(e$4)];
	u$14.push("type ", r$12("id"), r$12("typeParameters"));
	let i$18 = s$8.type === "TSTypeAliasDeclaration" ? "typeAnnotation" : "right";
	return [ht$3(e$4, t$13, r$12, u$14, " =", i$18), n$8];
}
function en$5(e$4, t$13, r$12) {
	let n$8 = !1;
	return l$9(e$4.map(({ isFirst: s$8, previous: u$14, node: i$18, index: a$13 }) => {
		let o$9 = r$12();
		if (s$8) return o$9;
		let p$2 = Re$5(i$18), m$11 = Re$5(u$14);
		return m$11 && p$2 ? [" & ", n$8 ? D$3(o$9) : o$9] : !m$11 && !p$2 || de$5(t$13.originalText, i$18) ? t$13.experimentalOperatorPosition === "start" ? D$3([
			x$2,
			"& ",
			o$9
		]) : D$3([
			" &",
			x$2,
			o$9
		]) : (a$13 > 1 && (n$8 = !0), [" & ", a$13 > 1 ? D$3(o$9) : o$9]);
	}, "types"));
}
function tn$3(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, { parent: s$8 } = e$4, u$14 = s$8.type !== "TypeParameterInstantiation" && (!Je$5(s$8) || !t$13.experimentalTernaries) && s$8.type !== "TSTypeParameterInstantiation" && s$8.type !== "GenericTypeAnnotation" && s$8.type !== "TSTypeReference" && s$8.type !== "TSTypeAssertion" && s$8.type !== "TupleTypeAnnotation" && s$8.type !== "TSTupleType" && !(s$8.type === "FunctionTypeParam" && !s$8.name && e$4.grandparent.this !== s$8) && !((s$8.type === "TypeAlias" || s$8.type === "VariableDeclarator" || s$8.type === "TSTypeAliasDeclaration") && de$5(t$13.originalText, n$8)), i$18 = Ss$1(n$8), a$13 = e$4.map((m$11) => {
		let f$3 = r$12();
		return i$18 || (f$3 = be$4(2, f$3)), Ee$3(m$11, f$3, t$13);
	}, "types");
	if (i$18) return b$6(" | ", a$13);
	let o$9 = u$14 && !de$5(t$13.originalText, n$8), p$2 = [S$3([o$9 ? x$2 : "", "| "]), b$6([x$2, "| "], a$13)];
	return Le$4(e$4, t$13) ? l$9([D$3(p$2), E$2]) : (s$8.type === "TupleTypeAnnotation" || s$8.type === "TSTupleType") && s$8[s$8.type === "TupleTypeAnnotation" && s$8.types ? "types" : "elementTypes"].length > 1 ? l$9([
		D$3([S$3(["(", E$2]), p$2]),
		E$2,
		S$3(")")
	]) : l$9(u$14 ? D$3(p$2) : p$2);
}
function Cl$3(e$4) {
	var n$8;
	let { node: t$13, parent: r$12 } = e$4;
	return t$13.type === "FunctionTypeAnnotation" && (Or$4(r$12) || !((r$12.type === "ObjectTypeProperty" || r$12.type === "ObjectTypeInternalSlot") && !r$12.variance && !r$12.optional && Bt$4(r$12, t$13) || r$12.type === "ObjectTypeCallProperty" || ((n$8 = e$4.getParentNode(2)) == null ? void 0 : n$8.type) === "DeclareFunction"));
}
function rn$5(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = [Vt$4(e$4)];
	(n$8.type === "TSConstructorType" || n$8.type === "TSConstructSignatureDeclaration") && s$8.push("new ");
	let u$14 = Ue$3(e$4, t$13, r$12, !1, !0), i$18 = [];
	return n$8.type === "FunctionTypeAnnotation" ? i$18.push(Cl$3(e$4) ? " => " : ": ", r$12("returnType")) : i$18.push(H$5(e$4, r$12, n$8.returnType ? "returnType" : "typeAnnotation")), ct$3(n$8, i$18) && (u$14 = l$9(u$14)), s$8.push(u$14, i$18), l$9(s$8);
}
function nn$4(e$4, t$13, r$12) {
	return [
		r$12("objectType"),
		V$4(e$4),
		"[",
		r$12("indexType"),
		"]"
	];
}
function sn$3(e$4, t$13, r$12) {
	return ["infer ", r$12("typeParameter")];
}
function Bs$3(e$4, t$13, r$12) {
	let { node: n$8 } = e$4;
	return [
		n$8.postfix ? "" : r$12,
		H$5(e$4, t$13),
		n$8.postfix ? r$12 : ""
	];
}
function un$4(e$4, t$13, r$12) {
	let { node: n$8 } = e$4;
	return [
		"...",
		...n$8.type === "TupleTypeSpreadElement" && n$8.label ? [r$12("label"), ": "] : [],
		r$12("typeAnnotation")
	];
}
function an$4(e$4, t$13, r$12) {
	let { node: n$8 } = e$4;
	return [
		n$8.variance ? r$12("variance") : "",
		r$12("label"),
		n$8.optional ? "?" : "",
		": ",
		r$12("elementType")
	];
}
var Al$3 = /* @__PURE__ */ new WeakSet();
function H$5(e$4, t$13, r$12 = "typeAnnotation") {
	let { node: { [r$12]: n$8 } } = e$4;
	if (!n$8) return "";
	let s$8 = !1;
	if (n$8.type === "TSTypeAnnotation" || n$8.type === "TypeAnnotation") {
		let u$14 = e$4.call($i$4, r$12);
		(u$14 === "=>" || u$14 === ":" && d$13(n$8, h$2.Leading)) && (s$8 = !0), Al$3.add(n$8);
	}
	return s$8 ? [" ", t$13(r$12)] : t$13(r$12);
}
var $i$4 = (e$4) => e$4.match((t$13) => t$13.type === "TSTypeAnnotation", (t$13, r$12) => (r$12 === "returnType" || r$12 === "typeAnnotation") && (t$13.type === "TSFunctionType" || t$13.type === "TSConstructorType")) ? "=>" : e$4.match((t$13) => t$13.type === "TSTypeAnnotation", (t$13, r$12) => r$12 === "typeAnnotation" && (t$13.type === "TSJSDocNullableType" || t$13.type === "TSJSDocNonNullableType" || t$13.type === "TSTypePredicate")) || e$4.match((t$13) => t$13.type === "TypeAnnotation", (t$13, r$12) => r$12 === "typeAnnotation" && t$13.type === "Identifier", (t$13, r$12) => r$12 === "id" && t$13.type === "DeclareFunction") || e$4.match((t$13) => t$13.type === "TypeAnnotation", (t$13, r$12) => r$12 === "typeAnnotation" && t$13.type === "Identifier", (t$13, r$12) => r$12 === "id" && t$13.type === "DeclareHook") || e$4.match((t$13) => t$13.type === "TypeAnnotation", (t$13, r$12) => r$12 === "bound" && t$13.type === "TypeParameter" && t$13.usesExtendsBound) ? "" : ":";
function on$5(e$4, t$13, r$12) {
	let n$8 = $i$4(e$4);
	return n$8 ? [
		n$8,
		" ",
		r$12("typeAnnotation")
	] : r$12("typeAnnotation");
}
function pn$4(e$4) {
	return [e$4("elementType"), "[]"];
}
function cn$5({ node: e$4 }, t$13) {
	let r$12 = e$4.type === "TSTypeQuery" ? "exprName" : "argument", n$8 = e$4.type === "TypeofTypeAnnotation" || e$4.typeArguments ? "typeArguments" : "typeParameters";
	return [
		"typeof ",
		t$13(r$12),
		t$13(n$8)
	];
}
function ln$4(e$4, t$13) {
	let { node: r$12 } = e$4;
	return [
		r$12.type === "TSTypePredicate" && r$12.asserts ? "asserts " : r$12.type === "TypePredicate" && r$12.kind ? `${r$12.kind} ` : "",
		t$13("parameterName"),
		r$12.typeAnnotation ? [" is ", H$5(e$4, t$13)] : ""
	];
}
function V$4(e$4) {
	let { node: t$13 } = e$4;
	return !t$13.optional || t$13.type === "Identifier" && t$13 === e$4.parent.key ? "" : w$2(t$13) || G$4(t$13) && t$13.computed || t$13.type === "OptionalIndexedAccessType" ? "?." : "?";
}
function mn$4(e$4) {
	return e$4.node.definite || e$4.match(void 0, (t$13, r$12) => r$12 === "id" && t$13.type === "VariableDeclarator" && t$13.definite) ? "!" : "";
}
var dl$3 = new Set([
	"DeclareClass",
	"DeclareComponent",
	"DeclareFunction",
	"DeclareHook",
	"DeclareVariable",
	"DeclareExportDeclaration",
	"DeclareExportAllDeclaration",
	"DeclareOpaqueType",
	"DeclareTypeAlias",
	"DeclareEnum",
	"DeclareInterface"
]);
function $$3(e$4) {
	let { node: t$13 } = e$4;
	return t$13.declare || dl$3.has(t$13.type) && e$4.parent.type !== "DeclareExportDeclaration" ? "declare " : "";
}
var Tl$3 = new Set([
	"TSAbstractMethodDefinition",
	"TSAbstractPropertyDefinition",
	"TSAbstractAccessorProperty"
]);
function Vt$4({ node: e$4 }) {
	return e$4.abstract || Tl$3.has(e$4.type) ? "abstract " : "";
}
function rt$4(e$4, t$13, r$12) {
	let n$8 = e$4.node;
	return n$8.typeArguments ? r$12("typeArguments") : n$8.typeParameters ? r$12("typeParameters") : "";
}
function Kr$4(e$4, t$13, r$12) {
	return ["::", r$12("callee")];
}
function Et$3(e$4, t$13, r$12) {
	return e$4.type === "EmptyStatement" ? ";" : e$4.type === "BlockStatement" || r$12 ? [" ", t$13] : D$3([x$2, t$13]);
}
function yn$4(e$4, t$13) {
	return [
		"...",
		t$13("argument"),
		H$5(e$4, t$13)
	];
}
function $t$3(e$4) {
	return e$4.accessibility ? e$4.accessibility + " " : "";
}
function xl$3(e$4, t$13, r$12, n$8) {
	let { node: s$8 } = e$4, u$14 = s$8.inexact ? "..." : "";
	return d$13(s$8, h$2.Dangling) ? l$9([
		r$12,
		u$14,
		N$4(e$4, t$13, { indent: !0 }),
		E$2,
		n$8
	]) : [
		r$12,
		u$14,
		n$8
	];
}
function Kt$3(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = [], u$14 = "[", i$18 = "]", a$13 = n$8.type === "TupleTypeAnnotation" && n$8.types ? "types" : n$8.type === "TSTupleType" || n$8.type === "TupleTypeAnnotation" ? "elementTypes" : "elements", o$9 = n$8[a$13];
	if (o$9.length === 0) s$8.push(xl$3(e$4, t$13, u$14, i$18));
	else {
		let p$2 = v$3(!1, o$9, -1), m$11 = (p$2 == null ? void 0 : p$2.type) !== "RestElement" && !n$8.inexact, f$3 = p$2 === null, y$7 = Symbol("array"), C$3 = !t$13.__inJestEach && o$9.length > 1 && o$9.every((T$9, B$4, g$2) => {
			let _$2 = T$9 == null ? void 0 : T$9.type;
			if (!U$3(T$9) && !ue$3(T$9)) return !1;
			let M$2 = g$2[B$4 + 1];
			if (M$2 && _$2 !== M$2.type) return !1;
			let J$4 = U$3(T$9) ? "elements" : "properties";
			return T$9[J$4] && T$9[J$4].length > 1;
		}), c$3 = Ts$2(n$8, t$13), A$3 = m$11 ? f$3 ? "," : ce$3(t$13) ? c$3 ? S$3(",", "", { groupId: y$7 }) : S$3(",") : "" : "";
		s$8.push(l$9([
			u$14,
			D$3([
				E$2,
				c$3 ? gl$3(e$4, t$13, r$12, A$3) : [hl$3(e$4, t$13, r$12, a$13, n$8.inexact), A$3],
				N$4(e$4, t$13)
			]),
			E$2,
			i$18
		], {
			shouldBreak: C$3,
			id: y$7
		}));
	}
	return s$8.push(V$4(e$4), H$5(e$4, r$12)), s$8;
}
function Ts$2(e$4, t$13) {
	return U$3(e$4) && e$4.elements.length > 1 && e$4.elements.every((r$12) => r$12 && (ye$3(r$12) || Rn$3(r$12) && !d$13(r$12.argument)) && !d$13(r$12, h$2.Trailing | h$2.Line, (n$8) => !ee$3(t$13.originalText, j$5(n$8), { backwards: !0 })));
}
function Ki$4({ node: e$4 }, { originalText: t$13 }) {
	let r$12 = (s$8) => _t$4(t$13, Mt$3(t$13, s$8)), n$8 = (s$8) => t$13[s$8] === "," ? s$8 : n$8(r$12(s$8 + 1));
	return vt$4(t$13, n$8(P$4(e$4)));
}
function hl$3(e$4, t$13, r$12, n$8, s$8) {
	let u$14 = [];
	return e$4.each(({ node: i$18, isLast: a$13 }) => {
		u$14.push(i$18 ? l$9(r$12()) : ""), (!a$13 || s$8) && u$14.push([
			",",
			x$2,
			i$18 && Ki$4(e$4, t$13) ? E$2 : ""
		]);
	}, n$8), s$8 && u$14.push("..."), u$14;
}
function gl$3(e$4, t$13, r$12, n$8) {
	let s$8 = [];
	return e$4.each(({ isLast: u$14, next: i$18 }) => {
		s$8.push([r$12(), u$14 ? n$8 : ","]), u$14 || s$8.push(Ki$4(e$4, t$13) ? [F$3, F$3] : d$13(i$18, h$2.Leading | h$2.Line) ? F$3 : x$2);
	}, "elements"), Nr$5(s$8);
}
var Sl$2 = /^[\$A-Z_a-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC][\$0-9A-Z_a-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]*$/, Bl$2 = (e$4) => Sl$2.test(e$4), Qi$4 = Bl$2;
function bl$3(e$4) {
	return e$4.length === 1 ? e$4 : e$4.toLowerCase().replace(/^([+-]?[\d.]+e)(?:\+|(-))?0*(?=\d)/u, "$1$2").replace(/^([+-]?[\d.]+)e[+-]?0+$/u, "$1").replace(/^([+-])?\./u, "$10.").replace(/(\.\d+?)0+(?=e|$)/u, "$1").replace(/\.(?=e|$)/u, "");
}
var Ft$3 = bl$3;
var fn$5 = /* @__PURE__ */ new WeakMap();
function Zi$4(e$4) {
	return /^(?:\d+|\d+\.\d+)$/u.test(e$4);
}
function zi$3(e$4, t$13) {
	return t$13.parser === "json" || t$13.parser === "jsonc" || !K$4(e$4.key) || ut$3(ae$4(e$4.key), t$13).slice(1, -1) !== e$4.key.value ? !1 : !!(Qi$4(e$4.key.value) && !(t$13.parser === "babel-ts" && e$4.type === "ClassProperty" || (t$13.parser === "typescript" || t$13.parser === "oxc-ts") && e$4.type === "PropertyDefinition") || Zi$4(e$4.key.value) && String(Number(e$4.key.value)) === e$4.key.value && e$4.type !== "ImportAttribute" && (t$13.parser === "babel" || t$13.parser === "acorn" || t$13.parser === "oxc" || t$13.parser === "espree" || t$13.parser === "meriyah" || t$13.parser === "__babel_estree"));
}
function Pl$2(e$4, t$13) {
	let { key: r$12 } = e$4.node;
	return (r$12.type === "Identifier" || ye$3(r$12) && Zi$4(Ft$3(ae$4(r$12))) && String(r$12.value) === Ft$3(ae$4(r$12)) && !(t$13.parser === "typescript" || t$13.parser === "babel-ts" || t$13.parser === "oxc-ts")) && (t$13.parser === "json" || t$13.parser === "jsonc" || t$13.quoteProps === "consistent" && fn$5.get(e$4.parent));
}
function Ct$5(e$4, t$13, r$12) {
	let { node: n$8 } = e$4;
	if (n$8.computed) return [
		"[",
		r$12("key"),
		"]"
	];
	let { parent: s$8 } = e$4, { key: u$14 } = n$8;
	if (t$13.quoteProps === "consistent" && !fn$5.has(s$8)) {
		let i$18 = e$4.siblings.some((a$13) => !a$13.computed && K$4(a$13.key) && !zi$3(a$13, t$13));
		fn$5.set(s$8, i$18);
	}
	if (Pl$2(e$4, t$13)) {
		let i$18 = ut$3(JSON.stringify(u$14.type === "Identifier" ? u$14.name : u$14.value.toString()), t$13);
		return e$4.call((a$13) => Ee$3(a$13, i$18, t$13), "key");
	}
	return zi$3(n$8, t$13) && (t$13.quoteProps === "as-needed" || t$13.quoteProps === "consistent" && !fn$5.get(s$8)) ? e$4.call((i$18) => Ee$3(i$18, /^\d/u.test(u$14.value) ? Ft$3(u$14.value) : u$14.value, t$13), "key") : r$12("key");
}
function Dn$4(e$4, t$13, r$12) {
	let { node: n$8 } = e$4;
	return n$8.shorthand ? r$12("value") : ht$3(e$4, t$13, r$12, Ct$5(e$4, t$13, r$12), ":", "value");
}
var kl$3 = ({ node: e$4, key: t$13, parent: r$12 }) => t$13 === "value" && e$4.type === "FunctionExpression" && (r$12.type === "ObjectMethod" || r$12.type === "ClassMethod" || r$12.type === "ClassPrivateMethod" || r$12.type === "MethodDefinition" || r$12.type === "TSAbstractMethodDefinition" || r$12.type === "TSDeclareMethod" || r$12.type === "Property" && bt$5(r$12));
function En$4(e$4, t$13, r$12, n$8) {
	if (kl$3(e$4)) return Fn$3(e$4, t$13, r$12);
	let { node: s$8 } = e$4, u$14 = !1;
	if ((s$8.type === "FunctionDeclaration" || s$8.type === "FunctionExpression") && n$8 != null && n$8.expandLastArg) {
		let { parent: m$11 } = e$4;
		w$2(m$11) && (le$5(m$11).length > 1 || Q$3(s$8).every((f$3) => f$3.type === "Identifier" && !f$3.typeAnnotation)) && (u$14 = !0);
	}
	let i$18 = [
		$$3(e$4),
		s$8.async ? "async " : "",
		`function${s$8.generator ? "*" : ""} `,
		s$8.id ? r$12("id") : ""
	], a$13 = Ue$3(e$4, t$13, r$12, u$14), o$9 = Qt$2(e$4, r$12), p$2 = ct$3(s$8, o$9);
	return i$18.push(rt$4(e$4, t$13, r$12), l$9([p$2 ? l$9(a$13) : a$13, o$9]), s$8.body ? " " : "", r$12("body")), t$13.semi && (s$8.declare || !s$8.body) && i$18.push(";"), i$18;
}
function Er$4(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, { kind: s$8 } = n$8, u$14 = n$8.value || n$8, i$18 = [];
	return !s$8 || s$8 === "init" || s$8 === "method" || s$8 === "constructor" ? u$14.async && i$18.push("async ") : (jt$4.ok(s$8 === "get" || s$8 === "set"), i$18.push(s$8, " ")), u$14.generator && i$18.push("*"), i$18.push(Ct$5(e$4, t$13, r$12), n$8.optional ? "?" : "", n$8 === u$14 ? Fn$3(e$4, t$13, r$12) : r$12("value")), i$18;
}
function Fn$3(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = Ue$3(e$4, t$13, r$12), u$14 = Qt$2(e$4, r$12), i$18 = Hi$4(n$8), a$13 = ct$3(n$8, u$14), o$9 = [rt$4(e$4, t$13, r$12), l$9([i$18 ? l$9(s$8, { shouldBreak: !0 }) : a$13 ? l$9(s$8) : s$8, u$14])];
	return n$8.body ? o$9.push(" ", r$12("body")) : o$9.push(t$13.semi ? ";" : ""), o$9;
}
function Il$3(e$4) {
	let t$13 = Q$3(e$4);
	return t$13.length === 1 && !e$4.typeParameters && !d$13(e$4, h$2.Dangling) && t$13[0].type === "Identifier" && !t$13[0].typeAnnotation && !d$13(t$13[0]) && !t$13[0].optional && !e$4.predicate && !e$4.returnType;
}
function Cn$4(e$4, t$13) {
	if (t$13.arrowParens === "always") return !1;
	if (t$13.arrowParens === "avoid") {
		let { node: r$12 } = e$4;
		return Il$3(r$12);
	}
	return !1;
}
function Qt$2(e$4, t$13) {
	let { node: r$12 } = e$4, s$8 = [H$5(e$4, t$13, "returnType")];
	return r$12.predicate && s$8.push(t$13("predicate")), s$8;
}
function ea$2(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = t$13.semi ? ";" : "", u$14 = [];
	if (n$8.argument) {
		let o$9 = r$12("argument");
		Ll$3(t$13, n$8.argument) ? o$9 = [
			"(",
			D$3([F$3, o$9]),
			F$3,
			")"
		] : (Fe$2(n$8.argument) || t$13.experimentalTernaries && n$8.argument.type === "ConditionalExpression" && (n$8.argument.consequent.type === "ConditionalExpression" || n$8.argument.alternate.type === "ConditionalExpression")) && (o$9 = l$9([
			S$3("("),
			D$3([E$2, o$9]),
			E$2,
			S$3(")")
		])), u$14.push(" ", o$9);
	}
	let i$18 = d$13(n$8, h$2.Dangling), a$13 = s$8 && i$18 && d$13(n$8, h$2.Last | h$2.Line);
	return a$13 && u$14.push(s$8), i$18 && u$14.push(" ", N$4(e$4, t$13)), a$13 || u$14.push(s$8), u$14;
}
function ta$2(e$4, t$13, r$12) {
	return ["return", ea$2(e$4, t$13, r$12)];
}
function ra$2(e$4, t$13, r$12) {
	return ["throw", ea$2(e$4, t$13, r$12)];
}
function Ll$3(e$4, t$13) {
	if (de$5(e$4.originalText, t$13) || d$13(t$13, h$2.Leading, (r$12) => ie$5(e$4.originalText, j$5(r$12), P$4(r$12))) && !Y$4(t$13)) return !0;
	if (Jt$2(t$13)) {
		let r$12 = t$13, n$8;
		for (; n$8 = mu$3(r$12);) if (r$12 = n$8, de$5(e$4.originalText, r$12)) return !0;
	}
	return !1;
}
var bs$3 = /* @__PURE__ */ new WeakMap();
function na$3(e$4) {
	return bs$3.has(e$4) || bs$3.set(e$4, e$4.type === "ConditionalExpression" && !pe$5(e$4, (t$13) => t$13.type === "ObjectExpression")), bs$3.get(e$4);
}
var wl$3 = (e$4) => e$4.type === "SequenceExpression";
function sa$2(e$4, t$13, r$12, n$8 = {}) {
	let s$8 = [], u$14, i$18 = [], a$13 = !1, o$9 = !n$8.expandLastArg && e$4.node.body.type === "ArrowFunctionExpression", p$2;
	(function B$4() {
		let { node: g$2 } = e$4, _$2 = Ol$3(e$4, t$13, r$12, n$8);
		if (s$8.length === 0) s$8.push(_$2);
		else {
			let { leading: M$2, trailing: J$4 } = fs$2(e$4, t$13);
			s$8.push([M$2, _$2]), i$18.unshift(J$4);
		}
		o$9 && (a$13 || (a$13 = g$2.returnType && Q$3(g$2).length > 0 || g$2.typeParameters || Q$3(g$2).some((M$2) => M$2.type !== "Identifier"))), !o$9 || g$2.body.type !== "ArrowFunctionExpression" ? (u$14 = r$12("body", n$8), p$2 = g$2.body) : e$4.call(B$4, "body");
	})();
	let m$11 = !de$5(t$13.originalText, p$2) && (wl$3(p$2) || _l$3(p$2, u$14, t$13) || !a$13 && na$3(p$2)), f$3 = e$4.key === "callee" && yt$3(e$4.parent), y$7 = Symbol("arrow-chain"), C$3 = Ml$3(e$4, n$8, {
		signatureDocs: s$8,
		shouldBreak: a$13
	}), c$3 = !1, A$3 = !1, T$9 = !1;
	return o$9 && (f$3 || n$8.assignmentLayout) && (A$3 = !0, T$9 = !d$13(e$4.node, h$2.Leading & h$2.Line), c$3 = n$8.assignmentLayout === "chain-tail-arrow-chain" || f$3 && !m$11), u$14 = vl$3(e$4, t$13, n$8, {
		bodyDoc: u$14,
		bodyComments: i$18,
		functionBody: p$2,
		shouldPutBodyOnSameLine: m$11
	}), l$9([
		l$9(A$3 ? D$3([T$9 ? E$2 : "", C$3]) : C$3, {
			shouldBreak: c$3,
			id: y$7
		}),
		" =>",
		o$9 ? xt$3(u$14, { groupId: y$7 }) : l$9(u$14),
		o$9 && f$3 ? S$3(E$2, "", { groupId: y$7 }) : ""
	]);
}
function Ol$3(e$4, t$13, r$12, n$8) {
	let { node: s$8 } = e$4, u$14 = [];
	if (s$8.async && u$14.push("async "), Cn$4(e$4, t$13)) u$14.push(r$12(["params", 0]));
	else {
		let a$13 = n$8.expandLastArg || n$8.expandFirstArg, o$9 = Qt$2(e$4, r$12);
		if (a$13) {
			if (re$4(o$9)) throw new Dt$4();
			o$9 = l$9(cr$4(o$9));
		}
		u$14.push(l$9([Ue$3(e$4, t$13, r$12, a$13, !0), o$9]));
	}
	let i$18 = N$4(e$4, t$13, { filter(a$13) {
		let o$9 = ot$5(t$13.originalText, P$4(a$13));
		return o$9 !== !1 && t$13.originalText.slice(o$9, o$9 + 2) === "=>";
	} });
	return i$18 && u$14.push(" ", i$18), u$14;
}
function _l$3(e$4, t$13, r$12) {
	var n$8, s$8;
	return U$3(e$4) || ue$3(e$4) || e$4.type === "ArrowFunctionExpression" || e$4.type === "DoExpression" || e$4.type === "BlockStatement" || Y$4(e$4) || ((n$8 = t$13.label) == null ? void 0 : n$8.hug) !== !1 && (((s$8 = t$13.label) == null ? void 0 : s$8.embed) || _r$4(e$4, r$12.originalText));
}
function Ml$3(e$4, t$13, { signatureDocs: r$12, shouldBreak: n$8 }) {
	if (r$12.length === 1) return r$12[0];
	let { parent: s$8, key: u$14 } = e$4;
	return u$14 !== "callee" && yt$3(s$8) || Fe$2(s$8) ? l$9([
		r$12[0],
		" =>",
		D$3([x$2, b$6([" =>", x$2], r$12.slice(1))])
	], { shouldBreak: n$8 }) : u$14 === "callee" && yt$3(s$8) || t$13.assignmentLayout ? l$9(b$6([" =>", x$2], r$12), { shouldBreak: n$8 }) : l$9(D$3(b$6([" =>", x$2], r$12)), { shouldBreak: n$8 });
}
function vl$3(e$4, t$13, r$12, { bodyDoc: n$8, bodyComments: s$8, functionBody: u$14, shouldPutBodyOnSameLine: i$18 }) {
	let { node: a$13, parent: o$9 } = e$4, p$2 = r$12.expandLastArg && ce$3(t$13, "all") ? S$3(",") : "", m$11 = (r$12.expandLastArg || o$9.type === "JSXExpressionContainer") && !d$13(a$13) ? E$2 : "";
	return i$18 && na$3(u$14) ? [
		" ",
		l$9([
			S$3("", "("),
			D$3([E$2, n$8]),
			S$3("", ")"),
			p$2,
			m$11
		]),
		s$8
	] : i$18 ? [
		" ",
		n$8,
		s$8
	] : [
		D$3([
			x$2,
			n$8,
			s$8
		]),
		p$2,
		m$11
	];
}
var jl$3 = (e$4, t$13, r$12) => {
	if (!(e$4 && t$13 == null)) {
		if (t$13.findLast) return t$13.findLast(r$12);
		for (let n$8 = t$13.length - 1; n$8 >= 0; n$8--) {
			let s$8 = t$13[n$8];
			if (r$12(s$8, n$8, t$13)) return s$8;
		}
	}
}, ua$1 = jl$3;
function Fr$4(e$4, t$13, r$12, n$8) {
	let { node: s$8 } = e$4, u$14 = [], i$18 = ua$1(!1, s$8[n$8], (a$13) => a$13.type !== "EmptyStatement");
	return e$4.each(({ node: a$13 }) => {
		a$13.type !== "EmptyStatement" && (u$14.push(r$12()), a$13 !== i$18 && (u$14.push(F$3), me$4(a$13, t$13) && u$14.push(F$3)));
	}, n$8), u$14;
}
function An$4(e$4, t$13, r$12) {
	let n$8 = Rl$3(e$4, t$13, r$12), { node: s$8, parent: u$14 } = e$4;
	if (s$8.type === "Program" && (u$14 == null ? void 0 : u$14.type) !== "ModuleExpression") return n$8 ? [n$8, F$3] : "";
	let i$18 = [];
	if (s$8.type === "StaticBlock" && i$18.push("static "), i$18.push("{"), n$8) i$18.push(D$3([F$3, n$8]), F$3);
	else {
		let a$13 = e$4.grandparent;
		u$14.type === "ArrowFunctionExpression" || u$14.type === "FunctionExpression" || u$14.type === "FunctionDeclaration" || u$14.type === "ComponentDeclaration" || u$14.type === "HookDeclaration" || u$14.type === "ObjectMethod" || u$14.type === "ClassMethod" || u$14.type === "ClassPrivateMethod" || u$14.type === "ForStatement" || u$14.type === "WhileStatement" || u$14.type === "DoWhileStatement" || u$14.type === "DoExpression" || u$14.type === "ModuleExpression" || u$14.type === "CatchClause" && !a$13.finalizer || u$14.type === "TSModuleDeclaration" || s$8.type === "StaticBlock" || i$18.push(F$3);
	}
	return i$18.push("}"), i$18;
}
function Rl$3(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = O$2(n$8.directives), u$14 = n$8.body.some((o$9) => o$9.type !== "EmptyStatement"), i$18 = d$13(n$8, h$2.Dangling);
	if (!s$8 && !u$14 && !i$18) return "";
	let a$13 = [];
	return s$8 && (a$13.push(Fr$4(e$4, t$13, r$12, "directives")), (u$14 || i$18) && (a$13.push(F$3), me$4(v$3(!1, n$8.directives, -1), t$13) && a$13.push(F$3))), u$14 && a$13.push(Fr$4(e$4, t$13, r$12, "body")), i$18 && a$13.push(N$4(e$4, t$13)), a$13;
}
function Jl$3(e$4) {
	let t$13 = /* @__PURE__ */ new WeakMap();
	return function(r$12) {
		return t$13.has(r$12) || t$13.set(r$12, Symbol(e$4)), t$13.get(r$12);
	};
}
var dn$4 = Jl$3;
var Cr$3 = dn$4("typeParameters");
function Nl$3(e$4, t$13, r$12) {
	let { node: n$8 } = e$4;
	return Q$3(n$8).length === 1 && n$8.type.startsWith("TS") && !n$8[r$12][0].constraint && e$4.parent.type === "ArrowFunctionExpression" && !(t$13.filepath && /\.ts$/u.test(t$13.filepath));
}
function wt$5(e$4, t$13, r$12, n$8) {
	let { node: s$8 } = e$4;
	if (!s$8[n$8]) return "";
	if (!Array.isArray(s$8[n$8])) return r$12(n$8);
	let u$14 = Pt$4(e$4.grandparent), i$18 = e$4.match((p$2) => !(p$2[n$8].length === 1 && Re$5(p$2[n$8][0])), void 0, (p$2, m$11) => m$11 === "typeAnnotation", (p$2) => p$2.type === "Identifier", hs$2);
	if (s$8[n$8].length === 0 || !i$18 && (u$14 || s$8[n$8].length === 1 && (s$8[n$8][0].type === "NullableTypeAnnotation" || Ss$1(s$8[n$8][0])))) return [
		"<",
		b$6(", ", e$4.map(r$12, n$8)),
		Gl$2(e$4, t$13),
		">"
	];
	let o$9 = s$8.type === "TSTypeParameterInstantiation" ? "" : Nl$3(e$4, t$13, n$8) ? "," : ce$3(t$13) ? S$3(",") : "";
	return l$9([
		"<",
		D$3([E$2, b$6([",", x$2], e$4.map(r$12, n$8))]),
		o$9,
		E$2,
		">"
	], { id: Cr$3(s$8) });
}
function Gl$2(e$4, t$13) {
	let { node: r$12 } = e$4;
	if (!d$13(r$12, h$2.Dangling)) return "";
	let n$8 = !d$13(r$12, h$2.Line), s$8 = N$4(e$4, t$13, { indent: !n$8 });
	return n$8 ? s$8 : [s$8, F$3];
}
function Tn$4(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = [n$8.const ? "const " : ""], u$14 = n$8.type === "TSTypeParameter" ? r$12("name") : n$8.name;
	if (n$8.variance && s$8.push(r$12("variance")), n$8.in && s$8.push("in "), n$8.out && s$8.push("out "), s$8.push(u$14), n$8.bound && (n$8.usesExtendsBound && s$8.push(" extends "), s$8.push(H$5(e$4, r$12, "bound"))), n$8.constraint) {
		let i$18 = Symbol("constraint");
		s$8.push(" extends", l$9(D$3(x$2), { id: i$18 }), je$3, xt$3(r$12("constraint"), { groupId: i$18 }));
	}
	return n$8.default && s$8.push(" = ", r$12("default")), l$9(s$8);
}
var ia$2 = R$5([
	"ClassProperty",
	"PropertyDefinition",
	"ClassPrivateProperty",
	"ClassAccessorProperty",
	"AccessorProperty",
	"TSAbstractPropertyDefinition",
	"TSAbstractAccessorProperty"
]);
function xn$2(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = [
		$$3(e$4),
		Vt$4(e$4),
		"class"
	], u$14 = d$13(n$8.id, h$2.Trailing) || d$13(n$8.typeParameters, h$2.Trailing) || d$13(n$8.superClass) || O$2(n$8.extends) || O$2(n$8.mixins) || O$2(n$8.implements), i$18 = [], a$13 = [];
	if (n$8.id && i$18.push(" ", r$12("id")), i$18.push(r$12("typeParameters")), n$8.superClass) {
		let m$11 = [Wl$2(e$4, t$13, r$12), r$12(n$8.superTypeArguments ? "superTypeArguments" : "superTypeParameters")], f$3 = e$4.call((y$7) => ["extends ", Ee$3(y$7, m$11, t$13)], "superClass");
		u$14 ? a$13.push(x$2, l$9(f$3)) : a$13.push(" ", f$3);
	} else a$13.push(Ps$3(e$4, t$13, r$12, "extends"));
	a$13.push(Ps$3(e$4, t$13, r$12, "mixins"), Ps$3(e$4, t$13, r$12, "implements"));
	let o$9;
	if (u$14) {
		let m$11;
		pa$1(n$8) ? m$11 = [...i$18, D$3(a$13)] : m$11 = D$3([...i$18, a$13]), o$9 = aa$3(n$8), s$8.push(l$9(m$11, { id: o$9 }));
	} else s$8.push(...i$18, ...a$13);
	let p$2 = n$8.body;
	return u$14 && O$2(p$2.body) ? s$8.push(S$3(F$3, " ", { groupId: o$9 })) : s$8.push(" "), s$8.push(r$12("body")), s$8;
}
var aa$3 = dn$4("heritageGroup");
function oa$2(e$4) {
	return S$3(F$3, "", { groupId: aa$3(e$4) });
}
function ql$2(e$4) {
	return [
		"extends",
		"mixins",
		"implements"
	].reduce((t$13, r$12) => t$13 + (Array.isArray(e$4[r$12]) ? e$4[r$12].length : 0), e$4.superClass ? 1 : 0) > 1;
}
function pa$1(e$4) {
	return e$4.typeParameters && !d$13(e$4.typeParameters, h$2.Trailing | h$2.Line) && !ql$2(e$4);
}
function Ps$3(e$4, t$13, r$12, n$8) {
	let { node: s$8 } = e$4;
	if (!O$2(s$8[n$8])) return "";
	let u$14 = N$4(e$4, t$13, { marker: n$8 });
	return [
		pa$1(s$8) ? S$3(" ", x$2, { groupId: Cr$3(s$8.typeParameters) }) : x$2,
		u$14,
		u$14 && F$3,
		n$8,
		l$9(D$3([x$2, b$6([",", x$2], e$4.map(r$12, n$8))]))
	];
}
function Wl$2(e$4, t$13, r$12) {
	let n$8 = r$12("superClass"), { parent: s$8 } = e$4;
	return s$8.type === "AssignmentExpression" ? l$9(S$3([
		"(",
		D$3([E$2, n$8]),
		E$2,
		")"
	], n$8)) : n$8;
}
function hn$4(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = [];
	return O$2(n$8.decorators) && s$8.push(ds$1(e$4, t$13, r$12)), s$8.push($t$3(n$8)), n$8.static && s$8.push("static "), s$8.push(Vt$4(e$4)), n$8.override && s$8.push("override "), s$8.push(Er$4(e$4, t$13, r$12)), s$8;
}
function gn$5(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = [], u$14 = t$13.semi ? ";" : "";
	O$2(n$8.decorators) && s$8.push(ds$1(e$4, t$13, r$12)), s$8.push($$3(e$4), $t$3(n$8)), n$8.static && s$8.push("static "), s$8.push(Vt$4(e$4)), n$8.override && s$8.push("override "), n$8.readonly && s$8.push("readonly "), n$8.variance && s$8.push(r$12("variance")), (n$8.type === "ClassAccessorProperty" || n$8.type === "AccessorProperty" || n$8.type === "TSAbstractAccessorProperty") && s$8.push("accessor "), s$8.push(Ct$5(e$4, t$13, r$12), V$4(e$4), mn$4(e$4), H$5(e$4, r$12));
	let i$18 = n$8.type === "TSAbstractPropertyDefinition" || n$8.type === "TSAbstractAccessorProperty";
	return [ht$3(e$4, t$13, r$12, s$8, " =", i$18 ? void 0 : "value"), u$14];
}
function ca$2(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = [];
	return e$4.each(({ node: u$14, next: i$18, isLast: a$13 }) => {
		s$8.push(r$12()), !t$13.semi && ia$2(u$14) && Ul$3(u$14, i$18) && s$8.push(";"), a$13 || (s$8.push(F$3), me$4(u$14, t$13) && s$8.push(F$3));
	}, "body"), d$13(n$8, h$2.Dangling) && s$8.push(N$4(e$4, t$13)), [
		"{",
		s$8.length > 0 ? [D$3([F$3, s$8]), F$3] : "",
		"}"
	];
}
function Ul$3(e$4, t$13) {
	var s$8;
	let { type: r$12, name: n$8 } = e$4.key;
	if (!e$4.computed && r$12 === "Identifier" && (n$8 === "static" || n$8 === "get" || n$8 === "set") && !e$4.value && !e$4.typeAnnotation) return !0;
	if (!t$13 || t$13.static || t$13.accessibility || t$13.readonly) return !1;
	if (!t$13.computed) {
		let u$14 = (s$8 = t$13.key) == null ? void 0 : s$8.name;
		if (u$14 === "in" || u$14 === "instanceof") return !0;
	}
	if (ia$2(t$13) && t$13.variance && !t$13.static && !t$13.declare) return !0;
	switch (t$13.type) {
		case "ClassProperty":
		case "PropertyDefinition":
		case "TSAbstractPropertyDefinition": return t$13.computed;
		case "MethodDefinition":
		case "TSAbstractMethodDefinition":
		case "ClassMethod":
		case "ClassPrivateMethod": {
			if ((t$13.value ? t$13.value.async : t$13.async) || t$13.kind === "get" || t$13.kind === "set") return !1;
			let i$18 = t$13.value ? t$13.value.generator : t$13.generator;
			return !!(t$13.computed || i$18);
		}
		case "TSIndexSignature": return !0;
	}
	return !1;
}
var Xl$2 = R$5([
	"TSAsExpression",
	"TSTypeAssertion",
	"TSNonNullExpression",
	"TSInstantiationExpression",
	"TSSatisfiesExpression"
]);
function ks$2(e$4) {
	return Xl$2(e$4) ? ks$2(e$4.expression) : e$4;
}
var la$2 = R$5(["FunctionExpression", "ArrowFunctionExpression"]);
function ma$1(e$4) {
	return e$4.type === "MemberExpression" || e$4.type === "OptionalMemberExpression" || e$4.type === "Identifier" && e$4.name !== "undefined";
}
function ya$1(e$4, t$13) {
	if (t$13.semi || Is$2(e$4, t$13) || Ls$2(e$4, t$13)) return !1;
	let { node: r$12, key: n$8, parent: s$8 } = e$4;
	return !!(r$12.type === "ExpressionStatement" && (n$8 === "body" && (s$8.type === "Program" || s$8.type === "BlockStatement" || s$8.type === "StaticBlock" || s$8.type === "TSModuleBlock") || n$8 === "consequent" && s$8.type === "SwitchCase") && e$4.call(() => fa$3(e$4, t$13), "expression"));
}
function fa$3(e$4, t$13) {
	let { node: r$12 } = e$4;
	switch (r$12.type) {
		case "ParenthesizedExpression":
		case "TypeCastExpression":
		case "ArrayExpression":
		case "ArrayPattern":
		case "TemplateLiteral":
		case "TemplateElement":
		case "RegExpLiteral": return !0;
		case "ArrowFunctionExpression":
			if (!Cn$4(e$4, t$13)) return !0;
			break;
		case "UnaryExpression": {
			let { prefix: n$8, operator: s$8 } = r$12;
			if (n$8 && (s$8 === "+" || s$8 === "-")) return !0;
			break;
		}
		case "BindExpression":
			if (!r$12.object) return !0;
			break;
		case "Literal":
			if (r$12.regex) return !0;
			break;
		default: if (Y$4(r$12)) return !0;
	}
	return Le$4(e$4, t$13) ? !0 : Jt$2(r$12) ? e$4.call(() => fa$3(e$4, t$13), ...Lr$4(r$12)) : !1;
}
function Is$2({ node: e$4, parent: t$13 }, r$12) {
	return (r$12.parentParser === "markdown" || r$12.parentParser === "mdx") && e$4.type === "ExpressionStatement" && Y$4(e$4.expression) && t$13.type === "Program" && t$13.body.length === 1;
}
function Ls$2({ node: e$4, parent: t$13 }, r$12) {
	return (r$12.parser === "__vue_event_binding" || r$12.parser === "__vue_ts_event_binding") && e$4.type === "ExpressionStatement" && t$13.type === "Program" && t$13.body.length === 1;
}
function Da$1(e$4, t$13, r$12) {
	let n$8 = [r$12("expression")];
	if (Ls$2(e$4, t$13)) {
		let s$8 = ks$2(e$4.node.expression);
		(la$2(s$8) || ma$1(s$8)) && n$8.push(";");
	} else Is$2(e$4, t$13) || t$13.semi && n$8.push(";");
	return n$8;
}
function Ea$2(e$4, t$13, r$12) {
	if (t$13.__isVueBindings || t$13.__isVueForBindingLeft) {
		let n$8 = e$4.map(r$12, "program", "body", 0, "params");
		if (n$8.length === 1) return n$8[0];
		let s$8 = b$6([",", x$2], n$8);
		return t$13.__isVueForBindingLeft ? [
			"(",
			D$3([E$2, l$9(s$8)]),
			E$2,
			")"
		] : s$8;
	}
	if (t$13.__isEmbeddedTypescriptGenericParameters) {
		let n$8 = e$4.map(r$12, "program", "body", 0, "typeParameters", "params");
		return b$6([",", x$2], n$8);
	}
}
function Aa$2(e$4, t$13) {
	let { node: r$12 } = e$4;
	switch (r$12.type) {
		case "RegExpLiteral": return Fa$4(r$12);
		case "BigIntLiteral": return Sn$4(r$12.extra.raw);
		case "NumericLiteral": return Ft$3(r$12.extra.raw);
		case "StringLiteral": return ve$4(ut$3(r$12.extra.raw, t$13));
		case "NullLiteral": return "null";
		case "BooleanLiteral": return String(r$12.value);
		case "DirectiveLiteral": return Ca$1(r$12.extra.raw, t$13);
		case "Literal": {
			if (r$12.regex) return Fa$4(r$12.regex);
			if (r$12.bigint) return Sn$4(r$12.raw);
			let { value: n$8 } = r$12;
			return typeof n$8 == "number" ? Ft$3(r$12.raw) : typeof n$8 == "string" ? Yl$2(e$4) ? Ca$1(r$12.raw, t$13) : ve$4(ut$3(r$12.raw, t$13)) : String(n$8);
		}
	}
}
function Yl$2(e$4) {
	if (e$4.key !== "expression") return;
	let { parent: t$13 } = e$4;
	return t$13.type === "ExpressionStatement" && typeof t$13.directive == "string";
}
function Sn$4(e$4) {
	return e$4.toLowerCase();
}
function Fa$4({ pattern: e$4, flags: t$13 }) {
	return t$13 = [...t$13].sort().join(""), `/${e$4}/${t$13}`;
}
function Ca$1(e$4, t$13) {
	let r$12 = e$4.slice(1, -1);
	if (r$12.includes("\"") || r$12.includes("'")) return e$4;
	let n$8 = t$13.singleQuote ? "'" : "\"";
	return n$8 + r$12 + n$8;
}
function Hl$2(e$4, t$13, r$12) {
	let n$8 = e$4.originalText.slice(t$13, r$12);
	for (let s$8 of e$4[Symbol.for("comments")]) {
		let u$14 = j$5(s$8);
		if (u$14 > r$12) break;
		let i$18 = P$4(s$8);
		if (i$18 < t$13) continue;
		let a$13 = i$18 - u$14;
		n$8 = n$8.slice(0, u$14 - t$13) + " ".repeat(a$13) + n$8.slice(i$18 - t$13);
	}
	return n$8;
}
var Ar$4 = Hl$2;
function da$2(e$4, t$13, r$12) {
	let { node: n$8 } = e$4;
	return [
		"import",
		n$8.phase ? ` ${n$8.phase}` : "",
		Os$1(n$8),
		ha$3(e$4, t$13, r$12),
		xa$3(e$4, t$13, r$12),
		Sa$2(e$4, t$13, r$12),
		t$13.semi ? ";" : ""
	];
}
var Ta$1 = (e$4) => e$4.type === "ExportDefaultDeclaration" || e$4.type === "DeclareExportDeclaration" && e$4.default;
function Bn$4(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = [
		wi$5(e$4, t$13, r$12),
		$$3(e$4),
		"export",
		Ta$1(n$8) ? " default" : ""
	], { declaration: u$14, exported: i$18 } = n$8;
	return d$13(n$8, h$2.Dangling) && (s$8.push(" ", N$4(e$4, t$13)), Mr$3(n$8) && s$8.push(F$3)), u$14 ? s$8.push(" ", r$12("declaration")) : (s$8.push(Kl$2(n$8)), n$8.type === "ExportAllDeclaration" || n$8.type === "DeclareExportAllDeclaration" ? (s$8.push(" *"), i$18 && s$8.push(" as ", r$12("exported"))) : s$8.push(ha$3(e$4, t$13, r$12)), s$8.push(xa$3(e$4, t$13, r$12), Sa$2(e$4, t$13, r$12))), s$8.push($l$2(n$8, t$13)), s$8;
}
var Vl$1 = R$5([
	"ClassDeclaration",
	"ComponentDeclaration",
	"FunctionDeclaration",
	"TSInterfaceDeclaration",
	"DeclareClass",
	"DeclareComponent",
	"DeclareFunction",
	"DeclareHook",
	"HookDeclaration",
	"TSDeclareFunction",
	"EnumDeclaration"
]);
function $l$2(e$4, t$13) {
	return t$13.semi && (!e$4.declaration || Ta$1(e$4) && !Vl$1(e$4.declaration)) ? ";" : "";
}
function ws$1(e$4, t$13 = !0) {
	return e$4 && e$4 !== "value" ? `${t$13 ? " " : ""}${e$4}${t$13 ? "" : " "}` : "";
}
function Os$1(e$4, t$13) {
	return ws$1(e$4.importKind, t$13);
}
function Kl$2(e$4) {
	return ws$1(e$4.exportKind);
}
function xa$3(e$4, t$13, r$12) {
	let { node: n$8 } = e$4;
	if (!n$8.source) return "";
	let s$8 = [];
	return ga$1(n$8, t$13) && s$8.push(" from"), s$8.push(" ", r$12("source")), s$8;
}
function ha$3(e$4, t$13, r$12) {
	let { node: n$8 } = e$4;
	if (!ga$1(n$8, t$13)) return "";
	let s$8 = [" "];
	if (O$2(n$8.specifiers)) {
		let u$14 = [], i$18 = [];
		e$4.each(() => {
			let a$13 = e$4.node.type;
			if (a$13 === "ExportNamespaceSpecifier" || a$13 === "ExportDefaultSpecifier" || a$13 === "ImportNamespaceSpecifier" || a$13 === "ImportDefaultSpecifier") u$14.push(r$12());
			else if (a$13 === "ExportSpecifier" || a$13 === "ImportSpecifier") i$18.push(r$12());
			else throw new qe$5(n$8, "specifier");
		}, "specifiers"), s$8.push(b$6(", ", u$14)), i$18.length > 0 && (u$14.length > 0 && s$8.push(", "), i$18.length > 1 || u$14.length > 0 || n$8.specifiers.some((o$9) => d$13(o$9)) ? s$8.push(l$9([
			"{",
			D$3([t$13.bracketSpacing ? x$2 : E$2, b$6([",", x$2], i$18)]),
			S$3(ce$3(t$13) ? "," : ""),
			t$13.bracketSpacing ? x$2 : E$2,
			"}"
		])) : s$8.push([
			"{",
			t$13.bracketSpacing ? " " : "",
			...i$18,
			t$13.bracketSpacing ? " " : "",
			"}"
		]));
	} else s$8.push("{}");
	return s$8;
}
function ga$1(e$4, t$13) {
	return e$4.type !== "ImportDeclaration" || O$2(e$4.specifiers) || e$4.importKind === "type" ? !0 : Ar$4(t$13, j$5(e$4), j$5(e$4.source)).trimEnd().endsWith("from");
}
function Ql$2(e$4, t$13) {
	var n$8, s$8;
	if ((n$8 = e$4.extra) != null && n$8.deprecatedAssertSyntax) return "assert";
	let r$12 = Ar$4(t$13, P$4(e$4.source), (s$8 = e$4.attributes) != null && s$8[0] ? j$5(e$4.attributes[0]) : P$4(e$4)).trimStart();
	return r$12.startsWith("assert") ? "assert" : r$12.startsWith("with") || O$2(e$4.attributes) ? "with" : void 0;
}
function Sa$2(e$4, t$13, r$12) {
	let { node: n$8 } = e$4;
	if (!n$8.source) return "";
	let s$8 = Ql$2(n$8, t$13);
	if (!s$8) return "";
	let u$14 = [` ${s$8} {`];
	return O$2(n$8.attributes) && (t$13.bracketSpacing && u$14.push(" "), u$14.push(b$6(", ", e$4.map(r$12, "attributes"))), t$13.bracketSpacing && u$14.push(" ")), u$14.push("}"), u$14;
}
function Ba$2(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, { type: s$8 } = n$8, u$14 = s$8.startsWith("Import"), i$18 = u$14 ? "imported" : "local", a$13 = u$14 ? "local" : "exported", o$9 = n$8[i$18], p$2 = n$8[a$13], m$11 = "", f$3 = "";
	return s$8 === "ExportNamespaceSpecifier" || s$8 === "ImportNamespaceSpecifier" ? m$11 = "*" : o$9 && (m$11 = r$12(i$18)), p$2 && !zl$2(n$8) && (f$3 = r$12(a$13)), [
		ws$1(s$8 === "ImportSpecifier" ? n$8.importKind : n$8.exportKind, !1),
		m$11,
		m$11 && f$3 ? " as " : "",
		f$3
	];
}
function zl$2(e$4) {
	if (e$4.type !== "ImportSpecifier" && e$4.type !== "ExportSpecifier") return !1;
	let { local: t$13, [e$4.type === "ImportSpecifier" ? "imported" : "exported"]: r$12 } = e$4;
	if (t$13.type !== r$12.type || !au$2(t$13, r$12)) return !1;
	if (K$4(t$13)) return t$13.value === r$12.value && ae$4(t$13) === ae$4(r$12);
	switch (t$13.type) {
		case "Identifier": return t$13.name === r$12.name;
		default: return !1;
	}
}
function gt$5(e$4, t$13, r$12) {
	var J$4;
	let n$8 = t$13.semi ? ";" : "", { node: s$8 } = e$4, u$14 = s$8.type === "ObjectTypeAnnotation", i$18 = s$8.type === "TSEnumBody" || s$8.type === "EnumBooleanBody" || s$8.type === "EnumNumberBody" || s$8.type === "EnumBigIntBody" || s$8.type === "EnumStringBody" || s$8.type === "EnumSymbolBody", a$13 = [s$8.type === "TSTypeLiteral" || i$18 ? "members" : s$8.type === "TSInterfaceBody" ? "body" : "properties"];
	u$14 && a$13.push("indexers", "callProperties", "internalSlots");
	let o$9 = a$13.flatMap((I$2) => e$4.map(({ node: q$3 }) => ({
		node: q$3,
		printed: r$12(),
		loc: j$5(q$3)
	}), I$2));
	a$13.length > 1 && o$9.sort((I$2, q$3) => I$2.loc - q$3.loc);
	let { parent: p$2, key: m$11 } = e$4, f$3 = u$14 && m$11 === "body" && (p$2.type === "InterfaceDeclaration" || p$2.type === "DeclareInterface" || p$2.type === "DeclareClass"), y$7 = s$8.type === "TSInterfaceBody" || i$18 || f$3 || s$8.type === "ObjectPattern" && p$2.type !== "FunctionDeclaration" && p$2.type !== "FunctionExpression" && p$2.type !== "ArrowFunctionExpression" && p$2.type !== "ObjectMethod" && p$2.type !== "ClassMethod" && p$2.type !== "ClassPrivateMethod" && p$2.type !== "AssignmentPattern" && p$2.type !== "CatchClause" && s$8.properties.some((I$2) => I$2.value && (I$2.value.type === "ObjectPattern" || I$2.value.type === "ArrayPattern")) || s$8.type !== "ObjectPattern" && t$13.objectWrap === "preserve" && o$9.length > 0 && ie$5(t$13.originalText, j$5(s$8), o$9[0].loc), C$3 = f$3 ? ";" : s$8.type === "TSInterfaceBody" || s$8.type === "TSTypeLiteral" ? S$3(n$8, ";") : ",", c$3 = s$8.exact ? "{|" : "{", A$3 = s$8.exact ? "|}" : "}", T$9 = [], B$4 = o$9.map((I$2) => {
		let q$3 = [...T$9, l$9(I$2.printed)];
		return T$9 = [C$3, x$2], (I$2.node.type === "TSPropertySignature" || I$2.node.type === "TSMethodSignature" || I$2.node.type === "TSConstructSignatureDeclaration" || I$2.node.type === "TSCallSignatureDeclaration") && d$13(I$2.node, h$2.PrettierIgnore) && T$9.shift(), me$4(I$2.node, t$13) && T$9.push(F$3), q$3;
	});
	if (s$8.inexact || s$8.hasUnknownMembers) {
		let I$2;
		if (d$13(s$8, h$2.Dangling)) {
			let q$3 = d$13(s$8, h$2.Line);
			I$2 = [
				N$4(e$4, t$13),
				q$3 || ee$3(t$13.originalText, P$4(v$3(!1, Ve$4(s$8), -1))) ? F$3 : x$2,
				"..."
			];
		} else I$2 = ["..."];
		B$4.push([...T$9, ...I$2]);
	}
	let g$2 = (J$4 = v$3(!1, o$9, -1)) == null ? void 0 : J$4.node, _$2 = !(s$8.inexact || s$8.hasUnknownMembers || g$2 && (g$2.type === "RestElement" || (g$2.type === "TSPropertySignature" || g$2.type === "TSCallSignatureDeclaration" || g$2.type === "TSMethodSignature" || g$2.type === "TSConstructSignatureDeclaration" || g$2.type === "TSIndexSignature") && d$13(g$2, h$2.PrettierIgnore)) || e$4.match(void 0, (I$2, q$3) => I$2.type === "TSImportType" && q$3 === "options")), M$2;
	if (B$4.length === 0) {
		if (!d$13(s$8, h$2.Dangling)) return [
			c$3,
			A$3,
			H$5(e$4, r$12)
		];
		M$2 = l$9([
			c$3,
			N$4(e$4, t$13, { indent: !0 }),
			E$2,
			A$3,
			V$4(e$4),
			H$5(e$4, r$12)
		]);
	} else M$2 = [
		f$3 && O$2(s$8.properties) ? oa$2(p$2) : "",
		c$3,
		D$3([t$13.bracketSpacing ? x$2 : E$2, ...B$4]),
		S$3(_$2 && (C$3 !== "," || ce$3(t$13)) ? C$3 : ""),
		t$13.bracketSpacing ? x$2 : E$2,
		A$3,
		V$4(e$4),
		H$5(e$4, r$12)
	];
	return e$4.match((I$2) => I$2.type === "ObjectPattern" && !O$2(I$2.decorators), _s$2) || Re$5(s$8) && (e$4.match(void 0, (I$2, q$3) => q$3 === "typeAnnotation", (I$2, q$3) => q$3 === "typeAnnotation", _s$2) || e$4.match(void 0, (I$2, q$3) => I$2.type === "FunctionTypeParam" && q$3 === "typeAnnotation", _s$2)) || !y$7 && e$4.match((I$2) => I$2.type === "ObjectPattern", (I$2) => I$2.type === "AssignmentExpression" || I$2.type === "VariableDeclarator") ? M$2 : l$9(M$2, { shouldBreak: y$7 });
}
function _s$2(e$4, t$13) {
	return (t$13 === "params" || t$13 === "parameters" || t$13 === "this" || t$13 === "rest") && gs$2(e$4);
}
function Zl$2(e$4) {
	let t$13 = [e$4];
	for (let r$12 = 0; r$12 < t$13.length; r$12++) {
		let n$8 = t$13[r$12];
		for (let s$8 of [
			"test",
			"consequent",
			"alternate"
		]) {
			let u$14 = n$8[s$8];
			if (Y$4(u$14)) return !0;
			u$14.type === "ConditionalExpression" && t$13.push(u$14);
		}
	}
	return !1;
}
function em$1(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = n$8.type === "ConditionalExpression", u$14 = s$8 ? "alternate" : "falseType", { parent: i$18 } = e$4, a$13 = s$8 ? r$12("test") : [
		r$12("checkType"),
		" ",
		"extends",
		" ",
		r$12("extendsType")
	];
	return i$18.type === n$8.type && i$18[u$14] === n$8 ? be$4(2, a$13) : a$13;
}
var tm$1 = new Map([
	["AssignmentExpression", "right"],
	["VariableDeclarator", "init"],
	["ReturnStatement", "argument"],
	["ThrowStatement", "argument"],
	["UnaryExpression", "argument"],
	["YieldExpression", "argument"],
	["AwaitExpression", "argument"]
]);
function rm$1(e$4) {
	let { node: t$13 } = e$4;
	if (t$13.type !== "ConditionalExpression") return !1;
	let r$12, n$8 = t$13;
	for (let s$8 = 0; !r$12; s$8++) {
		let u$14 = e$4.getParentNode(s$8);
		if (u$14.type === "ChainExpression" && u$14.expression === n$8 || w$2(u$14) && u$14.callee === n$8 || G$4(u$14) && u$14.object === n$8 || u$14.type === "TSNonNullExpression" && u$14.expression === n$8) {
			n$8 = u$14;
			continue;
		}
		u$14.type === "NewExpression" && u$14.callee === n$8 || xe$3(u$14) && u$14.expression === n$8 ? (r$12 = e$4.getParentNode(s$8 + 1), n$8 = u$14) : r$12 = u$14;
	}
	return n$8 === t$13 ? !1 : r$12[tm$1.get(r$12.type)] === n$8;
}
function ba$2(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = n$8.type === "ConditionalExpression", u$14 = s$8 ? "consequent" : "trueType", i$18 = s$8 ? "alternate" : "falseType", a$13 = s$8 ? ["test"] : ["checkType", "extendsType"], o$9 = n$8[u$14], p$2 = n$8[i$18], m$11 = [], f$3 = !1, { parent: y$7 } = e$4, C$3 = y$7.type === n$8.type && a$13.some((W$2) => y$7[W$2] === n$8), c$3 = y$7.type === n$8.type && !C$3, A$3, T$9, B$4 = 0;
	do
		T$9 = A$3 || n$8, A$3 = e$4.getParentNode(B$4), B$4++;
	while (A$3 && A$3.type === n$8.type && a$13.every((W$2) => A$3[W$2] !== T$9));
	let g$2 = A$3 || y$7, _$2 = T$9;
	if (s$8 && (Y$4(n$8[a$13[0]]) || Y$4(o$9) || Y$4(p$2) || Zl$2(_$2))) {
		f$3 = !0, c$3 = !0;
		let W$2 = (Z$4) => [
			S$3("("),
			D$3([E$2, Z$4]),
			E$2,
			S$3(")")
		], ne$6 = (Z$4) => Z$4.type === "NullLiteral" || Z$4.type === "Literal" && Z$4.value === null || Z$4.type === "Identifier" && Z$4.name === "undefined";
		m$11.push(" ? ", ne$6(o$9) ? r$12(u$14) : W$2(r$12(u$14)), " : ", p$2.type === n$8.type || ne$6(p$2) ? r$12(i$18) : W$2(r$12(i$18)));
	} else {
		let W$2 = (Z$4) => t$13.useTabs ? D$3(r$12(Z$4)) : be$4(2, r$12(Z$4)), ne$6 = [
			x$2,
			"? ",
			o$9.type === n$8.type ? S$3("", "(") : "",
			W$2(u$14),
			o$9.type === n$8.type ? S$3("", ")") : "",
			x$2,
			": ",
			W$2(i$18)
		];
		m$11.push(y$7.type !== n$8.type || y$7[i$18] === n$8 || C$3 ? ne$6 : t$13.useTabs ? Jr$4(D$3(ne$6)) : be$4(Math.max(0, t$13.tabWidth - 2), ne$6));
	}
	let M$2 = [
		u$14,
		i$18,
		...a$13
	].some((W$2) => d$13(n$8[W$2], (ne$6) => te$4(ne$6) && ie$5(t$13.originalText, j$5(ne$6), P$4(ne$6)))), J$4 = (W$2) => y$7 === g$2 ? l$9(W$2, { shouldBreak: M$2 }) : M$2 ? [W$2, Ce$5] : W$2, I$2 = !f$3 && (G$4(y$7) || y$7.type === "NGPipeExpression" && y$7.left === n$8) && !y$7.computed, q$3 = rm$1(e$4), k$5 = J$4([
		em$1(e$4, t$13, r$12),
		c$3 ? m$11 : D$3(m$11),
		s$8 && I$2 && !q$3 ? E$2 : ""
	]);
	return C$3 || q$3 ? l$9([D$3([E$2, k$5]), E$2]) : k$5;
}
function nm$1(e$4, t$13) {
	return (G$4(t$13) || t$13.type === "NGPipeExpression" && t$13.left === e$4) && !t$13.computed;
}
function sm$1(e$4, t$13, r$12, n$8) {
	return [
		...e$4.map((u$14) => Ve$4(u$14)),
		Ve$4(t$13),
		Ve$4(r$12)
	].flat().some((u$14) => te$4(u$14) && ie$5(n$8.originalText, j$5(u$14), P$4(u$14)));
}
var um$1 = new Map([
	["AssignmentExpression", "right"],
	["VariableDeclarator", "init"],
	["ReturnStatement", "argument"],
	["ThrowStatement", "argument"],
	["UnaryExpression", "argument"],
	["YieldExpression", "argument"],
	["AwaitExpression", "argument"]
]);
function im$1(e$4) {
	let { node: t$13 } = e$4;
	if (t$13.type !== "ConditionalExpression") return !1;
	let r$12, n$8 = t$13;
	for (let s$8 = 0; !r$12; s$8++) {
		let u$14 = e$4.getParentNode(s$8);
		if (u$14.type === "ChainExpression" && u$14.expression === n$8 || w$2(u$14) && u$14.callee === n$8 || G$4(u$14) && u$14.object === n$8 || u$14.type === "TSNonNullExpression" && u$14.expression === n$8) {
			n$8 = u$14;
			continue;
		}
		u$14.type === "NewExpression" && u$14.callee === n$8 || xe$3(u$14) && u$14.expression === n$8 ? (r$12 = e$4.getParentNode(s$8 + 1), n$8 = u$14) : r$12 = u$14;
	}
	return n$8 === t$13 ? !1 : r$12[um$1.get(r$12.type)] === n$8;
}
var Ms$2 = (e$4) => [
	S$3("("),
	D$3([E$2, e$4]),
	E$2,
	S$3(")")
];
function zt$4(e$4, t$13, r$12, n$8) {
	if (!t$13.experimentalTernaries) return ba$2(e$4, t$13, r$12);
	let { node: s$8 } = e$4, u$14 = s$8.type === "ConditionalExpression", i$18 = Je$5(s$8), a$13 = u$14 ? "consequent" : "trueType", o$9 = u$14 ? "alternate" : "falseType", p$2 = u$14 ? ["test"] : ["checkType", "extendsType"], m$11 = s$8[a$13], f$3 = s$8[o$9], y$7 = p$2.map((Xe$4) => s$8[Xe$4]), { parent: C$3 } = e$4, c$3 = C$3.type === s$8.type, A$3 = c$3 && p$2.some((Xe$4) => C$3[Xe$4] === s$8), T$9 = c$3 && C$3[o$9] === s$8, B$4 = m$11.type === s$8.type, g$2 = f$3.type === s$8.type, _$2 = g$2 || T$9, M$2 = t$13.tabWidth > 2 || t$13.useTabs, J$4, I$2, q$3 = 0;
	do
		I$2 = J$4 || s$8, J$4 = e$4.getParentNode(q$3), q$3++;
	while (J$4 && J$4.type === s$8.type && p$2.every((Xe$4) => J$4[Xe$4] !== I$2));
	let k$5 = J$4 || C$3, W$2 = n$8 && n$8.assignmentLayout && n$8.assignmentLayout !== "break-after-operator" && (C$3.type === "AssignmentExpression" || C$3.type === "VariableDeclarator" || C$3.type === "ClassProperty" || C$3.type === "PropertyDefinition" || C$3.type === "ClassPrivateProperty" || C$3.type === "ObjectProperty" || C$3.type === "Property"), ne$6 = (C$3.type === "ReturnStatement" || C$3.type === "ThrowStatement") && !(B$4 || g$2), Z$4 = u$14 && k$5.type === "JSXExpressionContainer" && e$4.grandparent.type !== "JSXAttribute", lt$3 = im$1(e$4), L$4 = nm$1(s$8, C$3), se$3 = i$18 && Le$4(e$4, t$13), Ae$5 = M$2 ? t$13.useTabs ? "	" : " ".repeat(t$13.tabWidth - 1) : "", Ot$4 = sm$1(y$7, m$11, f$3, t$13) || B$4 || g$2, nt$4 = !_$2 && !c$3 && !i$18 && (Z$4 ? m$11.type === "NullLiteral" || m$11.type === "Literal" && m$11.value === null : ir$4(m$11, t$13) && Nn$5(s$8.test, 3)), Js$3 = _$2 || T$9 || i$18 && !c$3 || c$3 && u$14 && Nn$5(s$8.test, 1) || nt$4, Ns$1 = [];
	!B$4 && d$13(m$11, h$2.Dangling) && e$4.call((Xe$4) => {
		Ns$1.push(N$4(Xe$4, t$13), F$3);
	}, "consequent");
	let er$3 = [];
	d$13(s$8.test, h$2.Dangling) && e$4.call((Xe$4) => {
		er$3.push(N$4(Xe$4, t$13));
	}, "test"), !g$2 && d$13(f$3, h$2.Dangling) && e$4.call((Xe$4) => {
		er$3.push(N$4(Xe$4, t$13));
	}, "alternate"), d$13(s$8, h$2.Dangling) && er$3.push(N$4(e$4, t$13));
	let Gs$4 = Symbol("test"), Va$4 = Symbol("consequent"), dr$5 = Symbol("test-and-consequent"), $a$3 = u$14 ? [Ms$2(r$12("test")), s$8.test.type === "ConditionalExpression" ? Ce$5 : ""] : [
		r$12("checkType"),
		" ",
		"extends",
		" ",
		Je$5(s$8.extendsType) || s$8.extendsType.type === "TSMappedType" ? r$12("extendsType") : l$9(Ms$2(r$12("extendsType")))
	], qs$3 = l$9([$a$3, " ?"], { id: Gs$4 }), Ka$5 = r$12(a$13), Tr$4 = D$3([
		B$4 || Z$4 && (Y$4(m$11) || c$3 || _$2) ? F$3 : x$2,
		Ns$1,
		Ka$5
	]), Qa$4 = Js$3 ? l$9([qs$3, _$2 ? Tr$4 : S$3(Tr$4, l$9(Tr$4, { id: Va$4 }), { groupId: Gs$4 })], { id: dr$5 }) : [qs$3, Tr$4], wn$4 = r$12(o$9), Ws$4 = nt$4 ? S$3(wn$4, Jr$4(Ms$2(wn$4)), { groupId: dr$5 }) : wn$4, tr$4 = [
		Qa$4,
		er$3.length > 0 ? [D$3([F$3, er$3]), F$3] : g$2 ? F$3 : nt$4 ? S$3(x$2, " ", { groupId: dr$5 }) : x$2,
		":",
		g$2 ? " " : M$2 ? Js$3 ? S$3(Ae$5, S$3(_$2 || nt$4 ? " " : Ae$5, " "), { groupId: dr$5 }) : S$3(Ae$5, " ") : " ",
		g$2 ? Ws$4 : l$9([D$3(Ws$4), Z$4 && !nt$4 ? E$2 : ""]),
		L$4 && !lt$3 ? E$2 : "",
		Ot$4 ? Ce$5 : ""
	];
	return W$2 && !Ot$4 ? l$9(D$3([E$2, l$9(tr$4)])) : W$2 || ne$6 ? l$9(D$3(tr$4)) : lt$3 || i$18 && A$3 ? l$9([D$3([E$2, tr$4]), se$3 ? E$2 : ""]) : C$3 === k$5 ? l$9(tr$4) : tr$4;
}
function Pa$1(e$4, t$13, r$12, n$8) {
	let { node: s$8 } = e$4;
	if (wr$3(s$8)) return Aa$2(e$4, t$13);
	let u$14 = t$13.semi ? ";" : "", i$18 = [];
	switch (s$8.type) {
		case "JsExpressionRoot": return r$12("node");
		case "JsonRoot": return [
			N$4(e$4, t$13),
			r$12("node"),
			F$3
		];
		case "File": return Ea$2(e$4, t$13, r$12) ?? r$12("program");
		case "EmptyStatement": return "";
		case "ExpressionStatement": return Da$1(e$4, t$13, r$12);
		case "ChainExpression": return r$12("expression");
		case "ParenthesizedExpression": return !d$13(s$8.expression) && (ue$3(s$8.expression) || U$3(s$8.expression)) ? [
			"(",
			r$12("expression"),
			")"
		] : l$9([
			"(",
			D$3([E$2, r$12("expression")]),
			E$2,
			")"
		]);
		case "AssignmentExpression": return Wi$4(e$4, t$13, r$12);
		case "VariableDeclarator": return Ui$3(e$4, t$13, r$12);
		case "BinaryExpression":
		case "LogicalExpression": return $r$5(e$4, t$13, r$12);
		case "AssignmentPattern": return [
			r$12("left"),
			" = ",
			r$12("right")
		];
		case "OptionalMemberExpression":
		case "MemberExpression": return Ri$3(e$4, t$13, r$12);
		case "MetaProperty": return [
			r$12("meta"),
			".",
			r$12("property")
		];
		case "BindExpression": return s$8.object && i$18.push(r$12("object")), i$18.push(l$9(D$3([E$2, Kr$4(e$4, t$13, r$12)]))), i$18;
		case "Identifier": return [
			s$8.name,
			V$4(e$4),
			mn$4(e$4),
			H$5(e$4, r$12)
		];
		case "V8IntrinsicIdentifier": return ["%", s$8.name];
		case "SpreadElement":
		case "SpreadElementPattern":
		case "SpreadPropertyPattern":
		case "RestElement": return yn$4(e$4, r$12);
		case "FunctionDeclaration":
		case "FunctionExpression": return En$4(e$4, t$13, r$12, n$8);
		case "ArrowFunctionExpression": return sa$2(e$4, t$13, r$12, n$8);
		case "YieldExpression": return i$18.push("yield"), s$8.delegate && i$18.push("*"), s$8.argument && i$18.push(" ", r$12("argument")), i$18;
		case "AwaitExpression":
			if (i$18.push("await"), s$8.argument) {
				i$18.push(" ", r$12("argument"));
				let { parent: a$13 } = e$4;
				if (w$2(a$13) && a$13.callee === s$8 || G$4(a$13) && a$13.object === s$8) {
					i$18 = [D$3([E$2, ...i$18]), E$2];
					let o$9 = e$4.findAncestor((p$2) => p$2.type === "AwaitExpression" || p$2.type === "BlockStatement");
					if ((o$9 == null ? void 0 : o$9.type) !== "AwaitExpression" || !pe$5(o$9.argument, (p$2) => p$2 === s$8)) return l$9(i$18);
				}
			}
			return i$18;
		case "ExportDefaultDeclaration":
		case "ExportNamedDeclaration":
		case "ExportAllDeclaration": return Bn$4(e$4, t$13, r$12);
		case "ImportDeclaration": return da$2(e$4, t$13, r$12);
		case "ImportSpecifier":
		case "ExportSpecifier":
		case "ImportNamespaceSpecifier":
		case "ExportNamespaceSpecifier":
		case "ImportDefaultSpecifier":
		case "ExportDefaultSpecifier": return Ba$2(e$4, t$13, r$12);
		case "ImportAttribute": return Dn$4(e$4, t$13, r$12);
		case "Program":
		case "BlockStatement":
		case "StaticBlock": return An$4(e$4, t$13, r$12);
		case "ClassBody": return ca$2(e$4, t$13, r$12);
		case "ThrowStatement": return ra$2(e$4, t$13, r$12);
		case "ReturnStatement": return ta$2(e$4, t$13, r$12);
		case "NewExpression":
		case "ImportExpression":
		case "OptionalCallExpression":
		case "CallExpression": return Qr$6(e$4, t$13, r$12);
		case "ObjectExpression":
		case "ObjectPattern": return gt$5(e$4, t$13, r$12);
		case "Property": return bt$5(s$8) ? Er$4(e$4, t$13, r$12) : Dn$4(e$4, t$13, r$12);
		case "ObjectProperty": return Dn$4(e$4, t$13, r$12);
		case "ObjectMethod": return Er$4(e$4, t$13, r$12);
		case "Decorator": return ["@", r$12("expression")];
		case "ArrayExpression":
		case "ArrayPattern": return Kt$3(e$4, t$13, r$12);
		case "SequenceExpression": {
			let { parent: a$13 } = e$4;
			if (a$13.type === "ExpressionStatement" || a$13.type === "ForStatement") {
				let p$2 = [];
				return e$4.each(({ isFirst: m$11 }) => {
					m$11 ? p$2.push(r$12()) : p$2.push(",", D$3([x$2, r$12()]));
				}, "expressions"), l$9(p$2);
			}
			let o$9 = b$6([",", x$2], e$4.map(r$12, "expressions"));
			return (a$13.type === "ReturnStatement" || a$13.type === "ThrowStatement") && e$4.key === "argument" || a$13.type === "ArrowFunctionExpression" && e$4.key === "body" ? l$9(S$3([D$3([E$2, o$9]), E$2], o$9)) : l$9(o$9);
		}
		case "ThisExpression": return "this";
		case "Super": return "super";
		case "Directive": return [r$12("value"), u$14];
		case "UnaryExpression": return i$18.push(s$8.operator), /[a-z]$/u.test(s$8.operator) && i$18.push(" "), d$13(s$8.argument) ? i$18.push(l$9([
			"(",
			D$3([E$2, r$12("argument")]),
			E$2,
			")"
		])) : i$18.push(r$12("argument")), i$18;
		case "UpdateExpression": return [
			s$8.prefix ? s$8.operator : "",
			r$12("argument"),
			s$8.prefix ? "" : s$8.operator
		];
		case "ConditionalExpression": return zt$4(e$4, t$13, r$12, n$8);
		case "VariableDeclaration": {
			let a$13 = e$4.map(r$12, "declarations"), o$9 = e$4.parent, p$2 = o$9.type === "ForStatement" || o$9.type === "ForInStatement" || o$9.type === "ForOfStatement", m$11 = s$8.declarations.some((y$7) => y$7.init), f$3;
			return a$13.length === 1 && !d$13(s$8.declarations[0]) ? f$3 = a$13[0] : a$13.length > 0 && (f$3 = D$3(a$13[0])), i$18 = [
				$$3(e$4),
				s$8.kind,
				f$3 ? [" ", f$3] : "",
				D$3(a$13.slice(1).map((y$7) => [
					",",
					m$11 && !p$2 ? F$3 : x$2,
					y$7
				]))
			], p$2 && o$9.body !== s$8 || i$18.push(u$14), l$9(i$18);
		}
		case "WithStatement": return l$9([
			"with (",
			r$12("object"),
			")",
			Et$3(s$8.body, r$12("body"))
		]);
		case "IfStatement": {
			let a$13 = Et$3(s$8.consequent, r$12("consequent")), o$9 = l$9([
				"if (",
				l$9([D$3([E$2, r$12("test")]), E$2]),
				")",
				a$13
			]);
			if (i$18.push(o$9), s$8.alternate) {
				let p$2 = d$13(s$8.consequent, h$2.Trailing | h$2.Line) || Mr$3(s$8), m$11 = s$8.consequent.type === "BlockStatement" && !p$2;
				i$18.push(m$11 ? " " : F$3), d$13(s$8, h$2.Dangling) && i$18.push(N$4(e$4, t$13), p$2 ? F$3 : " "), i$18.push("else", l$9(Et$3(s$8.alternate, r$12("alternate"), s$8.alternate.type === "IfStatement")));
			}
			return i$18;
		}
		case "ForStatement": {
			let a$13 = Et$3(s$8.body, r$12("body")), o$9 = N$4(e$4, t$13), p$2 = o$9 ? [o$9, E$2] : "";
			return !s$8.init && !s$8.test && !s$8.update ? [p$2, l$9(["for (;;)", a$13])] : [p$2, l$9([
				"for (",
				l$9([D$3([
					E$2,
					r$12("init"),
					";",
					x$2,
					r$12("test"),
					";",
					x$2,
					r$12("update")
				]), E$2]),
				")",
				a$13
			])];
		}
		case "WhileStatement": return l$9([
			"while (",
			l$9([D$3([E$2, r$12("test")]), E$2]),
			")",
			Et$3(s$8.body, r$12("body"))
		]);
		case "ForInStatement": return l$9([
			"for (",
			r$12("left"),
			" in ",
			r$12("right"),
			")",
			Et$3(s$8.body, r$12("body"))
		]);
		case "ForOfStatement": return l$9([
			"for",
			s$8.await ? " await" : "",
			" (",
			r$12("left"),
			" of ",
			r$12("right"),
			")",
			Et$3(s$8.body, r$12("body"))
		]);
		case "DoWhileStatement": {
			let a$13 = Et$3(s$8.body, r$12("body"));
			return i$18 = [l$9(["do", a$13])], s$8.body.type === "BlockStatement" ? i$18.push(" ") : i$18.push(F$3), i$18.push("while (", l$9([D$3([E$2, r$12("test")]), E$2]), ")", u$14), i$18;
		}
		case "DoExpression": return [
			s$8.async ? "async " : "",
			"do ",
			r$12("body")
		];
		case "BreakStatement":
		case "ContinueStatement": return i$18.push(s$8.type === "BreakStatement" ? "break" : "continue"), s$8.label && i$18.push(" ", r$12("label")), i$18.push(u$14), i$18;
		case "LabeledStatement": return s$8.body.type === "EmptyStatement" ? [r$12("label"), ":;"] : [
			r$12("label"),
			": ",
			r$12("body")
		];
		case "TryStatement": return [
			"try ",
			r$12("block"),
			s$8.handler ? [" ", r$12("handler")] : "",
			s$8.finalizer ? [" finally ", r$12("finalizer")] : ""
		];
		case "CatchClause":
			if (s$8.param) {
				let a$13 = d$13(s$8.param, (p$2) => !te$4(p$2) || p$2.leading && ee$3(t$13.originalText, P$4(p$2)) || p$2.trailing && ee$3(t$13.originalText, j$5(p$2), { backwards: !0 })), o$9 = r$12("param");
				return [
					"catch ",
					a$13 ? [
						"(",
						D$3([E$2, o$9]),
						E$2,
						") "
					] : [
						"(",
						o$9,
						") "
					],
					r$12("body")
				];
			}
			return ["catch ", r$12("body")];
		case "SwitchStatement": return [
			l$9([
				"switch (",
				D$3([E$2, r$12("discriminant")]),
				E$2,
				")"
			]),
			" {",
			s$8.cases.length > 0 ? D$3([F$3, b$6(F$3, e$4.map(({ node: a$13, isLast: o$9 }) => [r$12(), !o$9 && me$4(a$13, t$13) ? F$3 : ""], "cases"))]) : "",
			F$3,
			"}"
		];
		case "SwitchCase": {
			s$8.test ? i$18.push("case ", r$12("test"), ":") : i$18.push("default:"), d$13(s$8, h$2.Dangling) && i$18.push(" ", N$4(e$4, t$13));
			let a$13 = s$8.consequent.filter((o$9) => o$9.type !== "EmptyStatement");
			if (a$13.length > 0) {
				let o$9 = Fr$4(e$4, t$13, r$12, "consequent");
				i$18.push(a$13.length === 1 && a$13[0].type === "BlockStatement" ? [" ", o$9] : D$3([F$3, o$9]));
			}
			return i$18;
		}
		case "DebuggerStatement": return ["debugger", u$14];
		case "ClassDeclaration":
		case "ClassExpression": return xn$2(e$4, t$13, r$12);
		case "ClassMethod":
		case "ClassPrivateMethod":
		case "MethodDefinition": return hn$4(e$4, t$13, r$12);
		case "ClassProperty":
		case "PropertyDefinition":
		case "ClassPrivateProperty":
		case "ClassAccessorProperty":
		case "AccessorProperty": return gn$5(e$4, t$13, r$12);
		case "TemplateElement": return ve$4(s$8.value.raw);
		case "TemplateLiteral": return Wr$4(e$4, t$13, r$12);
		case "TaggedTemplateExpression": return Zu$2(e$4, t$13, r$12);
		case "PrivateIdentifier": return ["#", s$8.name];
		case "PrivateName": return ["#", r$12("id")];
		case "TopicReference": return "%";
		case "ArgumentPlaceholder": return "?";
		case "ModuleExpression": return ["module ", r$12("body")];
		case "InterpreterDirective":
		default: throw new qe$5(s$8, "ESTree");
	}
}
function bn$5(e$4, t$13, r$12) {
	let { parent: n$8, node: s$8, key: u$14 } = e$4, i$18 = [r$12("expression")];
	switch (s$8.type) {
		case "AsConstExpression":
			i$18.push(" as const");
			break;
		case "AsExpression":
		case "TSAsExpression":
			i$18.push(" as ", r$12("typeAnnotation"));
			break;
		case "SatisfiesExpression":
		case "TSSatisfiesExpression":
			i$18.push(" satisfies ", r$12("typeAnnotation"));
			break;
	}
	return u$14 === "callee" && w$2(n$8) || u$14 === "object" && G$4(n$8) ? l$9([D$3([E$2, ...i$18]), E$2]) : i$18;
}
function ka$2(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = [$$3(e$4), "component"];
	n$8.id && s$8.push(" ", r$12("id")), s$8.push(r$12("typeParameters"));
	let u$14 = am$1(e$4, t$13, r$12);
	return n$8.rendersType ? s$8.push(l$9([
		u$14,
		" ",
		r$12("rendersType")
	])) : s$8.push(l$9([u$14])), n$8.body && s$8.push(" ", r$12("body")), t$13.semi && n$8.type === "DeclareComponent" && s$8.push(";"), s$8;
}
function am$1(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = n$8.params;
	if (n$8.rest && (s$8 = [...s$8, n$8.rest]), s$8.length === 0) return [
		"(",
		N$4(e$4, t$13, { filter: (i$18) => ke$5(t$13.originalText, P$4(i$18)) === ")" }),
		")"
	];
	let u$14 = [];
	return pm$1(e$4, (i$18, a$13) => {
		let o$9 = a$13 === s$8.length - 1;
		o$9 && n$8.rest && u$14.push("..."), u$14.push(r$12()), !o$9 && (u$14.push(","), me$4(s$8[a$13], t$13) ? u$14.push(F$3, F$3) : u$14.push(x$2));
	}), [
		"(",
		D$3([E$2, ...u$14]),
		S$3(ce$3(t$13, "all") && !om$1(n$8, s$8) ? "," : ""),
		E$2,
		")"
	];
}
function om$1(e$4, t$13) {
	var r$12;
	return e$4.rest || ((r$12 = v$3(!1, t$13, -1)) == null ? void 0 : r$12.type) === "RestElement";
}
function pm$1(e$4, t$13) {
	let { node: r$12 } = e$4, n$8 = 0, s$8 = (u$14) => t$13(u$14, n$8++);
	e$4.each(s$8, "params"), r$12.rest && e$4.call(s$8, "rest");
}
function Ia$1(e$4, t$13, r$12) {
	let { node: n$8 } = e$4;
	return n$8.shorthand ? r$12("local") : [
		r$12("name"),
		" as ",
		r$12("local")
	];
}
function La$3(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = [];
	return n$8.name && s$8.push(r$12("name"), n$8.optional ? "?: " : ": "), s$8.push(r$12("typeAnnotation")), s$8;
}
function Pn$4(e$4, t$13, r$12) {
	return gt$5(e$4, t$13, r$12);
}
function kn$3(e$4, t$13) {
	let { node: r$12 } = e$4, n$8 = t$13("id");
	r$12.computed && (n$8 = [
		"[",
		n$8,
		"]"
	]);
	let s$8 = "";
	return r$12.initializer && (s$8 = t$13("initializer")), r$12.init && (s$8 = t$13("init")), s$8 ? [
		n$8,
		" = ",
		s$8
	] : n$8;
}
function In$4(e$4, t$13) {
	let { node: r$12 } = e$4;
	return [
		$$3(e$4),
		r$12.const ? "const " : "",
		"enum ",
		t$13("id"),
		" ",
		t$13("body")
	];
}
function Oa$1(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = ["hook"];
	n$8.id && s$8.push(" ", r$12("id"));
	let u$14 = Ue$3(e$4, t$13, r$12, !1, !0), i$18 = Qt$2(e$4, r$12), a$13 = ct$3(n$8, i$18);
	return s$8.push(l$9([a$13 ? l$9(u$14) : u$14, i$18]), n$8.body ? " " : "", r$12("body")), s$8;
}
function _a$2(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = [$$3(e$4), "hook"];
	return n$8.id && s$8.push(" ", r$12("id")), t$13.semi && s$8.push(";"), s$8;
}
function wa$1(e$4) {
	var r$12;
	let { node: t$13 } = e$4;
	return t$13.type === "HookTypeAnnotation" && ((r$12 = e$4.getParentNode(2)) == null ? void 0 : r$12.type) === "DeclareHook";
}
function Ma$3(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = [];
	s$8.push(wa$1(e$4) ? "" : "hook ");
	let u$14 = Ue$3(e$4, t$13, r$12, !1, !0), i$18 = [];
	return i$18.push(wa$1(e$4) ? ": " : " => ", r$12("returnType")), ct$3(n$8, i$18) && (u$14 = l$9(u$14)), s$8.push(u$14, i$18), l$9(s$8);
}
function Ln$4(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = [$$3(e$4), "interface"], u$14 = [], i$18 = [];
	n$8.type !== "InterfaceTypeAnnotation" && u$14.push(" ", r$12("id"), r$12("typeParameters"));
	let a$13 = n$8.typeParameters && !d$13(n$8.typeParameters, h$2.Trailing | h$2.Line);
	return O$2(n$8.extends) && i$18.push(a$13 ? S$3(" ", x$2, { groupId: Cr$3(n$8.typeParameters) }) : x$2, "extends ", (n$8.extends.length === 1 ? du$1 : D$3)(b$6([",", x$2], e$4.map(r$12, "extends")))), d$13(n$8.id, h$2.Trailing) || O$2(n$8.extends) ? a$13 ? s$8.push(l$9([...u$14, D$3(i$18)])) : s$8.push(l$9(D$3([...u$14, ...i$18]))) : s$8.push(...u$14, ...i$18), s$8.push(" ", r$12("body")), l$9(s$8);
}
function cm$1(e$4) {
	switch (e$4) {
		case null: return "";
		case "PlusOptional": return "+?";
		case "MinusOptional": return "-?";
		case "Optional": return "?";
	}
}
function ja$4(e$4, t$13, r$12) {
	let { node: n$8 } = e$4;
	return l$9([
		n$8.variance ? r$12("variance") : "",
		"[",
		D$3([
			r$12("keyTparam"),
			" in ",
			r$12("sourceType")
		]),
		"]",
		cm$1(n$8.optional),
		": ",
		r$12("propType")
	]);
}
function va$2(e$4, t$13) {
	return e$4 === "+" || e$4 === "-" ? e$4 + t$13 : t$13;
}
function Ra$4(e$4, t$13, r$12) {
	let { node: n$8 } = e$4, s$8 = !1;
	if (t$13.objectWrap === "preserve") {
		let u$14 = j$5(n$8), i$18 = Ar$4(t$13, u$14 + 1, j$5(n$8.key)), a$13 = u$14 + 1 + i$18.search(/\S/u);
		ie$5(t$13.originalText, u$14, a$13) && (s$8 = !0);
	}
	return l$9([
		"{",
		D$3([
			t$13.bracketSpacing ? x$2 : E$2,
			d$13(n$8, h$2.Dangling) ? l$9([N$4(e$4, t$13), F$3]) : "",
			l$9([
				n$8.readonly ? [va$2(n$8.readonly, "readonly"), " "] : "",
				"[",
				r$12("key"),
				" in ",
				r$12("constraint"),
				n$8.nameType ? [" as ", r$12("nameType")] : "",
				"]",
				n$8.optional ? va$2(n$8.optional, "?") : "",
				n$8.typeAnnotation ? ": " : "",
				r$12("typeAnnotation")
			]),
			t$13.semi ? S$3(";") : ""
		]),
		t$13.bracketSpacing ? x$2 : E$2,
		"}"
	], { shouldBreak: s$8 });
}
function Ja$3(e$4, t$13, r$12) {
	let { node: n$8 } = e$4;
	if (Pr$5(n$8)) return n$8.type.slice(0, -14).toLowerCase();
	let s$8 = t$13.semi ? ";" : "";
	switch (n$8.type) {
		case "ComponentDeclaration":
		case "DeclareComponent":
		case "ComponentTypeAnnotation": return ka$2(e$4, t$13, r$12);
		case "ComponentParameter": return Ia$1(e$4, t$13, r$12);
		case "ComponentTypeParameter": return La$3(e$4, t$13, r$12);
		case "HookDeclaration": return Oa$1(e$4, t$13, r$12);
		case "DeclareHook": return _a$2(e$4, t$13, r$12);
		case "HookTypeAnnotation": return Ma$3(e$4, t$13, r$12);
		case "DeclareClass": return xn$2(e$4, t$13, r$12);
		case "DeclareFunction": return [
			$$3(e$4),
			"function ",
			r$12("id"),
			r$12("predicate"),
			s$8
		];
		case "DeclareModule": return [
			"declare module ",
			r$12("id"),
			" ",
			r$12("body")
		];
		case "DeclareModuleExports": return [
			"declare module.exports",
			H$5(e$4, r$12),
			s$8
		];
		case "DeclareNamespace": return [
			"declare namespace ",
			r$12("id"),
			" ",
			r$12("body")
		];
		case "DeclareVariable": return [
			$$3(e$4),
			n$8.kind ?? "var",
			" ",
			r$12("id"),
			s$8
		];
		case "DeclareExportDeclaration":
		case "DeclareExportAllDeclaration": return Bn$4(e$4, t$13, r$12);
		case "DeclareOpaqueType":
		case "OpaqueType": return Vi$4(e$4, t$13, r$12);
		case "DeclareTypeAlias":
		case "TypeAlias": return Zr$4(e$4, t$13, r$12);
		case "IntersectionTypeAnnotation": return en$5(e$4, t$13, r$12);
		case "UnionTypeAnnotation": return tn$3(e$4, t$13, r$12);
		case "ConditionalTypeAnnotation": return zt$4(e$4, t$13, r$12);
		case "InferTypeAnnotation": return sn$3(e$4, t$13, r$12);
		case "FunctionTypeAnnotation": return rn$5(e$4, t$13, r$12);
		case "TupleTypeAnnotation": return Kt$3(e$4, t$13, r$12);
		case "TupleTypeLabeledElement": return an$4(e$4, t$13, r$12);
		case "TupleTypeSpreadElement": return un$4(e$4, t$13, r$12);
		case "GenericTypeAnnotation": return [r$12("id"), wt$5(e$4, t$13, r$12, "typeParameters")];
		case "IndexedAccessType":
		case "OptionalIndexedAccessType": return nn$4(e$4, t$13, r$12);
		case "TypeAnnotation": return on$5(e$4, t$13, r$12);
		case "TypeParameter": return Tn$4(e$4, t$13, r$12);
		case "TypeofTypeAnnotation": return cn$5(e$4, r$12);
		case "ExistsTypeAnnotation": return "*";
		case "ArrayTypeAnnotation": return pn$4(r$12);
		case "DeclareEnum":
		case "EnumDeclaration": return In$4(e$4, r$12);
		case "EnumBooleanBody":
		case "EnumNumberBody":
		case "EnumBigIntBody":
		case "EnumStringBody":
		case "EnumSymbolBody": return [n$8.type === "EnumSymbolBody" || n$8.explicitType ? `of ${n$8.type.slice(4, -4).toLowerCase()} ` : "", Pn$4(e$4, t$13, r$12)];
		case "EnumBooleanMember":
		case "EnumNumberMember":
		case "EnumBigIntMember":
		case "EnumStringMember":
		case "EnumDefaultedMember": return kn$3(e$4, r$12);
		case "FunctionTypeParam": {
			let u$14 = n$8.name ? r$12("name") : e$4.parent.this === n$8 ? "this" : "";
			return [
				u$14,
				V$4(e$4),
				u$14 ? ": " : "",
				r$12("typeAnnotation")
			];
		}
		case "DeclareInterface":
		case "InterfaceDeclaration":
		case "InterfaceTypeAnnotation": return Ln$4(e$4, t$13, r$12);
		case "ClassImplements":
		case "InterfaceExtends": return [r$12("id"), r$12("typeParameters")];
		case "NullableTypeAnnotation": return ["?", r$12("typeAnnotation")];
		case "Variance": {
			let { kind: u$14 } = n$8;
			return jt$4.ok(u$14 === "plus" || u$14 === "minus"), u$14 === "plus" ? "+" : "-";
		}
		case "KeyofTypeAnnotation": return ["keyof ", r$12("argument")];
		case "ObjectTypeCallProperty": return [n$8.static ? "static " : "", r$12("value")];
		case "ObjectTypeMappedTypeProperty": return ja$4(e$4, t$13, r$12);
		case "ObjectTypeIndexer": return [
			n$8.static ? "static " : "",
			n$8.variance ? r$12("variance") : "",
			"[",
			r$12("id"),
			n$8.id ? ": " : "",
			r$12("key"),
			"]: ",
			r$12("value")
		];
		case "ObjectTypeProperty": {
			let u$14 = "";
			return n$8.proto ? u$14 = "proto " : n$8.static && (u$14 = "static "), [
				u$14,
				n$8.kind !== "init" ? n$8.kind + " " : "",
				n$8.variance ? r$12("variance") : "",
				Ct$5(e$4, t$13, r$12),
				V$4(e$4),
				bt$5(n$8) ? "" : ": ",
				r$12("value")
			];
		}
		case "ObjectTypeAnnotation": return gt$5(e$4, t$13, r$12);
		case "ObjectTypeInternalSlot": return [
			n$8.static ? "static " : "",
			"[[",
			r$12("id"),
			"]]",
			V$4(e$4),
			n$8.method ? "" : ": ",
			r$12("value")
		];
		case "ObjectTypeSpreadProperty": return yn$4(e$4, r$12);
		case "QualifiedTypeofIdentifier":
		case "QualifiedTypeIdentifier": return [
			r$12("qualification"),
			".",
			r$12("id")
		];
		case "NullLiteralTypeAnnotation": return "null";
		case "BooleanLiteralTypeAnnotation": return String(n$8.value);
		case "StringLiteralTypeAnnotation": return ve$4(ut$3(ae$4(n$8), t$13));
		case "NumberLiteralTypeAnnotation": return Ft$3(ae$4(n$8));
		case "BigIntLiteralTypeAnnotation": return Sn$4(ae$4(n$8));
		case "TypeCastExpression": return [
			"(",
			r$12("expression"),
			H$5(e$4, r$12),
			")"
		];
		case "TypePredicate": return ln$4(e$4, r$12);
		case "TypeOperator": return [
			n$8.operator,
			" ",
			r$12("typeAnnotation")
		];
		case "TypeParameterDeclaration":
		case "TypeParameterInstantiation": return wt$5(e$4, t$13, r$12, "params");
		case "InferredPredicate":
		case "DeclaredPredicate": return [
			e$4.key === "predicate" && e$4.parent.type !== "DeclareFunction" && !e$4.parent.returnType ? ": " : " ",
			"%checks",
			...n$8.type === "DeclaredPredicate" ? [
				"(",
				r$12("value"),
				")"
			] : []
		];
		case "AsExpression":
		case "AsConstExpression":
		case "SatisfiesExpression": return bn$5(e$4, t$13, r$12);
	}
}
function Na$2(e$4, t$13, r$12) {
	var i$18;
	let { node: n$8 } = e$4;
	if (!n$8.type.startsWith("TS")) return;
	if (kr$4(n$8)) return n$8.type.slice(2, -7).toLowerCase();
	let s$8 = t$13.semi ? ";" : "", u$14 = [];
	switch (n$8.type) {
		case "TSThisType": return "this";
		case "TSTypeAssertion": {
			let a$13 = !(U$3(n$8.expression) || ue$3(n$8.expression)), o$9 = l$9([
				"<",
				D$3([E$2, r$12("typeAnnotation")]),
				E$2,
				">"
			]), p$2 = [
				S$3("("),
				D$3([E$2, r$12("expression")]),
				E$2,
				S$3(")")
			];
			return a$13 ? tt$4([
				[o$9, r$12("expression")],
				[o$9, l$9(p$2, { shouldBreak: !0 })],
				[o$9, r$12("expression")]
			]) : l$9([o$9, r$12("expression")]);
		}
		case "TSDeclareFunction": return En$4(e$4, t$13, r$12);
		case "TSExportAssignment": return [
			"export = ",
			r$12("expression"),
			s$8
		];
		case "TSModuleBlock": return An$4(e$4, t$13, r$12);
		case "TSInterfaceBody":
		case "TSTypeLiteral": return gt$5(e$4, t$13, r$12);
		case "TSTypeAliasDeclaration": return Zr$4(e$4, t$13, r$12);
		case "TSQualifiedName": return [
			r$12("left"),
			".",
			r$12("right")
		];
		case "TSAbstractMethodDefinition":
		case "TSDeclareMethod": return hn$4(e$4, t$13, r$12);
		case "TSAbstractAccessorProperty":
		case "TSAbstractPropertyDefinition": return gn$5(e$4, t$13, r$12);
		case "TSInterfaceHeritage":
		case "TSClassImplements":
		case "TSExpressionWithTypeArguments":
		case "TSInstantiationExpression": return [r$12("expression"), r$12(n$8.typeArguments ? "typeArguments" : "typeParameters")];
		case "TSTemplateLiteralType": return Wr$4(e$4, t$13, r$12);
		case "TSNamedTupleMember": return an$4(e$4, t$13, r$12);
		case "TSRestType": return un$4(e$4, t$13, r$12);
		case "TSOptionalType": return [r$12("typeAnnotation"), "?"];
		case "TSInterfaceDeclaration": return Ln$4(e$4, t$13, r$12);
		case "TSTypeParameterDeclaration":
		case "TSTypeParameterInstantiation": return wt$5(e$4, t$13, r$12, "params");
		case "TSTypeParameter": return Tn$4(e$4, t$13, r$12);
		case "TSAsExpression":
		case "TSSatisfiesExpression": return bn$5(e$4, t$13, r$12);
		case "TSArrayType": return pn$4(r$12);
		case "TSPropertySignature": return [
			n$8.readonly ? "readonly " : "",
			Ct$5(e$4, t$13, r$12),
			V$4(e$4),
			H$5(e$4, r$12)
		];
		case "TSParameterProperty": return [
			$t$3(n$8),
			n$8.static ? "static " : "",
			n$8.override ? "override " : "",
			n$8.readonly ? "readonly " : "",
			r$12("parameter")
		];
		case "TSTypeQuery": return cn$5(e$4, r$12);
		case "TSIndexSignature": {
			let a$13 = n$8.parameters.length > 1 ? S$3(ce$3(t$13) ? "," : "") : "", o$9 = l$9([
				D$3([E$2, b$6([", ", E$2], e$4.map(r$12, "parameters"))]),
				a$13,
				E$2
			]), p$2 = e$4.parent.type === "ClassBody" && e$4.key === "body";
			return [
				p$2 && n$8.static ? "static " : "",
				n$8.readonly ? "readonly " : "",
				"[",
				n$8.parameters ? o$9 : "",
				"]",
				H$5(e$4, r$12),
				p$2 ? s$8 : ""
			];
		}
		case "TSTypePredicate": return ln$4(e$4, r$12);
		case "TSNonNullExpression": return [r$12("expression"), "!"];
		case "TSImportType": return [
			"import",
			Lt$4(e$4, t$13, r$12),
			n$8.qualifier ? [".", r$12("qualifier")] : "",
			wt$5(e$4, t$13, r$12, n$8.typeArguments ? "typeArguments" : "typeParameters")
		];
		case "TSLiteralType": return r$12("literal");
		case "TSIndexedAccessType": return nn$4(e$4, t$13, r$12);
		case "TSTypeOperator": return [
			n$8.operator,
			" ",
			r$12("typeAnnotation")
		];
		case "TSMappedType": return Ra$4(e$4, t$13, r$12);
		case "TSMethodSignature": {
			let a$13 = n$8.kind && n$8.kind !== "method" ? `${n$8.kind} ` : "";
			u$14.push($t$3(n$8), a$13, n$8.computed ? "[" : "", r$12("key"), n$8.computed ? "]" : "", V$4(e$4));
			let o$9 = Ue$3(e$4, t$13, r$12, !1, !0), p$2 = n$8.returnType ? "returnType" : "typeAnnotation", m$11 = n$8[p$2], f$3 = m$11 ? H$5(e$4, r$12, p$2) : "", y$7 = ct$3(n$8, f$3);
			return u$14.push(y$7 ? l$9(o$9) : o$9), m$11 && u$14.push(l$9(f$3)), l$9(u$14);
		}
		case "TSNamespaceExportDeclaration": return [
			"export as namespace ",
			r$12("id"),
			t$13.semi ? ";" : ""
		];
		case "TSEnumDeclaration": return In$4(e$4, r$12);
		case "TSEnumBody": return Pn$4(e$4, t$13, r$12);
		case "TSEnumMember": return kn$3(e$4, r$12);
		case "TSImportEqualsDeclaration": return [
			n$8.isExport ? "export " : "",
			"import ",
			Os$1(n$8, !1),
			r$12("id"),
			" = ",
			r$12("moduleReference"),
			t$13.semi ? ";" : ""
		];
		case "TSExternalModuleReference": return [
			"require(",
			r$12("expression"),
			")"
		];
		case "TSModuleDeclaration": {
			let { parent: a$13 } = e$4, o$9 = a$13.type === "TSModuleDeclaration", p$2 = ((i$18 = n$8.body) == null ? void 0 : i$18.type) === "TSModuleDeclaration";
			return o$9 ? u$14.push(".") : (u$14.push($$3(e$4)), n$8.kind !== "global" && u$14.push(n$8.kind, " ")), u$14.push(r$12("id")), p$2 ? u$14.push(r$12("body")) : n$8.body ? u$14.push(" ", l$9(r$12("body"))) : u$14.push(s$8), u$14;
		}
		case "TSConditionalType": return zt$4(e$4, t$13, r$12);
		case "TSInferType": return sn$3(e$4, t$13, r$12);
		case "TSIntersectionType": return en$5(e$4, t$13, r$12);
		case "TSUnionType": return tn$3(e$4, t$13, r$12);
		case "TSFunctionType":
		case "TSCallSignatureDeclaration":
		case "TSConstructorType":
		case "TSConstructSignatureDeclaration": return rn$5(e$4, t$13, r$12);
		case "TSTupleType": return Kt$3(e$4, t$13, r$12);
		case "TSTypeReference": return [r$12("typeName"), wt$5(e$4, t$13, r$12, n$8.typeArguments ? "typeArguments" : "typeParameters")];
		case "TSTypeAnnotation": return on$5(e$4, t$13, r$12);
		case "TSEmptyBodyFunctionExpression": return Fn$3(e$4, t$13, r$12);
		case "TSJSDocAllType": return "*";
		case "TSJSDocUnknownType": return "?";
		case "TSJSDocNullableType": return Bs$3(e$4, r$12, "?");
		case "TSJSDocNonNullableType": return Bs$3(e$4, r$12, "!");
		case "TSParenthesizedType":
		default: throw new qe$5(n$8, "TypeScript");
	}
}
function lm$1(e$4, t$13, r$12, n$8) {
	if (Vr$3(e$4)) return Ti$2(e$4, t$13);
	for (let s$8 of [
		Li$3,
		bi$5,
		Ja$3,
		Na$2,
		Pa$1
	]) {
		let u$14 = s$8(e$4, t$13, r$12, n$8);
		if (u$14 !== void 0) return u$14;
	}
}
var mm$1 = R$5([
	"ClassMethod",
	"ClassPrivateMethod",
	"ClassProperty",
	"ClassAccessorProperty",
	"AccessorProperty",
	"TSAbstractAccessorProperty",
	"PropertyDefinition",
	"TSAbstractPropertyDefinition",
	"ClassPrivateProperty",
	"MethodDefinition",
	"TSAbstractMethodDefinition",
	"TSDeclareMethod"
]);
function ym$2(e$4, t$13, r$12, n$8) {
	var f$3;
	e$4.isRoot && ((f$3 = t$13.__onHtmlBindingRoot) == null || f$3.call(t$13, e$4.node, t$13));
	let s$8 = lm$1(e$4, t$13, r$12, n$8);
	if (!s$8) return "";
	let { node: u$14 } = e$4;
	if (mm$1(u$14)) return s$8;
	let i$18 = O$2(u$14.decorators), a$13 = Oi$4(e$4, t$13, r$12), o$9 = u$14.type === "ClassExpression";
	if (i$18 && !o$9) return lr$4(s$8, (y$7) => l$9([a$13, y$7]));
	let p$2 = Le$4(e$4, t$13), m$11 = ya$1(e$4, t$13);
	return !a$13 && !p$2 && !m$11 ? s$8 : lr$4(s$8, (y$7) => [
		m$11 ? ";" : "",
		p$2 ? "(" : "",
		p$2 && o$9 && i$18 ? [D$3([
			x$2,
			a$13,
			y$7
		]), x$2] : [a$13, y$7],
		p$2 ? ")" : ""
	]);
}
var Ga$4 = ym$2;
var fm$1 = { avoidAstMutation: !0 };
var qa$3 = [
	{
		name: "JSON.stringify",
		type: "data",
		extensions: [".importmap"],
		tmScope: "source.json",
		aceMode: "json",
		aliases: [
			"geojson",
			"jsonl",
			"sarif",
			"topojson"
		],
		codemirrorMode: "javascript",
		codemirrorMimeType: "application/json",
		filenames: [
			"package.json",
			"package-lock.json",
			"composer.json"
		],
		parsers: ["json-stringify"],
		vscodeLanguageIds: ["json"],
		linguistLanguageId: 174
	},
	{
		name: "JSON",
		type: "data",
		extensions: [
			".json",
			".4DForm",
			".4DProject",
			".avsc",
			".geojson",
			".gltf",
			".har",
			".ice",
			".JSON-tmLanguage",
			".json.example",
			".mcmeta",
			".sarif",
			".tact",
			".tfstate",
			".tfstate.backup",
			".topojson",
			".webapp",
			".webmanifest",
			".yy",
			".yyp"
		],
		tmScope: "source.json",
		aceMode: "json",
		aliases: [
			"geojson",
			"jsonl",
			"sarif",
			"topojson"
		],
		codemirrorMode: "javascript",
		codemirrorMimeType: "application/json",
		filenames: [
			".all-contributorsrc",
			".arcconfig",
			".auto-changelog",
			".c8rc",
			".htmlhintrc",
			".imgbotconfig",
			".nycrc",
			".tern-config",
			".tern-project",
			".watchmanconfig",
			".babelrc",
			".jscsrc",
			".jshintrc",
			".jslintrc",
			".swcrc"
		],
		parsers: ["json"],
		vscodeLanguageIds: ["json"],
		linguistLanguageId: 174
	},
	{
		name: "JSON with Comments",
		type: "data",
		extensions: [
			".jsonc",
			".code-snippets",
			".code-workspace",
			".sublime-build",
			".sublime-color-scheme",
			".sublime-commands",
			".sublime-completions",
			".sublime-keymap",
			".sublime-macro",
			".sublime-menu",
			".sublime-mousemap",
			".sublime-project",
			".sublime-settings",
			".sublime-theme",
			".sublime-workspace",
			".sublime_metrics",
			".sublime_session"
		],
		tmScope: "source.json.comments",
		aceMode: "javascript",
		aliases: ["jsonc"],
		codemirrorMode: "javascript",
		codemirrorMimeType: "text/javascript",
		group: "JSON",
		filenames: [],
		parsers: ["jsonc"],
		vscodeLanguageIds: ["jsonc"],
		linguistLanguageId: 423
	},
	{
		name: "JSON5",
		type: "data",
		extensions: [".json5"],
		tmScope: "source.js",
		aceMode: "javascript",
		codemirrorMode: "javascript",
		codemirrorMimeType: "application/json",
		parsers: ["json5"],
		vscodeLanguageIds: ["json5"],
		linguistLanguageId: 175
	}
];
var js$2 = {};
xr$3(js$2, {
	getVisitorKeys: () => Ua$5,
	massageAstNode: () => Ya$2,
	print: () => Fm$1
});
var Em$1 = Br$4({
	JsonRoot: ["node"],
	ArrayExpression: ["elements"],
	ObjectExpression: ["properties"],
	ObjectProperty: ["key", "value"],
	UnaryExpression: ["argument"],
	NullLiteral: [],
	BooleanLiteral: [],
	StringLiteral: [],
	NumericLiteral: [],
	Identifier: [],
	TemplateLiteral: ["quasis"],
	TemplateElement: []
}), Ua$5 = Em$1;
function Fm$1(e$4, t$13, r$12) {
	let { node: n$8 } = e$4;
	switch (n$8.type) {
		case "JsonRoot": return [r$12("node"), F$3];
		case "ArrayExpression": {
			if (n$8.elements.length === 0) return "[]";
			let s$8 = e$4.map(() => e$4.node === null ? "null" : r$12(), "elements");
			return [
				"[",
				D$3([F$3, b$6([",", F$3], s$8)]),
				F$3,
				"]"
			];
		}
		case "ObjectExpression": return n$8.properties.length === 0 ? "{}" : [
			"{",
			D$3([F$3, b$6([",", F$3], e$4.map(r$12, "properties"))]),
			F$3,
			"}"
		];
		case "ObjectProperty": return [
			r$12("key"),
			": ",
			r$12("value")
		];
		case "UnaryExpression": return [n$8.operator === "+" ? "" : n$8.operator, r$12("argument")];
		case "NullLiteral": return "null";
		case "BooleanLiteral": return n$8.value ? "true" : "false";
		case "StringLiteral": return JSON.stringify(n$8.value);
		case "NumericLiteral": return Xa$4(e$4) ? JSON.stringify(String(n$8.value)) : JSON.stringify(n$8.value);
		case "Identifier": return Xa$4(e$4) ? JSON.stringify(n$8.name) : n$8.name;
		case "TemplateLiteral": return r$12(["quasis", 0]);
		case "TemplateElement": return JSON.stringify(n$8.value.cooked);
		default: throw new qe$5(n$8, "JSON");
	}
}
function Xa$4(e$4) {
	return e$4.key === "key" && e$4.parent.type === "ObjectProperty";
}
var Cm$1 = new Set([
	"start",
	"end",
	"extra",
	"loc",
	"comments",
	"leadingComments",
	"trailingComments",
	"innerComments",
	"errors",
	"range",
	"tokens"
]);
function Ya$2(e$4, t$13) {
	let { type: r$12 } = e$4;
	if (r$12 === "ObjectProperty") {
		let { key: n$8 } = e$4;
		n$8.type === "Identifier" ? t$13.key = {
			type: "StringLiteral",
			value: n$8.name
		} : n$8.type === "NumericLiteral" && (t$13.key = {
			type: "StringLiteral",
			value: String(n$8.value)
		});
		return;
	}
	if (r$12 === "UnaryExpression" && e$4.operator === "+") return t$13.argument;
	if (r$12 === "ArrayExpression") {
		for (let [n$8, s$8] of e$4.elements.entries()) s$8 === null && t$13.elements.splice(n$8, 0, { type: "NullLiteral" });
		return;
	}
	if (r$12 === "TemplateLiteral") return {
		type: "StringLiteral",
		value: e$4.quasis[0].value.cooked
	};
}
Ya$2.ignoredProperties = Cm$1;
var Zt$2 = {
	bracketSpacing: {
		category: "Common",
		type: "boolean",
		default: !0,
		description: "Print spaces between brackets.",
		oppositeDescription: "Do not print spaces between brackets."
	},
	objectWrap: {
		category: "Common",
		type: "choice",
		default: "preserve",
		description: "How to wrap object literals.",
		choices: [{
			value: "preserve",
			description: "Keep as multi-line, if there is a newline between the opening brace and first property."
		}, {
			value: "collapse",
			description: "Fit to a single line when possible."
		}]
	},
	singleQuote: {
		category: "Common",
		type: "boolean",
		default: !1,
		description: "Use single quotes instead of double quotes."
	},
	proseWrap: {
		category: "Common",
		type: "choice",
		default: "preserve",
		description: "How to wrap prose.",
		choices: [
			{
				value: "always",
				description: "Wrap prose if it exceeds the print width."
			},
			{
				value: "never",
				description: "Do not wrap prose."
			},
			{
				value: "preserve",
				description: "Wrap prose as-is."
			}
		]
	},
	bracketSameLine: {
		category: "Common",
		type: "boolean",
		default: !1,
		description: "Put > of opening tags on the last line instead of on a new line."
	},
	singleAttributePerLine: {
		category: "Common",
		type: "boolean",
		default: !1,
		description: "Enforce single attribute per line in HTML, Vue and JSX."
	}
};
var St$3 = "JavaScript", Am$1 = {
	arrowParens: {
		category: St$3,
		type: "choice",
		default: "always",
		description: "Include parentheses around a sole arrow function parameter.",
		choices: [{
			value: "always",
			description: "Always include parens. Example: `(x) => x`"
		}, {
			value: "avoid",
			description: "Omit parens when possible. Example: `x => x`"
		}]
	},
	bracketSameLine: Zt$2.bracketSameLine,
	objectWrap: Zt$2.objectWrap,
	bracketSpacing: Zt$2.bracketSpacing,
	jsxBracketSameLine: {
		category: St$3,
		type: "boolean",
		description: "Put > on the last line instead of at a new line.",
		deprecated: "2.4.0"
	},
	semi: {
		category: St$3,
		type: "boolean",
		default: !0,
		description: "Print semicolons.",
		oppositeDescription: "Do not print semicolons, except at the beginning of lines which may need them."
	},
	experimentalOperatorPosition: {
		category: St$3,
		type: "choice",
		default: "end",
		description: "Where to print operators when binary expressions wrap lines.",
		choices: [{
			value: "start",
			description: "Print operators at the start of new lines."
		}, {
			value: "end",
			description: "Print operators at the end of previous lines."
		}]
	},
	experimentalTernaries: {
		category: St$3,
		type: "boolean",
		default: !1,
		description: "Use curious ternaries, with the question mark after the condition.",
		oppositeDescription: "Default behavior of ternaries; keep question marks on the same line as the consequent."
	},
	singleQuote: Zt$2.singleQuote,
	jsxSingleQuote: {
		category: St$3,
		type: "boolean",
		default: !1,
		description: "Use single quotes in JSX."
	},
	quoteProps: {
		category: St$3,
		type: "choice",
		default: "as-needed",
		description: "Change when properties in objects are quoted.",
		choices: [
			{
				value: "as-needed",
				description: "Only add quotes around object properties where required."
			},
			{
				value: "consistent",
				description: "If at least one property in an object requires quotes, quote all properties."
			},
			{
				value: "preserve",
				description: "Respect the input use of quotes in object properties."
			}
		]
	},
	trailingComma: {
		category: St$3,
		type: "choice",
		default: "all",
		description: "Print trailing commas wherever possible when multi-line.",
		choices: [
			{
				value: "all",
				description: "Trailing commas wherever possible (including function arguments)."
			},
			{
				value: "es5",
				description: "Trailing commas where valid in ES5 (objects, arrays, etc.)"
			},
			{
				value: "none",
				description: "No trailing commas."
			}
		]
	},
	singleAttributePerLine: Zt$2.singleAttributePerLine
}, Ha$4 = Am$1;
var dm$1 = {
	estree: vs$1,
	"estree-json": js$2
}, Tm$1 = [...Vs$2, ...qa$3];
var Nx = Rs$2;

//#endregion
//#region node_modules/.pnpm/prettier@3.6.2_patch_hash=2c5fac0fd268a2b2ab314d9e790cb805e3eb5e35106fc2644635eb6950a6ec1f/node_modules/prettier/plugins/html.mjs
var on$4 = Object.defineProperty;
var un$3 = (t$13) => {
	throw TypeError(t$13);
};
var Ai$2 = (t$13, e$4, r$12) => e$4 in t$13 ? on$4(t$13, e$4, {
	enumerable: !0,
	configurable: !0,
	writable: !0,
	value: r$12
}) : t$13[e$4] = r$12;
var ln$3 = (t$13, e$4) => {
	for (var r$12 in e$4) on$4(t$13, r$12, {
		get: e$4[r$12],
		enumerable: !0
	});
};
var lr$3 = (t$13, e$4, r$12) => Ai$2(t$13, typeof e$4 != "symbol" ? e$4 + "" : e$4, r$12), cn$4 = (t$13, e$4, r$12) => e$4.has(t$13) || un$3("Cannot " + r$12);
var R$4 = (t$13, e$4, r$12) => (cn$4(t$13, e$4, "read from private field"), r$12 ? r$12.call(t$13) : e$4.get(t$13)), At$5 = (t$13, e$4, r$12) => e$4.has(t$13) ? un$3("Cannot add the same private member more than once") : e$4 instanceof WeakSet ? e$4.add(t$13) : e$4.set(t$13, r$12), pn$3 = (t$13, e$4, r$12, n$8) => (cn$4(t$13, e$4, "write to private field"), n$8 ? n$8.call(t$13, r$12) : e$4.set(t$13, r$12), r$12);
var rn$4 = {};
ln$3(rn$4, {
	languages: () => Hs$1,
	options: () => Us$3,
	parsers: () => tn$2,
	printers: () => uu$1
});
var Di$1 = (t$13, e$4, r$12, n$8) => {
	if (!(t$13 && e$4 == null)) return e$4.replaceAll ? e$4.replaceAll(r$12, n$8) : r$12.global ? e$4.replace(r$12, n$8) : e$4.split(r$12).join(n$8);
}, w$1 = Di$1;
var we$1 = "string", ze$4 = "array", Ye$4 = "cursor", be$3 = "indent", Te$4 = "align", je$2 = "trim", xe$2 = "group", ke$4 = "fill", ce$2 = "if-break", Be$1 = "indent-if-break", Ke$2 = "line-suffix", Xe$3 = "line-suffix-boundary", j$4 = "line", Qe$2 = "label", Le$3 = "break-parent", Dt$3 = new Set([
	Ye$4,
	be$3,
	Te$4,
	je$2,
	xe$2,
	ke$4,
	ce$2,
	Be$1,
	Ke$2,
	Xe$3,
	j$4,
	Qe$2,
	Le$3
]);
var vi$4 = (t$13, e$4, r$12) => {
	if (!(t$13 && e$4 == null)) return Array.isArray(e$4) || typeof e$4 == "string" ? e$4[r$12 < 0 ? e$4.length + r$12 : r$12] : e$4.at(r$12);
}, K$3 = vi$4;
function yi$4(t$13) {
	if (typeof t$13 == "string") return we$1;
	if (Array.isArray(t$13)) return ze$4;
	if (!t$13) return;
	let { type: e$4 } = t$13;
	if (Dt$3.has(e$4)) return e$4;
}
var Fe$1 = yi$4;
var wi$4 = (t$13) => new Intl.ListFormat("en-US", { type: "disjunction" }).format(t$13);
function bi$4(t$13) {
	let e$4 = t$13 === null ? "null" : typeof t$13;
	if (e$4 !== "string" && e$4 !== "object") return `Unexpected doc '${e$4}', 
Expected it to be 'string' or 'object'.`;
	if (Fe$1(t$13)) throw new Error("doc is valid.");
	let r$12 = Object.prototype.toString.call(t$13);
	if (r$12 !== "[object Object]") return `Unexpected doc '${r$12}'.`;
	let n$8 = wi$4([...Dt$3].map((s$8) => `'${s$8}'`));
	return `Unexpected doc.type '${t$13.type}'.
Expected it to be ${n$8}.`;
}
var cr$3 = class extends Error {
	name = "InvalidDocError";
	constructor(e$4) {
		super(bi$4(e$4)), this.doc = e$4;
	}
}, pr$2 = cr$3;
function hr$2(t$13, e$4) {
	if (typeof t$13 == "string") return e$4(t$13);
	let r$12 = /* @__PURE__ */ new Map();
	return n$8(t$13);
	function n$8(i$18) {
		if (r$12.has(i$18)) return r$12.get(i$18);
		let a$13 = s$8(i$18);
		return r$12.set(i$18, a$13), a$13;
	}
	function s$8(i$18) {
		switch (Fe$1(i$18)) {
			case ze$4: return e$4(i$18.map(n$8));
			case ke$4: return e$4({
				...i$18,
				parts: i$18.parts.map(n$8)
			});
			case ce$2: return e$4({
				...i$18,
				breakContents: n$8(i$18.breakContents),
				flatContents: n$8(i$18.flatContents)
			});
			case xe$2: {
				let { expandedStates: a$13, contents: o$9 } = i$18;
				return a$13 ? (a$13 = a$13.map(n$8), o$9 = a$13[0]) : o$9 = n$8(o$9), e$4({
					...i$18,
					contents: o$9,
					expandedStates: a$13
				});
			}
			case Te$4:
			case be$3:
			case Be$1:
			case Qe$2:
			case Ke$2: return e$4({
				...i$18,
				contents: n$8(i$18.contents)
			});
			case we$1:
			case Ye$4:
			case je$2:
			case Xe$3:
			case j$4:
			case Le$3: return e$4(i$18);
			default: throw new pr$2(i$18);
		}
	}
}
function B$3(t$13, e$4 = hn$3) {
	return hr$2(t$13, (r$12) => typeof r$12 == "string" ? H$4(e$4, r$12.split(`
`)) : r$12);
}
var mr$3 = () => {}, re$3 = mr$3, fr$3 = mr$3, mn$3 = mr$3;
function k$3(t$13) {
	return re$3(t$13), {
		type: be$3,
		contents: t$13
	};
}
function fn$4(t$13, e$4) {
	return re$3(e$4), {
		type: Te$4,
		contents: e$4,
		n: t$13
	};
}
function E$1(t$13, e$4 = {}) {
	return re$3(t$13), fr$3(e$4.expandedStates, !0), {
		type: xe$2,
		id: e$4.id,
		contents: t$13,
		break: !!e$4.shouldBreak,
		expandedStates: e$4.expandedStates
	};
}
function dn$3(t$13) {
	return fn$4(Number.NEGATIVE_INFINITY, t$13);
}
function gn$4(t$13) {
	return fn$4({ type: "root" }, t$13);
}
function vt$3(t$13) {
	return mn$3(t$13), {
		type: ke$4,
		parts: t$13
	};
}
function pe$4(t$13, e$4 = "", r$12 = {}) {
	return re$3(t$13), e$4 !== "" && re$3(e$4), {
		type: ce$2,
		breakContents: t$13,
		flatContents: e$4,
		groupId: r$12.groupId
	};
}
function Cn$3(t$13, e$4) {
	return re$3(t$13), {
		type: Be$1,
		contents: t$13,
		groupId: e$4.groupId,
		negate: e$4.negate
	};
}
var ne$4 = { type: Le$3 };
var xi$4 = {
	type: j$4,
	hard: !0
}, ki$3 = {
	type: j$4,
	hard: !0,
	literal: !0
}, _$1 = { type: j$4 }, v$2 = {
	type: j$4,
	soft: !0
}, S$2 = [xi$4, ne$4], hn$3 = [ki$3, ne$4];
function H$4(t$13, e$4) {
	re$3(t$13), fr$3(e$4);
	let r$12 = [];
	for (let n$8 = 0; n$8 < e$4.length; n$8++) n$8 !== 0 && r$12.push(t$13), r$12.push(e$4[n$8]);
	return r$12;
}
var yt$2 = "'", Sn$3 = "\"";
function Bi$2(t$13, e$4) {
	let r$12 = e$4 === !0 || e$4 === yt$2 ? yt$2 : Sn$3, n$8 = r$12 === yt$2 ? Sn$3 : yt$2, s$8 = 0, i$18 = 0;
	for (let a$13 of t$13) a$13 === r$12 ? s$8++ : a$13 === n$8 && i$18++;
	return s$8 > i$18 ? n$8 : r$12;
}
var _n$3 = Bi$2;
function dr$4(t$13) {
	if (typeof t$13 != "string") throw new TypeError("Expected a string");
	return t$13.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d");
}
var V$3, gr$2 = class {
	constructor(e$4) {
		At$5(this, V$3);
		pn$3(this, V$3, new Set(e$4));
	}
	getLeadingWhitespaceCount(e$4) {
		let r$12 = R$4(this, V$3), n$8 = 0;
		for (let s$8 = 0; s$8 < e$4.length && r$12.has(e$4.charAt(s$8)); s$8++) n$8++;
		return n$8;
	}
	getTrailingWhitespaceCount(e$4) {
		let r$12 = R$4(this, V$3), n$8 = 0;
		for (let s$8 = e$4.length - 1; s$8 >= 0 && r$12.has(e$4.charAt(s$8)); s$8--) n$8++;
		return n$8;
	}
	getLeadingWhitespace(e$4) {
		let r$12 = this.getLeadingWhitespaceCount(e$4);
		return e$4.slice(0, r$12);
	}
	getTrailingWhitespace(e$4) {
		let r$12 = this.getTrailingWhitespaceCount(e$4);
		return e$4.slice(e$4.length - r$12);
	}
	hasLeadingWhitespace(e$4) {
		return R$4(this, V$3).has(e$4.charAt(0));
	}
	hasTrailingWhitespace(e$4) {
		return R$4(this, V$3).has(K$3(!1, e$4, -1));
	}
	trimStart(e$4) {
		let r$12 = this.getLeadingWhitespaceCount(e$4);
		return e$4.slice(r$12);
	}
	trimEnd(e$4) {
		let r$12 = this.getTrailingWhitespaceCount(e$4);
		return e$4.slice(0, e$4.length - r$12);
	}
	trim(e$4) {
		return this.trimEnd(this.trimStart(e$4));
	}
	split(e$4, r$12 = !1) {
		let n$8 = `[${dr$4([...R$4(this, V$3)].join(""))}]+`, s$8 = new RegExp(r$12 ? `(${n$8})` : n$8, "u");
		return e$4.split(s$8);
	}
	hasWhitespaceCharacter(e$4) {
		let r$12 = R$4(this, V$3);
		return Array.prototype.some.call(e$4, (n$8) => r$12.has(n$8));
	}
	hasNonWhitespaceCharacter(e$4) {
		let r$12 = R$4(this, V$3);
		return Array.prototype.some.call(e$4, (n$8) => !r$12.has(n$8));
	}
	isWhitespaceOnly(e$4) {
		let r$12 = R$4(this, V$3);
		return Array.prototype.every.call(e$4, (n$8) => r$12.has(n$8));
	}
};
V$3 = /* @__PURE__ */ new WeakMap();
var En$3 = gr$2;
var Li$2 = [
	"	",
	`
`,
	"\f",
	"\r",
	" "
], Fi$2 = new En$3(Li$2), O$1 = Fi$2;
var Cr$2 = class extends Error {
	name = "UnexpectedNodeError";
	constructor(e$4, r$12, n$8 = "type") {
		super(`Unexpected ${r$12} node ${n$8}: ${JSON.stringify(e$4[n$8])}.`), this.node = e$4;
	}
}, An$3 = Cr$2;
function Pi$2(t$13) {
	return (t$13 == null ? void 0 : t$13.type) === "front-matter";
}
var Pe$4 = Pi$2;
var Ni$2 = new Set([
	"sourceSpan",
	"startSourceSpan",
	"endSourceSpan",
	"nameSpan",
	"valueSpan",
	"keySpan",
	"tagDefinition",
	"tokens",
	"valueTokens",
	"switchValueSourceSpan",
	"expSourceSpan",
	"valueSourceSpan"
]), Ii$2 = new Set([
	"if",
	"else if",
	"for",
	"switch",
	"case"
]);
function Dn$3(t$13, e$4) {
	var r$12;
	if (t$13.type === "text" || t$13.type === "comment" || Pe$4(t$13) || t$13.type === "yaml" || t$13.type === "toml") return null;
	if (t$13.type === "attribute" && delete e$4.value, t$13.type === "docType" && delete e$4.value, t$13.type === "angularControlFlowBlock" && (r$12 = t$13.parameters) != null && r$12.children) for (let n$8 of e$4.parameters.children) Ii$2.has(t$13.name) ? delete n$8.expression : n$8.expression = n$8.expression.trim();
	t$13.type === "angularIcuExpression" && (e$4.switchValue = t$13.switchValue.trim()), t$13.type === "angularLetDeclarationInitializer" && delete e$4.value;
}
Dn$3.ignoredProperties = Ni$2;
var vn$2 = Dn$3;
async function Ri$2(t$13, e$4) {
	if (t$13.language === "yaml") {
		let r$12 = t$13.value.trim(), n$8 = r$12 ? await e$4(r$12, { parser: "yaml" }) : "";
		return gn$4([
			t$13.startDelimiter,
			t$13.explicitLanguage,
			S$2,
			n$8,
			n$8 ? S$2 : "",
			t$13.endDelimiter
		]);
	}
}
var yn$3 = Ri$2;
function he$5(t$13, e$4 = !0) {
	return [k$3([v$2, t$13]), e$4 ? v$2 : ""];
}
function X$4(t$13, e$4) {
	let r$12 = t$13.type === "NGRoot" ? t$13.node.type === "NGMicrosyntax" && t$13.node.body.length === 1 && t$13.node.body[0].type === "NGMicrosyntaxExpression" ? t$13.node.body[0].expression : t$13.node : t$13.type === "JsExpressionRoot" ? t$13.node : t$13;
	return r$12 && (r$12.type === "ObjectExpression" || r$12.type === "ArrayExpression" || (e$4.parser === "__vue_expression" || e$4.parser === "__vue_ts_expression") && (r$12.type === "TemplateLiteral" || r$12.type === "StringLiteral"));
}
async function T$8(t$13, e$4, r$12, n$8) {
	r$12 = {
		__isInHtmlAttribute: !0,
		__embeddedInHtml: !0,
		...r$12
	};
	let s$8 = !0;
	n$8 && (r$12.__onHtmlBindingRoot = (a$13, o$9) => {
		s$8 = n$8(a$13, o$9);
	});
	let i$18 = await e$4(t$13, r$12, e$4);
	return s$8 ? E$1(i$18) : he$5(i$18);
}
function $i$3(t$13, e$4, r$12, n$8) {
	let { node: s$8 } = r$12, i$18 = n$8.originalText.slice(s$8.sourceSpan.start.offset, s$8.sourceSpan.end.offset);
	return /^\s*$/u.test(i$18) ? "" : T$8(i$18, t$13, {
		parser: "__ng_directive",
		__isInHtmlAttribute: !1
	}, X$4);
}
var wn$3 = $i$3;
var Oi$3 = (t$13, e$4) => {
	if (!(t$13 && e$4 == null)) return e$4.toReversed || !Array.isArray(e$4) ? e$4.toReversed() : [...e$4].reverse();
}, bn$4 = Oi$3;
function Mi$2(t$13) {
	return Array.isArray(t$13) && t$13.length > 0;
}
var me$3 = Mi$2;
var Tn$3, xn$1, kn$2, Bn$3, Ln$3, qi$1 = ((Tn$3 = globalThis.Deno) == null ? void 0 : Tn$3.build.os) === "windows" || ((kn$2 = (xn$1 = globalThis.navigator) == null ? void 0 : xn$1.platform) == null ? void 0 : kn$2.startsWith("Win")) || ((Ln$3 = (Bn$3 = globalThis.process) == null ? void 0 : Bn$3.platform) == null ? void 0 : Ln$3.startsWith("win")) || !1;
function Fn$2(t$13) {
	if (t$13 = t$13 instanceof URL ? t$13 : new URL(t$13), t$13.protocol !== "file:") throw new TypeError(`URL must be a file URL: received "${t$13.protocol}"`);
	return t$13;
}
function Hi$3(t$13) {
	return t$13 = Fn$2(t$13), decodeURIComponent(t$13.pathname.replace(/%(?![0-9A-Fa-f]{2})/g, "%25"));
}
function Vi$3(t$13) {
	t$13 = Fn$2(t$13);
	let e$4 = decodeURIComponent(t$13.pathname.replace(/\//g, "\\").replace(/%(?![0-9A-Fa-f]{2})/g, "%25")).replace(/^\\*([A-Za-z]:)(\\|$)/, "$1\\");
	return t$13.hostname !== "" && (e$4 = `\\\\${t$13.hostname}${e$4}`), e$4;
}
function Pn$3(t$13) {
	return qi$1 ? Vi$3(t$13) : Hi$3(t$13);
}
var Nn$4 = Pn$3;
var Ui$2 = (t$13) => String(t$13).split(/[/\\]/u).pop();
function In$3(t$13, e$4) {
	if (!e$4) return;
	let r$12 = Ui$2(e$4).toLowerCase();
	return t$13.find(({ filenames: n$8 }) => n$8 == null ? void 0 : n$8.some((s$8) => s$8.toLowerCase() === r$12)) ?? t$13.find(({ extensions: n$8 }) => n$8 == null ? void 0 : n$8.some((s$8) => r$12.endsWith(s$8)));
}
function Wi$3(t$13, e$4) {
	if (e$4) return t$13.find(({ name: r$12 }) => r$12.toLowerCase() === e$4) ?? t$13.find(({ aliases: r$12 }) => r$12 == null ? void 0 : r$12.includes(e$4)) ?? t$13.find(({ extensions: r$12 }) => r$12 == null ? void 0 : r$12.includes(`.${e$4}`));
}
function Rn$2(t$13, e$4) {
	if (e$4) {
		if (String(e$4).startsWith("file:")) try {
			e$4 = Nn$4(e$4);
		} catch {
			return;
		}
		if (typeof e$4 == "string") return t$13.find(({ isSupported: r$12 }) => r$12 == null ? void 0 : r$12({ filepath: e$4 }));
	}
}
function Gi$3(t$13, e$4) {
	let r$12 = bn$4(!1, t$13.plugins).flatMap((s$8) => s$8.languages ?? []), n$8 = Wi$3(r$12, e$4.language) ?? In$3(r$12, e$4.physicalFile) ?? In$3(r$12, e$4.file) ?? Rn$2(r$12, e$4.physicalFile) ?? Rn$2(r$12, e$4.file) ?? (e$4.physicalFile, void 0);
	return n$8 == null ? void 0 : n$8.parsers[0];
}
var Ne$3 = Gi$3;
var $n$3 = "inline", Sr$3 = {
	area: "none",
	base: "none",
	basefont: "none",
	datalist: "none",
	head: "none",
	link: "none",
	meta: "none",
	noembed: "none",
	noframes: "none",
	param: "block",
	rp: "none",
	script: "block",
	style: "none",
	template: "inline",
	title: "none",
	html: "block",
	body: "block",
	address: "block",
	blockquote: "block",
	center: "block",
	dialog: "block",
	div: "block",
	figure: "block",
	figcaption: "block",
	footer: "block",
	form: "block",
	header: "block",
	hr: "block",
	legend: "block",
	listing: "block",
	main: "block",
	p: "block",
	plaintext: "block",
	pre: "block",
	search: "block",
	xmp: "block",
	slot: "contents",
	ruby: "ruby",
	rt: "ruby-text",
	article: "block",
	aside: "block",
	h1: "block",
	h2: "block",
	h3: "block",
	h4: "block",
	h5: "block",
	h6: "block",
	hgroup: "block",
	nav: "block",
	section: "block",
	dir: "block",
	dd: "block",
	dl: "block",
	dt: "block",
	menu: "block",
	ol: "block",
	ul: "block",
	li: "list-item",
	table: "table",
	caption: "table-caption",
	colgroup: "table-column-group",
	col: "table-column",
	thead: "table-header-group",
	tbody: "table-row-group",
	tfoot: "table-footer-group",
	tr: "table-row",
	td: "table-cell",
	th: "table-cell",
	input: "inline-block",
	button: "inline-block",
	fieldset: "block",
	details: "block",
	summary: "block",
	marquee: "inline-block",
	source: "block",
	track: "block",
	meter: "inline-block",
	progress: "inline-block",
	object: "inline-block",
	video: "inline-block",
	audio: "inline-block",
	select: "inline-block",
	option: "block",
	optgroup: "block"
}, On$3 = "normal", _r$3 = {
	listing: "pre",
	plaintext: "pre",
	pre: "pre",
	xmp: "pre",
	nobr: "nowrap",
	table: "initial",
	textarea: "pre-wrap"
};
function zi$2(t$13) {
	return t$13.type === "element" && !t$13.hasExplicitNamespace && !["html", "svg"].includes(t$13.namespace);
}
var fe$2 = zi$2;
var Yi$3 = (t$13) => w$1(!1, t$13, /^[\t\f\r ]*\n/gu, ""), Er$3 = (t$13) => Yi$3(O$1.trimEnd(t$13)), Mn$2 = (t$13) => {
	let e$4 = t$13, r$12 = O$1.getLeadingWhitespace(e$4);
	r$12 && (e$4 = e$4.slice(r$12.length));
	let n$8 = O$1.getTrailingWhitespace(e$4);
	return n$8 && (e$4 = e$4.slice(0, -n$8.length)), {
		leadingWhitespace: r$12,
		trailingWhitespace: n$8,
		text: e$4
	};
};
function wt$4(t$13, e$4) {
	return !!(t$13.type === "ieConditionalComment" && t$13.lastChild && !t$13.lastChild.isSelfClosing && !t$13.lastChild.endSourceSpan || t$13.type === "ieConditionalComment" && !t$13.complete || de$4(t$13) && t$13.children.some((r$12) => r$12.type !== "text" && r$12.type !== "interpolation") || xt$2(t$13, e$4) && !W$1(t$13, e$4) && t$13.type !== "interpolation");
}
function ge$3(t$13) {
	return t$13.type === "attribute" || !t$13.parent || !t$13.prev ? !1 : ji$3(t$13.prev);
}
function ji$3(t$13) {
	return t$13.type === "comment" && t$13.value.trim() === "prettier-ignore";
}
function $$2(t$13) {
	return t$13.type === "text" || t$13.type === "comment";
}
function W$1(t$13, e$4) {
	return t$13.type === "element" && (t$13.fullName === "script" || t$13.fullName === "style" || t$13.fullName === "svg:style" || t$13.fullName === "svg:script" || t$13.fullName === "mj-style" && e$4.parser === "mjml" || fe$2(t$13) && (t$13.name === "script" || t$13.name === "style"));
}
function qn$3(t$13, e$4) {
	return t$13.children && !W$1(t$13, e$4);
}
function Hn$2(t$13, e$4) {
	return W$1(t$13, e$4) || t$13.type === "interpolation" || Ar$3(t$13);
}
function Ar$3(t$13) {
	return Jn$3(t$13).startsWith("pre");
}
function Vn$3(t$13, e$4) {
	var s$8, i$18;
	let r$12 = n$8();
	if (r$12 && !t$13.prev && (i$18 = (s$8 = t$13.parent) == null ? void 0 : s$8.tagDefinition) != null && i$18.ignoreFirstLf) return t$13.type === "interpolation";
	return r$12;
	function n$8() {
		return Pe$4(t$13) || t$13.type === "angularControlFlowBlock" ? !1 : (t$13.type === "text" || t$13.type === "interpolation") && t$13.prev && (t$13.prev.type === "text" || t$13.prev.type === "interpolation") ? !0 : !t$13.parent || t$13.parent.cssDisplay === "none" ? !1 : de$4(t$13.parent) ? !0 : !(!t$13.prev && (t$13.parent.type === "root" || de$4(t$13) && t$13.parent || W$1(t$13.parent, e$4) || et$3(t$13.parent, e$4) || !ea$1(t$13.parent.cssDisplay)) || t$13.prev && !na$2(t$13.prev.cssDisplay));
	}
}
function Un$4(t$13, e$4) {
	return Pe$4(t$13) || t$13.type === "angularControlFlowBlock" ? !1 : (t$13.type === "text" || t$13.type === "interpolation") && t$13.next && (t$13.next.type === "text" || t$13.next.type === "interpolation") ? !0 : !t$13.parent || t$13.parent.cssDisplay === "none" ? !1 : de$4(t$13.parent) ? !0 : !(!t$13.next && (t$13.parent.type === "root" || de$4(t$13) && t$13.parent || W$1(t$13.parent, e$4) || et$3(t$13.parent, e$4) || !ta$1(t$13.parent.cssDisplay)) || t$13.next && !ra$1(t$13.next.cssDisplay));
}
function Wn$3(t$13, e$4) {
	return sa$1(t$13.cssDisplay) && !W$1(t$13, e$4);
}
function Je$4(t$13) {
	return Pe$4(t$13) || t$13.next && t$13.sourceSpan.end && t$13.sourceSpan.end.line + 1 < t$13.next.sourceSpan.start.line;
}
function Gn$4(t$13) {
	return Dr$3(t$13) || t$13.type === "element" && t$13.children.length > 0 && ([
		"body",
		"script",
		"style"
	].includes(t$13.name) || t$13.children.some((e$4) => Xi$3(e$4))) || t$13.firstChild && t$13.firstChild === t$13.lastChild && t$13.firstChild.type !== "text" && Yn$3(t$13.firstChild) && (!t$13.lastChild.isTrailingSpaceSensitive || jn$3(t$13.lastChild));
}
function Dr$3(t$13) {
	return t$13.type === "element" && t$13.children.length > 0 && ([
		"html",
		"head",
		"ul",
		"ol",
		"select"
	].includes(t$13.name) || t$13.cssDisplay.startsWith("table") && t$13.cssDisplay !== "table-cell");
}
function bt$4(t$13) {
	return Kn$3(t$13) || t$13.prev && Ki$3(t$13.prev) || zn$4(t$13);
}
function Ki$3(t$13) {
	return Kn$3(t$13) || t$13.type === "element" && t$13.fullName === "br" || zn$4(t$13);
}
function zn$4(t$13) {
	return Yn$3(t$13) && jn$3(t$13);
}
function Yn$3(t$13) {
	return t$13.hasLeadingSpaces && (t$13.prev ? t$13.prev.sourceSpan.end.line < t$13.sourceSpan.start.line : t$13.parent.type === "root" || t$13.parent.startSourceSpan.end.line < t$13.sourceSpan.start.line);
}
function jn$3(t$13) {
	return t$13.hasTrailingSpaces && (t$13.next ? t$13.next.sourceSpan.start.line > t$13.sourceSpan.end.line : t$13.parent.type === "root" || t$13.parent.endSourceSpan && t$13.parent.endSourceSpan.start.line > t$13.sourceSpan.end.line);
}
function Kn$3(t$13) {
	switch (t$13.type) {
		case "ieConditionalComment":
		case "comment":
		case "directive": return !0;
		case "element": return ["script", "select"].includes(t$13.name);
	}
	return !1;
}
function Tt$4(t$13) {
	return t$13.lastChild ? Tt$4(t$13.lastChild) : t$13;
}
function Xi$3(t$13) {
	var e$4;
	return (e$4 = t$13.children) == null ? void 0 : e$4.some((r$12) => r$12.type !== "text");
}
function Xn$3(t$13) {
	if (t$13) switch (t$13) {
		case "module":
		case "text/javascript":
		case "text/babel":
		case "text/jsx":
		case "application/javascript": return "babel";
		case "application/x-typescript": return "typescript";
		case "text/markdown": return "markdown";
		case "text/html": return "html";
		case "text/x-handlebars-template": return "glimmer";
		default: if (t$13.endsWith("json") || t$13.endsWith("importmap") || t$13 === "speculationrules") return "json";
	}
}
function Qi$3(t$13, e$4) {
	let { name: r$12, attrMap: n$8 } = t$13;
	if (r$12 !== "script" || Object.prototype.hasOwnProperty.call(n$8, "src")) return;
	let { type: s$8, lang: i$18 } = t$13.attrMap;
	return !i$18 && !s$8 ? "babel" : Ne$3(e$4, { language: i$18 }) ?? Xn$3(s$8);
}
function Ji$2(t$13, e$4) {
	if (!xt$2(t$13, e$4)) return;
	let { attrMap: r$12 } = t$13;
	if (Object.prototype.hasOwnProperty.call(r$12, "src")) return;
	let { type: n$8, lang: s$8 } = r$12;
	return Ne$3(e$4, { language: s$8 }) ?? Xn$3(n$8);
}
function Zi$3(t$13, e$4) {
	if (t$13.name === "style") {
		let { lang: r$12 } = t$13.attrMap;
		return r$12 ? Ne$3(e$4, { language: r$12 }) : "css";
	}
	if (t$13.name === "mj-style" && e$4.parser === "mjml") return "css";
}
function vr$2(t$13, e$4) {
	return Qi$3(t$13, e$4) ?? Zi$3(t$13, e$4) ?? Ji$2(t$13, e$4);
}
function Ze$4(t$13) {
	return t$13 === "block" || t$13 === "list-item" || t$13.startsWith("table");
}
function ea$1(t$13) {
	return !Ze$4(t$13) && t$13 !== "inline-block";
}
function ta$1(t$13) {
	return !Ze$4(t$13) && t$13 !== "inline-block";
}
function ra$1(t$13) {
	return !Ze$4(t$13);
}
function na$2(t$13) {
	return !Ze$4(t$13);
}
function sa$1(t$13) {
	return !Ze$4(t$13) && t$13 !== "inline-block";
}
function de$4(t$13) {
	return Jn$3(t$13).startsWith("pre");
}
function ia$1(t$13, e$4) {
	let r$12 = t$13;
	for (; r$12;) {
		if (e$4(r$12)) return !0;
		r$12 = r$12.parent;
	}
	return !1;
}
function Qn$3(t$13, e$4) {
	var n$8;
	if (Ce$4(t$13, e$4)) return "block";
	if (((n$8 = t$13.prev) == null ? void 0 : n$8.type) === "comment") {
		let s$8 = t$13.prev.value.match(/^\s*display:\s*([a-z]+)\s*$/u);
		if (s$8) return s$8[1];
	}
	let r$12 = !1;
	if (t$13.type === "element" && t$13.namespace === "svg") if (ia$1(t$13, (s$8) => s$8.fullName === "svg:foreignObject")) r$12 = !0;
	else return t$13.name === "svg" ? "inline-block" : "block";
	switch (e$4.htmlWhitespaceSensitivity) {
		case "strict": return "inline";
		case "ignore": return "block";
		default: if (t$13.type === "element" && (!t$13.namespace || r$12 || fe$2(t$13)) && Object.prototype.hasOwnProperty.call(Sr$3, t$13.name)) return Sr$3[t$13.name];
	}
	return $n$3;
}
function Jn$3(t$13) {
	return t$13.type === "element" && (!t$13.namespace || fe$2(t$13)) && Object.prototype.hasOwnProperty.call(_r$3, t$13.name) ? _r$3[t$13.name] : On$3;
}
function aa$2(t$13) {
	let e$4 = Number.POSITIVE_INFINITY;
	for (let r$12 of t$13.split(`
`)) {
		if (r$12.length === 0) continue;
		let n$8 = O$1.getLeadingWhitespaceCount(r$12);
		if (n$8 === 0) return 0;
		r$12.length !== n$8 && n$8 < e$4 && (e$4 = n$8);
	}
	return e$4 === Number.POSITIVE_INFINITY ? 0 : e$4;
}
function yr$2(t$13, e$4 = aa$2(t$13)) {
	return e$4 === 0 ? t$13 : t$13.split(`
`).map((r$12) => r$12.slice(e$4)).join(`
`);
}
function wr$2(t$13) {
	return w$1(!1, w$1(!1, t$13, "&apos;", "'"), "&quot;", "\"");
}
function P$3(t$13) {
	return wr$2(t$13.value);
}
var oa$1 = new Set([
	"template",
	"style",
	"script"
]);
function et$3(t$13, e$4) {
	return Ce$4(t$13, e$4) && !oa$1.has(t$13.fullName);
}
function Ce$4(t$13, e$4) {
	return e$4.parser === "vue" && t$13.type === "element" && t$13.parent.type === "root" && t$13.fullName.toLowerCase() !== "html";
}
function xt$2(t$13, e$4) {
	return Ce$4(t$13, e$4) && (et$3(t$13, e$4) || t$13.attrMap.lang && t$13.attrMap.lang !== "html");
}
function Zn$3(t$13) {
	let e$4 = t$13.fullName;
	return e$4.charAt(0) === "#" || e$4 === "slot-scope" || e$4 === "v-slot" || e$4.startsWith("v-slot:");
}
function es$1(t$13, e$4) {
	let r$12 = t$13.parent;
	if (!Ce$4(r$12, e$4)) return !1;
	let n$8 = r$12.fullName, s$8 = t$13.fullName;
	return n$8 === "script" && s$8 === "setup" || n$8 === "style" && s$8 === "vars";
}
function kt$3(t$13, e$4 = t$13.value) {
	return t$13.parent.isWhitespaceSensitive ? t$13.parent.isIndentationSensitive ? B$3(e$4) : B$3(yr$2(Er$3(e$4)), S$2) : H$4(_$1, O$1.split(e$4));
}
function Bt$3(t$13, e$4) {
	return Ce$4(t$13, e$4) && t$13.name === "script";
}
var br$2 = /\{\{(.+?)\}\}/su;
async function ts$1(t$13, e$4) {
	let r$12 = [];
	for (let [n$8, s$8] of t$13.split(br$2).entries()) if (n$8 % 2 === 0) r$12.push(B$3(s$8));
	else try {
		r$12.push(E$1([
			"{{",
			k$3([_$1, await T$8(s$8, e$4, {
				parser: "__ng_interpolation",
				__isInHtmlInterpolation: !0
			})]),
			_$1,
			"}}"
		]));
	} catch {
		r$12.push("{{", B$3(s$8), "}}");
	}
	return r$12;
}
function Tr$3({ parser: t$13 }) {
	return (e$4, r$12, n$8) => T$8(P$3(n$8.node), e$4, { parser: t$13 }, X$4);
}
var ua = Tr$3({ parser: "__ng_action" }), la$1 = Tr$3({ parser: "__ng_binding" }), ca$1 = Tr$3({ parser: "__ng_directive" });
function pa(t$13, e$4) {
	if (e$4.parser !== "angular") return;
	let { node: r$12 } = t$13, n$8 = r$12.fullName;
	if (n$8.startsWith("(") && n$8.endsWith(")") || n$8.startsWith("on-")) return ua;
	if (n$8.startsWith("[") && n$8.endsWith("]") || /^bind(?:on)?-/u.test(n$8) || /^ng-(?:if|show|hide|class|style)$/u.test(n$8)) return la$1;
	if (n$8.startsWith("*")) return ca$1;
	let s$8 = P$3(r$12);
	if (/^i18n(?:-.+)?$/u.test(n$8)) return () => he$5(vt$3(kt$3(r$12, s$8.trim())), !s$8.includes("@@"));
	if (br$2.test(s$8)) return (i$18) => ts$1(s$8, i$18);
}
var rs$1 = pa;
function ha$2(t$13, e$4) {
	let { node: r$12 } = t$13, n$8 = P$3(r$12);
	if (r$12.fullName === "class" && !e$4.parentParser && !n$8.includes("{{")) return () => n$8.trim().split(/\s+/u).join(" ");
}
var ns$3 = ha$2;
function ss$1(t$13) {
	return t$13 === "	" || t$13 === `
` || t$13 === "\f" || t$13 === "\r" || t$13 === " ";
}
var ma = /^[ \t\n\r\u000c]+/, fa$2 = /^[, \t\n\r\u000c]+/, da$1 = /^[^ \t\n\r\u000c]+/, ga = /[,]+$/, is = /^\d+$/, Ca = /^-?(?:[0-9]+|[0-9]*\.[0-9]+)(?:[eE][+-]?[0-9]+)?$/;
function Sa$1(t$13) {
	let e$4 = t$13.length, r$12, n$8, s$8, i$18, a$13, o$9 = 0, u$14;
	function p$2(C$3) {
		let A$3, D$4 = C$3.exec(t$13.substring(o$9));
		if (D$4) return [A$3] = D$4, o$9 += A$3.length, A$3;
	}
	let l$10 = [];
	for (;;) {
		if (p$2(fa$2), o$9 >= e$4) {
			if (l$10.length === 0) throw new Error("Must contain one or more image candidate strings.");
			return l$10;
		}
		u$14 = o$9, r$12 = p$2(da$1), n$8 = [], r$12.slice(-1) === "," ? (r$12 = r$12.replace(ga, ""), f$3()) : m$11();
	}
	function m$11() {
		for (p$2(ma), s$8 = "", i$18 = "in descriptor";;) {
			if (a$13 = t$13.charAt(o$9), i$18 === "in descriptor") if (ss$1(a$13)) s$8 && (n$8.push(s$8), s$8 = "", i$18 = "after descriptor");
			else if (a$13 === ",") {
				o$9 += 1, s$8 && n$8.push(s$8), f$3();
				return;
			} else if (a$13 === "(") s$8 += a$13, i$18 = "in parens";
			else if (a$13 === "") {
				s$8 && n$8.push(s$8), f$3();
				return;
			} else s$8 += a$13;
			else if (i$18 === "in parens") if (a$13 === ")") s$8 += a$13, i$18 = "in descriptor";
			else if (a$13 === "") {
				n$8.push(s$8), f$3();
				return;
			} else s$8 += a$13;
			else if (i$18 === "after descriptor" && !ss$1(a$13)) if (a$13 === "") {
				f$3();
				return;
			} else i$18 = "in descriptor", o$9 -= 1;
			o$9 += 1;
		}
	}
	function f$3() {
		let C$3 = !1, A$3, D$4, I$2, F$4, c$3 = {}, g$2, y$7, q$3, x$3, U$4;
		for (F$4 = 0; F$4 < n$8.length; F$4++) g$2 = n$8[F$4], y$7 = g$2[g$2.length - 1], q$3 = g$2.substring(0, g$2.length - 1), x$3 = parseInt(q$3, 10), U$4 = parseFloat(q$3), is.test(q$3) && y$7 === "w" ? ((A$3 || D$4) && (C$3 = !0), x$3 === 0 ? C$3 = !0 : A$3 = x$3) : Ca.test(q$3) && y$7 === "x" ? ((A$3 || D$4 || I$2) && (C$3 = !0), U$4 < 0 ? C$3 = !0 : D$4 = U$4) : is.test(q$3) && y$7 === "h" ? ((I$2 || D$4) && (C$3 = !0), x$3 === 0 ? C$3 = !0 : I$2 = x$3) : C$3 = !0;
		if (!C$3) c$3.source = {
			value: r$12,
			startOffset: u$14
		}, A$3 && (c$3.width = { value: A$3 }), D$4 && (c$3.density = { value: D$4 }), I$2 && (c$3.height = { value: I$2 }), l$10.push(c$3);
		else throw new Error(`Invalid srcset descriptor found in "${t$13}" at "${g$2}".`);
	}
}
var as = Sa$1;
function _a$1(t$13) {
	if (t$13.node.fullName === "srcset" && (t$13.parent.fullName === "img" || t$13.parent.fullName === "source")) return () => Aa$1(P$3(t$13.node));
}
var os$2 = {
	width: "w",
	height: "h",
	density: "x"
}, Ea$1 = Object.keys(os$2);
function Aa$1(t$13) {
	let e$4 = as(t$13), r$12 = Ea$1.filter((l$10) => e$4.some((m$11) => Object.prototype.hasOwnProperty.call(m$11, l$10)));
	if (r$12.length > 1) throw new Error("Mixed descriptor in srcset is not supported");
	let [n$8] = r$12, s$8 = os$2[n$8], i$18 = e$4.map((l$10) => l$10.source.value), a$13 = Math.max(...i$18.map((l$10) => l$10.length)), o$9 = e$4.map((l$10) => l$10[n$8] ? String(l$10[n$8].value) : ""), u$14 = o$9.map((l$10) => {
		let m$11 = l$10.indexOf(".");
		return m$11 === -1 ? l$10.length : m$11;
	}), p$2 = Math.max(...u$14);
	return he$5(H$4([",", _$1], i$18.map((l$10, m$11) => {
		let f$3 = [l$10], C$3 = o$9[m$11];
		if (C$3) {
			let A$3 = a$13 - l$10.length + 1, D$4 = p$2 - u$14[m$11], I$2 = " ".repeat(A$3 + D$4);
			f$3.push(pe$4(I$2, " "), C$3 + s$8);
		}
		return f$3;
	})));
}
var us = _a$1;
function ls(t$13, e$4) {
	let { node: r$12 } = t$13, n$8 = P$3(t$13.node).trim();
	if (r$12.fullName === "style" && !e$4.parentParser && !n$8.includes("{{")) return async (s$8) => he$5(await s$8(n$8, {
		parser: "css",
		__isHTMLStyleAttribute: !0
	}));
}
var xr$2 = /* @__PURE__ */ new WeakMap();
function Da(t$13, e$4) {
	let { root: r$12 } = t$13;
	return xr$2.has(r$12) || xr$2.set(r$12, r$12.children.some((n$8) => Bt$3(n$8, e$4) && ["ts", "typescript"].includes(n$8.attrMap.lang))), xr$2.get(r$12);
}
var Ie$5 = Da;
function cs(t$13, e$4, r$12) {
	let { node: n$8 } = r$12, s$8 = P$3(n$8);
	return T$8(`type T<${s$8}> = any`, t$13, {
		parser: "babel-ts",
		__isEmbeddedTypescriptGenericParameters: !0
	}, X$4);
}
function ps$1(t$13, e$4, { parseWithTs: r$12 }) {
	return T$8(`function _(${t$13}) {}`, e$4, {
		parser: r$12 ? "babel-ts" : "babel",
		__isVueBindings: !0
	});
}
async function hs$1(t$13, e$4, r$12, n$8) {
	let s$8 = P$3(r$12.node), { left: i$18, operator: a$13, right: o$9 } = va$1(s$8), u$14 = Ie$5(r$12, n$8);
	return [
		E$1(await T$8(`function _(${i$18}) {}`, t$13, {
			parser: u$14 ? "babel-ts" : "babel",
			__isVueForBindingLeft: !0
		})),
		" ",
		a$13,
		" ",
		await T$8(o$9, t$13, { parser: u$14 ? "__ts_expression" : "__js_expression" })
	];
}
function va$1(t$13) {
	let e$4 = /(.*?)\s+(in|of)\s+(.*)/su, r$12 = /,([^,\]}]*)(?:,([^,\]}]*))?$/u, n$8 = /^\(|\)$/gu, s$8 = t$13.match(e$4);
	if (!s$8) return;
	let i$18 = {};
	if (i$18.for = s$8[3].trim(), !i$18.for) return;
	let a$13 = w$1(!1, s$8[1].trim(), n$8, ""), o$9 = a$13.match(r$12);
	o$9 ? (i$18.alias = a$13.replace(r$12, ""), i$18.iterator1 = o$9[1].trim(), o$9[2] && (i$18.iterator2 = o$9[2].trim())) : i$18.alias = a$13;
	let u$14 = [
		i$18.alias,
		i$18.iterator1,
		i$18.iterator2
	];
	if (!u$14.some((p$2, l$10) => !p$2 && (l$10 === 0 || u$14.slice(l$10 + 1).some(Boolean)))) return {
		left: u$14.filter(Boolean).join(","),
		operator: s$8[2],
		right: i$18.for
	};
}
function ya(t$13, e$4) {
	if (e$4.parser !== "vue") return;
	let { node: r$12 } = t$13, n$8 = r$12.fullName;
	if (n$8 === "v-for") return hs$1;
	if (n$8 === "generic" && Bt$3(r$12.parent, e$4)) return cs;
	let s$8 = P$3(r$12), i$18 = Ie$5(t$13, e$4);
	if (Zn$3(r$12) || es$1(r$12, e$4)) return (a$13) => ps$1(s$8, a$13, { parseWithTs: i$18 });
	if (n$8.startsWith("@") || n$8.startsWith("v-on:")) return (a$13) => wa(s$8, a$13, { parseWithTs: i$18 });
	if (n$8.startsWith(":") || n$8.startsWith(".") || n$8.startsWith("v-bind:")) return (a$13) => ba$1(s$8, a$13, { parseWithTs: i$18 });
	if (n$8.startsWith("v-")) return (a$13) => ms(s$8, a$13, { parseWithTs: i$18 });
}
async function wa(t$13, e$4, { parseWithTs: r$12 }) {
	var n$8;
	try {
		return await ms(t$13, e$4, { parseWithTs: r$12 });
	} catch (s$8) {
		if (((n$8 = s$8.cause) == null ? void 0 : n$8.code) !== "BABEL_PARSER_SYNTAX_ERROR") throw s$8;
	}
	return T$8(t$13, e$4, { parser: r$12 ? "__vue_ts_event_binding" : "__vue_event_binding" }, X$4);
}
function ba$1(t$13, e$4, { parseWithTs: r$12 }) {
	return T$8(t$13, e$4, { parser: r$12 ? "__vue_ts_expression" : "__vue_expression" }, X$4);
}
function ms(t$13, e$4, { parseWithTs: r$12 }) {
	return T$8(t$13, e$4, { parser: r$12 ? "__ts_expression" : "__js_expression" }, X$4);
}
var fs$1 = ya;
function Ta(t$13, e$4) {
	let { node: r$12 } = t$13;
	if (r$12.value) {
		if (/^PRETTIER_HTML_PLACEHOLDER_\d+_\d+_IN_JS$/u.test(e$4.originalText.slice(r$12.valueSpan.start.offset, r$12.valueSpan.end.offset)) || e$4.parser === "lwc" && r$12.value.startsWith("{") && r$12.value.endsWith("}")) return [
			r$12.rawName,
			"=",
			r$12.value
		];
		for (let n$8 of [
			us,
			ls,
			ns$3,
			fs$1,
			rs$1
		]) {
			let s$8 = n$8(t$13, e$4);
			if (s$8) return xa$2(s$8);
		}
	}
}
function xa$2(t$13) {
	return async (e$4, r$12, n$8, s$8) => {
		let i$18 = await t$13(e$4, r$12, n$8, s$8);
		if (i$18) return i$18 = hr$2(i$18, (a$13) => typeof a$13 == "string" ? w$1(!1, a$13, "\"", "&quot;") : a$13), [
			n$8.node.rawName,
			"=\"",
			E$1(i$18),
			"\""
		];
	};
}
var ds = Ta;
var ka$1 = new Proxy(() => {}, { get: () => ka$1 });
function J$3(t$13) {
	return t$13.sourceSpan.start.offset;
}
function se$2(t$13) {
	return t$13.sourceSpan.end.offset;
}
function tt$3(t$13, e$4) {
	return [t$13.isSelfClosing ? "" : Ba$1(t$13, e$4), Se$3(t$13, e$4)];
}
function Ba$1(t$13, e$4) {
	return t$13.lastChild && Ae$4(t$13.lastChild) ? "" : [La$2(t$13, e$4), Lt$3(t$13, e$4)];
}
function Se$3(t$13, e$4) {
	return (t$13.next ? Q$2(t$13.next) : Ee$2(t$13.parent)) ? "" : [_e$4(t$13, e$4), G$3(t$13, e$4)];
}
function La$2(t$13, e$4) {
	return Ee$2(t$13) ? _e$4(t$13.lastChild, e$4) : "";
}
function G$3(t$13, e$4) {
	return Ae$4(t$13) ? Lt$3(t$13.parent, e$4) : rt$3(t$13) ? Ft$2(t$13.next, e$4) : "";
}
function Lt$3(t$13, e$4) {
	if (Cs(t$13, e$4)) return "";
	switch (t$13.type) {
		case "ieConditionalComment": return "<!";
		case "element": if (t$13.hasHtmComponentClosingTag) return "<//";
		default: return `</${t$13.rawName}`;
	}
}
function _e$4(t$13, e$4) {
	if (Cs(t$13, e$4)) return "";
	switch (t$13.type) {
		case "ieConditionalComment":
		case "ieConditionalEndComment": return "[endif]-->";
		case "ieConditionalStartComment": return "]><!-->";
		case "interpolation": return "}}";
		case "angularIcuExpression": return "}";
		case "element": if (t$13.isSelfClosing) return "/>";
		default: return ">";
	}
}
function Cs(t$13, e$4) {
	return !t$13.isSelfClosing && !t$13.endSourceSpan && (ge$3(t$13) || wt$4(t$13.parent, e$4));
}
function Q$2(t$13) {
	return t$13.prev && t$13.prev.type !== "docType" && t$13.type !== "angularControlFlowBlock" && !$$2(t$13.prev) && t$13.isLeadingSpaceSensitive && !t$13.hasLeadingSpaces;
}
function Ee$2(t$13) {
	var e$4;
	return ((e$4 = t$13.lastChild) == null ? void 0 : e$4.isTrailingSpaceSensitive) && !t$13.lastChild.hasTrailingSpaces && !$$2(Tt$4(t$13.lastChild)) && !de$4(t$13);
}
function Ae$4(t$13) {
	return !t$13.next && !t$13.hasTrailingSpaces && t$13.isTrailingSpaceSensitive && $$2(Tt$4(t$13));
}
function rt$3(t$13) {
	return t$13.next && !$$2(t$13.next) && $$2(t$13) && t$13.isTrailingSpaceSensitive && !t$13.hasTrailingSpaces;
}
function Fa$3(t$13) {
	let e$4 = t$13.trim().match(/^prettier-ignore-attribute(?:\s+(.+))?$/su);
	return e$4 ? e$4[1] ? e$4[1].split(/\s+/u) : !0 : !1;
}
function nt$3(t$13) {
	return !t$13.prev && t$13.isLeadingSpaceSensitive && !t$13.hasLeadingSpaces;
}
function Pa(t$13, e$4, r$12) {
	var m$11;
	let { node: n$8 } = t$13;
	if (!me$3(n$8.attrs)) return n$8.isSelfClosing ? " " : "";
	let s$8 = ((m$11 = n$8.prev) == null ? void 0 : m$11.type) === "comment" && Fa$3(n$8.prev.value), i$18 = typeof s$8 == "boolean" ? () => s$8 : Array.isArray(s$8) ? (f$3) => s$8.includes(f$3.rawName) : () => !1, a$13 = t$13.map(({ node: f$3 }) => i$18(f$3) ? B$3(e$4.originalText.slice(J$3(f$3), se$2(f$3))) : r$12(), "attrs"), o$9 = n$8.type === "element" && n$8.fullName === "script" && n$8.attrs.length === 1 && n$8.attrs[0].fullName === "src" && n$8.children.length === 0, p$2 = e$4.singleAttributePerLine && n$8.attrs.length > 1 && !Ce$4(n$8, e$4) ? S$2 : _$1, l$10 = [k$3([o$9 ? " " : _$1, H$4(p$2, a$13)])];
	return n$8.firstChild && nt$3(n$8.firstChild) || n$8.isSelfClosing && Ee$2(n$8.parent) || o$9 ? l$10.push(n$8.isSelfClosing ? " " : "") : l$10.push(e$4.bracketSameLine ? n$8.isSelfClosing ? " " : "" : n$8.isSelfClosing ? _$1 : v$2), l$10;
}
function Na$1(t$13) {
	return t$13.firstChild && nt$3(t$13.firstChild) ? "" : Pt$3(t$13);
}
function st$3(t$13, e$4, r$12) {
	let { node: n$8 } = t$13;
	return [
		De$4(n$8, e$4),
		Pa(t$13, e$4, r$12),
		n$8.isSelfClosing ? "" : Na$1(n$8)
	];
}
function De$4(t$13, e$4) {
	return t$13.prev && rt$3(t$13.prev) ? "" : [z$3(t$13, e$4), Ft$2(t$13, e$4)];
}
function z$3(t$13, e$4) {
	return nt$3(t$13) ? Pt$3(t$13.parent) : Q$2(t$13) ? _e$4(t$13.prev, e$4) : "";
}
var gs$1 = "<!doctype";
function Ft$2(t$13, e$4) {
	switch (t$13.type) {
		case "ieConditionalComment":
		case "ieConditionalStartComment": return `<!--[if ${t$13.condition}`;
		case "ieConditionalEndComment": return "<!--<!";
		case "interpolation": return "{{";
		case "docType": {
			if (t$13.value === "html") {
				let { filepath: n$8 } = e$4;
				if (n$8 && /\.html?$/u.test(n$8)) return gs$1;
			}
			let r$12 = J$3(t$13);
			return e$4.originalText.slice(r$12, r$12 + gs$1.length);
		}
		case "angularIcuExpression": return "{";
		case "element": if (t$13.condition) return `<!--[if ${t$13.condition}]><!--><${t$13.rawName}`;
		default: return `<${t$13.rawName}`;
	}
}
function Pt$3(t$13) {
	switch (t$13.type) {
		case "ieConditionalComment": return "]>";
		case "element": if (t$13.condition) return "><!--<![endif]-->";
		default: return ">";
	}
}
function Ia(t$13, e$4) {
	if (!t$13.endSourceSpan) return "";
	let r$12 = t$13.startSourceSpan.end.offset;
	t$13.firstChild && nt$3(t$13.firstChild) && (r$12 -= Pt$3(t$13).length);
	let n$8 = t$13.endSourceSpan.start.offset;
	return t$13.lastChild && Ae$4(t$13.lastChild) ? n$8 += Lt$3(t$13, e$4).length : Ee$2(t$13) && (n$8 -= _e$4(t$13.lastChild, e$4).length), e$4.originalText.slice(r$12, n$8);
}
var Nt$3 = Ia;
var Ra$3 = new Set([
	"if",
	"else if",
	"for",
	"switch",
	"case"
]);
function $a$2(t$13, e$4) {
	let { node: r$12 } = t$13;
	switch (r$12.type) {
		case "element":
			if (W$1(r$12, e$4) || r$12.type === "interpolation") return;
			if (!r$12.isSelfClosing && xt$2(r$12, e$4)) {
				let n$8 = vr$2(r$12, e$4);
				return n$8 ? async (s$8, i$18) => {
					let a$13 = Nt$3(r$12, e$4), o$9 = /^\s*$/u.test(a$13), u$14 = "";
					return o$9 || (u$14 = await s$8(Er$3(a$13), {
						parser: n$8,
						__embeddedInHtml: !0
					}), o$9 = u$14 === ""), [
						z$3(r$12, e$4),
						E$1(st$3(t$13, e$4, i$18)),
						o$9 ? "" : S$2,
						u$14,
						o$9 ? "" : S$2,
						tt$3(r$12, e$4),
						G$3(r$12, e$4)
					];
				} : void 0;
			}
			break;
		case "text":
			if (W$1(r$12.parent, e$4)) {
				let n$8 = vr$2(r$12.parent, e$4);
				if (n$8) return async (s$8) => {
					let i$18 = n$8 === "markdown" ? yr$2(r$12.value.replace(/^[^\S\n]*\n/u, "")) : r$12.value, a$13 = {
						parser: n$8,
						__embeddedInHtml: !0
					};
					if (e$4.parser === "html" && n$8 === "babel") {
						let o$9 = "script", { attrMap: u$14 } = r$12.parent;
						u$14 && (u$14.type === "module" || (u$14.type === "text/babel" || u$14.type === "text/jsx") && u$14["data-type"] === "module") && (o$9 = "module"), a$13.__babelSourceType = o$9;
					}
					return [
						ne$4,
						z$3(r$12, e$4),
						await s$8(i$18, a$13),
						G$3(r$12, e$4)
					];
				};
			} else if (r$12.parent.type === "interpolation") return async (n$8) => {
				let s$8 = {
					__isInHtmlInterpolation: !0,
					__embeddedInHtml: !0
				};
				return e$4.parser === "angular" ? s$8.parser = "__ng_interpolation" : e$4.parser === "vue" ? s$8.parser = Ie$5(t$13, e$4) ? "__vue_ts_expression" : "__vue_expression" : s$8.parser = "__js_expression", [k$3([_$1, await n$8(r$12.value, s$8)]), r$12.parent.next && Q$2(r$12.parent.next) ? " " : _$1];
			};
			break;
		case "attribute": return ds(t$13, e$4);
		case "front-matter": return (n$8) => yn$3(r$12, n$8);
		case "angularControlFlowBlockParameters": return Ra$3.has(t$13.parent.name) ? wn$3 : void 0;
		case "angularLetDeclarationInitializer": return (n$8) => T$8(r$12.value, n$8, {
			parser: "__ng_binding",
			__isInHtmlAttribute: !1
		});
	}
}
var Ss = $a$2;
var it$4 = null;
function at$2(t$13) {
	if (it$4 !== null && typeof it$4.property) {
		let e$4 = it$4;
		return it$4 = at$2.prototype = null, e$4;
	}
	return it$4 = at$2.prototype = t$13 ?? Object.create(null), new at$2();
}
var Oa = 10;
for (let t$13 = 0; t$13 <= Oa; t$13++) at$2();
function kr$3(t$13) {
	return at$2(t$13);
}
function Ma$2(t$13, e$4 = "type") {
	kr$3(t$13);
	function r$12(n$8) {
		let s$8 = n$8[e$4], i$18 = t$13[s$8];
		if (!Array.isArray(i$18)) throw Object.assign(/* @__PURE__ */ new Error(`Missing visitor keys for '${s$8}'.`), { node: n$8 });
		return i$18;
	}
	return r$12;
}
var Ha$3 = Ma$2({
	"front-matter": [],
	root: ["children"],
	element: ["attrs", "children"],
	ieConditionalComment: ["children"],
	ieConditionalStartComment: [],
	ieConditionalEndComment: [],
	interpolation: ["children"],
	text: ["children"],
	docType: [],
	comment: [],
	attribute: [],
	cdata: [],
	angularControlFlowBlock: ["children", "parameters"],
	angularControlFlowBlockParameters: ["children"],
	angularControlFlowBlockParameter: [],
	angularLetDeclaration: ["init"],
	angularLetDeclarationInitializer: [],
	angularIcuExpression: ["cases"],
	angularIcuCase: ["expression"]
}), As = Ha$3;
var Ds = "format";
var vs = /^\s*<!--\s*@(?:noformat|noprettier)\s*-->/u, ys = /^\s*<!--\s*@(?:format|prettier)\s*-->/u;
function ws(t$13) {
	return ys.test(t$13);
}
function bs$2(t$13) {
	return vs.test(t$13);
}
function Ts$1(t$13) {
	return `<!-- @${Ds} -->

${t$13}`;
}
var xs$1 = new Map([
	["if", new Set(["else if", "else"])],
	["else if", new Set(["else if", "else"])],
	["for", new Set(["empty"])],
	["defer", new Set([
		"placeholder",
		"error",
		"loading"
	])],
	["placeholder", new Set([
		"placeholder",
		"error",
		"loading"
	])],
	["error", new Set([
		"placeholder",
		"error",
		"loading"
	])],
	["loading", new Set([
		"placeholder",
		"error",
		"loading"
	])]
]);
function ks$1(t$13) {
	let e$4 = se$2(t$13);
	return t$13.type === "element" && !t$13.endSourceSpan && me$3(t$13.children) ? Math.max(e$4, ks$1(K$3(!1, t$13.children, -1))) : e$4;
}
function ot$4(t$13, e$4, r$12) {
	let n$8 = t$13.node;
	if (ge$3(n$8)) {
		let s$8 = ks$1(n$8);
		return [
			z$3(n$8, e$4),
			B$3(O$1.trimEnd(e$4.originalText.slice(J$3(n$8) + (n$8.prev && rt$3(n$8.prev) ? Ft$2(n$8).length : 0), s$8 - (n$8.next && Q$2(n$8.next) ? _e$4(n$8, e$4).length : 0)))),
			G$3(n$8, e$4)
		];
	}
	return r$12();
}
function It$4(t$13, e$4) {
	return $$2(t$13) && $$2(e$4) ? t$13.isTrailingSpaceSensitive ? t$13.hasTrailingSpaces ? bt$4(e$4) ? S$2 : _$1 : "" : bt$4(e$4) ? S$2 : v$2 : rt$3(t$13) && (ge$3(e$4) || e$4.firstChild || e$4.isSelfClosing || e$4.type === "element" && e$4.attrs.length > 0) || t$13.type === "element" && t$13.isSelfClosing && Q$2(e$4) ? "" : !e$4.isLeadingSpaceSensitive || bt$4(e$4) || Q$2(e$4) && t$13.lastChild && Ae$4(t$13.lastChild) && t$13.lastChild.lastChild && Ae$4(t$13.lastChild.lastChild) ? S$2 : e$4.hasLeadingSpaces ? _$1 : v$2;
}
function Re$4(t$13, e$4, r$12) {
	let { node: n$8 } = t$13;
	if (Dr$3(n$8)) return [ne$4, ...t$13.map((i$18) => {
		let a$13 = i$18.node, o$9 = a$13.prev ? It$4(a$13.prev, a$13) : "";
		return [o$9 ? [o$9, Je$4(a$13.prev) ? S$2 : ""] : "", ot$4(i$18, e$4, r$12)];
	}, "children")];
	let s$8 = n$8.children.map(() => Symbol(""));
	return t$13.map((i$18, a$13) => {
		let o$9 = i$18.node;
		if ($$2(o$9)) {
			if (o$9.prev && $$2(o$9.prev)) {
				let A$3 = It$4(o$9.prev, o$9);
				if (A$3) return Je$4(o$9.prev) ? [
					S$2,
					S$2,
					ot$4(i$18, e$4, r$12)
				] : [A$3, ot$4(i$18, e$4, r$12)];
			}
			return ot$4(i$18, e$4, r$12);
		}
		let u$14 = [], p$2 = [], l$10 = [], m$11 = [], f$3 = o$9.prev ? It$4(o$9.prev, o$9) : "", C$3 = o$9.next ? It$4(o$9, o$9.next) : "";
		return f$3 && (Je$4(o$9.prev) ? u$14.push(S$2, S$2) : f$3 === S$2 ? u$14.push(S$2) : $$2(o$9.prev) ? p$2.push(f$3) : p$2.push(pe$4("", v$2, { groupId: s$8[a$13 - 1] }))), C$3 && (Je$4(o$9) ? $$2(o$9.next) && m$11.push(S$2, S$2) : C$3 === S$2 ? $$2(o$9.next) && m$11.push(S$2) : l$10.push(C$3)), [
			...u$14,
			E$1([...p$2, E$1([ot$4(i$18, e$4, r$12), ...l$10], { id: s$8[a$13] })]),
			...m$11
		];
	}, "children");
}
function Bs$2(t$13, e$4, r$12) {
	let { node: n$8 } = t$13, s$8 = [];
	Va$3(t$13) && s$8.push("} "), s$8.push("@", n$8.name), n$8.parameters && s$8.push(" (", E$1(r$12("parameters")), ")"), s$8.push(" {");
	let i$18 = Ls$1(n$8);
	return n$8.children.length > 0 ? (n$8.firstChild.hasLeadingSpaces = !0, n$8.lastChild.hasTrailingSpaces = !0, s$8.push(k$3([S$2, Re$4(t$13, e$4, r$12)])), i$18 && s$8.push(S$2, "}")) : i$18 && s$8.push("}"), E$1(s$8, { shouldBreak: !0 });
}
function Ls$1(t$13) {
	var e$4, r$12;
	return !(((e$4 = t$13.next) == null ? void 0 : e$4.type) === "angularControlFlowBlock" && (r$12 = xs$1.get(t$13.name)) != null && r$12.has(t$13.next.name));
}
function Va$3(t$13) {
	let { previous: e$4 } = t$13;
	return (e$4 == null ? void 0 : e$4.type) === "angularControlFlowBlock" && !ge$3(e$4) && !Ls$1(e$4);
}
function Fs$2(t$13, e$4, r$12) {
	return [k$3([v$2, H$4([";", _$1], t$13.map(r$12, "children"))]), v$2];
}
function Ps$2(t$13, e$4, r$12) {
	let { node: n$8 } = t$13;
	return [
		De$4(n$8, e$4),
		E$1([
			n$8.switchValue.trim(),
			", ",
			n$8.clause,
			n$8.cases.length > 0 ? [",", k$3([_$1, H$4(_$1, t$13.map(r$12, "cases"))])] : "",
			v$2
		]),
		Se$3(n$8, e$4)
	];
}
function Ns(t$13, e$4, r$12) {
	let { node: n$8 } = t$13;
	return [
		n$8.value,
		" {",
		E$1([k$3([v$2, t$13.map(({ node: s$8, isLast: i$18 }) => {
			let a$13 = [r$12()];
			return s$8.type === "text" && (s$8.hasLeadingSpaces && a$13.unshift(_$1), s$8.hasTrailingSpaces && !i$18 && a$13.push(_$1)), a$13;
		}, "expression")]), v$2]),
		"}"
	];
}
function Is$1(t$13, e$4, r$12) {
	let { node: n$8 } = t$13;
	if (wt$4(n$8, e$4)) return [
		z$3(n$8, e$4),
		E$1(st$3(t$13, e$4, r$12)),
		B$3(Nt$3(n$8, e$4)),
		...tt$3(n$8, e$4),
		G$3(n$8, e$4)
	];
	let s$8 = n$8.children.length === 1 && (n$8.firstChild.type === "interpolation" || n$8.firstChild.type === "angularIcuExpression") && n$8.firstChild.isLeadingSpaceSensitive && !n$8.firstChild.hasLeadingSpaces && n$8.lastChild.isTrailingSpaceSensitive && !n$8.lastChild.hasTrailingSpaces, i$18 = Symbol("element-attr-group-id"), a$13 = (l$10) => E$1([
		E$1(st$3(t$13, e$4, r$12), { id: i$18 }),
		l$10,
		tt$3(n$8, e$4)
	]), o$9 = (l$10) => s$8 ? Cn$3(l$10, { groupId: i$18 }) : (W$1(n$8, e$4) || et$3(n$8, e$4)) && n$8.parent.type === "root" && e$4.parser === "vue" && !e$4.vueIndentScriptAndStyle ? l$10 : k$3(l$10), u$14 = () => s$8 ? pe$4(v$2, "", { groupId: i$18 }) : n$8.firstChild.hasLeadingSpaces && n$8.firstChild.isLeadingSpaceSensitive ? _$1 : n$8.firstChild.type === "text" && n$8.isWhitespaceSensitive && n$8.isIndentationSensitive ? dn$3(v$2) : v$2, p$2 = () => (n$8.next ? Q$2(n$8.next) : Ee$2(n$8.parent)) ? n$8.lastChild.hasTrailingSpaces && n$8.lastChild.isTrailingSpaceSensitive ? " " : "" : s$8 ? pe$4(v$2, "", { groupId: i$18 }) : n$8.lastChild.hasTrailingSpaces && n$8.lastChild.isTrailingSpaceSensitive ? _$1 : (n$8.lastChild.type === "comment" || n$8.lastChild.type === "text" && n$8.isWhitespaceSensitive && n$8.isIndentationSensitive) && new RegExp(`\\n[\\t ]{${e$4.tabWidth * (t$13.ancestors.length - 1)}}$`, "u").test(n$8.lastChild.value) ? "" : v$2;
	return n$8.children.length === 0 ? a$13(n$8.hasDanglingSpaces && n$8.isDanglingSpaceSensitive ? _$1 : "") : a$13([
		Gn$4(n$8) ? ne$4 : "",
		o$9([u$14(), Re$4(t$13, e$4, r$12)]),
		p$2()
	]);
}
function ut$2(t$13) {
	return t$13 >= 9 && t$13 <= 32 || t$13 == 160;
}
function Rt$3(t$13) {
	return 48 <= t$13 && t$13 <= 57;
}
function lt$2(t$13) {
	return t$13 >= 97 && t$13 <= 122 || t$13 >= 65 && t$13 <= 90;
}
function Rs$1(t$13) {
	return t$13 >= 97 && t$13 <= 102 || t$13 >= 65 && t$13 <= 70 || Rt$3(t$13);
}
function $t$2(t$13) {
	return t$13 === 10 || t$13 === 13;
}
function Br$3(t$13) {
	return 48 <= t$13 && t$13 <= 55;
}
function Ot$3(t$13) {
	return t$13 === 39 || t$13 === 34 || t$13 === 96;
}
var Ua$4 = /-+([a-z0-9])/g;
function Os(t$13) {
	return t$13.replace(Ua$4, (...e$4) => e$4[1].toUpperCase());
}
var ie$4 = class t$13 {
	constructor(e$4, r$12, n$8, s$8) {
		this.file = e$4, this.offset = r$12, this.line = n$8, this.col = s$8;
	}
	toString() {
		return this.offset != null ? `${this.file.url}@${this.line}:${this.col}` : this.file.url;
	}
	moveBy(e$4) {
		let r$12 = this.file.content, n$8 = r$12.length, s$8 = this.offset, i$18 = this.line, a$13 = this.col;
		for (; s$8 > 0 && e$4 < 0;) if (s$8--, e$4++, r$12.charCodeAt(s$8) == 10) {
			i$18--;
			let u$14 = r$12.substring(0, s$8 - 1).lastIndexOf(String.fromCharCode(10));
			a$13 = u$14 > 0 ? s$8 - u$14 : s$8;
		} else a$13--;
		for (; s$8 < n$8 && e$4 > 0;) {
			let o$9 = r$12.charCodeAt(s$8);
			s$8++, e$4--, o$9 == 10 ? (i$18++, a$13 = 0) : a$13++;
		}
		return new t$13(this.file, s$8, i$18, a$13);
	}
	getContext(e$4, r$12) {
		let n$8 = this.file.content, s$8 = this.offset;
		if (s$8 != null) {
			s$8 > n$8.length - 1 && (s$8 = n$8.length - 1);
			let i$18 = s$8, a$13 = 0, o$9 = 0;
			for (; a$13 < e$4 && s$8 > 0 && (s$8--, a$13++, !(n$8[s$8] == `
` && ++o$9 == r$12)););
			for (a$13 = 0, o$9 = 0; a$13 < e$4 && i$18 < n$8.length - 1 && (i$18++, a$13++, !(n$8[i$18] == `
` && ++o$9 == r$12)););
			return {
				before: n$8.substring(s$8, this.offset),
				after: n$8.substring(this.offset, i$18 + 1)
			};
		}
		return null;
	}
}, ve$3 = class {
	constructor(e$4, r$12) {
		this.content = e$4, this.url = r$12;
	}
}, h$1 = class {
	constructor(e$4, r$12, n$8 = e$4, s$8 = null) {
		this.start = e$4, this.end = r$12, this.fullStart = n$8, this.details = s$8;
	}
	toString() {
		return this.start.file.content.substring(this.start.offset, this.end.offset);
	}
}, Mt$2;
(function(t$13) {
	t$13[t$13.WARNING = 0] = "WARNING", t$13[t$13.ERROR = 1] = "ERROR";
})(Mt$2 || (Mt$2 = {}));
var Oe$3 = class {
	constructor(e$4, r$12, n$8 = Mt$2.ERROR, s$8) {
		this.span = e$4, this.msg = r$12, this.level = n$8, this.relatedError = s$8;
	}
	contextualMessage() {
		let e$4 = this.span.start.getContext(100, 3);
		return e$4 ? `${this.msg} ("${e$4.before}[${Mt$2[this.level]} ->]${e$4.after}")` : this.msg;
	}
	toString() {
		let e$4 = this.span.details ? `, ${this.span.details}` : "";
		return `${this.contextualMessage()}: ${this.span.start}${e$4}`;
	}
};
var Wa$2 = [
	za$2,
	Ya$1,
	Ka$4,
	Qa$3,
	Ja$2,
	to$2,
	Za$3,
	eo$2,
	ro$2,
	Xa$3
];
function Ga$3(t$13, e$4) {
	for (let r$12 of Wa$2) r$12(t$13, e$4);
	return t$13;
}
function za$2(t$13) {
	t$13.walk((e$4) => {
		if (e$4.type === "element" && e$4.tagDefinition.ignoreFirstLf && e$4.children.length > 0 && e$4.children[0].type === "text" && e$4.children[0].value[0] === `
`) {
			let r$12 = e$4.children[0];
			r$12.value.length === 1 ? e$4.removeChild(r$12) : r$12.value = r$12.value.slice(1);
		}
	});
}
function Ya$1(t$13) {
	let e$4 = (r$12) => {
		var n$8, s$8;
		return r$12.type === "element" && ((n$8 = r$12.prev) == null ? void 0 : n$8.type) === "ieConditionalStartComment" && r$12.prev.sourceSpan.end.offset === r$12.startSourceSpan.start.offset && ((s$8 = r$12.firstChild) == null ? void 0 : s$8.type) === "ieConditionalEndComment" && r$12.firstChild.sourceSpan.start.offset === r$12.startSourceSpan.end.offset;
	};
	t$13.walk((r$12) => {
		if (r$12.children) for (let n$8 = 0; n$8 < r$12.children.length; n$8++) {
			let s$8 = r$12.children[n$8];
			if (!e$4(s$8)) continue;
			let i$18 = s$8.prev, a$13 = s$8.firstChild;
			r$12.removeChild(i$18), n$8--;
			let o$9 = new h$1(i$18.sourceSpan.start, a$13.sourceSpan.end), u$14 = new h$1(o$9.start, s$8.sourceSpan.end);
			s$8.condition = i$18.condition, s$8.sourceSpan = u$14, s$8.startSourceSpan = o$9, s$8.removeChild(a$13);
		}
	});
}
function ja$3(t$13, e$4, r$12) {
	t$13.walk((n$8) => {
		if (n$8.children) for (let s$8 = 0; s$8 < n$8.children.length; s$8++) {
			let i$18 = n$8.children[s$8];
			if (i$18.type !== "text" && !e$4(i$18)) continue;
			i$18.type !== "text" && (i$18.type = "text", i$18.value = r$12(i$18));
			let a$13 = i$18.prev;
			!a$13 || a$13.type !== "text" || (a$13.value += i$18.value, a$13.sourceSpan = new h$1(a$13.sourceSpan.start, i$18.sourceSpan.end), n$8.removeChild(i$18), s$8--);
		}
	});
}
function Ka$4(t$13) {
	return ja$3(t$13, (e$4) => e$4.type === "cdata", (e$4) => `<![CDATA[${e$4.value}]]>`);
}
function Xa$3(t$13) {
	let e$4 = (r$12) => {
		var n$8, s$8;
		return r$12.type === "element" && r$12.attrs.length === 0 && r$12.children.length === 1 && r$12.firstChild.type === "text" && !O$1.hasWhitespaceCharacter(r$12.children[0].value) && !r$12.firstChild.hasLeadingSpaces && !r$12.firstChild.hasTrailingSpaces && r$12.isLeadingSpaceSensitive && !r$12.hasLeadingSpaces && r$12.isTrailingSpaceSensitive && !r$12.hasTrailingSpaces && ((n$8 = r$12.prev) == null ? void 0 : n$8.type) === "text" && ((s$8 = r$12.next) == null ? void 0 : s$8.type) === "text";
	};
	t$13.walk((r$12) => {
		if (r$12.children) for (let n$8 = 0; n$8 < r$12.children.length; n$8++) {
			let s$8 = r$12.children[n$8];
			if (!e$4(s$8)) continue;
			let i$18 = s$8.prev, a$13 = s$8.next;
			i$18.value += `<${s$8.rawName}>` + s$8.firstChild.value + `</${s$8.rawName}>` + a$13.value, i$18.sourceSpan = new h$1(i$18.sourceSpan.start, a$13.sourceSpan.end), i$18.isTrailingSpaceSensitive = a$13.isTrailingSpaceSensitive, i$18.hasTrailingSpaces = a$13.hasTrailingSpaces, r$12.removeChild(s$8), n$8--, r$12.removeChild(a$13);
		}
	});
}
function Qa$3(t$13, e$4) {
	if (e$4.parser === "html") return;
	let r$12 = /\{\{(.+?)\}\}/su;
	t$13.walk((n$8) => {
		if (qn$3(n$8, e$4)) for (let s$8 of n$8.children) {
			if (s$8.type !== "text") continue;
			let i$18 = s$8.sourceSpan.start, a$13 = null, o$9 = s$8.value.split(r$12);
			for (let u$14 = 0; u$14 < o$9.length; u$14++, i$18 = a$13) {
				let p$2 = o$9[u$14];
				if (u$14 % 2 === 0) {
					a$13 = i$18.moveBy(p$2.length), p$2.length > 0 && n$8.insertChildBefore(s$8, {
						type: "text",
						value: p$2,
						sourceSpan: new h$1(i$18, a$13)
					});
					continue;
				}
				a$13 = i$18.moveBy(p$2.length + 4), n$8.insertChildBefore(s$8, {
					type: "interpolation",
					sourceSpan: new h$1(i$18, a$13),
					children: p$2.length === 0 ? [] : [{
						type: "text",
						value: p$2,
						sourceSpan: new h$1(i$18.moveBy(2), a$13.moveBy(-2))
					}]
				});
			}
			n$8.removeChild(s$8);
		}
	});
}
function Ja$2(t$13, e$4) {
	t$13.walk((r$12) => {
		let n$8 = r$12.$children;
		if (!n$8) return;
		if (n$8.length === 0 || n$8.length === 1 && n$8[0].type === "text" && O$1.trim(n$8[0].value).length === 0) {
			r$12.hasDanglingSpaces = n$8.length > 0, r$12.$children = [];
			return;
		}
		let s$8 = Hn$2(r$12, e$4), i$18 = Ar$3(r$12);
		if (!s$8) for (let a$13 = 0; a$13 < n$8.length; a$13++) {
			let o$9 = n$8[a$13];
			if (o$9.type !== "text") continue;
			let { leadingWhitespace: u$14, text: p$2, trailingWhitespace: l$10 } = Mn$2(o$9.value), m$11 = o$9.prev, f$3 = o$9.next;
			p$2 ? (o$9.value = p$2, o$9.sourceSpan = new h$1(o$9.sourceSpan.start.moveBy(u$14.length), o$9.sourceSpan.end.moveBy(-l$10.length)), u$14 && (m$11 && (m$11.hasTrailingSpaces = !0), o$9.hasLeadingSpaces = !0), l$10 && (o$9.hasTrailingSpaces = !0, f$3 && (f$3.hasLeadingSpaces = !0))) : (r$12.removeChild(o$9), a$13--, (u$14 || l$10) && (m$11 && (m$11.hasTrailingSpaces = !0), f$3 && (f$3.hasLeadingSpaces = !0)));
		}
		r$12.isWhitespaceSensitive = s$8, r$12.isIndentationSensitive = i$18;
	});
}
function Za$3(t$13) {
	t$13.walk((e$4) => {
		e$4.isSelfClosing = !e$4.children || e$4.type === "element" && (e$4.tagDefinition.isVoid || e$4.endSourceSpan && e$4.startSourceSpan.start === e$4.endSourceSpan.start && e$4.startSourceSpan.end === e$4.endSourceSpan.end);
	});
}
function eo$2(t$13, e$4) {
	t$13.walk((r$12) => {
		r$12.type === "element" && (r$12.hasHtmComponentClosingTag = r$12.endSourceSpan && /^<\s*\/\s*\/\s*>$/u.test(e$4.originalText.slice(r$12.endSourceSpan.start.offset, r$12.endSourceSpan.end.offset)));
	});
}
function to$2(t$13, e$4) {
	t$13.walk((r$12) => {
		r$12.cssDisplay = Qn$3(r$12, e$4);
	});
}
function ro$2(t$13, e$4) {
	t$13.walk((r$12) => {
		let { children: n$8 } = r$12;
		if (n$8) {
			if (n$8.length === 0) {
				r$12.isDanglingSpaceSensitive = Wn$3(r$12, e$4);
				return;
			}
			for (let s$8 of n$8) s$8.isLeadingSpaceSensitive = Vn$3(s$8, e$4), s$8.isTrailingSpaceSensitive = Un$4(s$8, e$4);
			for (let s$8 = 0; s$8 < n$8.length; s$8++) {
				let i$18 = n$8[s$8];
				i$18.isLeadingSpaceSensitive = (s$8 === 0 || i$18.prev.isTrailingSpaceSensitive) && i$18.isLeadingSpaceSensitive, i$18.isTrailingSpaceSensitive = (s$8 === n$8.length - 1 || i$18.next.isLeadingSpaceSensitive) && i$18.isTrailingSpaceSensitive;
			}
		}
	});
}
var Ms$1 = Ga$3;
function no$3(t$13, e$4, r$12) {
	let { node: n$8 } = t$13;
	switch (n$8.type) {
		case "front-matter": return B$3(n$8.raw);
		case "root": return e$4.__onHtmlRoot && e$4.__onHtmlRoot(n$8), [E$1(Re$4(t$13, e$4, r$12)), S$2];
		case "element":
		case "ieConditionalComment": return Is$1(t$13, e$4, r$12);
		case "angularControlFlowBlock": return Bs$2(t$13, e$4, r$12);
		case "angularControlFlowBlockParameters": return Fs$2(t$13, e$4, r$12);
		case "angularControlFlowBlockParameter": return O$1.trim(n$8.expression);
		case "angularLetDeclaration": return E$1([
			"@let ",
			E$1([
				n$8.id,
				" =",
				E$1(k$3([_$1, r$12("init")]))
			]),
			";"
		]);
		case "angularLetDeclarationInitializer": return n$8.value;
		case "angularIcuExpression": return Ps$2(t$13, e$4, r$12);
		case "angularIcuCase": return Ns(t$13, e$4, r$12);
		case "ieConditionalStartComment":
		case "ieConditionalEndComment": return [De$4(n$8), Se$3(n$8)];
		case "interpolation": return [
			De$4(n$8, e$4),
			...t$13.map(r$12, "children"),
			Se$3(n$8, e$4)
		];
		case "text": {
			if (n$8.parent.type === "interpolation") {
				let o$9 = /\n[^\S\n]*$/u, u$14 = o$9.test(n$8.value), p$2 = u$14 ? n$8.value.replace(o$9, "") : n$8.value;
				return [B$3(p$2), u$14 ? S$2 : ""];
			}
			let s$8 = z$3(n$8, e$4), i$18 = kt$3(n$8), a$13 = G$3(n$8, e$4);
			return i$18[0] = [s$8, i$18[0]], i$18.push([i$18.pop(), a$13]), vt$3(i$18);
		}
		case "docType": return [E$1([
			De$4(n$8, e$4),
			" ",
			w$1(!1, n$8.value.replace(/^html\b/iu, "html"), /\s+/gu, " ")
		]), Se$3(n$8, e$4)];
		case "comment": return [
			z$3(n$8, e$4),
			B$3(e$4.originalText.slice(J$3(n$8), se$2(n$8))),
			G$3(n$8, e$4)
		];
		case "attribute": {
			if (n$8.value === null) return n$8.rawName;
			let s$8 = wr$2(n$8.value), i$18 = _n$3(s$8, "\"");
			return [
				n$8.rawName,
				"=",
				i$18,
				B$3(i$18 === "\"" ? w$1(!1, s$8, "\"", "&quot;") : w$1(!1, s$8, "'", "&apos;")),
				i$18
			];
		}
		case "cdata":
		default: throw new An$3(n$8, "HTML");
	}
}
var so$2 = {
	preprocess: Ms$1,
	print: no$3,
	insertPragma: Ts$1,
	massageAstNode: vn$2,
	embed: Ss,
	getVisitorKeys: As
}, qs$1 = so$2;
var Hs$1 = [
	{
		name: "Angular",
		type: "markup",
		extensions: [".component.html"],
		tmScope: "text.html.basic",
		aceMode: "html",
		aliases: ["xhtml"],
		codemirrorMode: "htmlmixed",
		codemirrorMimeType: "text/html",
		parsers: ["angular"],
		vscodeLanguageIds: ["html"],
		filenames: [],
		linguistLanguageId: 146
	},
	{
		name: "HTML",
		type: "markup",
		extensions: [
			".html",
			".hta",
			".htm",
			".html.hl",
			".inc",
			".xht",
			".xhtml"
		],
		tmScope: "text.html.basic",
		aceMode: "html",
		aliases: ["xhtml"],
		codemirrorMode: "htmlmixed",
		codemirrorMimeType: "text/html",
		parsers: ["html"],
		vscodeLanguageIds: ["html"],
		linguistLanguageId: 146
	},
	{
		name: "Lightning Web Components",
		type: "markup",
		extensions: [],
		tmScope: "text.html.basic",
		aceMode: "html",
		aliases: ["xhtml"],
		codemirrorMode: "htmlmixed",
		codemirrorMimeType: "text/html",
		parsers: ["lwc"],
		vscodeLanguageIds: ["html"],
		filenames: [],
		linguistLanguageId: 146
	},
	{
		name: "MJML",
		type: "markup",
		extensions: [".mjml"],
		tmScope: "text.mjml.basic",
		aceMode: "html",
		aliases: ["MJML", "mjml"],
		codemirrorMode: "htmlmixed",
		codemirrorMimeType: "text/html",
		parsers: ["mjml"],
		filenames: [],
		vscodeLanguageIds: ["mjml"],
		linguistLanguageId: 146
	},
	{
		name: "Vue",
		type: "markup",
		extensions: [".vue"],
		tmScope: "source.vue",
		aceMode: "html",
		parsers: ["vue"],
		vscodeLanguageIds: ["vue"],
		linguistLanguageId: 391
	}
];
var Lr$3 = {
	bracketSpacing: {
		category: "Common",
		type: "boolean",
		default: !0,
		description: "Print spaces between brackets.",
		oppositeDescription: "Do not print spaces between brackets."
	},
	objectWrap: {
		category: "Common",
		type: "choice",
		default: "preserve",
		description: "How to wrap object literals.",
		choices: [{
			value: "preserve",
			description: "Keep as multi-line, if there is a newline between the opening brace and first property."
		}, {
			value: "collapse",
			description: "Fit to a single line when possible."
		}]
	},
	singleQuote: {
		category: "Common",
		type: "boolean",
		default: !1,
		description: "Use single quotes instead of double quotes."
	},
	proseWrap: {
		category: "Common",
		type: "choice",
		default: "preserve",
		description: "How to wrap prose.",
		choices: [
			{
				value: "always",
				description: "Wrap prose if it exceeds the print width."
			},
			{
				value: "never",
				description: "Do not wrap prose."
			},
			{
				value: "preserve",
				description: "Wrap prose as-is."
			}
		]
	},
	bracketSameLine: {
		category: "Common",
		type: "boolean",
		default: !1,
		description: "Put > of opening tags on the last line instead of on a new line."
	},
	singleAttributePerLine: {
		category: "Common",
		type: "boolean",
		default: !1,
		description: "Enforce single attribute per line in HTML, Vue and JSX."
	}
};
var Vs$1 = "HTML", io$2 = {
	bracketSameLine: Lr$3.bracketSameLine,
	htmlWhitespaceSensitivity: {
		category: Vs$1,
		type: "choice",
		default: "css",
		description: "How to handle whitespaces in HTML.",
		choices: [
			{
				value: "css",
				description: "Respect the default value of CSS display property."
			},
			{
				value: "strict",
				description: "Whitespaces are considered sensitive."
			},
			{
				value: "ignore",
				description: "Whitespaces are considered insensitive."
			}
		]
	},
	singleAttributePerLine: Lr$3.singleAttributePerLine,
	vueIndentScriptAndStyle: {
		category: Vs$1,
		type: "boolean",
		default: !1,
		description: "Indent script and style tags in Vue files."
	}
}, Us$3 = io$2;
var tn$2 = {};
ln$3(tn$2, {
	angular: () => iu$2,
	html: () => ru$2,
	lwc: () => ou$1,
	mjml: () => su$1,
	vue: () => au$1
});
var Ws$2;
(function(t$13) {
	t$13[t$13.Emulated = 0] = "Emulated", t$13[t$13.None = 2] = "None", t$13[t$13.ShadowDom = 3] = "ShadowDom";
})(Ws$2 || (Ws$2 = {}));
var Gs$2;
(function(t$13) {
	t$13[t$13.OnPush = 0] = "OnPush", t$13[t$13.Default = 1] = "Default";
})(Gs$2 || (Gs$2 = {}));
var zs$1;
(function(t$13) {
	t$13[t$13.None = 0] = "None", t$13[t$13.SignalBased = 1] = "SignalBased", t$13[t$13.HasDecoratorInputTransform = 2] = "HasDecoratorInputTransform";
})(zs$1 || (zs$1 = {}));
var Fr$3 = { name: "custom-elements" }, Pr$4 = { name: "no-errors-schema" };
var Z$3;
(function(t$13) {
	t$13[t$13.NONE = 0] = "NONE", t$13[t$13.HTML = 1] = "HTML", t$13[t$13.STYLE = 2] = "STYLE", t$13[t$13.SCRIPT = 3] = "SCRIPT", t$13[t$13.URL = 4] = "URL", t$13[t$13.RESOURCE_URL = 5] = "RESOURCE_URL";
})(Z$3 || (Z$3 = {}));
var Ys$1;
(function(t$13) {
	t$13[t$13.Error = 0] = "Error", t$13[t$13.Warning = 1] = "Warning", t$13[t$13.Ignore = 2] = "Ignore";
})(Ys$1 || (Ys$1 = {}));
var N$3;
(function(t$13) {
	t$13[t$13.RAW_TEXT = 0] = "RAW_TEXT", t$13[t$13.ESCAPABLE_RAW_TEXT = 1] = "ESCAPABLE_RAW_TEXT", t$13[t$13.PARSABLE_DATA = 2] = "PARSABLE_DATA";
})(N$3 || (N$3 = {}));
function ct$2(t$13, e$4 = !0) {
	if (t$13[0] != ":") return [null, t$13];
	let r$12 = t$13.indexOf(":", 1);
	if (r$12 === -1) {
		if (e$4) throw new Error(`Unsupported format "${t$13}" expecting ":namespace:name"`);
		return [null, t$13];
	}
	return [t$13.slice(1, r$12), t$13.slice(r$12 + 1)];
}
function Nr$4(t$13) {
	return ct$2(t$13)[1] === "ng-container";
}
function Ir$4(t$13) {
	return ct$2(t$13)[1] === "ng-content";
}
function Me$3(t$13) {
	return t$13 === null ? null : ct$2(t$13)[0];
}
function qe$4(t$13, e$4) {
	return t$13 ? `:${t$13}:${e$4}` : e$4;
}
var Ht$3;
function Rr$3() {
	return Ht$3 || (Ht$3 = {}, qt$3(Z$3.HTML, [
		"iframe|srcdoc",
		"*|innerHTML",
		"*|outerHTML"
	]), qt$3(Z$3.STYLE, ["*|style"]), qt$3(Z$3.URL, [
		"*|formAction",
		"area|href",
		"area|ping",
		"audio|src",
		"a|href",
		"a|ping",
		"blockquote|cite",
		"body|background",
		"del|cite",
		"form|action",
		"img|src",
		"input|src",
		"ins|cite",
		"q|cite",
		"source|src",
		"track|src",
		"video|poster",
		"video|src"
	]), qt$3(Z$3.RESOURCE_URL, [
		"applet|code",
		"applet|codebase",
		"base|href",
		"embed|src",
		"frame|src",
		"head|profile",
		"html|manifest",
		"iframe|src",
		"link|href",
		"media|src",
		"object|codebase",
		"object|data",
		"script|src"
	])), Ht$3;
}
function qt$3(t$13, e$4) {
	for (let r$12 of e$4) Ht$3[r$12.toLowerCase()] = t$13;
}
var Vt$3 = class {};
var ao$2 = "boolean", oo$2 = "number", uo$2 = "string", lo$2 = "object", co$3 = [
	"[Element]|textContent,%ariaAtomic,%ariaAutoComplete,%ariaBusy,%ariaChecked,%ariaColCount,%ariaColIndex,%ariaColSpan,%ariaCurrent,%ariaDescription,%ariaDisabled,%ariaExpanded,%ariaHasPopup,%ariaHidden,%ariaKeyShortcuts,%ariaLabel,%ariaLevel,%ariaLive,%ariaModal,%ariaMultiLine,%ariaMultiSelectable,%ariaOrientation,%ariaPlaceholder,%ariaPosInSet,%ariaPressed,%ariaReadOnly,%ariaRelevant,%ariaRequired,%ariaRoleDescription,%ariaRowCount,%ariaRowIndex,%ariaRowSpan,%ariaSelected,%ariaSetSize,%ariaSort,%ariaValueMax,%ariaValueMin,%ariaValueNow,%ariaValueText,%classList,className,elementTiming,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*fullscreenchange,*fullscreenerror,*search,*webkitfullscreenchange,*webkitfullscreenerror,outerHTML,%part,#scrollLeft,#scrollTop,slot,*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored",
	"[HTMLElement]^[Element]|accessKey,autocapitalize,!autofocus,contentEditable,dir,!draggable,enterKeyHint,!hidden,!inert,innerText,inputMode,lang,nonce,*abort,*animationend,*animationiteration,*animationstart,*auxclick,*beforexrselect,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*formdata,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*paste,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerrawupdate,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*securitypolicyviolation,*seeked,*seeking,*select,*selectionchange,*selectstart,*slotchange,*stalled,*submit,*suspend,*timeupdate,*toggle,*transitioncancel,*transitionend,*transitionrun,*transitionstart,*volumechange,*waiting,*webkitanimationend,*webkitanimationiteration,*webkitanimationstart,*webkittransitionend,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate,virtualKeyboardPolicy",
	"abbr,address,article,aside,b,bdi,bdo,cite,content,code,dd,dfn,dt,em,figcaption,figure,footer,header,hgroup,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,autocapitalize,!autofocus,contentEditable,dir,!draggable,enterKeyHint,!hidden,innerText,inputMode,lang,nonce,*abort,*animationend,*animationiteration,*animationstart,*auxclick,*beforexrselect,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*formdata,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*paste,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerrawupdate,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*securitypolicyviolation,*seeked,*seeking,*select,*selectionchange,*selectstart,*slotchange,*stalled,*submit,*suspend,*timeupdate,*toggle,*transitioncancel,*transitionend,*transitionrun,*transitionstart,*volumechange,*waiting,*webkitanimationend,*webkitanimationiteration,*webkitanimationstart,*webkittransitionend,*wheel,outerText,!spellcheck,%style,#tabIndex,title,!translate,virtualKeyboardPolicy",
	"media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,!preservesPitch,src,%srcObject,#volume",
	":svg:^[HTMLElement]|!autofocus,nonce,*abort,*animationend,*animationiteration,*animationstart,*auxclick,*beforexrselect,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*formdata,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*paste,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerrawupdate,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*securitypolicyviolation,*seeked,*seeking,*select,*selectionchange,*selectstart,*slotchange,*stalled,*submit,*suspend,*timeupdate,*toggle,*transitioncancel,*transitionend,*transitionrun,*transitionstart,*volumechange,*waiting,*webkitanimationend,*webkitanimationiteration,*webkitanimationstart,*webkittransitionend,*wheel,%style,#tabIndex",
	":svg:graphics^:svg:|",
	":svg:animation^:svg:|*begin,*end,*repeat",
	":svg:geometry^:svg:|",
	":svg:componentTransferFunction^:svg:|",
	":svg:gradient^:svg:|",
	":svg:textContent^:svg:graphics|",
	":svg:textPositioning^:svg:textContent|",
	"a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,%relList,rev,search,shape,target,text,type,username",
	"area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,%relList,search,shape,target,username",
	"audio^media|",
	"br^[HTMLElement]|clear",
	"base^[HTMLElement]|href,target",
	"body^[HTMLElement]|aLink,background,bgColor,link,*afterprint,*beforeprint,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*messageerror,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink",
	"button^[HTMLElement]|!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value",
	"canvas^[HTMLElement]|#height,#width",
	"content^[HTMLElement]|select",
	"dl^[HTMLElement]|!compact",
	"data^[HTMLElement]|value",
	"datalist^[HTMLElement]|",
	"details^[HTMLElement]|!open",
	"dialog^[HTMLElement]|!open,returnValue",
	"dir^[HTMLElement]|!compact",
	"div^[HTMLElement]|align",
	"embed^[HTMLElement]|align,height,name,src,type,width",
	"fieldset^[HTMLElement]|!disabled,name",
	"font^[HTMLElement]|color,face,size",
	"form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target",
	"frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src",
	"frameset^[HTMLElement]|cols,*afterprint,*beforeprint,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*messageerror,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows",
	"hr^[HTMLElement]|align,color,!noShade,size,width",
	"head^[HTMLElement]|",
	"h1,h2,h3,h4,h5,h6^[HTMLElement]|align",
	"html^[HTMLElement]|version",
	"iframe^[HTMLElement]|align,allow,!allowFullscreen,!allowPaymentRequest,csp,frameBorder,height,loading,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width",
	"img^[HTMLElement]|align,alt,border,%crossOrigin,decoding,#height,#hspace,!isMap,loading,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width",
	"input^[HTMLElement]|accept,align,alt,autocomplete,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width",
	"li^[HTMLElement]|type,#value",
	"label^[HTMLElement]|htmlFor",
	"legend^[HTMLElement]|align",
	"link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,imageSizes,imageSrcset,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type",
	"map^[HTMLElement]|name",
	"marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width",
	"menu^[HTMLElement]|!compact",
	"meta^[HTMLElement]|content,httpEquiv,media,name,scheme",
	"meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value",
	"ins,del^[HTMLElement]|cite,dateTime",
	"ol^[HTMLElement]|!compact,!reversed,#start,type",
	"object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width",
	"optgroup^[HTMLElement]|!disabled,label",
	"option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value",
	"output^[HTMLElement]|defaultValue,%htmlFor,name,value",
	"p^[HTMLElement]|align",
	"param^[HTMLElement]|name,type,value,valueType",
	"picture^[HTMLElement]|",
	"pre^[HTMLElement]|#width",
	"progress^[HTMLElement]|#max,#value",
	"q,blockquote,cite^[HTMLElement]|",
	"script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,!noModule,%referrerPolicy,src,text,type",
	"select^[HTMLElement]|autocomplete,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value",
	"slot^[HTMLElement]|name",
	"source^[HTMLElement]|#height,media,sizes,src,srcset,type,#width",
	"span^[HTMLElement]|",
	"style^[HTMLElement]|!disabled,media,type",
	"caption^[HTMLElement]|align",
	"th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width",
	"col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width",
	"table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width",
	"tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign",
	"tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign",
	"template^[HTMLElement]|",
	"textarea^[HTMLElement]|autocomplete,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap",
	"time^[HTMLElement]|dateTime",
	"title^[HTMLElement]|text",
	"track^[HTMLElement]|!default,kind,label,src,srclang",
	"ul^[HTMLElement]|!compact,type",
	"unknown^[HTMLElement]|",
	"video^media|!disablePictureInPicture,#height,*enterpictureinpicture,*leavepictureinpicture,!playsInline,poster,#width",
	":svg:a^:svg:graphics|",
	":svg:animate^:svg:animation|",
	":svg:animateMotion^:svg:animation|",
	":svg:animateTransform^:svg:animation|",
	":svg:circle^:svg:geometry|",
	":svg:clipPath^:svg:graphics|",
	":svg:defs^:svg:graphics|",
	":svg:desc^:svg:|",
	":svg:discard^:svg:|",
	":svg:ellipse^:svg:geometry|",
	":svg:feBlend^:svg:|",
	":svg:feColorMatrix^:svg:|",
	":svg:feComponentTransfer^:svg:|",
	":svg:feComposite^:svg:|",
	":svg:feConvolveMatrix^:svg:|",
	":svg:feDiffuseLighting^:svg:|",
	":svg:feDisplacementMap^:svg:|",
	":svg:feDistantLight^:svg:|",
	":svg:feDropShadow^:svg:|",
	":svg:feFlood^:svg:|",
	":svg:feFuncA^:svg:componentTransferFunction|",
	":svg:feFuncB^:svg:componentTransferFunction|",
	":svg:feFuncG^:svg:componentTransferFunction|",
	":svg:feFuncR^:svg:componentTransferFunction|",
	":svg:feGaussianBlur^:svg:|",
	":svg:feImage^:svg:|",
	":svg:feMerge^:svg:|",
	":svg:feMergeNode^:svg:|",
	":svg:feMorphology^:svg:|",
	":svg:feOffset^:svg:|",
	":svg:fePointLight^:svg:|",
	":svg:feSpecularLighting^:svg:|",
	":svg:feSpotLight^:svg:|",
	":svg:feTile^:svg:|",
	":svg:feTurbulence^:svg:|",
	":svg:filter^:svg:|",
	":svg:foreignObject^:svg:graphics|",
	":svg:g^:svg:graphics|",
	":svg:image^:svg:graphics|decoding",
	":svg:line^:svg:geometry|",
	":svg:linearGradient^:svg:gradient|",
	":svg:mpath^:svg:|",
	":svg:marker^:svg:|",
	":svg:mask^:svg:|",
	":svg:metadata^:svg:|",
	":svg:path^:svg:geometry|",
	":svg:pattern^:svg:|",
	":svg:polygon^:svg:geometry|",
	":svg:polyline^:svg:geometry|",
	":svg:radialGradient^:svg:gradient|",
	":svg:rect^:svg:geometry|",
	":svg:svg^:svg:graphics|#currentScale,#zoomAndPan",
	":svg:script^:svg:|type",
	":svg:set^:svg:animation|",
	":svg:stop^:svg:|",
	":svg:style^:svg:|!disabled,media,title,type",
	":svg:switch^:svg:graphics|",
	":svg:symbol^:svg:|",
	":svg:tspan^:svg:textPositioning|",
	":svg:text^:svg:textPositioning|",
	":svg:textPath^:svg:textContent|",
	":svg:title^:svg:|",
	":svg:use^:svg:graphics|",
	":svg:view^:svg:|#zoomAndPan",
	"data^[HTMLElement]|value",
	"keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name",
	"menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default",
	"summary^[HTMLElement]|",
	"time^[HTMLElement]|dateTime",
	":svg:cursor^:svg:|",
	":math:^[HTMLElement]|!autofocus,nonce,*abort,*animationend,*animationiteration,*animationstart,*auxclick,*beforeinput,*beforematch,*beforetoggle,*beforexrselect,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contentvisibilityautostatechange,*contextlost,*contextmenu,*contextrestored,*copy,*cuechange,*cut,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*formdata,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*paste,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerrawupdate,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*scrollend,*securitypolicyviolation,*seeked,*seeking,*select,*selectionchange,*selectstart,*slotchange,*stalled,*submit,*suspend,*timeupdate,*toggle,*transitioncancel,*transitionend,*transitionrun,*transitionstart,*volumechange,*waiting,*webkitanimationend,*webkitanimationiteration,*webkitanimationstart,*webkittransitionend,*wheel,%style,#tabIndex",
	":math:math^:math:|",
	":math:maction^:math:|",
	":math:menclose^:math:|",
	":math:merror^:math:|",
	":math:mfenced^:math:|",
	":math:mfrac^:math:|",
	":math:mi^:math:|",
	":math:mmultiscripts^:math:|",
	":math:mn^:math:|",
	":math:mo^:math:|",
	":math:mover^:math:|",
	":math:mpadded^:math:|",
	":math:mphantom^:math:|",
	":math:mroot^:math:|",
	":math:mrow^:math:|",
	":math:ms^:math:|",
	":math:mspace^:math:|",
	":math:msqrt^:math:|",
	":math:mstyle^:math:|",
	":math:msub^:math:|",
	":math:msubsup^:math:|",
	":math:msup^:math:|",
	":math:mtable^:math:|",
	":math:mtd^:math:|",
	":math:mtext^:math:|",
	":math:mtr^:math:|",
	":math:munder^:math:|",
	":math:munderover^:math:|",
	":math:semantics^:math:|"
], js$1 = new Map(Object.entries({
	class: "className",
	for: "htmlFor",
	formaction: "formAction",
	innerHtml: "innerHTML",
	readonly: "readOnly",
	tabindex: "tabIndex"
})), po$3 = Array.from(js$1).reduce((t$13, [e$4, r$12]) => (t$13.set(e$4, r$12), t$13), /* @__PURE__ */ new Map()), Ut$2 = class extends Vt$3 {
	constructor() {
		super(), this._schema = /* @__PURE__ */ new Map(), this._eventSchema = /* @__PURE__ */ new Map(), co$3.forEach((e$4) => {
			let r$12 = /* @__PURE__ */ new Map(), n$8 = /* @__PURE__ */ new Set(), [s$8, i$18] = e$4.split("|"), a$13 = i$18.split(","), [o$9, u$14] = s$8.split("^");
			o$9.split(",").forEach((l$10) => {
				this._schema.set(l$10.toLowerCase(), r$12), this._eventSchema.set(l$10.toLowerCase(), n$8);
			});
			let p$2 = u$14 && this._schema.get(u$14.toLowerCase());
			if (p$2) {
				for (let [l$10, m$11] of p$2) r$12.set(l$10, m$11);
				for (let l$10 of this._eventSchema.get(u$14.toLowerCase())) n$8.add(l$10);
			}
			a$13.forEach((l$10) => {
				if (l$10.length > 0) switch (l$10[0]) {
					case "*":
						n$8.add(l$10.substring(1));
						break;
					case "!":
						r$12.set(l$10.substring(1), ao$2);
						break;
					case "#":
						r$12.set(l$10.substring(1), oo$2);
						break;
					case "%":
						r$12.set(l$10.substring(1), lo$2);
						break;
					default: r$12.set(l$10, uo$2);
				}
			});
		});
	}
	hasProperty(e$4, r$12, n$8) {
		if (n$8.some((i$18) => i$18.name === Pr$4.name)) return !0;
		if (e$4.indexOf("-") > -1) {
			if (Nr$4(e$4) || Ir$4(e$4)) return !1;
			if (n$8.some((i$18) => i$18.name === Fr$3.name)) return !0;
		}
		return (this._schema.get(e$4.toLowerCase()) || this._schema.get("unknown")).has(r$12);
	}
	hasElement(e$4, r$12) {
		return r$12.some((n$8) => n$8.name === Pr$4.name) || e$4.indexOf("-") > -1 && (Nr$4(e$4) || Ir$4(e$4) || r$12.some((n$8) => n$8.name === Fr$3.name)) ? !0 : this._schema.has(e$4.toLowerCase());
	}
	securityContext(e$4, r$12, n$8) {
		n$8 && (r$12 = this.getMappedPropName(r$12)), e$4 = e$4.toLowerCase(), r$12 = r$12.toLowerCase();
		let s$8 = Rr$3()[e$4 + "|" + r$12];
		return s$8 || (s$8 = Rr$3()["*|" + r$12], s$8 || Z$3.NONE);
	}
	getMappedPropName(e$4) {
		return js$1.get(e$4) ?? e$4;
	}
	getDefaultComponentElementName() {
		return "ng-component";
	}
	validateProperty(e$4) {
		return e$4.toLowerCase().startsWith("on") ? {
			error: !0,
			msg: `Binding to event property '${e$4}' is disallowed for security reasons, please use (${e$4.slice(2)})=...
If '${e$4}' is a directive input, make sure the directive is imported by the current module.`
		} : { error: !1 };
	}
	validateAttribute(e$4) {
		return e$4.toLowerCase().startsWith("on") ? {
			error: !0,
			msg: `Binding to event attribute '${e$4}' is disallowed for security reasons, please use (${e$4.slice(2)})=...`
		} : { error: !1 };
	}
	allKnownElementNames() {
		return Array.from(this._schema.keys());
	}
	allKnownAttributesOfElement(e$4) {
		let r$12 = this._schema.get(e$4.toLowerCase()) || this._schema.get("unknown");
		return Array.from(r$12.keys()).map((n$8) => po$3.get(n$8) ?? n$8);
	}
	allKnownEventsOfElement(e$4) {
		return Array.from(this._eventSchema.get(e$4.toLowerCase()) ?? []);
	}
	normalizeAnimationStyleProperty(e$4) {
		return Os(e$4);
	}
	normalizeAnimationStyleValue(e$4, r$12, n$8) {
		let s$8 = "", i$18 = n$8.toString().trim(), a$13 = null;
		if (ho$1(e$4) && n$8 !== 0 && n$8 !== "0") if (typeof n$8 == "number") s$8 = "px";
		else {
			let o$9 = n$8.match(/^[+-]?[\d\.]+([a-z]*)$/);
			o$9 && o$9[1].length == 0 && (a$13 = `Please provide a CSS unit value for ${r$12}:${n$8}`);
		}
		return {
			error: a$13,
			value: i$18 + s$8
		};
	}
};
function ho$1(t$13) {
	switch (t$13) {
		case "width":
		case "height":
		case "minWidth":
		case "minHeight":
		case "maxWidth":
		case "maxHeight":
		case "left":
		case "top":
		case "bottom":
		case "right":
		case "fontSize":
		case "outlineWidth":
		case "outlineOffset":
		case "paddingTop":
		case "paddingLeft":
		case "paddingBottom":
		case "paddingRight":
		case "marginTop":
		case "marginLeft":
		case "marginBottom":
		case "marginRight":
		case "borderRadius":
		case "borderWidth":
		case "borderTopWidth":
		case "borderLeftWidth":
		case "borderRightWidth":
		case "borderBottomWidth":
		case "textIndent": return !0;
		default: return !1;
	}
}
var d$12 = class {
	constructor({ closedByChildren: e$4, implicitNamespacePrefix: r$12, contentType: n$8 = N$3.PARSABLE_DATA, closedByParent: s$8 = !1, isVoid: i$18 = !1, ignoreFirstLf: a$13 = !1, preventNamespaceInheritance: o$9 = !1, canSelfClose: u$14 = !1 } = {}) {
		this.closedByChildren = {}, this.closedByParent = !1, e$4 && e$4.length > 0 && e$4.forEach((p$2) => this.closedByChildren[p$2] = !0), this.isVoid = i$18, this.closedByParent = s$8 || i$18, this.implicitNamespacePrefix = r$12 || null, this.contentType = n$8, this.ignoreFirstLf = a$13, this.preventNamespaceInheritance = o$9, this.canSelfClose = u$14 ?? i$18;
	}
	isClosedByChild(e$4) {
		return this.isVoid || e$4.toLowerCase() in this.closedByChildren;
	}
	getContentType(e$4) {
		return typeof this.contentType == "object" ? (e$4 === void 0 ? void 0 : this.contentType[e$4]) ?? this.contentType.default : this.contentType;
	}
}, Ks$2, pt$2;
function He$5(t$13) {
	return pt$2 || (Ks$2 = new d$12({ canSelfClose: !0 }), pt$2 = Object.assign(Object.create(null), {
		base: new d$12({ isVoid: !0 }),
		meta: new d$12({ isVoid: !0 }),
		area: new d$12({ isVoid: !0 }),
		embed: new d$12({ isVoid: !0 }),
		link: new d$12({ isVoid: !0 }),
		img: new d$12({ isVoid: !0 }),
		input: new d$12({ isVoid: !0 }),
		param: new d$12({ isVoid: !0 }),
		hr: new d$12({ isVoid: !0 }),
		br: new d$12({ isVoid: !0 }),
		source: new d$12({ isVoid: !0 }),
		track: new d$12({ isVoid: !0 }),
		wbr: new d$12({ isVoid: !0 }),
		p: new d$12({
			closedByChildren: [
				"address",
				"article",
				"aside",
				"blockquote",
				"div",
				"dl",
				"fieldset",
				"footer",
				"form",
				"h1",
				"h2",
				"h3",
				"h4",
				"h5",
				"h6",
				"header",
				"hgroup",
				"hr",
				"main",
				"nav",
				"ol",
				"p",
				"pre",
				"section",
				"table",
				"ul"
			],
			closedByParent: !0
		}),
		thead: new d$12({ closedByChildren: ["tbody", "tfoot"] }),
		tbody: new d$12({
			closedByChildren: ["tbody", "tfoot"],
			closedByParent: !0
		}),
		tfoot: new d$12({
			closedByChildren: ["tbody"],
			closedByParent: !0
		}),
		tr: new d$12({
			closedByChildren: ["tr"],
			closedByParent: !0
		}),
		td: new d$12({
			closedByChildren: ["td", "th"],
			closedByParent: !0
		}),
		th: new d$12({
			closedByChildren: ["td", "th"],
			closedByParent: !0
		}),
		col: new d$12({ isVoid: !0 }),
		svg: new d$12({ implicitNamespacePrefix: "svg" }),
		foreignObject: new d$12({
			implicitNamespacePrefix: "svg",
			preventNamespaceInheritance: !0
		}),
		math: new d$12({ implicitNamespacePrefix: "math" }),
		li: new d$12({
			closedByChildren: ["li"],
			closedByParent: !0
		}),
		dt: new d$12({ closedByChildren: ["dt", "dd"] }),
		dd: new d$12({
			closedByChildren: ["dt", "dd"],
			closedByParent: !0
		}),
		rb: new d$12({
			closedByChildren: [
				"rb",
				"rt",
				"rtc",
				"rp"
			],
			closedByParent: !0
		}),
		rt: new d$12({
			closedByChildren: [
				"rb",
				"rt",
				"rtc",
				"rp"
			],
			closedByParent: !0
		}),
		rtc: new d$12({
			closedByChildren: [
				"rb",
				"rtc",
				"rp"
			],
			closedByParent: !0
		}),
		rp: new d$12({
			closedByChildren: [
				"rb",
				"rt",
				"rtc",
				"rp"
			],
			closedByParent: !0
		}),
		optgroup: new d$12({
			closedByChildren: ["optgroup"],
			closedByParent: !0
		}),
		option: new d$12({
			closedByChildren: ["option", "optgroup"],
			closedByParent: !0
		}),
		pre: new d$12({ ignoreFirstLf: !0 }),
		listing: new d$12({ ignoreFirstLf: !0 }),
		style: new d$12({ contentType: N$3.RAW_TEXT }),
		script: new d$12({ contentType: N$3.RAW_TEXT }),
		title: new d$12({ contentType: {
			default: N$3.ESCAPABLE_RAW_TEXT,
			svg: N$3.PARSABLE_DATA
		} }),
		textarea: new d$12({
			contentType: N$3.ESCAPABLE_RAW_TEXT,
			ignoreFirstLf: !0
		})
	}), new Ut$2().allKnownElementNames().forEach((e$4) => {
		!pt$2[e$4] && Me$3(e$4) === null && (pt$2[e$4] = new d$12({ canSelfClose: !1 }));
	})), pt$2[t$13] ?? Ks$2;
}
var ae$3 = class {
	constructor(e$4, r$12) {
		this.sourceSpan = e$4, this.i18n = r$12;
	}
}, Wt$2 = class extends ae$3 {
	constructor(e$4, r$12, n$8, s$8) {
		super(r$12, s$8), this.value = e$4, this.tokens = n$8, this.type = "text";
	}
	visit(e$4, r$12) {
		return e$4.visitText(this, r$12);
	}
}, Gt$2 = class extends ae$3 {
	constructor(e$4, r$12, n$8, s$8) {
		super(r$12, s$8), this.value = e$4, this.tokens = n$8, this.type = "cdata";
	}
	visit(e$4, r$12) {
		return e$4.visitCdata(this, r$12);
	}
}, zt$3 = class extends ae$3 {
	constructor(e$4, r$12, n$8, s$8, i$18, a$13) {
		super(s$8, a$13), this.switchValue = e$4, this.type = r$12, this.cases = n$8, this.switchValueSourceSpan = i$18;
	}
	visit(e$4, r$12) {
		return e$4.visitExpansion(this, r$12);
	}
}, Yt$2 = class {
	constructor(e$4, r$12, n$8, s$8, i$18) {
		this.value = e$4, this.expression = r$12, this.sourceSpan = n$8, this.valueSourceSpan = s$8, this.expSourceSpan = i$18, this.type = "expansionCase";
	}
	visit(e$4, r$12) {
		return e$4.visitExpansionCase(this, r$12);
	}
}, jt$3 = class extends ae$3 {
	constructor(e$4, r$12, n$8, s$8, i$18, a$13, o$9) {
		super(n$8, o$9), this.name = e$4, this.value = r$12, this.keySpan = s$8, this.valueSpan = i$18, this.valueTokens = a$13, this.type = "attribute";
	}
	visit(e$4, r$12) {
		return e$4.visitAttribute(this, r$12);
	}
	get nameSpan() {
		return this.keySpan;
	}
}, Y$3 = class extends ae$3 {
	constructor(e$4, r$12, n$8, s$8, i$18, a$13 = null, o$9 = null, u$14) {
		super(s$8, u$14), this.name = e$4, this.attrs = r$12, this.children = n$8, this.startSourceSpan = i$18, this.endSourceSpan = a$13, this.nameSpan = o$9, this.type = "element";
	}
	visit(e$4, r$12) {
		return e$4.visitElement(this, r$12);
	}
}, Kt$2 = class {
	constructor(e$4, r$12) {
		this.value = e$4, this.sourceSpan = r$12, this.type = "comment";
	}
	visit(e$4, r$12) {
		return e$4.visitComment(this, r$12);
	}
}, Xt$3 = class {
	constructor(e$4, r$12) {
		this.value = e$4, this.sourceSpan = r$12, this.type = "docType";
	}
	visit(e$4, r$12) {
		return e$4.visitDocType(this, r$12);
	}
}, ee$2 = class extends ae$3 {
	constructor(e$4, r$12, n$8, s$8, i$18, a$13, o$9 = null, u$14) {
		super(s$8, u$14), this.name = e$4, this.parameters = r$12, this.children = n$8, this.nameSpan = i$18, this.startSourceSpan = a$13, this.endSourceSpan = o$9, this.type = "block";
	}
	visit(e$4, r$12) {
		return e$4.visitBlock(this, r$12);
	}
}, ht$2 = class {
	constructor(e$4, r$12) {
		this.expression = e$4, this.sourceSpan = r$12, this.type = "blockParameter", this.startSourceSpan = null, this.endSourceSpan = null;
	}
	visit(e$4, r$12) {
		return e$4.visitBlockParameter(this, r$12);
	}
}, mt$3 = class {
	constructor(e$4, r$12, n$8, s$8, i$18) {
		this.name = e$4, this.value = r$12, this.sourceSpan = n$8, this.nameSpan = s$8, this.valueSpan = i$18, this.type = "letDeclaration", this.startSourceSpan = null, this.endSourceSpan = null;
	}
	visit(e$4, r$12) {
		return e$4.visitLetDeclaration(this, r$12);
	}
};
function Qt$1(t$13, e$4, r$12 = null) {
	let n$8 = [], s$8 = t$13.visit ? (i$18) => t$13.visit(i$18, r$12) || i$18.visit(t$13, r$12) : (i$18) => i$18.visit(t$13, r$12);
	return e$4.forEach((i$18) => {
		let a$13 = s$8(i$18);
		a$13 && n$8.push(a$13);
	}), n$8;
}
var ft$2 = class {
	constructor() {}
	visitElement(e$4, r$12) {
		this.visitChildren(r$12, (n$8) => {
			n$8(e$4.attrs), n$8(e$4.children);
		});
	}
	visitAttribute(e$4, r$12) {}
	visitText(e$4, r$12) {}
	visitCdata(e$4, r$12) {}
	visitComment(e$4, r$12) {}
	visitDocType(e$4, r$12) {}
	visitExpansion(e$4, r$12) {
		return this.visitChildren(r$12, (n$8) => {
			n$8(e$4.cases);
		});
	}
	visitExpansionCase(e$4, r$12) {}
	visitBlock(e$4, r$12) {
		this.visitChildren(r$12, (n$8) => {
			n$8(e$4.parameters), n$8(e$4.children);
		});
	}
	visitBlockParameter(e$4, r$12) {}
	visitLetDeclaration(e$4, r$12) {}
	visitChildren(e$4, r$12) {
		let n$8 = [], s$8 = this;
		function i$18(a$13) {
			a$13 && n$8.push(Qt$1(s$8, a$13, e$4));
		}
		return r$12(i$18), Array.prototype.concat.apply([], n$8);
	}
};
var Ve$3 = {
	AElig: "Æ",
	AMP: "&",
	amp: "&",
	Aacute: "Á",
	Abreve: "Ă",
	Acirc: "Â",
	Acy: "А",
	Afr: "𝔄",
	Agrave: "À",
	Alpha: "Α",
	Amacr: "Ā",
	And: "⩓",
	Aogon: "Ą",
	Aopf: "𝔸",
	ApplyFunction: "⁡",
	af: "⁡",
	Aring: "Å",
	angst: "Å",
	Ascr: "𝒜",
	Assign: "≔",
	colone: "≔",
	coloneq: "≔",
	Atilde: "Ã",
	Auml: "Ä",
	Backslash: "∖",
	setminus: "∖",
	setmn: "∖",
	smallsetminus: "∖",
	ssetmn: "∖",
	Barv: "⫧",
	Barwed: "⌆",
	doublebarwedge: "⌆",
	Bcy: "Б",
	Because: "∵",
	becaus: "∵",
	because: "∵",
	Bernoullis: "ℬ",
	Bscr: "ℬ",
	bernou: "ℬ",
	Beta: "Β",
	Bfr: "𝔅",
	Bopf: "𝔹",
	Breve: "˘",
	breve: "˘",
	Bumpeq: "≎",
	HumpDownHump: "≎",
	bump: "≎",
	CHcy: "Ч",
	COPY: "©",
	copy: "©",
	Cacute: "Ć",
	Cap: "⋒",
	CapitalDifferentialD: "ⅅ",
	DD: "ⅅ",
	Cayleys: "ℭ",
	Cfr: "ℭ",
	Ccaron: "Č",
	Ccedil: "Ç",
	Ccirc: "Ĉ",
	Cconint: "∰",
	Cdot: "Ċ",
	Cedilla: "¸",
	cedil: "¸",
	CenterDot: "·",
	centerdot: "·",
	middot: "·",
	Chi: "Χ",
	CircleDot: "⊙",
	odot: "⊙",
	CircleMinus: "⊖",
	ominus: "⊖",
	CirclePlus: "⊕",
	oplus: "⊕",
	CircleTimes: "⊗",
	otimes: "⊗",
	ClockwiseContourIntegral: "∲",
	cwconint: "∲",
	CloseCurlyDoubleQuote: "”",
	rdquo: "”",
	rdquor: "”",
	CloseCurlyQuote: "’",
	rsquo: "’",
	rsquor: "’",
	Colon: "∷",
	Proportion: "∷",
	Colone: "⩴",
	Congruent: "≡",
	equiv: "≡",
	Conint: "∯",
	DoubleContourIntegral: "∯",
	ContourIntegral: "∮",
	conint: "∮",
	oint: "∮",
	Copf: "ℂ",
	complexes: "ℂ",
	Coproduct: "∐",
	coprod: "∐",
	CounterClockwiseContourIntegral: "∳",
	awconint: "∳",
	Cross: "⨯",
	Cscr: "𝒞",
	Cup: "⋓",
	CupCap: "≍",
	asympeq: "≍",
	DDotrahd: "⤑",
	DJcy: "Ђ",
	DScy: "Ѕ",
	DZcy: "Џ",
	Dagger: "‡",
	ddagger: "‡",
	Darr: "↡",
	Dashv: "⫤",
	DoubleLeftTee: "⫤",
	Dcaron: "Ď",
	Dcy: "Д",
	Del: "∇",
	nabla: "∇",
	Delta: "Δ",
	Dfr: "𝔇",
	DiacriticalAcute: "´",
	acute: "´",
	DiacriticalDot: "˙",
	dot: "˙",
	DiacriticalDoubleAcute: "˝",
	dblac: "˝",
	DiacriticalGrave: "`",
	grave: "`",
	DiacriticalTilde: "˜",
	tilde: "˜",
	Diamond: "⋄",
	diam: "⋄",
	diamond: "⋄",
	DifferentialD: "ⅆ",
	dd: "ⅆ",
	Dopf: "𝔻",
	Dot: "¨",
	DoubleDot: "¨",
	die: "¨",
	uml: "¨",
	DotDot: "⃜",
	DotEqual: "≐",
	doteq: "≐",
	esdot: "≐",
	DoubleDownArrow: "⇓",
	Downarrow: "⇓",
	dArr: "⇓",
	DoubleLeftArrow: "⇐",
	Leftarrow: "⇐",
	lArr: "⇐",
	DoubleLeftRightArrow: "⇔",
	Leftrightarrow: "⇔",
	hArr: "⇔",
	iff: "⇔",
	DoubleLongLeftArrow: "⟸",
	Longleftarrow: "⟸",
	xlArr: "⟸",
	DoubleLongLeftRightArrow: "⟺",
	Longleftrightarrow: "⟺",
	xhArr: "⟺",
	DoubleLongRightArrow: "⟹",
	Longrightarrow: "⟹",
	xrArr: "⟹",
	DoubleRightArrow: "⇒",
	Implies: "⇒",
	Rightarrow: "⇒",
	rArr: "⇒",
	DoubleRightTee: "⊨",
	vDash: "⊨",
	DoubleUpArrow: "⇑",
	Uparrow: "⇑",
	uArr: "⇑",
	DoubleUpDownArrow: "⇕",
	Updownarrow: "⇕",
	vArr: "⇕",
	DoubleVerticalBar: "∥",
	par: "∥",
	parallel: "∥",
	shortparallel: "∥",
	spar: "∥",
	DownArrow: "↓",
	ShortDownArrow: "↓",
	darr: "↓",
	downarrow: "↓",
	DownArrowBar: "⤓",
	DownArrowUpArrow: "⇵",
	duarr: "⇵",
	DownBreve: "̑",
	DownLeftRightVector: "⥐",
	DownLeftTeeVector: "⥞",
	DownLeftVector: "↽",
	leftharpoondown: "↽",
	lhard: "↽",
	DownLeftVectorBar: "⥖",
	DownRightTeeVector: "⥟",
	DownRightVector: "⇁",
	rhard: "⇁",
	rightharpoondown: "⇁",
	DownRightVectorBar: "⥗",
	DownTee: "⊤",
	top: "⊤",
	DownTeeArrow: "↧",
	mapstodown: "↧",
	Dscr: "𝒟",
	Dstrok: "Đ",
	ENG: "Ŋ",
	ETH: "Ð",
	Eacute: "É",
	Ecaron: "Ě",
	Ecirc: "Ê",
	Ecy: "Э",
	Edot: "Ė",
	Efr: "𝔈",
	Egrave: "È",
	Element: "∈",
	in: "∈",
	isin: "∈",
	isinv: "∈",
	Emacr: "Ē",
	EmptySmallSquare: "◻",
	EmptyVerySmallSquare: "▫",
	Eogon: "Ę",
	Eopf: "𝔼",
	Epsilon: "Ε",
	Equal: "⩵",
	EqualTilde: "≂",
	eqsim: "≂",
	esim: "≂",
	Equilibrium: "⇌",
	rightleftharpoons: "⇌",
	rlhar: "⇌",
	Escr: "ℰ",
	expectation: "ℰ",
	Esim: "⩳",
	Eta: "Η",
	Euml: "Ë",
	Exists: "∃",
	exist: "∃",
	ExponentialE: "ⅇ",
	ee: "ⅇ",
	exponentiale: "ⅇ",
	Fcy: "Ф",
	Ffr: "𝔉",
	FilledSmallSquare: "◼",
	FilledVerySmallSquare: "▪",
	blacksquare: "▪",
	squarf: "▪",
	squf: "▪",
	Fopf: "𝔽",
	ForAll: "∀",
	forall: "∀",
	Fouriertrf: "ℱ",
	Fscr: "ℱ",
	GJcy: "Ѓ",
	GT: ">",
	gt: ">",
	Gamma: "Γ",
	Gammad: "Ϝ",
	Gbreve: "Ğ",
	Gcedil: "Ģ",
	Gcirc: "Ĝ",
	Gcy: "Г",
	Gdot: "Ġ",
	Gfr: "𝔊",
	Gg: "⋙",
	ggg: "⋙",
	Gopf: "𝔾",
	GreaterEqual: "≥",
	ge: "≥",
	geq: "≥",
	GreaterEqualLess: "⋛",
	gel: "⋛",
	gtreqless: "⋛",
	GreaterFullEqual: "≧",
	gE: "≧",
	geqq: "≧",
	GreaterGreater: "⪢",
	GreaterLess: "≷",
	gl: "≷",
	gtrless: "≷",
	GreaterSlantEqual: "⩾",
	geqslant: "⩾",
	ges: "⩾",
	GreaterTilde: "≳",
	gsim: "≳",
	gtrsim: "≳",
	Gscr: "𝒢",
	Gt: "≫",
	NestedGreaterGreater: "≫",
	gg: "≫",
	HARDcy: "Ъ",
	Hacek: "ˇ",
	caron: "ˇ",
	Hat: "^",
	Hcirc: "Ĥ",
	Hfr: "ℌ",
	Poincareplane: "ℌ",
	HilbertSpace: "ℋ",
	Hscr: "ℋ",
	hamilt: "ℋ",
	Hopf: "ℍ",
	quaternions: "ℍ",
	HorizontalLine: "─",
	boxh: "─",
	Hstrok: "Ħ",
	HumpEqual: "≏",
	bumpe: "≏",
	bumpeq: "≏",
	IEcy: "Е",
	IJlig: "Ĳ",
	IOcy: "Ё",
	Iacute: "Í",
	Icirc: "Î",
	Icy: "И",
	Idot: "İ",
	Ifr: "ℑ",
	Im: "ℑ",
	image: "ℑ",
	imagpart: "ℑ",
	Igrave: "Ì",
	Imacr: "Ī",
	ImaginaryI: "ⅈ",
	ii: "ⅈ",
	Int: "∬",
	Integral: "∫",
	int: "∫",
	Intersection: "⋂",
	bigcap: "⋂",
	xcap: "⋂",
	InvisibleComma: "⁣",
	ic: "⁣",
	InvisibleTimes: "⁢",
	it: "⁢",
	Iogon: "Į",
	Iopf: "𝕀",
	Iota: "Ι",
	Iscr: "ℐ",
	imagline: "ℐ",
	Itilde: "Ĩ",
	Iukcy: "І",
	Iuml: "Ï",
	Jcirc: "Ĵ",
	Jcy: "Й",
	Jfr: "𝔍",
	Jopf: "𝕁",
	Jscr: "𝒥",
	Jsercy: "Ј",
	Jukcy: "Є",
	KHcy: "Х",
	KJcy: "Ќ",
	Kappa: "Κ",
	Kcedil: "Ķ",
	Kcy: "К",
	Kfr: "𝔎",
	Kopf: "𝕂",
	Kscr: "𝒦",
	LJcy: "Љ",
	LT: "<",
	lt: "<",
	Lacute: "Ĺ",
	Lambda: "Λ",
	Lang: "⟪",
	Laplacetrf: "ℒ",
	Lscr: "ℒ",
	lagran: "ℒ",
	Larr: "↞",
	twoheadleftarrow: "↞",
	Lcaron: "Ľ",
	Lcedil: "Ļ",
	Lcy: "Л",
	LeftAngleBracket: "⟨",
	lang: "⟨",
	langle: "⟨",
	LeftArrow: "←",
	ShortLeftArrow: "←",
	larr: "←",
	leftarrow: "←",
	slarr: "←",
	LeftArrowBar: "⇤",
	larrb: "⇤",
	LeftArrowRightArrow: "⇆",
	leftrightarrows: "⇆",
	lrarr: "⇆",
	LeftCeiling: "⌈",
	lceil: "⌈",
	LeftDoubleBracket: "⟦",
	lobrk: "⟦",
	LeftDownTeeVector: "⥡",
	LeftDownVector: "⇃",
	dharl: "⇃",
	downharpoonleft: "⇃",
	LeftDownVectorBar: "⥙",
	LeftFloor: "⌊",
	lfloor: "⌊",
	LeftRightArrow: "↔",
	harr: "↔",
	leftrightarrow: "↔",
	LeftRightVector: "⥎",
	LeftTee: "⊣",
	dashv: "⊣",
	LeftTeeArrow: "↤",
	mapstoleft: "↤",
	LeftTeeVector: "⥚",
	LeftTriangle: "⊲",
	vartriangleleft: "⊲",
	vltri: "⊲",
	LeftTriangleBar: "⧏",
	LeftTriangleEqual: "⊴",
	ltrie: "⊴",
	trianglelefteq: "⊴",
	LeftUpDownVector: "⥑",
	LeftUpTeeVector: "⥠",
	LeftUpVector: "↿",
	uharl: "↿",
	upharpoonleft: "↿",
	LeftUpVectorBar: "⥘",
	LeftVector: "↼",
	leftharpoonup: "↼",
	lharu: "↼",
	LeftVectorBar: "⥒",
	LessEqualGreater: "⋚",
	leg: "⋚",
	lesseqgtr: "⋚",
	LessFullEqual: "≦",
	lE: "≦",
	leqq: "≦",
	LessGreater: "≶",
	lessgtr: "≶",
	lg: "≶",
	LessLess: "⪡",
	LessSlantEqual: "⩽",
	leqslant: "⩽",
	les: "⩽",
	LessTilde: "≲",
	lesssim: "≲",
	lsim: "≲",
	Lfr: "𝔏",
	Ll: "⋘",
	Lleftarrow: "⇚",
	lAarr: "⇚",
	Lmidot: "Ŀ",
	LongLeftArrow: "⟵",
	longleftarrow: "⟵",
	xlarr: "⟵",
	LongLeftRightArrow: "⟷",
	longleftrightarrow: "⟷",
	xharr: "⟷",
	LongRightArrow: "⟶",
	longrightarrow: "⟶",
	xrarr: "⟶",
	Lopf: "𝕃",
	LowerLeftArrow: "↙",
	swarr: "↙",
	swarrow: "↙",
	LowerRightArrow: "↘",
	searr: "↘",
	searrow: "↘",
	Lsh: "↰",
	lsh: "↰",
	Lstrok: "Ł",
	Lt: "≪",
	NestedLessLess: "≪",
	ll: "≪",
	Map: "⤅",
	Mcy: "М",
	MediumSpace: " ",
	Mellintrf: "ℳ",
	Mscr: "ℳ",
	phmmat: "ℳ",
	Mfr: "𝔐",
	MinusPlus: "∓",
	mnplus: "∓",
	mp: "∓",
	Mopf: "𝕄",
	Mu: "Μ",
	NJcy: "Њ",
	Nacute: "Ń",
	Ncaron: "Ň",
	Ncedil: "Ņ",
	Ncy: "Н",
	NegativeMediumSpace: "​",
	NegativeThickSpace: "​",
	NegativeThinSpace: "​",
	NegativeVeryThinSpace: "​",
	ZeroWidthSpace: "​",
	NewLine: `
`,
	Nfr: "𝔑",
	NoBreak: "⁠",
	NonBreakingSpace: "\xA0",
	nbsp: "\xA0",
	Nopf: "ℕ",
	naturals: "ℕ",
	Not: "⫬",
	NotCongruent: "≢",
	nequiv: "≢",
	NotCupCap: "≭",
	NotDoubleVerticalBar: "∦",
	npar: "∦",
	nparallel: "∦",
	nshortparallel: "∦",
	nspar: "∦",
	NotElement: "∉",
	notin: "∉",
	notinva: "∉",
	NotEqual: "≠",
	ne: "≠",
	NotEqualTilde: "≂̸",
	nesim: "≂̸",
	NotExists: "∄",
	nexist: "∄",
	nexists: "∄",
	NotGreater: "≯",
	ngt: "≯",
	ngtr: "≯",
	NotGreaterEqual: "≱",
	nge: "≱",
	ngeq: "≱",
	NotGreaterFullEqual: "≧̸",
	ngE: "≧̸",
	ngeqq: "≧̸",
	NotGreaterGreater: "≫̸",
	nGtv: "≫̸",
	NotGreaterLess: "≹",
	ntgl: "≹",
	NotGreaterSlantEqual: "⩾̸",
	ngeqslant: "⩾̸",
	nges: "⩾̸",
	NotGreaterTilde: "≵",
	ngsim: "≵",
	NotHumpDownHump: "≎̸",
	nbump: "≎̸",
	NotHumpEqual: "≏̸",
	nbumpe: "≏̸",
	NotLeftTriangle: "⋪",
	nltri: "⋪",
	ntriangleleft: "⋪",
	NotLeftTriangleBar: "⧏̸",
	NotLeftTriangleEqual: "⋬",
	nltrie: "⋬",
	ntrianglelefteq: "⋬",
	NotLess: "≮",
	nless: "≮",
	nlt: "≮",
	NotLessEqual: "≰",
	nle: "≰",
	nleq: "≰",
	NotLessGreater: "≸",
	ntlg: "≸",
	NotLessLess: "≪̸",
	nLtv: "≪̸",
	NotLessSlantEqual: "⩽̸",
	nleqslant: "⩽̸",
	nles: "⩽̸",
	NotLessTilde: "≴",
	nlsim: "≴",
	NotNestedGreaterGreater: "⪢̸",
	NotNestedLessLess: "⪡̸",
	NotPrecedes: "⊀",
	npr: "⊀",
	nprec: "⊀",
	NotPrecedesEqual: "⪯̸",
	npre: "⪯̸",
	npreceq: "⪯̸",
	NotPrecedesSlantEqual: "⋠",
	nprcue: "⋠",
	NotReverseElement: "∌",
	notni: "∌",
	notniva: "∌",
	NotRightTriangle: "⋫",
	nrtri: "⋫",
	ntriangleright: "⋫",
	NotRightTriangleBar: "⧐̸",
	NotRightTriangleEqual: "⋭",
	nrtrie: "⋭",
	ntrianglerighteq: "⋭",
	NotSquareSubset: "⊏̸",
	NotSquareSubsetEqual: "⋢",
	nsqsube: "⋢",
	NotSquareSuperset: "⊐̸",
	NotSquareSupersetEqual: "⋣",
	nsqsupe: "⋣",
	NotSubset: "⊂⃒",
	nsubset: "⊂⃒",
	vnsub: "⊂⃒",
	NotSubsetEqual: "⊈",
	nsube: "⊈",
	nsubseteq: "⊈",
	NotSucceeds: "⊁",
	nsc: "⊁",
	nsucc: "⊁",
	NotSucceedsEqual: "⪰̸",
	nsce: "⪰̸",
	nsucceq: "⪰̸",
	NotSucceedsSlantEqual: "⋡",
	nsccue: "⋡",
	NotSucceedsTilde: "≿̸",
	NotSuperset: "⊃⃒",
	nsupset: "⊃⃒",
	vnsup: "⊃⃒",
	NotSupersetEqual: "⊉",
	nsupe: "⊉",
	nsupseteq: "⊉",
	NotTilde: "≁",
	nsim: "≁",
	NotTildeEqual: "≄",
	nsime: "≄",
	nsimeq: "≄",
	NotTildeFullEqual: "≇",
	ncong: "≇",
	NotTildeTilde: "≉",
	nap: "≉",
	napprox: "≉",
	NotVerticalBar: "∤",
	nmid: "∤",
	nshortmid: "∤",
	nsmid: "∤",
	Nscr: "𝒩",
	Ntilde: "Ñ",
	Nu: "Ν",
	OElig: "Œ",
	Oacute: "Ó",
	Ocirc: "Ô",
	Ocy: "О",
	Odblac: "Ő",
	Ofr: "𝔒",
	Ograve: "Ò",
	Omacr: "Ō",
	Omega: "Ω",
	ohm: "Ω",
	Omicron: "Ο",
	Oopf: "𝕆",
	OpenCurlyDoubleQuote: "“",
	ldquo: "“",
	OpenCurlyQuote: "‘",
	lsquo: "‘",
	Or: "⩔",
	Oscr: "𝒪",
	Oslash: "Ø",
	Otilde: "Õ",
	Otimes: "⨷",
	Ouml: "Ö",
	OverBar: "‾",
	oline: "‾",
	OverBrace: "⏞",
	OverBracket: "⎴",
	tbrk: "⎴",
	OverParenthesis: "⏜",
	PartialD: "∂",
	part: "∂",
	Pcy: "П",
	Pfr: "𝔓",
	Phi: "Φ",
	Pi: "Π",
	PlusMinus: "±",
	plusmn: "±",
	pm: "±",
	Popf: "ℙ",
	primes: "ℙ",
	Pr: "⪻",
	Precedes: "≺",
	pr: "≺",
	prec: "≺",
	PrecedesEqual: "⪯",
	pre: "⪯",
	preceq: "⪯",
	PrecedesSlantEqual: "≼",
	prcue: "≼",
	preccurlyeq: "≼",
	PrecedesTilde: "≾",
	precsim: "≾",
	prsim: "≾",
	Prime: "″",
	Product: "∏",
	prod: "∏",
	Proportional: "∝",
	prop: "∝",
	propto: "∝",
	varpropto: "∝",
	vprop: "∝",
	Pscr: "𝒫",
	Psi: "Ψ",
	QUOT: "\"",
	quot: "\"",
	Qfr: "𝔔",
	Qopf: "ℚ",
	rationals: "ℚ",
	Qscr: "𝒬",
	RBarr: "⤐",
	drbkarow: "⤐",
	REG: "®",
	circledR: "®",
	reg: "®",
	Racute: "Ŕ",
	Rang: "⟫",
	Rarr: "↠",
	twoheadrightarrow: "↠",
	Rarrtl: "⤖",
	Rcaron: "Ř",
	Rcedil: "Ŗ",
	Rcy: "Р",
	Re: "ℜ",
	Rfr: "ℜ",
	real: "ℜ",
	realpart: "ℜ",
	ReverseElement: "∋",
	SuchThat: "∋",
	ni: "∋",
	niv: "∋",
	ReverseEquilibrium: "⇋",
	leftrightharpoons: "⇋",
	lrhar: "⇋",
	ReverseUpEquilibrium: "⥯",
	duhar: "⥯",
	Rho: "Ρ",
	RightAngleBracket: "⟩",
	rang: "⟩",
	rangle: "⟩",
	RightArrow: "→",
	ShortRightArrow: "→",
	rarr: "→",
	rightarrow: "→",
	srarr: "→",
	RightArrowBar: "⇥",
	rarrb: "⇥",
	RightArrowLeftArrow: "⇄",
	rightleftarrows: "⇄",
	rlarr: "⇄",
	RightCeiling: "⌉",
	rceil: "⌉",
	RightDoubleBracket: "⟧",
	robrk: "⟧",
	RightDownTeeVector: "⥝",
	RightDownVector: "⇂",
	dharr: "⇂",
	downharpoonright: "⇂",
	RightDownVectorBar: "⥕",
	RightFloor: "⌋",
	rfloor: "⌋",
	RightTee: "⊢",
	vdash: "⊢",
	RightTeeArrow: "↦",
	map: "↦",
	mapsto: "↦",
	RightTeeVector: "⥛",
	RightTriangle: "⊳",
	vartriangleright: "⊳",
	vrtri: "⊳",
	RightTriangleBar: "⧐",
	RightTriangleEqual: "⊵",
	rtrie: "⊵",
	trianglerighteq: "⊵",
	RightUpDownVector: "⥏",
	RightUpTeeVector: "⥜",
	RightUpVector: "↾",
	uharr: "↾",
	upharpoonright: "↾",
	RightUpVectorBar: "⥔",
	RightVector: "⇀",
	rharu: "⇀",
	rightharpoonup: "⇀",
	RightVectorBar: "⥓",
	Ropf: "ℝ",
	reals: "ℝ",
	RoundImplies: "⥰",
	Rrightarrow: "⇛",
	rAarr: "⇛",
	Rscr: "ℛ",
	realine: "ℛ",
	Rsh: "↱",
	rsh: "↱",
	RuleDelayed: "⧴",
	SHCHcy: "Щ",
	SHcy: "Ш",
	SOFTcy: "Ь",
	Sacute: "Ś",
	Sc: "⪼",
	Scaron: "Š",
	Scedil: "Ş",
	Scirc: "Ŝ",
	Scy: "С",
	Sfr: "𝔖",
	ShortUpArrow: "↑",
	UpArrow: "↑",
	uarr: "↑",
	uparrow: "↑",
	Sigma: "Σ",
	SmallCircle: "∘",
	compfn: "∘",
	Sopf: "𝕊",
	Sqrt: "√",
	radic: "√",
	Square: "□",
	squ: "□",
	square: "□",
	SquareIntersection: "⊓",
	sqcap: "⊓",
	SquareSubset: "⊏",
	sqsub: "⊏",
	sqsubset: "⊏",
	SquareSubsetEqual: "⊑",
	sqsube: "⊑",
	sqsubseteq: "⊑",
	SquareSuperset: "⊐",
	sqsup: "⊐",
	sqsupset: "⊐",
	SquareSupersetEqual: "⊒",
	sqsupe: "⊒",
	sqsupseteq: "⊒",
	SquareUnion: "⊔",
	sqcup: "⊔",
	Sscr: "𝒮",
	Star: "⋆",
	sstarf: "⋆",
	Sub: "⋐",
	Subset: "⋐",
	SubsetEqual: "⊆",
	sube: "⊆",
	subseteq: "⊆",
	Succeeds: "≻",
	sc: "≻",
	succ: "≻",
	SucceedsEqual: "⪰",
	sce: "⪰",
	succeq: "⪰",
	SucceedsSlantEqual: "≽",
	sccue: "≽",
	succcurlyeq: "≽",
	SucceedsTilde: "≿",
	scsim: "≿",
	succsim: "≿",
	Sum: "∑",
	sum: "∑",
	Sup: "⋑",
	Supset: "⋑",
	Superset: "⊃",
	sup: "⊃",
	supset: "⊃",
	SupersetEqual: "⊇",
	supe: "⊇",
	supseteq: "⊇",
	THORN: "Þ",
	TRADE: "™",
	trade: "™",
	TSHcy: "Ћ",
	TScy: "Ц",
	Tab: "	",
	Tau: "Τ",
	Tcaron: "Ť",
	Tcedil: "Ţ",
	Tcy: "Т",
	Tfr: "𝔗",
	Therefore: "∴",
	there4: "∴",
	therefore: "∴",
	Theta: "Θ",
	ThickSpace: "  ",
	ThinSpace: " ",
	thinsp: " ",
	Tilde: "∼",
	sim: "∼",
	thicksim: "∼",
	thksim: "∼",
	TildeEqual: "≃",
	sime: "≃",
	simeq: "≃",
	TildeFullEqual: "≅",
	cong: "≅",
	TildeTilde: "≈",
	ap: "≈",
	approx: "≈",
	asymp: "≈",
	thickapprox: "≈",
	thkap: "≈",
	Topf: "𝕋",
	TripleDot: "⃛",
	tdot: "⃛",
	Tscr: "𝒯",
	Tstrok: "Ŧ",
	Uacute: "Ú",
	Uarr: "↟",
	Uarrocir: "⥉",
	Ubrcy: "Ў",
	Ubreve: "Ŭ",
	Ucirc: "Û",
	Ucy: "У",
	Udblac: "Ű",
	Ufr: "𝔘",
	Ugrave: "Ù",
	Umacr: "Ū",
	UnderBar: "_",
	lowbar: "_",
	UnderBrace: "⏟",
	UnderBracket: "⎵",
	bbrk: "⎵",
	UnderParenthesis: "⏝",
	Union: "⋃",
	bigcup: "⋃",
	xcup: "⋃",
	UnionPlus: "⊎",
	uplus: "⊎",
	Uogon: "Ų",
	Uopf: "𝕌",
	UpArrowBar: "⤒",
	UpArrowDownArrow: "⇅",
	udarr: "⇅",
	UpDownArrow: "↕",
	updownarrow: "↕",
	varr: "↕",
	UpEquilibrium: "⥮",
	udhar: "⥮",
	UpTee: "⊥",
	bot: "⊥",
	bottom: "⊥",
	perp: "⊥",
	UpTeeArrow: "↥",
	mapstoup: "↥",
	UpperLeftArrow: "↖",
	nwarr: "↖",
	nwarrow: "↖",
	UpperRightArrow: "↗",
	nearr: "↗",
	nearrow: "↗",
	Upsi: "ϒ",
	upsih: "ϒ",
	Upsilon: "Υ",
	Uring: "Ů",
	Uscr: "𝒰",
	Utilde: "Ũ",
	Uuml: "Ü",
	VDash: "⊫",
	Vbar: "⫫",
	Vcy: "В",
	Vdash: "⊩",
	Vdashl: "⫦",
	Vee: "⋁",
	bigvee: "⋁",
	xvee: "⋁",
	Verbar: "‖",
	Vert: "‖",
	VerticalBar: "∣",
	mid: "∣",
	shortmid: "∣",
	smid: "∣",
	VerticalLine: "|",
	verbar: "|",
	vert: "|",
	VerticalSeparator: "❘",
	VerticalTilde: "≀",
	wr: "≀",
	wreath: "≀",
	VeryThinSpace: " ",
	hairsp: " ",
	Vfr: "𝔙",
	Vopf: "𝕍",
	Vscr: "𝒱",
	Vvdash: "⊪",
	Wcirc: "Ŵ",
	Wedge: "⋀",
	bigwedge: "⋀",
	xwedge: "⋀",
	Wfr: "𝔚",
	Wopf: "𝕎",
	Wscr: "𝒲",
	Xfr: "𝔛",
	Xi: "Ξ",
	Xopf: "𝕏",
	Xscr: "𝒳",
	YAcy: "Я",
	YIcy: "Ї",
	YUcy: "Ю",
	Yacute: "Ý",
	Ycirc: "Ŷ",
	Ycy: "Ы",
	Yfr: "𝔜",
	Yopf: "𝕐",
	Yscr: "𝒴",
	Yuml: "Ÿ",
	ZHcy: "Ж",
	Zacute: "Ź",
	Zcaron: "Ž",
	Zcy: "З",
	Zdot: "Ż",
	Zeta: "Ζ",
	Zfr: "ℨ",
	zeetrf: "ℨ",
	Zopf: "ℤ",
	integers: "ℤ",
	Zscr: "𝒵",
	aacute: "á",
	abreve: "ă",
	ac: "∾",
	mstpos: "∾",
	acE: "∾̳",
	acd: "∿",
	acirc: "â",
	acy: "а",
	aelig: "æ",
	afr: "𝔞",
	agrave: "à",
	alefsym: "ℵ",
	aleph: "ℵ",
	alpha: "α",
	amacr: "ā",
	amalg: "⨿",
	and: "∧",
	wedge: "∧",
	andand: "⩕",
	andd: "⩜",
	andslope: "⩘",
	andv: "⩚",
	ang: "∠",
	angle: "∠",
	ange: "⦤",
	angmsd: "∡",
	measuredangle: "∡",
	angmsdaa: "⦨",
	angmsdab: "⦩",
	angmsdac: "⦪",
	angmsdad: "⦫",
	angmsdae: "⦬",
	angmsdaf: "⦭",
	angmsdag: "⦮",
	angmsdah: "⦯",
	angrt: "∟",
	angrtvb: "⊾",
	angrtvbd: "⦝",
	angsph: "∢",
	angzarr: "⍼",
	aogon: "ą",
	aopf: "𝕒",
	apE: "⩰",
	apacir: "⩯",
	ape: "≊",
	approxeq: "≊",
	apid: "≋",
	apos: "'",
	aring: "å",
	ascr: "𝒶",
	ast: "*",
	midast: "*",
	atilde: "ã",
	auml: "ä",
	awint: "⨑",
	bNot: "⫭",
	backcong: "≌",
	bcong: "≌",
	backepsilon: "϶",
	bepsi: "϶",
	backprime: "‵",
	bprime: "‵",
	backsim: "∽",
	bsim: "∽",
	backsimeq: "⋍",
	bsime: "⋍",
	barvee: "⊽",
	barwed: "⌅",
	barwedge: "⌅",
	bbrktbrk: "⎶",
	bcy: "б",
	bdquo: "„",
	ldquor: "„",
	bemptyv: "⦰",
	beta: "β",
	beth: "ℶ",
	between: "≬",
	twixt: "≬",
	bfr: "𝔟",
	bigcirc: "◯",
	xcirc: "◯",
	bigodot: "⨀",
	xodot: "⨀",
	bigoplus: "⨁",
	xoplus: "⨁",
	bigotimes: "⨂",
	xotime: "⨂",
	bigsqcup: "⨆",
	xsqcup: "⨆",
	bigstar: "★",
	starf: "★",
	bigtriangledown: "▽",
	xdtri: "▽",
	bigtriangleup: "△",
	xutri: "△",
	biguplus: "⨄",
	xuplus: "⨄",
	bkarow: "⤍",
	rbarr: "⤍",
	blacklozenge: "⧫",
	lozf: "⧫",
	blacktriangle: "▴",
	utrif: "▴",
	blacktriangledown: "▾",
	dtrif: "▾",
	blacktriangleleft: "◂",
	ltrif: "◂",
	blacktriangleright: "▸",
	rtrif: "▸",
	blank: "␣",
	blk12: "▒",
	blk14: "░",
	blk34: "▓",
	block: "█",
	bne: "=⃥",
	bnequiv: "≡⃥",
	bnot: "⌐",
	bopf: "𝕓",
	bowtie: "⋈",
	boxDL: "╗",
	boxDR: "╔",
	boxDl: "╖",
	boxDr: "╓",
	boxH: "═",
	boxHD: "╦",
	boxHU: "╩",
	boxHd: "╤",
	boxHu: "╧",
	boxUL: "╝",
	boxUR: "╚",
	boxUl: "╜",
	boxUr: "╙",
	boxV: "║",
	boxVH: "╬",
	boxVL: "╣",
	boxVR: "╠",
	boxVh: "╫",
	boxVl: "╢",
	boxVr: "╟",
	boxbox: "⧉",
	boxdL: "╕",
	boxdR: "╒",
	boxdl: "┐",
	boxdr: "┌",
	boxhD: "╥",
	boxhU: "╨",
	boxhd: "┬",
	boxhu: "┴",
	boxminus: "⊟",
	minusb: "⊟",
	boxplus: "⊞",
	plusb: "⊞",
	boxtimes: "⊠",
	timesb: "⊠",
	boxuL: "╛",
	boxuR: "╘",
	boxul: "┘",
	boxur: "└",
	boxv: "│",
	boxvH: "╪",
	boxvL: "╡",
	boxvR: "╞",
	boxvh: "┼",
	boxvl: "┤",
	boxvr: "├",
	brvbar: "¦",
	bscr: "𝒷",
	bsemi: "⁏",
	bsol: "\\",
	bsolb: "⧅",
	bsolhsub: "⟈",
	bull: "•",
	bullet: "•",
	bumpE: "⪮",
	cacute: "ć",
	cap: "∩",
	capand: "⩄",
	capbrcup: "⩉",
	capcap: "⩋",
	capcup: "⩇",
	capdot: "⩀",
	caps: "∩︀",
	caret: "⁁",
	ccaps: "⩍",
	ccaron: "č",
	ccedil: "ç",
	ccirc: "ĉ",
	ccups: "⩌",
	ccupssm: "⩐",
	cdot: "ċ",
	cemptyv: "⦲",
	cent: "¢",
	cfr: "𝔠",
	chcy: "ч",
	check: "✓",
	checkmark: "✓",
	chi: "χ",
	cir: "○",
	cirE: "⧃",
	circ: "ˆ",
	circeq: "≗",
	cire: "≗",
	circlearrowleft: "↺",
	olarr: "↺",
	circlearrowright: "↻",
	orarr: "↻",
	circledS: "Ⓢ",
	oS: "Ⓢ",
	circledast: "⊛",
	oast: "⊛",
	circledcirc: "⊚",
	ocir: "⊚",
	circleddash: "⊝",
	odash: "⊝",
	cirfnint: "⨐",
	cirmid: "⫯",
	cirscir: "⧂",
	clubs: "♣",
	clubsuit: "♣",
	colon: ":",
	comma: ",",
	commat: "@",
	comp: "∁",
	complement: "∁",
	congdot: "⩭",
	copf: "𝕔",
	copysr: "℗",
	crarr: "↵",
	cross: "✗",
	cscr: "𝒸",
	csub: "⫏",
	csube: "⫑",
	csup: "⫐",
	csupe: "⫒",
	ctdot: "⋯",
	cudarrl: "⤸",
	cudarrr: "⤵",
	cuepr: "⋞",
	curlyeqprec: "⋞",
	cuesc: "⋟",
	curlyeqsucc: "⋟",
	cularr: "↶",
	curvearrowleft: "↶",
	cularrp: "⤽",
	cup: "∪",
	cupbrcap: "⩈",
	cupcap: "⩆",
	cupcup: "⩊",
	cupdot: "⊍",
	cupor: "⩅",
	cups: "∪︀",
	curarr: "↷",
	curvearrowright: "↷",
	curarrm: "⤼",
	curlyvee: "⋎",
	cuvee: "⋎",
	curlywedge: "⋏",
	cuwed: "⋏",
	curren: "¤",
	cwint: "∱",
	cylcty: "⌭",
	dHar: "⥥",
	dagger: "†",
	daleth: "ℸ",
	dash: "‐",
	hyphen: "‐",
	dbkarow: "⤏",
	rBarr: "⤏",
	dcaron: "ď",
	dcy: "д",
	ddarr: "⇊",
	downdownarrows: "⇊",
	ddotseq: "⩷",
	eDDot: "⩷",
	deg: "°",
	delta: "δ",
	demptyv: "⦱",
	dfisht: "⥿",
	dfr: "𝔡",
	diamondsuit: "♦",
	diams: "♦",
	digamma: "ϝ",
	gammad: "ϝ",
	disin: "⋲",
	div: "÷",
	divide: "÷",
	divideontimes: "⋇",
	divonx: "⋇",
	djcy: "ђ",
	dlcorn: "⌞",
	llcorner: "⌞",
	dlcrop: "⌍",
	dollar: "$",
	dopf: "𝕕",
	doteqdot: "≑",
	eDot: "≑",
	dotminus: "∸",
	minusd: "∸",
	dotplus: "∔",
	plusdo: "∔",
	dotsquare: "⊡",
	sdotb: "⊡",
	drcorn: "⌟",
	lrcorner: "⌟",
	drcrop: "⌌",
	dscr: "𝒹",
	dscy: "ѕ",
	dsol: "⧶",
	dstrok: "đ",
	dtdot: "⋱",
	dtri: "▿",
	triangledown: "▿",
	dwangle: "⦦",
	dzcy: "џ",
	dzigrarr: "⟿",
	eacute: "é",
	easter: "⩮",
	ecaron: "ě",
	ecir: "≖",
	eqcirc: "≖",
	ecirc: "ê",
	ecolon: "≕",
	eqcolon: "≕",
	ecy: "э",
	edot: "ė",
	efDot: "≒",
	fallingdotseq: "≒",
	efr: "𝔢",
	eg: "⪚",
	egrave: "è",
	egs: "⪖",
	eqslantgtr: "⪖",
	egsdot: "⪘",
	el: "⪙",
	elinters: "⏧",
	ell: "ℓ",
	els: "⪕",
	eqslantless: "⪕",
	elsdot: "⪗",
	emacr: "ē",
	empty: "∅",
	emptyset: "∅",
	emptyv: "∅",
	varnothing: "∅",
	emsp13: " ",
	emsp14: " ",
	emsp: " ",
	eng: "ŋ",
	ensp: " ",
	eogon: "ę",
	eopf: "𝕖",
	epar: "⋕",
	eparsl: "⧣",
	eplus: "⩱",
	epsi: "ε",
	epsilon: "ε",
	epsiv: "ϵ",
	straightepsilon: "ϵ",
	varepsilon: "ϵ",
	equals: "=",
	equest: "≟",
	questeq: "≟",
	equivDD: "⩸",
	eqvparsl: "⧥",
	erDot: "≓",
	risingdotseq: "≓",
	erarr: "⥱",
	escr: "ℯ",
	eta: "η",
	eth: "ð",
	euml: "ë",
	euro: "€",
	excl: "!",
	fcy: "ф",
	female: "♀",
	ffilig: "ﬃ",
	fflig: "ﬀ",
	ffllig: "ﬄ",
	ffr: "𝔣",
	filig: "ﬁ",
	fjlig: "fj",
	flat: "♭",
	fllig: "ﬂ",
	fltns: "▱",
	fnof: "ƒ",
	fopf: "𝕗",
	fork: "⋔",
	pitchfork: "⋔",
	forkv: "⫙",
	fpartint: "⨍",
	frac12: "½",
	half: "½",
	frac13: "⅓",
	frac14: "¼",
	frac15: "⅕",
	frac16: "⅙",
	frac18: "⅛",
	frac23: "⅔",
	frac25: "⅖",
	frac34: "¾",
	frac35: "⅗",
	frac38: "⅜",
	frac45: "⅘",
	frac56: "⅚",
	frac58: "⅝",
	frac78: "⅞",
	frasl: "⁄",
	frown: "⌢",
	sfrown: "⌢",
	fscr: "𝒻",
	gEl: "⪌",
	gtreqqless: "⪌",
	gacute: "ǵ",
	gamma: "γ",
	gap: "⪆",
	gtrapprox: "⪆",
	gbreve: "ğ",
	gcirc: "ĝ",
	gcy: "г",
	gdot: "ġ",
	gescc: "⪩",
	gesdot: "⪀",
	gesdoto: "⪂",
	gesdotol: "⪄",
	gesl: "⋛︀",
	gesles: "⪔",
	gfr: "𝔤",
	gimel: "ℷ",
	gjcy: "ѓ",
	glE: "⪒",
	gla: "⪥",
	glj: "⪤",
	gnE: "≩",
	gneqq: "≩",
	gnap: "⪊",
	gnapprox: "⪊",
	gne: "⪈",
	gneq: "⪈",
	gnsim: "⋧",
	gopf: "𝕘",
	gscr: "ℊ",
	gsime: "⪎",
	gsiml: "⪐",
	gtcc: "⪧",
	gtcir: "⩺",
	gtdot: "⋗",
	gtrdot: "⋗",
	gtlPar: "⦕",
	gtquest: "⩼",
	gtrarr: "⥸",
	gvertneqq: "≩︀",
	gvnE: "≩︀",
	hardcy: "ъ",
	harrcir: "⥈",
	harrw: "↭",
	leftrightsquigarrow: "↭",
	hbar: "ℏ",
	hslash: "ℏ",
	planck: "ℏ",
	plankv: "ℏ",
	hcirc: "ĥ",
	hearts: "♥",
	heartsuit: "♥",
	hellip: "…",
	mldr: "…",
	hercon: "⊹",
	hfr: "𝔥",
	hksearow: "⤥",
	searhk: "⤥",
	hkswarow: "⤦",
	swarhk: "⤦",
	hoarr: "⇿",
	homtht: "∻",
	hookleftarrow: "↩",
	larrhk: "↩",
	hookrightarrow: "↪",
	rarrhk: "↪",
	hopf: "𝕙",
	horbar: "―",
	hscr: "𝒽",
	hstrok: "ħ",
	hybull: "⁃",
	iacute: "í",
	icirc: "î",
	icy: "и",
	iecy: "е",
	iexcl: "¡",
	ifr: "𝔦",
	igrave: "ì",
	iiiint: "⨌",
	qint: "⨌",
	iiint: "∭",
	tint: "∭",
	iinfin: "⧜",
	iiota: "℩",
	ijlig: "ĳ",
	imacr: "ī",
	imath: "ı",
	inodot: "ı",
	imof: "⊷",
	imped: "Ƶ",
	incare: "℅",
	infin: "∞",
	infintie: "⧝",
	intcal: "⊺",
	intercal: "⊺",
	intlarhk: "⨗",
	intprod: "⨼",
	iprod: "⨼",
	iocy: "ё",
	iogon: "į",
	iopf: "𝕚",
	iota: "ι",
	iquest: "¿",
	iscr: "𝒾",
	isinE: "⋹",
	isindot: "⋵",
	isins: "⋴",
	isinsv: "⋳",
	itilde: "ĩ",
	iukcy: "і",
	iuml: "ï",
	jcirc: "ĵ",
	jcy: "й",
	jfr: "𝔧",
	jmath: "ȷ",
	jopf: "𝕛",
	jscr: "𝒿",
	jsercy: "ј",
	jukcy: "є",
	kappa: "κ",
	kappav: "ϰ",
	varkappa: "ϰ",
	kcedil: "ķ",
	kcy: "к",
	kfr: "𝔨",
	kgreen: "ĸ",
	khcy: "х",
	kjcy: "ќ",
	kopf: "𝕜",
	kscr: "𝓀",
	lAtail: "⤛",
	lBarr: "⤎",
	lEg: "⪋",
	lesseqqgtr: "⪋",
	lHar: "⥢",
	lacute: "ĺ",
	laemptyv: "⦴",
	lambda: "λ",
	langd: "⦑",
	lap: "⪅",
	lessapprox: "⪅",
	laquo: "«",
	larrbfs: "⤟",
	larrfs: "⤝",
	larrlp: "↫",
	looparrowleft: "↫",
	larrpl: "⤹",
	larrsim: "⥳",
	larrtl: "↢",
	leftarrowtail: "↢",
	lat: "⪫",
	latail: "⤙",
	late: "⪭",
	lates: "⪭︀",
	lbarr: "⤌",
	lbbrk: "❲",
	lbrace: "{",
	lcub: "{",
	lbrack: "[",
	lsqb: "[",
	lbrke: "⦋",
	lbrksld: "⦏",
	lbrkslu: "⦍",
	lcaron: "ľ",
	lcedil: "ļ",
	lcy: "л",
	ldca: "⤶",
	ldrdhar: "⥧",
	ldrushar: "⥋",
	ldsh: "↲",
	le: "≤",
	leq: "≤",
	leftleftarrows: "⇇",
	llarr: "⇇",
	leftthreetimes: "⋋",
	lthree: "⋋",
	lescc: "⪨",
	lesdot: "⩿",
	lesdoto: "⪁",
	lesdotor: "⪃",
	lesg: "⋚︀",
	lesges: "⪓",
	lessdot: "⋖",
	ltdot: "⋖",
	lfisht: "⥼",
	lfr: "𝔩",
	lgE: "⪑",
	lharul: "⥪",
	lhblk: "▄",
	ljcy: "љ",
	llhard: "⥫",
	lltri: "◺",
	lmidot: "ŀ",
	lmoust: "⎰",
	lmoustache: "⎰",
	lnE: "≨",
	lneqq: "≨",
	lnap: "⪉",
	lnapprox: "⪉",
	lne: "⪇",
	lneq: "⪇",
	lnsim: "⋦",
	loang: "⟬",
	loarr: "⇽",
	longmapsto: "⟼",
	xmap: "⟼",
	looparrowright: "↬",
	rarrlp: "↬",
	lopar: "⦅",
	lopf: "𝕝",
	loplus: "⨭",
	lotimes: "⨴",
	lowast: "∗",
	loz: "◊",
	lozenge: "◊",
	lpar: "(",
	lparlt: "⦓",
	lrhard: "⥭",
	lrm: "‎",
	lrtri: "⊿",
	lsaquo: "‹",
	lscr: "𝓁",
	lsime: "⪍",
	lsimg: "⪏",
	lsquor: "‚",
	sbquo: "‚",
	lstrok: "ł",
	ltcc: "⪦",
	ltcir: "⩹",
	ltimes: "⋉",
	ltlarr: "⥶",
	ltquest: "⩻",
	ltrPar: "⦖",
	ltri: "◃",
	triangleleft: "◃",
	lurdshar: "⥊",
	luruhar: "⥦",
	lvertneqq: "≨︀",
	lvnE: "≨︀",
	mDDot: "∺",
	macr: "¯",
	strns: "¯",
	male: "♂",
	malt: "✠",
	maltese: "✠",
	marker: "▮",
	mcomma: "⨩",
	mcy: "м",
	mdash: "—",
	mfr: "𝔪",
	mho: "℧",
	micro: "µ",
	midcir: "⫰",
	minus: "−",
	minusdu: "⨪",
	mlcp: "⫛",
	models: "⊧",
	mopf: "𝕞",
	mscr: "𝓂",
	mu: "μ",
	multimap: "⊸",
	mumap: "⊸",
	nGg: "⋙̸",
	nGt: "≫⃒",
	nLeftarrow: "⇍",
	nlArr: "⇍",
	nLeftrightarrow: "⇎",
	nhArr: "⇎",
	nLl: "⋘̸",
	nLt: "≪⃒",
	nRightarrow: "⇏",
	nrArr: "⇏",
	nVDash: "⊯",
	nVdash: "⊮",
	nacute: "ń",
	nang: "∠⃒",
	napE: "⩰̸",
	napid: "≋̸",
	napos: "ŉ",
	natur: "♮",
	natural: "♮",
	ncap: "⩃",
	ncaron: "ň",
	ncedil: "ņ",
	ncongdot: "⩭̸",
	ncup: "⩂",
	ncy: "н",
	ndash: "–",
	neArr: "⇗",
	nearhk: "⤤",
	nedot: "≐̸",
	nesear: "⤨",
	toea: "⤨",
	nfr: "𝔫",
	nharr: "↮",
	nleftrightarrow: "↮",
	nhpar: "⫲",
	nis: "⋼",
	nisd: "⋺",
	njcy: "њ",
	nlE: "≦̸",
	nleqq: "≦̸",
	nlarr: "↚",
	nleftarrow: "↚",
	nldr: "‥",
	nopf: "𝕟",
	not: "¬",
	notinE: "⋹̸",
	notindot: "⋵̸",
	notinvb: "⋷",
	notinvc: "⋶",
	notnivb: "⋾",
	notnivc: "⋽",
	nparsl: "⫽⃥",
	npart: "∂̸",
	npolint: "⨔",
	nrarr: "↛",
	nrightarrow: "↛",
	nrarrc: "⤳̸",
	nrarrw: "↝̸",
	nscr: "𝓃",
	nsub: "⊄",
	nsubE: "⫅̸",
	nsubseteqq: "⫅̸",
	nsup: "⊅",
	nsupE: "⫆̸",
	nsupseteqq: "⫆̸",
	ntilde: "ñ",
	nu: "ν",
	num: "#",
	numero: "№",
	numsp: " ",
	nvDash: "⊭",
	nvHarr: "⤄",
	nvap: "≍⃒",
	nvdash: "⊬",
	nvge: "≥⃒",
	nvgt: ">⃒",
	nvinfin: "⧞",
	nvlArr: "⤂",
	nvle: "≤⃒",
	nvlt: "<⃒",
	nvltrie: "⊴⃒",
	nvrArr: "⤃",
	nvrtrie: "⊵⃒",
	nvsim: "∼⃒",
	nwArr: "⇖",
	nwarhk: "⤣",
	nwnear: "⤧",
	oacute: "ó",
	ocirc: "ô",
	ocy: "о",
	odblac: "ő",
	odiv: "⨸",
	odsold: "⦼",
	oelig: "œ",
	ofcir: "⦿",
	ofr: "𝔬",
	ogon: "˛",
	ograve: "ò",
	ogt: "⧁",
	ohbar: "⦵",
	olcir: "⦾",
	olcross: "⦻",
	olt: "⧀",
	omacr: "ō",
	omega: "ω",
	omicron: "ο",
	omid: "⦶",
	oopf: "𝕠",
	opar: "⦷",
	operp: "⦹",
	or: "∨",
	vee: "∨",
	ord: "⩝",
	order: "ℴ",
	orderof: "ℴ",
	oscr: "ℴ",
	ordf: "ª",
	ordm: "º",
	origof: "⊶",
	oror: "⩖",
	orslope: "⩗",
	orv: "⩛",
	oslash: "ø",
	osol: "⊘",
	otilde: "õ",
	otimesas: "⨶",
	ouml: "ö",
	ovbar: "⌽",
	para: "¶",
	parsim: "⫳",
	parsl: "⫽",
	pcy: "п",
	percnt: "%",
	period: ".",
	permil: "‰",
	pertenk: "‱",
	pfr: "𝔭",
	phi: "φ",
	phiv: "ϕ",
	straightphi: "ϕ",
	varphi: "ϕ",
	phone: "☎",
	pi: "π",
	piv: "ϖ",
	varpi: "ϖ",
	planckh: "ℎ",
	plus: "+",
	plusacir: "⨣",
	pluscir: "⨢",
	plusdu: "⨥",
	pluse: "⩲",
	plussim: "⨦",
	plustwo: "⨧",
	pointint: "⨕",
	popf: "𝕡",
	pound: "£",
	prE: "⪳",
	prap: "⪷",
	precapprox: "⪷",
	precnapprox: "⪹",
	prnap: "⪹",
	precneqq: "⪵",
	prnE: "⪵",
	precnsim: "⋨",
	prnsim: "⋨",
	prime: "′",
	profalar: "⌮",
	profline: "⌒",
	profsurf: "⌓",
	prurel: "⊰",
	pscr: "𝓅",
	psi: "ψ",
	puncsp: " ",
	qfr: "𝔮",
	qopf: "𝕢",
	qprime: "⁗",
	qscr: "𝓆",
	quatint: "⨖",
	quest: "?",
	rAtail: "⤜",
	rHar: "⥤",
	race: "∽̱",
	racute: "ŕ",
	raemptyv: "⦳",
	rangd: "⦒",
	range: "⦥",
	raquo: "»",
	rarrap: "⥵",
	rarrbfs: "⤠",
	rarrc: "⤳",
	rarrfs: "⤞",
	rarrpl: "⥅",
	rarrsim: "⥴",
	rarrtl: "↣",
	rightarrowtail: "↣",
	rarrw: "↝",
	rightsquigarrow: "↝",
	ratail: "⤚",
	ratio: "∶",
	rbbrk: "❳",
	rbrace: "}",
	rcub: "}",
	rbrack: "]",
	rsqb: "]",
	rbrke: "⦌",
	rbrksld: "⦎",
	rbrkslu: "⦐",
	rcaron: "ř",
	rcedil: "ŗ",
	rcy: "р",
	rdca: "⤷",
	rdldhar: "⥩",
	rdsh: "↳",
	rect: "▭",
	rfisht: "⥽",
	rfr: "𝔯",
	rharul: "⥬",
	rho: "ρ",
	rhov: "ϱ",
	varrho: "ϱ",
	rightrightarrows: "⇉",
	rrarr: "⇉",
	rightthreetimes: "⋌",
	rthree: "⋌",
	ring: "˚",
	rlm: "‏",
	rmoust: "⎱",
	rmoustache: "⎱",
	rnmid: "⫮",
	roang: "⟭",
	roarr: "⇾",
	ropar: "⦆",
	ropf: "𝕣",
	roplus: "⨮",
	rotimes: "⨵",
	rpar: ")",
	rpargt: "⦔",
	rppolint: "⨒",
	rsaquo: "›",
	rscr: "𝓇",
	rtimes: "⋊",
	rtri: "▹",
	triangleright: "▹",
	rtriltri: "⧎",
	ruluhar: "⥨",
	rx: "℞",
	sacute: "ś",
	scE: "⪴",
	scap: "⪸",
	succapprox: "⪸",
	scaron: "š",
	scedil: "ş",
	scirc: "ŝ",
	scnE: "⪶",
	succneqq: "⪶",
	scnap: "⪺",
	succnapprox: "⪺",
	scnsim: "⋩",
	succnsim: "⋩",
	scpolint: "⨓",
	scy: "с",
	sdot: "⋅",
	sdote: "⩦",
	seArr: "⇘",
	sect: "§",
	semi: ";",
	seswar: "⤩",
	tosa: "⤩",
	sext: "✶",
	sfr: "𝔰",
	sharp: "♯",
	shchcy: "щ",
	shcy: "ш",
	shy: "­",
	sigma: "σ",
	sigmaf: "ς",
	sigmav: "ς",
	varsigma: "ς",
	simdot: "⩪",
	simg: "⪞",
	simgE: "⪠",
	siml: "⪝",
	simlE: "⪟",
	simne: "≆",
	simplus: "⨤",
	simrarr: "⥲",
	smashp: "⨳",
	smeparsl: "⧤",
	smile: "⌣",
	ssmile: "⌣",
	smt: "⪪",
	smte: "⪬",
	smtes: "⪬︀",
	softcy: "ь",
	sol: "/",
	solb: "⧄",
	solbar: "⌿",
	sopf: "𝕤",
	spades: "♠",
	spadesuit: "♠",
	sqcaps: "⊓︀",
	sqcups: "⊔︀",
	sscr: "𝓈",
	star: "☆",
	sub: "⊂",
	subset: "⊂",
	subE: "⫅",
	subseteqq: "⫅",
	subdot: "⪽",
	subedot: "⫃",
	submult: "⫁",
	subnE: "⫋",
	subsetneqq: "⫋",
	subne: "⊊",
	subsetneq: "⊊",
	subplus: "⪿",
	subrarr: "⥹",
	subsim: "⫇",
	subsub: "⫕",
	subsup: "⫓",
	sung: "♪",
	sup1: "¹",
	sup2: "²",
	sup3: "³",
	supE: "⫆",
	supseteqq: "⫆",
	supdot: "⪾",
	supdsub: "⫘",
	supedot: "⫄",
	suphsol: "⟉",
	suphsub: "⫗",
	suplarr: "⥻",
	supmult: "⫂",
	supnE: "⫌",
	supsetneqq: "⫌",
	supne: "⊋",
	supsetneq: "⊋",
	supplus: "⫀",
	supsim: "⫈",
	supsub: "⫔",
	supsup: "⫖",
	swArr: "⇙",
	swnwar: "⤪",
	szlig: "ß",
	target: "⌖",
	tau: "τ",
	tcaron: "ť",
	tcedil: "ţ",
	tcy: "т",
	telrec: "⌕",
	tfr: "𝔱",
	theta: "θ",
	thetasym: "ϑ",
	thetav: "ϑ",
	vartheta: "ϑ",
	thorn: "þ",
	times: "×",
	timesbar: "⨱",
	timesd: "⨰",
	topbot: "⌶",
	topcir: "⫱",
	topf: "𝕥",
	topfork: "⫚",
	tprime: "‴",
	triangle: "▵",
	utri: "▵",
	triangleq: "≜",
	trie: "≜",
	tridot: "◬",
	triminus: "⨺",
	triplus: "⨹",
	trisb: "⧍",
	tritime: "⨻",
	trpezium: "⏢",
	tscr: "𝓉",
	tscy: "ц",
	tshcy: "ћ",
	tstrok: "ŧ",
	uHar: "⥣",
	uacute: "ú",
	ubrcy: "ў",
	ubreve: "ŭ",
	ucirc: "û",
	ucy: "у",
	udblac: "ű",
	ufisht: "⥾",
	ufr: "𝔲",
	ugrave: "ù",
	uhblk: "▀",
	ulcorn: "⌜",
	ulcorner: "⌜",
	ulcrop: "⌏",
	ultri: "◸",
	umacr: "ū",
	uogon: "ų",
	uopf: "𝕦",
	upsi: "υ",
	upsilon: "υ",
	upuparrows: "⇈",
	uuarr: "⇈",
	urcorn: "⌝",
	urcorner: "⌝",
	urcrop: "⌎",
	uring: "ů",
	urtri: "◹",
	uscr: "𝓊",
	utdot: "⋰",
	utilde: "ũ",
	uuml: "ü",
	uwangle: "⦧",
	vBar: "⫨",
	vBarv: "⫩",
	vangrt: "⦜",
	varsubsetneq: "⊊︀",
	vsubne: "⊊︀",
	varsubsetneqq: "⫋︀",
	vsubnE: "⫋︀",
	varsupsetneq: "⊋︀",
	vsupne: "⊋︀",
	varsupsetneqq: "⫌︀",
	vsupnE: "⫌︀",
	vcy: "в",
	veebar: "⊻",
	veeeq: "≚",
	vellip: "⋮",
	vfr: "𝔳",
	vopf: "𝕧",
	vscr: "𝓋",
	vzigzag: "⦚",
	wcirc: "ŵ",
	wedbar: "⩟",
	wedgeq: "≙",
	weierp: "℘",
	wp: "℘",
	wfr: "𝔴",
	wopf: "𝕨",
	wscr: "𝓌",
	xfr: "𝔵",
	xi: "ξ",
	xnis: "⋻",
	xopf: "𝕩",
	xscr: "𝓍",
	yacute: "ý",
	yacy: "я",
	ycirc: "ŷ",
	ycy: "ы",
	yen: "¥",
	yfr: "𝔶",
	yicy: "ї",
	yopf: "𝕪",
	yscr: "𝓎",
	yucy: "ю",
	yuml: "ÿ",
	zacute: "ź",
	zcaron: "ž",
	zcy: "з",
	zdot: "ż",
	zeta: "ζ",
	zfr: "𝔷",
	zhcy: "ж",
	zigrarr: "⇝",
	zopf: "𝕫",
	zscr: "𝓏",
	zwj: "‍",
	zwnj: "‌"
};
Ve$3.ngsp = "";
var go$2 = [
	/@/,
	/^\s*$/,
	/[<>]/,
	/^[{}]$/,
	/&(#|[a-z])/i,
	/^\/\//
];
function Xs$2(t$13, e$4) {
	if (e$4 != null && !(Array.isArray(e$4) && e$4.length == 2)) throw new Error(`Expected '${t$13}' to be an array, [start, end].`);
	if (e$4 != null) {
		let r$12 = e$4[0], n$8 = e$4[1];
		go$2.forEach((s$8) => {
			if (s$8.test(r$12) || s$8.test(n$8)) throw new Error(`['${r$12}', '${n$8}'] contains unusable interpolation symbol.`);
		});
	}
}
var $r$4 = class t$13 {
	static fromArray(e$4) {
		return e$4 ? (Xs$2("interpolation", e$4), new t$13(e$4[0], e$4[1])) : Or$3;
	}
	constructor(e$4, r$12) {
		this.start = e$4, this.end = r$12;
	}
}, Or$3 = new $r$4("{{", "}}");
var gt$4 = class extends Oe$3 {
	constructor(e$4, r$12, n$8) {
		super(n$8, e$4), this.tokenType = r$12;
	}
}, Ur$3 = class {
	constructor(e$4, r$12, n$8) {
		this.tokens = e$4, this.errors = r$12, this.nonNormalizedIcuExpressions = n$8;
	}
};
function li$3(t$13, e$4, r$12, n$8 = {}) {
	let s$8 = new Wr$3(new ve$3(t$13, e$4), r$12, n$8);
	return s$8.tokenize(), new Ur$3(Vo$2(s$8.tokens), s$8.errors, s$8.nonNormalizedIcuExpressions);
}
var Io$2 = /\r\n?/g;
function Ue$2(t$13) {
	return `Unexpected character "${t$13 === 0 ? "EOF" : String.fromCharCode(t$13)}"`;
}
function ti$4(t$13) {
	return `Unknown entity "${t$13}" - use the "&#<decimal>;" or  "&#x<hex>;" syntax`;
}
function Ro$3(t$13, e$4) {
	return `Unable to parse entity "${e$4}" - ${t$13} character reference entities must end with ";"`;
}
var rr$3;
(function(t$13) {
	t$13.HEX = "hexadecimal", t$13.DEC = "decimal";
})(rr$3 || (rr$3 = {}));
var Ct$4 = class {
	constructor(e$4) {
		this.error = e$4;
	}
}, Wr$3 = class {
	constructor(e$4, r$12, n$8) {
		this._getTagContentType = r$12, this._currentTokenStart = null, this._currentTokenType = null, this._expansionCaseStack = [], this._inInterpolation = !1, this._fullNameStack = [], this.tokens = [], this.errors = [], this.nonNormalizedIcuExpressions = [], this._tokenizeIcu = n$8.tokenizeExpansionForms || !1, this._interpolationConfig = n$8.interpolationConfig || Or$3, this._leadingTriviaCodePoints = n$8.leadingTriviaChars && n$8.leadingTriviaChars.map((i$18) => i$18.codePointAt(0) || 0), this._canSelfClose = n$8.canSelfClose || !1, this._allowHtmComponentClosingTags = n$8.allowHtmComponentClosingTags || !1;
		let s$8 = n$8.range || {
			endPos: e$4.content.length,
			startPos: 0,
			startLine: 0,
			startCol: 0
		};
		this._cursor = n$8.escapedString ? new Gr$3(e$4, s$8) : new nr$4(e$4, s$8), this._preserveLineEndings = n$8.preserveLineEndings || !1, this._i18nNormalizeLineEndingsInICUs = n$8.i18nNormalizeLineEndingsInICUs || !1, this._tokenizeBlocks = n$8.tokenizeBlocks ?? !0, this._tokenizeLet = n$8.tokenizeLet ?? !0;
		try {
			this._cursor.init();
		} catch (i$18) {
			this.handleError(i$18);
		}
	}
	_processCarriageReturns(e$4) {
		return this._preserveLineEndings ? e$4 : e$4.replace(Io$2, `
`);
	}
	tokenize() {
		for (; this._cursor.peek() !== 0;) {
			let e$4 = this._cursor.clone();
			try {
				if (this._attemptCharCode(60)) if (this._attemptCharCode(33)) this._attemptStr("[CDATA[") ? this._consumeCdata(e$4) : this._attemptStr("--") ? this._consumeComment(e$4) : this._attemptStrCaseInsensitive("doctype") ? this._consumeDocType(e$4) : this._consumeBogusComment(e$4);
				else if (this._attemptCharCode(47)) this._consumeTagClose(e$4);
				else {
					let r$12 = this._cursor.clone();
					this._attemptCharCode(63) ? (this._cursor = r$12, this._consumeBogusComment(e$4)) : this._consumeTagOpen(e$4);
				}
				else this._tokenizeLet && this._cursor.peek() === 64 && !this._inInterpolation && this._attemptStr("@let") ? this._consumeLetDeclaration(e$4) : this._tokenizeBlocks && this._attemptCharCode(64) ? this._consumeBlockStart(e$4) : this._tokenizeBlocks && !this._inInterpolation && !this._isInExpansionCase() && !this._isInExpansionForm() && this._attemptCharCode(125) ? this._consumeBlockEnd(e$4) : this._tokenizeIcu && this._tokenizeExpansionForm() || this._consumeWithInterpolation(5, 8, () => this._isTextEnd(), () => this._isTagStart());
			} catch (r$12) {
				this.handleError(r$12);
			}
		}
		this._beginToken(34), this._endToken([]);
	}
	_getBlockName() {
		let e$4 = !1, r$12 = this._cursor.clone();
		return this._attemptCharCodeUntilFn((n$8) => ut$2(n$8) ? !e$4 : si$3(n$8) ? (e$4 = !0, !1) : !0), this._cursor.getChars(r$12).trim();
	}
	_consumeBlockStart(e$4) {
		this._beginToken(25, e$4);
		let r$12 = this._endToken([this._getBlockName()]);
		if (this._cursor.peek() === 40) if (this._cursor.advance(), this._consumeBlockParameters(), this._attemptCharCodeUntilFn(b$5), this._attemptCharCode(41)) this._attemptCharCodeUntilFn(b$5);
		else {
			r$12.type = 29;
			return;
		}
		this._attemptCharCode(123) ? (this._beginToken(26), this._endToken([])) : r$12.type = 29;
	}
	_consumeBlockEnd(e$4) {
		this._beginToken(27, e$4), this._endToken([]);
	}
	_consumeBlockParameters() {
		for (this._attemptCharCodeUntilFn(ii$3); this._cursor.peek() !== 41 && this._cursor.peek() !== 0;) {
			this._beginToken(28);
			let e$4 = this._cursor.clone(), r$12 = null, n$8 = 0;
			for (; this._cursor.peek() !== 59 && this._cursor.peek() !== 0 || r$12 !== null;) {
				let s$8 = this._cursor.peek();
				if (s$8 === 92) this._cursor.advance();
				else if (s$8 === r$12) r$12 = null;
				else if (r$12 === null && Ot$3(s$8)) r$12 = s$8;
				else if (s$8 === 40 && r$12 === null) n$8++;
				else if (s$8 === 41 && r$12 === null) {
					if (n$8 === 0) break;
					n$8 > 0 && n$8--;
				}
				this._cursor.advance();
			}
			this._endToken([this._cursor.getChars(e$4)]), this._attemptCharCodeUntilFn(ii$3);
		}
	}
	_consumeLetDeclaration(e$4) {
		if (this._beginToken(30, e$4), ut$2(this._cursor.peek())) this._attemptCharCodeUntilFn(b$5);
		else {
			let s$8 = this._endToken([this._cursor.getChars(e$4)]);
			s$8.type = 33;
			return;
		}
		let r$12 = this._endToken([this._getLetDeclarationName()]);
		if (this._attemptCharCodeUntilFn(b$5), !this._attemptCharCode(61)) {
			r$12.type = 33;
			return;
		}
		this._attemptCharCodeUntilFn((s$8) => b$5(s$8) && !$t$2(s$8)), this._consumeLetDeclarationValue(), this._cursor.peek() === 59 ? (this._beginToken(32), this._endToken([]), this._cursor.advance()) : (r$12.type = 33, r$12.sourceSpan = this._cursor.getSpan(e$4));
	}
	_getLetDeclarationName() {
		let e$4 = this._cursor.clone(), r$12 = !1;
		return this._attemptCharCodeUntilFn((n$8) => lt$2(n$8) || n$8 === 36 || n$8 === 95 || r$12 && Rt$3(n$8) ? (r$12 = !0, !1) : !0), this._cursor.getChars(e$4).trim();
	}
	_consumeLetDeclarationValue() {
		let e$4 = this._cursor.clone();
		for (this._beginToken(31, e$4); this._cursor.peek() !== 0;) {
			let r$12 = this._cursor.peek();
			if (r$12 === 59) break;
			Ot$3(r$12) && (this._cursor.advance(), this._attemptCharCodeUntilFn((n$8) => n$8 === 92 ? (this._cursor.advance(), !1) : n$8 === r$12)), this._cursor.advance();
		}
		this._endToken([this._cursor.getChars(e$4)]);
	}
	_tokenizeExpansionForm() {
		if (this.isExpansionFormStart()) return this._consumeExpansionFormStart(), !0;
		if (qo$1(this._cursor.peek()) && this._isInExpansionForm()) return this._consumeExpansionCaseStart(), !0;
		if (this._cursor.peek() === 125) {
			if (this._isInExpansionCase()) return this._consumeExpansionCaseEnd(), !0;
			if (this._isInExpansionForm()) return this._consumeExpansionFormEnd(), !0;
		}
		return !1;
	}
	_beginToken(e$4, r$12 = this._cursor.clone()) {
		this._currentTokenStart = r$12, this._currentTokenType = e$4;
	}
	_endToken(e$4, r$12) {
		if (this._currentTokenStart === null) throw new gt$4("Programming error - attempted to end a token when there was no start to the token", this._currentTokenType, this._cursor.getSpan(r$12));
		if (this._currentTokenType === null) throw new gt$4("Programming error - attempted to end a token which has no token type", null, this._cursor.getSpan(this._currentTokenStart));
		let n$8 = {
			type: this._currentTokenType,
			parts: e$4,
			sourceSpan: (r$12 ?? this._cursor).getSpan(this._currentTokenStart, this._leadingTriviaCodePoints)
		};
		return this.tokens.push(n$8), this._currentTokenStart = null, this._currentTokenType = null, n$8;
	}
	_createError(e$4, r$12) {
		this._isInExpansionForm() && (e$4 += ` (Do you have an unescaped "{" in your template? Use "{{ '{' }}") to escape it.)`);
		let n$8 = new gt$4(e$4, this._currentTokenType, r$12);
		return this._currentTokenStart = null, this._currentTokenType = null, new Ct$4(n$8);
	}
	handleError(e$4) {
		if (e$4 instanceof St$2 && (e$4 = this._createError(e$4.msg, this._cursor.getSpan(e$4.cursor))), e$4 instanceof Ct$4) this.errors.push(e$4.error);
		else throw e$4;
	}
	_attemptCharCode(e$4) {
		return this._cursor.peek() === e$4 ? (this._cursor.advance(), !0) : !1;
	}
	_attemptCharCodeCaseInsensitive(e$4) {
		return Ho$1(this._cursor.peek(), e$4) ? (this._cursor.advance(), !0) : !1;
	}
	_requireCharCode(e$4) {
		let r$12 = this._cursor.clone();
		if (!this._attemptCharCode(e$4)) throw this._createError(Ue$2(this._cursor.peek()), this._cursor.getSpan(r$12));
	}
	_attemptStr(e$4) {
		let r$12 = e$4.length;
		if (this._cursor.charsLeft() < r$12) return !1;
		let n$8 = this._cursor.clone();
		for (let s$8 = 0; s$8 < r$12; s$8++) if (!this._attemptCharCode(e$4.charCodeAt(s$8))) return this._cursor = n$8, !1;
		return !0;
	}
	_attemptStrCaseInsensitive(e$4) {
		for (let r$12 = 0; r$12 < e$4.length; r$12++) if (!this._attemptCharCodeCaseInsensitive(e$4.charCodeAt(r$12))) return !1;
		return !0;
	}
	_requireStr(e$4) {
		let r$12 = this._cursor.clone();
		if (!this._attemptStr(e$4)) throw this._createError(Ue$2(this._cursor.peek()), this._cursor.getSpan(r$12));
	}
	_requireStrCaseInsensitive(e$4) {
		let r$12 = this._cursor.clone();
		if (!this._attemptStrCaseInsensitive(e$4)) throw this._createError(Ue$2(this._cursor.peek()), this._cursor.getSpan(r$12));
	}
	_attemptCharCodeUntilFn(e$4) {
		for (; !e$4(this._cursor.peek());) this._cursor.advance();
	}
	_requireCharCodeUntilFn(e$4, r$12) {
		let n$8 = this._cursor.clone();
		if (this._attemptCharCodeUntilFn(e$4), this._cursor.diff(n$8) < r$12) throw this._createError(Ue$2(this._cursor.peek()), this._cursor.getSpan(n$8));
	}
	_attemptUntilChar(e$4) {
		for (; this._cursor.peek() !== e$4;) this._cursor.advance();
	}
	_readChar() {
		let e$4 = String.fromCodePoint(this._cursor.peek());
		return this._cursor.advance(), e$4;
	}
	_consumeEntity(e$4) {
		this._beginToken(9);
		let r$12 = this._cursor.clone();
		if (this._cursor.advance(), this._attemptCharCode(35)) {
			let n$8 = this._attemptCharCode(120) || this._attemptCharCode(88), s$8 = this._cursor.clone();
			if (this._attemptCharCodeUntilFn(Oo$2), this._cursor.peek() != 59) {
				this._cursor.advance();
				let a$13 = n$8 ? rr$3.HEX : rr$3.DEC;
				throw this._createError(Ro$3(a$13, this._cursor.getChars(r$12)), this._cursor.getSpan());
			}
			let i$18 = this._cursor.getChars(s$8);
			this._cursor.advance();
			try {
				let a$13 = parseInt(i$18, n$8 ? 16 : 10);
				this._endToken([String.fromCharCode(a$13), this._cursor.getChars(r$12)]);
			} catch {
				throw this._createError(ti$4(this._cursor.getChars(r$12)), this._cursor.getSpan());
			}
		} else {
			let n$8 = this._cursor.clone();
			if (this._attemptCharCodeUntilFn(Mo$1), this._cursor.peek() != 59) this._beginToken(e$4, r$12), this._cursor = n$8, this._endToken(["&"]);
			else {
				let s$8 = this._cursor.getChars(n$8);
				this._cursor.advance();
				let i$18 = Ve$3[s$8];
				if (!i$18) throw this._createError(ti$4(s$8), this._cursor.getSpan(r$12));
				this._endToken([i$18, `&${s$8};`]);
			}
		}
	}
	_consumeRawText(e$4, r$12) {
		this._beginToken(e$4 ? 6 : 7);
		let n$8 = [];
		for (;;) {
			let s$8 = this._cursor.clone(), i$18 = r$12();
			if (this._cursor = s$8, i$18) break;
			e$4 && this._cursor.peek() === 38 ? (this._endToken([this._processCarriageReturns(n$8.join(""))]), n$8.length = 0, this._consumeEntity(6), this._beginToken(6)) : n$8.push(this._readChar());
		}
		this._endToken([this._processCarriageReturns(n$8.join(""))]);
	}
	_consumeComment(e$4) {
		this._beginToken(10, e$4), this._endToken([]), this._consumeRawText(!1, () => this._attemptStr("-->")), this._beginToken(11), this._requireStr("-->"), this._endToken([]);
	}
	_consumeBogusComment(e$4) {
		this._beginToken(10, e$4), this._endToken([]), this._consumeRawText(!1, () => this._cursor.peek() === 62), this._beginToken(11), this._cursor.advance(), this._endToken([]);
	}
	_consumeCdata(e$4) {
		this._beginToken(12, e$4), this._endToken([]), this._consumeRawText(!1, () => this._attemptStr("]]>")), this._beginToken(13), this._requireStr("]]>"), this._endToken([]);
	}
	_consumeDocType(e$4) {
		this._beginToken(18, e$4), this._endToken([]), this._consumeRawText(!1, () => this._cursor.peek() === 62), this._beginToken(19), this._cursor.advance(), this._endToken([]);
	}
	_consumePrefixAndName() {
		let e$4 = this._cursor.clone(), r$12 = "";
		for (; this._cursor.peek() !== 58 && !$o$1(this._cursor.peek());) this._cursor.advance();
		let n$8;
		this._cursor.peek() === 58 ? (r$12 = this._cursor.getChars(e$4), this._cursor.advance(), n$8 = this._cursor.clone()) : n$8 = e$4, this._requireCharCodeUntilFn(ri$4, r$12 === "" ? 0 : 1);
		let s$8 = this._cursor.getChars(n$8);
		return [r$12, s$8];
	}
	_consumeTagOpen(e$4) {
		let r$12, n$8, s$8, i$18 = [];
		try {
			if (!lt$2(this._cursor.peek())) throw this._createError(Ue$2(this._cursor.peek()), this._cursor.getSpan(e$4));
			for (s$8 = this._consumeTagOpenStart(e$4), n$8 = s$8.parts[0], r$12 = s$8.parts[1], this._attemptCharCodeUntilFn(b$5); this._cursor.peek() !== 47 && this._cursor.peek() !== 62 && this._cursor.peek() !== 60 && this._cursor.peek() !== 0;) {
				let [o$9, u$14] = this._consumeAttributeName();
				if (this._attemptCharCodeUntilFn(b$5), this._attemptCharCode(61)) {
					this._attemptCharCodeUntilFn(b$5);
					let p$2 = this._consumeAttributeValue();
					i$18.push({
						prefix: o$9,
						name: u$14,
						value: p$2
					});
				} else i$18.push({
					prefix: o$9,
					name: u$14
				});
				this._attemptCharCodeUntilFn(b$5);
			}
			this._consumeTagOpenEnd();
		} catch (o$9) {
			if (o$9 instanceof Ct$4) {
				s$8 ? s$8.type = 4 : (this._beginToken(5, e$4), this._endToken(["<"]));
				return;
			}
			throw o$9;
		}
		if (this._canSelfClose && this.tokens[this.tokens.length - 1].type === 2) return;
		let a$13 = this._getTagContentType(r$12, n$8, this._fullNameStack.length > 0, i$18);
		this._handleFullNameStackForTagOpen(n$8, r$12), a$13 === N$3.RAW_TEXT ? this._consumeRawTextWithTagClose(n$8, r$12, !1) : a$13 === N$3.ESCAPABLE_RAW_TEXT && this._consumeRawTextWithTagClose(n$8, r$12, !0);
	}
	_consumeRawTextWithTagClose(e$4, r$12, n$8) {
		this._consumeRawText(n$8, () => !this._attemptCharCode(60) || !this._attemptCharCode(47) || (this._attemptCharCodeUntilFn(b$5), !this._attemptStrCaseInsensitive(e$4 ? `${e$4}:${r$12}` : r$12)) ? !1 : (this._attemptCharCodeUntilFn(b$5), this._attemptCharCode(62))), this._beginToken(3), this._requireCharCodeUntilFn((s$8) => s$8 === 62, 3), this._cursor.advance(), this._endToken([e$4, r$12]), this._handleFullNameStackForTagClose(e$4, r$12);
	}
	_consumeTagOpenStart(e$4) {
		this._beginToken(0, e$4);
		let r$12 = this._consumePrefixAndName();
		return this._endToken(r$12);
	}
	_consumeAttributeName() {
		let e$4 = this._cursor.peek();
		if (e$4 === 39 || e$4 === 34) throw this._createError(Ue$2(e$4), this._cursor.getSpan());
		this._beginToken(14);
		let r$12 = this._consumePrefixAndName();
		return this._endToken(r$12), r$12;
	}
	_consumeAttributeValue() {
		let e$4;
		if (this._cursor.peek() === 39 || this._cursor.peek() === 34) {
			let r$12 = this._cursor.peek();
			this._consumeQuote(r$12);
			let n$8 = () => this._cursor.peek() === r$12;
			e$4 = this._consumeWithInterpolation(16, 17, n$8, n$8), this._consumeQuote(r$12);
		} else {
			let r$12 = () => ri$4(this._cursor.peek());
			e$4 = this._consumeWithInterpolation(16, 17, r$12, r$12);
		}
		return e$4;
	}
	_consumeQuote(e$4) {
		this._beginToken(15), this._requireCharCode(e$4), this._endToken([String.fromCodePoint(e$4)]);
	}
	_consumeTagOpenEnd() {
		let e$4 = this._attemptCharCode(47) ? 2 : 1;
		this._beginToken(e$4), this._requireCharCode(62), this._endToken([]);
	}
	_consumeTagClose(e$4) {
		if (this._beginToken(3, e$4), this._attemptCharCodeUntilFn(b$5), this._allowHtmComponentClosingTags && this._attemptCharCode(47)) this._attemptCharCodeUntilFn(b$5), this._requireCharCode(62), this._endToken([]);
		else {
			let [r$12, n$8] = this._consumePrefixAndName();
			this._attemptCharCodeUntilFn(b$5), this._requireCharCode(62), this._endToken([r$12, n$8]), this._handleFullNameStackForTagClose(r$12, n$8);
		}
	}
	_consumeExpansionFormStart() {
		this._beginToken(20), this._requireCharCode(123), this._endToken([]), this._expansionCaseStack.push(20), this._beginToken(7);
		let e$4 = this._readUntil(44), r$12 = this._processCarriageReturns(e$4);
		if (this._i18nNormalizeLineEndingsInICUs) this._endToken([r$12]);
		else {
			let s$8 = this._endToken([e$4]);
			r$12 !== e$4 && this.nonNormalizedIcuExpressions.push(s$8);
		}
		this._requireCharCode(44), this._attemptCharCodeUntilFn(b$5), this._beginToken(7);
		let n$8 = this._readUntil(44);
		this._endToken([n$8]), this._requireCharCode(44), this._attemptCharCodeUntilFn(b$5);
	}
	_consumeExpansionCaseStart() {
		this._beginToken(21);
		let e$4 = this._readUntil(123).trim();
		this._endToken([e$4]), this._attemptCharCodeUntilFn(b$5), this._beginToken(22), this._requireCharCode(123), this._endToken([]), this._attemptCharCodeUntilFn(b$5), this._expansionCaseStack.push(22);
	}
	_consumeExpansionCaseEnd() {
		this._beginToken(23), this._requireCharCode(125), this._endToken([]), this._attemptCharCodeUntilFn(b$5), this._expansionCaseStack.pop();
	}
	_consumeExpansionFormEnd() {
		this._beginToken(24), this._requireCharCode(125), this._endToken([]), this._expansionCaseStack.pop();
	}
	_consumeWithInterpolation(e$4, r$12, n$8, s$8) {
		this._beginToken(e$4);
		let i$18 = [];
		for (; !n$8();) {
			let o$9 = this._cursor.clone();
			this._interpolationConfig && this._attemptStr(this._interpolationConfig.start) ? (this._endToken([this._processCarriageReturns(i$18.join(""))], o$9), i$18.length = 0, this._consumeInterpolation(r$12, o$9, s$8), this._beginToken(e$4)) : this._cursor.peek() === 38 ? (this._endToken([this._processCarriageReturns(i$18.join(""))]), i$18.length = 0, this._consumeEntity(e$4), this._beginToken(e$4)) : i$18.push(this._readChar());
		}
		this._inInterpolation = !1;
		let a$13 = this._processCarriageReturns(i$18.join(""));
		return this._endToken([a$13]), a$13;
	}
	_consumeInterpolation(e$4, r$12, n$8) {
		let s$8 = [];
		this._beginToken(e$4, r$12), s$8.push(this._interpolationConfig.start);
		let i$18 = this._cursor.clone(), a$13 = null, o$9 = !1;
		for (; this._cursor.peek() !== 0 && (n$8 === null || !n$8());) {
			let u$14 = this._cursor.clone();
			if (this._isTagStart()) {
				this._cursor = u$14, s$8.push(this._getProcessedChars(i$18, u$14)), this._endToken(s$8);
				return;
			}
			if (a$13 === null) if (this._attemptStr(this._interpolationConfig.end)) {
				s$8.push(this._getProcessedChars(i$18, u$14)), s$8.push(this._interpolationConfig.end), this._endToken(s$8);
				return;
			} else this._attemptStr("//") && (o$9 = !0);
			let p$2 = this._cursor.peek();
			this._cursor.advance(), p$2 === 92 ? this._cursor.advance() : p$2 === a$13 ? a$13 = null : !o$9 && a$13 === null && Ot$3(p$2) && (a$13 = p$2);
		}
		s$8.push(this._getProcessedChars(i$18, this._cursor)), this._endToken(s$8);
	}
	_getProcessedChars(e$4, r$12) {
		return this._processCarriageReturns(r$12.getChars(e$4));
	}
	_isTextEnd() {
		return !!(this._isTagStart() || this._cursor.peek() === 0 || this._tokenizeIcu && !this._inInterpolation && (this.isExpansionFormStart() || this._cursor.peek() === 125 && this._isInExpansionCase()) || this._tokenizeBlocks && !this._inInterpolation && !this._isInExpansion() && (this._isBlockStart() || this._cursor.peek() === 64 || this._cursor.peek() === 125));
	}
	_isTagStart() {
		if (this._cursor.peek() === 60) {
			let e$4 = this._cursor.clone();
			e$4.advance();
			let r$12 = e$4.peek();
			if (97 <= r$12 && r$12 <= 122 || 65 <= r$12 && r$12 <= 90 || r$12 === 47 || r$12 === 33) return !0;
		}
		return !1;
	}
	_isBlockStart() {
		if (this._tokenizeBlocks && this._cursor.peek() === 64) {
			let e$4 = this._cursor.clone();
			if (e$4.advance(), si$3(e$4.peek())) return !0;
		}
		return !1;
	}
	_readUntil(e$4) {
		let r$12 = this._cursor.clone();
		return this._attemptUntilChar(e$4), this._cursor.getChars(r$12);
	}
	_isInExpansion() {
		return this._isInExpansionCase() || this._isInExpansionForm();
	}
	_isInExpansionCase() {
		return this._expansionCaseStack.length > 0 && this._expansionCaseStack[this._expansionCaseStack.length - 1] === 22;
	}
	_isInExpansionForm() {
		return this._expansionCaseStack.length > 0 && this._expansionCaseStack[this._expansionCaseStack.length - 1] === 20;
	}
	isExpansionFormStart() {
		if (this._cursor.peek() !== 123) return !1;
		if (this._interpolationConfig) {
			let e$4 = this._cursor.clone(), r$12 = this._attemptStr(this._interpolationConfig.start);
			return this._cursor = e$4, !r$12;
		}
		return !0;
	}
	_handleFullNameStackForTagOpen(e$4, r$12) {
		let n$8 = qe$4(e$4, r$12);
		(this._fullNameStack.length === 0 || this._fullNameStack[this._fullNameStack.length - 1] === n$8) && this._fullNameStack.push(n$8);
	}
	_handleFullNameStackForTagClose(e$4, r$12) {
		let n$8 = qe$4(e$4, r$12);
		this._fullNameStack.length !== 0 && this._fullNameStack[this._fullNameStack.length - 1] === n$8 && this._fullNameStack.pop();
	}
};
function b$5(t$13) {
	return !ut$2(t$13) || t$13 === 0;
}
function ri$4(t$13) {
	return ut$2(t$13) || t$13 === 62 || t$13 === 60 || t$13 === 47 || t$13 === 39 || t$13 === 34 || t$13 === 61 || t$13 === 0;
}
function $o$1(t$13) {
	return (t$13 < 97 || 122 < t$13) && (t$13 < 65 || 90 < t$13) && (t$13 < 48 || t$13 > 57);
}
function Oo$2(t$13) {
	return t$13 === 59 || t$13 === 0 || !Rs$1(t$13);
}
function Mo$1(t$13) {
	return t$13 === 59 || t$13 === 0 || !lt$2(t$13);
}
function qo$1(t$13) {
	return t$13 !== 125;
}
function Ho$1(t$13, e$4) {
	return ni$4(t$13) === ni$4(e$4);
}
function ni$4(t$13) {
	return t$13 >= 97 && t$13 <= 122 ? t$13 - 97 + 65 : t$13;
}
function si$3(t$13) {
	return lt$2(t$13) || Rt$3(t$13) || t$13 === 95;
}
function ii$3(t$13) {
	return t$13 !== 59 && b$5(t$13);
}
function Vo$2(t$13) {
	let e$4 = [], r$12;
	for (let n$8 = 0; n$8 < t$13.length; n$8++) {
		let s$8 = t$13[n$8];
		r$12 && r$12.type === 5 && s$8.type === 5 || r$12 && r$12.type === 16 && s$8.type === 16 ? (r$12.parts[0] += s$8.parts[0], r$12.sourceSpan.end = s$8.sourceSpan.end) : (r$12 = s$8, e$4.push(r$12));
	}
	return e$4;
}
var nr$4 = class t$13 {
	constructor(e$4, r$12) {
		if (e$4 instanceof t$13) {
			this.file = e$4.file, this.input = e$4.input, this.end = e$4.end;
			let n$8 = e$4.state;
			this.state = {
				peek: n$8.peek,
				offset: n$8.offset,
				line: n$8.line,
				column: n$8.column
			};
		} else {
			if (!r$12) throw new Error("Programming error: the range argument must be provided with a file argument.");
			this.file = e$4, this.input = e$4.content, this.end = r$12.endPos, this.state = {
				peek: -1,
				offset: r$12.startPos,
				line: r$12.startLine,
				column: r$12.startCol
			};
		}
	}
	clone() {
		return new t$13(this);
	}
	peek() {
		return this.state.peek;
	}
	charsLeft() {
		return this.end - this.state.offset;
	}
	diff(e$4) {
		return this.state.offset - e$4.state.offset;
	}
	advance() {
		this.advanceState(this.state);
	}
	init() {
		this.updatePeek(this.state);
	}
	getSpan(e$4, r$12) {
		e$4 = e$4 || this;
		let n$8 = e$4;
		if (r$12) for (; this.diff(e$4) > 0 && r$12.indexOf(e$4.peek()) !== -1;) n$8 === e$4 && (e$4 = e$4.clone()), e$4.advance();
		let s$8 = this.locationFromCursor(e$4), i$18 = this.locationFromCursor(this), a$13 = n$8 !== e$4 ? this.locationFromCursor(n$8) : s$8;
		return new h$1(s$8, i$18, a$13);
	}
	getChars(e$4) {
		return this.input.substring(e$4.state.offset, this.state.offset);
	}
	charAt(e$4) {
		return this.input.charCodeAt(e$4);
	}
	advanceState(e$4) {
		if (e$4.offset >= this.end) throw this.state = e$4, new St$2("Unexpected character \"EOF\"", this);
		let r$12 = this.charAt(e$4.offset);
		r$12 === 10 ? (e$4.line++, e$4.column = 0) : $t$2(r$12) || e$4.column++, e$4.offset++, this.updatePeek(e$4);
	}
	updatePeek(e$4) {
		e$4.peek = e$4.offset >= this.end ? 0 : this.charAt(e$4.offset);
	}
	locationFromCursor(e$4) {
		return new ie$4(e$4.file, e$4.state.offset, e$4.state.line, e$4.state.column);
	}
}, Gr$3 = class t$13 extends nr$4 {
	constructor(e$4, r$12) {
		e$4 instanceof t$13 ? (super(e$4), this.internalState = { ...e$4.internalState }) : (super(e$4, r$12), this.internalState = this.state);
	}
	advance() {
		this.state = this.internalState, super.advance(), this.processEscapeSequence();
	}
	init() {
		super.init(), this.processEscapeSequence();
	}
	clone() {
		return new t$13(this);
	}
	getChars(e$4) {
		let r$12 = e$4.clone(), n$8 = "";
		for (; r$12.internalState.offset < this.internalState.offset;) n$8 += String.fromCodePoint(r$12.peek()), r$12.advance();
		return n$8;
	}
	processEscapeSequence() {
		let e$4 = () => this.internalState.peek;
		if (e$4() === 92) if (this.internalState = { ...this.state }, this.advanceState(this.internalState), e$4() === 110) this.state.peek = 10;
		else if (e$4() === 114) this.state.peek = 13;
		else if (e$4() === 118) this.state.peek = 11;
		else if (e$4() === 116) this.state.peek = 9;
		else if (e$4() === 98) this.state.peek = 8;
		else if (e$4() === 102) this.state.peek = 12;
		else if (e$4() === 117) if (this.advanceState(this.internalState), e$4() === 123) {
			this.advanceState(this.internalState);
			let r$12 = this.clone(), n$8 = 0;
			for (; e$4() !== 125;) this.advanceState(this.internalState), n$8++;
			this.state.peek = this.decodeHexDigits(r$12, n$8);
		} else {
			let r$12 = this.clone();
			this.advanceState(this.internalState), this.advanceState(this.internalState), this.advanceState(this.internalState), this.state.peek = this.decodeHexDigits(r$12, 4);
		}
		else if (e$4() === 120) {
			this.advanceState(this.internalState);
			let r$12 = this.clone();
			this.advanceState(this.internalState), this.state.peek = this.decodeHexDigits(r$12, 2);
		} else if (Br$3(e$4())) {
			let r$12 = "", n$8 = 0, s$8 = this.clone();
			for (; Br$3(e$4()) && n$8 < 3;) s$8 = this.clone(), r$12 += String.fromCodePoint(e$4()), this.advanceState(this.internalState), n$8++;
			this.state.peek = parseInt(r$12, 8), this.internalState = s$8.internalState;
		} else $t$2(this.internalState.peek) ? (this.advanceState(this.internalState), this.state = this.internalState) : this.state.peek = this.internalState.peek;
	}
	decodeHexDigits(e$4, r$12) {
		let n$8 = this.input.slice(e$4.internalState.offset, e$4.internalState.offset + r$12), s$8 = parseInt(n$8, 16);
		if (isNaN(s$8)) throw e$4.state = e$4.internalState, new St$2("Invalid hexadecimal escape sequence", e$4);
		return s$8;
	}
}, St$2 = class {
	constructor(e$4, r$12) {
		this.msg = e$4, this.cursor = r$12;
	}
};
var L$3 = class t$13 extends Oe$3 {
	static create(e$4, r$12, n$8) {
		return new t$13(e$4, r$12, n$8);
	}
	constructor(e$4, r$12, n$8) {
		super(r$12, n$8), this.elementName = e$4;
	}
}, jr$3 = class {
	constructor(e$4, r$12) {
		this.rootNodes = e$4, this.errors = r$12;
	}
}, sr$3 = class {
	constructor(e$4) {
		this.getTagDefinition = e$4;
	}
	parse(e$4, r$12, n$8, s$8 = !1, i$18) {
		let a$13 = (D$4) => (I$2, ...F$4) => D$4(I$2.toLowerCase(), ...F$4), o$9 = s$8 ? this.getTagDefinition : a$13(this.getTagDefinition), u$14 = (D$4) => o$9(D$4).getContentType(), p$2 = s$8 ? i$18 : a$13(i$18), m$11 = li$3(e$4, r$12, i$18 ? (D$4, I$2, F$4, c$3) => {
			let g$2 = p$2(D$4, I$2, F$4, c$3);
			return g$2 !== void 0 ? g$2 : u$14(D$4);
		} : u$14, n$8), f$3 = n$8 && n$8.canSelfClose || !1, C$3 = n$8 && n$8.allowHtmComponentClosingTags || !1, A$3 = new Kr$3(m$11.tokens, o$9, f$3, C$3, s$8);
		return A$3.build(), new jr$3(A$3.rootNodes, m$11.errors.concat(A$3.errors));
	}
}, Kr$3 = class t$13 {
	constructor(e$4, r$12, n$8, s$8, i$18) {
		this.tokens = e$4, this.getTagDefinition = r$12, this.canSelfClose = n$8, this.allowHtmComponentClosingTags = s$8, this.isTagNameCaseSensitive = i$18, this._index = -1, this._containerStack = [], this.rootNodes = [], this.errors = [], this._advance();
	}
	build() {
		for (; this._peek.type !== 34;) this._peek.type === 0 || this._peek.type === 4 ? this._consumeStartTag(this._advance()) : this._peek.type === 3 ? (this._closeVoidElement(), this._consumeEndTag(this._advance())) : this._peek.type === 12 ? (this._closeVoidElement(), this._consumeCdata(this._advance())) : this._peek.type === 10 ? (this._closeVoidElement(), this._consumeComment(this._advance())) : this._peek.type === 5 || this._peek.type === 7 || this._peek.type === 6 ? (this._closeVoidElement(), this._consumeText(this._advance())) : this._peek.type === 20 ? this._consumeExpansion(this._advance()) : this._peek.type === 25 ? (this._closeVoidElement(), this._consumeBlockOpen(this._advance())) : this._peek.type === 27 ? (this._closeVoidElement(), this._consumeBlockClose(this._advance())) : this._peek.type === 29 ? (this._closeVoidElement(), this._consumeIncompleteBlock(this._advance())) : this._peek.type === 30 ? (this._closeVoidElement(), this._consumeLet(this._advance())) : this._peek.type === 18 ? this._consumeDocType(this._advance()) : this._peek.type === 33 ? (this._closeVoidElement(), this._consumeIncompleteLet(this._advance())) : this._advance();
		for (let e$4 of this._containerStack) e$4 instanceof ee$2 && this.errors.push(L$3.create(e$4.name, e$4.sourceSpan, `Unclosed block "${e$4.name}"`));
	}
	_advance() {
		let e$4 = this._peek;
		return this._index < this.tokens.length - 1 && this._index++, this._peek = this.tokens[this._index], e$4;
	}
	_advanceIf(e$4) {
		return this._peek.type === e$4 ? this._advance() : null;
	}
	_consumeCdata(e$4) {
		let r$12 = this._advance(), n$8 = this._getText(r$12), s$8 = this._advanceIf(13);
		this._addToParent(new Gt$2(n$8, new h$1(e$4.sourceSpan.start, (s$8 || r$12).sourceSpan.end), [r$12]));
	}
	_consumeComment(e$4) {
		let r$12 = this._advanceIf(7), n$8 = this._advanceIf(11), s$8 = r$12 != null ? r$12.parts[0].trim() : null, i$18 = n$8 == null ? e$4.sourceSpan : new h$1(e$4.sourceSpan.start, n$8.sourceSpan.end, e$4.sourceSpan.fullStart);
		this._addToParent(new Kt$2(s$8, i$18));
	}
	_consumeDocType(e$4) {
		let r$12 = this._advanceIf(7), n$8 = this._advanceIf(19), s$8 = r$12 != null ? r$12.parts[0].trim() : null, i$18 = new h$1(e$4.sourceSpan.start, (n$8 || r$12 || e$4).sourceSpan.end);
		this._addToParent(new Xt$3(s$8, i$18));
	}
	_consumeExpansion(e$4) {
		let r$12 = this._advance(), n$8 = this._advance(), s$8 = [];
		for (; this._peek.type === 21;) {
			let a$13 = this._parseExpansionCase();
			if (!a$13) return;
			s$8.push(a$13);
		}
		if (this._peek.type !== 24) {
			this.errors.push(L$3.create(null, this._peek.sourceSpan, "Invalid ICU message. Missing '}'."));
			return;
		}
		let i$18 = new h$1(e$4.sourceSpan.start, this._peek.sourceSpan.end, e$4.sourceSpan.fullStart);
		this._addToParent(new zt$3(r$12.parts[0], n$8.parts[0], s$8, i$18, r$12.sourceSpan)), this._advance();
	}
	_parseExpansionCase() {
		let e$4 = this._advance();
		if (this._peek.type !== 22) return this.errors.push(L$3.create(null, this._peek.sourceSpan, "Invalid ICU message. Missing '{'.")), null;
		let r$12 = this._advance(), n$8 = this._collectExpansionExpTokens(r$12);
		if (!n$8) return null;
		let s$8 = this._advance();
		n$8.push({
			type: 34,
			parts: [],
			sourceSpan: s$8.sourceSpan
		});
		let i$18 = new t$13(n$8, this.getTagDefinition, this.canSelfClose, this.allowHtmComponentClosingTags, this.isTagNameCaseSensitive);
		if (i$18.build(), i$18.errors.length > 0) return this.errors = this.errors.concat(i$18.errors), null;
		let a$13 = new h$1(e$4.sourceSpan.start, s$8.sourceSpan.end, e$4.sourceSpan.fullStart), o$9 = new h$1(r$12.sourceSpan.start, s$8.sourceSpan.end, r$12.sourceSpan.fullStart);
		return new Yt$2(e$4.parts[0], i$18.rootNodes, a$13, e$4.sourceSpan, o$9);
	}
	_collectExpansionExpTokens(e$4) {
		let r$12 = [], n$8 = [22];
		for (;;) {
			if ((this._peek.type === 20 || this._peek.type === 22) && n$8.push(this._peek.type), this._peek.type === 23) if (ci$3(n$8, 22)) {
				if (n$8.pop(), n$8.length === 0) return r$12;
			} else return this.errors.push(L$3.create(null, e$4.sourceSpan, "Invalid ICU message. Missing '}'.")), null;
			if (this._peek.type === 24) if (ci$3(n$8, 20)) n$8.pop();
			else return this.errors.push(L$3.create(null, e$4.sourceSpan, "Invalid ICU message. Missing '}'.")), null;
			if (this._peek.type === 34) return this.errors.push(L$3.create(null, e$4.sourceSpan, "Invalid ICU message. Missing '}'.")), null;
			r$12.push(this._advance());
		}
	}
	_getText(e$4) {
		let r$12 = e$4.parts[0];
		if (r$12.length > 0 && r$12[0] == `
`) {
			let n$8 = this._getClosestParentElement();
			n$8 != null && n$8.children.length == 0 && this.getTagDefinition(n$8.name).ignoreFirstLf && (r$12 = r$12.substring(1));
		}
		return r$12;
	}
	_consumeText(e$4) {
		let r$12 = [e$4], n$8 = e$4.sourceSpan, s$8 = e$4.parts[0];
		if (s$8.length > 0 && s$8[0] === `
`) {
			let i$18 = this._getContainer();
			i$18 != null && i$18.children.length === 0 && this.getTagDefinition(i$18.name).ignoreFirstLf && (s$8 = s$8.substring(1), r$12[0] = {
				type: e$4.type,
				sourceSpan: e$4.sourceSpan,
				parts: [s$8]
			});
		}
		for (; this._peek.type === 8 || this._peek.type === 5 || this._peek.type === 9;) e$4 = this._advance(), r$12.push(e$4), e$4.type === 8 ? s$8 += e$4.parts.join("").replace(/&([^;]+);/g, pi$3) : e$4.type === 9 ? s$8 += e$4.parts[0] : s$8 += e$4.parts.join("");
		if (s$8.length > 0) {
			let i$18 = e$4.sourceSpan;
			this._addToParent(new Wt$2(s$8, new h$1(n$8.start, i$18.end, n$8.fullStart, n$8.details), r$12));
		}
	}
	_closeVoidElement() {
		let e$4 = this._getContainer();
		e$4 instanceof Y$3 && this.getTagDefinition(e$4.name).isVoid && this._containerStack.pop();
	}
	_consumeStartTag(e$4) {
		let [r$12, n$8] = e$4.parts, s$8 = [];
		for (; this._peek.type === 14;) s$8.push(this._consumeAttr(this._advance()));
		let i$18 = this._getElementFullName(r$12, n$8, this._getClosestParentElement()), a$13 = !1;
		if (this._peek.type === 2) {
			this._advance(), a$13 = !0;
			let C$3 = this.getTagDefinition(i$18);
			this.canSelfClose || C$3.canSelfClose || Me$3(i$18) !== null || C$3.isVoid || this.errors.push(L$3.create(i$18, e$4.sourceSpan, `Only void, custom and foreign elements can be self closed "${e$4.parts[1]}"`));
		} else this._peek.type === 1 && (this._advance(), a$13 = !1);
		let o$9 = this._peek.sourceSpan.fullStart, u$14 = new h$1(e$4.sourceSpan.start, o$9, e$4.sourceSpan.fullStart), p$2 = new h$1(e$4.sourceSpan.start, o$9, e$4.sourceSpan.fullStart), l$10 = new h$1(e$4.sourceSpan.start.moveBy(1), e$4.sourceSpan.end), m$11 = new Y$3(i$18, s$8, [], u$14, p$2, void 0, l$10), f$3 = this._getContainer();
		this._pushContainer(m$11, f$3 instanceof Y$3 && this.getTagDefinition(f$3.name).isClosedByChild(m$11.name)), a$13 ? this._popContainer(i$18, Y$3, u$14) : e$4.type === 4 && (this._popContainer(i$18, Y$3, null), this.errors.push(L$3.create(i$18, u$14, `Opening tag "${i$18}" not terminated.`)));
	}
	_pushContainer(e$4, r$12) {
		r$12 && this._containerStack.pop(), this._addToParent(e$4), this._containerStack.push(e$4);
	}
	_consumeEndTag(e$4) {
		let r$12 = this.allowHtmComponentClosingTags && e$4.parts.length === 0 ? null : this._getElementFullName(e$4.parts[0], e$4.parts[1], this._getClosestParentElement());
		if (r$12 && this.getTagDefinition(r$12).isVoid) this.errors.push(L$3.create(r$12, e$4.sourceSpan, `Void elements do not have end tags "${e$4.parts[1]}"`));
		else if (!this._popContainer(r$12, Y$3, e$4.sourceSpan)) {
			let n$8 = `Unexpected closing tag "${r$12}". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags`;
			this.errors.push(L$3.create(r$12, e$4.sourceSpan, n$8));
		}
	}
	_popContainer(e$4, r$12, n$8) {
		let s$8 = !1;
		for (let i$18 = this._containerStack.length - 1; i$18 >= 0; i$18--) {
			let a$13 = this._containerStack[i$18];
			if (Me$3(a$13.name) ? a$13.name === e$4 : (e$4 == null || a$13.name.toLowerCase() === e$4.toLowerCase()) && a$13 instanceof r$12) return a$13.endSourceSpan = n$8, a$13.sourceSpan.end = n$8 !== null ? n$8.end : a$13.sourceSpan.end, this._containerStack.splice(i$18, this._containerStack.length - i$18), !s$8;
			(a$13 instanceof ee$2 || a$13 instanceof Y$3 && !this.getTagDefinition(a$13.name).closedByParent) && (s$8 = !0);
		}
		return !1;
	}
	_consumeAttr(e$4) {
		let r$12 = qe$4(e$4.parts[0], e$4.parts[1]), n$8 = e$4.sourceSpan.end, s$8;
		this._peek.type === 15 && (s$8 = this._advance());
		let i$18 = "", a$13 = [], o$9, u$14;
		if (this._peek.type === 16) for (o$9 = this._peek.sourceSpan, u$14 = this._peek.sourceSpan.end; this._peek.type === 16 || this._peek.type === 17 || this._peek.type === 9;) {
			let m$11 = this._advance();
			a$13.push(m$11), m$11.type === 17 ? i$18 += m$11.parts.join("").replace(/&([^;]+);/g, pi$3) : m$11.type === 9 ? i$18 += m$11.parts[0] : i$18 += m$11.parts.join(""), u$14 = n$8 = m$11.sourceSpan.end;
		}
		this._peek.type === 15 && (u$14 = n$8 = this._advance().sourceSpan.end);
		let l$10 = o$9 && u$14 && new h$1((s$8 == null ? void 0 : s$8.sourceSpan.start) ?? o$9.start, u$14, (s$8 == null ? void 0 : s$8.sourceSpan.fullStart) ?? o$9.fullStart);
		return new jt$3(r$12, i$18, new h$1(e$4.sourceSpan.start, n$8, e$4.sourceSpan.fullStart), e$4.sourceSpan, l$10, a$13.length > 0 ? a$13 : void 0, void 0);
	}
	_consumeBlockOpen(e$4) {
		let r$12 = [];
		for (; this._peek.type === 28;) {
			let o$9 = this._advance();
			r$12.push(new ht$2(o$9.parts[0], o$9.sourceSpan));
		}
		this._peek.type === 26 && this._advance();
		let n$8 = this._peek.sourceSpan.fullStart, s$8 = new h$1(e$4.sourceSpan.start, n$8, e$4.sourceSpan.fullStart), i$18 = new h$1(e$4.sourceSpan.start, n$8, e$4.sourceSpan.fullStart), a$13 = new ee$2(e$4.parts[0], r$12, [], s$8, e$4.sourceSpan, i$18);
		this._pushContainer(a$13, !1);
	}
	_consumeBlockClose(e$4) {
		this._popContainer(null, ee$2, e$4.sourceSpan) || this.errors.push(L$3.create(null, e$4.sourceSpan, "Unexpected closing block. The block may have been closed earlier. If you meant to write the } character, you should use the \"&#125;\" HTML entity instead."));
	}
	_consumeIncompleteBlock(e$4) {
		let r$12 = [];
		for (; this._peek.type === 28;) {
			let o$9 = this._advance();
			r$12.push(new ht$2(o$9.parts[0], o$9.sourceSpan));
		}
		let n$8 = this._peek.sourceSpan.fullStart, s$8 = new h$1(e$4.sourceSpan.start, n$8, e$4.sourceSpan.fullStart), i$18 = new h$1(e$4.sourceSpan.start, n$8, e$4.sourceSpan.fullStart), a$13 = new ee$2(e$4.parts[0], r$12, [], s$8, e$4.sourceSpan, i$18);
		this._pushContainer(a$13, !1), this._popContainer(null, ee$2, null), this.errors.push(L$3.create(e$4.parts[0], s$8, `Incomplete block "${e$4.parts[0]}". If you meant to write the @ character, you should use the "&#64;" HTML entity instead.`));
	}
	_consumeLet(e$4) {
		let r$12 = e$4.parts[0], n$8, s$8;
		if (this._peek.type !== 31) {
			this.errors.push(L$3.create(e$4.parts[0], e$4.sourceSpan, `Invalid @let declaration "${r$12}". Declaration must have a value.`));
			return;
		} else n$8 = this._advance();
		if (this._peek.type !== 32) {
			this.errors.push(L$3.create(e$4.parts[0], e$4.sourceSpan, `Unterminated @let declaration "${r$12}". Declaration must be terminated with a semicolon.`));
			return;
		} else s$8 = this._advance();
		let i$18 = s$8.sourceSpan.fullStart, a$13 = new h$1(e$4.sourceSpan.start, i$18, e$4.sourceSpan.fullStart), o$9 = e$4.sourceSpan.toString().lastIndexOf(r$12), u$14 = e$4.sourceSpan.start.moveBy(o$9), p$2 = new h$1(u$14, e$4.sourceSpan.end), l$10 = new mt$3(r$12, n$8.parts[0], a$13, p$2, n$8.sourceSpan);
		this._addToParent(l$10);
	}
	_consumeIncompleteLet(e$4) {
		let r$12 = e$4.parts[0] ?? "", n$8 = r$12 ? ` "${r$12}"` : "";
		if (r$12.length > 0) {
			let s$8 = e$4.sourceSpan.toString().lastIndexOf(r$12), i$18 = e$4.sourceSpan.start.moveBy(s$8), a$13 = new h$1(i$18, e$4.sourceSpan.end), o$9 = new h$1(e$4.sourceSpan.start, e$4.sourceSpan.start.moveBy(0)), u$14 = new mt$3(r$12, "", e$4.sourceSpan, a$13, o$9);
			this._addToParent(u$14);
		}
		this.errors.push(L$3.create(e$4.parts[0], e$4.sourceSpan, `Incomplete @let declaration${n$8}. @let declarations must be written as \`@let <name> = <value>;\``));
	}
	_getContainer() {
		return this._containerStack.length > 0 ? this._containerStack[this._containerStack.length - 1] : null;
	}
	_getClosestParentElement() {
		for (let e$4 = this._containerStack.length - 1; e$4 > -1; e$4--) if (this._containerStack[e$4] instanceof Y$3) return this._containerStack[e$4];
		return null;
	}
	_addToParent(e$4) {
		let r$12 = this._getContainer();
		r$12 === null ? this.rootNodes.push(e$4) : r$12.children.push(e$4);
	}
	_getElementFullName(e$4, r$12, n$8) {
		if (e$4 === "" && (e$4 = this.getTagDefinition(r$12).implicitNamespacePrefix || "", e$4 === "" && n$8 != null)) {
			let s$8 = ct$2(n$8.name)[1];
			this.getTagDefinition(s$8).preventNamespaceInheritance || (e$4 = Me$3(n$8.name));
		}
		return qe$4(e$4, r$12);
	}
};
function ci$3(t$13, e$4) {
	return t$13.length > 0 && t$13[t$13.length - 1] === e$4;
}
function pi$3(t$13, e$4) {
	return Ve$3[e$4] !== void 0 ? Ve$3[e$4] || t$13 : /^#x[a-f0-9]+$/i.test(e$4) ? String.fromCodePoint(parseInt(e$4.slice(2), 16)) : /^#\d+$/.test(e$4) ? String.fromCodePoint(parseInt(e$4.slice(1), 10)) : t$13;
}
var ir$3 = class extends sr$3 {
	constructor() {
		super(He$5);
	}
	parse(e$4, r$12, n$8, s$8 = !1, i$18) {
		return super.parse(e$4, r$12, n$8, s$8, i$18);
	}
};
var Xr$5 = null, Uo$1 = () => (Xr$5 || (Xr$5 = new ir$3()), Xr$5);
function Qr$5(t$13, e$4 = {}) {
	let { canSelfClose: r$12 = !1, allowHtmComponentClosingTags: n$8 = !1, isTagNameCaseSensitive: s$8 = !1, getTagContentType: i$18, tokenizeAngularBlocks: a$13 = !1, tokenizeAngularLetDeclaration: o$9 = !1 } = e$4;
	return Uo$1().parse(t$13, "angular-html-parser", {
		tokenizeExpansionForms: a$13,
		interpolationConfig: void 0,
		canSelfClose: r$12,
		allowHtmComponentClosingTags: n$8,
		tokenizeBlocks: a$13,
		tokenizeLet: o$9
	}, s$8, i$18);
}
function Wo$2(t$13, e$4) {
	let r$12 = /* @__PURE__ */ new SyntaxError(t$13 + " (" + e$4.loc.start.line + ":" + e$4.loc.start.column + ")");
	return Object.assign(r$12, e$4);
}
var hi$4 = Wo$2;
var _t$3 = 3;
function Go$1(t$13) {
	let e$4 = t$13.slice(0, _t$3);
	if (e$4 !== "---" && e$4 !== "+++") return;
	let r$12 = t$13.indexOf(`
`, _t$3);
	if (r$12 === -1) return;
	let n$8 = t$13.slice(_t$3, r$12).trim(), s$8 = t$13.indexOf(`
${e$4}`, r$12), i$18 = n$8;
	if (i$18 || (i$18 = e$4 === "+++" ? "toml" : "yaml"), s$8 === -1 && e$4 === "---" && i$18 === "yaml" && (s$8 = t$13.indexOf(`
...`, r$12)), s$8 === -1) return;
	let a$13 = s$8 + 1 + _t$3, o$9 = t$13.charAt(a$13 + 1);
	if (!/\s?/u.test(o$9)) return;
	let u$14 = t$13.slice(0, a$13);
	return {
		type: "front-matter",
		language: i$18,
		explicitLanguage: n$8,
		value: t$13.slice(r$12 + 1, s$8),
		startDelimiter: e$4,
		endDelimiter: u$14.slice(-_t$3),
		raw: u$14
	};
}
function zo$2(t$13) {
	let e$4 = Go$1(t$13);
	if (!e$4) return { content: t$13 };
	let { raw: r$12 } = e$4;
	return {
		frontMatter: e$4,
		content: w$1(!1, r$12, /[^\n]/gu, " ") + t$13.slice(r$12.length)
	};
}
var mi$4 = zo$2;
var ar$3 = {
	attrs: !0,
	children: !0,
	cases: !0,
	expression: !0
}, fi$4 = new Set(["parent"]), le$4, Jr$3, Zr$3, Ge$3 = class Ge$5 {
	constructor(e$4 = {}) {
		At$5(this, le$4);
		lr$3(this, "type");
		lr$3(this, "parent");
		for (let r$12 of new Set([...fi$4, ...Object.keys(e$4)])) this.setProperty(r$12, e$4[r$12]);
	}
	setProperty(e$4, r$12) {
		if (this[e$4] !== r$12) {
			if (e$4 in ar$3 && (r$12 = r$12.map((n$8) => this.createChild(n$8))), !fi$4.has(e$4)) {
				this[e$4] = r$12;
				return;
			}
			Object.defineProperty(this, e$4, {
				value: r$12,
				enumerable: !1,
				configurable: !0
			});
		}
	}
	map(e$4) {
		let r$12;
		for (let n$8 in ar$3) {
			let s$8 = this[n$8];
			if (s$8) {
				let i$18 = Yo$1(s$8, (a$13) => a$13.map(e$4));
				r$12 !== s$8 && (r$12 || (r$12 = new Ge$5({ parent: this.parent })), r$12.setProperty(n$8, i$18));
			}
		}
		if (r$12) for (let n$8 in this) n$8 in ar$3 || (r$12[n$8] = this[n$8]);
		return e$4(r$12 || this);
	}
	walk(e$4) {
		for (let r$12 in ar$3) {
			let n$8 = this[r$12];
			if (n$8) for (let s$8 = 0; s$8 < n$8.length; s$8++) n$8[s$8].walk(e$4);
		}
		e$4(this);
	}
	createChild(e$4) {
		let r$12 = e$4 instanceof Ge$5 ? e$4.clone() : new Ge$5(e$4);
		return r$12.setProperty("parent", this), r$12;
	}
	insertChildBefore(e$4, r$12) {
		let n$8 = this.$children;
		n$8.splice(n$8.indexOf(e$4), 0, this.createChild(r$12));
	}
	removeChild(e$4) {
		let r$12 = this.$children;
		r$12.splice(r$12.indexOf(e$4), 1);
	}
	replaceChild(e$4, r$12) {
		let n$8 = this.$children;
		n$8[n$8.indexOf(e$4)] = this.createChild(r$12);
	}
	clone() {
		return new Ge$5(this);
	}
	get $children() {
		return this[R$4(this, le$4, Jr$3)];
	}
	set $children(e$4) {
		this[R$4(this, le$4, Jr$3)] = e$4;
	}
	get firstChild() {
		var e$4;
		return (e$4 = this.$children) == null ? void 0 : e$4[0];
	}
	get lastChild() {
		return K$3(!0, this.$children, -1);
	}
	get prev() {
		let e$4 = R$4(this, le$4, Zr$3);
		return e$4[e$4.indexOf(this) - 1];
	}
	get next() {
		let e$4 = R$4(this, le$4, Zr$3);
		return e$4[e$4.indexOf(this) + 1];
	}
	get rawName() {
		return this.hasExplicitNamespace ? this.fullName : this.name;
	}
	get fullName() {
		return this.namespace ? this.namespace + ":" + this.name : this.name;
	}
	get attrMap() {
		return Object.fromEntries(this.attrs.map((e$4) => [e$4.fullName, e$4.value]));
	}
};
le$4 = /* @__PURE__ */ new WeakSet(), Jr$3 = function() {
	return this.type === "angularIcuCase" ? "expression" : this.type === "angularIcuExpression" ? "cases" : "children";
}, Zr$3 = function() {
	var e$4;
	return ((e$4 = this.parent) == null ? void 0 : e$4.$children) ?? [];
};
var or$3 = Ge$3;
function Yo$1(t$13, e$4) {
	let r$12 = t$13.map(e$4);
	return r$12.some((n$8, s$8) => n$8 !== t$13[s$8]) ? r$12 : t$13;
}
var jo$1 = [
	{
		regex: /^(\[if([^\]]*)\]>)(.*?)<!\s*\[endif\]$/su,
		parse: Ko$3
	},
	{
		regex: /^\[if([^\]]*)\]><!$/u,
		parse: Xo$2
	},
	{
		regex: /^<!\s*\[endif\]$/u,
		parse: Qo$2
	}
];
function di$4(t$13, e$4) {
	if (t$13.value) for (let { regex: r$12, parse: n$8 } of jo$1) {
		let s$8 = t$13.value.match(r$12);
		if (s$8) return n$8(t$13, e$4, s$8);
	}
	return null;
}
function Ko$3(t$13, e$4, r$12) {
	let [, n$8, s$8, i$18] = r$12, a$13 = 4 + n$8.length, o$9 = t$13.sourceSpan.start.moveBy(a$13), u$14 = o$9.moveBy(i$18.length), [p$2, l$10] = (() => {
		try {
			return [!0, e$4(i$18, o$9).children];
		} catch {
			return [!1, [{
				type: "text",
				value: i$18,
				sourceSpan: new h$1(o$9, u$14)
			}]];
		}
	})();
	return {
		type: "ieConditionalComment",
		complete: p$2,
		children: l$10,
		condition: w$1(!1, s$8.trim(), /\s+/gu, " "),
		sourceSpan: t$13.sourceSpan,
		startSourceSpan: new h$1(t$13.sourceSpan.start, o$9),
		endSourceSpan: new h$1(u$14, t$13.sourceSpan.end)
	};
}
function Xo$2(t$13, e$4, r$12) {
	let [, n$8] = r$12;
	return {
		type: "ieConditionalStartComment",
		condition: w$1(!1, n$8.trim(), /\s+/gu, " "),
		sourceSpan: t$13.sourceSpan
	};
}
function Qo$2(t$13) {
	return {
		type: "ieConditionalEndComment",
		sourceSpan: t$13.sourceSpan
	};
}
var ur$4 = new Map([
	["*", new Set([
		"accesskey",
		"autocapitalize",
		"autofocus",
		"class",
		"contenteditable",
		"dir",
		"draggable",
		"enterkeyhint",
		"hidden",
		"id",
		"inert",
		"inputmode",
		"is",
		"itemid",
		"itemprop",
		"itemref",
		"itemscope",
		"itemtype",
		"lang",
		"nonce",
		"popover",
		"slot",
		"spellcheck",
		"style",
		"tabindex",
		"title",
		"translate",
		"writingsuggestions"
	])],
	["a", new Set([
		"charset",
		"coords",
		"download",
		"href",
		"hreflang",
		"name",
		"ping",
		"referrerpolicy",
		"rel",
		"rev",
		"shape",
		"target",
		"type"
	])],
	["applet", new Set([
		"align",
		"alt",
		"archive",
		"code",
		"codebase",
		"height",
		"hspace",
		"name",
		"object",
		"vspace",
		"width"
	])],
	["area", new Set([
		"alt",
		"coords",
		"download",
		"href",
		"hreflang",
		"nohref",
		"ping",
		"referrerpolicy",
		"rel",
		"shape",
		"target",
		"type"
	])],
	["audio", new Set([
		"autoplay",
		"controls",
		"crossorigin",
		"loop",
		"muted",
		"preload",
		"src"
	])],
	["base", new Set(["href", "target"])],
	["basefont", new Set([
		"color",
		"face",
		"size"
	])],
	["blockquote", new Set(["cite"])],
	["body", new Set([
		"alink",
		"background",
		"bgcolor",
		"link",
		"text",
		"vlink"
	])],
	["br", new Set(["clear"])],
	["button", new Set([
		"disabled",
		"form",
		"formaction",
		"formenctype",
		"formmethod",
		"formnovalidate",
		"formtarget",
		"name",
		"popovertarget",
		"popovertargetaction",
		"type",
		"value"
	])],
	["canvas", new Set(["height", "width"])],
	["caption", new Set(["align"])],
	["col", new Set([
		"align",
		"char",
		"charoff",
		"span",
		"valign",
		"width"
	])],
	["colgroup", new Set([
		"align",
		"char",
		"charoff",
		"span",
		"valign",
		"width"
	])],
	["data", new Set(["value"])],
	["del", new Set(["cite", "datetime"])],
	["details", new Set(["name", "open"])],
	["dialog", new Set(["open"])],
	["dir", new Set(["compact"])],
	["div", new Set(["align"])],
	["dl", new Set(["compact"])],
	["embed", new Set([
		"height",
		"src",
		"type",
		"width"
	])],
	["fieldset", new Set([
		"disabled",
		"form",
		"name"
	])],
	["font", new Set([
		"color",
		"face",
		"size"
	])],
	["form", new Set([
		"accept",
		"accept-charset",
		"action",
		"autocomplete",
		"enctype",
		"method",
		"name",
		"novalidate",
		"target"
	])],
	["frame", new Set([
		"frameborder",
		"longdesc",
		"marginheight",
		"marginwidth",
		"name",
		"noresize",
		"scrolling",
		"src"
	])],
	["frameset", new Set(["cols", "rows"])],
	["h1", new Set(["align"])],
	["h2", new Set(["align"])],
	["h3", new Set(["align"])],
	["h4", new Set(["align"])],
	["h5", new Set(["align"])],
	["h6", new Set(["align"])],
	["head", new Set(["profile"])],
	["hr", new Set([
		"align",
		"noshade",
		"size",
		"width"
	])],
	["html", new Set(["manifest", "version"])],
	["iframe", new Set([
		"align",
		"allow",
		"allowfullscreen",
		"allowpaymentrequest",
		"allowusermedia",
		"frameborder",
		"height",
		"loading",
		"longdesc",
		"marginheight",
		"marginwidth",
		"name",
		"referrerpolicy",
		"sandbox",
		"scrolling",
		"src",
		"srcdoc",
		"width"
	])],
	["img", new Set([
		"align",
		"alt",
		"border",
		"crossorigin",
		"decoding",
		"fetchpriority",
		"height",
		"hspace",
		"ismap",
		"loading",
		"longdesc",
		"name",
		"referrerpolicy",
		"sizes",
		"src",
		"srcset",
		"usemap",
		"vspace",
		"width"
	])],
	["input", new Set([
		"accept",
		"align",
		"alt",
		"autocomplete",
		"checked",
		"dirname",
		"disabled",
		"form",
		"formaction",
		"formenctype",
		"formmethod",
		"formnovalidate",
		"formtarget",
		"height",
		"ismap",
		"list",
		"max",
		"maxlength",
		"min",
		"minlength",
		"multiple",
		"name",
		"pattern",
		"placeholder",
		"popovertarget",
		"popovertargetaction",
		"readonly",
		"required",
		"size",
		"src",
		"step",
		"type",
		"usemap",
		"value",
		"width"
	])],
	["ins", new Set(["cite", "datetime"])],
	["isindex", new Set(["prompt"])],
	["label", new Set(["for", "form"])],
	["legend", new Set(["align"])],
	["li", new Set(["type", "value"])],
	["link", new Set([
		"as",
		"blocking",
		"charset",
		"color",
		"crossorigin",
		"disabled",
		"fetchpriority",
		"href",
		"hreflang",
		"imagesizes",
		"imagesrcset",
		"integrity",
		"media",
		"referrerpolicy",
		"rel",
		"rev",
		"sizes",
		"target",
		"type"
	])],
	["map", new Set(["name"])],
	["menu", new Set(["compact"])],
	["meta", new Set([
		"charset",
		"content",
		"http-equiv",
		"media",
		"name",
		"scheme"
	])],
	["meter", new Set([
		"high",
		"low",
		"max",
		"min",
		"optimum",
		"value"
	])],
	["object", new Set([
		"align",
		"archive",
		"border",
		"classid",
		"codebase",
		"codetype",
		"data",
		"declare",
		"form",
		"height",
		"hspace",
		"name",
		"standby",
		"type",
		"typemustmatch",
		"usemap",
		"vspace",
		"width"
	])],
	["ol", new Set([
		"compact",
		"reversed",
		"start",
		"type"
	])],
	["optgroup", new Set(["disabled", "label"])],
	["option", new Set([
		"disabled",
		"label",
		"selected",
		"value"
	])],
	["output", new Set([
		"for",
		"form",
		"name"
	])],
	["p", new Set(["align"])],
	["param", new Set([
		"name",
		"type",
		"value",
		"valuetype"
	])],
	["pre", new Set(["width"])],
	["progress", new Set(["max", "value"])],
	["q", new Set(["cite"])],
	["script", new Set([
		"async",
		"blocking",
		"charset",
		"crossorigin",
		"defer",
		"fetchpriority",
		"integrity",
		"language",
		"nomodule",
		"referrerpolicy",
		"src",
		"type"
	])],
	["select", new Set([
		"autocomplete",
		"disabled",
		"form",
		"multiple",
		"name",
		"required",
		"size"
	])],
	["slot", new Set(["name"])],
	["source", new Set([
		"height",
		"media",
		"sizes",
		"src",
		"srcset",
		"type",
		"width"
	])],
	["style", new Set([
		"blocking",
		"media",
		"type"
	])],
	["table", new Set([
		"align",
		"bgcolor",
		"border",
		"cellpadding",
		"cellspacing",
		"frame",
		"rules",
		"summary",
		"width"
	])],
	["tbody", new Set([
		"align",
		"char",
		"charoff",
		"valign"
	])],
	["td", new Set([
		"abbr",
		"align",
		"axis",
		"bgcolor",
		"char",
		"charoff",
		"colspan",
		"headers",
		"height",
		"nowrap",
		"rowspan",
		"scope",
		"valign",
		"width"
	])],
	["template", new Set([
		"shadowrootclonable",
		"shadowrootdelegatesfocus",
		"shadowrootmode"
	])],
	["textarea", new Set([
		"autocomplete",
		"cols",
		"dirname",
		"disabled",
		"form",
		"maxlength",
		"minlength",
		"name",
		"placeholder",
		"readonly",
		"required",
		"rows",
		"wrap"
	])],
	["tfoot", new Set([
		"align",
		"char",
		"charoff",
		"valign"
	])],
	["th", new Set([
		"abbr",
		"align",
		"axis",
		"bgcolor",
		"char",
		"charoff",
		"colspan",
		"headers",
		"height",
		"nowrap",
		"rowspan",
		"scope",
		"valign",
		"width"
	])],
	["thead", new Set([
		"align",
		"char",
		"charoff",
		"valign"
	])],
	["time", new Set(["datetime"])],
	["tr", new Set([
		"align",
		"bgcolor",
		"char",
		"charoff",
		"valign"
	])],
	["track", new Set([
		"default",
		"kind",
		"label",
		"src",
		"srclang"
	])],
	["ul", new Set(["compact", "type"])],
	["video", new Set([
		"autoplay",
		"controls",
		"crossorigin",
		"height",
		"loop",
		"muted",
		"playsinline",
		"poster",
		"preload",
		"src",
		"width"
	])]
]);
var gi$4 = new Set([
	"a",
	"abbr",
	"acronym",
	"address",
	"applet",
	"area",
	"article",
	"aside",
	"audio",
	"b",
	"base",
	"basefont",
	"bdi",
	"bdo",
	"bgsound",
	"big",
	"blink",
	"blockquote",
	"body",
	"br",
	"button",
	"canvas",
	"caption",
	"center",
	"cite",
	"code",
	"col",
	"colgroup",
	"command",
	"content",
	"data",
	"datalist",
	"dd",
	"del",
	"details",
	"dfn",
	"dialog",
	"dir",
	"div",
	"dl",
	"dt",
	"em",
	"embed",
	"fieldset",
	"figcaption",
	"figure",
	"font",
	"footer",
	"form",
	"frame",
	"frameset",
	"h1",
	"h2",
	"h3",
	"h4",
	"h5",
	"h6",
	"head",
	"header",
	"hgroup",
	"hr",
	"html",
	"i",
	"iframe",
	"image",
	"img",
	"input",
	"ins",
	"isindex",
	"kbd",
	"keygen",
	"label",
	"legend",
	"li",
	"link",
	"listing",
	"main",
	"map",
	"mark",
	"marquee",
	"math",
	"menu",
	"menuitem",
	"meta",
	"meter",
	"multicol",
	"nav",
	"nextid",
	"nobr",
	"noembed",
	"noframes",
	"noscript",
	"object",
	"ol",
	"optgroup",
	"option",
	"output",
	"p",
	"param",
	"picture",
	"plaintext",
	"pre",
	"progress",
	"q",
	"rb",
	"rbc",
	"rp",
	"rt",
	"rtc",
	"ruby",
	"s",
	"samp",
	"script",
	"search",
	"section",
	"select",
	"shadow",
	"slot",
	"small",
	"source",
	"spacer",
	"span",
	"strike",
	"strong",
	"style",
	"sub",
	"summary",
	"sup",
	"svg",
	"table",
	"tbody",
	"td",
	"template",
	"textarea",
	"tfoot",
	"th",
	"thead",
	"time",
	"title",
	"tr",
	"track",
	"tt",
	"u",
	"ul",
	"var",
	"video",
	"wbr",
	"xmp"
]);
function Jo$1(t$13) {
	if (t$13.type === "block") {
		if (t$13.name = w$1(!1, t$13.name.toLowerCase(), /\s+/gu, " ").trim(), t$13.type = "angularControlFlowBlock", !me$3(t$13.parameters)) {
			delete t$13.parameters;
			return;
		}
		for (let e$4 of t$13.parameters) e$4.type = "angularControlFlowBlockParameter";
		t$13.parameters = {
			type: "angularControlFlowBlockParameters",
			children: t$13.parameters,
			sourceSpan: new h$1(t$13.parameters[0].sourceSpan.start, K$3(!1, t$13.parameters, -1).sourceSpan.end)
		};
	}
}
function Zo$1(t$13) {
	t$13.type === "letDeclaration" && (t$13.type = "angularLetDeclaration", t$13.id = t$13.name, t$13.init = {
		type: "angularLetDeclarationInitializer",
		sourceSpan: new h$1(t$13.valueSpan.start, t$13.valueSpan.end),
		value: t$13.value
	}, delete t$13.name, delete t$13.value);
}
function eu$2(t$13) {
	(t$13.type === "plural" || t$13.type === "select") && (t$13.clause = t$13.type, t$13.type = "angularIcuExpression"), t$13.type === "expansionCase" && (t$13.type = "angularIcuCase");
}
function Si$4(t$13, e$4, r$12) {
	let { name: n$8, canSelfClose: s$8 = !0, normalizeTagName: i$18 = !1, normalizeAttributeName: a$13 = !1, allowHtmComponentClosingTags: o$9 = !1, isTagNameCaseSensitive: u$14 = !1, shouldParseAsRawText: p$2 } = e$4, { rootNodes: l$10, errors: m$11 } = Qr$5(t$13, {
		canSelfClose: s$8,
		allowHtmComponentClosingTags: o$9,
		isTagNameCaseSensitive: u$14,
		getTagContentType: p$2 ? (...c$3) => p$2(...c$3) ? N$3.RAW_TEXT : void 0 : void 0,
		tokenizeAngularBlocks: n$8 === "angular" ? !0 : void 0,
		tokenizeAngularLetDeclaration: n$8 === "angular" ? !0 : void 0
	});
	if (n$8 === "vue") {
		if (l$10.some((x$3) => x$3.type === "docType" && x$3.value === "html" || x$3.type === "element" && x$3.name.toLowerCase() === "html")) return Si$4(t$13, en$4, r$12);
		let g$2, y$7 = () => g$2 ?? (g$2 = Qr$5(t$13, {
			canSelfClose: s$8,
			allowHtmComponentClosingTags: o$9,
			isTagNameCaseSensitive: u$14
		})), q$3 = (x$3) => y$7().rootNodes.find(({ startSourceSpan: U$4 }) => U$4 && U$4.start.offset === x$3.startSourceSpan.start.offset) ?? x$3;
		for (let [x$3, U$4] of l$10.entries()) {
			let { endSourceSpan: nn$5, startSourceSpan: Ei$5 } = U$4;
			if (nn$5 === null) m$11 = y$7().errors, l$10[x$3] = q$3(U$4);
			else if (tu$3(U$4, r$12)) {
				let sn$4 = y$7().errors.find((an$5) => an$5.span.start.offset > Ei$5.start.offset && an$5.span.start.offset < nn$5.end.offset);
				sn$4 && Ci$2(sn$4), l$10[x$3] = q$3(U$4);
			}
		}
	}
	m$11.length > 0 && Ci$2(m$11[0]);
	let f$3 = (c$3) => {
		let g$2 = c$3.name.startsWith(":") ? c$3.name.slice(1).split(":")[0] : null, y$7 = c$3.nameSpan.toString(), q$3 = g$2 !== null && y$7.startsWith(`${g$2}:`);
		c$3.name = q$3 ? y$7.slice(g$2.length + 1) : y$7, c$3.namespace = g$2, c$3.hasExplicitNamespace = q$3;
	}, C$3 = (c$3) => {
		switch (c$3.type) {
			case "element":
				f$3(c$3);
				for (let g$2 of c$3.attrs) f$3(g$2), g$2.valueSpan ? (g$2.value = g$2.valueSpan.toString(), /["']/u.test(g$2.value[0]) && (g$2.value = g$2.value.slice(1, -1))) : g$2.value = null;
				break;
			case "comment":
				c$3.value = c$3.sourceSpan.toString().slice(4, -3);
				break;
			case "text":
				c$3.value = c$3.sourceSpan.toString();
				break;
		}
	}, A$3 = (c$3, g$2) => {
		let y$7 = c$3.toLowerCase();
		return g$2(y$7) ? y$7 : c$3;
	}, D$4 = (c$3) => {
		if (c$3.type === "element" && (i$18 && (!c$3.namespace || c$3.namespace === c$3.tagDefinition.implicitNamespacePrefix || fe$2(c$3)) && (c$3.name = A$3(c$3.name, (g$2) => gi$4.has(g$2))), a$13)) for (let g$2 of c$3.attrs) g$2.namespace || (g$2.name = A$3(g$2.name, (y$7) => ur$4.has(c$3.name) && (ur$4.get("*").has(y$7) || ur$4.get(c$3.name).has(y$7))));
	}, I$2 = (c$3) => {
		c$3.sourceSpan && c$3.endSourceSpan && (c$3.sourceSpan = new h$1(c$3.sourceSpan.start, c$3.endSourceSpan.end));
	}, F$4 = (c$3) => {
		if (c$3.type === "element") {
			let g$2 = He$5(u$14 ? c$3.name : c$3.name.toLowerCase());
			!c$3.namespace || c$3.namespace === g$2.implicitNamespacePrefix || fe$2(c$3) ? c$3.tagDefinition = g$2 : c$3.tagDefinition = He$5("");
		}
	};
	return Qt$1(new class extends ft$2 {
		visitExpansionCase(c$3, g$2) {
			n$8 === "angular" && this.visitChildren(g$2, (y$7) => {
				y$7(c$3.expression);
			});
		}
		visit(c$3) {
			C$3(c$3), F$4(c$3), D$4(c$3), I$2(c$3);
		}
	}(), l$10), l$10;
}
function tu$3(t$13, e$4) {
	var n$8;
	if (t$13.type !== "element" || t$13.name !== "template") return !1;
	let r$12 = (n$8 = t$13.attrs.find((s$8) => s$8.name === "lang")) == null ? void 0 : n$8.value;
	return !r$12 || Ne$3(e$4, { language: r$12 }) === "html";
}
function Ci$2(t$13) {
	let { msg: e$4, span: { start: r$12, end: n$8 } } = t$13;
	throw hi$4(e$4, {
		loc: {
			start: {
				line: r$12.line + 1,
				column: r$12.col + 1
			},
			end: {
				line: n$8.line + 1,
				column: n$8.col + 1
			}
		},
		cause: t$13
	});
}
function _i$3(t$13, e$4, r$12 = {}, n$8 = !0) {
	let { frontMatter: s$8, content: i$18 } = n$8 ? mi$4(t$13) : {
		frontMatter: null,
		content: t$13
	}, a$13 = new ve$3(t$13, r$12.filepath), o$9 = new ie$4(a$13, 0, 0, 0), u$14 = o$9.moveBy(t$13.length), p$2 = {
		type: "root",
		sourceSpan: new h$1(o$9, u$14),
		children: Si$4(i$18, e$4, r$12)
	};
	if (s$8) {
		let f$3 = new ie$4(a$13, 0, 0, 0), C$3 = f$3.moveBy(s$8.raw.length);
		s$8.sourceSpan = new h$1(f$3, C$3), p$2.children.unshift(s$8);
	}
	let l$10 = new or$3(p$2), m$11 = (f$3, C$3) => {
		let { offset: A$3 } = C$3, D$4 = w$1(!1, t$13.slice(0, A$3), /[^\n\r]/gu, " "), F$4 = _i$3(D$4 + f$3, e$4, r$12, !1);
		F$4.sourceSpan = new h$1(C$3, K$3(!1, F$4.children, -1).sourceSpan.end);
		let c$3 = F$4.children[0];
		return c$3.length === A$3 ? F$4.children.shift() : (c$3.sourceSpan = new h$1(c$3.sourceSpan.start.moveBy(A$3), c$3.sourceSpan.end), c$3.value = c$3.value.slice(A$3)), F$4;
	};
	return l$10.walk((f$3) => {
		if (f$3.type === "comment") {
			let C$3 = di$4(f$3, m$11);
			C$3 && f$3.parent.replaceChild(f$3, C$3);
		}
		Jo$1(f$3), Zo$1(f$3), eu$2(f$3);
	}), l$10;
}
function Et$2(t$13) {
	return {
		parse: (e$4, r$12) => _i$3(e$4, t$13, r$12),
		hasPragma: ws,
		hasIgnorePragma: bs$2,
		astFormat: "html",
		locStart: J$3,
		locEnd: se$2
	};
}
var en$4 = {
	name: "html",
	normalizeTagName: !0,
	normalizeAttributeName: !0,
	allowHtmComponentClosingTags: !0
}, ru$2 = Et$2(en$4), nu$1 = new Set(["mj-style", "mj-raw"]), su$1 = Et$2({
	...en$4,
	name: "mjml",
	shouldParseAsRawText: (t$13) => nu$1.has(t$13)
}), iu$2 = Et$2({ name: "angular" }), au$1 = Et$2({
	name: "vue",
	isTagNameCaseSensitive: !0,
	shouldParseAsRawText(t$13, e$4, r$12, n$8) {
		return t$13.toLowerCase() !== "html" && !r$12 && (t$13 !== "template" || n$8.some(({ name: s$8, value: i$18 }) => s$8 === "lang" && i$18 !== "html" && i$18 !== "" && i$18 !== void 0));
	}
}), ou$1 = Et$2({
	name: "lwc",
	canSelfClose: !1
});
var uu$1 = { html: qs$1 };
var ym = rn$4;

//#endregion
//#region node_modules/.pnpm/prettier@3.6.2_patch_hash=2c5fac0fd268a2b2ab314d9e790cb805e3eb5e35106fc2644635eb6950a6ec1f/node_modules/prettier/plugins/markdown.mjs
var yl$2 = Object.create;
var ht$1 = Object.defineProperty;
var xl$2 = Object.getOwnPropertyDescriptor;
var wl$2 = Object.getOwnPropertyNames;
var kl$2 = Object.getPrototypeOf, Bl$1 = Object.prototype.hasOwnProperty;
var Yn$2 = (e$4) => {
	throw TypeError(e$4);
};
var C$2 = (e$4, r$12) => () => (r$12 || e$4((r$12 = { exports: {} }).exports, r$12), r$12.exports), $n$2 = (e$4, r$12) => {
	for (var t$13 in r$12) ht$1(e$4, t$13, {
		get: r$12[t$13],
		enumerable: !0
	});
}, Tl$2 = (e$4, r$12, t$13, n$8) => {
	if (r$12 && typeof r$12 == "object" || typeof r$12 == "function") for (let a$13 of wl$2(r$12)) !Bl$1.call(e$4, a$13) && a$13 !== t$13 && ht$1(e$4, a$13, {
		get: () => r$12[a$13],
		enumerable: !(n$8 = xl$2(r$12, a$13)) || n$8.enumerable
	});
	return e$4;
};
var Me$2 = (e$4, r$12, t$13) => (t$13 = e$4 != null ? yl$2(kl$2(e$4)) : {}, Tl$2(r$12 || !e$4 || !e$4.__esModule ? ht$1(t$13, "default", {
	value: e$4,
	enumerable: !0
}) : t$13, e$4));
var Vn$2 = (e$4, r$12, t$13) => r$12.has(e$4) || Yn$2("Cannot " + t$13);
var ce$1 = (e$4, r$12, t$13) => (Vn$2(e$4, r$12, "read from private field"), t$13 ? t$13.call(e$4) : r$12.get(e$4)), jn$2 = (e$4, r$12, t$13) => r$12.has(e$4) ? Yn$2("Cannot add the same private member more than once") : r$12 instanceof WeakSet ? r$12.add(e$4) : r$12.set(e$4, t$13), Wn$2 = (e$4, r$12, t$13, n$8) => (Vn$2(e$4, r$12, "write to private field"), n$8 ? n$8.call(e$4, t$13) : r$12.set(e$4, t$13), t$13);
var kr$2 = C$2((sF, Hn$4) => {
	Hn$4.exports = Sl$3;
	function Sl$3(e$4) {
		return String(e$4).replace(/\s+/g, " ");
	}
});
var iu$1 = C$2((sv$1, nu$3) => {
	nu$3.exports = Vf$1;
	var Dr$5 = 9, zr$5 = 10, je$4 = 32, zf$1 = 33, Gf$1 = 58, We$2 = 91, Yf$1 = 92, Pt$5 = 93, pr$4 = 94, Gr$6 = 96, Yr$6 = 4, $f$1 = 1024;
	function Vf$1(e$4) {
		var r$12 = this.Parser, t$13 = this.Compiler;
		jf$1(r$12) && Hf(r$12, e$4), Wf$1(t$13) && Kf$1(t$13);
	}
	function jf$1(e$4) {
		return !!(e$4 && e$4.prototype && e$4.prototype.blockTokenizers);
	}
	function Wf$1(e$4) {
		return !!(e$4 && e$4.prototype && e$4.prototype.visitors);
	}
	function Hf(e$4, r$12) {
		for (var t$13 = r$12 || {}, n$8 = e$4.prototype, a$13 = n$8.blockTokenizers, i$18 = n$8.inlineTokenizers, u$14 = n$8.blockMethods, o$9 = n$8.inlineMethods, s$8 = a$13.definition, l$10 = i$18.reference, c$3 = [], f$3 = -1, p$2 = u$14.length, d$14; ++f$3 < p$2;) d$14 = u$14[f$3], !(d$14 === "newline" || d$14 === "indentedCode" || d$14 === "paragraph" || d$14 === "footnoteDefinition") && c$3.push([d$14]);
		c$3.push(["footnoteDefinition"]), t$13.inlineNotes && (Ot$4(o$9, "reference", "inlineNote"), i$18.inlineNote = m$11), Ot$4(u$14, "definition", "footnoteDefinition"), Ot$4(o$9, "reference", "footnoteCall"), a$13.definition = A$3, a$13.footnoteDefinition = D$4, i$18.footnoteCall = h$3, i$18.reference = F$4, n$8.interruptFootnoteDefinition = c$3, F$4.locator = l$10.locator, h$3.locator = v$5, m$11.locator = B$4;
		function D$4(b$7, g$2, y$7) {
			for (var x$3 = this, E$3 = x$3.interruptFootnoteDefinition, w$3 = x$3.offset, k$5 = g$2.length + 1, T$9 = 0, q$3 = [], N$5, P$5, S$4, _$2, O$3, Be$4, W$2, I$2, ee$4, Z$4, Ee$4, ve$6, U$4; T$9 < k$5 && (_$2 = g$2.charCodeAt(T$9), !(_$2 !== Dr$5 && _$2 !== je$4));) T$9++;
			if (g$2.charCodeAt(T$9++) === We$2 && g$2.charCodeAt(T$9++) === pr$4) {
				for (P$5 = T$9; T$9 < k$5;) {
					if (_$2 = g$2.charCodeAt(T$9), _$2 !== _$2 || _$2 === zr$5 || _$2 === Dr$5 || _$2 === je$4) return;
					if (_$2 === Pt$5) {
						S$4 = T$9, T$9++;
						break;
					}
					T$9++;
				}
				if (!(S$4 === void 0 || P$5 === S$4 || g$2.charCodeAt(T$9++) !== Gf$1)) {
					if (y$7) return !0;
					for (N$5 = g$2.slice(P$5, S$4), O$3 = b$7.now(), ee$4 = 0, Z$4 = 0, Ee$4 = T$9, ve$6 = []; T$9 < k$5;) {
						if (_$2 = g$2.charCodeAt(T$9), _$2 !== _$2 || _$2 === zr$5) U$4 = {
							start: ee$4,
							contentStart: Ee$4 || T$9,
							contentEnd: T$9,
							end: T$9
						}, ve$6.push(U$4), _$2 === zr$5 && (ee$4 = T$9 + 1, Z$4 = 0, Ee$4 = void 0, U$4.end = ee$4);
						else if (Z$4 !== void 0) if (_$2 === je$4 || _$2 === Dr$5) Z$4 += _$2 === je$4 ? 1 : Yr$6 - Z$4 % Yr$6, Z$4 > Yr$6 && (Z$4 = void 0, Ee$4 = T$9);
						else {
							if (Z$4 < Yr$6 && U$4 && (U$4.contentStart === U$4.contentEnd || Xf(E$3, a$13, x$3, [
								b$7,
								g$2.slice(T$9, $f$1),
								!0
							]))) break;
							Z$4 = void 0, Ee$4 = T$9;
						}
						T$9++;
					}
					for (T$9 = -1, k$5 = ve$6.length; k$5 > 0 && (U$4 = ve$6[k$5 - 1], U$4.contentStart === U$4.contentEnd);) k$5--;
					for (Be$4 = b$7(g$2.slice(0, U$4.contentEnd)); ++T$9 < k$5;) U$4 = ve$6[T$9], w$3[O$3.line + T$9] = (w$3[O$3.line + T$9] || 0) + (U$4.contentStart - U$4.start), q$3.push(g$2.slice(U$4.contentStart, U$4.end));
					return W$2 = x$3.enterBlock(), I$2 = x$3.tokenizeBlock(q$3.join(""), O$3), W$2(), Be$4({
						type: "footnoteDefinition",
						identifier: N$5.toLowerCase(),
						label: N$5,
						children: I$2
					});
				}
			}
		}
		function h$3(b$7, g$2, y$7) {
			var x$3 = g$2.length + 1, E$3 = 0, w$3, k$5, T$9, q$3;
			if (g$2.charCodeAt(E$3++) === We$2 && g$2.charCodeAt(E$3++) === pr$4) {
				for (k$5 = E$3; E$3 < x$3;) {
					if (q$3 = g$2.charCodeAt(E$3), q$3 !== q$3 || q$3 === zr$5 || q$3 === Dr$5 || q$3 === je$4) return;
					if (q$3 === Pt$5) {
						T$9 = E$3, E$3++;
						break;
					}
					E$3++;
				}
				if (!(T$9 === void 0 || k$5 === T$9)) return y$7 ? !0 : (w$3 = g$2.slice(k$5, T$9), b$7(g$2.slice(0, E$3))({
					type: "footnoteReference",
					identifier: w$3.toLowerCase(),
					label: w$3
				}));
			}
		}
		function m$11(b$7, g$2, y$7) {
			var x$3 = this, E$3 = g$2.length + 1, w$3 = 0, k$5 = 0, T$9, q$3, N$5, P$5, S$4, _$2, O$3;
			if (g$2.charCodeAt(w$3++) === pr$4 && g$2.charCodeAt(w$3++) === We$2) {
				for (N$5 = w$3; w$3 < E$3;) {
					if (q$3 = g$2.charCodeAt(w$3), q$3 !== q$3) return;
					if (_$2 === void 0) if (q$3 === Yf$1) w$3 += 2;
					else if (q$3 === We$2) k$5++, w$3++;
					else if (q$3 === Pt$5) if (k$5 === 0) {
						P$5 = w$3, w$3++;
						break;
					} else k$5--, w$3++;
					else if (q$3 === Gr$6) {
						for (S$4 = w$3, _$2 = 1; g$2.charCodeAt(S$4 + _$2) === Gr$6;) _$2++;
						w$3 += _$2;
					} else w$3++;
					else if (q$3 === Gr$6) {
						for (S$4 = w$3, O$3 = 1; g$2.charCodeAt(S$4 + O$3) === Gr$6;) O$3++;
						w$3 += O$3, _$2 === O$3 && (_$2 = void 0), O$3 = void 0;
					} else w$3++;
				}
				if (P$5 !== void 0) return y$7 ? !0 : (T$9 = b$7.now(), T$9.column += 2, T$9.offset += 2, b$7(g$2.slice(0, w$3))({
					type: "footnote",
					children: x$3.tokenizeInline(g$2.slice(N$5, P$5), T$9)
				}));
			}
		}
		function F$4(b$7, g$2, y$7) {
			var x$3 = 0;
			if (g$2.charCodeAt(x$3) === zf$1 && x$3++, g$2.charCodeAt(x$3) === We$2 && g$2.charCodeAt(x$3 + 1) !== pr$4) return l$10.call(this, b$7, g$2, y$7);
		}
		function A$3(b$7, g$2, y$7) {
			for (var x$3 = 0, E$3 = g$2.charCodeAt(x$3); E$3 === je$4 || E$3 === Dr$5;) E$3 = g$2.charCodeAt(++x$3);
			if (E$3 === We$2 && g$2.charCodeAt(x$3 + 1) !== pr$4) return s$8.call(this, b$7, g$2, y$7);
		}
		function v$5(b$7, g$2) {
			return b$7.indexOf("[", g$2);
		}
		function B$4(b$7, g$2) {
			return b$7.indexOf("^[", g$2);
		}
	}
	function Kf$1(e$4) {
		var r$12 = e$4.prototype.visitors, t$13 = "    ";
		r$12.footnote = n$8, r$12.footnoteReference = a$13, r$12.footnoteDefinition = i$18;
		function n$8(u$14) {
			return "^[" + this.all(u$14).join("") + "]";
		}
		function a$13(u$14) {
			return "[^" + (u$14.label || u$14.identifier) + "]";
		}
		function i$18(u$14) {
			for (var o$9 = this.all(u$14).join(`

`).split(`
`), s$8 = 0, l$10 = o$9.length, c$3; ++s$8 < l$10;) c$3 = o$9[s$8], c$3 !== "" && (o$9[s$8] = t$13 + c$3);
			return "[^" + (u$14.label || u$14.identifier) + "]: " + o$9.join(`
`);
		}
	}
	function Ot$4(e$4, r$12, t$13) {
		e$4.splice(e$4.indexOf(r$12), 0, t$13);
	}
	function Xf(e$4, r$12, t$13, n$8) {
		for (var a$13 = e$4.length, i$18 = -1; ++i$18 < a$13;) if (r$12[e$4[i$18][0]].apply(t$13, n$8)) return !0;
		return !1;
	}
});
var It$3 = C$2((Lt$6) => {
	Lt$6.isRemarkParser = Jf$1;
	Lt$6.isRemarkCompiler = Qf$1;
	function Jf$1(e$4) {
		return !!(e$4 && e$4.prototype && e$4.prototype.blockTokenizers);
	}
	function Qf$1(e$4) {
		return !!(e$4 && e$4.prototype && e$4.prototype.visitors);
	}
});
var fu$1 = C$2((lv$1, lu$1) => {
	var uu$3 = It$3();
	lu$1.exports = tD;
	var au$3 = 9, ou$2 = 32, $r$6 = 36, Zf$1 = 48, eD = 57, su$3 = 92, rD = ["math", "math-inline"], cu$3 = "math-display";
	function tD(e$4) {
		let r$12 = this.Parser, t$13 = this.Compiler;
		uu$3.isRemarkParser(r$12) && nD(r$12, e$4), uu$3.isRemarkCompiler(t$13) && iD(t$13, e$4);
	}
	function nD(e$4, r$12) {
		let t$13 = e$4.prototype, n$8 = t$13.inlineMethods;
		i$18.locator = a$13, t$13.inlineTokenizers.math = i$18, n$8.splice(n$8.indexOf("text"), 0, "math");
		function a$13(u$14, o$9) {
			return u$14.indexOf("$", o$9);
		}
		function i$18(u$14, o$9, s$8) {
			let l$10 = o$9.length, c$3 = !1, f$3 = !1, p$2 = 0, d$14, D$4, h$3, m$11, F$4, A$3, v$5;
			if (o$9.charCodeAt(p$2) === su$3 && (f$3 = !0, p$2++), o$9.charCodeAt(p$2) === $r$6) {
				if (p$2++, f$3) return s$8 ? !0 : u$14(o$9.slice(0, p$2))({
					type: "text",
					value: "$"
				});
				if (o$9.charCodeAt(p$2) === $r$6 && (c$3 = !0, p$2++), h$3 = o$9.charCodeAt(p$2), !(h$3 === ou$2 || h$3 === au$3)) {
					for (m$11 = p$2; p$2 < l$10;) {
						if (D$4 = h$3, h$3 = o$9.charCodeAt(p$2 + 1), D$4 === $r$6) {
							if (d$14 = o$9.charCodeAt(p$2 - 1), d$14 !== ou$2 && d$14 !== au$3 && (h$3 !== h$3 || h$3 < Zf$1 || h$3 > eD) && (!c$3 || h$3 === $r$6)) {
								F$4 = p$2 - 1, p$2++, c$3 && p$2++, A$3 = p$2;
								break;
							}
						} else D$4 === su$3 && (p$2++, h$3 = o$9.charCodeAt(p$2 + 1));
						p$2++;
					}
					if (A$3 !== void 0) return s$8 ? !0 : (v$5 = o$9.slice(m$11, F$4 + 1), u$14(o$9.slice(0, A$3))({
						type: "inlineMath",
						value: v$5,
						data: {
							hName: "span",
							hProperties: { className: rD.concat(c$3 && r$12.inlineMathDouble ? [cu$3] : []) },
							hChildren: [{
								type: "text",
								value: v$5
							}]
						}
					}));
				}
			}
		}
	}
	function iD(e$4) {
		let r$12 = e$4.prototype;
		r$12.visitors.inlineMath = t$13;
		function t$13(n$8) {
			let a$13 = "$";
			return (n$8.data && n$8.data.hProperties && n$8.data.hProperties.className || []).includes(cu$3) && (a$13 = "$$"), a$13 + n$8.value + a$13;
		}
	}
});
var mu$2 = C$2((fv$1, du$2) => {
	var Du$3 = It$3();
	du$2.exports = sD;
	var pu$2 = 10, hr$4 = 32, Rt$5 = 36, hu$3 = `
`, uD = "$", aD = 2, oD = ["math", "math-display"];
	function sD() {
		let e$4 = this.Parser, r$12 = this.Compiler;
		Du$3.isRemarkParser(e$4) && cD(e$4), Du$3.isRemarkCompiler(r$12) && lD(r$12);
	}
	function cD(e$4) {
		let r$12 = e$4.prototype, t$13 = r$12.blockMethods, n$8 = r$12.interruptParagraph, a$13 = r$12.interruptList, i$18 = r$12.interruptBlockquote;
		r$12.blockTokenizers.math = u$14, t$13.splice(t$13.indexOf("fencedCode") + 1, 0, "math"), n$8.splice(n$8.indexOf("fencedCode") + 1, 0, ["math"]), a$13.splice(a$13.indexOf("fencedCode") + 1, 0, ["math"]), i$18.splice(i$18.indexOf("fencedCode") + 1, 0, ["math"]);
		function u$14(o$9, s$8, l$10) {
			var c$3 = s$8.length, f$3 = 0;
			let p$2, d$14, D$4, h$3, m$11, F$4, A$3, v$5, B$4, b$7, g$2;
			for (; f$3 < c$3 && s$8.charCodeAt(f$3) === hr$4;) f$3++;
			for (m$11 = f$3; f$3 < c$3 && s$8.charCodeAt(f$3) === Rt$5;) f$3++;
			if (F$4 = f$3 - m$11, !(F$4 < aD)) {
				for (; f$3 < c$3 && s$8.charCodeAt(f$3) === hr$4;) f$3++;
				for (A$3 = f$3; f$3 < c$3;) {
					if (p$2 = s$8.charCodeAt(f$3), p$2 === Rt$5) return;
					if (p$2 === pu$2) break;
					f$3++;
				}
				if (s$8.charCodeAt(f$3) === pu$2) {
					if (l$10) return !0;
					for (d$14 = [], A$3 !== f$3 && d$14.push(s$8.slice(A$3, f$3)), f$3++, D$4 = s$8.indexOf(hu$3, f$3 + 1), D$4 = D$4 === -1 ? c$3 : D$4; f$3 < c$3;) {
						for (v$5 = !1, b$7 = f$3, g$2 = D$4, h$3 = D$4, B$4 = 0; h$3 > b$7 && s$8.charCodeAt(h$3 - 1) === hr$4;) h$3--;
						for (; h$3 > b$7 && s$8.charCodeAt(h$3 - 1) === Rt$5;) B$4++, h$3--;
						for (F$4 <= B$4 && s$8.indexOf(uD, b$7) === h$3 && (v$5 = !0, g$2 = h$3); b$7 <= g$2 && b$7 - f$3 < m$11 && s$8.charCodeAt(b$7) === hr$4;) b$7++;
						if (v$5) for (; g$2 > b$7 && s$8.charCodeAt(g$2 - 1) === hr$4;) g$2--;
						if ((!v$5 || b$7 !== g$2) && d$14.push(s$8.slice(b$7, g$2)), v$5) break;
						f$3 = D$4 + 1, D$4 = s$8.indexOf(hu$3, f$3 + 1), D$4 = D$4 === -1 ? c$3 : D$4;
					}
					return d$14 = d$14.join(`
`), o$9(s$8.slice(0, D$4))({
						type: "math",
						value: d$14,
						data: {
							hName: "div",
							hProperties: { className: oD.concat() },
							hChildren: [{
								type: "text",
								value: d$14
							}]
						}
					});
				}
			}
		}
	}
	function lD(e$4) {
		let r$12 = e$4.prototype;
		r$12.visitors.math = t$13;
		function t$13(n$8) {
			return `$$
` + n$8.value + `
$$`;
		}
	}
});
var gu$1 = C$2((Dv$1, Fu$3) => {
	var fD = fu$1(), DD = mu$2();
	Fu$3.exports = pD;
	function pD(e$4) {
		var r$12 = e$4 || {};
		DD.call(this, r$12), fD.call(this, r$12);
	}
});
var Ie$4 = C$2((pv$1, Eu$2) => {
	Eu$2.exports = dD;
	var hD = Object.prototype.hasOwnProperty;
	function dD() {
		for (var e$4 = {}, r$12 = 0; r$12 < arguments.length; r$12++) {
			var t$13 = arguments[r$12];
			for (var n$8 in t$13) hD.call(t$13, n$8) && (e$4[n$8] = t$13[n$8]);
		}
		return e$4;
	}
});
var vu$1 = C$2((hv, Nt$6) => {
	typeof Object.create == "function" ? Nt$6.exports = function(r$12, t$13) {
		t$13 && (r$12.super_ = t$13, r$12.prototype = Object.create(t$13.prototype, { constructor: {
			value: r$12,
			enumerable: !1,
			writable: !0,
			configurable: !0
		} }));
	} : Nt$6.exports = function(r$12, t$13) {
		if (t$13) {
			r$12.super_ = t$13;
			var n$8 = function() {};
			n$8.prototype = t$13.prototype, r$12.prototype = new n$8(), r$12.prototype.constructor = r$12;
		}
	};
});
var Au$2 = C$2((dv$1, bu$2) => {
	var mD = Ie$4(), Cu$2 = vu$1();
	bu$2.exports = FD;
	function FD(e$4) {
		var r$12, t$13, n$8;
		Cu$2(i$18, e$4), Cu$2(a$13, i$18), r$12 = i$18.prototype;
		for (t$13 in r$12) n$8 = r$12[t$13], n$8 && typeof n$8 == "object" && (r$12[t$13] = "concat" in n$8 ? n$8.concat() : mD(n$8));
		return i$18;
		function a$13(u$14) {
			return e$4.apply(this, u$14);
		}
		function i$18() {
			return this instanceof i$18 ? e$4.apply(this, arguments) : new a$13(arguments);
		}
	}
});
var xu$2 = C$2((mv$1, yu$3) => {
	yu$3.exports = gD;
	function gD(e$4, r$12, t$13) {
		return n$8;
		function n$8() {
			var a$13 = t$13 || this, i$18 = a$13[e$4];
			return a$13[e$4] = !r$12, u$14;
			function u$14() {
				a$13[e$4] = i$18;
			}
		}
	}
});
var ku$1 = C$2((Fv, wu$2) => {
	wu$2.exports = ED;
	function ED(e$4) {
		for (var r$12 = String(e$4), t$13 = [], n$8 = /\r?\n|\r/g; n$8.exec(r$12);) t$13.push(n$8.lastIndex);
		return t$13.push(r$12.length + 1), {
			toPoint: a$13,
			toPosition: a$13,
			toOffset: i$18
		};
		function a$13(u$14) {
			var o$9 = -1;
			if (u$14 > -1 && u$14 < t$13[t$13.length - 1]) {
				for (; ++o$9 < t$13.length;) if (t$13[o$9] > u$14) return {
					line: o$9 + 1,
					column: u$14 - (t$13[o$9 - 1] || 0) + 1,
					offset: u$14
				};
			}
			return {};
		}
		function i$18(u$14) {
			var o$9 = u$14 && u$14.line, s$8 = u$14 && u$14.column, l$10;
			return !isNaN(o$9) && !isNaN(s$8) && o$9 - 1 in t$13 && (l$10 = (t$13[o$9 - 2] || 0) + s$8 - 1 || 0), l$10 > -1 && l$10 < t$13[t$13.length - 1] ? l$10 : -1;
		}
	}
});
var Tu$1 = C$2((gv, Bu$3) => {
	Bu$3.exports = vD;
	var Mt$5 = "\\";
	function vD(e$4, r$12) {
		return t$13;
		function t$13(n$8) {
			for (var a$13 = 0, i$18 = n$8.indexOf(Mt$5), u$14 = e$4[r$12], o$9 = [], s$8; i$18 !== -1;) o$9.push(n$8.slice(a$13, i$18)), a$13 = i$18 + 1, s$8 = n$8.charAt(a$13), (!s$8 || u$14.indexOf(s$8) === -1) && o$9.push(Mt$5), i$18 = n$8.indexOf(Mt$5, a$13 + 1);
			return o$9.push(n$8.slice(a$13)), o$9.join("");
		}
	}
});
var qu$2 = C$2((Ev$1, CD) => {
	CD.exports = {
		AElig: "Æ",
		AMP: "&",
		Aacute: "Á",
		Acirc: "Â",
		Agrave: "À",
		Aring: "Å",
		Atilde: "Ã",
		Auml: "Ä",
		COPY: "©",
		Ccedil: "Ç",
		ETH: "Ð",
		Eacute: "É",
		Ecirc: "Ê",
		Egrave: "È",
		Euml: "Ë",
		GT: ">",
		Iacute: "Í",
		Icirc: "Î",
		Igrave: "Ì",
		Iuml: "Ï",
		LT: "<",
		Ntilde: "Ñ",
		Oacute: "Ó",
		Ocirc: "Ô",
		Ograve: "Ò",
		Oslash: "Ø",
		Otilde: "Õ",
		Ouml: "Ö",
		QUOT: "\"",
		REG: "®",
		THORN: "Þ",
		Uacute: "Ú",
		Ucirc: "Û",
		Ugrave: "Ù",
		Uuml: "Ü",
		Yacute: "Ý",
		aacute: "á",
		acirc: "â",
		acute: "´",
		aelig: "æ",
		agrave: "à",
		amp: "&",
		aring: "å",
		atilde: "ã",
		auml: "ä",
		brvbar: "¦",
		ccedil: "ç",
		cedil: "¸",
		cent: "¢",
		copy: "©",
		curren: "¤",
		deg: "°",
		divide: "÷",
		eacute: "é",
		ecirc: "ê",
		egrave: "è",
		eth: "ð",
		euml: "ë",
		frac12: "½",
		frac14: "¼",
		frac34: "¾",
		gt: ">",
		iacute: "í",
		icirc: "î",
		iexcl: "¡",
		igrave: "ì",
		iquest: "¿",
		iuml: "ï",
		laquo: "«",
		lt: "<",
		macr: "¯",
		micro: "µ",
		middot: "·",
		nbsp: "\xA0",
		not: "¬",
		ntilde: "ñ",
		oacute: "ó",
		ocirc: "ô",
		ograve: "ò",
		ordf: "ª",
		ordm: "º",
		oslash: "ø",
		otilde: "õ",
		ouml: "ö",
		para: "¶",
		plusmn: "±",
		pound: "£",
		quot: "\"",
		raquo: "»",
		reg: "®",
		sect: "§",
		shy: "­",
		sup1: "¹",
		sup2: "²",
		sup3: "³",
		szlig: "ß",
		thorn: "þ",
		times: "×",
		uacute: "ú",
		ucirc: "û",
		ugrave: "ù",
		uml: "¨",
		uuml: "ü",
		yacute: "ý",
		yen: "¥",
		yuml: "ÿ"
	};
});
var _u$2 = C$2((vv$1, bD) => {
	bD.exports = {
		"0": "�",
		"128": "€",
		"130": "‚",
		"131": "ƒ",
		"132": "„",
		"133": "…",
		"134": "†",
		"135": "‡",
		"136": "ˆ",
		"137": "‰",
		"138": "Š",
		"139": "‹",
		"140": "Œ",
		"142": "Ž",
		"145": "‘",
		"146": "’",
		"147": "“",
		"148": "”",
		"149": "•",
		"150": "–",
		"151": "—",
		"152": "˜",
		"153": "™",
		"154": "š",
		"155": "›",
		"156": "œ",
		"158": "ž",
		"159": "Ÿ"
	};
});
var Re$3 = C$2((Cv$1, Su$3) => {
	Su$3.exports = AD;
	function AD(e$4) {
		var r$12 = typeof e$4 == "string" ? e$4.charCodeAt(0) : e$4;
		return r$12 >= 48 && r$12 <= 57;
	}
});
var Ou$2 = C$2((bv$1, Pu$3) => {
	Pu$3.exports = yD;
	function yD(e$4) {
		var r$12 = typeof e$4 == "string" ? e$4.charCodeAt(0) : e$4;
		return r$12 >= 97 && r$12 <= 102 || r$12 >= 65 && r$12 <= 70 || r$12 >= 48 && r$12 <= 57;
	}
});
var He$4 = C$2((Av$1, Lu$2) => {
	Lu$2.exports = xD;
	function xD(e$4) {
		var r$12 = typeof e$4 == "string" ? e$4.charCodeAt(0) : e$4;
		return r$12 >= 97 && r$12 <= 122 || r$12 >= 65 && r$12 <= 90;
	}
});
var Ru$1 = C$2((yv, Iu$2) => {
	var wD = He$4(), kD = Re$3();
	Iu$2.exports = BD;
	function BD(e$4) {
		return wD(e$4) || kD(e$4);
	}
});
var Nu$1 = C$2((xv$1, TD) => {
	TD.exports = {
		AEli: "Æ",
		AElig: "Æ",
		AM: "&",
		AMP: "&",
		Aacut: "Á",
		Aacute: "Á",
		Abreve: "Ă",
		Acir: "Â",
		Acirc: "Â",
		Acy: "А",
		Afr: "𝔄",
		Agrav: "À",
		Agrave: "À",
		Alpha: "Α",
		Amacr: "Ā",
		And: "⩓",
		Aogon: "Ą",
		Aopf: "𝔸",
		ApplyFunction: "⁡",
		Arin: "Å",
		Aring: "Å",
		Ascr: "𝒜",
		Assign: "≔",
		Atild: "Ã",
		Atilde: "Ã",
		Aum: "Ä",
		Auml: "Ä",
		Backslash: "∖",
		Barv: "⫧",
		Barwed: "⌆",
		Bcy: "Б",
		Because: "∵",
		Bernoullis: "ℬ",
		Beta: "Β",
		Bfr: "𝔅",
		Bopf: "𝔹",
		Breve: "˘",
		Bscr: "ℬ",
		Bumpeq: "≎",
		CHcy: "Ч",
		COP: "©",
		COPY: "©",
		Cacute: "Ć",
		Cap: "⋒",
		CapitalDifferentialD: "ⅅ",
		Cayleys: "ℭ",
		Ccaron: "Č",
		Ccedi: "Ç",
		Ccedil: "Ç",
		Ccirc: "Ĉ",
		Cconint: "∰",
		Cdot: "Ċ",
		Cedilla: "¸",
		CenterDot: "·",
		Cfr: "ℭ",
		Chi: "Χ",
		CircleDot: "⊙",
		CircleMinus: "⊖",
		CirclePlus: "⊕",
		CircleTimes: "⊗",
		ClockwiseContourIntegral: "∲",
		CloseCurlyDoubleQuote: "”",
		CloseCurlyQuote: "’",
		Colon: "∷",
		Colone: "⩴",
		Congruent: "≡",
		Conint: "∯",
		ContourIntegral: "∮",
		Copf: "ℂ",
		Coproduct: "∐",
		CounterClockwiseContourIntegral: "∳",
		Cross: "⨯",
		Cscr: "𝒞",
		Cup: "⋓",
		CupCap: "≍",
		DD: "ⅅ",
		DDotrahd: "⤑",
		DJcy: "Ђ",
		DScy: "Ѕ",
		DZcy: "Џ",
		Dagger: "‡",
		Darr: "↡",
		Dashv: "⫤",
		Dcaron: "Ď",
		Dcy: "Д",
		Del: "∇",
		Delta: "Δ",
		Dfr: "𝔇",
		DiacriticalAcute: "´",
		DiacriticalDot: "˙",
		DiacriticalDoubleAcute: "˝",
		DiacriticalGrave: "`",
		DiacriticalTilde: "˜",
		Diamond: "⋄",
		DifferentialD: "ⅆ",
		Dopf: "𝔻",
		Dot: "¨",
		DotDot: "⃜",
		DotEqual: "≐",
		DoubleContourIntegral: "∯",
		DoubleDot: "¨",
		DoubleDownArrow: "⇓",
		DoubleLeftArrow: "⇐",
		DoubleLeftRightArrow: "⇔",
		DoubleLeftTee: "⫤",
		DoubleLongLeftArrow: "⟸",
		DoubleLongLeftRightArrow: "⟺",
		DoubleLongRightArrow: "⟹",
		DoubleRightArrow: "⇒",
		DoubleRightTee: "⊨",
		DoubleUpArrow: "⇑",
		DoubleUpDownArrow: "⇕",
		DoubleVerticalBar: "∥",
		DownArrow: "↓",
		DownArrowBar: "⤓",
		DownArrowUpArrow: "⇵",
		DownBreve: "̑",
		DownLeftRightVector: "⥐",
		DownLeftTeeVector: "⥞",
		DownLeftVector: "↽",
		DownLeftVectorBar: "⥖",
		DownRightTeeVector: "⥟",
		DownRightVector: "⇁",
		DownRightVectorBar: "⥗",
		DownTee: "⊤",
		DownTeeArrow: "↧",
		Downarrow: "⇓",
		Dscr: "𝒟",
		Dstrok: "Đ",
		ENG: "Ŋ",
		ET: "Ð",
		ETH: "Ð",
		Eacut: "É",
		Eacute: "É",
		Ecaron: "Ě",
		Ecir: "Ê",
		Ecirc: "Ê",
		Ecy: "Э",
		Edot: "Ė",
		Efr: "𝔈",
		Egrav: "È",
		Egrave: "È",
		Element: "∈",
		Emacr: "Ē",
		EmptySmallSquare: "◻",
		EmptyVerySmallSquare: "▫",
		Eogon: "Ę",
		Eopf: "𝔼",
		Epsilon: "Ε",
		Equal: "⩵",
		EqualTilde: "≂",
		Equilibrium: "⇌",
		Escr: "ℰ",
		Esim: "⩳",
		Eta: "Η",
		Eum: "Ë",
		Euml: "Ë",
		Exists: "∃",
		ExponentialE: "ⅇ",
		Fcy: "Ф",
		Ffr: "𝔉",
		FilledSmallSquare: "◼",
		FilledVerySmallSquare: "▪",
		Fopf: "𝔽",
		ForAll: "∀",
		Fouriertrf: "ℱ",
		Fscr: "ℱ",
		GJcy: "Ѓ",
		G: ">",
		GT: ">",
		Gamma: "Γ",
		Gammad: "Ϝ",
		Gbreve: "Ğ",
		Gcedil: "Ģ",
		Gcirc: "Ĝ",
		Gcy: "Г",
		Gdot: "Ġ",
		Gfr: "𝔊",
		Gg: "⋙",
		Gopf: "𝔾",
		GreaterEqual: "≥",
		GreaterEqualLess: "⋛",
		GreaterFullEqual: "≧",
		GreaterGreater: "⪢",
		GreaterLess: "≷",
		GreaterSlantEqual: "⩾",
		GreaterTilde: "≳",
		Gscr: "𝒢",
		Gt: "≫",
		HARDcy: "Ъ",
		Hacek: "ˇ",
		Hat: "^",
		Hcirc: "Ĥ",
		Hfr: "ℌ",
		HilbertSpace: "ℋ",
		Hopf: "ℍ",
		HorizontalLine: "─",
		Hscr: "ℋ",
		Hstrok: "Ħ",
		HumpDownHump: "≎",
		HumpEqual: "≏",
		IEcy: "Е",
		IJlig: "Ĳ",
		IOcy: "Ё",
		Iacut: "Í",
		Iacute: "Í",
		Icir: "Î",
		Icirc: "Î",
		Icy: "И",
		Idot: "İ",
		Ifr: "ℑ",
		Igrav: "Ì",
		Igrave: "Ì",
		Im: "ℑ",
		Imacr: "Ī",
		ImaginaryI: "ⅈ",
		Implies: "⇒",
		Int: "∬",
		Integral: "∫",
		Intersection: "⋂",
		InvisibleComma: "⁣",
		InvisibleTimes: "⁢",
		Iogon: "Į",
		Iopf: "𝕀",
		Iota: "Ι",
		Iscr: "ℐ",
		Itilde: "Ĩ",
		Iukcy: "І",
		Ium: "Ï",
		Iuml: "Ï",
		Jcirc: "Ĵ",
		Jcy: "Й",
		Jfr: "𝔍",
		Jopf: "𝕁",
		Jscr: "𝒥",
		Jsercy: "Ј",
		Jukcy: "Є",
		KHcy: "Х",
		KJcy: "Ќ",
		Kappa: "Κ",
		Kcedil: "Ķ",
		Kcy: "К",
		Kfr: "𝔎",
		Kopf: "𝕂",
		Kscr: "𝒦",
		LJcy: "Љ",
		L: "<",
		LT: "<",
		Lacute: "Ĺ",
		Lambda: "Λ",
		Lang: "⟪",
		Laplacetrf: "ℒ",
		Larr: "↞",
		Lcaron: "Ľ",
		Lcedil: "Ļ",
		Lcy: "Л",
		LeftAngleBracket: "⟨",
		LeftArrow: "←",
		LeftArrowBar: "⇤",
		LeftArrowRightArrow: "⇆",
		LeftCeiling: "⌈",
		LeftDoubleBracket: "⟦",
		LeftDownTeeVector: "⥡",
		LeftDownVector: "⇃",
		LeftDownVectorBar: "⥙",
		LeftFloor: "⌊",
		LeftRightArrow: "↔",
		LeftRightVector: "⥎",
		LeftTee: "⊣",
		LeftTeeArrow: "↤",
		LeftTeeVector: "⥚",
		LeftTriangle: "⊲",
		LeftTriangleBar: "⧏",
		LeftTriangleEqual: "⊴",
		LeftUpDownVector: "⥑",
		LeftUpTeeVector: "⥠",
		LeftUpVector: "↿",
		LeftUpVectorBar: "⥘",
		LeftVector: "↼",
		LeftVectorBar: "⥒",
		Leftarrow: "⇐",
		Leftrightarrow: "⇔",
		LessEqualGreater: "⋚",
		LessFullEqual: "≦",
		LessGreater: "≶",
		LessLess: "⪡",
		LessSlantEqual: "⩽",
		LessTilde: "≲",
		Lfr: "𝔏",
		Ll: "⋘",
		Lleftarrow: "⇚",
		Lmidot: "Ŀ",
		LongLeftArrow: "⟵",
		LongLeftRightArrow: "⟷",
		LongRightArrow: "⟶",
		Longleftarrow: "⟸",
		Longleftrightarrow: "⟺",
		Longrightarrow: "⟹",
		Lopf: "𝕃",
		LowerLeftArrow: "↙",
		LowerRightArrow: "↘",
		Lscr: "ℒ",
		Lsh: "↰",
		Lstrok: "Ł",
		Lt: "≪",
		Map: "⤅",
		Mcy: "М",
		MediumSpace: " ",
		Mellintrf: "ℳ",
		Mfr: "𝔐",
		MinusPlus: "∓",
		Mopf: "𝕄",
		Mscr: "ℳ",
		Mu: "Μ",
		NJcy: "Њ",
		Nacute: "Ń",
		Ncaron: "Ň",
		Ncedil: "Ņ",
		Ncy: "Н",
		NegativeMediumSpace: "​",
		NegativeThickSpace: "​",
		NegativeThinSpace: "​",
		NegativeVeryThinSpace: "​",
		NestedGreaterGreater: "≫",
		NestedLessLess: "≪",
		NewLine: `
`,
		Nfr: "𝔑",
		NoBreak: "⁠",
		NonBreakingSpace: "\xA0",
		Nopf: "ℕ",
		Not: "⫬",
		NotCongruent: "≢",
		NotCupCap: "≭",
		NotDoubleVerticalBar: "∦",
		NotElement: "∉",
		NotEqual: "≠",
		NotEqualTilde: "≂̸",
		NotExists: "∄",
		NotGreater: "≯",
		NotGreaterEqual: "≱",
		NotGreaterFullEqual: "≧̸",
		NotGreaterGreater: "≫̸",
		NotGreaterLess: "≹",
		NotGreaterSlantEqual: "⩾̸",
		NotGreaterTilde: "≵",
		NotHumpDownHump: "≎̸",
		NotHumpEqual: "≏̸",
		NotLeftTriangle: "⋪",
		NotLeftTriangleBar: "⧏̸",
		NotLeftTriangleEqual: "⋬",
		NotLess: "≮",
		NotLessEqual: "≰",
		NotLessGreater: "≸",
		NotLessLess: "≪̸",
		NotLessSlantEqual: "⩽̸",
		NotLessTilde: "≴",
		NotNestedGreaterGreater: "⪢̸",
		NotNestedLessLess: "⪡̸",
		NotPrecedes: "⊀",
		NotPrecedesEqual: "⪯̸",
		NotPrecedesSlantEqual: "⋠",
		NotReverseElement: "∌",
		NotRightTriangle: "⋫",
		NotRightTriangleBar: "⧐̸",
		NotRightTriangleEqual: "⋭",
		NotSquareSubset: "⊏̸",
		NotSquareSubsetEqual: "⋢",
		NotSquareSuperset: "⊐̸",
		NotSquareSupersetEqual: "⋣",
		NotSubset: "⊂⃒",
		NotSubsetEqual: "⊈",
		NotSucceeds: "⊁",
		NotSucceedsEqual: "⪰̸",
		NotSucceedsSlantEqual: "⋡",
		NotSucceedsTilde: "≿̸",
		NotSuperset: "⊃⃒",
		NotSupersetEqual: "⊉",
		NotTilde: "≁",
		NotTildeEqual: "≄",
		NotTildeFullEqual: "≇",
		NotTildeTilde: "≉",
		NotVerticalBar: "∤",
		Nscr: "𝒩",
		Ntild: "Ñ",
		Ntilde: "Ñ",
		Nu: "Ν",
		OElig: "Œ",
		Oacut: "Ó",
		Oacute: "Ó",
		Ocir: "Ô",
		Ocirc: "Ô",
		Ocy: "О",
		Odblac: "Ő",
		Ofr: "𝔒",
		Ograv: "Ò",
		Ograve: "Ò",
		Omacr: "Ō",
		Omega: "Ω",
		Omicron: "Ο",
		Oopf: "𝕆",
		OpenCurlyDoubleQuote: "“",
		OpenCurlyQuote: "‘",
		Or: "⩔",
		Oscr: "𝒪",
		Oslas: "Ø",
		Oslash: "Ø",
		Otild: "Õ",
		Otilde: "Õ",
		Otimes: "⨷",
		Oum: "Ö",
		Ouml: "Ö",
		OverBar: "‾",
		OverBrace: "⏞",
		OverBracket: "⎴",
		OverParenthesis: "⏜",
		PartialD: "∂",
		Pcy: "П",
		Pfr: "𝔓",
		Phi: "Φ",
		Pi: "Π",
		PlusMinus: "±",
		Poincareplane: "ℌ",
		Popf: "ℙ",
		Pr: "⪻",
		Precedes: "≺",
		PrecedesEqual: "⪯",
		PrecedesSlantEqual: "≼",
		PrecedesTilde: "≾",
		Prime: "″",
		Product: "∏",
		Proportion: "∷",
		Proportional: "∝",
		Pscr: "𝒫",
		Psi: "Ψ",
		QUO: "\"",
		QUOT: "\"",
		Qfr: "𝔔",
		Qopf: "ℚ",
		Qscr: "𝒬",
		RBarr: "⤐",
		RE: "®",
		REG: "®",
		Racute: "Ŕ",
		Rang: "⟫",
		Rarr: "↠",
		Rarrtl: "⤖",
		Rcaron: "Ř",
		Rcedil: "Ŗ",
		Rcy: "Р",
		Re: "ℜ",
		ReverseElement: "∋",
		ReverseEquilibrium: "⇋",
		ReverseUpEquilibrium: "⥯",
		Rfr: "ℜ",
		Rho: "Ρ",
		RightAngleBracket: "⟩",
		RightArrow: "→",
		RightArrowBar: "⇥",
		RightArrowLeftArrow: "⇄",
		RightCeiling: "⌉",
		RightDoubleBracket: "⟧",
		RightDownTeeVector: "⥝",
		RightDownVector: "⇂",
		RightDownVectorBar: "⥕",
		RightFloor: "⌋",
		RightTee: "⊢",
		RightTeeArrow: "↦",
		RightTeeVector: "⥛",
		RightTriangle: "⊳",
		RightTriangleBar: "⧐",
		RightTriangleEqual: "⊵",
		RightUpDownVector: "⥏",
		RightUpTeeVector: "⥜",
		RightUpVector: "↾",
		RightUpVectorBar: "⥔",
		RightVector: "⇀",
		RightVectorBar: "⥓",
		Rightarrow: "⇒",
		Ropf: "ℝ",
		RoundImplies: "⥰",
		Rrightarrow: "⇛",
		Rscr: "ℛ",
		Rsh: "↱",
		RuleDelayed: "⧴",
		SHCHcy: "Щ",
		SHcy: "Ш",
		SOFTcy: "Ь",
		Sacute: "Ś",
		Sc: "⪼",
		Scaron: "Š",
		Scedil: "Ş",
		Scirc: "Ŝ",
		Scy: "С",
		Sfr: "𝔖",
		ShortDownArrow: "↓",
		ShortLeftArrow: "←",
		ShortRightArrow: "→",
		ShortUpArrow: "↑",
		Sigma: "Σ",
		SmallCircle: "∘",
		Sopf: "𝕊",
		Sqrt: "√",
		Square: "□",
		SquareIntersection: "⊓",
		SquareSubset: "⊏",
		SquareSubsetEqual: "⊑",
		SquareSuperset: "⊐",
		SquareSupersetEqual: "⊒",
		SquareUnion: "⊔",
		Sscr: "𝒮",
		Star: "⋆",
		Sub: "⋐",
		Subset: "⋐",
		SubsetEqual: "⊆",
		Succeeds: "≻",
		SucceedsEqual: "⪰",
		SucceedsSlantEqual: "≽",
		SucceedsTilde: "≿",
		SuchThat: "∋",
		Sum: "∑",
		Sup: "⋑",
		Superset: "⊃",
		SupersetEqual: "⊇",
		Supset: "⋑",
		THOR: "Þ",
		THORN: "Þ",
		TRADE: "™",
		TSHcy: "Ћ",
		TScy: "Ц",
		Tab: "	",
		Tau: "Τ",
		Tcaron: "Ť",
		Tcedil: "Ţ",
		Tcy: "Т",
		Tfr: "𝔗",
		Therefore: "∴",
		Theta: "Θ",
		ThickSpace: "  ",
		ThinSpace: " ",
		Tilde: "∼",
		TildeEqual: "≃",
		TildeFullEqual: "≅",
		TildeTilde: "≈",
		Topf: "𝕋",
		TripleDot: "⃛",
		Tscr: "𝒯",
		Tstrok: "Ŧ",
		Uacut: "Ú",
		Uacute: "Ú",
		Uarr: "↟",
		Uarrocir: "⥉",
		Ubrcy: "Ў",
		Ubreve: "Ŭ",
		Ucir: "Û",
		Ucirc: "Û",
		Ucy: "У",
		Udblac: "Ű",
		Ufr: "𝔘",
		Ugrav: "Ù",
		Ugrave: "Ù",
		Umacr: "Ū",
		UnderBar: "_",
		UnderBrace: "⏟",
		UnderBracket: "⎵",
		UnderParenthesis: "⏝",
		Union: "⋃",
		UnionPlus: "⊎",
		Uogon: "Ų",
		Uopf: "𝕌",
		UpArrow: "↑",
		UpArrowBar: "⤒",
		UpArrowDownArrow: "⇅",
		UpDownArrow: "↕",
		UpEquilibrium: "⥮",
		UpTee: "⊥",
		UpTeeArrow: "↥",
		Uparrow: "⇑",
		Updownarrow: "⇕",
		UpperLeftArrow: "↖",
		UpperRightArrow: "↗",
		Upsi: "ϒ",
		Upsilon: "Υ",
		Uring: "Ů",
		Uscr: "𝒰",
		Utilde: "Ũ",
		Uum: "Ü",
		Uuml: "Ü",
		VDash: "⊫",
		Vbar: "⫫",
		Vcy: "В",
		Vdash: "⊩",
		Vdashl: "⫦",
		Vee: "⋁",
		Verbar: "‖",
		Vert: "‖",
		VerticalBar: "∣",
		VerticalLine: "|",
		VerticalSeparator: "❘",
		VerticalTilde: "≀",
		VeryThinSpace: " ",
		Vfr: "𝔙",
		Vopf: "𝕍",
		Vscr: "𝒱",
		Vvdash: "⊪",
		Wcirc: "Ŵ",
		Wedge: "⋀",
		Wfr: "𝔚",
		Wopf: "𝕎",
		Wscr: "𝒲",
		Xfr: "𝔛",
		Xi: "Ξ",
		Xopf: "𝕏",
		Xscr: "𝒳",
		YAcy: "Я",
		YIcy: "Ї",
		YUcy: "Ю",
		Yacut: "Ý",
		Yacute: "Ý",
		Ycirc: "Ŷ",
		Ycy: "Ы",
		Yfr: "𝔜",
		Yopf: "𝕐",
		Yscr: "𝒴",
		Yuml: "Ÿ",
		ZHcy: "Ж",
		Zacute: "Ź",
		Zcaron: "Ž",
		Zcy: "З",
		Zdot: "Ż",
		ZeroWidthSpace: "​",
		Zeta: "Ζ",
		Zfr: "ℨ",
		Zopf: "ℤ",
		Zscr: "𝒵",
		aacut: "á",
		aacute: "á",
		abreve: "ă",
		ac: "∾",
		acE: "∾̳",
		acd: "∿",
		acir: "â",
		acirc: "â",
		acut: "´",
		acute: "´",
		acy: "а",
		aeli: "æ",
		aelig: "æ",
		af: "⁡",
		afr: "𝔞",
		agrav: "à",
		agrave: "à",
		alefsym: "ℵ",
		aleph: "ℵ",
		alpha: "α",
		amacr: "ā",
		amalg: "⨿",
		am: "&",
		amp: "&",
		and: "∧",
		andand: "⩕",
		andd: "⩜",
		andslope: "⩘",
		andv: "⩚",
		ang: "∠",
		ange: "⦤",
		angle: "∠",
		angmsd: "∡",
		angmsdaa: "⦨",
		angmsdab: "⦩",
		angmsdac: "⦪",
		angmsdad: "⦫",
		angmsdae: "⦬",
		angmsdaf: "⦭",
		angmsdag: "⦮",
		angmsdah: "⦯",
		angrt: "∟",
		angrtvb: "⊾",
		angrtvbd: "⦝",
		angsph: "∢",
		angst: "Å",
		angzarr: "⍼",
		aogon: "ą",
		aopf: "𝕒",
		ap: "≈",
		apE: "⩰",
		apacir: "⩯",
		ape: "≊",
		apid: "≋",
		apos: "'",
		approx: "≈",
		approxeq: "≊",
		arin: "å",
		aring: "å",
		ascr: "𝒶",
		ast: "*",
		asymp: "≈",
		asympeq: "≍",
		atild: "ã",
		atilde: "ã",
		aum: "ä",
		auml: "ä",
		awconint: "∳",
		awint: "⨑",
		bNot: "⫭",
		backcong: "≌",
		backepsilon: "϶",
		backprime: "‵",
		backsim: "∽",
		backsimeq: "⋍",
		barvee: "⊽",
		barwed: "⌅",
		barwedge: "⌅",
		bbrk: "⎵",
		bbrktbrk: "⎶",
		bcong: "≌",
		bcy: "б",
		bdquo: "„",
		becaus: "∵",
		because: "∵",
		bemptyv: "⦰",
		bepsi: "϶",
		bernou: "ℬ",
		beta: "β",
		beth: "ℶ",
		between: "≬",
		bfr: "𝔟",
		bigcap: "⋂",
		bigcirc: "◯",
		bigcup: "⋃",
		bigodot: "⨀",
		bigoplus: "⨁",
		bigotimes: "⨂",
		bigsqcup: "⨆",
		bigstar: "★",
		bigtriangledown: "▽",
		bigtriangleup: "△",
		biguplus: "⨄",
		bigvee: "⋁",
		bigwedge: "⋀",
		bkarow: "⤍",
		blacklozenge: "⧫",
		blacksquare: "▪",
		blacktriangle: "▴",
		blacktriangledown: "▾",
		blacktriangleleft: "◂",
		blacktriangleright: "▸",
		blank: "␣",
		blk12: "▒",
		blk14: "░",
		blk34: "▓",
		block: "█",
		bne: "=⃥",
		bnequiv: "≡⃥",
		bnot: "⌐",
		bopf: "𝕓",
		bot: "⊥",
		bottom: "⊥",
		bowtie: "⋈",
		boxDL: "╗",
		boxDR: "╔",
		boxDl: "╖",
		boxDr: "╓",
		boxH: "═",
		boxHD: "╦",
		boxHU: "╩",
		boxHd: "╤",
		boxHu: "╧",
		boxUL: "╝",
		boxUR: "╚",
		boxUl: "╜",
		boxUr: "╙",
		boxV: "║",
		boxVH: "╬",
		boxVL: "╣",
		boxVR: "╠",
		boxVh: "╫",
		boxVl: "╢",
		boxVr: "╟",
		boxbox: "⧉",
		boxdL: "╕",
		boxdR: "╒",
		boxdl: "┐",
		boxdr: "┌",
		boxh: "─",
		boxhD: "╥",
		boxhU: "╨",
		boxhd: "┬",
		boxhu: "┴",
		boxminus: "⊟",
		boxplus: "⊞",
		boxtimes: "⊠",
		boxuL: "╛",
		boxuR: "╘",
		boxul: "┘",
		boxur: "└",
		boxv: "│",
		boxvH: "╪",
		boxvL: "╡",
		boxvR: "╞",
		boxvh: "┼",
		boxvl: "┤",
		boxvr: "├",
		bprime: "‵",
		breve: "˘",
		brvba: "¦",
		brvbar: "¦",
		bscr: "𝒷",
		bsemi: "⁏",
		bsim: "∽",
		bsime: "⋍",
		bsol: "\\",
		bsolb: "⧅",
		bsolhsub: "⟈",
		bull: "•",
		bullet: "•",
		bump: "≎",
		bumpE: "⪮",
		bumpe: "≏",
		bumpeq: "≏",
		cacute: "ć",
		cap: "∩",
		capand: "⩄",
		capbrcup: "⩉",
		capcap: "⩋",
		capcup: "⩇",
		capdot: "⩀",
		caps: "∩︀",
		caret: "⁁",
		caron: "ˇ",
		ccaps: "⩍",
		ccaron: "č",
		ccedi: "ç",
		ccedil: "ç",
		ccirc: "ĉ",
		ccups: "⩌",
		ccupssm: "⩐",
		cdot: "ċ",
		cedi: "¸",
		cedil: "¸",
		cemptyv: "⦲",
		cen: "¢",
		cent: "¢",
		centerdot: "·",
		cfr: "𝔠",
		chcy: "ч",
		check: "✓",
		checkmark: "✓",
		chi: "χ",
		cir: "○",
		cirE: "⧃",
		circ: "ˆ",
		circeq: "≗",
		circlearrowleft: "↺",
		circlearrowright: "↻",
		circledR: "®",
		circledS: "Ⓢ",
		circledast: "⊛",
		circledcirc: "⊚",
		circleddash: "⊝",
		cire: "≗",
		cirfnint: "⨐",
		cirmid: "⫯",
		cirscir: "⧂",
		clubs: "♣",
		clubsuit: "♣",
		colon: ":",
		colone: "≔",
		coloneq: "≔",
		comma: ",",
		commat: "@",
		comp: "∁",
		compfn: "∘",
		complement: "∁",
		complexes: "ℂ",
		cong: "≅",
		congdot: "⩭",
		conint: "∮",
		copf: "𝕔",
		coprod: "∐",
		cop: "©",
		copy: "©",
		copysr: "℗",
		crarr: "↵",
		cross: "✗",
		cscr: "𝒸",
		csub: "⫏",
		csube: "⫑",
		csup: "⫐",
		csupe: "⫒",
		ctdot: "⋯",
		cudarrl: "⤸",
		cudarrr: "⤵",
		cuepr: "⋞",
		cuesc: "⋟",
		cularr: "↶",
		cularrp: "⤽",
		cup: "∪",
		cupbrcap: "⩈",
		cupcap: "⩆",
		cupcup: "⩊",
		cupdot: "⊍",
		cupor: "⩅",
		cups: "∪︀",
		curarr: "↷",
		curarrm: "⤼",
		curlyeqprec: "⋞",
		curlyeqsucc: "⋟",
		curlyvee: "⋎",
		curlywedge: "⋏",
		curre: "¤",
		curren: "¤",
		curvearrowleft: "↶",
		curvearrowright: "↷",
		cuvee: "⋎",
		cuwed: "⋏",
		cwconint: "∲",
		cwint: "∱",
		cylcty: "⌭",
		dArr: "⇓",
		dHar: "⥥",
		dagger: "†",
		daleth: "ℸ",
		darr: "↓",
		dash: "‐",
		dashv: "⊣",
		dbkarow: "⤏",
		dblac: "˝",
		dcaron: "ď",
		dcy: "д",
		dd: "ⅆ",
		ddagger: "‡",
		ddarr: "⇊",
		ddotseq: "⩷",
		de: "°",
		deg: "°",
		delta: "δ",
		demptyv: "⦱",
		dfisht: "⥿",
		dfr: "𝔡",
		dharl: "⇃",
		dharr: "⇂",
		diam: "⋄",
		diamond: "⋄",
		diamondsuit: "♦",
		diams: "♦",
		die: "¨",
		digamma: "ϝ",
		disin: "⋲",
		div: "÷",
		divid: "÷",
		divide: "÷",
		divideontimes: "⋇",
		divonx: "⋇",
		djcy: "ђ",
		dlcorn: "⌞",
		dlcrop: "⌍",
		dollar: "$",
		dopf: "𝕕",
		dot: "˙",
		doteq: "≐",
		doteqdot: "≑",
		dotminus: "∸",
		dotplus: "∔",
		dotsquare: "⊡",
		doublebarwedge: "⌆",
		downarrow: "↓",
		downdownarrows: "⇊",
		downharpoonleft: "⇃",
		downharpoonright: "⇂",
		drbkarow: "⤐",
		drcorn: "⌟",
		drcrop: "⌌",
		dscr: "𝒹",
		dscy: "ѕ",
		dsol: "⧶",
		dstrok: "đ",
		dtdot: "⋱",
		dtri: "▿",
		dtrif: "▾",
		duarr: "⇵",
		duhar: "⥯",
		dwangle: "⦦",
		dzcy: "џ",
		dzigrarr: "⟿",
		eDDot: "⩷",
		eDot: "≑",
		eacut: "é",
		eacute: "é",
		easter: "⩮",
		ecaron: "ě",
		ecir: "ê",
		ecirc: "ê",
		ecolon: "≕",
		ecy: "э",
		edot: "ė",
		ee: "ⅇ",
		efDot: "≒",
		efr: "𝔢",
		eg: "⪚",
		egrav: "è",
		egrave: "è",
		egs: "⪖",
		egsdot: "⪘",
		el: "⪙",
		elinters: "⏧",
		ell: "ℓ",
		els: "⪕",
		elsdot: "⪗",
		emacr: "ē",
		empty: "∅",
		emptyset: "∅",
		emptyv: "∅",
		emsp13: " ",
		emsp14: " ",
		emsp: " ",
		eng: "ŋ",
		ensp: " ",
		eogon: "ę",
		eopf: "𝕖",
		epar: "⋕",
		eparsl: "⧣",
		eplus: "⩱",
		epsi: "ε",
		epsilon: "ε",
		epsiv: "ϵ",
		eqcirc: "≖",
		eqcolon: "≕",
		eqsim: "≂",
		eqslantgtr: "⪖",
		eqslantless: "⪕",
		equals: "=",
		equest: "≟",
		equiv: "≡",
		equivDD: "⩸",
		eqvparsl: "⧥",
		erDot: "≓",
		erarr: "⥱",
		escr: "ℯ",
		esdot: "≐",
		esim: "≂",
		eta: "η",
		et: "ð",
		eth: "ð",
		eum: "ë",
		euml: "ë",
		euro: "€",
		excl: "!",
		exist: "∃",
		expectation: "ℰ",
		exponentiale: "ⅇ",
		fallingdotseq: "≒",
		fcy: "ф",
		female: "♀",
		ffilig: "ﬃ",
		fflig: "ﬀ",
		ffllig: "ﬄ",
		ffr: "𝔣",
		filig: "ﬁ",
		fjlig: "fj",
		flat: "♭",
		fllig: "ﬂ",
		fltns: "▱",
		fnof: "ƒ",
		fopf: "𝕗",
		forall: "∀",
		fork: "⋔",
		forkv: "⫙",
		fpartint: "⨍",
		frac1: "¼",
		frac12: "½",
		frac13: "⅓",
		frac14: "¼",
		frac15: "⅕",
		frac16: "⅙",
		frac18: "⅛",
		frac23: "⅔",
		frac25: "⅖",
		frac3: "¾",
		frac34: "¾",
		frac35: "⅗",
		frac38: "⅜",
		frac45: "⅘",
		frac56: "⅚",
		frac58: "⅝",
		frac78: "⅞",
		frasl: "⁄",
		frown: "⌢",
		fscr: "𝒻",
		gE: "≧",
		gEl: "⪌",
		gacute: "ǵ",
		gamma: "γ",
		gammad: "ϝ",
		gap: "⪆",
		gbreve: "ğ",
		gcirc: "ĝ",
		gcy: "г",
		gdot: "ġ",
		ge: "≥",
		gel: "⋛",
		geq: "≥",
		geqq: "≧",
		geqslant: "⩾",
		ges: "⩾",
		gescc: "⪩",
		gesdot: "⪀",
		gesdoto: "⪂",
		gesdotol: "⪄",
		gesl: "⋛︀",
		gesles: "⪔",
		gfr: "𝔤",
		gg: "≫",
		ggg: "⋙",
		gimel: "ℷ",
		gjcy: "ѓ",
		gl: "≷",
		glE: "⪒",
		gla: "⪥",
		glj: "⪤",
		gnE: "≩",
		gnap: "⪊",
		gnapprox: "⪊",
		gne: "⪈",
		gneq: "⪈",
		gneqq: "≩",
		gnsim: "⋧",
		gopf: "𝕘",
		grave: "`",
		gscr: "ℊ",
		gsim: "≳",
		gsime: "⪎",
		gsiml: "⪐",
		g: ">",
		gt: ">",
		gtcc: "⪧",
		gtcir: "⩺",
		gtdot: "⋗",
		gtlPar: "⦕",
		gtquest: "⩼",
		gtrapprox: "⪆",
		gtrarr: "⥸",
		gtrdot: "⋗",
		gtreqless: "⋛",
		gtreqqless: "⪌",
		gtrless: "≷",
		gtrsim: "≳",
		gvertneqq: "≩︀",
		gvnE: "≩︀",
		hArr: "⇔",
		hairsp: " ",
		half: "½",
		hamilt: "ℋ",
		hardcy: "ъ",
		harr: "↔",
		harrcir: "⥈",
		harrw: "↭",
		hbar: "ℏ",
		hcirc: "ĥ",
		hearts: "♥",
		heartsuit: "♥",
		hellip: "…",
		hercon: "⊹",
		hfr: "𝔥",
		hksearow: "⤥",
		hkswarow: "⤦",
		hoarr: "⇿",
		homtht: "∻",
		hookleftarrow: "↩",
		hookrightarrow: "↪",
		hopf: "𝕙",
		horbar: "―",
		hscr: "𝒽",
		hslash: "ℏ",
		hstrok: "ħ",
		hybull: "⁃",
		hyphen: "‐",
		iacut: "í",
		iacute: "í",
		ic: "⁣",
		icir: "î",
		icirc: "î",
		icy: "и",
		iecy: "е",
		iexc: "¡",
		iexcl: "¡",
		iff: "⇔",
		ifr: "𝔦",
		igrav: "ì",
		igrave: "ì",
		ii: "ⅈ",
		iiiint: "⨌",
		iiint: "∭",
		iinfin: "⧜",
		iiota: "℩",
		ijlig: "ĳ",
		imacr: "ī",
		image: "ℑ",
		imagline: "ℐ",
		imagpart: "ℑ",
		imath: "ı",
		imof: "⊷",
		imped: "Ƶ",
		in: "∈",
		incare: "℅",
		infin: "∞",
		infintie: "⧝",
		inodot: "ı",
		int: "∫",
		intcal: "⊺",
		integers: "ℤ",
		intercal: "⊺",
		intlarhk: "⨗",
		intprod: "⨼",
		iocy: "ё",
		iogon: "į",
		iopf: "𝕚",
		iota: "ι",
		iprod: "⨼",
		iques: "¿",
		iquest: "¿",
		iscr: "𝒾",
		isin: "∈",
		isinE: "⋹",
		isindot: "⋵",
		isins: "⋴",
		isinsv: "⋳",
		isinv: "∈",
		it: "⁢",
		itilde: "ĩ",
		iukcy: "і",
		ium: "ï",
		iuml: "ï",
		jcirc: "ĵ",
		jcy: "й",
		jfr: "𝔧",
		jmath: "ȷ",
		jopf: "𝕛",
		jscr: "𝒿",
		jsercy: "ј",
		jukcy: "є",
		kappa: "κ",
		kappav: "ϰ",
		kcedil: "ķ",
		kcy: "к",
		kfr: "𝔨",
		kgreen: "ĸ",
		khcy: "х",
		kjcy: "ќ",
		kopf: "𝕜",
		kscr: "𝓀",
		lAarr: "⇚",
		lArr: "⇐",
		lAtail: "⤛",
		lBarr: "⤎",
		lE: "≦",
		lEg: "⪋",
		lHar: "⥢",
		lacute: "ĺ",
		laemptyv: "⦴",
		lagran: "ℒ",
		lambda: "λ",
		lang: "⟨",
		langd: "⦑",
		langle: "⟨",
		lap: "⪅",
		laqu: "«",
		laquo: "«",
		larr: "←",
		larrb: "⇤",
		larrbfs: "⤟",
		larrfs: "⤝",
		larrhk: "↩",
		larrlp: "↫",
		larrpl: "⤹",
		larrsim: "⥳",
		larrtl: "↢",
		lat: "⪫",
		latail: "⤙",
		late: "⪭",
		lates: "⪭︀",
		lbarr: "⤌",
		lbbrk: "❲",
		lbrace: "{",
		lbrack: "[",
		lbrke: "⦋",
		lbrksld: "⦏",
		lbrkslu: "⦍",
		lcaron: "ľ",
		lcedil: "ļ",
		lceil: "⌈",
		lcub: "{",
		lcy: "л",
		ldca: "⤶",
		ldquo: "“",
		ldquor: "„",
		ldrdhar: "⥧",
		ldrushar: "⥋",
		ldsh: "↲",
		le: "≤",
		leftarrow: "←",
		leftarrowtail: "↢",
		leftharpoondown: "↽",
		leftharpoonup: "↼",
		leftleftarrows: "⇇",
		leftrightarrow: "↔",
		leftrightarrows: "⇆",
		leftrightharpoons: "⇋",
		leftrightsquigarrow: "↭",
		leftthreetimes: "⋋",
		leg: "⋚",
		leq: "≤",
		leqq: "≦",
		leqslant: "⩽",
		les: "⩽",
		lescc: "⪨",
		lesdot: "⩿",
		lesdoto: "⪁",
		lesdotor: "⪃",
		lesg: "⋚︀",
		lesges: "⪓",
		lessapprox: "⪅",
		lessdot: "⋖",
		lesseqgtr: "⋚",
		lesseqqgtr: "⪋",
		lessgtr: "≶",
		lesssim: "≲",
		lfisht: "⥼",
		lfloor: "⌊",
		lfr: "𝔩",
		lg: "≶",
		lgE: "⪑",
		lhard: "↽",
		lharu: "↼",
		lharul: "⥪",
		lhblk: "▄",
		ljcy: "љ",
		ll: "≪",
		llarr: "⇇",
		llcorner: "⌞",
		llhard: "⥫",
		lltri: "◺",
		lmidot: "ŀ",
		lmoust: "⎰",
		lmoustache: "⎰",
		lnE: "≨",
		lnap: "⪉",
		lnapprox: "⪉",
		lne: "⪇",
		lneq: "⪇",
		lneqq: "≨",
		lnsim: "⋦",
		loang: "⟬",
		loarr: "⇽",
		lobrk: "⟦",
		longleftarrow: "⟵",
		longleftrightarrow: "⟷",
		longmapsto: "⟼",
		longrightarrow: "⟶",
		looparrowleft: "↫",
		looparrowright: "↬",
		lopar: "⦅",
		lopf: "𝕝",
		loplus: "⨭",
		lotimes: "⨴",
		lowast: "∗",
		lowbar: "_",
		loz: "◊",
		lozenge: "◊",
		lozf: "⧫",
		lpar: "(",
		lparlt: "⦓",
		lrarr: "⇆",
		lrcorner: "⌟",
		lrhar: "⇋",
		lrhard: "⥭",
		lrm: "‎",
		lrtri: "⊿",
		lsaquo: "‹",
		lscr: "𝓁",
		lsh: "↰",
		lsim: "≲",
		lsime: "⪍",
		lsimg: "⪏",
		lsqb: "[",
		lsquo: "‘",
		lsquor: "‚",
		lstrok: "ł",
		l: "<",
		lt: "<",
		ltcc: "⪦",
		ltcir: "⩹",
		ltdot: "⋖",
		lthree: "⋋",
		ltimes: "⋉",
		ltlarr: "⥶",
		ltquest: "⩻",
		ltrPar: "⦖",
		ltri: "◃",
		ltrie: "⊴",
		ltrif: "◂",
		lurdshar: "⥊",
		luruhar: "⥦",
		lvertneqq: "≨︀",
		lvnE: "≨︀",
		mDDot: "∺",
		mac: "¯",
		macr: "¯",
		male: "♂",
		malt: "✠",
		maltese: "✠",
		map: "↦",
		mapsto: "↦",
		mapstodown: "↧",
		mapstoleft: "↤",
		mapstoup: "↥",
		marker: "▮",
		mcomma: "⨩",
		mcy: "м",
		mdash: "—",
		measuredangle: "∡",
		mfr: "𝔪",
		mho: "℧",
		micr: "µ",
		micro: "µ",
		mid: "∣",
		midast: "*",
		midcir: "⫰",
		middo: "·",
		middot: "·",
		minus: "−",
		minusb: "⊟",
		minusd: "∸",
		minusdu: "⨪",
		mlcp: "⫛",
		mldr: "…",
		mnplus: "∓",
		models: "⊧",
		mopf: "𝕞",
		mp: "∓",
		mscr: "𝓂",
		mstpos: "∾",
		mu: "μ",
		multimap: "⊸",
		mumap: "⊸",
		nGg: "⋙̸",
		nGt: "≫⃒",
		nGtv: "≫̸",
		nLeftarrow: "⇍",
		nLeftrightarrow: "⇎",
		nLl: "⋘̸",
		nLt: "≪⃒",
		nLtv: "≪̸",
		nRightarrow: "⇏",
		nVDash: "⊯",
		nVdash: "⊮",
		nabla: "∇",
		nacute: "ń",
		nang: "∠⃒",
		nap: "≉",
		napE: "⩰̸",
		napid: "≋̸",
		napos: "ŉ",
		napprox: "≉",
		natur: "♮",
		natural: "♮",
		naturals: "ℕ",
		nbs: "\xA0",
		nbsp: "\xA0",
		nbump: "≎̸",
		nbumpe: "≏̸",
		ncap: "⩃",
		ncaron: "ň",
		ncedil: "ņ",
		ncong: "≇",
		ncongdot: "⩭̸",
		ncup: "⩂",
		ncy: "н",
		ndash: "–",
		ne: "≠",
		neArr: "⇗",
		nearhk: "⤤",
		nearr: "↗",
		nearrow: "↗",
		nedot: "≐̸",
		nequiv: "≢",
		nesear: "⤨",
		nesim: "≂̸",
		nexist: "∄",
		nexists: "∄",
		nfr: "𝔫",
		ngE: "≧̸",
		nge: "≱",
		ngeq: "≱",
		ngeqq: "≧̸",
		ngeqslant: "⩾̸",
		nges: "⩾̸",
		ngsim: "≵",
		ngt: "≯",
		ngtr: "≯",
		nhArr: "⇎",
		nharr: "↮",
		nhpar: "⫲",
		ni: "∋",
		nis: "⋼",
		nisd: "⋺",
		niv: "∋",
		njcy: "њ",
		nlArr: "⇍",
		nlE: "≦̸",
		nlarr: "↚",
		nldr: "‥",
		nle: "≰",
		nleftarrow: "↚",
		nleftrightarrow: "↮",
		nleq: "≰",
		nleqq: "≦̸",
		nleqslant: "⩽̸",
		nles: "⩽̸",
		nless: "≮",
		nlsim: "≴",
		nlt: "≮",
		nltri: "⋪",
		nltrie: "⋬",
		nmid: "∤",
		nopf: "𝕟",
		no: "¬",
		not: "¬",
		notin: "∉",
		notinE: "⋹̸",
		notindot: "⋵̸",
		notinva: "∉",
		notinvb: "⋷",
		notinvc: "⋶",
		notni: "∌",
		notniva: "∌",
		notnivb: "⋾",
		notnivc: "⋽",
		npar: "∦",
		nparallel: "∦",
		nparsl: "⫽⃥",
		npart: "∂̸",
		npolint: "⨔",
		npr: "⊀",
		nprcue: "⋠",
		npre: "⪯̸",
		nprec: "⊀",
		npreceq: "⪯̸",
		nrArr: "⇏",
		nrarr: "↛",
		nrarrc: "⤳̸",
		nrarrw: "↝̸",
		nrightarrow: "↛",
		nrtri: "⋫",
		nrtrie: "⋭",
		nsc: "⊁",
		nsccue: "⋡",
		nsce: "⪰̸",
		nscr: "𝓃",
		nshortmid: "∤",
		nshortparallel: "∦",
		nsim: "≁",
		nsime: "≄",
		nsimeq: "≄",
		nsmid: "∤",
		nspar: "∦",
		nsqsube: "⋢",
		nsqsupe: "⋣",
		nsub: "⊄",
		nsubE: "⫅̸",
		nsube: "⊈",
		nsubset: "⊂⃒",
		nsubseteq: "⊈",
		nsubseteqq: "⫅̸",
		nsucc: "⊁",
		nsucceq: "⪰̸",
		nsup: "⊅",
		nsupE: "⫆̸",
		nsupe: "⊉",
		nsupset: "⊃⃒",
		nsupseteq: "⊉",
		nsupseteqq: "⫆̸",
		ntgl: "≹",
		ntild: "ñ",
		ntilde: "ñ",
		ntlg: "≸",
		ntriangleleft: "⋪",
		ntrianglelefteq: "⋬",
		ntriangleright: "⋫",
		ntrianglerighteq: "⋭",
		nu: "ν",
		num: "#",
		numero: "№",
		numsp: " ",
		nvDash: "⊭",
		nvHarr: "⤄",
		nvap: "≍⃒",
		nvdash: "⊬",
		nvge: "≥⃒",
		nvgt: ">⃒",
		nvinfin: "⧞",
		nvlArr: "⤂",
		nvle: "≤⃒",
		nvlt: "<⃒",
		nvltrie: "⊴⃒",
		nvrArr: "⤃",
		nvrtrie: "⊵⃒",
		nvsim: "∼⃒",
		nwArr: "⇖",
		nwarhk: "⤣",
		nwarr: "↖",
		nwarrow: "↖",
		nwnear: "⤧",
		oS: "Ⓢ",
		oacut: "ó",
		oacute: "ó",
		oast: "⊛",
		ocir: "ô",
		ocirc: "ô",
		ocy: "о",
		odash: "⊝",
		odblac: "ő",
		odiv: "⨸",
		odot: "⊙",
		odsold: "⦼",
		oelig: "œ",
		ofcir: "⦿",
		ofr: "𝔬",
		ogon: "˛",
		ograv: "ò",
		ograve: "ò",
		ogt: "⧁",
		ohbar: "⦵",
		ohm: "Ω",
		oint: "∮",
		olarr: "↺",
		olcir: "⦾",
		olcross: "⦻",
		oline: "‾",
		olt: "⧀",
		omacr: "ō",
		omega: "ω",
		omicron: "ο",
		omid: "⦶",
		ominus: "⊖",
		oopf: "𝕠",
		opar: "⦷",
		operp: "⦹",
		oplus: "⊕",
		or: "∨",
		orarr: "↻",
		ord: "º",
		order: "ℴ",
		orderof: "ℴ",
		ordf: "ª",
		ordm: "º",
		origof: "⊶",
		oror: "⩖",
		orslope: "⩗",
		orv: "⩛",
		oscr: "ℴ",
		oslas: "ø",
		oslash: "ø",
		osol: "⊘",
		otild: "õ",
		otilde: "õ",
		otimes: "⊗",
		otimesas: "⨶",
		oum: "ö",
		ouml: "ö",
		ovbar: "⌽",
		par: "¶",
		para: "¶",
		parallel: "∥",
		parsim: "⫳",
		parsl: "⫽",
		part: "∂",
		pcy: "п",
		percnt: "%",
		period: ".",
		permil: "‰",
		perp: "⊥",
		pertenk: "‱",
		pfr: "𝔭",
		phi: "φ",
		phiv: "ϕ",
		phmmat: "ℳ",
		phone: "☎",
		pi: "π",
		pitchfork: "⋔",
		piv: "ϖ",
		planck: "ℏ",
		planckh: "ℎ",
		plankv: "ℏ",
		plus: "+",
		plusacir: "⨣",
		plusb: "⊞",
		pluscir: "⨢",
		plusdo: "∔",
		plusdu: "⨥",
		pluse: "⩲",
		plusm: "±",
		plusmn: "±",
		plussim: "⨦",
		plustwo: "⨧",
		pm: "±",
		pointint: "⨕",
		popf: "𝕡",
		poun: "£",
		pound: "£",
		pr: "≺",
		prE: "⪳",
		prap: "⪷",
		prcue: "≼",
		pre: "⪯",
		prec: "≺",
		precapprox: "⪷",
		preccurlyeq: "≼",
		preceq: "⪯",
		precnapprox: "⪹",
		precneqq: "⪵",
		precnsim: "⋨",
		precsim: "≾",
		prime: "′",
		primes: "ℙ",
		prnE: "⪵",
		prnap: "⪹",
		prnsim: "⋨",
		prod: "∏",
		profalar: "⌮",
		profline: "⌒",
		profsurf: "⌓",
		prop: "∝",
		propto: "∝",
		prsim: "≾",
		prurel: "⊰",
		pscr: "𝓅",
		psi: "ψ",
		puncsp: " ",
		qfr: "𝔮",
		qint: "⨌",
		qopf: "𝕢",
		qprime: "⁗",
		qscr: "𝓆",
		quaternions: "ℍ",
		quatint: "⨖",
		quest: "?",
		questeq: "≟",
		quo: "\"",
		quot: "\"",
		rAarr: "⇛",
		rArr: "⇒",
		rAtail: "⤜",
		rBarr: "⤏",
		rHar: "⥤",
		race: "∽̱",
		racute: "ŕ",
		radic: "√",
		raemptyv: "⦳",
		rang: "⟩",
		rangd: "⦒",
		range: "⦥",
		rangle: "⟩",
		raqu: "»",
		raquo: "»",
		rarr: "→",
		rarrap: "⥵",
		rarrb: "⇥",
		rarrbfs: "⤠",
		rarrc: "⤳",
		rarrfs: "⤞",
		rarrhk: "↪",
		rarrlp: "↬",
		rarrpl: "⥅",
		rarrsim: "⥴",
		rarrtl: "↣",
		rarrw: "↝",
		ratail: "⤚",
		ratio: "∶",
		rationals: "ℚ",
		rbarr: "⤍",
		rbbrk: "❳",
		rbrace: "}",
		rbrack: "]",
		rbrke: "⦌",
		rbrksld: "⦎",
		rbrkslu: "⦐",
		rcaron: "ř",
		rcedil: "ŗ",
		rceil: "⌉",
		rcub: "}",
		rcy: "р",
		rdca: "⤷",
		rdldhar: "⥩",
		rdquo: "”",
		rdquor: "”",
		rdsh: "↳",
		real: "ℜ",
		realine: "ℛ",
		realpart: "ℜ",
		reals: "ℝ",
		rect: "▭",
		re: "®",
		reg: "®",
		rfisht: "⥽",
		rfloor: "⌋",
		rfr: "𝔯",
		rhard: "⇁",
		rharu: "⇀",
		rharul: "⥬",
		rho: "ρ",
		rhov: "ϱ",
		rightarrow: "→",
		rightarrowtail: "↣",
		rightharpoondown: "⇁",
		rightharpoonup: "⇀",
		rightleftarrows: "⇄",
		rightleftharpoons: "⇌",
		rightrightarrows: "⇉",
		rightsquigarrow: "↝",
		rightthreetimes: "⋌",
		ring: "˚",
		risingdotseq: "≓",
		rlarr: "⇄",
		rlhar: "⇌",
		rlm: "‏",
		rmoust: "⎱",
		rmoustache: "⎱",
		rnmid: "⫮",
		roang: "⟭",
		roarr: "⇾",
		robrk: "⟧",
		ropar: "⦆",
		ropf: "𝕣",
		roplus: "⨮",
		rotimes: "⨵",
		rpar: ")",
		rpargt: "⦔",
		rppolint: "⨒",
		rrarr: "⇉",
		rsaquo: "›",
		rscr: "𝓇",
		rsh: "↱",
		rsqb: "]",
		rsquo: "’",
		rsquor: "’",
		rthree: "⋌",
		rtimes: "⋊",
		rtri: "▹",
		rtrie: "⊵",
		rtrif: "▸",
		rtriltri: "⧎",
		ruluhar: "⥨",
		rx: "℞",
		sacute: "ś",
		sbquo: "‚",
		sc: "≻",
		scE: "⪴",
		scap: "⪸",
		scaron: "š",
		sccue: "≽",
		sce: "⪰",
		scedil: "ş",
		scirc: "ŝ",
		scnE: "⪶",
		scnap: "⪺",
		scnsim: "⋩",
		scpolint: "⨓",
		scsim: "≿",
		scy: "с",
		sdot: "⋅",
		sdotb: "⊡",
		sdote: "⩦",
		seArr: "⇘",
		searhk: "⤥",
		searr: "↘",
		searrow: "↘",
		sec: "§",
		sect: "§",
		semi: ";",
		seswar: "⤩",
		setminus: "∖",
		setmn: "∖",
		sext: "✶",
		sfr: "𝔰",
		sfrown: "⌢",
		sharp: "♯",
		shchcy: "щ",
		shcy: "ш",
		shortmid: "∣",
		shortparallel: "∥",
		sh: "­",
		shy: "­",
		sigma: "σ",
		sigmaf: "ς",
		sigmav: "ς",
		sim: "∼",
		simdot: "⩪",
		sime: "≃",
		simeq: "≃",
		simg: "⪞",
		simgE: "⪠",
		siml: "⪝",
		simlE: "⪟",
		simne: "≆",
		simplus: "⨤",
		simrarr: "⥲",
		slarr: "←",
		smallsetminus: "∖",
		smashp: "⨳",
		smeparsl: "⧤",
		smid: "∣",
		smile: "⌣",
		smt: "⪪",
		smte: "⪬",
		smtes: "⪬︀",
		softcy: "ь",
		sol: "/",
		solb: "⧄",
		solbar: "⌿",
		sopf: "𝕤",
		spades: "♠",
		spadesuit: "♠",
		spar: "∥",
		sqcap: "⊓",
		sqcaps: "⊓︀",
		sqcup: "⊔",
		sqcups: "⊔︀",
		sqsub: "⊏",
		sqsube: "⊑",
		sqsubset: "⊏",
		sqsubseteq: "⊑",
		sqsup: "⊐",
		sqsupe: "⊒",
		sqsupset: "⊐",
		sqsupseteq: "⊒",
		squ: "□",
		square: "□",
		squarf: "▪",
		squf: "▪",
		srarr: "→",
		sscr: "𝓈",
		ssetmn: "∖",
		ssmile: "⌣",
		sstarf: "⋆",
		star: "☆",
		starf: "★",
		straightepsilon: "ϵ",
		straightphi: "ϕ",
		strns: "¯",
		sub: "⊂",
		subE: "⫅",
		subdot: "⪽",
		sube: "⊆",
		subedot: "⫃",
		submult: "⫁",
		subnE: "⫋",
		subne: "⊊",
		subplus: "⪿",
		subrarr: "⥹",
		subset: "⊂",
		subseteq: "⊆",
		subseteqq: "⫅",
		subsetneq: "⊊",
		subsetneqq: "⫋",
		subsim: "⫇",
		subsub: "⫕",
		subsup: "⫓",
		succ: "≻",
		succapprox: "⪸",
		succcurlyeq: "≽",
		succeq: "⪰",
		succnapprox: "⪺",
		succneqq: "⪶",
		succnsim: "⋩",
		succsim: "≿",
		sum: "∑",
		sung: "♪",
		sup: "⊃",
		sup1: "¹",
		sup2: "²",
		sup3: "³",
		supE: "⫆",
		supdot: "⪾",
		supdsub: "⫘",
		supe: "⊇",
		supedot: "⫄",
		suphsol: "⟉",
		suphsub: "⫗",
		suplarr: "⥻",
		supmult: "⫂",
		supnE: "⫌",
		supne: "⊋",
		supplus: "⫀",
		supset: "⊃",
		supseteq: "⊇",
		supseteqq: "⫆",
		supsetneq: "⊋",
		supsetneqq: "⫌",
		supsim: "⫈",
		supsub: "⫔",
		supsup: "⫖",
		swArr: "⇙",
		swarhk: "⤦",
		swarr: "↙",
		swarrow: "↙",
		swnwar: "⤪",
		szli: "ß",
		szlig: "ß",
		target: "⌖",
		tau: "τ",
		tbrk: "⎴",
		tcaron: "ť",
		tcedil: "ţ",
		tcy: "т",
		tdot: "⃛",
		telrec: "⌕",
		tfr: "𝔱",
		there4: "∴",
		therefore: "∴",
		theta: "θ",
		thetasym: "ϑ",
		thetav: "ϑ",
		thickapprox: "≈",
		thicksim: "∼",
		thinsp: " ",
		thkap: "≈",
		thksim: "∼",
		thor: "þ",
		thorn: "þ",
		tilde: "˜",
		time: "×",
		times: "×",
		timesb: "⊠",
		timesbar: "⨱",
		timesd: "⨰",
		tint: "∭",
		toea: "⤨",
		top: "⊤",
		topbot: "⌶",
		topcir: "⫱",
		topf: "𝕥",
		topfork: "⫚",
		tosa: "⤩",
		tprime: "‴",
		trade: "™",
		triangle: "▵",
		triangledown: "▿",
		triangleleft: "◃",
		trianglelefteq: "⊴",
		triangleq: "≜",
		triangleright: "▹",
		trianglerighteq: "⊵",
		tridot: "◬",
		trie: "≜",
		triminus: "⨺",
		triplus: "⨹",
		trisb: "⧍",
		tritime: "⨻",
		trpezium: "⏢",
		tscr: "𝓉",
		tscy: "ц",
		tshcy: "ћ",
		tstrok: "ŧ",
		twixt: "≬",
		twoheadleftarrow: "↞",
		twoheadrightarrow: "↠",
		uArr: "⇑",
		uHar: "⥣",
		uacut: "ú",
		uacute: "ú",
		uarr: "↑",
		ubrcy: "ў",
		ubreve: "ŭ",
		ucir: "û",
		ucirc: "û",
		ucy: "у",
		udarr: "⇅",
		udblac: "ű",
		udhar: "⥮",
		ufisht: "⥾",
		ufr: "𝔲",
		ugrav: "ù",
		ugrave: "ù",
		uharl: "↿",
		uharr: "↾",
		uhblk: "▀",
		ulcorn: "⌜",
		ulcorner: "⌜",
		ulcrop: "⌏",
		ultri: "◸",
		umacr: "ū",
		um: "¨",
		uml: "¨",
		uogon: "ų",
		uopf: "𝕦",
		uparrow: "↑",
		updownarrow: "↕",
		upharpoonleft: "↿",
		upharpoonright: "↾",
		uplus: "⊎",
		upsi: "υ",
		upsih: "ϒ",
		upsilon: "υ",
		upuparrows: "⇈",
		urcorn: "⌝",
		urcorner: "⌝",
		urcrop: "⌎",
		uring: "ů",
		urtri: "◹",
		uscr: "𝓊",
		utdot: "⋰",
		utilde: "ũ",
		utri: "▵",
		utrif: "▴",
		uuarr: "⇈",
		uum: "ü",
		uuml: "ü",
		uwangle: "⦧",
		vArr: "⇕",
		vBar: "⫨",
		vBarv: "⫩",
		vDash: "⊨",
		vangrt: "⦜",
		varepsilon: "ϵ",
		varkappa: "ϰ",
		varnothing: "∅",
		varphi: "ϕ",
		varpi: "ϖ",
		varpropto: "∝",
		varr: "↕",
		varrho: "ϱ",
		varsigma: "ς",
		varsubsetneq: "⊊︀",
		varsubsetneqq: "⫋︀",
		varsupsetneq: "⊋︀",
		varsupsetneqq: "⫌︀",
		vartheta: "ϑ",
		vartriangleleft: "⊲",
		vartriangleright: "⊳",
		vcy: "в",
		vdash: "⊢",
		vee: "∨",
		veebar: "⊻",
		veeeq: "≚",
		vellip: "⋮",
		verbar: "|",
		vert: "|",
		vfr: "𝔳",
		vltri: "⊲",
		vnsub: "⊂⃒",
		vnsup: "⊃⃒",
		vopf: "𝕧",
		vprop: "∝",
		vrtri: "⊳",
		vscr: "𝓋",
		vsubnE: "⫋︀",
		vsubne: "⊊︀",
		vsupnE: "⫌︀",
		vsupne: "⊋︀",
		vzigzag: "⦚",
		wcirc: "ŵ",
		wedbar: "⩟",
		wedge: "∧",
		wedgeq: "≙",
		weierp: "℘",
		wfr: "𝔴",
		wopf: "𝕨",
		wp: "℘",
		wr: "≀",
		wreath: "≀",
		wscr: "𝓌",
		xcap: "⋂",
		xcirc: "◯",
		xcup: "⋃",
		xdtri: "▽",
		xfr: "𝔵",
		xhArr: "⟺",
		xharr: "⟷",
		xi: "ξ",
		xlArr: "⟸",
		xlarr: "⟵",
		xmap: "⟼",
		xnis: "⋻",
		xodot: "⨀",
		xopf: "𝕩",
		xoplus: "⨁",
		xotime: "⨂",
		xrArr: "⟹",
		xrarr: "⟶",
		xscr: "𝓍",
		xsqcup: "⨆",
		xuplus: "⨄",
		xutri: "△",
		xvee: "⋁",
		xwedge: "⋀",
		yacut: "ý",
		yacute: "ý",
		yacy: "я",
		ycirc: "ŷ",
		ycy: "ы",
		ye: "¥",
		yen: "¥",
		yfr: "𝔶",
		yicy: "ї",
		yopf: "𝕪",
		yscr: "𝓎",
		yucy: "ю",
		yum: "ÿ",
		yuml: "ÿ",
		zacute: "ź",
		zcaron: "ž",
		zcy: "з",
		zdot: "ż",
		zeetrf: "ℨ",
		zeta: "ζ",
		zfr: "𝔷",
		zhcy: "ж",
		zigrarr: "⇝",
		zopf: "𝕫",
		zscr: "𝓏",
		zwj: "‍",
		zwnj: "‌"
	};
});
var zu$2 = C$2((wv$1, Uu$2) => {
	var Mu$2 = Nu$1();
	Uu$2.exports = _D;
	var qD = {}.hasOwnProperty;
	function _D(e$4) {
		return qD.call(Mu$2, e$4) ? Mu$2[e$4] : !1;
	}
});
var dr$3 = C$2((kv$1, ea$4) => {
	var Gu$2 = qu$2(), Yu$3 = _u$2(), SD = Re$3(), PD = Ou$2(), Wu$3 = Ru$1(), OD = zu$2();
	ea$4.exports = WD;
	var LD = {}.hasOwnProperty, Ke$4 = String.fromCharCode, ID = Function.prototype, $u$2 = {
		warning: null,
		reference: null,
		text: null,
		warningContext: null,
		referenceContext: null,
		textContext: null,
		position: {},
		additional: null,
		attribute: !1,
		nonTerminated: !0
	}, RD = 9, Vu$2 = 10, ND = 12, MD = 32, ju$3 = 38, UD = 59, zD = 60, GD = 61, YD = 35, $D = 88, VD = 120, jD = 65533, Xe$4 = "named", zt$5 = "hexadecimal", Gt$4 = "decimal", Yt$4 = {};
	Yt$4[zt$5] = 16;
	Yt$4[Gt$4] = 10;
	var Vr$4 = {};
	Vr$4[Xe$4] = Wu$3;
	Vr$4[Gt$4] = SD;
	Vr$4[zt$5] = PD;
	var Hu$2 = 1, Ku$2 = 2, Xu$3 = 3, Ju$2 = 4, Qu$2 = 5, Ut$4 = 6, Zu$3 = 7, xe$4 = {};
	xe$4[Hu$2] = "Named character references must be terminated by a semicolon";
	xe$4[Ku$2] = "Numeric character references must be terminated by a semicolon";
	xe$4[Xu$3] = "Named character references cannot be empty";
	xe$4[Ju$2] = "Numeric character references cannot be empty";
	xe$4[Qu$2] = "Named character references must be known";
	xe$4[Ut$4] = "Numeric character references cannot be disallowed";
	xe$4[Zu$3] = "Numeric character references cannot be outside the permissible Unicode range";
	function WD(e$4, r$12) {
		var t$13 = {}, n$8, a$13;
		r$12 || (r$12 = {});
		for (a$13 in $u$2) n$8 = r$12[a$13], t$13[a$13] = n$8 ?? $u$2[a$13];
		return (t$13.position.indent || t$13.position.start) && (t$13.indent = t$13.position.indent || [], t$13.position = t$13.position.start), HD(e$4, t$13);
	}
	function HD(e$4, r$12) {
		var t$13 = r$12.additional, n$8 = r$12.nonTerminated, a$13 = r$12.text, i$18 = r$12.reference, u$14 = r$12.warning, o$9 = r$12.textContext, s$8 = r$12.referenceContext, l$10 = r$12.warningContext, c$3 = r$12.position, f$3 = r$12.indent || [], p$2 = e$4.length, d$14 = 0, D$4 = -1, h$3 = c$3.column || 1, m$11 = c$3.line || 1, F$4 = "", A$3 = [], v$5, B$4, b$7, g$2, y$7, x$3, E$3, w$3, k$5, T$9, q$3, N$5, P$5, S$4, _$2, O$3, Be$4, W$2, I$2;
		for (typeof t$13 == "string" && (t$13 = t$13.charCodeAt(0)), O$3 = ee$4(), w$3 = u$14 ? Z$4 : ID, d$14--, p$2++; ++d$14 < p$2;) if (y$7 === Vu$2 && (h$3 = f$3[D$4] || 1), y$7 = e$4.charCodeAt(d$14), y$7 === ju$3) {
			if (E$3 = e$4.charCodeAt(d$14 + 1), E$3 === RD || E$3 === Vu$2 || E$3 === ND || E$3 === MD || E$3 === ju$3 || E$3 === zD || E$3 !== E$3 || t$13 && E$3 === t$13) {
				F$4 += Ke$4(y$7), h$3++;
				continue;
			}
			for (P$5 = d$14 + 1, N$5 = P$5, I$2 = P$5, E$3 === YD ? (I$2 = ++N$5, E$3 = e$4.charCodeAt(I$2), E$3 === $D || E$3 === VD ? (S$4 = zt$5, I$2 = ++N$5) : S$4 = Gt$4) : S$4 = Xe$4, v$5 = "", q$3 = "", g$2 = "", _$2 = Vr$4[S$4], I$2--; ++I$2 < p$2 && (E$3 = e$4.charCodeAt(I$2), !!_$2(E$3));) g$2 += Ke$4(E$3), S$4 === Xe$4 && LD.call(Gu$2, g$2) && (v$5 = g$2, q$3 = Gu$2[g$2]);
			b$7 = e$4.charCodeAt(I$2) === UD, b$7 && (I$2++, B$4 = S$4 === Xe$4 ? OD(g$2) : !1, B$4 && (v$5 = g$2, q$3 = B$4)), W$2 = 1 + I$2 - P$5, !b$7 && !n$8 || (g$2 ? S$4 === Xe$4 ? (b$7 && !q$3 ? w$3(Qu$2, 1) : (v$5 !== g$2 && (I$2 = N$5 + v$5.length, W$2 = 1 + I$2 - N$5, b$7 = !1), b$7 || (k$5 = v$5 ? Hu$2 : Xu$3, r$12.attribute ? (E$3 = e$4.charCodeAt(I$2), E$3 === GD ? (w$3(k$5, W$2), q$3 = null) : Wu$3(E$3) ? q$3 = null : w$3(k$5, W$2)) : w$3(k$5, W$2))), x$3 = q$3) : (b$7 || w$3(Ku$2, W$2), x$3 = parseInt(g$2, Yt$4[S$4]), KD(x$3) ? (w$3(Zu$3, W$2), x$3 = Ke$4(jD)) : x$3 in Yu$3 ? (w$3(Ut$4, W$2), x$3 = Yu$3[x$3]) : (T$9 = "", XD(x$3) && w$3(Ut$4, W$2), x$3 > 65535 && (x$3 -= 65536, T$9 += Ke$4(x$3 >>> 10 | 55296), x$3 = 56320 | x$3 & 1023), x$3 = T$9 + Ke$4(x$3))) : S$4 !== Xe$4 && w$3(Ju$2, W$2)), x$3 ? (Ee$4(), O$3 = ee$4(), d$14 = I$2 - 1, h$3 += I$2 - P$5 + 1, A$3.push(x$3), Be$4 = ee$4(), Be$4.offset++, i$18 && i$18.call(s$8, x$3, {
				start: O$3,
				end: Be$4
			}, e$4.slice(P$5 - 1, I$2)), O$3 = Be$4) : (g$2 = e$4.slice(P$5 - 1, I$2), F$4 += g$2, h$3 += g$2.length, d$14 = I$2 - 1);
		} else y$7 === 10 && (m$11++, D$4++, h$3 = 0), y$7 === y$7 ? (F$4 += Ke$4(y$7), h$3++) : Ee$4();
		return A$3.join("");
		function ee$4() {
			return {
				line: m$11,
				column: h$3,
				offset: d$14 + (c$3.offset || 0)
			};
		}
		function Z$4(ve$6, U$4) {
			var pt$4 = ee$4();
			pt$4.column += U$4, pt$4.offset += U$4, u$14.call(l$10, xe$4[ve$6], pt$4, ve$6);
		}
		function Ee$4() {
			F$4 && (A$3.push(F$4), a$13 && a$13.call(o$9, F$4, {
				start: O$3,
				end: ee$4()
			}), F$4 = "");
		}
	}
	function KD(e$4) {
		return e$4 >= 55296 && e$4 <= 57343 || e$4 > 1114111;
	}
	function XD(e$4) {
		return e$4 >= 1 && e$4 <= 8 || e$4 === 11 || e$4 >= 13 && e$4 <= 31 || e$4 >= 127 && e$4 <= 159 || e$4 >= 64976 && e$4 <= 65007 || (e$4 & 65535) === 65535 || (e$4 & 65535) === 65534;
	}
});
var na$1 = C$2((Bv$1, ta$4) => {
	var JD = Ie$4(), ra$4 = dr$3();
	ta$4.exports = QD;
	function QD(e$4) {
		return t$13.raw = n$8, t$13;
		function r$12(i$18) {
			for (var u$14 = e$4.offset, o$9 = i$18.line, s$8 = []; ++o$9 && o$9 in u$14;) s$8.push((u$14[o$9] || 0) + 1);
			return {
				start: i$18,
				indent: s$8
			};
		}
		function t$13(i$18, u$14, o$9) {
			ra$4(i$18, {
				position: r$12(u$14),
				warning: a$13,
				text: o$9,
				reference: o$9,
				textContext: e$4,
				referenceContext: e$4
			});
		}
		function n$8(i$18, u$14, o$9) {
			return ra$4(i$18, JD(o$9, {
				position: r$12(u$14),
				warning: a$13
			}));
		}
		function a$13(i$18, u$14, o$9) {
			o$9 !== 3 && e$4.file.message(i$18, u$14);
		}
	}
});
var aa$1 = C$2((Tv$1, ua$3) => {
	ua$3.exports = ZD;
	function ZD(e$4) {
		return r$12;
		function r$12(t$13, n$8) {
			var a$13 = this, i$18 = a$13.offset, u$14 = [], o$9 = a$13[e$4 + "Methods"], s$8 = a$13[e$4 + "Tokenizers"], l$10 = n$8.line, c$3 = n$8.column, f$3, p$2, d$14, D$4, h$3, m$11;
			if (!t$13) return u$14;
			for (x$3.now = v$5, x$3.file = a$13.file, F$4(""); t$13;) {
				for (f$3 = -1, p$2 = o$9.length, h$3 = !1; ++f$3 < p$2 && (D$4 = o$9[f$3], d$14 = s$8[D$4], !(d$14 && (!d$14.onlyAtStart || a$13.atStart) && (!d$14.notInList || !a$13.inList) && (!d$14.notInBlock || !a$13.inBlock) && (!d$14.notInLink || !a$13.inLink) && (m$11 = t$13.length, d$14.apply(a$13, [x$3, t$13]), h$3 = m$11 !== t$13.length, h$3))););
				h$3 || a$13.file.fail(/* @__PURE__ */ new Error("Infinite loop"), x$3.now());
			}
			return a$13.eof = v$5(), u$14;
			function F$4(E$3) {
				for (var w$3 = -1, k$5 = E$3.indexOf(`
`); k$5 !== -1;) l$10++, w$3 = k$5, k$5 = E$3.indexOf(`
`, k$5 + 1);
				w$3 === -1 ? c$3 += E$3.length : c$3 = E$3.length - w$3, l$10 in i$18 && (w$3 !== -1 ? c$3 += i$18[l$10] : c$3 <= i$18[l$10] && (c$3 = i$18[l$10] + 1));
			}
			function A$3() {
				var E$3 = [], w$3 = l$10 + 1;
				return function() {
					for (var k$5 = l$10 + 1; w$3 < k$5;) E$3.push((i$18[w$3] || 0) + 1), w$3++;
					return E$3;
				};
			}
			function v$5() {
				var E$3 = {
					line: l$10,
					column: c$3
				};
				return E$3.offset = a$13.toOffset(E$3), E$3;
			}
			function B$4(E$3) {
				this.start = E$3, this.end = v$5();
			}
			function b$7(E$3) {
				t$13.slice(0, E$3.length) !== E$3 && a$13.file.fail(/* @__PURE__ */ new Error("Incorrectly eaten value: please report this warning on https://git.io/vg5Ft"), v$5());
			}
			function g$2() {
				var E$3 = v$5();
				return w$3;
				function w$3(k$5, T$9) {
					var q$3 = k$5.position, N$5 = q$3 ? q$3.start : E$3, P$5 = [], S$4 = q$3 && q$3.end.line, _$2 = E$3.line;
					if (k$5.position = new B$4(N$5), q$3 && T$9 && q$3.indent) {
						if (P$5 = q$3.indent, S$4 < _$2) {
							for (; ++S$4 < _$2;) P$5.push((i$18[S$4] || 0) + 1);
							P$5.push(E$3.column);
						}
						T$9 = P$5.concat(T$9);
					}
					return k$5.position.indent = T$9 || [], k$5;
				}
			}
			function y$7(E$3, w$3) {
				var k$5 = w$3 ? w$3.children : u$14, T$9 = k$5[k$5.length - 1], q$3;
				return T$9 && E$3.type === T$9.type && (E$3.type === "text" || E$3.type === "blockquote") && ia$4(T$9) && ia$4(E$3) && (q$3 = E$3.type === "text" ? ep$1 : rp$1, E$3 = q$3.call(a$13, T$9, E$3)), E$3 !== T$9 && k$5.push(E$3), a$13.atStart && u$14.length !== 0 && a$13.exitStart(), E$3;
			}
			function x$3(E$3) {
				var w$3 = A$3(), k$5 = g$2(), T$9 = v$5();
				return b$7(E$3), q$3.reset = N$5, N$5.test = P$5, q$3.test = P$5, t$13 = t$13.slice(E$3.length), F$4(E$3), w$3 = w$3(), q$3;
				function q$3(S$4, _$2) {
					return k$5(y$7(k$5(S$4), _$2), w$3);
				}
				function N$5() {
					var S$4 = q$3.apply(null, arguments);
					return l$10 = T$9.line, c$3 = T$9.column, t$13 = E$3 + t$13, S$4;
				}
				function P$5() {
					var S$4 = k$5({});
					return l$10 = T$9.line, c$3 = T$9.column, t$13 = E$3 + t$13, S$4.position;
				}
			}
		}
	}
	function ia$4(e$4) {
		var r$12, t$13;
		return e$4.type !== "text" || !e$4.position ? !0 : (r$12 = e$4.position.start, t$13 = e$4.position.end, r$12.line !== t$13.line || t$13.column - r$12.column === e$4.value.length);
	}
	function ep$1(e$4, r$12) {
		return e$4.value += r$12.value, e$4;
	}
	function rp$1(e$4, r$12) {
		return this.options.commonmark || this.options.gfm ? r$12 : (e$4.children = e$4.children.concat(r$12.children), e$4);
	}
});
var ca = C$2((qv$1, sa$4) => {
	sa$4.exports = jr$5;
	var $t$4 = [
		"\\",
		"`",
		"*",
		"{",
		"}",
		"[",
		"]",
		"(",
		")",
		"#",
		"+",
		"-",
		".",
		"!",
		"_",
		">"
	], Vt$5 = $t$4.concat(["~", "|"]), oa$4 = Vt$5.concat([
		`
`,
		"\"",
		"$",
		"%",
		"&",
		"'",
		",",
		"/",
		":",
		";",
		"<",
		"=",
		"?",
		"@",
		"^"
	]);
	jr$5.default = $t$4;
	jr$5.gfm = Vt$5;
	jr$5.commonmark = oa$4;
	function jr$5(e$4) {
		var r$12 = e$4 || {};
		return r$12.commonmark ? oa$4 : r$12.gfm ? Vt$5 : $t$4;
	}
});
var fa$1 = C$2((_v$1, la$4) => {
	la$4.exports = [
		"address",
		"article",
		"aside",
		"base",
		"basefont",
		"blockquote",
		"body",
		"caption",
		"center",
		"col",
		"colgroup",
		"dd",
		"details",
		"dialog",
		"dir",
		"div",
		"dl",
		"dt",
		"fieldset",
		"figcaption",
		"figure",
		"footer",
		"form",
		"frame",
		"frameset",
		"h1",
		"h2",
		"h3",
		"h4",
		"h5",
		"h6",
		"head",
		"header",
		"hgroup",
		"hr",
		"html",
		"iframe",
		"legend",
		"li",
		"link",
		"main",
		"menu",
		"menuitem",
		"meta",
		"nav",
		"noframes",
		"ol",
		"optgroup",
		"option",
		"p",
		"param",
		"pre",
		"section",
		"source",
		"title",
		"summary",
		"table",
		"tbody",
		"td",
		"tfoot",
		"th",
		"thead",
		"title",
		"tr",
		"track",
		"ul"
	];
});
var jt$2 = C$2((Sv$1, Da$3) => {
	Da$3.exports = {
		position: !0,
		gfm: !0,
		commonmark: !1,
		pedantic: !1,
		blocks: fa$1()
	};
});
var ha$1 = C$2((Pv$1, pa$3) => {
	var tp$1 = Ie$4(), np$1 = ca(), ip$1 = jt$2();
	pa$3.exports = up$1;
	function up$1(e$4) {
		var r$12 = this, t$13 = r$12.options, n$8, a$13;
		if (e$4 == null) e$4 = {};
		else if (typeof e$4 == "object") e$4 = tp$1(e$4);
		else throw new Error("Invalid value `" + e$4 + "` for setting `options`");
		for (n$8 in ip$1) {
			if (a$13 = e$4[n$8], a$13 ??= t$13[n$8], n$8 !== "blocks" && typeof a$13 != "boolean" || n$8 === "blocks" && typeof a$13 != "object") throw new Error("Invalid value `" + a$13 + "` for setting `options." + n$8 + "`");
			e$4[n$8] = a$13;
		}
		return r$12.options = e$4, r$12.escape = np$1(e$4), r$12;
	}
});
var Fa$2 = C$2((Ov$1, ma$3) => {
	ma$3.exports = da$4;
	function da$4(e$4) {
		if (e$4 == null) return cp$2;
		if (typeof e$4 == "string") return sp$1(e$4);
		if (typeof e$4 == "object") return "length" in e$4 ? op$1(e$4) : ap$1(e$4);
		if (typeof e$4 == "function") return e$4;
		throw new Error("Expected function, string, or object as test");
	}
	function ap$1(e$4) {
		return r$12;
		function r$12(t$13) {
			var n$8;
			for (n$8 in e$4) if (t$13[n$8] !== e$4[n$8]) return !1;
			return !0;
		}
	}
	function op$1(e$4) {
		for (var r$12 = [], t$13 = -1; ++t$13 < e$4.length;) r$12[t$13] = da$4(e$4[t$13]);
		return n$8;
		function n$8() {
			for (var a$13 = -1; ++a$13 < r$12.length;) if (r$12[a$13].apply(this, arguments)) return !0;
			return !1;
		}
	}
	function sp$1(e$4) {
		return r$12;
		function r$12(t$13) {
			return !!(t$13 && t$13.type === e$4);
		}
	}
	function cp$2() {
		return !0;
	}
});
var Ea = C$2((Lv$1, ga$3) => {
	ga$3.exports = lp$1;
	function lp$1(e$4) {
		return e$4;
	}
});
var Aa = C$2((Iv$1, ba$4) => {
	ba$4.exports = Wr$6;
	var fp$1 = Fa$2(), Dp$2 = Ea(), va$4 = !0, Ca$3 = "skip", Wt$4 = !1;
	Wr$6.CONTINUE = va$4;
	Wr$6.SKIP = Ca$3;
	Wr$6.EXIT = Wt$4;
	function Wr$6(e$4, r$12, t$13, n$8) {
		var a$13, i$18;
		typeof r$12 == "function" && typeof t$13 != "function" && (n$8 = t$13, t$13 = r$12, r$12 = null), i$18 = fp$1(r$12), a$13 = n$8 ? -1 : 1, u$14(e$4, null, [])();
		function u$14(o$9, s$8, l$10) {
			var c$3 = typeof o$9 == "object" && o$9 !== null ? o$9 : {}, f$3;
			return typeof c$3.type == "string" && (f$3 = typeof c$3.tagName == "string" ? c$3.tagName : typeof c$3.name == "string" ? c$3.name : void 0, p$2.displayName = "node (" + Dp$2(c$3.type + (f$3 ? "<" + f$3 + ">" : "")) + ")"), p$2;
			function p$2() {
				var d$14 = l$10.concat(o$9), D$4 = [], h$3, m$11;
				if ((!r$12 || i$18(o$9, s$8, l$10[l$10.length - 1] || null)) && (D$4 = pp$1(t$13(o$9, l$10)), D$4[0] === Wt$4)) return D$4;
				if (o$9.children && D$4[0] !== Ca$3) for (m$11 = (n$8 ? o$9.children.length : -1) + a$13; m$11 > -1 && m$11 < o$9.children.length;) {
					if (h$3 = u$14(o$9.children[m$11], m$11, d$14)(), h$3[0] === Wt$4) return h$3;
					m$11 = typeof h$3[1] == "number" ? h$3[1] : m$11 + a$13;
				}
				return D$4;
			}
		}
	}
	function pp$1(e$4) {
		return e$4 !== null && typeof e$4 == "object" && "length" in e$4 ? e$4 : typeof e$4 == "number" ? [va$4, e$4] : [e$4];
	}
});
var xa$1 = C$2((Rv$1, ya$3) => {
	ya$3.exports = Kr$6;
	var Hr$6 = Aa(), hp$1 = Hr$6.CONTINUE, dp$1 = Hr$6.SKIP, mp$1 = Hr$6.EXIT;
	Kr$6.CONTINUE = hp$1;
	Kr$6.SKIP = dp$1;
	Kr$6.EXIT = mp$1;
	function Kr$6(e$4, r$12, t$13, n$8) {
		typeof r$12 == "function" && typeof t$13 != "function" && (n$8 = t$13, t$13 = r$12, r$12 = null), Hr$6(e$4, r$12, a$13, n$8);
		function a$13(i$18, u$14) {
			var o$9 = u$14[u$14.length - 1], s$8 = o$9 ? o$9.children.indexOf(i$18) : null;
			return t$13(i$18, s$8, o$9);
		}
	}
});
var ka = C$2((Nv$1, wa$3) => {
	var Fp$2 = xa$1();
	wa$3.exports = gp$2;
	function gp$2(e$4, r$12) {
		return Fp$2(e$4, r$12 ? Ep$3 : vp$2), e$4;
	}
	function Ep$3(e$4) {
		delete e$4.position;
	}
	function vp$2(e$4) {
		e$4.position = void 0;
	}
});
var qa$2 = C$2((Mv$1, Ta$3) => {
	var Ba$4 = Ie$4(), Cp$2 = ka();
	Ta$3.exports = yp$1;
	var bp$2 = `
`, Ap$2 = /\r\n|\r/g;
	function yp$1() {
		var e$4 = this, r$12 = String(e$4.file), t$13 = {
			line: 1,
			column: 1,
			offset: 0
		}, n$8 = Ba$4(t$13), a$13;
		return r$12 = r$12.replace(Ap$2, bp$2), r$12.charCodeAt(0) === 65279 && (r$12 = r$12.slice(1), n$8.column++, n$8.offset++), a$13 = {
			type: "root",
			children: e$4.tokenizeBlock(r$12, n$8),
			position: {
				start: t$13,
				end: e$4.eof || Ba$4(t$13)
			}
		}, e$4.options.position || Cp$2(a$13, !0), a$13;
	}
});
var Sa = C$2((Uv$1, _a$4) => {
	var xp$2 = /^[ \t]*(\n|$)/;
	_a$4.exports = wp$2;
	function wp$2(e$4, r$12, t$13) {
		for (var n$8, a$13 = "", i$18 = 0, u$14 = r$12.length; i$18 < u$14 && (n$8 = xp$2.exec(r$12.slice(i$18)), n$8 != null);) i$18 += n$8[0].length, a$13 += n$8[0];
		if (a$13 !== "") {
			if (t$13) return !0;
			e$4(a$13);
		}
	}
});
var Xr$4 = C$2((zv, Pa$3) => {
	var me$5 = "", Ht$5;
	Pa$3.exports = kp$2;
	function kp$2(e$4, r$12) {
		if (typeof e$4 != "string") throw new TypeError("expected a string");
		if (r$12 === 1) return e$4;
		if (r$12 === 2) return e$4 + e$4;
		var t$13 = e$4.length * r$12;
		if (Ht$5 !== e$4 || typeof Ht$5 > "u") Ht$5 = e$4, me$5 = "";
		else if (me$5.length >= t$13) return me$5.substr(0, t$13);
		for (; t$13 > me$5.length && r$12 > 1;) r$12 & 1 && (me$5 += e$4), r$12 >>= 1, e$4 += e$4;
		return me$5 += e$4, me$5 = me$5.substr(0, t$13), me$5;
	}
});
var Kt$1 = C$2((Gv, Oa$3) => {
	Oa$3.exports = Bp$2;
	function Bp$2(e$4) {
		return String(e$4).replace(/\n+$/, "");
	}
});
var Ra$2 = C$2((Yv, Ia$3) => {
	var Tp$2 = Xr$4(), qp$2 = Kt$1();
	Ia$3.exports = Pp$2;
	var Xt$5 = `
`, La$5 = "	", Jt$3 = " ", _p$2 = 4, Sp$2 = Tp$2(Jt$3, _p$2);
	function Pp$2(e$4, r$12, t$13) {
		for (var n$8 = -1, a$13 = r$12.length, i$18 = "", u$14 = "", o$9 = "", s$8 = "", l$10, c$3, f$3; ++n$8 < a$13;) if (l$10 = r$12.charAt(n$8), f$3) if (f$3 = !1, i$18 += o$9, u$14 += s$8, o$9 = "", s$8 = "", l$10 === Xt$5) o$9 = l$10, s$8 = l$10;
		else for (i$18 += l$10, u$14 += l$10; ++n$8 < a$13;) {
			if (l$10 = r$12.charAt(n$8), !l$10 || l$10 === Xt$5) {
				s$8 = l$10, o$9 = l$10;
				break;
			}
			i$18 += l$10, u$14 += l$10;
		}
		else if (l$10 === Jt$3 && r$12.charAt(n$8 + 1) === l$10 && r$12.charAt(n$8 + 2) === l$10 && r$12.charAt(n$8 + 3) === l$10) o$9 += Sp$2, n$8 += 3, f$3 = !0;
		else if (l$10 === La$5) o$9 += l$10, f$3 = !0;
		else {
			for (c$3 = ""; l$10 === La$5 || l$10 === Jt$3;) c$3 += l$10, l$10 = r$12.charAt(++n$8);
			if (l$10 !== Xt$5) break;
			o$9 += c$3 + l$10, s$8 += l$10;
		}
		if (u$14) return t$13 ? !0 : e$4(i$18)({
			type: "code",
			lang: null,
			meta: null,
			value: qp$2(u$14)
		});
	}
});
var Ua$3 = C$2(($v, Ma$5) => {
	Ma$5.exports = Rp$2;
	var Jr$6 = `
`, mr$5 = "	", Je$6 = " ", Op$2 = "~", Na$4 = "`", Lp$2 = 3, Ip$2 = 4;
	function Rp$2(e$4, r$12, t$13) {
		var n$8 = this, a$13 = n$8.options.gfm, i$18 = r$12.length + 1, u$14 = 0, o$9 = "", s$8, l$10, c$3, f$3, p$2, d$14, D$4, h$3, m$11, F$4, A$3, v$5, B$4;
		if (a$13) {
			for (; u$14 < i$18 && (c$3 = r$12.charAt(u$14), !(c$3 !== Je$6 && c$3 !== mr$5));) o$9 += c$3, u$14++;
			if (v$5 = u$14, c$3 = r$12.charAt(u$14), !(c$3 !== Op$2 && c$3 !== Na$4)) {
				for (u$14++, l$10 = c$3, s$8 = 1, o$9 += c$3; u$14 < i$18 && (c$3 = r$12.charAt(u$14), c$3 === l$10);) o$9 += c$3, s$8++, u$14++;
				if (!(s$8 < Lp$2)) {
					for (; u$14 < i$18 && (c$3 = r$12.charAt(u$14), !(c$3 !== Je$6 && c$3 !== mr$5));) o$9 += c$3, u$14++;
					for (f$3 = "", D$4 = ""; u$14 < i$18 && (c$3 = r$12.charAt(u$14), !(c$3 === Jr$6 || l$10 === Na$4 && c$3 === l$10));) c$3 === Je$6 || c$3 === mr$5 ? D$4 += c$3 : (f$3 += D$4 + c$3, D$4 = ""), u$14++;
					if (c$3 = r$12.charAt(u$14), !(c$3 && c$3 !== Jr$6)) {
						if (t$13) return !0;
						B$4 = e$4.now(), B$4.column += o$9.length, B$4.offset += o$9.length, o$9 += f$3, f$3 = n$8.decode.raw(n$8.unescape(f$3), B$4), D$4 && (o$9 += D$4), D$4 = "", F$4 = "", A$3 = "", h$3 = "", m$11 = "";
						for (var b$7 = !0; u$14 < i$18;) {
							if (c$3 = r$12.charAt(u$14), h$3 += F$4, m$11 += A$3, F$4 = "", A$3 = "", c$3 !== Jr$6) {
								h$3 += c$3, A$3 += c$3, u$14++;
								continue;
							}
							for (b$7 ? (o$9 += c$3, b$7 = !1) : (F$4 += c$3, A$3 += c$3), D$4 = "", u$14++; u$14 < i$18 && (c$3 = r$12.charAt(u$14), c$3 === Je$6);) D$4 += c$3, u$14++;
							if (F$4 += D$4, A$3 += D$4.slice(v$5), !(D$4.length >= Ip$2)) {
								for (D$4 = ""; u$14 < i$18 && (c$3 = r$12.charAt(u$14), c$3 === l$10);) D$4 += c$3, u$14++;
								if (F$4 += D$4, A$3 += D$4, !(D$4.length < s$8)) {
									for (D$4 = ""; u$14 < i$18 && (c$3 = r$12.charAt(u$14), !(c$3 !== Je$6 && c$3 !== mr$5));) F$4 += c$3, A$3 += c$3, u$14++;
									if (!c$3 || c$3 === Jr$6) break;
								}
							}
						}
						for (o$9 += h$3 + F$4, u$14 = -1, i$18 = f$3.length; ++u$14 < i$18;) if (c$3 = f$3.charAt(u$14), c$3 === Je$6 || c$3 === mr$5) p$2 || (p$2 = f$3.slice(0, u$14));
						else if (p$2) {
							d$14 = f$3.slice(u$14);
							break;
						}
						return e$4(o$9)({
							type: "code",
							lang: p$2 || f$3 || null,
							meta: d$14 || null,
							value: m$11
						});
					}
				}
			}
		}
	}
});
var Ne$2 = C$2((Qe$4, za$4) => {
	Qe$4 = za$4.exports = Np$2;
	function Np$2(e$4) {
		return e$4.trim ? e$4.trim() : Qe$4.right(Qe$4.left(e$4));
	}
	Qe$4.left = function(e$4) {
		return e$4.trimLeft ? e$4.trimLeft() : e$4.replace(/^\s\s*/, "");
	};
	Qe$4.right = function(e$4) {
		if (e$4.trimRight) return e$4.trimRight();
		for (var r$12 = /\s/, t$13 = e$4.length; r$12.test(e$4.charAt(--t$13)););
		return e$4.slice(0, t$13 + 1);
	};
});
var Qr$4 = C$2((Vv, Ga$5) => {
	Ga$5.exports = Mp$2;
	function Mp$2(e$4, r$12, t$13, n$8) {
		for (var a$13 = e$4.length, i$18 = -1, u$14, o$9; ++i$18 < a$13;) if (u$14 = e$4[i$18], o$9 = u$14[1] || {}, !(o$9.pedantic !== void 0 && o$9.pedantic !== t$13.options.pedantic) && !(o$9.commonmark !== void 0 && o$9.commonmark !== t$13.options.commonmark) && r$12[u$14[0]].apply(t$13, n$8)) return !0;
		return !1;
	}
});
var ja$2 = C$2((jv$1, Va$4) => {
	var Up$2 = Ne$2(), zp$2 = Qr$4();
	Va$4.exports = Gp$2;
	var Qt$3 = `
`, Ya$3 = "	", Zt$3 = " ", $a$3 = ">";
	function Gp$2(e$4, r$12, t$13) {
		for (var n$8 = this, a$13 = n$8.offset, i$18 = n$8.blockTokenizers, u$14 = n$8.interruptBlockquote, o$9 = e$4.now(), s$8 = o$9.line, l$10 = r$12.length, c$3 = [], f$3 = [], p$2 = [], d$14, D$4 = 0, h$3, m$11, F$4, A$3, v$5, B$4, b$7, g$2; D$4 < l$10 && (h$3 = r$12.charAt(D$4), !(h$3 !== Zt$3 && h$3 !== Ya$3));) D$4++;
		if (r$12.charAt(D$4) === $a$3) {
			if (t$13) return !0;
			for (D$4 = 0; D$4 < l$10;) {
				for (F$4 = r$12.indexOf(Qt$3, D$4), B$4 = D$4, b$7 = !1, F$4 === -1 && (F$4 = l$10); D$4 < l$10 && (h$3 = r$12.charAt(D$4), !(h$3 !== Zt$3 && h$3 !== Ya$3));) D$4++;
				if (r$12.charAt(D$4) === $a$3 ? (D$4++, b$7 = !0, r$12.charAt(D$4) === Zt$3 && D$4++) : D$4 = B$4, A$3 = r$12.slice(D$4, F$4), !b$7 && !Up$2(A$3)) {
					D$4 = B$4;
					break;
				}
				if (!b$7 && (m$11 = r$12.slice(D$4), zp$2(u$14, i$18, n$8, [
					e$4,
					m$11,
					!0
				]))) break;
				v$5 = B$4 === D$4 ? A$3 : r$12.slice(B$4, F$4), p$2.push(D$4 - B$4), c$3.push(v$5), f$3.push(A$3), D$4 = F$4 + 1;
			}
			for (D$4 = -1, l$10 = p$2.length, d$14 = e$4(c$3.join(Qt$3)); ++D$4 < l$10;) a$13[s$8] = (a$13[s$8] || 0) + p$2[D$4], s$8++;
			return g$2 = n$8.enterBlock(), f$3 = n$8.tokenizeBlock(f$3.join(Qt$3), o$9), g$2(), d$14({
				type: "blockquote",
				children: f$3
			});
		}
	}
});
var Ka$3 = C$2((Wv, Ha$5) => {
	Ha$5.exports = $p$2;
	var Wa$3 = `
`, Fr$5 = "	", gr$4 = " ", Er$5 = "#", Yp$2 = 6;
	function $p$2(e$4, r$12, t$13) {
		for (var n$8 = this, a$13 = n$8.options.pedantic, i$18 = r$12.length + 1, u$14 = -1, o$9 = e$4.now(), s$8 = "", l$10 = "", c$3, f$3, p$2; ++u$14 < i$18;) {
			if (c$3 = r$12.charAt(u$14), c$3 !== gr$4 && c$3 !== Fr$5) {
				u$14--;
				break;
			}
			s$8 += c$3;
		}
		for (p$2 = 0; ++u$14 <= i$18;) {
			if (c$3 = r$12.charAt(u$14), c$3 !== Er$5) {
				u$14--;
				break;
			}
			s$8 += c$3, p$2++;
		}
		if (!(p$2 > Yp$2) && !(!p$2 || !a$13 && r$12.charAt(u$14 + 1) === Er$5)) {
			for (i$18 = r$12.length + 1, f$3 = ""; ++u$14 < i$18;) {
				if (c$3 = r$12.charAt(u$14), c$3 !== gr$4 && c$3 !== Fr$5) {
					u$14--;
					break;
				}
				f$3 += c$3;
			}
			if (!(!a$13 && f$3.length === 0 && c$3 && c$3 !== Wa$3)) {
				if (t$13) return !0;
				for (s$8 += f$3, f$3 = "", l$10 = ""; ++u$14 < i$18 && (c$3 = r$12.charAt(u$14), !(!c$3 || c$3 === Wa$3));) {
					if (c$3 !== gr$4 && c$3 !== Fr$5 && c$3 !== Er$5) {
						l$10 += f$3 + c$3, f$3 = "";
						continue;
					}
					for (; c$3 === gr$4 || c$3 === Fr$5;) f$3 += c$3, c$3 = r$12.charAt(++u$14);
					if (!a$13 && l$10 && !f$3 && c$3 === Er$5) {
						l$10 += c$3;
						continue;
					}
					for (; c$3 === Er$5;) f$3 += c$3, c$3 = r$12.charAt(++u$14);
					for (; c$3 === gr$4 || c$3 === Fr$5;) f$3 += c$3, c$3 = r$12.charAt(++u$14);
					u$14--;
				}
				return o$9.column += s$8.length, o$9.offset += s$8.length, s$8 += l$10 + f$3, e$4(s$8)({
					type: "heading",
					depth: p$2,
					children: n$8.tokenizeInline(l$10, o$9)
				});
			}
		}
	}
});
var Qa$2 = C$2((Hv$1, Ja$4) => {
	Ja$4.exports = Jp$2;
	var Vp$2 = "	", jp$2 = `
`, Xa$5 = " ", Wp$2 = "*", Hp$2 = "-", Kp$2 = "_", Xp$2 = 3;
	function Jp$2(e$4, r$12, t$13) {
		for (var n$8 = -1, a$13 = r$12.length + 1, i$18 = "", u$14, o$9, s$8, l$10; ++n$8 < a$13 && (u$14 = r$12.charAt(n$8), !(u$14 !== Vp$2 && u$14 !== Xa$5));) i$18 += u$14;
		if (!(u$14 !== Wp$2 && u$14 !== Hp$2 && u$14 !== Kp$2)) for (o$9 = u$14, i$18 += u$14, s$8 = 1, l$10 = ""; ++n$8 < a$13;) if (u$14 = r$12.charAt(n$8), u$14 === o$9) s$8++, i$18 += l$10 + o$9, l$10 = "";
		else if (u$14 === Xa$5) l$10 += u$14;
		else return s$8 >= Xp$2 && (!u$14 || u$14 === jp$2) ? (i$18 += l$10, t$13 ? !0 : e$4(i$18)({ type: "thematicBreak" })) : void 0;
	}
});
var en$3 = C$2((Kv$1, eo$4) => {
	eo$4.exports = rh$1;
	var Za$5 = "	", Qp$2 = " ", Zp$2 = 1, eh$1 = 4;
	function rh$1(e$4) {
		for (var r$12 = 0, t$13 = 0, n$8 = e$4.charAt(r$12), a$13 = {}, i$18, u$14 = 0; n$8 === Za$5 || n$8 === Qp$2;) {
			for (i$18 = n$8 === Za$5 ? eh$1 : Zp$2, t$13 += i$18, i$18 > 1 && (t$13 = Math.floor(t$13 / i$18) * i$18); u$14 < t$13;) a$13[++u$14] = r$12;
			n$8 = e$4.charAt(++r$12);
		}
		return {
			indent: t$13,
			stops: a$13
		};
	}
});
var no$2 = C$2((Xv$1, to$4) => {
	var th$1 = Ne$2(), nh$1 = Xr$4(), ih$1 = en$3();
	to$4.exports = oh$1;
	var ro$4 = `
`, uh$1 = " ", ah$1 = "!";
	function oh$1(e$4, r$12) {
		var t$13 = e$4.split(ro$4), n$8 = t$13.length + 1, a$13 = Infinity, i$18 = [], u$14, o$9, s$8;
		for (t$13.unshift(nh$1(uh$1, r$12) + ah$1); n$8--;) if (o$9 = ih$1(t$13[n$8]), i$18[n$8] = o$9.stops, th$1(t$13[n$8]).length !== 0) if (o$9.indent) o$9.indent > 0 && o$9.indent < a$13 && (a$13 = o$9.indent);
		else {
			a$13 = Infinity;
			break;
		}
		if (a$13 !== Infinity) for (n$8 = t$13.length; n$8--;) {
			for (s$8 = i$18[n$8], u$14 = a$13; u$14 && !(u$14 in s$8);) u$14--;
			t$13[n$8] = t$13[n$8].slice(s$8[u$14] + 1);
		}
		return t$13.shift(), t$13.join(ro$4);
	}
});
var co$2 = C$2((Jv$1, so$4) => {
	var sh$1 = Ne$2(), ch$1 = Xr$4(), io$4 = Re$3(), lh$1 = en$3(), fh$1 = no$2(), Dh = Qr$4();
	so$4.exports = vh$1;
	var rn$6 = "*", ph$1 = "_", uo$4 = "+", tn$4 = "-", ao$4 = ".", Fe$4 = " ", ae$6 = `
`, Zr$6 = "	", oo$4 = ")", hh$1 = "x", we$3 = 4, dh$1 = /\n\n(?!\s*$)/, mh$1 = /^\[([ X\tx])][ \t]/, Fh$1 = /^([ \t]*)([*+-]|\d+[.)])( {1,4}(?! )| |\t|$|(?=\n))([^\n]*)/, gh$1 = /^([ \t]*)([*+-]|\d+[.)])([ \t]+)/, Eh$1 = /^( {1,4}|\t)?/gm;
	function vh$1(e$4, r$12, t$13) {
		for (var n$8 = this, a$13 = n$8.options.commonmark, i$18 = n$8.options.pedantic, u$14 = n$8.blockTokenizers, o$9 = n$8.interruptList, s$8 = 0, l$10 = r$12.length, c$3 = null, f$3, p$2, d$14, D$4, h$3, m$11, F$4, A$3, v$5, B$4, b$7, g$2, y$7, x$3, E$3, w$3, k$5, T$9, q$3, N$5 = !1, P$5, S$4, _$2, O$3; s$8 < l$10 && (D$4 = r$12.charAt(s$8), !(D$4 !== Zr$6 && D$4 !== Fe$4));) s$8++;
		if (D$4 = r$12.charAt(s$8), D$4 === rn$6 || D$4 === uo$4 || D$4 === tn$4) h$3 = D$4, d$14 = !1;
		else {
			for (d$14 = !0, p$2 = ""; s$8 < l$10 && (D$4 = r$12.charAt(s$8), !!io$4(D$4));) p$2 += D$4, s$8++;
			if (D$4 = r$12.charAt(s$8), !p$2 || !(D$4 === ao$4 || a$13 && D$4 === oo$4) || t$13 && p$2 !== "1") return;
			c$3 = parseInt(p$2, 10), h$3 = D$4;
		}
		if (D$4 = r$12.charAt(++s$8), !(D$4 !== Fe$4 && D$4 !== Zr$6 && (i$18 || D$4 !== ae$6 && D$4 !== ""))) {
			if (t$13) return !0;
			for (s$8 = 0, x$3 = [], E$3 = [], w$3 = []; s$8 < l$10;) {
				for (m$11 = r$12.indexOf(ae$6, s$8), F$4 = s$8, A$3 = !1, O$3 = !1, m$11 === -1 && (m$11 = l$10), f$3 = 0; s$8 < l$10;) {
					if (D$4 = r$12.charAt(s$8), D$4 === Zr$6) f$3 += we$3 - f$3 % we$3;
					else if (D$4 === Fe$4) f$3++;
					else break;
					s$8++;
				}
				if (k$5 && f$3 >= k$5.indent && (O$3 = !0), D$4 = r$12.charAt(s$8), v$5 = null, !O$3) {
					if (D$4 === rn$6 || D$4 === uo$4 || D$4 === tn$4) v$5 = D$4, s$8++, f$3++;
					else {
						for (p$2 = ""; s$8 < l$10 && (D$4 = r$12.charAt(s$8), !!io$4(D$4));) p$2 += D$4, s$8++;
						D$4 = r$12.charAt(s$8), s$8++, p$2 && (D$4 === ao$4 || a$13 && D$4 === oo$4) && (v$5 = D$4, f$3 += p$2.length + 1);
					}
					if (v$5) if (D$4 = r$12.charAt(s$8), D$4 === Zr$6) f$3 += we$3 - f$3 % we$3, s$8++;
					else if (D$4 === Fe$4) {
						for (_$2 = s$8 + we$3; s$8 < _$2 && r$12.charAt(s$8) === Fe$4;) s$8++, f$3++;
						s$8 === _$2 && r$12.charAt(s$8) === Fe$4 && (s$8 -= we$3 - 1, f$3 -= we$3 - 1);
					} else D$4 !== ae$6 && D$4 !== "" && (v$5 = null);
				}
				if (v$5) {
					if (!i$18 && h$3 !== v$5) break;
					A$3 = !0;
				} else !a$13 && !O$3 && r$12.charAt(F$4) === Fe$4 ? O$3 = !0 : a$13 && k$5 && (O$3 = f$3 >= k$5.indent || f$3 > we$3), A$3 = !1, s$8 = F$4;
				if (b$7 = r$12.slice(F$4, m$11), B$4 = F$4 === s$8 ? b$7 : r$12.slice(s$8, m$11), (v$5 === rn$6 || v$5 === ph$1 || v$5 === tn$4) && u$14.thematicBreak.call(n$8, e$4, b$7, !0)) break;
				if (g$2 = y$7, y$7 = !A$3 && !sh$1(B$4).length, O$3 && k$5) k$5.value = k$5.value.concat(w$3, b$7), E$3 = E$3.concat(w$3, b$7), w$3 = [];
				else if (A$3) w$3.length !== 0 && (N$5 = !0, k$5.value.push(""), k$5.trail = w$3.concat()), k$5 = {
					value: [b$7],
					indent: f$3,
					trail: []
				}, x$3.push(k$5), E$3 = E$3.concat(w$3, b$7), w$3 = [];
				else if (y$7) {
					if (g$2 && !a$13) break;
					w$3.push(b$7);
				} else {
					if (g$2 || Dh(o$9, u$14, n$8, [
						e$4,
						b$7,
						!0
					])) break;
					k$5.value = k$5.value.concat(w$3, b$7), E$3 = E$3.concat(w$3, b$7), w$3 = [];
				}
				s$8 = m$11 + 1;
			}
			for (P$5 = e$4(E$3.join(ae$6)).reset({
				type: "list",
				ordered: d$14,
				start: c$3,
				spread: N$5,
				children: []
			}), T$9 = n$8.enterList(), q$3 = n$8.enterBlock(), s$8 = -1, l$10 = x$3.length; ++s$8 < l$10;) k$5 = x$3[s$8].value.join(ae$6), S$4 = e$4.now(), e$4(k$5)(Ch$1(n$8, k$5, S$4), P$5), k$5 = x$3[s$8].trail.join(ae$6), s$8 !== l$10 - 1 && (k$5 += ae$6), e$4(k$5);
			return T$9(), q$3(), P$5;
		}
	}
	function Ch$1(e$4, r$12, t$13) {
		var n$8 = e$4.offset, a$13 = e$4.options.pedantic ? bh$1 : Ah, i$18 = null, u$14, o$9;
		return r$12 = a$13.apply(null, arguments), e$4.options.gfm && (u$14 = r$12.match(mh$1), u$14 && (o$9 = u$14[0].length, i$18 = u$14[1].toLowerCase() === hh$1, n$8[t$13.line] += o$9, r$12 = r$12.slice(o$9))), {
			type: "listItem",
			spread: dh$1.test(r$12),
			checked: i$18,
			children: e$4.tokenizeBlock(r$12, t$13)
		};
	}
	function bh$1(e$4, r$12, t$13) {
		var n$8 = e$4.offset, a$13 = t$13.line;
		return r$12 = r$12.replace(gh$1, i$18), a$13 = t$13.line, r$12.replace(Eh$1, i$18);
		function i$18(u$14) {
			return n$8[a$13] = (n$8[a$13] || 0) + u$14.length, a$13++, "";
		}
	}
	function Ah(e$4, r$12, t$13) {
		var n$8 = e$4.offset, a$13 = t$13.line, i$18, u$14, o$9, s$8, l$10, c$3, f$3;
		for (r$12 = r$12.replace(Fh$1, p$2), s$8 = r$12.split(ae$6), l$10 = fh$1(r$12, lh$1(i$18).indent).split(ae$6), l$10[0] = o$9, n$8[a$13] = (n$8[a$13] || 0) + u$14.length, a$13++, c$3 = 0, f$3 = s$8.length; ++c$3 < f$3;) n$8[a$13] = (n$8[a$13] || 0) + s$8[c$3].length - l$10[c$3].length, a$13++;
		return l$10.join(ae$6);
		function p$2(d$14, D$4, h$3, m$11, F$4) {
			return u$14 = D$4 + h$3 + m$11, o$9 = F$4, Number(h$3) < 10 && u$14.length % 2 === 1 && (h$3 = Fe$4 + h$3), i$18 = D$4 + ch$1(Fe$4, h$3.length) + m$11, i$18 + o$9;
		}
	}
});
var po$2 = C$2((Qv$1, Do$2) => {
	Do$2.exports = Th$1;
	var nn$5 = `
`, yh$1 = "	", lo$4 = " ", fo$2 = "=", xh$1 = "-", wh$1 = 3, kh$1 = 1, Bh$1 = 2;
	function Th$1(e$4, r$12, t$13) {
		for (var n$8 = this, a$13 = e$4.now(), i$18 = r$12.length, u$14 = -1, o$9 = "", s$8, l$10, c$3, f$3, p$2; ++u$14 < i$18;) {
			if (c$3 = r$12.charAt(u$14), c$3 !== lo$4 || u$14 >= wh$1) {
				u$14--;
				break;
			}
			o$9 += c$3;
		}
		for (s$8 = "", l$10 = ""; ++u$14 < i$18;) {
			if (c$3 = r$12.charAt(u$14), c$3 === nn$5) {
				u$14--;
				break;
			}
			c$3 === lo$4 || c$3 === yh$1 ? l$10 += c$3 : (s$8 += l$10 + c$3, l$10 = "");
		}
		if (a$13.column += o$9.length, a$13.offset += o$9.length, o$9 += s$8 + l$10, c$3 = r$12.charAt(++u$14), f$3 = r$12.charAt(++u$14), !(c$3 !== nn$5 || f$3 !== fo$2 && f$3 !== xh$1)) {
			for (o$9 += c$3, l$10 = f$3, p$2 = f$3 === fo$2 ? kh$1 : Bh$1; ++u$14 < i$18;) {
				if (c$3 = r$12.charAt(u$14), c$3 !== f$3) {
					if (c$3 !== nn$5) return;
					u$14--;
					break;
				}
				l$10 += c$3;
			}
			return t$13 ? !0 : e$4(o$9 + l$10)({
				type: "heading",
				depth: p$2,
				children: n$8.tokenizeInline(s$8, a$13)
			});
		}
	}
});
var an$3 = C$2((un$5) => {
	var qh$1 = "[a-zA-Z_:][a-zA-Z0-9:._-]*", _h$1 = "[^\"'=<>`\\u0000-\\u0020]+", Sh$1 = "'[^']*'", Ph$1 = "\"[^\"]*\"", Oh$1 = "(?:" + _h$1 + "|" + Sh$1 + "|" + Ph$1 + ")", Lh$1 = "(?:\\s+" + qh$1 + "(?:\\s*=\\s*" + Oh$1 + ")?)", ho$3 = "<[A-Za-z][A-Za-z0-9\\-]*" + Lh$1 + "*\\s*\\/?>", mo$3 = "<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>", Ih$2 = "<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->", Rh$1 = "<[?].*?[?]>", Nh$1 = "<![A-Za-z]+\\s+[^>]*>", Mh$1 = "<!\\[CDATA\\[[\\s\\S]*?\\]\\]>";
	un$5.openCloseTag = /* @__PURE__ */ new RegExp("^(?:" + ho$3 + "|" + mo$3 + ")");
	un$5.tag = /* @__PURE__ */ new RegExp("^(?:" + ho$3 + "|" + mo$3 + "|" + Ih$2 + "|" + Rh$1 + "|" + Nh$1 + "|" + Mh$1 + ")");
});
var vo$2 = C$2((eC, Eo$4) => {
	var Uh$1 = an$3().openCloseTag;
	Eo$4.exports = rd$1;
	var zh$1 = "	", Gh$1 = " ", Fo$2 = `
`, Yh$1 = "<", $h = /^<(script|pre|style)(?=(\s|>|$))/i, Vh$1 = /<\/(script|pre|style)>/i, jh$1 = /^<!--/, Wh$1 = /-->/, Hh$1 = /^<\?/, Kh$1 = /\?>/, Xh$1 = /^<![A-Za-z]/, Jh$1 = />/, Qh$1 = /^<!\[CDATA\[/, Zh$1 = /]]>/, go$4 = /^$/, ed$1 = /* @__PURE__ */ new RegExp(Uh$1.source + "\\s*$");
	function rd$1(e$4, r$12, t$13) {
		for (var n$8 = this, a$13 = n$8.options.blocks.join("|"), i$18 = new RegExp("^</?(" + a$13 + ")(?=(\\s|/?>|$))", "i"), u$14 = r$12.length, o$9 = 0, s$8, l$10, c$3, f$3, p$2, d$14, D$4, h$3 = [
			[
				$h,
				Vh$1,
				!0
			],
			[
				jh$1,
				Wh$1,
				!0
			],
			[
				Hh$1,
				Kh$1,
				!0
			],
			[
				Xh$1,
				Jh$1,
				!0
			],
			[
				Qh$1,
				Zh$1,
				!0
			],
			[
				i$18,
				go$4,
				!0
			],
			[
				ed$1,
				go$4,
				!1
			]
		]; o$9 < u$14 && (f$3 = r$12.charAt(o$9), !(f$3 !== zh$1 && f$3 !== Gh$1));) o$9++;
		if (r$12.charAt(o$9) === Yh$1) {
			for (s$8 = r$12.indexOf(Fo$2, o$9 + 1), s$8 = s$8 === -1 ? u$14 : s$8, l$10 = r$12.slice(o$9, s$8), c$3 = -1, p$2 = h$3.length; ++c$3 < p$2;) if (h$3[c$3][0].test(l$10)) {
				d$14 = h$3[c$3];
				break;
			}
			if (d$14) {
				if (t$13) return d$14[2];
				if (o$9 = s$8, !d$14[1].test(l$10)) for (; o$9 < u$14;) {
					if (s$8 = r$12.indexOf(Fo$2, o$9 + 1), s$8 = s$8 === -1 ? u$14 : s$8, l$10 = r$12.slice(o$9 + 1, s$8), d$14[1].test(l$10)) {
						l$10 && (o$9 = s$8);
						break;
					}
					o$9 = s$8;
				}
				return D$4 = r$12.slice(0, o$9), e$4(D$4)({
					type: "html",
					value: D$4
				});
			}
		}
	}
});
var oe$3 = C$2((rC, Co$1) => {
	Co$1.exports = id$1;
	var td$1 = String.fromCharCode, nd = /\s/;
	function id$1(e$4) {
		return nd.test(typeof e$4 == "number" ? td$1(e$4) : e$4.charAt(0));
	}
});
var on$3 = C$2((tC, bo$3) => {
	var ud$1 = kr$2();
	bo$3.exports = ad$1;
	function ad$1(e$4) {
		return ud$1(e$4).toLowerCase();
	}
});
var To$1 = C$2((nC, Bo$3) => {
	var od$1 = oe$3(), sd$1 = on$3();
	Bo$3.exports = Dd$1;
	var Ao$2 = "\"", yo$3 = "'", cd$1 = "\\", Ze$6 = `
`, et$5 = "	", rt$5 = " ", cn$6 = "[", vr$4 = "]", ld$1 = "(", fd$1 = ")", xo$2 = ":", wo$3 = "<", ko$2 = ">";
	function Dd$1(e$4, r$12, t$13) {
		for (var n$8 = this, a$13 = n$8.options.commonmark, i$18 = 0, u$14 = r$12.length, o$9 = "", s$8, l$10, c$3, f$3, p$2, d$14, D$4, h$3; i$18 < u$14 && (f$3 = r$12.charAt(i$18), !(f$3 !== rt$5 && f$3 !== et$5));) o$9 += f$3, i$18++;
		if (f$3 = r$12.charAt(i$18), f$3 === cn$6) {
			for (i$18++, o$9 += f$3, c$3 = ""; i$18 < u$14 && (f$3 = r$12.charAt(i$18), f$3 !== vr$4);) f$3 === cd$1 && (c$3 += f$3, i$18++, f$3 = r$12.charAt(i$18)), c$3 += f$3, i$18++;
			if (!(!c$3 || r$12.charAt(i$18) !== vr$4 || r$12.charAt(i$18 + 1) !== xo$2)) {
				for (d$14 = c$3, o$9 += c$3 + vr$4 + xo$2, i$18 = o$9.length, c$3 = ""; i$18 < u$14 && (f$3 = r$12.charAt(i$18), !(f$3 !== et$5 && f$3 !== rt$5 && f$3 !== Ze$6));) o$9 += f$3, i$18++;
				if (f$3 = r$12.charAt(i$18), c$3 = "", s$8 = o$9, f$3 === wo$3) {
					for (i$18++; i$18 < u$14 && (f$3 = r$12.charAt(i$18), !!sn$4(f$3));) c$3 += f$3, i$18++;
					if (f$3 = r$12.charAt(i$18), f$3 === sn$4.delimiter) o$9 += wo$3 + c$3 + f$3, i$18++;
					else {
						if (a$13) return;
						i$18 -= c$3.length + 1, c$3 = "";
					}
				}
				if (!c$3) {
					for (; i$18 < u$14 && (f$3 = r$12.charAt(i$18), !!pd$1(f$3));) c$3 += f$3, i$18++;
					o$9 += c$3;
				}
				if (c$3) {
					for (D$4 = c$3, c$3 = ""; i$18 < u$14 && (f$3 = r$12.charAt(i$18), !(f$3 !== et$5 && f$3 !== rt$5 && f$3 !== Ze$6));) c$3 += f$3, i$18++;
					if (f$3 = r$12.charAt(i$18), p$2 = null, f$3 === Ao$2 ? p$2 = Ao$2 : f$3 === yo$3 ? p$2 = yo$3 : f$3 === ld$1 && (p$2 = fd$1), !p$2) c$3 = "", i$18 = o$9.length;
					else if (c$3) {
						for (o$9 += c$3 + f$3, i$18 = o$9.length, c$3 = ""; i$18 < u$14 && (f$3 = r$12.charAt(i$18), f$3 !== p$2);) {
							if (f$3 === Ze$6) {
								if (i$18++, f$3 = r$12.charAt(i$18), f$3 === Ze$6 || f$3 === p$2) return;
								c$3 += Ze$6;
							}
							c$3 += f$3, i$18++;
						}
						if (f$3 = r$12.charAt(i$18), f$3 !== p$2) return;
						l$10 = o$9, o$9 += c$3 + f$3, i$18++, h$3 = c$3, c$3 = "";
					} else return;
					for (; i$18 < u$14 && (f$3 = r$12.charAt(i$18), !(f$3 !== et$5 && f$3 !== rt$5));) o$9 += f$3, i$18++;
					if (f$3 = r$12.charAt(i$18), !f$3 || f$3 === Ze$6) return t$13 ? !0 : (s$8 = e$4(s$8).test().end, D$4 = n$8.decode.raw(n$8.unescape(D$4), s$8, { nonTerminated: !1 }), h$3 && (l$10 = e$4(l$10).test().end, h$3 = n$8.decode.raw(n$8.unescape(h$3), l$10)), e$4(o$9)({
						type: "definition",
						identifier: sd$1(d$14),
						label: d$14,
						title: h$3 || null,
						url: D$4
					}));
				}
			}
		}
	}
	function sn$4(e$4) {
		return e$4 !== ko$2 && e$4 !== cn$6 && e$4 !== vr$4;
	}
	sn$4.delimiter = ko$2;
	function pd$1(e$4) {
		return e$4 !== cn$6 && e$4 !== vr$4 && !od$1(e$4);
	}
});
var So$2 = C$2((iC, _o$2) => {
	var hd$1 = oe$3();
	_o$2.exports = yd;
	var dd$1 = "	", tt$5 = `
`, md$1 = " ", Fd$1 = "-", gd = ":", Ed$1 = "\\", ln$5 = "|", vd = 1, Cd$1 = 2, qo$3 = "left", bd = "center", Ad$1 = "right";
	function yd(e$4, r$12, t$13) {
		var n$8 = this, a$13, i$18, u$14, o$9, s$8, l$10, c$3, f$3, p$2, d$14, D$4, h$3, m$11, F$4, A$3, v$5, B$4, b$7, g$2, y$7, x$3, E$3;
		if (n$8.options.gfm) {
			for (a$13 = 0, v$5 = 0, l$10 = r$12.length + 1, c$3 = []; a$13 < l$10;) {
				if (y$7 = r$12.indexOf(tt$5, a$13), x$3 = r$12.indexOf(ln$5, a$13 + 1), y$7 === -1 && (y$7 = r$12.length), x$3 === -1 || x$3 > y$7) {
					if (v$5 < Cd$1) return;
					break;
				}
				c$3.push(r$12.slice(a$13, y$7)), v$5++, a$13 = y$7 + 1;
			}
			for (o$9 = c$3.join(tt$5), i$18 = c$3.splice(1, 1)[0] || [], a$13 = 0, l$10 = i$18.length, v$5--, u$14 = !1, D$4 = []; a$13 < l$10;) {
				if (p$2 = i$18.charAt(a$13), p$2 === ln$5) {
					if (d$14 = null, u$14 === !1) {
						if (E$3 === !1) return;
					} else D$4.push(u$14), u$14 = !1;
					E$3 = !1;
				} else if (p$2 === Fd$1) d$14 = !0, u$14 = u$14 || null;
				else if (p$2 === gd) u$14 === qo$3 ? u$14 = bd : d$14 && u$14 === null ? u$14 = Ad$1 : u$14 = qo$3;
				else if (!hd$1(p$2)) return;
				a$13++;
			}
			if (u$14 !== !1 && D$4.push(u$14), !(D$4.length < vd)) {
				if (t$13) return !0;
				for (A$3 = -1, b$7 = [], g$2 = e$4(o$9).reset({
					type: "table",
					align: D$4,
					children: b$7
				}); ++A$3 < v$5;) {
					for (B$4 = c$3[A$3], s$8 = {
						type: "tableRow",
						children: []
					}, A$3 && e$4(tt$5), e$4(B$4).reset(s$8, g$2), l$10 = B$4.length + 1, a$13 = 0, f$3 = "", h$3 = "", m$11 = !0; a$13 < l$10;) {
						if (p$2 = B$4.charAt(a$13), p$2 === dd$1 || p$2 === md$1) {
							h$3 ? f$3 += p$2 : e$4(p$2), a$13++;
							continue;
						}
						p$2 === "" || p$2 === ln$5 ? m$11 ? e$4(p$2) : ((h$3 || p$2) && !m$11 && (o$9 = h$3, f$3.length > 1 && (p$2 ? (o$9 += f$3.slice(0, -1), f$3 = f$3.charAt(f$3.length - 1)) : (o$9 += f$3, f$3 = "")), F$4 = e$4.now(), e$4(o$9)({
							type: "tableCell",
							children: n$8.tokenizeInline(h$3, F$4)
						}, s$8)), e$4(f$3 + p$2), f$3 = "", h$3 = "") : (f$3 && (h$3 += f$3, f$3 = ""), h$3 += p$2, p$2 === Ed$1 && a$13 !== l$10 - 2 && (h$3 += B$4.charAt(a$13 + 1), a$13++)), m$11 = !1, a$13++;
					}
					A$3 || e$4(tt$5 + i$18);
				}
				return g$2;
			}
		}
	}
});
var Lo = C$2((uC, Oo$4) => {
	var xd$1 = Ne$2(), wd$1 = Kt$1(), kd$1 = Qr$4();
	Oo$4.exports = qd$1;
	var Bd$1 = "	", Cr$4 = `
`, Td = " ", Po$2 = 4;
	function qd$1(e$4, r$12, t$13) {
		for (var n$8 = this, a$13 = n$8.options, i$18 = a$13.commonmark, u$14 = n$8.blockTokenizers, o$9 = n$8.interruptParagraph, s$8 = r$12.indexOf(Cr$4), l$10 = r$12.length, c$3, f$3, p$2, d$14, D$4; s$8 < l$10;) {
			if (s$8 === -1) {
				s$8 = l$10;
				break;
			}
			if (r$12.charAt(s$8 + 1) === Cr$4) break;
			if (i$18) {
				for (d$14 = 0, c$3 = s$8 + 1; c$3 < l$10;) {
					if (p$2 = r$12.charAt(c$3), p$2 === Bd$1) {
						d$14 = Po$2;
						break;
					} else if (p$2 === Td) d$14++;
					else break;
					c$3++;
				}
				if (d$14 >= Po$2 && p$2 !== Cr$4) {
					s$8 = r$12.indexOf(Cr$4, s$8 + 1);
					continue;
				}
			}
			if (f$3 = r$12.slice(s$8 + 1), kd$1(o$9, u$14, n$8, [
				e$4,
				f$3,
				!0
			])) break;
			if (c$3 = s$8, s$8 = r$12.indexOf(Cr$4, s$8 + 1), s$8 !== -1 && xd$1(r$12.slice(c$3, s$8)) === "") {
				s$8 = c$3;
				break;
			}
		}
		return f$3 = r$12.slice(0, s$8), t$13 ? !0 : (D$4 = e$4.now(), f$3 = wd$1(f$3), e$4(f$3)({
			type: "paragraph",
			children: n$8.tokenizeInline(f$3, D$4)
		}));
	}
});
var Ro$2 = C$2((aC, Io$4) => {
	Io$4.exports = _d$1;
	function _d$1(e$4, r$12) {
		return e$4.indexOf("\\", r$12);
	}
});
var zo$1 = C$2((oC, Uo$3) => {
	var Sd$1 = Ro$2();
	Uo$3.exports = Mo$3;
	Mo$3.locator = Sd$1;
	var Pd$1 = `
`, No$3 = "\\";
	function Mo$3(e$4, r$12, t$13) {
		var n$8 = this, a$13, i$18;
		if (r$12.charAt(0) === No$3 && (a$13 = r$12.charAt(1), n$8.escape.indexOf(a$13) !== -1)) return t$13 ? !0 : (a$13 === Pd$1 ? i$18 = { type: "break" } : i$18 = {
			type: "text",
			value: a$13
		}, e$4(No$3 + a$13)(i$18));
	}
});
var fn$3 = C$2((sC, Go$3) => {
	Go$3.exports = Od$1;
	function Od$1(e$4, r$12) {
		return e$4.indexOf("<", r$12);
	}
});
var Wo$1 = C$2((cC, jo$3) => {
	var Yo$3 = oe$3(), Ld$1 = dr$3(), Id$1 = fn$3();
	jo$3.exports = dn$5;
	dn$5.locator = Id$1;
	dn$5.notInLink = !0;
	var $o$3 = "<", Dn$5 = ">", Vo$4 = "@", pn$5 = "/", hn$5 = "mailto:", nt$4 = hn$5.length;
	function dn$5(e$4, r$12, t$13) {
		var n$8 = this, a$13 = "", i$18 = r$12.length, u$14 = 0, o$9 = "", s$8 = !1, l$10 = "", c$3, f$3, p$2, d$14, D$4;
		if (r$12.charAt(0) === $o$3) {
			for (u$14++, a$13 = $o$3; u$14 < i$18 && (c$3 = r$12.charAt(u$14), !(Yo$3(c$3) || c$3 === Dn$5 || c$3 === Vo$4 || c$3 === ":" && r$12.charAt(u$14 + 1) === pn$5));) o$9 += c$3, u$14++;
			if (o$9) {
				if (l$10 += o$9, o$9 = "", c$3 = r$12.charAt(u$14), l$10 += c$3, u$14++, c$3 === Vo$4) s$8 = !0;
				else {
					if (c$3 !== ":" || r$12.charAt(u$14 + 1) !== pn$5) return;
					l$10 += pn$5, u$14++;
				}
				for (; u$14 < i$18 && (c$3 = r$12.charAt(u$14), !(Yo$3(c$3) || c$3 === Dn$5));) o$9 += c$3, u$14++;
				if (c$3 = r$12.charAt(u$14), !(!o$9 || c$3 !== Dn$5)) return t$13 ? !0 : (l$10 += o$9, p$2 = l$10, a$13 += l$10 + c$3, f$3 = e$4.now(), f$3.column++, f$3.offset++, s$8 && (l$10.slice(0, nt$4).toLowerCase() === hn$5 ? (p$2 = p$2.slice(nt$4), f$3.column += nt$4, f$3.offset += nt$4) : l$10 = hn$5 + l$10), d$14 = n$8.inlineTokenizers, n$8.inlineTokenizers = { text: d$14.text }, D$4 = n$8.enterLink(), p$2 = n$8.tokenizeInline(p$2, f$3), n$8.inlineTokenizers = d$14, D$4(), e$4(a$13)({
					type: "link",
					title: null,
					url: Ld$1(l$10, { nonTerminated: !1 }),
					children: p$2
				}));
			}
		}
	}
});
var Ko$2 = C$2((lC, Ho$3) => {
	Ho$3.exports = Rd$1;
	function Rd$1(e$4, r$12) {
		var t$13 = String(e$4), n$8 = 0, a$13;
		if (typeof r$12 != "string") throw new Error("Expected character");
		for (a$13 = t$13.indexOf(r$12); a$13 !== -1;) n$8++, a$13 = t$13.indexOf(r$12, a$13 + r$12.length);
		return n$8;
	}
});
var Qo$1 = C$2((fC, Jo$3) => {
	Jo$3.exports = Nd$1;
	var Xo$4 = [
		"www.",
		"http://",
		"https://"
	];
	function Nd$1(e$4, r$12) {
		var t$13 = -1, n$8, a$13, i$18;
		if (!this.options.gfm) return t$13;
		for (a$13 = Xo$4.length, n$8 = -1; ++n$8 < a$13;) i$18 = e$4.indexOf(Xo$4[n$8], r$12), i$18 !== -1 && (t$13 === -1 || i$18 < t$13) && (t$13 = i$18);
		return t$13;
	}
});
var ns$2 = C$2((DC, ts$3) => {
	var Zo$3 = Ko$2(), Md$1 = dr$3(), Ud$1 = Re$3(), mn$5 = He$4(), zd$1 = oe$3(), Gd$1 = Qo$1();
	ts$3.exports = gn$6;
	gn$6.locator = Gd$1;
	gn$6.notInLink = !0;
	var Yd$1 = 33, $d$1 = 38, Vd$1 = 41, jd$1 = 42, Wd$1 = 44, Hd$1 = 45, Fn$4 = 46, Kd$1 = 58, Xd$1 = 59, Jd$1 = 63, Qd$1 = 60, es$3 = 95, Zd$1 = 126, e0$1 = "(", rs$3 = ")";
	function gn$6(e$4, r$12, t$13) {
		var n$8 = this, a$13 = n$8.options.gfm, i$18 = n$8.inlineTokenizers, u$14 = r$12.length, o$9 = -1, s$8 = !1, l$10, c$3, f$3, p$2, d$14, D$4, h$3, m$11, F$4, A$3, v$5, B$4, b$7, g$2;
		if (a$13) {
			if (r$12.slice(0, 4) === "www.") s$8 = !0, p$2 = 4;
			else if (r$12.slice(0, 7).toLowerCase() === "http://") p$2 = 7;
			else if (r$12.slice(0, 8).toLowerCase() === "https://") p$2 = 8;
			else return;
			for (o$9 = p$2 - 1, f$3 = p$2, l$10 = []; p$2 < u$14;) {
				if (h$3 = r$12.charCodeAt(p$2), h$3 === Fn$4) {
					if (o$9 === p$2 - 1) break;
					l$10.push(p$2), o$9 = p$2, p$2++;
					continue;
				}
				if (Ud$1(h$3) || mn$5(h$3) || h$3 === Hd$1 || h$3 === es$3) {
					p$2++;
					continue;
				}
				break;
			}
			if (h$3 === Fn$4 && (l$10.pop(), p$2--), l$10[0] !== void 0 && (c$3 = l$10.length < 2 ? f$3 : l$10[l$10.length - 2] + 1, r$12.slice(c$3, p$2).indexOf("_") === -1)) {
				if (t$13) return !0;
				for (m$11 = p$2, d$14 = p$2; p$2 < u$14 && (h$3 = r$12.charCodeAt(p$2), !(zd$1(h$3) || h$3 === Qd$1));) p$2++, h$3 === Yd$1 || h$3 === jd$1 || h$3 === Wd$1 || h$3 === Fn$4 || h$3 === Kd$1 || h$3 === Jd$1 || h$3 === es$3 || h$3 === Zd$1 || (m$11 = p$2);
				if (p$2 = m$11, r$12.charCodeAt(p$2 - 1) === Vd$1) for (D$4 = r$12.slice(d$14, p$2), F$4 = Zo$3(D$4, e0$1), A$3 = Zo$3(D$4, rs$3); A$3 > F$4;) p$2 = d$14 + D$4.lastIndexOf(rs$3), D$4 = r$12.slice(d$14, p$2), A$3--;
				if (r$12.charCodeAt(p$2 - 1) === Xd$1 && (p$2--, mn$5(r$12.charCodeAt(p$2 - 1)))) {
					for (m$11 = p$2 - 2; mn$5(r$12.charCodeAt(m$11));) m$11--;
					r$12.charCodeAt(m$11) === $d$1 && (p$2 = m$11);
				}
				return v$5 = r$12.slice(0, p$2), b$7 = Md$1(v$5, { nonTerminated: !1 }), s$8 && (b$7 = "http://" + b$7), g$2 = n$8.enterLink(), n$8.inlineTokenizers = { text: i$18.text }, B$4 = n$8.tokenizeInline(v$5, e$4.now()), n$8.inlineTokenizers = i$18, g$2(), e$4(v$5)({
					type: "link",
					title: null,
					url: b$7,
					children: B$4
				});
			}
		}
	}
});
var os$1 = C$2((pC, as$2) => {
	var r0$1 = Re$3(), t0 = He$4(), n0$1 = 43, i0$1 = 45, u0$1 = 46, a0$1 = 95;
	as$2.exports = us$2;
	function us$2(e$4, r$12) {
		var t$13 = this, n$8, a$13;
		if (!this.options.gfm || (n$8 = e$4.indexOf("@", r$12), n$8 === -1)) return -1;
		if (a$13 = n$8, a$13 === r$12 || !is$2(e$4.charCodeAt(a$13 - 1))) return us$2.call(t$13, e$4, n$8 + 1);
		for (; a$13 > r$12 && is$2(e$4.charCodeAt(a$13 - 1));) a$13--;
		return a$13;
	}
	function is$2(e$4) {
		return r0$1(e$4) || t0(e$4) || e$4 === n0$1 || e$4 === i0$1 || e$4 === u0$1 || e$4 === a0$1;
	}
});
var fs = C$2((hC, ls$3) => {
	var o0$1 = dr$3(), ss$3 = Re$3(), cs$2 = He$4(), s0$1 = os$1();
	ls$3.exports = Cn$5;
	Cn$5.locator = s0$1;
	Cn$5.notInLink = !0;
	var c0$1 = 43, En$5 = 45, it$6 = 46, l0$1 = 64, vn$4 = 95;
	function Cn$5(e$4, r$12, t$13) {
		var n$8 = this, a$13 = n$8.options.gfm, i$18 = n$8.inlineTokenizers, u$14 = 0, o$9 = r$12.length, s$8 = -1, l$10, c$3, f$3, p$2;
		if (a$13) {
			for (l$10 = r$12.charCodeAt(u$14); ss$3(l$10) || cs$2(l$10) || l$10 === c0$1 || l$10 === En$5 || l$10 === it$6 || l$10 === vn$4;) l$10 = r$12.charCodeAt(++u$14);
			if (u$14 !== 0 && l$10 === l0$1) {
				for (u$14++; u$14 < o$9;) {
					if (l$10 = r$12.charCodeAt(u$14), ss$3(l$10) || cs$2(l$10) || l$10 === En$5 || l$10 === it$6 || l$10 === vn$4) {
						u$14++, s$8 === -1 && l$10 === it$6 && (s$8 = u$14);
						continue;
					}
					break;
				}
				if (!(s$8 === -1 || s$8 === u$14 || l$10 === En$5 || l$10 === vn$4)) return l$10 === it$6 && u$14--, c$3 = r$12.slice(0, u$14), t$13 ? !0 : (p$2 = n$8.enterLink(), n$8.inlineTokenizers = { text: i$18.text }, f$3 = n$8.tokenizeInline(c$3, e$4.now()), n$8.inlineTokenizers = i$18, p$2(), e$4(c$3)({
					type: "link",
					title: null,
					url: "mailto:" + o0$1(c$3, { nonTerminated: !1 }),
					children: f$3
				}));
			}
		}
	}
});
var hs = C$2((dC, ps$3) => {
	var f0$1 = He$4(), D0$1 = fn$3(), p0$1 = an$3().tag;
	ps$3.exports = Ds$2;
	Ds$2.locator = D0$1;
	var h0$1 = "<", d0$1 = "?", m0$1 = "!", F0$1 = "/", g0$1 = /^<a /i, E0$1 = /^<\/a>/i;
	function Ds$2(e$4, r$12, t$13) {
		var n$8 = this, a$13 = r$12.length, i$18, u$14;
		if (!(r$12.charAt(0) !== h0$1 || a$13 < 3) && (i$18 = r$12.charAt(1), !(!f0$1(i$18) && i$18 !== d0$1 && i$18 !== m0$1 && i$18 !== F0$1) && (u$14 = r$12.match(p0$1), !!u$14))) return t$13 ? !0 : (u$14 = u$14[0], !n$8.inLink && g0$1.test(u$14) ? n$8.inLink = !0 : n$8.inLink && E0$1.test(u$14) && (n$8.inLink = !1), e$4(u$14)({
			type: "html",
			value: u$14
		}));
	}
});
var bn$3 = C$2((mC, ds$2) => {
	ds$2.exports = v0$1;
	function v0$1(e$4, r$12) {
		var t$13 = e$4.indexOf("[", r$12), n$8 = e$4.indexOf("![", r$12);
		return n$8 === -1 || t$13 < n$8 ? t$13 : n$8;
	}
});
var bs$1 = C$2((FC, Cs$2) => {
	var br$4 = oe$3(), C0$1 = bn$3();
	Cs$2.exports = vs$2;
	vs$2.locator = C0$1;
	var b0$1 = `
`, A0$1 = "!", ms$2 = "\"", Fs$4 = "'", er$3 = "(", Ar$5 = ")", An$5 = "<", yn$5 = ">", gs$3 = "[", yr$4 = "\\", y0$1 = "]", Es$2 = "`";
	function vs$2(e$4, r$12, t$13) {
		var n$8 = this, a$13 = "", i$18 = 0, u$14 = r$12.charAt(0), o$9 = n$8.options.pedantic, s$8 = n$8.options.commonmark, l$10 = n$8.options.gfm, c$3, f$3, p$2, d$14, D$4, h$3, m$11, F$4, A$3, v$5, B$4, b$7, g$2, y$7, x$3, E$3, w$3, k$5;
		if (u$14 === A0$1 && (F$4 = !0, a$13 = u$14, u$14 = r$12.charAt(++i$18)), u$14 === gs$3 && !(!F$4 && n$8.inLink)) {
			for (a$13 += u$14, y$7 = "", i$18++, B$4 = r$12.length, E$3 = e$4.now(), g$2 = 0, E$3.column += i$18, E$3.offset += i$18; i$18 < B$4;) {
				if (u$14 = r$12.charAt(i$18), h$3 = u$14, u$14 === Es$2) {
					for (f$3 = 1; r$12.charAt(i$18 + 1) === Es$2;) h$3 += u$14, i$18++, f$3++;
					p$2 ? f$3 >= p$2 && (p$2 = 0) : p$2 = f$3;
				} else if (u$14 === yr$4) i$18++, h$3 += r$12.charAt(i$18);
				else if ((!p$2 || l$10) && u$14 === gs$3) g$2++;
				else if ((!p$2 || l$10) && u$14 === y0$1) if (g$2) g$2--;
				else {
					if (r$12.charAt(i$18 + 1) !== er$3) return;
					h$3 += er$3, c$3 = !0, i$18++;
					break;
				}
				y$7 += h$3, h$3 = "", i$18++;
			}
			if (c$3) {
				for (A$3 = y$7, a$13 += y$7 + h$3, i$18++; i$18 < B$4 && (u$14 = r$12.charAt(i$18), !!br$4(u$14));) a$13 += u$14, i$18++;
				if (u$14 = r$12.charAt(i$18), y$7 = "", d$14 = a$13, u$14 === An$5) {
					for (i$18++, d$14 += An$5; i$18 < B$4 && (u$14 = r$12.charAt(i$18), u$14 !== yn$5);) {
						if (s$8 && u$14 === b0$1) return;
						y$7 += u$14, i$18++;
					}
					if (r$12.charAt(i$18) !== yn$5) return;
					a$13 += An$5 + y$7 + yn$5, x$3 = y$7, i$18++;
				} else {
					for (u$14 = null, h$3 = ""; i$18 < B$4 && (u$14 = r$12.charAt(i$18), !(h$3 && (u$14 === ms$2 || u$14 === Fs$4 || s$8 && u$14 === er$3)));) {
						if (br$4(u$14)) {
							if (!o$9) break;
							h$3 += u$14;
						} else {
							if (u$14 === er$3) g$2++;
							else if (u$14 === Ar$5) {
								if (g$2 === 0) break;
								g$2--;
							}
							y$7 += h$3, h$3 = "", u$14 === yr$4 && (y$7 += yr$4, u$14 = r$12.charAt(++i$18)), y$7 += u$14;
						}
						i$18++;
					}
					a$13 += y$7, x$3 = y$7, i$18 = a$13.length;
				}
				for (y$7 = ""; i$18 < B$4 && (u$14 = r$12.charAt(i$18), !!br$4(u$14));) y$7 += u$14, i$18++;
				if (u$14 = r$12.charAt(i$18), a$13 += y$7, y$7 && (u$14 === ms$2 || u$14 === Fs$4 || s$8 && u$14 === er$3)) if (i$18++, a$13 += u$14, y$7 = "", v$5 = u$14 === er$3 ? Ar$5 : u$14, D$4 = a$13, s$8) {
					for (; i$18 < B$4 && (u$14 = r$12.charAt(i$18), u$14 !== v$5);) u$14 === yr$4 && (y$7 += yr$4, u$14 = r$12.charAt(++i$18)), i$18++, y$7 += u$14;
					if (u$14 = r$12.charAt(i$18), u$14 !== v$5) return;
					for (b$7 = y$7, a$13 += y$7 + u$14, i$18++; i$18 < B$4 && (u$14 = r$12.charAt(i$18), !!br$4(u$14));) a$13 += u$14, i$18++;
				} else for (h$3 = ""; i$18 < B$4;) {
					if (u$14 = r$12.charAt(i$18), u$14 === v$5) m$11 && (y$7 += v$5 + h$3, h$3 = ""), m$11 = !0;
					else if (!m$11) y$7 += u$14;
					else if (u$14 === Ar$5) {
						a$13 += y$7 + v$5 + h$3, b$7 = y$7;
						break;
					} else br$4(u$14) ? h$3 += u$14 : (y$7 += v$5 + h$3 + u$14, h$3 = "", m$11 = !1);
					i$18++;
				}
				if (r$12.charAt(i$18) === Ar$5) return t$13 ? !0 : (a$13 += Ar$5, x$3 = n$8.decode.raw(n$8.unescape(x$3), e$4(d$14).test().end, { nonTerminated: !1 }), b$7 && (D$4 = e$4(D$4).test().end, b$7 = n$8.decode.raw(n$8.unescape(b$7), D$4)), k$5 = {
					type: F$4 ? "image" : "link",
					title: b$7 || null,
					url: x$3
				}, F$4 ? k$5.alt = n$8.decode.raw(n$8.unescape(A$3), E$3) || null : (w$3 = n$8.enterLink(), k$5.children = n$8.tokenizeInline(A$3, E$3), w$3()), e$4(a$13)(k$5));
			}
		}
	}
});
var xs = C$2((gC, ys$2) => {
	var x0$1 = oe$3(), w0 = bn$3(), k0 = on$3();
	ys$2.exports = As$2;
	As$2.locator = w0;
	var xn$3 = "link", B0$1 = "image", T0$1 = "shortcut", q0$1 = "collapsed", wn$4 = "full", _0 = "!", ut$4 = "[", at$4 = "\\", ot$6 = "]";
	function As$2(e$4, r$12, t$13) {
		var n$8 = this, a$13 = n$8.options.commonmark, i$18 = r$12.charAt(0), u$14 = 0, o$9 = r$12.length, s$8 = "", l$10 = "", c$3 = xn$3, f$3 = T0$1, p$2, d$14, D$4, h$3, m$11, F$4, A$3, v$5;
		if (i$18 === _0 && (c$3 = B0$1, l$10 = i$18, i$18 = r$12.charAt(++u$14)), i$18 === ut$4) {
			for (u$14++, l$10 += i$18, F$4 = "", v$5 = 0; u$14 < o$9;) {
				if (i$18 = r$12.charAt(u$14), i$18 === ut$4) A$3 = !0, v$5++;
				else if (i$18 === ot$6) {
					if (!v$5) break;
					v$5--;
				}
				i$18 === at$4 && (F$4 += at$4, i$18 = r$12.charAt(++u$14)), F$4 += i$18, u$14++;
			}
			if (s$8 = F$4, p$2 = F$4, i$18 = r$12.charAt(u$14), i$18 === ot$6) {
				if (u$14++, s$8 += i$18, F$4 = "", !a$13) for (; u$14 < o$9 && (i$18 = r$12.charAt(u$14), !!x0$1(i$18));) F$4 += i$18, u$14++;
				if (i$18 = r$12.charAt(u$14), i$18 === ut$4) {
					for (d$14 = "", F$4 += i$18, u$14++; u$14 < o$9 && (i$18 = r$12.charAt(u$14), !(i$18 === ut$4 || i$18 === ot$6));) i$18 === at$4 && (d$14 += at$4, i$18 = r$12.charAt(++u$14)), d$14 += i$18, u$14++;
					i$18 = r$12.charAt(u$14), i$18 === ot$6 ? (f$3 = d$14 ? wn$4 : q0$1, F$4 += d$14 + i$18, u$14++) : d$14 = "", s$8 += F$4, F$4 = "";
				} else {
					if (!p$2) return;
					d$14 = p$2;
				}
				if (!(f$3 !== wn$4 && A$3)) return s$8 = l$10 + s$8, c$3 === xn$3 && n$8.inLink ? null : t$13 ? !0 : (D$4 = e$4.now(), D$4.column += l$10.length, D$4.offset += l$10.length, d$14 = f$3 === wn$4 ? d$14 : p$2, h$3 = {
					type: c$3 + "Reference",
					identifier: k0(d$14),
					label: d$14,
					referenceType: f$3
				}, c$3 === xn$3 ? (m$11 = n$8.enterLink(), h$3.children = n$8.tokenizeInline(p$2, D$4), m$11()) : h$3.alt = n$8.decode.raw(n$8.unescape(p$2), D$4) || null, e$4(s$8)(h$3));
			}
		}
	}
});
var ks = C$2((EC, ws$2) => {
	ws$2.exports = S0$1;
	function S0$1(e$4, r$12) {
		var t$13 = e$4.indexOf("**", r$12), n$8 = e$4.indexOf("__", r$12);
		return n$8 === -1 ? t$13 : t$13 === -1 || n$8 < t$13 ? n$8 : t$13;
	}
});
var _s$1 = C$2((vC, qs$3) => {
	var P0$1 = Ne$2(), Bs$4 = oe$3(), O0$1 = ks();
	qs$3.exports = Ts$3;
	Ts$3.locator = O0$1;
	var L0$1 = "\\", I0$1 = "*", R0$1 = "_";
	function Ts$3(e$4, r$12, t$13) {
		var n$8 = this, a$13 = 0, i$18 = r$12.charAt(a$13), u$14, o$9, s$8, l$10, c$3, f$3, p$2;
		if (!(i$18 !== I0$1 && i$18 !== R0$1 || r$12.charAt(++a$13) !== i$18) && (o$9 = n$8.options.pedantic, s$8 = i$18, c$3 = s$8 + s$8, f$3 = r$12.length, a$13++, l$10 = "", i$18 = "", !(o$9 && Bs$4(r$12.charAt(a$13))))) for (; a$13 < f$3;) {
			if (p$2 = i$18, i$18 = r$12.charAt(a$13), i$18 === s$8 && r$12.charAt(a$13 + 1) === s$8 && (!o$9 || !Bs$4(p$2)) && (i$18 = r$12.charAt(a$13 + 2), i$18 !== s$8)) return P0$1(l$10) ? t$13 ? !0 : (u$14 = e$4.now(), u$14.column += 2, u$14.offset += 2, e$4(c$3 + l$10 + c$3)({
				type: "strong",
				children: n$8.tokenizeInline(l$10, u$14)
			})) : void 0;
			!o$9 && i$18 === L0$1 && (l$10 += i$18, i$18 = r$12.charAt(++a$13)), l$10 += i$18, a$13++;
		}
	}
});
var Ps$1 = C$2((CC, Ss$2) => {
	Ss$2.exports = U0$1;
	var N0$1 = String.fromCharCode, M0$1 = /\w/;
	function U0$1(e$4) {
		return M0$1.test(typeof e$4 == "number" ? N0$1(e$4) : e$4.charAt(0));
	}
});
var Ls = C$2((bC, Os$2) => {
	Os$2.exports = z0$1;
	function z0$1(e$4, r$12) {
		var t$13 = e$4.indexOf("*", r$12), n$8 = e$4.indexOf("_", r$12);
		return n$8 === -1 ? t$13 : t$13 === -1 || n$8 < t$13 ? n$8 : t$13;
	}
});
var Us$2 = C$2((AC, Ms$3) => {
	var G0$1 = Ne$2(), Y0$1 = Ps$1(), Is$3 = oe$3(), $0 = Ls();
	Ms$3.exports = Ns$1;
	Ns$1.locator = $0;
	var V0$1 = "*", Rs$3 = "_", j0$1 = "\\";
	function Ns$1(e$4, r$12, t$13) {
		var n$8 = this, a$13 = 0, i$18 = r$12.charAt(a$13), u$14, o$9, s$8, l$10, c$3, f$3, p$2;
		if (!(i$18 !== V0$1 && i$18 !== Rs$3) && (o$9 = n$8.options.pedantic, c$3 = i$18, s$8 = i$18, f$3 = r$12.length, a$13++, l$10 = "", i$18 = "", !(o$9 && Is$3(r$12.charAt(a$13))))) for (; a$13 < f$3;) {
			if (p$2 = i$18, i$18 = r$12.charAt(a$13), i$18 === s$8 && (!o$9 || !Is$3(p$2))) {
				if (i$18 = r$12.charAt(++a$13), i$18 !== s$8) {
					if (!G0$1(l$10) || p$2 === s$8) return;
					if (!o$9 && s$8 === Rs$3 && Y0$1(i$18)) {
						l$10 += s$8;
						continue;
					}
					return t$13 ? !0 : (u$14 = e$4.now(), u$14.column++, u$14.offset++, e$4(c$3 + l$10 + s$8)({
						type: "emphasis",
						children: n$8.tokenizeInline(l$10, u$14)
					}));
				}
				l$10 += s$8;
			}
			!o$9 && i$18 === j0$1 && (l$10 += i$18, i$18 = r$12.charAt(++a$13)), l$10 += i$18, a$13++;
		}
	}
});
var Gs$1 = C$2((yC, zs$4) => {
	zs$4.exports = W0$1;
	function W0$1(e$4, r$12) {
		return e$4.indexOf("~~", r$12);
	}
});
var Ws$1 = C$2((xC, js$4) => {
	var Ys$3 = oe$3(), H0 = Gs$1();
	js$4.exports = Vs$4;
	Vs$4.locator = H0;
	var st$5 = "~", $s$2 = "~~";
	function Vs$4(e$4, r$12, t$13) {
		var n$8 = this, a$13 = "", i$18 = "", u$14 = "", o$9 = "", s$8, l$10, c$3;
		if (!(!n$8.options.gfm || r$12.charAt(0) !== st$5 || r$12.charAt(1) !== st$5 || Ys$3(r$12.charAt(2)))) for (s$8 = 1, l$10 = r$12.length, c$3 = e$4.now(), c$3.column += 2, c$3.offset += 2; ++s$8 < l$10;) {
			if (a$13 = r$12.charAt(s$8), a$13 === st$5 && i$18 === st$5 && (!u$14 || !Ys$3(u$14))) return t$13 ? !0 : e$4($s$2 + o$9 + $s$2)({
				type: "delete",
				children: n$8.tokenizeInline(o$9, c$3)
			});
			o$9 += i$18, u$14 = i$18, i$18 = a$13;
		}
	}
});
var Ks$1 = C$2((wC, Hs$4) => {
	Hs$4.exports = K0;
	function K0(e$4, r$12) {
		return e$4.indexOf("`", r$12);
	}
});
var Qs$1 = C$2((kC, Js$3) => {
	var X0 = Ks$1();
	Js$3.exports = Xs$5;
	Xs$5.locator = X0;
	var kn$4 = 10, Bn$5 = 32, Tn$5 = 96;
	function Xs$5(e$4, r$12, t$13) {
		for (var n$8 = r$12.length, a$13 = 0, i$18, u$14, o$9, s$8, l$10, c$3; a$13 < n$8 && r$12.charCodeAt(a$13) === Tn$5;) a$13++;
		if (!(a$13 === 0 || a$13 === n$8)) {
			for (i$18 = a$13, l$10 = r$12.charCodeAt(a$13); a$13 < n$8;) {
				if (s$8 = l$10, l$10 = r$12.charCodeAt(a$13 + 1), s$8 === Tn$5) {
					if (u$14 === void 0 && (u$14 = a$13), o$9 = a$13 + 1, l$10 !== Tn$5 && o$9 - u$14 === i$18) {
						c$3 = !0;
						break;
					}
				} else u$14 !== void 0 && (u$14 = void 0, o$9 = void 0);
				a$13++;
			}
			if (c$3) {
				if (t$13) return !0;
				if (a$13 = i$18, n$8 = u$14, s$8 = r$12.charCodeAt(a$13), l$10 = r$12.charCodeAt(n$8 - 1), c$3 = !1, n$8 - a$13 > 2 && (s$8 === Bn$5 || s$8 === kn$4) && (l$10 === Bn$5 || l$10 === kn$4)) {
					for (a$13++, n$8--; a$13 < n$8;) {
						if (s$8 = r$12.charCodeAt(a$13), s$8 !== Bn$5 && s$8 !== kn$4) {
							c$3 = !0;
							break;
						}
						a$13++;
					}
					c$3 === !0 && (i$18++, u$14--);
				}
				return e$4(r$12.slice(0, o$9))({
					type: "inlineCode",
					value: r$12.slice(i$18, u$14)
				});
			}
		}
	}
});
var ec$2 = C$2((BC, Zs$5) => {
	Zs$5.exports = J0$1;
	function J0$1(e$4, r$12) {
		for (var t$13 = e$4.indexOf(`
`, r$12); t$13 > r$12 && e$4.charAt(t$13 - 1) === " ";) t$13--;
		return t$13;
	}
});
var nc$2 = C$2((TC, tc$3) => {
	var Q0 = ec$2();
	tc$3.exports = rc$3;
	rc$3.locator = Q0;
	var Z0 = " ", em$2 = `
`, rm$2 = 2;
	function rc$3(e$4, r$12, t$13) {
		for (var n$8 = r$12.length, a$13 = -1, i$18 = "", u$14; ++a$13 < n$8;) {
			if (u$14 = r$12.charAt(a$13), u$14 === em$2) return a$13 < rm$2 ? void 0 : t$13 ? !0 : (i$18 += u$14, e$4(i$18)({ type: "break" }));
			if (u$14 !== Z0) return;
			i$18 += u$14;
		}
	}
});
var uc$1 = C$2((qC, ic$2) => {
	ic$2.exports = tm$2;
	function tm$2(e$4, r$12, t$13) {
		var n$8 = this, a$13, i$18, u$14, o$9, s$8, l$10, c$3, f$3, p$2, d$14;
		if (t$13) return !0;
		for (a$13 = n$8.inlineMethods, o$9 = a$13.length, i$18 = n$8.inlineTokenizers, u$14 = -1, p$2 = r$12.length; ++u$14 < o$9;) f$3 = a$13[u$14], !(f$3 === "text" || !i$18[f$3]) && (c$3 = i$18[f$3].locator, c$3 || e$4.file.fail("Missing locator: `" + f$3 + "`"), l$10 = c$3.call(n$8, r$12, 1), l$10 !== -1 && l$10 < p$2 && (p$2 = l$10));
		s$8 = r$12.slice(0, p$2), d$14 = e$4.now(), n$8.decode(s$8, d$14, D$4);
		function D$4(h$3, m$11, F$4) {
			e$4(F$4 || h$3)({
				type: "text",
				value: h$3
			});
		}
	}
});
var cc$1 = C$2((_C, sc$3) => {
	var nm$2 = Ie$4(), ct$4 = xu$2(), im$2 = ku$1(), um$2 = Tu$1(), am$2 = na$1(), qn$5 = aa$1();
	sc$3.exports = ac$2;
	function ac$2(e$4, r$12) {
		this.file = r$12, this.offset = {}, this.options = nm$2(this.options), this.setOptions({}), this.inList = !1, this.inBlock = !1, this.inLink = !1, this.atStart = !0, this.toOffset = im$2(r$12).toOffset, this.unescape = um$2(this, "escape"), this.decode = am$2(this);
	}
	var M$2 = ac$2.prototype;
	M$2.setOptions = ha$1();
	M$2.parse = qa$2();
	M$2.options = jt$2();
	M$2.exitStart = ct$4("atStart", !0);
	M$2.enterList = ct$4("inList", !1);
	M$2.enterLink = ct$4("inLink", !1);
	M$2.enterBlock = ct$4("inBlock", !1);
	M$2.interruptParagraph = [
		["thematicBreak"],
		["list"],
		["atxHeading"],
		["fencedCode"],
		["blockquote"],
		["html"],
		["setextHeading", { commonmark: !1 }],
		["definition", { commonmark: !1 }]
	];
	M$2.interruptList = [
		["atxHeading", { pedantic: !1 }],
		["fencedCode", { pedantic: !1 }],
		["thematicBreak", { pedantic: !1 }],
		["definition", { commonmark: !1 }]
	];
	M$2.interruptBlockquote = [
		["indentedCode", { commonmark: !0 }],
		["fencedCode", { commonmark: !0 }],
		["atxHeading", { commonmark: !0 }],
		["setextHeading", { commonmark: !0 }],
		["thematicBreak", { commonmark: !0 }],
		["html", { commonmark: !0 }],
		["list", { commonmark: !0 }],
		["definition", { commonmark: !1 }]
	];
	M$2.blockTokenizers = {
		blankLine: Sa(),
		indentedCode: Ra$2(),
		fencedCode: Ua$3(),
		blockquote: ja$2(),
		atxHeading: Ka$3(),
		thematicBreak: Qa$2(),
		list: co$2(),
		setextHeading: po$2(),
		html: vo$2(),
		definition: To$1(),
		table: So$2(),
		paragraph: Lo()
	};
	M$2.inlineTokenizers = {
		escape: zo$1(),
		autoLink: Wo$1(),
		url: ns$2(),
		email: fs(),
		html: hs(),
		link: bs$1(),
		reference: xs(),
		strong: _s$1(),
		emphasis: Us$2(),
		deletion: Ws$1(),
		code: Qs$1(),
		break: nc$2(),
		text: uc$1()
	};
	M$2.blockMethods = oc$2(M$2.blockTokenizers);
	M$2.inlineMethods = oc$2(M$2.inlineTokenizers);
	M$2.tokenizeBlock = qn$5("block");
	M$2.tokenizeInline = qn$5("inline");
	M$2.tokenizeFactory = qn$5;
	function oc$2(e$4) {
		var r$12 = [], t$13;
		for (t$13 in e$4) r$12.push(t$13);
		return r$12;
	}
});
var pc$1 = C$2((SC, Dc$1) => {
	var om$2 = Au$2(), sm$2 = Ie$4(), lc$2 = cc$1();
	Dc$1.exports = fc$2;
	fc$2.Parser = lc$2;
	function fc$2(e$4) {
		var r$12 = this.data("settings"), t$13 = om$2(lc$2);
		t$13.prototype.options = sm$2(t$13.prototype.options, r$12, e$4), this.Parser = t$13;
	}
});
var dc$1 = C$2((PC, hc$2) => {
	hc$2.exports = cm$2;
	function cm$2(e$4) {
		if (e$4) throw e$4;
	}
});
var _n$2 = C$2((OC, mc$2) => {
	mc$2.exports = function(r$12) {
		return r$12 != null && r$12.constructor != null && typeof r$12.constructor.isBuffer == "function" && r$12.constructor.isBuffer(r$12);
	};
});
var xc$1 = C$2((LC, yc$2) => {
	var lt$3 = Object.prototype.hasOwnProperty, Ac$1 = Object.prototype.toString, Fc$1 = Object.defineProperty, gc$2 = Object.getOwnPropertyDescriptor, Ec$2 = function(r$12) {
		return typeof Array.isArray == "function" ? Array.isArray(r$12) : Ac$1.call(r$12) === "[object Array]";
	}, vc$2 = function(r$12) {
		if (!r$12 || Ac$1.call(r$12) !== "[object Object]") return !1;
		var t$13 = lt$3.call(r$12, "constructor"), n$8 = r$12.constructor && r$12.constructor.prototype && lt$3.call(r$12.constructor.prototype, "isPrototypeOf");
		if (r$12.constructor && !t$13 && !n$8) return !1;
		var a$13;
		for (a$13 in r$12);
		return typeof a$13 > "u" || lt$3.call(r$12, a$13);
	}, Cc$1 = function(r$12, t$13) {
		Fc$1 && t$13.name === "__proto__" ? Fc$1(r$12, t$13.name, {
			enumerable: !0,
			configurable: !0,
			value: t$13.newValue,
			writable: !0
		}) : r$12[t$13.name] = t$13.newValue;
	}, bc$2 = function(r$12, t$13) {
		if (t$13 === "__proto__") if (lt$3.call(r$12, t$13)) {
			if (gc$2) return gc$2(r$12, t$13).value;
		} else return;
		return r$12[t$13];
	};
	yc$2.exports = function e$4() {
		var r$12, t$13, n$8, a$13, i$18, u$14, o$9 = arguments[0], s$8 = 1, l$10 = arguments.length, c$3 = !1;
		for (typeof o$9 == "boolean" && (c$3 = o$9, o$9 = arguments[1] || {}, s$8 = 2), (o$9 == null || typeof o$9 != "object" && typeof o$9 != "function") && (o$9 = {}); s$8 < l$10; ++s$8) if (r$12 = arguments[s$8], r$12 != null) for (t$13 in r$12) n$8 = bc$2(o$9, t$13), a$13 = bc$2(r$12, t$13), o$9 !== a$13 && (c$3 && a$13 && (vc$2(a$13) || (i$18 = Ec$2(a$13))) ? (i$18 ? (i$18 = !1, u$14 = n$8 && Ec$2(n$8) ? n$8 : []) : u$14 = n$8 && vc$2(n$8) ? n$8 : {}, Cc$1(o$9, {
			name: t$13,
			newValue: e$4(c$3, u$14, a$13)
		})) : typeof a$13 < "u" && Cc$1(o$9, {
			name: t$13,
			newValue: a$13
		}));
		return o$9;
	};
});
var kc$1 = C$2((IC, wc$2) => {
	wc$2.exports = (e$4) => {
		if (Object.prototype.toString.call(e$4) !== "[object Object]") return !1;
		let r$12 = Object.getPrototypeOf(e$4);
		return r$12 === null || r$12 === Object.prototype;
	};
});
var Tc = C$2((RC, Bc$1) => {
	var lm$2 = [].slice;
	Bc$1.exports = fm$2;
	function fm$2(e$4, r$12) {
		var t$13;
		return n$8;
		function n$8() {
			var u$14 = lm$2.call(arguments, 0), o$9 = e$4.length > u$14.length, s$8;
			o$9 && u$14.push(a$13);
			try {
				s$8 = e$4.apply(null, u$14);
			} catch (l$10) {
				if (o$9 && t$13) throw l$10;
				return a$13(l$10);
			}
			o$9 || (s$8 && typeof s$8.then == "function" ? s$8.then(i$18, a$13) : s$8 instanceof Error ? a$13(s$8) : i$18(s$8));
		}
		function a$13() {
			t$13 || (t$13 = !0, r$12.apply(null, arguments));
		}
		function i$18(u$14) {
			a$13(null, u$14);
		}
	}
});
var Oc = C$2((NC, Pc$1) => {
	var _c$2 = Tc();
	Pc$1.exports = Sc$1;
	Sc$1.wrap = _c$2;
	var qc$1 = [].slice;
	function Sc$1() {
		var e$4 = [], r$12 = {};
		return r$12.run = t$13, r$12.use = n$8, r$12;
		function t$13() {
			var a$13 = -1, i$18 = qc$1.call(arguments, 0, -1), u$14 = arguments[arguments.length - 1];
			if (typeof u$14 != "function") throw new Error("Expected function as last argument, not " + u$14);
			o$9.apply(null, [null].concat(i$18));
			function o$9(s$8) {
				var l$10 = e$4[++a$13], c$3 = qc$1.call(arguments, 0), f$3 = c$3.slice(1), p$2 = i$18.length, d$14 = -1;
				if (s$8) {
					u$14(s$8);
					return;
				}
				for (; ++d$14 < p$2;) (f$3[d$14] === null || f$3[d$14] === void 0) && (f$3[d$14] = i$18[d$14]);
				i$18 = f$3, l$10 ? _c$2(l$10, o$9).apply(null, i$18) : u$14.apply(null, [null].concat(i$18));
			}
		}
		function n$8(a$13) {
			if (typeof a$13 != "function") throw new Error("Expected `fn` to be a function, not " + a$13);
			return e$4.push(a$13), r$12;
		}
	}
});
var Nc = C$2((MC, Rc$1) => {
	var rr$5 = {}.hasOwnProperty;
	Rc$1.exports = Dm$1;
	function Dm$1(e$4) {
		return !e$4 || typeof e$4 != "object" ? "" : rr$5.call(e$4, "position") || rr$5.call(e$4, "type") ? Lc$1(e$4.position) : rr$5.call(e$4, "start") || rr$5.call(e$4, "end") ? Lc$1(e$4) : rr$5.call(e$4, "line") || rr$5.call(e$4, "column") ? Sn$5(e$4) : "";
	}
	function Sn$5(e$4) {
		return (!e$4 || typeof e$4 != "object") && (e$4 = {}), Ic$1(e$4.line) + ":" + Ic$1(e$4.column);
	}
	function Lc$1(e$4) {
		return (!e$4 || typeof e$4 != "object") && (e$4 = {}), Sn$5(e$4.start) + "-" + Sn$5(e$4.end);
	}
	function Ic$1(e$4) {
		return e$4 && typeof e$4 == "number" ? e$4 : 1;
	}
});
var zc = C$2((UC, Uc$1) => {
	var pm$2 = Nc();
	Uc$1.exports = Pn$5;
	function Mc$1() {}
	Mc$1.prototype = Error.prototype;
	Pn$5.prototype = new Mc$1();
	var ke$6 = Pn$5.prototype;
	ke$6.file = "";
	ke$6.name = "";
	ke$6.reason = "";
	ke$6.message = "";
	ke$6.stack = "";
	ke$6.fatal = null;
	ke$6.column = null;
	ke$6.line = null;
	function Pn$5(e$4, r$12, t$13) {
		var n$8, a$13, i$18;
		typeof r$12 == "string" && (t$13 = r$12, r$12 = null), n$8 = hm$1(t$13), a$13 = pm$2(r$12) || "1:1", i$18 = {
			start: {
				line: null,
				column: null
			},
			end: {
				line: null,
				column: null
			}
		}, r$12 && r$12.position && (r$12 = r$12.position), r$12 && (r$12.start ? (i$18 = r$12, r$12 = r$12.start) : i$18.start = r$12), e$4.stack && (this.stack = e$4.stack, e$4 = e$4.message), this.message = e$4, this.name = a$13, this.reason = e$4, this.line = r$12 ? r$12.line : null, this.column = r$12 ? r$12.column : null, this.location = i$18, this.source = n$8[0], this.ruleId = n$8[1];
	}
	function hm$1(e$4) {
		var r$12 = [null, null], t$13;
		return typeof e$4 == "string" && (t$13 = e$4.indexOf(":"), t$13 === -1 ? r$12[1] = e$4 : (r$12[0] = e$4.slice(0, t$13), r$12[1] = e$4.slice(t$13 + 1))), r$12;
	}
});
var Gc = C$2((tr$4) => {
	tr$4.basename = dm$2;
	tr$4.dirname = mm$2;
	tr$4.extname = Fm$2;
	tr$4.join = gm$1;
	tr$4.sep = "/";
	function dm$2(e$4, r$12) {
		var t$13 = 0, n$8 = -1, a$13, i$18, u$14, o$9;
		if (r$12 !== void 0 && typeof r$12 != "string") throw new TypeError("\"ext\" argument must be a string");
		if (xr$4(e$4), a$13 = e$4.length, r$12 === void 0 || !r$12.length || r$12.length > e$4.length) {
			for (; a$13--;) if (e$4.charCodeAt(a$13) === 47) {
				if (u$14) {
					t$13 = a$13 + 1;
					break;
				}
			} else n$8 < 0 && (u$14 = !0, n$8 = a$13 + 1);
			return n$8 < 0 ? "" : e$4.slice(t$13, n$8);
		}
		if (r$12 === e$4) return "";
		for (i$18 = -1, o$9 = r$12.length - 1; a$13--;) if (e$4.charCodeAt(a$13) === 47) {
			if (u$14) {
				t$13 = a$13 + 1;
				break;
			}
		} else i$18 < 0 && (u$14 = !0, i$18 = a$13 + 1), o$9 > -1 && (e$4.charCodeAt(a$13) === r$12.charCodeAt(o$9--) ? o$9 < 0 && (n$8 = a$13) : (o$9 = -1, n$8 = i$18));
		return t$13 === n$8 ? n$8 = i$18 : n$8 < 0 && (n$8 = e$4.length), e$4.slice(t$13, n$8);
	}
	function mm$2(e$4) {
		var r$12, t$13, n$8;
		if (xr$4(e$4), !e$4.length) return ".";
		for (r$12 = -1, n$8 = e$4.length; --n$8;) if (e$4.charCodeAt(n$8) === 47) {
			if (t$13) {
				r$12 = n$8;
				break;
			}
		} else t$13 || (t$13 = !0);
		return r$12 < 0 ? e$4.charCodeAt(0) === 47 ? "/" : "." : r$12 === 1 && e$4.charCodeAt(0) === 47 ? "//" : e$4.slice(0, r$12);
	}
	function Fm$2(e$4) {
		var r$12 = -1, t$13 = 0, n$8 = -1, a$13 = 0, i$18, u$14, o$9;
		for (xr$4(e$4), o$9 = e$4.length; o$9--;) {
			if (u$14 = e$4.charCodeAt(o$9), u$14 === 47) {
				if (i$18) {
					t$13 = o$9 + 1;
					break;
				}
				continue;
			}
			n$8 < 0 && (i$18 = !0, n$8 = o$9 + 1), u$14 === 46 ? r$12 < 0 ? r$12 = o$9 : a$13 !== 1 && (a$13 = 1) : r$12 > -1 && (a$13 = -1);
		}
		return r$12 < 0 || n$8 < 0 || a$13 === 0 || a$13 === 1 && r$12 === n$8 - 1 && r$12 === t$13 + 1 ? "" : e$4.slice(r$12, n$8);
	}
	function gm$1() {
		for (var e$4 = -1, r$12; ++e$4 < arguments.length;) xr$4(arguments[e$4]), arguments[e$4] && (r$12 = r$12 === void 0 ? arguments[e$4] : r$12 + "/" + arguments[e$4]);
		return r$12 === void 0 ? "." : Em$2(r$12);
	}
	function Em$2(e$4) {
		var r$12, t$13;
		return xr$4(e$4), r$12 = e$4.charCodeAt(0) === 47, t$13 = vm$1(e$4, !r$12), !t$13.length && !r$12 && (t$13 = "."), t$13.length && e$4.charCodeAt(e$4.length - 1) === 47 && (t$13 += "/"), r$12 ? "/" + t$13 : t$13;
	}
	function vm$1(e$4, r$12) {
		for (var t$13 = "", n$8 = 0, a$13 = -1, i$18 = 0, u$14 = -1, o$9, s$8; ++u$14 <= e$4.length;) {
			if (u$14 < e$4.length) o$9 = e$4.charCodeAt(u$14);
			else {
				if (o$9 === 47) break;
				o$9 = 47;
			}
			if (o$9 === 47) {
				if (!(a$13 === u$14 - 1 || i$18 === 1)) if (a$13 !== u$14 - 1 && i$18 === 2) {
					if (t$13.length < 2 || n$8 !== 2 || t$13.charCodeAt(t$13.length - 1) !== 46 || t$13.charCodeAt(t$13.length - 2) !== 46) {
						if (t$13.length > 2) {
							if (s$8 = t$13.lastIndexOf("/"), s$8 !== t$13.length - 1) {
								s$8 < 0 ? (t$13 = "", n$8 = 0) : (t$13 = t$13.slice(0, s$8), n$8 = t$13.length - 1 - t$13.lastIndexOf("/")), a$13 = u$14, i$18 = 0;
								continue;
							}
						} else if (t$13.length) {
							t$13 = "", n$8 = 0, a$13 = u$14, i$18 = 0;
							continue;
						}
					}
					r$12 && (t$13 = t$13.length ? t$13 + "/.." : "..", n$8 = 2);
				} else t$13.length ? t$13 += "/" + e$4.slice(a$13 + 1, u$14) : t$13 = e$4.slice(a$13 + 1, u$14), n$8 = u$14 - a$13 - 1;
				a$13 = u$14, i$18 = 0;
			} else o$9 === 46 && i$18 > -1 ? i$18++ : i$18 = -1;
		}
		return t$13;
	}
	function xr$4(e$4) {
		if (typeof e$4 != "string") throw new TypeError("Path must be a string. Received " + JSON.stringify(e$4));
	}
});
var $c = C$2((Yc$1) => {
	Yc$1.cwd = Cm$2;
	function Cm$2() {
		return "/";
	}
});
var Wc = C$2((YC, jc$1) => {
	var se$3 = Gc(), bm$1 = $c(), Am$2 = _n$2();
	jc$1.exports = ge$6;
	var ym$3 = {}.hasOwnProperty, On$5 = [
		"history",
		"path",
		"basename",
		"stem",
		"extname",
		"dirname"
	];
	ge$6.prototype.toString = Lm$1;
	Object.defineProperty(ge$6.prototype, "path", {
		get: xm$1,
		set: wm$1
	});
	Object.defineProperty(ge$6.prototype, "dirname", {
		get: km$1,
		set: Bm$1
	});
	Object.defineProperty(ge$6.prototype, "basename", {
		get: Tm$2,
		set: qm$1
	});
	Object.defineProperty(ge$6.prototype, "extname", {
		get: _m$1,
		set: Sm$1
	});
	Object.defineProperty(ge$6.prototype, "stem", {
		get: Pm$1,
		set: Om$1
	});
	function ge$6(e$4) {
		var r$12, t$13;
		if (!e$4) e$4 = {};
		else if (typeof e$4 == "string" || Am$2(e$4)) e$4 = { contents: e$4 };
		else if ("message" in e$4 && "messages" in e$4) return e$4;
		if (!(this instanceof ge$6)) return new ge$6(e$4);
		for (this.data = {}, this.messages = [], this.history = [], this.cwd = bm$1.cwd(), t$13 = -1; ++t$13 < On$5.length;) r$12 = On$5[t$13], ym$3.call(e$4, r$12) && (this[r$12] = e$4[r$12]);
		for (r$12 in e$4) On$5.indexOf(r$12) < 0 && (this[r$12] = e$4[r$12]);
	}
	function xm$1() {
		return this.history[this.history.length - 1];
	}
	function wm$1(e$4) {
		In$5(e$4, "path"), this.path !== e$4 && this.history.push(e$4);
	}
	function km$1() {
		return typeof this.path == "string" ? se$3.dirname(this.path) : void 0;
	}
	function Bm$1(e$4) {
		Vc$1(this.path, "dirname"), this.path = se$3.join(e$4 || "", this.basename);
	}
	function Tm$2() {
		return typeof this.path == "string" ? se$3.basename(this.path) : void 0;
	}
	function qm$1(e$4) {
		In$5(e$4, "basename"), Ln$5(e$4, "basename"), this.path = se$3.join(this.dirname || "", e$4);
	}
	function _m$1() {
		return typeof this.path == "string" ? se$3.extname(this.path) : void 0;
	}
	function Sm$1(e$4) {
		if (Ln$5(e$4, "extname"), Vc$1(this.path, "extname"), e$4) {
			if (e$4.charCodeAt(0) !== 46) throw new Error("`extname` must start with `.`");
			if (e$4.indexOf(".", 1) > -1) throw new Error("`extname` cannot contain multiple dots");
		}
		this.path = se$3.join(this.dirname, this.stem + (e$4 || ""));
	}
	function Pm$1() {
		return typeof this.path == "string" ? se$3.basename(this.path, this.extname) : void 0;
	}
	function Om$1(e$4) {
		In$5(e$4, "stem"), Ln$5(e$4, "stem"), this.path = se$3.join(this.dirname || "", e$4 + (this.extname || ""));
	}
	function Lm$1(e$4) {
		return (this.contents || "").toString(e$4);
	}
	function Ln$5(e$4, r$12) {
		if (e$4 && e$4.indexOf(se$3.sep) > -1) throw new Error("`" + r$12 + "` cannot be a path: did not expect `" + se$3.sep + "`");
	}
	function In$5(e$4, r$12) {
		if (!e$4) throw new Error("`" + r$12 + "` cannot be empty");
	}
	function Vc$1(e$4, r$12) {
		if (!e$4) throw new Error("Setting `" + r$12 + "` requires `path` to be set too");
	}
});
var Kc = C$2(($C, Hc$1) => {
	var Im$1 = zc(), ft$4 = Wc();
	Hc$1.exports = ft$4;
	ft$4.prototype.message = Rm$1;
	ft$4.prototype.info = Mm$2;
	ft$4.prototype.fail = Nm$1;
	function Rm$1(e$4, r$12, t$13) {
		var n$8 = new Im$1(e$4, r$12, t$13);
		return this.path && (n$8.name = this.path + ":" + n$8.name, n$8.file = this.path), n$8.fatal = !1, this.messages.push(n$8), n$8;
	}
	function Nm$1() {
		var e$4 = this.message.apply(this, arguments);
		throw e$4.fatal = !0, e$4;
	}
	function Mm$2() {
		var e$4 = this.message.apply(this, arguments);
		return e$4.fatal = null, e$4;
	}
});
var Jc = C$2((VC, Xc$1) => {
	Xc$1.exports = Kc();
});
var al$2 = C$2((jC, ul$3) => {
	var Qc$1 = dc$1(), Um$1 = _n$2(), Dt$6 = xc$1(), Zc$1 = kc$1(), nl$3 = Oc(), wr$4 = Jc();
	ul$3.exports = il$3().freeze();
	var zm$1 = [].slice, Gm$1 = {}.hasOwnProperty, Ym$1 = nl$3().use($m$1).use(Vm$1).use(jm$1);
	function $m$1(e$4, r$12) {
		r$12.tree = e$4.parse(r$12.file);
	}
	function Vm$1(e$4, r$12, t$13) {
		e$4.run(r$12.tree, r$12.file, n$8);
		function n$8(a$13, i$18, u$14) {
			a$13 ? t$13(a$13) : (r$12.tree = i$18, r$12.file = u$14, t$13());
		}
	}
	function jm$1(e$4, r$12) {
		var t$13 = e$4.stringify(r$12.tree, r$12.file);
		t$13 == null || (typeof t$13 == "string" || Um$1(t$13) ? ("value" in r$12.file && (r$12.file.value = t$13), r$12.file.contents = t$13) : r$12.file.result = t$13);
	}
	function il$3() {
		var e$4 = [], r$12 = nl$3(), t$13 = {}, n$8 = -1, a$13;
		return i$18.data = o$9, i$18.freeze = u$14, i$18.attachers = e$4, i$18.use = s$8, i$18.parse = c$3, i$18.stringify = d$14, i$18.run = f$3, i$18.runSync = p$2, i$18.process = D$4, i$18.processSync = h$3, i$18;
		function i$18() {
			for (var m$11 = il$3(), F$4 = -1; ++F$4 < e$4.length;) m$11.use.apply(null, e$4[F$4]);
			return m$11.data(Dt$6(!0, {}, t$13)), m$11;
		}
		function u$14() {
			var m$11, F$4;
			if (a$13) return i$18;
			for (; ++n$8 < e$4.length;) m$11 = e$4[n$8], m$11[1] !== !1 && (m$11[1] === !0 && (m$11[1] = void 0), F$4 = m$11[0].apply(i$18, m$11.slice(1)), typeof F$4 == "function" && r$12.use(F$4));
			return a$13 = !0, n$8 = Infinity, i$18;
		}
		function o$9(m$11, F$4) {
			return typeof m$11 == "string" ? arguments.length === 2 ? (Mn$4("data", a$13), t$13[m$11] = F$4, i$18) : Gm$1.call(t$13, m$11) && t$13[m$11] || null : m$11 ? (Mn$4("data", a$13), t$13 = m$11, i$18) : t$13;
		}
		function s$8(m$11) {
			var F$4;
			if (Mn$4("use", a$13), m$11 != null) if (typeof m$11 == "function") b$7.apply(null, arguments);
			else if (typeof m$11 == "object") "length" in m$11 ? B$4(m$11) : A$3(m$11);
			else throw new Error("Expected usable value, not `" + m$11 + "`");
			return F$4 && (t$13.settings = Dt$6(t$13.settings || {}, F$4)), i$18;
			function A$3(g$2) {
				B$4(g$2.plugins), g$2.settings && (F$4 = Dt$6(F$4 || {}, g$2.settings));
			}
			function v$5(g$2) {
				if (typeof g$2 == "function") b$7(g$2);
				else if (typeof g$2 == "object") "length" in g$2 ? b$7.apply(null, g$2) : A$3(g$2);
				else throw new Error("Expected usable value, not `" + g$2 + "`");
			}
			function B$4(g$2) {
				var y$7 = -1;
				if (g$2 != null) if (typeof g$2 == "object" && "length" in g$2) for (; ++y$7 < g$2.length;) v$5(g$2[y$7]);
				else throw new Error("Expected a list of plugins, not `" + g$2 + "`");
			}
			function b$7(g$2, y$7) {
				var x$3 = l$10(g$2);
				x$3 ? (Zc$1(x$3[1]) && Zc$1(y$7) && (y$7 = Dt$6(!0, x$3[1], y$7)), x$3[1] = y$7) : e$4.push(zm$1.call(arguments));
			}
		}
		function l$10(m$11) {
			for (var F$4 = -1; ++F$4 < e$4.length;) if (e$4[F$4][0] === m$11) return e$4[F$4];
		}
		function c$3(m$11) {
			var F$4 = wr$4(m$11), A$3;
			return u$14(), A$3 = i$18.Parser, Rn$4("parse", A$3), el$1(A$3, "parse") ? new A$3(String(F$4), F$4).parse() : A$3(String(F$4), F$4);
		}
		function f$3(m$11, F$4, A$3) {
			if (rl$2(m$11), u$14(), !A$3 && typeof F$4 == "function" && (A$3 = F$4, F$4 = null), !A$3) return new Promise(v$5);
			v$5(null, A$3);
			function v$5(B$4, b$7) {
				r$12.run(m$11, wr$4(F$4), g$2);
				function g$2(y$7, x$3, E$3) {
					x$3 = x$3 || m$11, y$7 ? b$7(y$7) : B$4 ? B$4(x$3) : A$3(null, x$3, E$3);
				}
			}
		}
		function p$2(m$11, F$4) {
			var A$3, v$5;
			return f$3(m$11, F$4, B$4), tl$1("runSync", "run", v$5), A$3;
			function B$4(b$7, g$2) {
				v$5 = !0, A$3 = g$2, Qc$1(b$7);
			}
		}
		function d$14(m$11, F$4) {
			var A$3 = wr$4(F$4), v$5;
			return u$14(), v$5 = i$18.Compiler, Nn$6("stringify", v$5), rl$2(m$11), el$1(v$5, "compile") ? new v$5(m$11, A$3).compile() : v$5(m$11, A$3);
		}
		function D$4(m$11, F$4) {
			if (u$14(), Rn$4("process", i$18.Parser), Nn$6("process", i$18.Compiler), !F$4) return new Promise(A$3);
			A$3(null, F$4);
			function A$3(v$5, B$4) {
				var b$7 = wr$4(m$11);
				Ym$1.run(i$18, { file: b$7 }, g$2);
				function g$2(y$7) {
					y$7 ? B$4(y$7) : v$5 ? v$5(b$7) : F$4(null, b$7);
				}
			}
		}
		function h$3(m$11) {
			var F$4, A$3;
			return u$14(), Rn$4("processSync", i$18.Parser), Nn$6("processSync", i$18.Compiler), F$4 = wr$4(m$11), D$4(F$4, v$5), tl$1("processSync", "process", A$3), F$4;
			function v$5(B$4) {
				A$3 = !0, Qc$1(B$4);
			}
		}
	}
	function el$1(e$4, r$12) {
		return typeof e$4 == "function" && e$4.prototype && (Wm$1(e$4.prototype) || r$12 in e$4.prototype);
	}
	function Wm$1(e$4) {
		var r$12;
		for (r$12 in e$4) return !0;
		return !1;
	}
	function Rn$4(e$4, r$12) {
		if (typeof r$12 != "function") throw new Error("Cannot `" + e$4 + "` without `Parser`");
	}
	function Nn$6(e$4, r$12) {
		if (typeof r$12 != "function") throw new Error("Cannot `" + e$4 + "` without `Compiler`");
	}
	function Mn$4(e$4, r$12) {
		if (r$12) throw new Error("Cannot invoke `" + e$4 + "` on a frozen processor.\nCreate a new processor first, by invoking it: use `processor()` instead of `processor`.");
	}
	function rl$2(e$4) {
		if (!e$4 || typeof e$4.type != "string") throw new Error("Expected node, got `" + e$4 + "`");
	}
	function tl$1(e$4, r$12, t$13) {
		if (!t$13) throw new Error("`" + e$4 + "` finished async. Use `" + r$12 + "` instead");
	}
});
var Gn$3 = {};
$n$2(Gn$3, {
	languages: () => ru$1,
	options: () => tu$2,
	parsers: () => zn$3,
	printers: () => iF
});
var ql$1 = (e$4, r$12, t$13) => {
	if (!(e$4 && r$12 == null)) return Array.isArray(r$12) || typeof r$12 == "string" ? r$12[t$13 < 0 ? r$12.length + t$13 : t$13] : r$12.at(t$13);
}, z$2 = ql$1;
var _l$2 = (e$4, r$12, t$13, n$8) => {
	if (!(e$4 && r$12 == null)) return r$12.replaceAll ? r$12.replaceAll(t$13, n$8) : t$13.global ? r$12.replace(t$13, n$8) : r$12.split(t$13).join(n$8);
}, R$3 = _l$2;
var Zi$2 = Me$2(kr$2(), 1);
function le$3(e$4) {
	if (typeof e$4 != "string") throw new TypeError("Expected a string");
	return e$4.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d");
}
var Y$2 = "string", H$3 = "array", Ce$3 = "cursor", re$2 = "indent", te$3 = "align", fe$1 = "trim", X$3 = "group", J$2 = "fill", K$2 = "if-break", De$3 = "indent-if-break", pe$3 = "line-suffix", he$4 = "line-suffix-boundary", $$1 = "line", de$3 = "label", ne$3 = "break-parent", Br$2 = new Set([
	Ce$3,
	re$2,
	te$3,
	fe$1,
	X$3,
	J$2,
	K$2,
	De$3,
	pe$3,
	he$4,
	$$1,
	de$3,
	ne$3
]);
function Pl$1(e$4) {
	if (typeof e$4 == "string") return Y$2;
	if (Array.isArray(e$4)) return H$3;
	if (!e$4) return;
	let { type: r$12 } = e$4;
	if (Br$2.has(r$12)) return r$12;
}
var G$2 = Pl$1;
var Ol$2 = (e$4) => new Intl.ListFormat("en-US", { type: "disjunction" }).format(e$4);
function Ll$2(e$4) {
	let r$12 = e$4 === null ? "null" : typeof e$4;
	if (r$12 !== "string" && r$12 !== "object") return `Unexpected doc '${r$12}', 
Expected it to be 'string' or 'object'.`;
	if (G$2(e$4)) throw new Error("doc is valid.");
	let t$13 = Object.prototype.toString.call(e$4);
	if (t$13 !== "[object Object]") return `Unexpected doc '${t$13}'.`;
	let n$8 = Ol$2([...Br$2].map((a$13) => `'${a$13}'`));
	return `Unexpected doc.type '${e$4.type}'.
Expected it to be ${n$8}.`;
}
var dt$1 = class extends Error {
	name = "InvalidDocError";
	constructor(r$12) {
		super(Ll$2(r$12)), this.doc = r$12;
	}
}, Te$3 = dt$1;
var Kn$2 = {};
function Il$2(e$4, r$12, t$13, n$8) {
	let a$13 = [e$4];
	for (; a$13.length > 0;) {
		let i$18 = a$13.pop();
		if (i$18 === Kn$2) {
			t$13(a$13.pop());
			continue;
		}
		t$13 && a$13.push(i$18, Kn$2);
		let u$14 = G$2(i$18);
		if (!u$14) throw new Te$3(i$18);
		if ((r$12 == null ? void 0 : r$12(i$18)) !== !1) switch (u$14) {
			case H$3:
			case J$2: {
				let o$9 = u$14 === H$3 ? i$18 : i$18.parts;
				for (let s$8 = o$9.length, l$10 = s$8 - 1; l$10 >= 0; --l$10) a$13.push(o$9[l$10]);
				break;
			}
			case K$2:
				a$13.push(i$18.flatContents, i$18.breakContents);
				break;
			case X$3:
				if (n$8 && i$18.expandedStates) for (let o$9 = i$18.expandedStates.length, s$8 = o$9 - 1; s$8 >= 0; --s$8) a$13.push(i$18.expandedStates[s$8]);
				else a$13.push(i$18.contents);
				break;
			case te$3:
			case re$2:
			case De$3:
			case de$3:
			case pe$3:
				a$13.push(i$18.contents);
				break;
			case Y$2:
			case Ce$3:
			case fe$1:
			case he$4:
			case $$1:
			case ne$3: break;
			default: throw new Te$3(i$18);
		}
	}
}
var mt$2 = Il$2;
function Rl$2(e$4, r$12) {
	if (typeof e$4 == "string") return r$12(e$4);
	let t$13 = /* @__PURE__ */ new Map();
	return n$8(e$4);
	function n$8(i$18) {
		if (t$13.has(i$18)) return t$13.get(i$18);
		let u$14 = a$13(i$18);
		return t$13.set(i$18, u$14), u$14;
	}
	function a$13(i$18) {
		switch (G$2(i$18)) {
			case H$3: return r$12(i$18.map(n$8));
			case J$2: return r$12({
				...i$18,
				parts: i$18.parts.map(n$8)
			});
			case K$2: return r$12({
				...i$18,
				breakContents: n$8(i$18.breakContents),
				flatContents: n$8(i$18.flatContents)
			});
			case X$3: {
				let { expandedStates: u$14, contents: o$9 } = i$18;
				return u$14 ? (u$14 = u$14.map(n$8), o$9 = u$14[0]) : o$9 = n$8(o$9), r$12({
					...i$18,
					contents: o$9,
					expandedStates: u$14
				});
			}
			case te$3:
			case re$2:
			case De$3:
			case de$3:
			case pe$3: return r$12({
				...i$18,
				contents: n$8(i$18.contents)
			});
			case Y$2:
			case Ce$3:
			case fe$1:
			case he$4:
			case $$1:
			case ne$3: return r$12(i$18);
			default: throw new Te$3(i$18);
		}
	}
}
function Xn$2(e$4) {
	if (e$4.length > 0) {
		let r$12 = z$2(!1, e$4, -1);
		!r$12.expandedStates && !r$12.break && (r$12.break = "propagated");
	}
	return null;
}
function Jn$2(e$4) {
	let r$12 = /* @__PURE__ */ new Set(), t$13 = [];
	function n$8(i$18) {
		if (i$18.type === ne$3 && Xn$2(t$13), i$18.type === X$3) {
			if (t$13.push(i$18), r$12.has(i$18)) return !1;
			r$12.add(i$18);
		}
	}
	function a$13(i$18) {
		i$18.type === X$3 && t$13.pop().break && Xn$2(t$13);
	}
	mt$2(e$4, n$8, a$13, !0);
}
function be$2(e$4, r$12 = nr$3) {
	return Rl$2(e$4, (t$13) => typeof t$13 == "string" ? Tr$2(r$12, t$13.split(`
`)) : t$13);
}
var Ft$1 = () => {}, qe$3 = Ft$1, gt$3 = Ft$1, Qn$2 = Ft$1;
function ir$2(e$4) {
	return qe$3(e$4), {
		type: re$2,
		contents: e$4
	};
}
function Ae$3(e$4, r$12) {
	return qe$3(r$12), {
		type: te$3,
		contents: r$12,
		n: e$4
	};
}
function Ue$1(e$4, r$12 = {}) {
	return qe$3(e$4), gt$3(r$12.expandedStates, !0), {
		type: X$3,
		id: r$12.id,
		contents: e$4,
		break: !!r$12.shouldBreak,
		expandedStates: r$12.expandedStates
	};
}
function _e$3(e$4) {
	return Ae$3({ type: "root" }, e$4);
}
function ze$3(e$4) {
	return Qn$2(e$4), {
		type: J$2,
		parts: e$4
	};
}
function Zn$2(e$4, r$12 = "", t$13 = {}) {
	return qe$3(e$4), r$12 !== "" && qe$3(r$12), {
		type: K$2,
		breakContents: e$4,
		flatContents: r$12,
		groupId: t$13.groupId
	};
}
var ur$3 = { type: ne$3 };
var ar$2 = {
	type: $$1,
	hard: !0
}, Nl$2 = {
	type: $$1,
	hard: !0,
	literal: !0
}, qr$2 = { type: $$1 }, _r$2 = {
	type: $$1,
	soft: !0
}, L$2 = [ar$2, ur$3], nr$3 = [Nl$2, ur$3];
function Tr$2(e$4, r$12) {
	qe$3(e$4), gt$3(r$12);
	let t$13 = [];
	for (let n$8 = 0; n$8 < r$12.length; n$8++) n$8 !== 0 && t$13.push(e$4), t$13.push(r$12[n$8]);
	return t$13;
}
function Ml$2(e$4, r$12) {
	let t$13 = e$4.match(new RegExp(`(${le$3(r$12)})+`, "gu"));
	return t$13 === null ? 0 : t$13.reduce((n$8, a$13) => Math.max(n$8, a$13.length / r$12.length), 0);
}
var Sr$2 = Ml$2;
function Ul$2(e$4, r$12) {
	let t$13 = e$4.match(new RegExp(`(${le$3(r$12)})+`, "gu"));
	if (t$13 === null) return 0;
	let n$8 = /* @__PURE__ */ new Map(), a$13 = 0;
	for (let i$18 of t$13) {
		let u$14 = i$18.length / r$12.length;
		n$8.set(u$14, !0), u$14 > a$13 && (a$13 = u$14);
	}
	for (let i$18 = 1; i$18 < a$13; i$18++) if (!n$8.get(i$18)) return i$18;
	return a$13 + 1;
}
var ei$4 = Ul$2;
var Pr$3 = "'", ri$3 = "\"";
function zl$1(e$4, r$12) {
	let t$13 = r$12 === !0 || r$12 === Pr$3 ? Pr$3 : ri$3, n$8 = t$13 === Pr$3 ? ri$3 : Pr$3, a$13 = 0, i$18 = 0;
	for (let u$14 of e$4) u$14 === t$13 ? a$13++ : u$14 === n$8 && i$18++;
	return a$13 > i$18 ? n$8 : t$13;
}
var ti$3 = zl$1;
var Et$1 = class extends Error {
	name = "UnexpectedNodeError";
	constructor(r$12, t$13, n$8 = "type") {
		super(`Unexpected ${t$13} node ${n$8}: ${JSON.stringify(r$12[n$8])}.`), this.node = r$12;
	}
}, ni$3 = Et$1;
var li$2 = Me$2(kr$2(), 1);
function Gl$1(e$4) {
	return (e$4 == null ? void 0 : e$4.type) === "front-matter";
}
var ii$2 = Gl$1;
var ui$3 = ["noformat", "noprettier"], Or$2 = ["format", "prettier"], ai$2 = "format";
var or$2 = 3;
function Yl$1(e$4) {
	let r$12 = e$4.slice(0, or$2);
	if (r$12 !== "---" && r$12 !== "+++") return;
	let t$13 = e$4.indexOf(`
`, or$2);
	if (t$13 === -1) return;
	let n$8 = e$4.slice(or$2, t$13).trim(), a$13 = e$4.indexOf(`
${r$12}`, t$13), i$18 = n$8;
	if (i$18 || (i$18 = r$12 === "+++" ? "toml" : "yaml"), a$13 === -1 && r$12 === "---" && i$18 === "yaml" && (a$13 = e$4.indexOf(`
...`, t$13)), a$13 === -1) return;
	let u$14 = a$13 + 1 + or$2, o$9 = e$4.charAt(u$14 + 1);
	if (!/\s?/u.test(o$9)) return;
	let s$8 = e$4.slice(0, u$14);
	return {
		type: "front-matter",
		language: i$18,
		explicitLanguage: n$8,
		value: e$4.slice(t$13 + 1, a$13),
		startDelimiter: r$12,
		endDelimiter: s$8.slice(-or$2),
		raw: s$8
	};
}
function $l$1(e$4) {
	let r$12 = Yl$1(e$4);
	if (!r$12) return { content: e$4 };
	let { raw: t$13 } = r$12;
	return {
		frontMatter: r$12,
		content: R$3(!1, t$13, /[^\n]/gu, " ") + e$4.slice(t$13.length)
	};
}
var Ge$2 = $l$1;
function Lr$2(e$4, r$12) {
	let t$13 = `@(${r$12.join("|")})`, n$8 = new RegExp([
		`<!--\\s*${t$13}\\s*-->`,
		`\\{\\s*\\/\\*\\s*${t$13}\\s*\\*\\/\\s*\\}`,
		`<!--.*\r?
[\\s\\S]*(^|
)[^\\S
]*${t$13}[^\\S
]*($|
)[\\s\\S]*
.*-->`
	].join("|"), "mu"), a$13 = e$4.match(n$8);
	return (a$13 == null ? void 0 : a$13.index) === 0;
}
var oi$2 = (e$4) => Lr$2(Ge$2(e$4).content.trimStart(), Or$2), si$2 = (e$4) => Lr$2(Ge$2(e$4).content.trimStart(), ui$3), ci$2 = (e$4) => {
	let r$12 = Ge$2(e$4), t$13 = `<!-- @${ai$2} -->`;
	return r$12.frontMatter ? `${r$12.frontMatter.raw}

${t$13}

${r$12.content}` : `${t$13}

${r$12.content}`;
};
var Vl = new Set(["position", "raw"]);
function fi$3(e$4, r$12, t$13) {
	if ((e$4.type === "front-matter" || e$4.type === "code" || e$4.type === "yaml" || e$4.type === "import" || e$4.type === "export" || e$4.type === "jsx") && delete r$12.value, e$4.type === "list" && delete r$12.isAligned, (e$4.type === "list" || e$4.type === "listItem") && delete r$12.spread, e$4.type === "text") return null;
	if (e$4.type === "inlineCode" && (r$12.value = R$3(!1, e$4.value, `
`, " ")), e$4.type === "wikiLink" && (r$12.value = R$3(!1, e$4.value.trim(), /[\t\n]+/gu, " ")), (e$4.type === "definition" || e$4.type === "linkReference" || e$4.type === "imageReference") && (r$12.label = (0, li$2.default)(e$4.label)), (e$4.type === "link" || e$4.type === "image") && e$4.url && e$4.url.includes("(")) for (let n$8 of "<>") r$12.url = R$3(!1, e$4.url, n$8, encodeURIComponent(n$8));
	if ((e$4.type === "definition" || e$4.type === "link" || e$4.type === "image") && e$4.title && (r$12.title = R$3(!1, e$4.title, /\\(?=["')])/gu, "")), (t$13 == null ? void 0 : t$13.type) === "root" && t$13.children.length > 0 && (t$13.children[0] === e$4 || ii$2(t$13.children[0]) && t$13.children[1] === e$4) && e$4.type === "html" && Lr$2(e$4.value, Or$2)) return null;
}
fi$3.ignoredProperties = Vl;
var Di = fi$3;
var pi$2 = /(?:[\u{2c7}\u{2c9}-\u{2cb}\u{2d9}\u{2ea}-\u{2eb}\u{305}\u{323}\u{1100}-\u{11ff}\u{2e80}-\u{2e99}\u{2e9b}-\u{2ef3}\u{2f00}-\u{2fd5}\u{2ff0}-\u{303f}\u{3041}-\u{3096}\u{3099}-\u{30ff}\u{3105}-\u{312f}\u{3131}-\u{318e}\u{3190}-\u{4dbf}\u{4e00}-\u{9fff}\u{a700}-\u{a707}\u{a960}-\u{a97c}\u{ac00}-\u{d7a3}\u{d7b0}-\u{d7c6}\u{d7cb}-\u{d7fb}\u{f900}-\u{fa6d}\u{fa70}-\u{fad9}\u{fe10}-\u{fe1f}\u{fe30}-\u{fe6f}\u{ff00}-\u{ffef}\u{16fe3}\u{1aff0}-\u{1aff3}\u{1aff5}-\u{1affb}\u{1affd}-\u{1affe}\u{1b000}-\u{1b122}\u{1b132}\u{1b150}-\u{1b152}\u{1b155}\u{1b164}-\u{1b167}\u{1f200}\u{1f250}-\u{1f251}\u{20000}-\u{2a6df}\u{2a700}-\u{2b739}\u{2b740}-\u{2b81d}\u{2b820}-\u{2cea1}\u{2ceb0}-\u{2ebe0}\u{2ebf0}-\u{2ee5d}\u{2f800}-\u{2fa1d}\u{30000}-\u{3134a}\u{31350}-\u{323af}])(?:[\u{fe00}-\u{fe0f}\u{e0100}-\u{e01ef}])?/u, Se$2 = /(?:[\u{21}-\u{2f}\u{3a}-\u{40}\u{5b}-\u{60}\u{7b}-\u{7e}]|\p{General_Category=Connector_Punctuation}|\p{General_Category=Dash_Punctuation}|\p{General_Category=Close_Punctuation}|\p{General_Category=Final_Punctuation}|\p{General_Category=Initial_Punctuation}|\p{General_Category=Other_Punctuation}|\p{General_Category=Open_Punctuation})/u;
async function jl$2(e$4, r$12) {
	if (e$4.language === "yaml") {
		let t$13 = e$4.value.trim(), n$8 = t$13 ? await r$12(t$13, { parser: "yaml" }) : "";
		return _e$3([
			e$4.startDelimiter,
			e$4.explicitLanguage,
			L$2,
			n$8,
			n$8 ? L$2 : "",
			e$4.endDelimiter
		]);
	}
}
var hi$3 = jl$2;
var Wl$1 = (e$4, r$12) => {
	if (!(e$4 && r$12 == null)) return r$12.toReversed || !Array.isArray(r$12) ? r$12.toReversed() : [...r$12].reverse();
}, di$3 = Wl$1;
var mi$3, Fi$1, gi$3, Ei$2, vi$3, Hl$1 = ((mi$3 = globalThis.Deno) == null ? void 0 : mi$3.build.os) === "windows" || ((gi$3 = (Fi$1 = globalThis.navigator) == null ? void 0 : Fi$1.platform) == null ? void 0 : gi$3.startsWith("Win")) || ((vi$3 = (Ei$2 = globalThis.process) == null ? void 0 : Ei$2.platform) == null ? void 0 : vi$3.startsWith("win")) || !1;
function Ci$1(e$4) {
	if (e$4 = e$4 instanceof URL ? e$4 : new URL(e$4), e$4.protocol !== "file:") throw new TypeError(`URL must be a file URL: received "${e$4.protocol}"`);
	return e$4;
}
function Kl$1(e$4) {
	return e$4 = Ci$1(e$4), decodeURIComponent(e$4.pathname.replace(/%(?![0-9A-Fa-f]{2})/g, "%25"));
}
function Xl$1(e$4) {
	e$4 = Ci$1(e$4);
	let r$12 = decodeURIComponent(e$4.pathname.replace(/\//g, "\\").replace(/%(?![0-9A-Fa-f]{2})/g, "%25")).replace(/^\\*([A-Za-z]:)(\\|$)/, "$1\\");
	return e$4.hostname !== "" && (r$12 = `\\\\${e$4.hostname}${r$12}`), r$12;
}
function bi$3(e$4) {
	return Hl$1 ? Xl$1(e$4) : Kl$1(e$4);
}
var Ai$1 = bi$3;
var Jl$2 = (e$4) => String(e$4).split(/[/\\]/u).pop();
function yi$3(e$4, r$12) {
	if (!r$12) return;
	let t$13 = Jl$2(r$12).toLowerCase();
	return e$4.find(({ filenames: n$8 }) => n$8 == null ? void 0 : n$8.some((a$13) => a$13.toLowerCase() === t$13)) ?? e$4.find(({ extensions: n$8 }) => n$8 == null ? void 0 : n$8.some((a$13) => t$13.endsWith(a$13)));
}
function Ql$1(e$4, r$12) {
	if (r$12) return e$4.find(({ name: t$13 }) => t$13.toLowerCase() === r$12) ?? e$4.find(({ aliases: t$13 }) => t$13 == null ? void 0 : t$13.includes(r$12)) ?? e$4.find(({ extensions: t$13 }) => t$13 == null ? void 0 : t$13.includes(`.${r$12}`));
}
function xi$3(e$4, r$12) {
	if (r$12) {
		if (String(r$12).startsWith("file:")) try {
			r$12 = Ai$1(r$12);
		} catch {
			return;
		}
		if (typeof r$12 == "string") return e$4.find(({ isSupported: t$13 }) => t$13 == null ? void 0 : t$13({ filepath: r$12 }));
	}
}
function Zl$1(e$4, r$12) {
	let t$13 = di$3(!1, e$4.plugins).flatMap((a$13) => a$13.languages ?? []), n$8 = Ql$1(t$13, r$12.language) ?? yi$3(t$13, r$12.physicalFile) ?? yi$3(t$13, r$12.file) ?? xi$3(t$13, r$12.physicalFile) ?? xi$3(t$13, r$12.file) ?? (r$12.physicalFile, void 0);
	return n$8 == null ? void 0 : n$8.parsers[0];
}
var wi$3 = Zl$1;
var ef$1 = new Proxy(() => {}, { get: () => ef$1 });
function Pe$3(e$4) {
	return e$4.position.start.offset;
}
function Oe$2(e$4) {
	return e$4.position.end.offset;
}
var vt$2 = new Set([
	"liquidNode",
	"inlineCode",
	"emphasis",
	"esComment",
	"strong",
	"delete",
	"wikiLink",
	"link",
	"linkReference",
	"image",
	"imageReference",
	"footnote",
	"footnoteReference",
	"sentence",
	"whitespace",
	"word",
	"break",
	"inlineMath"
]), Ir$3 = new Set([
	...vt$2,
	"tableCell",
	"paragraph",
	"heading"
]), $e$3 = "non-cjk", ie$3 = "cj-letter", Le$2 = "k-letter", sr$2 = "cjk-punctuation", rf$1 = /\p{Script_Extensions=Hangul}/u;
function Rr$2(e$4) {
	let r$12 = [], t$13 = e$4.split(/([\t\n ]+)/u);
	for (let [a$13, i$18] of t$13.entries()) {
		if (a$13 % 2 === 1) {
			r$12.push({
				type: "whitespace",
				value: /\n/u.test(i$18) ? `
` : " "
			});
			continue;
		}
		if ((a$13 === 0 || a$13 === t$13.length - 1) && i$18 === "") continue;
		let u$14 = i$18.split(new RegExp(`(${pi$2.source})`, "u"));
		for (let [o$9, s$8] of u$14.entries()) if (!((o$9 === 0 || o$9 === u$14.length - 1) && s$8 === "")) {
			if (o$9 % 2 === 0) {
				s$8 !== "" && n$8({
					type: "word",
					value: s$8,
					kind: $e$3,
					isCJ: !1,
					hasLeadingPunctuation: Se$2.test(s$8[0]),
					hasTrailingPunctuation: Se$2.test(z$2(!1, s$8, -1))
				});
				continue;
			}
			if (Se$2.test(s$8)) {
				n$8({
					type: "word",
					value: s$8,
					kind: sr$2,
					isCJ: !0,
					hasLeadingPunctuation: !0,
					hasTrailingPunctuation: !0
				});
				continue;
			}
			if (rf$1.test(s$8)) {
				n$8({
					type: "word",
					value: s$8,
					kind: Le$2,
					isCJ: !1,
					hasLeadingPunctuation: !1,
					hasTrailingPunctuation: !1
				});
				continue;
			}
			n$8({
				type: "word",
				value: s$8,
				kind: ie$3,
				isCJ: !0,
				hasLeadingPunctuation: !1,
				hasTrailingPunctuation: !1
			});
		}
	}
	return r$12;
	function n$8(a$13) {
		let i$18 = z$2(!1, r$12, -1);
		(i$18 == null ? void 0 : i$18.type) === "word" && !u$14($e$3, sr$2) && ![i$18.value, a$13.value].some((o$9) => /\u3000/u.test(o$9)) && r$12.push({
			type: "whitespace",
			value: ""
		}), r$12.push(a$13);
		function u$14(o$9, s$8) {
			return i$18.kind === o$9 && a$13.kind === s$8 || i$18.kind === s$8 && a$13.kind === o$9;
		}
	}
}
function Ye$3(e$4, r$12) {
	let t$13 = r$12.originalText.slice(e$4.position.start.offset, e$4.position.end.offset), { numberText: n$8, leadingSpaces: a$13 } = t$13.match(/^\s*(?<numberText>\d+)(\.|\))(?<leadingSpaces>\s*)/u).groups;
	return {
		number: Number(n$8),
		leadingSpaces: a$13
	};
}
function ki$2(e$4, r$12) {
	return !e$4.ordered || e$4.children.length < 2 || Ye$3(e$4.children[1], r$12).number !== 1 ? !1 : Ye$3(e$4.children[0], r$12).number !== 0 ? !0 : e$4.children.length > 2 && Ye$3(e$4.children[2], r$12).number === 1;
}
function Nr$3(e$4, r$12) {
	let { value: t$13 } = e$4;
	return e$4.position.end.offset === r$12.length && t$13.endsWith(`
`) && r$12.endsWith(`
`) ? t$13.slice(0, -1) : t$13;
}
function ye$2(e$4, r$12) {
	return function t$13(n$8, a$13, i$18) {
		let u$14 = { ...r$12(n$8, a$13, i$18) };
		return u$14.children && (u$14.children = u$14.children.map((o$9, s$8) => t$13(o$9, s$8, [u$14, ...i$18]))), u$14;
	}(e$4, null, []);
}
function Ct$3(e$4) {
	if ((e$4 == null ? void 0 : e$4.type) !== "link" || e$4.children.length !== 1) return !1;
	let [r$12] = e$4.children;
	return Pe$3(e$4) === Pe$3(r$12) && Oe$2(e$4) === Oe$2(r$12);
}
function tf$1(e$4, r$12) {
	let { node: t$13 } = e$4;
	if (t$13.type === "code" && t$13.lang !== null) {
		const language = r$12.__languageMappings?.get(t$13.lang) || t$13.lang;
		let n$8 = wi$3(r$12, { language });
		if (n$8) return async (a$13) => {
			let i$18 = r$12.__inJsTemplate ? "~" : "`", u$14 = i$18.repeat(Math.max(3, Sr$2(t$13.value, i$18) + 1)), o$9 = { parser: n$8 };
			t$13.lang === "ts" || t$13.lang === "typescript" ? o$9.filepath = "dummy.ts" : t$13.lang === "tsx" && (o$9.filepath = "dummy.tsx");
			let s$8 = await a$13(Nr$3(t$13, r$12.originalText), o$9);
			return _e$3([
				u$14,
				t$13.lang,
				t$13.meta ? " " + t$13.meta : "",
				L$2,
				be$2(s$8),
				L$2,
				u$14
			]);
		};
	}
	switch (t$13.type) {
		case "front-matter": return (n$8) => hi$3(t$13, n$8);
		case "import":
		case "export": return (n$8) => n$8(t$13.value, { parser: "babel" });
		case "jsx": return (n$8) => n$8(`<$>${t$13.value}</$>`, {
			parser: "__js_expression",
			rootMarker: "mdx"
		});
	}
	return null;
}
var Bi$1 = tf$1;
var cr$2 = null;
function lr$2(e$4) {
	if (cr$2 !== null && typeof cr$2.property) {
		let r$12 = cr$2;
		return cr$2 = lr$2.prototype = null, r$12;
	}
	return cr$2 = lr$2.prototype = e$4 ?? Object.create(null), new lr$2();
}
var nf$1 = 10;
for (let e$4 = 0; e$4 <= nf$1; e$4++) lr$2();
function bt$3(e$4) {
	return lr$2(e$4);
}
function uf$1(e$4, r$12 = "type") {
	bt$3(e$4);
	function t$13(n$8) {
		let a$13 = n$8[r$12], i$18 = e$4[a$13];
		if (!Array.isArray(i$18)) throw Object.assign(/* @__PURE__ */ new Error(`Missing visitor keys for '${a$13}'.`), { node: n$8 });
		return i$18;
	}
	return t$13;
}
var of$1 = uf$1({
	"front-matter": [],
	root: ["children"],
	paragraph: ["children"],
	sentence: ["children"],
	word: [],
	whitespace: [],
	emphasis: ["children"],
	strong: ["children"],
	delete: ["children"],
	inlineCode: [],
	wikiLink: [],
	link: ["children"],
	image: [],
	blockquote: ["children"],
	heading: ["children"],
	code: [],
	html: [],
	list: ["children"],
	thematicBreak: [],
	linkReference: ["children"],
	imageReference: [],
	definition: [],
	footnote: ["children"],
	footnoteReference: [],
	footnoteDefinition: ["children"],
	table: ["children"],
	tableCell: ["children"],
	break: [],
	liquidNode: [],
	import: [],
	export: [],
	esComment: [],
	jsx: [],
	math: [],
	inlineMath: [],
	tableRow: ["children"],
	listItem: ["children"],
	text: []
}), _i$2 = of$1;
function Si$3(e$4) {
	switch (e$4) {
		case "cr": return "\r";
		case "crlf": return `\r
`;
		default: return `
`;
	}
}
var Pi$1 = () => /[#*0-9]\uFE0F?\u20E3|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26AA\u26B0\u26B1\u26BD\u26BE\u26C4\u26C8\u26CF\u26D1\u26E9\u26F0-\u26F5\u26F7\u26F8\u26FA\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2757\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B55\u3030\u303D\u3297\u3299]\uFE0F?|[\u261D\u270C\u270D](?:\uD83C[\uDFFB-\uDFFF]|\uFE0F)?|[\u270A\u270B](?:\uD83C[\uDFFB-\uDFFF])?|[\u23E9-\u23EC\u23F0\u23F3\u25FD\u2693\u26A1\u26AB\u26C5\u26CE\u26D4\u26EA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2795-\u2797\u27B0\u27BF\u2B50]|\u26D3\uFE0F?(?:\u200D\uD83D\uDCA5)?|\u26F9(?:\uD83C[\uDFFB-\uDFFF]|\uFE0F)?(?:\u200D[\u2640\u2642]\uFE0F?)?|\u2764\uFE0F?(?:\u200D(?:\uD83D\uDD25|\uD83E\uDE79))?|\uD83C(?:[\uDC04\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]\uFE0F?|[\uDF85\uDFC2\uDFC7](?:\uD83C[\uDFFB-\uDFFF])?|[\uDFC4\uDFCA](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDFCB\uDFCC](?:\uD83C[\uDFFB-\uDFFF]|\uFE0F)?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF43\uDF45-\uDF4A\uDF4C-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uDDE6\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF]|\uDDE7\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF]|\uDDE8\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF7\uDDFA-\uDDFF]|\uDDE9\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF]|\uDDEA\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA]|\uDDEB\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7]|\uDDEC\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE]|\uDDED\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA]|\uDDEE\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9]|\uDDEF\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5]|\uDDF0\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF]|\uDDF1\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE]|\uDDF2\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF]|\uDDF3\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF]|\uDDF4\uD83C\uDDF2|\uDDF5\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE]|\uDDF6\uD83C\uDDE6|\uDDF7\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC]|\uDDF8\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF]|\uDDF9\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF]|\uDDFA\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF]|\uDDFB\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA]|\uDDFC\uD83C[\uDDEB\uDDF8]|\uDDFD\uD83C\uDDF0|\uDDFE\uD83C[\uDDEA\uDDF9]|\uDDFF\uD83C[\uDDE6\uDDF2\uDDFC]|\uDF44(?:\u200D\uD83D\uDFEB)?|\uDF4B(?:\u200D\uD83D\uDFE9)?|\uDFC3(?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D(?:[\u2640\u2642]\uFE0F?(?:\u200D\u27A1\uFE0F?)?|\u27A1\uFE0F?))?|\uDFF3\uFE0F?(?:\u200D(?:\u26A7\uFE0F?|\uD83C\uDF08))?|\uDFF4(?:\u200D\u2620\uFE0F?|\uDB40\uDC67\uDB40\uDC62\uDB40(?:\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDC73\uDB40\uDC63\uDB40\uDC74|\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F)?)|\uD83D(?:[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3]\uFE0F?|[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC](?:\uD83C[\uDFFB-\uDFFF])?|[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4\uDEB5](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDD74\uDD90](?:\uD83C[\uDFFB-\uDFFF]|\uFE0F)?|[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC25\uDC27-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE41\uDE43\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEDC-\uDEDF\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB\uDFF0]|\uDC08(?:\u200D\u2B1B)?|\uDC15(?:\u200D\uD83E\uDDBA)?|\uDC26(?:\u200D(?:\u2B1B|\uD83D\uDD25))?|\uDC3B(?:\u200D\u2744\uFE0F?)?|\uDC41\uFE0F?(?:\u200D\uD83D\uDDE8\uFE0F?)?|\uDC68(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D(?:[\uDC68\uDC69]\u200D\uD83D(?:\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?)|[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?)|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFC-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB\uDFFD-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB-\uDFFD\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB-\uDFFE])))?))?|\uDC69(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?[\uDC68\uDC69]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D(?:[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?|\uDC69\u200D\uD83D(?:\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?))|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFC-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB\uDFFD-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB-\uDFFD\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB-\uDFFE])))?))?|\uDC6F(?:\u200D[\u2640\u2642]\uFE0F?)?|\uDD75(?:\uD83C[\uDFFB-\uDFFF]|\uFE0F)?(?:\u200D[\u2640\u2642]\uFE0F?)?|\uDE2E(?:\u200D\uD83D\uDCA8)?|\uDE35(?:\u200D\uD83D\uDCAB)?|\uDE36(?:\u200D\uD83C\uDF2B\uFE0F?)?|\uDE42(?:\u200D[\u2194\u2195]\uFE0F?)?|\uDEB6(?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D(?:[\u2640\u2642]\uFE0F?(?:\u200D\u27A1\uFE0F?)?|\u27A1\uFE0F?))?)|\uD83E(?:[\uDD0C\uDD0F\uDD18-\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5\uDEC3-\uDEC5\uDEF0\uDEF2-\uDEF8](?:\uD83C[\uDFFB-\uDFFF])?|[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD\uDDCF\uDDD4\uDDD6-\uDDDD](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDDDE\uDDDF](?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDD0D\uDD0E\uDD10-\uDD17\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCC\uDDD0\uDDE0-\uDDFF\uDE70-\uDE7C\uDE80-\uDE89\uDE8F-\uDEC2\uDEC6\uDECE-\uDEDC\uDEDF-\uDEE9]|\uDD3C(?:\u200D[\u2640\u2642]\uFE0F?|\uD83C[\uDFFB-\uDFFF])?|\uDDCE(?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D(?:[\u2640\u2642]\uFE0F?(?:\u200D\u27A1\uFE0F?)?|\u27A1\uFE0F?))?|\uDDD1(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1|\uDDD1\u200D\uD83E\uDDD2(?:\u200D\uD83E\uDDD2)?|\uDDD2(?:\u200D\uD83E\uDDD2)?))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFC-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB\uDFFD-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB-\uDFFD\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB-\uDFFE]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?))?|\uDEF1(?:\uD83C(?:\uDFFB(?:\u200D\uD83E\uDEF2\uD83C[\uDFFC-\uDFFF])?|\uDFFC(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB\uDFFD-\uDFFF])?|\uDFFD(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])?|\uDFFE(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB-\uDFFD\uDFFF])?|\uDFFF(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB-\uDFFE])?))?)/g;
function Oi$2(e$4) {
	return e$4 === 12288 || e$4 >= 65281 && e$4 <= 65376 || e$4 >= 65504 && e$4 <= 65510;
}
function Li$1(e$4) {
	return e$4 >= 4352 && e$4 <= 4447 || e$4 === 8986 || e$4 === 8987 || e$4 === 9001 || e$4 === 9002 || e$4 >= 9193 && e$4 <= 9196 || e$4 === 9200 || e$4 === 9203 || e$4 === 9725 || e$4 === 9726 || e$4 === 9748 || e$4 === 9749 || e$4 >= 9776 && e$4 <= 9783 || e$4 >= 9800 && e$4 <= 9811 || e$4 === 9855 || e$4 >= 9866 && e$4 <= 9871 || e$4 === 9875 || e$4 === 9889 || e$4 === 9898 || e$4 === 9899 || e$4 === 9917 || e$4 === 9918 || e$4 === 9924 || e$4 === 9925 || e$4 === 9934 || e$4 === 9940 || e$4 === 9962 || e$4 === 9970 || e$4 === 9971 || e$4 === 9973 || e$4 === 9978 || e$4 === 9981 || e$4 === 9989 || e$4 === 9994 || e$4 === 9995 || e$4 === 10024 || e$4 === 10060 || e$4 === 10062 || e$4 >= 10067 && e$4 <= 10069 || e$4 === 10071 || e$4 >= 10133 && e$4 <= 10135 || e$4 === 10160 || e$4 === 10175 || e$4 === 11035 || e$4 === 11036 || e$4 === 11088 || e$4 === 11093 || e$4 >= 11904 && e$4 <= 11929 || e$4 >= 11931 && e$4 <= 12019 || e$4 >= 12032 && e$4 <= 12245 || e$4 >= 12272 && e$4 <= 12287 || e$4 >= 12289 && e$4 <= 12350 || e$4 >= 12353 && e$4 <= 12438 || e$4 >= 12441 && e$4 <= 12543 || e$4 >= 12549 && e$4 <= 12591 || e$4 >= 12593 && e$4 <= 12686 || e$4 >= 12688 && e$4 <= 12773 || e$4 >= 12783 && e$4 <= 12830 || e$4 >= 12832 && e$4 <= 12871 || e$4 >= 12880 && e$4 <= 42124 || e$4 >= 42128 && e$4 <= 42182 || e$4 >= 43360 && e$4 <= 43388 || e$4 >= 44032 && e$4 <= 55203 || e$4 >= 63744 && e$4 <= 64255 || e$4 >= 65040 && e$4 <= 65049 || e$4 >= 65072 && e$4 <= 65106 || e$4 >= 65108 && e$4 <= 65126 || e$4 >= 65128 && e$4 <= 65131 || e$4 >= 94176 && e$4 <= 94180 || e$4 === 94192 || e$4 === 94193 || e$4 >= 94208 && e$4 <= 100343 || e$4 >= 100352 && e$4 <= 101589 || e$4 >= 101631 && e$4 <= 101640 || e$4 >= 110576 && e$4 <= 110579 || e$4 >= 110581 && e$4 <= 110587 || e$4 === 110589 || e$4 === 110590 || e$4 >= 110592 && e$4 <= 110882 || e$4 === 110898 || e$4 >= 110928 && e$4 <= 110930 || e$4 === 110933 || e$4 >= 110948 && e$4 <= 110951 || e$4 >= 110960 && e$4 <= 111355 || e$4 >= 119552 && e$4 <= 119638 || e$4 >= 119648 && e$4 <= 119670 || e$4 === 126980 || e$4 === 127183 || e$4 === 127374 || e$4 >= 127377 && e$4 <= 127386 || e$4 >= 127488 && e$4 <= 127490 || e$4 >= 127504 && e$4 <= 127547 || e$4 >= 127552 && e$4 <= 127560 || e$4 === 127568 || e$4 === 127569 || e$4 >= 127584 && e$4 <= 127589 || e$4 >= 127744 && e$4 <= 127776 || e$4 >= 127789 && e$4 <= 127797 || e$4 >= 127799 && e$4 <= 127868 || e$4 >= 127870 && e$4 <= 127891 || e$4 >= 127904 && e$4 <= 127946 || e$4 >= 127951 && e$4 <= 127955 || e$4 >= 127968 && e$4 <= 127984 || e$4 === 127988 || e$4 >= 127992 && e$4 <= 128062 || e$4 === 128064 || e$4 >= 128066 && e$4 <= 128252 || e$4 >= 128255 && e$4 <= 128317 || e$4 >= 128331 && e$4 <= 128334 || e$4 >= 128336 && e$4 <= 128359 || e$4 === 128378 || e$4 === 128405 || e$4 === 128406 || e$4 === 128420 || e$4 >= 128507 && e$4 <= 128591 || e$4 >= 128640 && e$4 <= 128709 || e$4 === 128716 || e$4 >= 128720 && e$4 <= 128722 || e$4 >= 128725 && e$4 <= 128727 || e$4 >= 128732 && e$4 <= 128735 || e$4 === 128747 || e$4 === 128748 || e$4 >= 128756 && e$4 <= 128764 || e$4 >= 128992 && e$4 <= 129003 || e$4 === 129008 || e$4 >= 129292 && e$4 <= 129338 || e$4 >= 129340 && e$4 <= 129349 || e$4 >= 129351 && e$4 <= 129535 || e$4 >= 129648 && e$4 <= 129660 || e$4 >= 129664 && e$4 <= 129673 || e$4 >= 129679 && e$4 <= 129734 || e$4 >= 129742 && e$4 <= 129756 || e$4 >= 129759 && e$4 <= 129769 || e$4 >= 129776 && e$4 <= 129784 || e$4 >= 131072 && e$4 <= 196605 || e$4 >= 196608 && e$4 <= 262141;
}
var Ii$1 = (e$4) => !(Oi$2(e$4) || Li$1(e$4));
var sf$1 = /[^\x20-\x7F]/u;
function cf$1(e$4) {
	if (!e$4) return 0;
	if (!sf$1.test(e$4)) return e$4.length;
	e$4 = e$4.replace(Pi$1(), "  ");
	let r$12 = 0;
	for (let t$13 of e$4) {
		let n$8 = t$13.codePointAt(0);
		n$8 <= 31 || n$8 >= 127 && n$8 <= 159 || n$8 >= 768 && n$8 <= 879 || (r$12 += Ii$1(n$8) ? 1 : 2);
	}
	return r$12;
}
var fr$2 = cf$1;
var V$2 = Symbol("MODE_BREAK"), ue$2 = Symbol("MODE_FLAT"), Ve$2 = Symbol("cursor"), At$4 = Symbol("DOC_FILL_PRINTED_LENGTH");
function Ri$1() {
	return {
		value: "",
		length: 0,
		queue: []
	};
}
function lf$1(e$4, r$12) {
	return yt$1(e$4, { type: "indent" }, r$12);
}
function ff$1(e$4, r$12, t$13) {
	return r$12 === Number.NEGATIVE_INFINITY ? e$4.root || Ri$1() : r$12 < 0 ? yt$1(e$4, { type: "dedent" }, t$13) : r$12 ? r$12.type === "root" ? {
		...e$4,
		root: e$4
	} : yt$1(e$4, {
		type: typeof r$12 == "string" ? "stringAlign" : "numberAlign",
		n: r$12
	}, t$13) : e$4;
}
function yt$1(e$4, r$12, t$13) {
	let n$8 = r$12.type === "dedent" ? e$4.queue.slice(0, -1) : [...e$4.queue, r$12], a$13 = "", i$18 = 0, u$14 = 0, o$9 = 0;
	for (let D$4 of n$8) switch (D$4.type) {
		case "indent":
			c$3(), t$13.useTabs ? s$8(1) : l$10(t$13.tabWidth);
			break;
		case "stringAlign":
			c$3(), a$13 += D$4.n, i$18 += D$4.n.length;
			break;
		case "numberAlign":
			u$14 += 1, o$9 += D$4.n;
			break;
		default: throw new Error(`Unexpected type '${D$4.type}'`);
	}
	return p$2(), {
		...e$4,
		value: a$13,
		length: i$18,
		queue: n$8
	};
	function s$8(D$4) {
		a$13 += "	".repeat(D$4), i$18 += t$13.tabWidth * D$4;
	}
	function l$10(D$4) {
		a$13 += " ".repeat(D$4), i$18 += D$4;
	}
	function c$3() {
		t$13.useTabs ? f$3() : p$2();
	}
	function f$3() {
		u$14 > 0 && s$8(u$14), d$14();
	}
	function p$2() {
		o$9 > 0 && l$10(o$9), d$14();
	}
	function d$14() {
		u$14 = 0, o$9 = 0;
	}
}
function xt$1(e$4) {
	let r$12 = 0, t$13 = 0, n$8 = e$4.length;
	e: for (; n$8--;) {
		let a$13 = e$4[n$8];
		if (a$13 === Ve$2) {
			t$13++;
			continue;
		}
		for (let i$18 = a$13.length - 1; i$18 >= 0; i$18--) {
			let u$14 = a$13[i$18];
			if (u$14 === " " || u$14 === "	") r$12++;
			else {
				e$4[n$8] = a$13.slice(0, i$18 + 1);
				break e;
			}
		}
	}
	if (r$12 > 0 || t$13 > 0) for (e$4.length = n$8 + 1; t$13-- > 0;) e$4.push(Ve$2);
	return r$12;
}
function Mr$2(e$4, r$12, t$13, n$8, a$13, i$18) {
	if (t$13 === Number.POSITIVE_INFINITY) return !0;
	let u$14 = r$12.length, o$9 = [e$4], s$8 = [];
	for (; t$13 >= 0;) {
		if (o$9.length === 0) {
			if (u$14 === 0) return !0;
			o$9.push(r$12[--u$14]);
			continue;
		}
		let { mode: l$10, doc: c$3 } = o$9.pop(), f$3 = G$2(c$3);
		switch (f$3) {
			case Y$2:
				s$8.push(c$3), t$13 -= fr$2(c$3);
				break;
			case H$3:
			case J$2: {
				let p$2 = f$3 === H$3 ? c$3 : c$3.parts, d$14 = c$3[At$4] ?? 0;
				for (let D$4 = p$2.length - 1; D$4 >= d$14; D$4--) o$9.push({
					mode: l$10,
					doc: p$2[D$4]
				});
				break;
			}
			case re$2:
			case te$3:
			case De$3:
			case de$3:
				o$9.push({
					mode: l$10,
					doc: c$3.contents
				});
				break;
			case fe$1:
				t$13 += xt$1(s$8);
				break;
			case X$3: {
				if (i$18 && c$3.break) return !1;
				let p$2 = c$3.break ? V$2 : l$10, d$14 = c$3.expandedStates && p$2 === V$2 ? z$2(!1, c$3.expandedStates, -1) : c$3.contents;
				o$9.push({
					mode: p$2,
					doc: d$14
				});
				break;
			}
			case K$2: {
				let d$14 = (c$3.groupId ? a$13[c$3.groupId] || ue$2 : l$10) === V$2 ? c$3.breakContents : c$3.flatContents;
				d$14 && o$9.push({
					mode: l$10,
					doc: d$14
				});
				break;
			}
			case $$1:
				if (l$10 === V$2 || c$3.hard) return !0;
				c$3.soft || (s$8.push(" "), t$13--);
				break;
			case pe$3:
				n$8 = !0;
				break;
			case he$4:
				if (n$8) return !1;
				break;
		}
	}
	return !1;
}
function Ni$1(e$4, r$12) {
	let t$13 = {}, n$8 = r$12.printWidth, a$13 = Si$3(r$12.endOfLine), i$18 = 0, u$14 = [{
		ind: Ri$1(),
		mode: V$2,
		doc: e$4
	}], o$9 = [], s$8 = !1, l$10 = [], c$3 = 0;
	for (Jn$2(e$4); u$14.length > 0;) {
		let { ind: p$2, mode: d$14, doc: D$4 } = u$14.pop();
		switch (G$2(D$4)) {
			case Y$2: {
				let h$3 = a$13 !== `
` ? R$3(!1, D$4, `
`, a$13) : D$4;
				o$9.push(h$3), u$14.length > 0 && (i$18 += fr$2(h$3));
				break;
			}
			case H$3:
				for (let h$3 = D$4.length - 1; h$3 >= 0; h$3--) u$14.push({
					ind: p$2,
					mode: d$14,
					doc: D$4[h$3]
				});
				break;
			case Ce$3:
				if (c$3 >= 2) throw new Error("There are too many 'cursor' in doc.");
				o$9.push(Ve$2), c$3++;
				break;
			case re$2:
				u$14.push({
					ind: lf$1(p$2, r$12),
					mode: d$14,
					doc: D$4.contents
				});
				break;
			case te$3:
				u$14.push({
					ind: ff$1(p$2, D$4.n, r$12),
					mode: d$14,
					doc: D$4.contents
				});
				break;
			case fe$1:
				i$18 -= xt$1(o$9);
				break;
			case X$3:
				switch (d$14) {
					case ue$2: if (!s$8) {
						u$14.push({
							ind: p$2,
							mode: D$4.break ? V$2 : ue$2,
							doc: D$4.contents
						});
						break;
					}
					case V$2: {
						s$8 = !1;
						let h$3 = {
							ind: p$2,
							mode: ue$2,
							doc: D$4.contents
						}, m$11 = n$8 - i$18, F$4 = l$10.length > 0;
						if (!D$4.break && Mr$2(h$3, u$14, m$11, F$4, t$13)) u$14.push(h$3);
						else if (D$4.expandedStates) {
							let A$3 = z$2(!1, D$4.expandedStates, -1);
							if (D$4.break) {
								u$14.push({
									ind: p$2,
									mode: V$2,
									doc: A$3
								});
								break;
							} else for (let v$5 = 1; v$5 < D$4.expandedStates.length + 1; v$5++) if (v$5 >= D$4.expandedStates.length) {
								u$14.push({
									ind: p$2,
									mode: V$2,
									doc: A$3
								});
								break;
							} else {
								let B$4 = D$4.expandedStates[v$5], b$7 = {
									ind: p$2,
									mode: ue$2,
									doc: B$4
								};
								if (Mr$2(b$7, u$14, m$11, F$4, t$13)) {
									u$14.push(b$7);
									break;
								}
							}
						} else u$14.push({
							ind: p$2,
							mode: V$2,
							doc: D$4.contents
						});
						break;
					}
				}
				D$4.id && (t$13[D$4.id] = z$2(!1, u$14, -1).mode);
				break;
			case J$2: {
				let h$3 = n$8 - i$18, m$11 = D$4[At$4] ?? 0, { parts: F$4 } = D$4, A$3 = F$4.length - m$11;
				if (A$3 === 0) break;
				let v$5 = F$4[m$11 + 0], B$4 = F$4[m$11 + 1], b$7 = {
					ind: p$2,
					mode: ue$2,
					doc: v$5
				}, g$2 = {
					ind: p$2,
					mode: V$2,
					doc: v$5
				}, y$7 = Mr$2(b$7, [], h$3, l$10.length > 0, t$13, !0);
				if (A$3 === 1) {
					y$7 ? u$14.push(b$7) : u$14.push(g$2);
					break;
				}
				let x$3 = {
					ind: p$2,
					mode: ue$2,
					doc: B$4
				}, E$3 = {
					ind: p$2,
					mode: V$2,
					doc: B$4
				};
				if (A$3 === 2) {
					y$7 ? u$14.push(x$3, b$7) : u$14.push(E$3, g$2);
					break;
				}
				let w$3 = F$4[m$11 + 2], k$5 = {
					ind: p$2,
					mode: d$14,
					doc: {
						...D$4,
						[At$4]: m$11 + 2
					}
				};
				Mr$2({
					ind: p$2,
					mode: ue$2,
					doc: [
						v$5,
						B$4,
						w$3
					]
				}, [], h$3, l$10.length > 0, t$13, !0) ? u$14.push(k$5, x$3, b$7) : y$7 ? u$14.push(k$5, E$3, b$7) : u$14.push(k$5, E$3, g$2);
				break;
			}
			case K$2:
			case De$3: {
				let h$3 = D$4.groupId ? t$13[D$4.groupId] : d$14;
				if (h$3 === V$2) {
					let m$11 = D$4.type === K$2 ? D$4.breakContents : D$4.negate ? D$4.contents : ir$2(D$4.contents);
					m$11 && u$14.push({
						ind: p$2,
						mode: d$14,
						doc: m$11
					});
				}
				if (h$3 === ue$2) {
					let m$11 = D$4.type === K$2 ? D$4.flatContents : D$4.negate ? ir$2(D$4.contents) : D$4.contents;
					m$11 && u$14.push({
						ind: p$2,
						mode: d$14,
						doc: m$11
					});
				}
				break;
			}
			case pe$3:
				l$10.push({
					ind: p$2,
					mode: d$14,
					doc: D$4.contents
				});
				break;
			case he$4:
				l$10.length > 0 && u$14.push({
					ind: p$2,
					mode: d$14,
					doc: ar$2
				});
				break;
			case $$1:
				switch (d$14) {
					case ue$2: if (D$4.hard) s$8 = !0;
					else {
						D$4.soft || (o$9.push(" "), i$18 += 1);
						break;
					}
					case V$2:
						if (l$10.length > 0) {
							u$14.push({
								ind: p$2,
								mode: d$14,
								doc: D$4
							}, ...l$10.reverse()), l$10.length = 0;
							break;
						}
						D$4.literal ? p$2.root ? (o$9.push(a$13, p$2.root.value), i$18 = p$2.root.length) : (o$9.push(a$13), i$18 = 0) : (i$18 -= xt$1(o$9), o$9.push(a$13 + p$2.value), i$18 = p$2.length);
						break;
				}
				break;
			case de$3:
				u$14.push({
					ind: p$2,
					mode: d$14,
					doc: D$4.contents
				});
				break;
			case ne$3: break;
			default: throw new Te$3(D$4);
		}
		u$14.length === 0 && l$10.length > 0 && (u$14.push(...l$10.reverse()), l$10.length = 0);
	}
	let f$3 = o$9.indexOf(Ve$2);
	if (f$3 !== -1) {
		let p$2 = o$9.indexOf(Ve$2, f$3 + 1);
		if (p$2 === -1) return { formatted: o$9.filter((m$11) => m$11 !== Ve$2).join("") };
		let d$14 = o$9.slice(0, f$3).join(""), D$4 = o$9.slice(f$3 + 1, p$2).join(""), h$3 = o$9.slice(p$2 + 1).join("");
		return {
			formatted: d$14 + D$4 + h$3,
			cursorNodeStart: d$14.length,
			cursorNodeText: D$4
		};
	}
	return { formatted: o$9.join("") };
}
function Mi$1(e$4, r$12, t$13) {
	let { node: n$8 } = e$4, a$13 = [], i$18 = e$4.map(() => e$4.map(({ index: f$3 }) => {
		let p$2 = Ni$1(t$13(), r$12).formatted, d$14 = fr$2(p$2);
		return a$13[f$3] = Math.max(a$13[f$3] ?? 3, d$14), {
			text: p$2,
			width: d$14
		};
	}, "children"), "children"), u$14 = s$8(!1);
	if (r$12.proseWrap !== "never") return [ur$3, u$14];
	let o$9 = s$8(!0);
	return [ur$3, Ue$1(Zn$2(o$9, u$14))];
	function s$8(f$3) {
		return Tr$2(ar$2, [
			c$3(i$18[0], f$3),
			l$10(f$3),
			...i$18.slice(1).map((p$2) => c$3(p$2, f$3))
		].map((p$2) => `| ${p$2.join(" | ")} |`));
	}
	function l$10(f$3) {
		return a$13.map((p$2, d$14) => {
			let D$4 = n$8.align[d$14], h$3 = D$4 === "center" || D$4 === "left" ? ":" : "-", m$11 = D$4 === "center" || D$4 === "right" ? ":" : "-", F$4 = f$3 ? "-" : "-".repeat(p$2 - 2);
			return `${h$3}${F$4}${m$11}`;
		});
	}
	function c$3(f$3, p$2) {
		return f$3.map(({ text: d$14, width: D$4 }, h$3) => {
			if (p$2) return d$14;
			let m$11 = a$13[h$3] - D$4, F$4 = n$8.align[h$3], A$3 = 0;
			F$4 === "right" ? A$3 = m$11 : F$4 === "center" && (A$3 = Math.floor(m$11 / 2));
			let v$5 = m$11 - A$3;
			return `${" ".repeat(A$3)}${d$14}${" ".repeat(v$5)}`;
		});
	}
}
function Ui$1(e$4, r$12, t$13) {
	let n$8 = e$4.map(t$13, "children");
	return Df$1(n$8);
}
function Df$1(e$4) {
	let r$12 = [""];
	return function t$13(n$8) {
		for (let a$13 of n$8) {
			let i$18 = G$2(a$13);
			if (i$18 === H$3) {
				t$13(a$13);
				continue;
			}
			let u$14 = a$13, o$9 = [];
			i$18 === J$2 && ([u$14, ...o$9] = a$13.parts), r$12.push([r$12.pop(), u$14], ...o$9);
		}
	}(e$4), ze$3(r$12);
}
var Q$1, wt$3 = class {
	constructor(r$12) {
		jn$2(this, Q$1);
		Wn$2(this, Q$1, new Set(r$12));
	}
	getLeadingWhitespaceCount(r$12) {
		let t$13 = ce$1(this, Q$1), n$8 = 0;
		for (let a$13 = 0; a$13 < r$12.length && t$13.has(r$12.charAt(a$13)); a$13++) n$8++;
		return n$8;
	}
	getTrailingWhitespaceCount(r$12) {
		let t$13 = ce$1(this, Q$1), n$8 = 0;
		for (let a$13 = r$12.length - 1; a$13 >= 0 && t$13.has(r$12.charAt(a$13)); a$13--) n$8++;
		return n$8;
	}
	getLeadingWhitespace(r$12) {
		let t$13 = this.getLeadingWhitespaceCount(r$12);
		return r$12.slice(0, t$13);
	}
	getTrailingWhitespace(r$12) {
		let t$13 = this.getTrailingWhitespaceCount(r$12);
		return r$12.slice(r$12.length - t$13);
	}
	hasLeadingWhitespace(r$12) {
		return ce$1(this, Q$1).has(r$12.charAt(0));
	}
	hasTrailingWhitespace(r$12) {
		return ce$1(this, Q$1).has(z$2(!1, r$12, -1));
	}
	trimStart(r$12) {
		let t$13 = this.getLeadingWhitespaceCount(r$12);
		return r$12.slice(t$13);
	}
	trimEnd(r$12) {
		let t$13 = this.getTrailingWhitespaceCount(r$12);
		return r$12.slice(0, r$12.length - t$13);
	}
	trim(r$12) {
		return this.trimEnd(this.trimStart(r$12));
	}
	split(r$12, t$13 = !1) {
		let n$8 = `[${le$3([...ce$1(this, Q$1)].join(""))}]+`, a$13 = new RegExp(t$13 ? `(${n$8})` : n$8, "u");
		return r$12.split(a$13);
	}
	hasWhitespaceCharacter(r$12) {
		let t$13 = ce$1(this, Q$1);
		return Array.prototype.some.call(r$12, (n$8) => t$13.has(n$8));
	}
	hasNonWhitespaceCharacter(r$12) {
		let t$13 = ce$1(this, Q$1);
		return Array.prototype.some.call(r$12, (n$8) => !t$13.has(n$8));
	}
	isWhitespaceOnly(r$12) {
		let t$13 = ce$1(this, Q$1);
		return Array.prototype.every.call(r$12, (n$8) => t$13.has(n$8));
	}
};
Q$1 = /* @__PURE__ */ new WeakMap();
var zi$1 = wt$3;
var pf$1 = [
	"	",
	`
`,
	"\f",
	"\r",
	" "
], hf$1 = new zi$1(pf$1), kt$2 = hf$1;
var df$1 = /^\\?.$/su, mf$1 = /^\n *>[ >]*$/u;
function Ff$1(e$4, r$12) {
	return e$4 = gf$1(e$4, r$12), e$4 = vf$1(e$4), e$4 = bf$1(e$4, r$12), e$4 = Af$1(e$4, r$12), e$4 = Cf$1(e$4), e$4;
}
function gf$1(e$4, r$12) {
	return ye$2(e$4, (t$13) => {
		if (t$13.type !== "text") return t$13;
		let { value: n$8 } = t$13;
		if (n$8 === "*" || n$8 === "_" || !df$1.test(n$8) || t$13.position.end.offset - t$13.position.start.offset === n$8.length) return t$13;
		let a$13 = r$12.originalText.slice(t$13.position.start.offset, t$13.position.end.offset);
		return mf$1.test(a$13) ? t$13 : {
			...t$13,
			value: a$13
		};
	});
}
function Ef$1(e$4, r$12, t$13) {
	return ye$2(e$4, (n$8) => {
		if (!n$8.children) return n$8;
		let a$13 = n$8.children.reduce((i$18, u$14) => {
			let o$9 = z$2(!1, i$18, -1);
			return o$9 && r$12(o$9, u$14) ? i$18.splice(-1, 1, t$13(o$9, u$14)) : i$18.push(u$14), i$18;
		}, []);
		return {
			...n$8,
			children: a$13
		};
	});
}
function vf$1(e$4) {
	return Ef$1(e$4, (r$12, t$13) => r$12.type === "text" && t$13.type === "text", (r$12, t$13) => ({
		type: "text",
		value: r$12.value + t$13.value,
		position: {
			start: r$12.position.start,
			end: t$13.position.end
		}
	}));
}
function Cf$1(e$4) {
	return ye$2(e$4, (r$12, t$13, [n$8]) => {
		if (r$12.type !== "text") return r$12;
		let { value: a$13 } = r$12;
		return n$8.type === "paragraph" && (t$13 === 0 && (a$13 = kt$2.trimStart(a$13)), t$13 === n$8.children.length - 1 && (a$13 = kt$2.trimEnd(a$13))), {
			type: "sentence",
			position: r$12.position,
			children: Rr$2(a$13)
		};
	});
}
function bf$1(e$4, r$12) {
	return ye$2(e$4, (t$13, n$8, a$13) => {
		if (t$13.type === "code") {
			let i$18 = /^\n?(?: {4,}|\t)/u.test(r$12.originalText.slice(t$13.position.start.offset, t$13.position.end.offset));
			if (t$13.isIndented = i$18, i$18) for (let u$14 = 0; u$14 < a$13.length; u$14++) {
				let o$9 = a$13[u$14];
				if (o$9.hasIndentedCodeblock) break;
				o$9.type === "list" && (o$9.hasIndentedCodeblock = !0);
			}
		}
		return t$13;
	});
}
function Af$1(e$4, r$12) {
	return ye$2(e$4, (a$13, i$18, u$14) => {
		if (a$13.type === "list" && a$13.children.length > 0) {
			for (let o$9 = 0; o$9 < u$14.length; o$9++) {
				let s$8 = u$14[o$9];
				if (s$8.type === "list" && !s$8.isAligned) return a$13.isAligned = !1, a$13;
			}
			a$13.isAligned = n$8(a$13);
		}
		return a$13;
	});
	function t$13(a$13) {
		return a$13.children.length === 0 ? -1 : a$13.children[0].position.start.column - 1;
	}
	function n$8(a$13) {
		if (!a$13.ordered) return !0;
		let [i$18, u$14] = a$13.children;
		if (Ye$3(i$18, r$12).leadingSpaces.length > 1) return !0;
		let s$8 = t$13(i$18);
		if (s$8 === -1) return !1;
		if (a$13.children.length === 1) return s$8 % r$12.tabWidth === 0;
		let l$10 = t$13(u$14);
		return s$8 !== l$10 ? !1 : s$8 % r$12.tabWidth === 0 ? !0 : Ye$3(u$14, r$12).leadingSpaces.length > 1;
	}
}
var Gi$2 = Ff$1;
function Yi$2(e$4, r$12) {
	let t$13 = [""];
	return e$4.each(() => {
		let { node: n$8 } = e$4, a$13 = r$12();
		switch (n$8.type) {
			case "whitespace": if (G$2(a$13) !== Y$2) {
				t$13.push(a$13, "");
				break;
			}
			default: t$13.push([t$13.pop(), a$13]);
		}
	}, "children"), ze$3(t$13);
}
var yf$1 = new Set([
	"heading",
	"tableCell",
	"link",
	"wikiLink"
]), $i$2 = /* @__PURE__ */ new Set("!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~");
function xf$2({ parent: e$4 }) {
	if (e$4.usesCJSpaces === void 0) {
		let r$12 = {
			" ": 0,
			"": 0
		}, { children: t$13 } = e$4;
		for (let n$8 = 1; n$8 < t$13.length - 1; ++n$8) {
			let a$13 = t$13[n$8];
			if (a$13.type === "whitespace" && (a$13.value === " " || a$13.value === "")) {
				let i$18 = t$13[n$8 - 1].kind, u$14 = t$13[n$8 + 1].kind;
				(i$18 === ie$3 && u$14 === $e$3 || i$18 === $e$3 && u$14 === ie$3) && ++r$12[a$13.value];
			}
		}
		e$4.usesCJSpaces = r$12[" "] > r$12[""];
	}
	return e$4.usesCJSpaces;
}
function wf$1(e$4, r$12) {
	if (r$12) return !0;
	let { previous: t$13, next: n$8 } = e$4;
	if (!t$13 || !n$8) return !0;
	let a$13 = t$13.kind, i$18 = n$8.kind;
	return Vi$2(a$13) && Vi$2(i$18) || a$13 === Le$2 && i$18 === ie$3 || i$18 === Le$2 && a$13 === ie$3 ? !0 : a$13 === sr$2 || i$18 === sr$2 || a$13 === ie$3 && i$18 === ie$3 ? !1 : $i$2.has(n$8.value[0]) || $i$2.has(z$2(!1, t$13.value, -1)) ? !0 : t$13.hasTrailingPunctuation || n$8.hasLeadingPunctuation ? !1 : xf$2(e$4);
}
function Vi$2(e$4) {
	return e$4 === $e$3 || e$4 === Le$2;
}
function kf$1(e$4, r$12, t$13, n$8) {
	if (t$13 !== "always" || e$4.hasAncestor((u$14) => yf$1.has(u$14.type))) return !1;
	if (n$8) return r$12 !== "";
	let { previous: a$13, next: i$18 } = e$4;
	return !a$13 || !i$18 ? !0 : r$12 === "" ? !1 : a$13.kind === Le$2 && i$18.kind === ie$3 || i$18.kind === Le$2 && a$13.kind === ie$3 ? !0 : !(a$13.isCJ || i$18.isCJ);
}
function Bt$2(e$4, r$12, t$13, n$8) {
	if (t$13 === "preserve" && r$12 === `
`) return L$2;
	let a$13 = r$12 === " " || r$12 === `
` && wf$1(e$4, n$8);
	return kf$1(e$4, r$12, t$13, n$8) ? a$13 ? qr$2 : _r$2 : a$13 ? " " : "";
}
var Bf$1 = new Set(["listItem", "definition"]);
function ji$2(e$4) {
	var a$13, i$18;
	let { previous: r$12, next: t$13 } = e$4;
	return (r$12 == null ? void 0 : r$12.type) === "sentence" && ((a$13 = z$2(!1, r$12.children, -1)) == null ? void 0 : a$13.type) === "word" && !z$2(!1, r$12.children, -1).hasTrailingPunctuation || (t$13 == null ? void 0 : t$13.type) === "sentence" && ((i$18 = t$13.children[0]) == null ? void 0 : i$18.type) === "word" && !t$13.children[0].hasLeadingPunctuation;
}
function Tf$1(e$4, r$12, t$13) {
	var a$13;
	let { node: n$8 } = e$4;
	if (Lf$1(e$4)) {
		let i$18 = [""], u$14 = Rr$2(r$12.originalText.slice(n$8.position.start.offset, n$8.position.end.offset));
		for (let o$9 of u$14) {
			if (o$9.type === "word") {
				i$18.push([i$18.pop(), o$9.value]);
				continue;
			}
			let s$8 = Bt$2(e$4, o$9.value, r$12.proseWrap, !0);
			if (G$2(s$8) === Y$2) {
				i$18.push([i$18.pop(), s$8]);
				continue;
			}
			i$18.push(s$8, "");
		}
		return ze$3(i$18);
	}
	switch (n$8.type) {
		case "front-matter": return r$12.originalText.slice(n$8.position.start.offset, n$8.position.end.offset);
		case "root": return n$8.children.length === 0 ? "" : [Sf$1(e$4, r$12, t$13), L$2];
		case "paragraph": return Ui$1(e$4, r$12, t$13);
		case "sentence": return Yi$2(e$4, t$13);
		case "word": {
			let i$18 = R$3(!1, R$3(!1, n$8.value, "*", String.raw`\*`), new RegExp([`(^|${Se$2.source})(_+)`, `(_+)(${Se$2.source}|$)`].join("|"), "gu"), (s$8, l$10, c$3, f$3, p$2) => R$3(!1, c$3 ? `${l$10}${c$3}` : `${f$3}${p$2}`, "_", String.raw`\_`)), u$14 = (s$8, l$10, c$3) => s$8.type === "sentence" && c$3 === 0, o$9 = (s$8, l$10, c$3) => Ct$3(s$8.children[c$3 - 1]);
			return i$18 !== n$8.value && (e$4.match(void 0, u$14, o$9) || e$4.match(void 0, u$14, (s$8, l$10, c$3) => s$8.type === "emphasis" && c$3 === 0, o$9)) && (i$18 = i$18.replace(/^(\\?[*_])+/u, (s$8) => R$3(!1, s$8, "\\", ""))), i$18;
		}
		case "whitespace": {
			let { next: i$18 } = e$4, u$14 = i$18 && /^>|^(?:[*+-]|#{1,6}|\d+[).])$/u.test(i$18.value) ? "never" : r$12.proseWrap;
			return Bt$2(e$4, n$8.value, u$14);
		}
		case "emphasis": {
			let i$18;
			if (Ct$3(n$8.children[0])) i$18 = r$12.originalText[n$8.position.start.offset];
			else {
				let u$14 = ji$2(e$4), o$9 = ((a$13 = e$4.parent) == null ? void 0 : a$13.type) === "strong" && ji$2(e$4.ancestors);
				i$18 = u$14 || o$9 || e$4.hasAncestor((s$8) => s$8.type === "emphasis") ? "*" : "_";
			}
			return [
				i$18,
				j$3(e$4, r$12, t$13),
				i$18
			];
		}
		case "strong": return [
			"**",
			j$3(e$4, r$12, t$13),
			"**"
		];
		case "delete": return [
			"~~",
			j$3(e$4, r$12, t$13),
			"~~"
		];
		case "inlineCode": {
			let i$18 = r$12.proseWrap === "preserve" ? n$8.value : R$3(!1, n$8.value, `
`, " "), u$14 = ei$4(i$18, "`"), o$9 = "`".repeat(u$14 || 1), s$8 = i$18.startsWith("`") || i$18.endsWith("`") || /^[\n ]/u.test(i$18) && /[\n ]$/u.test(i$18) && /[^\n ]/u.test(i$18) ? " " : "";
			return [
				o$9,
				s$8,
				i$18,
				s$8,
				o$9
			];
		}
		case "wikiLink": {
			let i$18 = "";
			return r$12.proseWrap === "preserve" ? i$18 = n$8.value : i$18 = R$3(!1, n$8.value, /[\t\n]+/gu, " "), [
				"[[",
				i$18,
				"]]"
			];
		}
		case "link": switch (r$12.originalText[n$8.position.start.offset]) {
			case "<": {
				let i$18 = "mailto:";
				return [
					"<",
					n$8.url.startsWith(i$18) && r$12.originalText.slice(n$8.position.start.offset + 1, n$8.position.start.offset + 1 + 7) !== i$18 ? n$8.url.slice(7) : n$8.url,
					">"
				];
			}
			case "[": return [
				"[",
				j$3(e$4, r$12, t$13),
				"](",
				Tt$3(n$8.url, ")"),
				Ur$2(n$8.title, r$12),
				")"
			];
			default: return r$12.originalText.slice(n$8.position.start.offset, n$8.position.end.offset);
		}
		case "image": return [
			"![",
			n$8.alt || "",
			"](",
			Tt$3(n$8.url, ")"),
			Ur$2(n$8.title, r$12),
			")"
		];
		case "blockquote": return ["> ", Ae$3("> ", j$3(e$4, r$12, t$13))];
		case "heading": return ["#".repeat(n$8.depth) + " ", j$3(e$4, r$12, t$13)];
		case "code": {
			if (n$8.isIndented) {
				let o$9 = " ".repeat(4);
				return Ae$3(o$9, [o$9, be$2(n$8.value, L$2)]);
			}
			let i$18 = r$12.__inJsTemplate ? "~" : "`", u$14 = i$18.repeat(Math.max(3, Sr$2(n$8.value, i$18) + 1));
			return [
				u$14,
				n$8.lang || "",
				n$8.meta ? " " + n$8.meta : "",
				L$2,
				be$2(Nr$3(n$8, r$12.originalText), L$2),
				L$2,
				u$14
			];
		}
		case "html": {
			let { parent: i$18, isLast: u$14 } = e$4, o$9 = i$18.type === "root" && u$14 ? n$8.value.trimEnd() : n$8.value, s$8 = /^<!--.*-->$/su.test(o$9);
			return be$2(o$9, s$8 ? L$2 : _e$3(nr$3));
		}
		case "list": {
			let i$18 = Hi$2(n$8, e$4.parent), u$14 = ki$2(n$8, r$12);
			return j$3(e$4, r$12, t$13, { processor(o$9) {
				let s$8 = c$3(), l$10 = o$9.node;
				if (l$10.children.length === 2 && l$10.children[1].type === "html" && l$10.children[0].position.start.column !== l$10.children[1].position.start.column) return [s$8, Wi$2(o$9, r$12, t$13, s$8)];
				return [s$8, Ae$3(" ".repeat(s$8.length), Wi$2(o$9, r$12, t$13, s$8))];
				function c$3() {
					let f$3 = n$8.ordered ? (o$9.isFirst ? n$8.start : u$14 ? 1 : n$8.start + o$9.index) + (i$18 % 2 === 0 ? ". " : ") ") : i$18 % 2 === 0 ? "- " : "* ";
					return (n$8.isAligned || n$8.hasIndentedCodeblock) && n$8.ordered ? qf$1(f$3, r$12) : f$3;
				}
			} });
		}
		case "thematicBreak": {
			let { ancestors: i$18 } = e$4, u$14 = i$18.findIndex((s$8) => s$8.type === "list");
			return u$14 === -1 ? "---" : Hi$2(i$18[u$14], i$18[u$14 + 1]) % 2 === 0 ? "***" : "---";
		}
		case "linkReference": return [
			"[",
			j$3(e$4, r$12, t$13),
			"]",
			n$8.referenceType === "full" ? qt$2(n$8) : n$8.referenceType === "collapsed" ? "[]" : ""
		];
		case "imageReference": switch (n$8.referenceType) {
			case "full": return [
				"![",
				n$8.alt || "",
				"]",
				qt$2(n$8)
			];
			default: return [
				"![",
				n$8.alt,
				"]",
				n$8.referenceType === "collapsed" ? "[]" : ""
			];
		}
		case "definition": {
			let i$18 = r$12.proseWrap === "always" ? qr$2 : " ";
			return Ue$1([
				qt$2(n$8),
				":",
				ir$2([
					i$18,
					Tt$3(n$8.url),
					n$8.title === null ? "" : [i$18, Ur$2(n$8.title, r$12, !1)]
				])
			]);
		}
		case "footnote": return [
			"[^",
			j$3(e$4, r$12, t$13),
			"]"
		];
		case "footnoteReference": return Qi$2(n$8);
		case "footnoteDefinition": {
			let i$18 = n$8.children.length === 1 && n$8.children[0].type === "paragraph" && (r$12.proseWrap === "never" || r$12.proseWrap === "preserve" && n$8.children[0].position.start.line === n$8.children[0].position.end.line);
			return [
				Qi$2(n$8),
				": ",
				i$18 ? j$3(e$4, r$12, t$13) : Ue$1([Ae$3(" ".repeat(4), j$3(e$4, r$12, t$13, { processor: ({ isFirst: u$14 }) => u$14 ? Ue$1([_r$2, t$13()]) : t$13() }))])
			];
		}
		case "table": return Mi$1(e$4, r$12, t$13);
		case "tableCell": return j$3(e$4, r$12, t$13);
		case "break": return /\s/u.test(r$12.originalText[n$8.position.start.offset]) ? ["  ", _e$3(nr$3)] : ["\\", L$2];
		case "liquidNode": return be$2(n$8.value, L$2);
		case "import":
		case "export":
		case "jsx": return n$8.value;
		case "esComment": return [
			"{/* ",
			n$8.value,
			" */}"
		];
		case "math": return [
			"$$",
			L$2,
			n$8.value ? [be$2(n$8.value, L$2), L$2] : "",
			"$$"
		];
		case "inlineMath": return r$12.originalText.slice(Pe$3(n$8), Oe$2(n$8));
		case "tableRow":
		case "listItem":
		case "text":
		default: throw new ni$3(n$8, "Markdown");
	}
}
function Wi$2(e$4, r$12, t$13, n$8) {
	let { node: a$13 } = e$4, i$18 = a$13.checked === null ? "" : a$13.checked ? "[x] " : "[ ] ";
	return [i$18, j$3(e$4, r$12, t$13, { processor({ node: u$14, isFirst: o$9 }) {
		if (o$9 && u$14.type !== "list") return Ae$3(" ".repeat(i$18.length), t$13());
		let s$8 = " ".repeat(Rf$1(r$12.tabWidth - n$8.length, 0, 3));
		return [s$8, Ae$3(s$8, t$13())];
	} })];
}
function qf$1(e$4, r$12) {
	let t$13 = n$8();
	return e$4 + " ".repeat(t$13 >= 4 ? 0 : t$13);
	function n$8() {
		let a$13 = e$4.length % r$12.tabWidth;
		return a$13 === 0 ? 0 : r$12.tabWidth - a$13;
	}
}
function Hi$2(e$4, r$12) {
	return _f$1(e$4, r$12, (t$13) => t$13.ordered === e$4.ordered);
}
function _f$1(e$4, r$12, t$13) {
	let n$8 = -1;
	for (let a$13 of r$12.children) if (a$13.type === e$4.type && t$13(a$13) ? n$8++ : n$8 = -1, a$13 === e$4) return n$8;
}
function Sf$1(e$4, r$12, t$13) {
	let n$8 = [], a$13 = null, { children: i$18 } = e$4.node;
	for (let [u$14, o$9] of i$18.entries()) switch (_t$2(o$9)) {
		case "start":
			a$13 === null && (a$13 = {
				index: u$14,
				offset: o$9.position.end.offset
			});
			break;
		case "end":
			a$13 !== null && (n$8.push({
				start: a$13,
				end: {
					index: u$14,
					offset: o$9.position.start.offset
				}
			}), a$13 = null);
			break;
		default: break;
	}
	return j$3(e$4, r$12, t$13, { processor({ index: u$14 }) {
		if (n$8.length > 0) {
			let o$9 = n$8[0];
			if (u$14 === o$9.start.index) return [
				Ki$2(i$18[o$9.start.index]),
				r$12.originalText.slice(o$9.start.offset, o$9.end.offset),
				Ki$2(i$18[o$9.end.index])
			];
			if (o$9.start.index < u$14 && u$14 < o$9.end.index) return !1;
			if (u$14 === o$9.end.index) return n$8.shift(), !1;
		}
		return t$13();
	} });
}
function j$3(e$4, r$12, t$13, n$8 = {}) {
	let { processor: a$13 = t$13 } = n$8, i$18 = [];
	return e$4.each(() => {
		let u$14 = a$13(e$4);
		u$14 !== !1 && (i$18.length > 0 && Pf$1(e$4) && (i$18.push(L$2), (Of$1(e$4, r$12) || Ji$1(e$4)) && i$18.push(L$2), Ji$1(e$4) && i$18.push(L$2)), i$18.push(u$14));
	}, "children"), i$18;
}
function Ki$2(e$4) {
	if (e$4.type === "html") return e$4.value;
	if (e$4.type === "paragraph" && Array.isArray(e$4.children) && e$4.children.length === 1 && e$4.children[0].type === "esComment") return [
		"{/* ",
		e$4.children[0].value,
		" */}"
	];
}
function _t$2(e$4) {
	let r$12;
	if (e$4.type === "html") r$12 = e$4.value.match(/^<!--\s*prettier-ignore(?:-(start|end))?\s*-->$/u);
	else {
		let t$13;
		e$4.type === "esComment" ? t$13 = e$4 : e$4.type === "paragraph" && e$4.children.length === 1 && e$4.children[0].type === "esComment" && (t$13 = e$4.children[0]), t$13 && (r$12 = t$13.value.match(/^prettier-ignore(?:-(start|end))?$/u));
	}
	return r$12 ? r$12[1] || "next" : !1;
}
function Pf$1({ node: e$4, parent: r$12 }) {
	let t$13 = vt$2.has(e$4.type), n$8 = e$4.type === "html" && Ir$3.has(r$12.type);
	return !t$13 && !n$8;
}
function Xi$2(e$4, r$12) {
	return e$4.type === "listItem" && (e$4.spread || r$12.originalText.charAt(e$4.position.end.offset - 1) === `
`);
}
function Of$1({ node: e$4, previous: r$12, parent: t$13 }, n$8) {
	if (Xi$2(r$12, n$8) || e$4.type === "list" && t$13.type === "listItem" && r$12.type === "code") return !0;
	let i$18 = r$12.type === e$4.type && Bf$1.has(e$4.type), u$14 = t$13.type === "listItem" && (e$4.type === "list" || !Xi$2(t$13, n$8)), o$9 = _t$2(r$12) === "next", s$8 = e$4.type === "html" && r$12.type === "html" && r$12.position.end.line + 1 === e$4.position.start.line, l$10 = e$4.type === "html" && t$13.type === "listItem" && r$12.type === "paragraph" && r$12.position.end.line + 1 === e$4.position.start.line;
	return !(i$18 || u$14 || o$9 || s$8 || l$10);
}
function Ji$1({ node: e$4, previous: r$12 }) {
	let t$13 = r$12.type === "list", n$8 = e$4.type === "code" && e$4.isIndented;
	return t$13 && n$8;
}
function Lf$1(e$4) {
	let r$12 = e$4.findAncestor((t$13) => t$13.type === "linkReference" || t$13.type === "imageReference");
	return r$12 && (r$12.type !== "linkReference" || r$12.referenceType !== "full");
}
var If$1 = (e$4, r$12) => {
	for (let t$13 of r$12) e$4 = R$3(!1, e$4, t$13, encodeURIComponent(t$13));
	return e$4;
};
function Tt$3(e$4, r$12 = []) {
	let t$13 = [" ", ...Array.isArray(r$12) ? r$12 : [r$12]];
	return new RegExp(t$13.map((n$8) => le$3(n$8)).join("|"), "u").test(e$4) ? `<${If$1(e$4, "<>")}>` : e$4;
}
function Ur$2(e$4, r$12, t$13 = !0) {
	if (!e$4) return "";
	if (t$13) return " " + Ur$2(e$4, r$12, !1);
	if (e$4 = R$3(!1, e$4, /\\(?=["')])/gu, ""), e$4.includes("\"") && e$4.includes("'") && !e$4.includes(")")) return `(${e$4})`;
	let n$8 = ti$3(e$4, r$12.singleQuote);
	return e$4 = R$3(!1, e$4, "\\", "\\\\"), e$4 = R$3(!1, e$4, n$8, `\\${n$8}`), `${n$8}${e$4}${n$8}`;
}
function Rf$1(e$4, r$12, t$13) {
	return Math.max(r$12, Math.min(e$4, t$13));
}
function Nf$1(e$4) {
	return e$4.index > 0 && _t$2(e$4.previous) === "next";
}
function qt$2(e$4) {
	return `[${(0, Zi$2.default)(e$4.label)}]`;
}
function Qi$2(e$4) {
	return `[^${e$4.label}]`;
}
var Mf$1 = {
	preprocess: Gi$2,
	print: Tf$1,
	embed: Bi$1,
	massageAstNode: Di,
	hasPrettierIgnore: Nf$1,
	insertPragma: ci$2,
	getVisitorKeys: _i$2
}, eu$1 = Mf$1;
var ru$1 = [{
	name: "Markdown",
	type: "prose",
	extensions: [
		".md",
		".livemd",
		".markdown",
		".mdown",
		".mdwn",
		".mkd",
		".mkdn",
		".mkdown",
		".ronn",
		".scd",
		".workbook"
	],
	tmScope: "text.md",
	aceMode: "markdown",
	aliases: ["md", "pandoc"],
	codemirrorMode: "gfm",
	codemirrorMimeType: "text/x-gfm",
	filenames: ["contents.lr", "README"],
	wrap: !0,
	parsers: ["markdown"],
	vscodeLanguageIds: ["markdown"],
	linguistLanguageId: 222
}, {
	name: "MDX",
	type: "prose",
	extensions: [".mdx"],
	tmScope: "text.md",
	aceMode: "markdown",
	aliases: ["md", "pandoc"],
	codemirrorMode: "gfm",
	codemirrorMimeType: "text/x-gfm",
	filenames: [],
	wrap: !0,
	parsers: ["mdx"],
	vscodeLanguageIds: ["mdx"],
	linguistLanguageId: 222
}];
var St$1 = {
	bracketSpacing: {
		category: "Common",
		type: "boolean",
		default: !0,
		description: "Print spaces between brackets.",
		oppositeDescription: "Do not print spaces between brackets."
	},
	objectWrap: {
		category: "Common",
		type: "choice",
		default: "preserve",
		description: "How to wrap object literals.",
		choices: [{
			value: "preserve",
			description: "Keep as multi-line, if there is a newline between the opening brace and first property."
		}, {
			value: "collapse",
			description: "Fit to a single line when possible."
		}]
	},
	singleQuote: {
		category: "Common",
		type: "boolean",
		default: !1,
		description: "Use single quotes instead of double quotes."
	},
	proseWrap: {
		category: "Common",
		type: "choice",
		default: "preserve",
		description: "How to wrap prose.",
		choices: [
			{
				value: "always",
				description: "Wrap prose if it exceeds the print width."
			},
			{
				value: "never",
				description: "Do not wrap prose."
			},
			{
				value: "preserve",
				description: "Wrap prose as-is."
			}
		]
	},
	bracketSameLine: {
		category: "Common",
		type: "boolean",
		default: !1,
		description: "Put > of opening tags on the last line instead of on a new line."
	},
	singleAttributePerLine: {
		category: "Common",
		type: "boolean",
		default: !1,
		description: "Enforce single attribute per line in HTML, Vue and JSX."
	}
};
var Uf$1 = {
	proseWrap: St$1.proseWrap,
	singleQuote: St$1.singleQuote
}, tu$2 = Uf$1;
var zn$3 = {};
$n$2(zn$3, {
	markdown: () => tF,
	mdx: () => nF,
	remark: () => tF
});
var gl$2 = Me$2(iu$1(), 1), El$2 = Me$2(gu$1(), 1), vl$2 = Me$2(pc$1(), 1), Cl$2 = Me$2(al$2(), 1);
var Hm$1 = /^import\s/u, Km$1 = /^export\s/u, ol$2 = String.raw`[a-z][a-z0-9]*(\.[a-z][a-z0-9]*)*|`, sl$2 = /<!---->|<!---?[^>-](?:-?[^-])*-->/u, Xm$1 = /^\{\s*\/\*(.*)\*\/\s*\}/u, Jm$1 = `

`, cl$2 = (e$4) => Hm$1.test(e$4), Un$3 = (e$4) => Km$1.test(e$4), ll$2 = (e$4, r$12) => {
	let t$13 = r$12.indexOf(Jm$1), n$8 = r$12.slice(0, t$13);
	if (Un$3(n$8) || cl$2(n$8)) return e$4(n$8)({
		type: Un$3(n$8) ? "export" : "import",
		value: n$8
	});
}, fl$2 = (e$4, r$12) => {
	let t$13 = Xm$1.exec(r$12);
	if (t$13) return e$4(t$13[0])({
		type: "esComment",
		value: t$13[1].trim()
	});
};
ll$2.locator = (e$4) => Un$3(e$4) || cl$2(e$4) ? -1 : 1;
fl$2.locator = (e$4, r$12) => e$4.indexOf("{", r$12);
var Dl$2 = function() {
	let { Parser: e$4 } = this, { blockTokenizers: r$12, blockMethods: t$13, inlineTokenizers: n$8, inlineMethods: a$13 } = e$4.prototype;
	r$12.esSyntax = ll$2, n$8.esComment = fl$2, t$13.splice(t$13.indexOf("paragraph"), 0, "esSyntax"), a$13.splice(a$13.indexOf("text"), 0, "esComment");
};
var Qm$1 = function() {
	let e$4 = this.Parser.prototype;
	e$4.blockMethods = ["frontMatter", ...e$4.blockMethods], e$4.blockTokenizers.frontMatter = r$12;
	function r$12(t$13, n$8) {
		let a$13 = Ge$2(n$8);
		if (a$13.frontMatter) return t$13(a$13.frontMatter.raw)(a$13.frontMatter);
	}
	r$12.onlyAtStart = !0;
}, pl$2 = Qm$1;
function Zm$1() {
	return (e$4) => ye$2(e$4, (r$12, t$13, [n$8]) => r$12.type !== "html" || sl$2.test(r$12.value) || Ir$3.has(n$8.type) ? r$12 : {
		...r$12,
		type: "jsx"
	});
}
var hl$2 = Zm$1;
var eF = function() {
	let e$4 = this.Parser.prototype, r$12 = e$4.inlineMethods;
	r$12.splice(r$12.indexOf("text"), 0, "liquid"), e$4.inlineTokenizers.liquid = t$13;
	function t$13(n$8, a$13) {
		let i$18 = a$13.match(/^(\{%.*?%\}|\{\{.*?\}\})/su);
		if (i$18) return n$8(i$18[0])({
			type: "liquidNode",
			value: i$18[0]
		});
	}
	t$13.locator = function(n$8, a$13) {
		return n$8.indexOf("{", a$13);
	};
}, dl$2 = eF;
var rF = function() {
	let e$4 = "wikiLink", r$12 = /^\[\[(?<linkContents>.+?)\]\]/su, t$13 = this.Parser.prototype, n$8 = t$13.inlineMethods;
	n$8.splice(n$8.indexOf("link"), 0, e$4), t$13.inlineTokenizers.wikiLink = a$13;
	function a$13(i$18, u$14) {
		let o$9 = r$12.exec(u$14);
		if (o$9) {
			let s$8 = o$9.groups.linkContents.trim();
			return i$18(o$9[0])({
				type: e$4,
				value: s$8
			});
		}
	}
	a$13.locator = function(i$18, u$14) {
		return i$18.indexOf("[", u$14);
	};
}, ml$2 = rF;
function bl$2({ isMDX: e$4 }) {
	return (r$12) => {
		let t$13 = (0, Cl$2.default)().use(vl$2.default, {
			commonmark: !0,
			...e$4 && { blocks: [ol$2] }
		}).use(gl$2.default).use(pl$2).use(El$2.default).use(e$4 ? Dl$2 : Fl$1).use(dl$2).use(e$4 ? hl$2 : Fl$1).use(ml$2);
		return t$13.run(t$13.parse(r$12));
	};
}
function Fl$1() {}
var Al$2 = {
	astFormat: "mdast",
	hasPragma: oi$2,
	hasIgnorePragma: si$2,
	locStart: Pe$3,
	locEnd: Oe$2
}, tF = {
	...Al$2,
	parse: bl$2({ isMDX: !1 })
}, nF = {
	...Al$2,
	parse: bl$2({ isMDX: !0 })
};
var iF = { mdast: eu$1 };
var p2 = Gn$3;

//#endregion
//#region node_modules/.pnpm/prettier@3.6.2_patch_hash=2c5fac0fd268a2b2ab314d9e790cb805e3eb5e35106fc2644635eb6950a6ec1f/node_modules/prettier/plugins/postcss.mjs
var xl$1 = Object.create;
var Wr$2 = Object.defineProperty;
var bl$1 = Object.getOwnPropertyDescriptor;
var _l$1 = Object.getOwnPropertyNames;
var El$1 = Object.getPrototypeOf, kl$1 = Object.prototype.hasOwnProperty;
var g$1 = (t$13, e$4) => () => (e$4 || t$13((e$4 = { exports: {} }).exports, e$4), e$4.exports), rn$3 = (t$13, e$4) => {
	for (var s$8 in e$4) Wr$2(t$13, s$8, {
		get: e$4[s$8],
		enumerable: !0
	});
}, Sl$1 = (t$13, e$4, s$8, r$12) => {
	if (e$4 && typeof e$4 == "object" || typeof e$4 == "function") for (let n$8 of _l$1(e$4)) !kl$1.call(t$13, n$8) && n$8 !== s$8 && Wr$2(t$13, n$8, {
		get: () => e$4[n$8],
		enumerable: !(r$12 = bl$1(e$4, n$8)) || r$12.enumerable
	});
	return t$13;
};
var be$1 = (t$13, e$4, s$8) => (s$8 = t$13 != null ? xl$1(El$1(t$13)) : {}, Sl$1(e$4 || !t$13 || !t$13.__esModule ? Wr$2(s$8, "default", {
	value: t$13,
	enumerable: !0
}) : s$8, t$13));
var Oi$1 = g$1((Pv$1, is$2) => {
	var _$2 = String, Ti$4 = function() {
		return {
			isColorSupported: !1,
			reset: _$2,
			bold: _$2,
			dim: _$2,
			italic: _$2,
			underline: _$2,
			inverse: _$2,
			hidden: _$2,
			strikethrough: _$2,
			black: _$2,
			red: _$2,
			green: _$2,
			yellow: _$2,
			blue: _$2,
			magenta: _$2,
			cyan: _$2,
			white: _$2,
			gray: _$2,
			bgBlack: _$2,
			bgRed: _$2,
			bgGreen: _$2,
			bgYellow: _$2,
			bgBlue: _$2,
			bgMagenta: _$2,
			bgCyan: _$2,
			bgWhite: _$2,
			blackBright: _$2,
			redBright: _$2,
			greenBright: _$2,
			yellowBright: _$2,
			blueBright: _$2,
			magentaBright: _$2,
			cyanBright: _$2,
			whiteBright: _$2,
			bgBlackBright: _$2,
			bgRedBright: _$2,
			bgGreenBright: _$2,
			bgYellowBright: _$2,
			bgBlueBright: _$2,
			bgMagentaBright: _$2,
			bgCyanBright: _$2,
			bgWhiteBright: _$2
		};
	};
	is$2.exports = Ti$4();
	is$2.exports.createColors = Ti$4;
});
var os = g$1(() => {});
var Gt$1 = g$1((qv$1, Ni$4) => {
	var Ci$5 = Oi$1(), Ai$5 = os(), at$4 = class t$13 extends Error {
		constructor(e$4, s$8, r$12, n$8, i$18, o$9) {
			super(e$4), this.name = "CssSyntaxError", this.reason = e$4, i$18 && (this.file = i$18), n$8 && (this.source = n$8), o$9 && (this.plugin = o$9), typeof s$8 < "u" && typeof r$12 < "u" && (typeof s$8 == "number" ? (this.line = s$8, this.column = r$12) : (this.line = s$8.line, this.column = s$8.column, this.endLine = r$12.line, this.endColumn = r$12.column)), this.setMessage(), Error.captureStackTrace && Error.captureStackTrace(this, t$13);
		}
		setMessage() {
			this.message = this.plugin ? this.plugin + ": " : "", this.message += this.file ? this.file : "<css input>", typeof this.line < "u" && (this.message += ":" + this.line + ":" + this.column), this.message += ": " + this.reason;
		}
		showSourceCode(e$4) {
			if (!this.source) return "";
			let s$8 = this.source;
			e$4 ??= Ci$5.isColorSupported;
			let r$12 = (f$3) => f$3, n$8 = (f$3) => f$3, i$18 = (f$3) => f$3;
			if (e$4) {
				let { bold: f$3, gray: p$2, red: l$10 } = Ci$5.createColors(!0);
				n$8 = (d$14) => f$3(l$10(d$14)), r$12 = (d$14) => p$2(d$14), Ai$5 && (i$18 = (d$14) => Ai$5(d$14));
			}
			let o$9 = s$8.split(/\r?\n/), u$14 = Math.max(this.line - 3, 0), a$13 = Math.min(this.line + 2, o$9.length), c$3 = String(a$13).length;
			return o$9.slice(u$14, a$13).map((f$3, p$2) => {
				let l$10 = u$14 + 1 + p$2, d$14 = " " + (" " + l$10).slice(-c$3) + " | ";
				if (l$10 === this.line) {
					if (f$3.length > 160) {
						let h$3 = 20, m$11 = Math.max(0, this.column - h$3), y$7 = Math.max(this.column + h$3, this.endColumn + h$3), b$7 = f$3.slice(m$11, y$7), w$3 = r$12(d$14.replace(/\d/g, " ")) + f$3.slice(0, Math.min(this.column - 1, h$3 - 1)).replace(/[^\t]/g, " ");
						return n$8(">") + r$12(d$14) + i$18(b$7) + `
 ` + w$3 + n$8("^");
					}
					let x$3 = r$12(d$14.replace(/\d/g, " ")) + f$3.slice(0, this.column - 1).replace(/[^\t]/g, " ");
					return n$8(">") + r$12(d$14) + i$18(f$3) + `
 ` + x$3 + n$8("^");
				}
				return " " + r$12(d$14) + i$18(f$3);
			}).join(`
`);
		}
		toString() {
			let e$4 = this.showSourceCode();
			return e$4 && (e$4 = `

` + e$4 + `
`), this.name + ": " + this.message + e$4;
		}
	};
	Ni$4.exports = at$4;
	at$4.default = at$4;
});
var Yt$1 = g$1((Lv$1, Ri$4) => {
	var Pi$5 = {
		after: `
`,
		beforeClose: `
`,
		beforeComment: `
`,
		beforeDecl: `
`,
		beforeOpen: " ",
		beforeRule: `
`,
		colon: ": ",
		commentLeft: " ",
		commentRight: " ",
		emptyBody: "",
		indent: "    ",
		semicolon: !1
	};
	function Sc$1(t$13) {
		return t$13[0].toUpperCase() + t$13.slice(1);
	}
	var ut$4 = class {
		constructor(e$4) {
			this.builder = e$4;
		}
		atrule(e$4, s$8) {
			let r$12 = "@" + e$4.name, n$8 = e$4.params ? this.rawValue(e$4, "params") : "";
			if (typeof e$4.raws.afterName < "u" ? r$12 += e$4.raws.afterName : n$8 && (r$12 += " "), e$4.nodes) this.block(e$4, r$12 + n$8);
			else {
				let i$18 = (e$4.raws.between || "") + (s$8 ? ";" : "");
				this.builder(r$12 + n$8 + i$18, e$4);
			}
		}
		beforeAfter(e$4, s$8) {
			let r$12;
			e$4.type === "decl" ? r$12 = this.raw(e$4, null, "beforeDecl") : e$4.type === "comment" ? r$12 = this.raw(e$4, null, "beforeComment") : s$8 === "before" ? r$12 = this.raw(e$4, null, "beforeRule") : r$12 = this.raw(e$4, null, "beforeClose");
			let n$8 = e$4.parent, i$18 = 0;
			for (; n$8 && n$8.type !== "root";) i$18 += 1, n$8 = n$8.parent;
			if (r$12.includes(`
`)) {
				let o$9 = this.raw(e$4, null, "indent");
				if (o$9.length) for (let u$14 = 0; u$14 < i$18; u$14++) r$12 += o$9;
			}
			return r$12;
		}
		block(e$4, s$8) {
			let r$12 = this.raw(e$4, "between", "beforeOpen");
			this.builder(s$8 + r$12 + "{", e$4, "start");
			let n$8;
			e$4.nodes && e$4.nodes.length ? (this.body(e$4), n$8 = this.raw(e$4, "after")) : n$8 = this.raw(e$4, "after", "emptyBody"), n$8 && this.builder(n$8), this.builder("}", e$4, "end");
		}
		body(e$4) {
			let s$8 = e$4.nodes.length - 1;
			for (; s$8 > 0 && e$4.nodes[s$8].type === "comment";) s$8 -= 1;
			let r$12 = this.raw(e$4, "semicolon");
			for (let n$8 = 0; n$8 < e$4.nodes.length; n$8++) {
				let i$18 = e$4.nodes[n$8], o$9 = this.raw(i$18, "before");
				o$9 && this.builder(o$9), this.stringify(i$18, s$8 !== n$8 || r$12);
			}
		}
		comment(e$4) {
			let s$8 = this.raw(e$4, "left", "commentLeft"), r$12 = this.raw(e$4, "right", "commentRight");
			this.builder("/*" + s$8 + e$4.text + r$12 + "*/", e$4);
		}
		decl(e$4, s$8) {
			let r$12 = this.raw(e$4, "between", "colon"), n$8 = e$4.prop + r$12 + this.rawValue(e$4, "value");
			e$4.important && (n$8 += e$4.raws.important || " !important"), s$8 && (n$8 += ";"), this.builder(n$8, e$4);
		}
		document(e$4) {
			this.body(e$4);
		}
		raw(e$4, s$8, r$12) {
			let n$8;
			if (r$12 || (r$12 = s$8), s$8 && (n$8 = e$4.raws[s$8], typeof n$8 < "u")) return n$8;
			let i$18 = e$4.parent;
			if (r$12 === "before" && (!i$18 || i$18.type === "root" && i$18.first === e$4 || i$18 && i$18.type === "document")) return "";
			if (!i$18) return Pi$5[r$12];
			let o$9 = e$4.root();
			if (o$9.rawCache || (o$9.rawCache = {}), typeof o$9.rawCache[r$12] < "u") return o$9.rawCache[r$12];
			if (r$12 === "before" || r$12 === "after") return this.beforeAfter(e$4, r$12);
			{
				let u$14 = "raw" + Sc$1(r$12);
				this[u$14] ? n$8 = this[u$14](o$9, e$4) : o$9.walk((a$13) => {
					if (n$8 = a$13.raws[s$8], typeof n$8 < "u") return !1;
				});
			}
			return typeof n$8 > "u" && (n$8 = Pi$5[r$12]), o$9.rawCache[r$12] = n$8, n$8;
		}
		rawBeforeClose(e$4) {
			let s$8;
			return e$4.walk((r$12) => {
				if (r$12.nodes && r$12.nodes.length > 0 && typeof r$12.raws.after < "u") return s$8 = r$12.raws.after, s$8.includes(`
`) && (s$8 = s$8.replace(/[^\n]+$/, "")), !1;
			}), s$8 && (s$8 = s$8.replace(/\S/g, "")), s$8;
		}
		rawBeforeComment(e$4, s$8) {
			let r$12;
			return e$4.walkComments((n$8) => {
				if (typeof n$8.raws.before < "u") return r$12 = n$8.raws.before, r$12.includes(`
`) && (r$12 = r$12.replace(/[^\n]+$/, "")), !1;
			}), typeof r$12 > "u" ? r$12 = this.raw(s$8, null, "beforeDecl") : r$12 && (r$12 = r$12.replace(/\S/g, "")), r$12;
		}
		rawBeforeDecl(e$4, s$8) {
			let r$12;
			return e$4.walkDecls((n$8) => {
				if (typeof n$8.raws.before < "u") return r$12 = n$8.raws.before, r$12.includes(`
`) && (r$12 = r$12.replace(/[^\n]+$/, "")), !1;
			}), typeof r$12 > "u" ? r$12 = this.raw(s$8, null, "beforeRule") : r$12 && (r$12 = r$12.replace(/\S/g, "")), r$12;
		}
		rawBeforeOpen(e$4) {
			let s$8;
			return e$4.walk((r$12) => {
				if (r$12.type !== "decl" && (s$8 = r$12.raws.between, typeof s$8 < "u")) return !1;
			}), s$8;
		}
		rawBeforeRule(e$4) {
			let s$8;
			return e$4.walk((r$12) => {
				if (r$12.nodes && (r$12.parent !== e$4 || e$4.first !== r$12) && typeof r$12.raws.before < "u") return s$8 = r$12.raws.before, s$8.includes(`
`) && (s$8 = s$8.replace(/[^\n]+$/, "")), !1;
			}), s$8 && (s$8 = s$8.replace(/\S/g, "")), s$8;
		}
		rawColon(e$4) {
			let s$8;
			return e$4.walkDecls((r$12) => {
				if (typeof r$12.raws.between < "u") return s$8 = r$12.raws.between.replace(/[^\s:]/g, ""), !1;
			}), s$8;
		}
		rawEmptyBody(e$4) {
			let s$8;
			return e$4.walk((r$12) => {
				if (r$12.nodes && r$12.nodes.length === 0 && (s$8 = r$12.raws.after, typeof s$8 < "u")) return !1;
			}), s$8;
		}
		rawIndent(e$4) {
			if (e$4.raws.indent) return e$4.raws.indent;
			let s$8;
			return e$4.walk((r$12) => {
				let n$8 = r$12.parent;
				if (n$8 && n$8 !== e$4 && n$8.parent && n$8.parent === e$4 && typeof r$12.raws.before < "u") {
					let i$18 = r$12.raws.before.split(`
`);
					return s$8 = i$18[i$18.length - 1], s$8 = s$8.replace(/\S/g, ""), !1;
				}
			}), s$8;
		}
		rawSemicolon(e$4) {
			let s$8;
			return e$4.walk((r$12) => {
				if (r$12.nodes && r$12.nodes.length && r$12.last.type === "decl" && (s$8 = r$12.raws.semicolon, typeof s$8 < "u")) return !1;
			}), s$8;
		}
		rawValue(e$4, s$8) {
			let r$12 = e$4[s$8], n$8 = e$4.raws[s$8];
			return n$8 && n$8.value === r$12 ? n$8.raw : r$12;
		}
		root(e$4) {
			this.body(e$4), e$4.raws.after && this.builder(e$4.raws.after);
		}
		rule(e$4) {
			this.block(e$4, this.rawValue(e$4, "selector")), e$4.raws.ownSemicolon && this.builder(e$4.raws.ownSemicolon, e$4, "end");
		}
		stringify(e$4, s$8) {
			if (!this[e$4.type]) throw new Error("Unknown AST node type " + e$4.type + ". Maybe you need to change PostCSS stringifier.");
			this[e$4.type](e$4, s$8);
		}
	};
	Ri$4.exports = ut$4;
	ut$4.default = ut$4;
});
var lt$1 = g$1((Dv$1, Ii$4) => {
	var Tc$2 = Yt$1();
	function as$2(t$13, e$4) {
		new Tc$2(e$4).stringify(t$13);
	}
	Ii$4.exports = as$2;
	as$2.default = as$2;
});
var Vt$2 = g$1((Mv$1, us$2) => {
	us$2.exports.isClean = Symbol("isClean");
	us$2.exports.my = Symbol("my");
});
var pt$1 = g$1((Bv$1, qi$3) => {
	var Oc$2 = Gt$1(), Cc$1 = Yt$1(), Ac$1 = lt$1(), { isClean: ct$4, my: Nc$2 } = Vt$2();
	function ls$3(t$13, e$4) {
		let s$8 = new t$13.constructor();
		for (let r$12 in t$13) {
			if (!Object.prototype.hasOwnProperty.call(t$13, r$12) || r$12 === "proxyCache") continue;
			let n$8 = t$13[r$12], i$18 = typeof n$8;
			r$12 === "parent" && i$18 === "object" ? e$4 && (s$8[r$12] = e$4) : r$12 === "source" ? s$8[r$12] = n$8 : Array.isArray(n$8) ? s$8[r$12] = n$8.map((o$9) => ls$3(o$9, s$8)) : (i$18 === "object" && n$8 !== null && (n$8 = ls$3(n$8)), s$8[r$12] = n$8);
		}
		return s$8;
	}
	function J$4(t$13, e$4) {
		if (e$4 && typeof e$4.offset < "u") return e$4.offset;
		let s$8 = 1, r$12 = 1, n$8 = 0;
		for (let i$18 = 0; i$18 < t$13.length; i$18++) {
			if (r$12 === e$4.line && s$8 === e$4.column) {
				n$8 = i$18;
				break;
			}
			t$13[i$18] === `
` ? (s$8 = 1, r$12 += 1) : s$8 += 1;
		}
		return n$8;
	}
	var ft$4 = class {
		get proxyOf() {
			return this;
		}
		constructor(e$4 = {}) {
			this.raws = {}, this[ct$4] = !1, this[Nc$2] = !0;
			for (let s$8 in e$4) if (s$8 === "nodes") {
				this.nodes = [];
				for (let r$12 of e$4[s$8]) typeof r$12.clone == "function" ? this.append(r$12.clone()) : this.append(r$12);
			} else this[s$8] = e$4[s$8];
		}
		addToError(e$4) {
			if (e$4.postcssNode = this, e$4.stack && this.source && /\n\s{4}at /.test(e$4.stack)) {
				let s$8 = this.source;
				e$4.stack = e$4.stack.replace(/\n\s{4}at /, `$&${s$8.input.from}:${s$8.start.line}:${s$8.start.column}$&`);
			}
			return e$4;
		}
		after(e$4) {
			return this.parent.insertAfter(this, e$4), this;
		}
		assign(e$4 = {}) {
			for (let s$8 in e$4) this[s$8] = e$4[s$8];
			return this;
		}
		before(e$4) {
			return this.parent.insertBefore(this, e$4), this;
		}
		cleanRaws(e$4) {
			delete this.raws.before, delete this.raws.after, e$4 || delete this.raws.between;
		}
		clone(e$4 = {}) {
			let s$8 = ls$3(this);
			for (let r$12 in e$4) s$8[r$12] = e$4[r$12];
			return s$8;
		}
		cloneAfter(e$4 = {}) {
			let s$8 = this.clone(e$4);
			return this.parent.insertAfter(this, s$8), s$8;
		}
		cloneBefore(e$4 = {}) {
			let s$8 = this.clone(e$4);
			return this.parent.insertBefore(this, s$8), s$8;
		}
		error(e$4, s$8 = {}) {
			if (this.source) {
				let { end: r$12, start: n$8 } = this.rangeBy(s$8);
				return this.source.input.error(e$4, {
					column: n$8.column,
					line: n$8.line
				}, {
					column: r$12.column,
					line: r$12.line
				}, s$8);
			}
			return new Oc$2(e$4);
		}
		getProxyProcessor() {
			return {
				get(e$4, s$8) {
					return s$8 === "proxyOf" ? e$4 : s$8 === "root" ? () => e$4.root().toProxy() : e$4[s$8];
				},
				set(e$4, s$8, r$12) {
					return e$4[s$8] === r$12 || (e$4[s$8] = r$12, (s$8 === "prop" || s$8 === "value" || s$8 === "name" || s$8 === "params" || s$8 === "important" || s$8 === "text") && e$4.markDirty()), !0;
				}
			};
		}
		markClean() {
			this[ct$4] = !0;
		}
		markDirty() {
			if (this[ct$4]) {
				this[ct$4] = !1;
				let e$4 = this;
				for (; e$4 = e$4.parent;) e$4[ct$4] = !1;
			}
		}
		next() {
			if (!this.parent) return;
			let e$4 = this.parent.index(this);
			return this.parent.nodes[e$4 + 1];
		}
		positionBy(e$4 = {}) {
			let s$8 = this.source.start;
			if (e$4.index) s$8 = this.positionInside(e$4.index);
			else if (e$4.word) {
				let r$12 = "document" in this.source.input ? this.source.input.document : this.source.input.css, i$18 = r$12.slice(J$4(r$12, this.source.start), J$4(r$12, this.source.end)).indexOf(e$4.word);
				i$18 !== -1 && (s$8 = this.positionInside(i$18));
			}
			return s$8;
		}
		positionInside(e$4) {
			let s$8 = this.source.start.column, r$12 = this.source.start.line, n$8 = "document" in this.source.input ? this.source.input.document : this.source.input.css, i$18 = J$4(n$8, this.source.start), o$9 = i$18 + e$4;
			for (let u$14 = i$18; u$14 < o$9; u$14++) n$8[u$14] === `
` ? (s$8 = 1, r$12 += 1) : s$8 += 1;
			return {
				column: s$8,
				line: r$12,
				offset: o$9
			};
		}
		prev() {
			if (!this.parent) return;
			let e$4 = this.parent.index(this);
			return this.parent.nodes[e$4 - 1];
		}
		rangeBy(e$4 = {}) {
			let s$8 = "document" in this.source.input ? this.source.input.document : this.source.input.css, r$12 = {
				column: this.source.start.column,
				line: this.source.start.line,
				offset: J$4(s$8, this.source.start)
			}, n$8 = this.source.end ? {
				column: this.source.end.column + 1,
				line: this.source.end.line,
				offset: typeof this.source.end.offset == "number" ? this.source.end.offset : J$4(s$8, this.source.end) + 1
			} : {
				column: r$12.column + 1,
				line: r$12.line,
				offset: r$12.offset + 1
			};
			if (e$4.word) {
				let o$9 = s$8.slice(J$4(s$8, this.source.start), J$4(s$8, this.source.end)).indexOf(e$4.word);
				o$9 !== -1 && (r$12 = this.positionInside(o$9), n$8 = this.positionInside(o$9 + e$4.word.length));
			} else e$4.start ? r$12 = {
				column: e$4.start.column,
				line: e$4.start.line,
				offset: J$4(s$8, e$4.start)
			} : e$4.index && (r$12 = this.positionInside(e$4.index)), e$4.end ? n$8 = {
				column: e$4.end.column,
				line: e$4.end.line,
				offset: J$4(s$8, e$4.end)
			} : typeof e$4.endIndex == "number" ? n$8 = this.positionInside(e$4.endIndex) : e$4.index && (n$8 = this.positionInside(e$4.index + 1));
			return (n$8.line < r$12.line || n$8.line === r$12.line && n$8.column <= r$12.column) && (n$8 = {
				column: r$12.column + 1,
				line: r$12.line,
				offset: r$12.offset + 1
			}), {
				end: n$8,
				start: r$12
			};
		}
		raw(e$4, s$8) {
			return new Cc$1().raw(this, e$4, s$8);
		}
		remove() {
			return this.parent && this.parent.removeChild(this), this.parent = void 0, this;
		}
		replaceWith(...e$4) {
			if (this.parent) {
				let s$8 = this, r$12 = !1;
				for (let n$8 of e$4) n$8 === this ? r$12 = !0 : r$12 ? (this.parent.insertAfter(s$8, n$8), s$8 = n$8) : this.parent.insertBefore(s$8, n$8);
				r$12 || this.remove();
			}
			return this;
		}
		root() {
			let e$4 = this;
			for (; e$4.parent && e$4.parent.type !== "document";) e$4 = e$4.parent;
			return e$4;
		}
		toJSON(e$4, s$8) {
			let r$12 = {}, n$8 = s$8 == null;
			s$8 = s$8 || /* @__PURE__ */ new Map();
			let i$18 = 0;
			for (let o$9 in this) {
				if (!Object.prototype.hasOwnProperty.call(this, o$9) || o$9 === "parent" || o$9 === "proxyCache") continue;
				let u$14 = this[o$9];
				if (Array.isArray(u$14)) r$12[o$9] = u$14.map((a$13) => typeof a$13 == "object" && a$13.toJSON ? a$13.toJSON(null, s$8) : a$13);
				else if (typeof u$14 == "object" && u$14.toJSON) r$12[o$9] = u$14.toJSON(null, s$8);
				else if (o$9 === "source") {
					if (u$14 == null) continue;
					let a$13 = s$8.get(u$14.input);
					a$13 ?? (a$13 = i$18, s$8.set(u$14.input, i$18), i$18++), r$12[o$9] = {
						end: u$14.end,
						inputId: a$13,
						start: u$14.start
					};
				} else r$12[o$9] = u$14;
			}
			return n$8 && (r$12.inputs = [...s$8.keys()].map((o$9) => o$9.toJSON())), r$12;
		}
		toProxy() {
			return this.proxyCache || (this.proxyCache = new Proxy(this, this.getProxyProcessor())), this.proxyCache;
		}
		toString(e$4 = Ac$1) {
			e$4.stringify && (e$4 = e$4.stringify);
			let s$8 = "";
			return e$4(this, (r$12) => {
				s$8 += r$12;
			}), s$8;
		}
		warn(e$4, s$8, r$12 = {}) {
			let n$8 = { node: this };
			for (let i$18 in r$12) n$8[i$18] = r$12[i$18];
			return e$4.warn(s$8, n$8);
		}
	};
	qi$3.exports = ft$4;
	ft$4.default = ft$4;
});
var qe$2 = g$1((Uv$1, Li$4) => {
	var Pc$1 = pt$1(), ht$4 = class extends Pc$1 {
		constructor(e$4) {
			super(e$4), this.type = "comment";
		}
	};
	Li$4.exports = ht$4;
	ht$4.default = ht$4;
});
var mt$1 = g$1((Fv, Di$3) => {
	var Rc$1 = pt$1(), dt$3 = class extends Rc$1 {
		get variable() {
			return this.prop.startsWith("--") || this.prop[0] === "$";
		}
		constructor(e$4) {
			e$4 && typeof e$4.value < "u" && typeof e$4.value != "string" && (e$4 = {
				...e$4,
				value: String(e$4.value)
			}), super(e$4), this.type = "decl";
		}
	};
	Di$3.exports = dt$3;
	dt$3.default = dt$3;
});
var le$2 = g$1(($v, Vi$5) => {
	var Mi$4 = qe$2(), Bi$4 = mt$1(), Ic$1 = pt$1(), { isClean: Ui$4, my: Fi$4 } = Vt$2(), cs$2, $i$5, Wi$5, fs$3;
	function Gi$5(t$13) {
		return t$13.map((e$4) => (e$4.nodes && (e$4.nodes = Gi$5(e$4.nodes)), delete e$4.source, e$4));
	}
	function Yi$5(t$13) {
		if (t$13[Ui$4] = !1, t$13.proxyOf.nodes) for (let e$4 of t$13.proxyOf.nodes) Yi$5(e$4);
	}
	var V$5 = class t$13 extends Ic$1 {
		get first() {
			if (this.proxyOf.nodes) return this.proxyOf.nodes[0];
		}
		get last() {
			if (this.proxyOf.nodes) return this.proxyOf.nodes[this.proxyOf.nodes.length - 1];
		}
		append(...e$4) {
			for (let s$8 of e$4) {
				let r$12 = this.normalize(s$8, this.last);
				for (let n$8 of r$12) this.proxyOf.nodes.push(n$8);
			}
			return this.markDirty(), this;
		}
		cleanRaws(e$4) {
			if (super.cleanRaws(e$4), this.nodes) for (let s$8 of this.nodes) s$8.cleanRaws(e$4);
		}
		each(e$4) {
			if (!this.proxyOf.nodes) return;
			let s$8 = this.getIterator(), r$12, n$8;
			for (; this.indexes[s$8] < this.proxyOf.nodes.length && (r$12 = this.indexes[s$8], n$8 = e$4(this.proxyOf.nodes[r$12], r$12), n$8 !== !1);) this.indexes[s$8] += 1;
			return delete this.indexes[s$8], n$8;
		}
		every(e$4) {
			return this.nodes.every(e$4);
		}
		getIterator() {
			this.lastEach || (this.lastEach = 0), this.indexes || (this.indexes = {}), this.lastEach += 1;
			let e$4 = this.lastEach;
			return this.indexes[e$4] = 0, e$4;
		}
		getProxyProcessor() {
			return {
				get(e$4, s$8) {
					return s$8 === "proxyOf" ? e$4 : e$4[s$8] ? s$8 === "each" || typeof s$8 == "string" && s$8.startsWith("walk") ? (...r$12) => e$4[s$8](...r$12.map((n$8) => typeof n$8 == "function" ? (i$18, o$9) => n$8(i$18.toProxy(), o$9) : n$8)) : s$8 === "every" || s$8 === "some" ? (r$12) => e$4[s$8]((n$8, ...i$18) => r$12(n$8.toProxy(), ...i$18)) : s$8 === "root" ? () => e$4.root().toProxy() : s$8 === "nodes" ? e$4.nodes.map((r$12) => r$12.toProxy()) : s$8 === "first" || s$8 === "last" ? e$4[s$8].toProxy() : e$4[s$8] : e$4[s$8];
				},
				set(e$4, s$8, r$12) {
					return e$4[s$8] === r$12 || (e$4[s$8] = r$12, (s$8 === "name" || s$8 === "params" || s$8 === "selector") && e$4.markDirty()), !0;
				}
			};
		}
		index(e$4) {
			return typeof e$4 == "number" ? e$4 : (e$4.proxyOf && (e$4 = e$4.proxyOf), this.proxyOf.nodes.indexOf(e$4));
		}
		insertAfter(e$4, s$8) {
			let r$12 = this.index(e$4), n$8 = this.normalize(s$8, this.proxyOf.nodes[r$12]).reverse();
			r$12 = this.index(e$4);
			for (let o$9 of n$8) this.proxyOf.nodes.splice(r$12 + 1, 0, o$9);
			let i$18;
			for (let o$9 in this.indexes) i$18 = this.indexes[o$9], r$12 < i$18 && (this.indexes[o$9] = i$18 + n$8.length);
			return this.markDirty(), this;
		}
		insertBefore(e$4, s$8) {
			let r$12 = this.index(e$4), n$8 = r$12 === 0 ? "prepend" : !1, i$18 = this.normalize(s$8, this.proxyOf.nodes[r$12], n$8).reverse();
			r$12 = this.index(e$4);
			for (let u$14 of i$18) this.proxyOf.nodes.splice(r$12, 0, u$14);
			let o$9;
			for (let u$14 in this.indexes) o$9 = this.indexes[u$14], r$12 <= o$9 && (this.indexes[u$14] = o$9 + i$18.length);
			return this.markDirty(), this;
		}
		normalize(e$4, s$8) {
			if (typeof e$4 == "string") e$4 = Gi$5($i$5(e$4).nodes);
			else if (typeof e$4 > "u") e$4 = [];
			else if (Array.isArray(e$4)) {
				e$4 = e$4.slice(0);
				for (let n$8 of e$4) n$8.parent && n$8.parent.removeChild(n$8, "ignore");
			} else if (e$4.type === "root" && this.type !== "document") {
				e$4 = e$4.nodes.slice(0);
				for (let n$8 of e$4) n$8.parent && n$8.parent.removeChild(n$8, "ignore");
			} else if (e$4.type) e$4 = [e$4];
			else if (e$4.prop) {
				if (typeof e$4.value > "u") throw new Error("Value field is missed in node creation");
				typeof e$4.value != "string" && (e$4.value = String(e$4.value)), e$4 = [new Bi$4(e$4)];
			} else if (e$4.selector || e$4.selectors) e$4 = [new fs$3(e$4)];
			else if (e$4.name) e$4 = [new cs$2(e$4)];
			else if (e$4.text) e$4 = [new Mi$4(e$4)];
			else throw new Error("Unknown node type in node creation");
			return e$4.map((n$8) => (n$8[Fi$4] || t$13.rebuild(n$8), n$8 = n$8.proxyOf, n$8.parent && n$8.parent.removeChild(n$8), n$8[Ui$4] && Yi$5(n$8), n$8.raws || (n$8.raws = {}), typeof n$8.raws.before > "u" && s$8 && typeof s$8.raws.before < "u" && (n$8.raws.before = s$8.raws.before.replace(/\S/g, "")), n$8.parent = this.proxyOf, n$8));
		}
		prepend(...e$4) {
			e$4 = e$4.reverse();
			for (let s$8 of e$4) {
				let r$12 = this.normalize(s$8, this.first, "prepend").reverse();
				for (let n$8 of r$12) this.proxyOf.nodes.unshift(n$8);
				for (let n$8 in this.indexes) this.indexes[n$8] = this.indexes[n$8] + r$12.length;
			}
			return this.markDirty(), this;
		}
		push(e$4) {
			return e$4.parent = this, this.proxyOf.nodes.push(e$4), this;
		}
		removeAll() {
			for (let e$4 of this.proxyOf.nodes) e$4.parent = void 0;
			return this.proxyOf.nodes = [], this.markDirty(), this;
		}
		removeChild(e$4) {
			e$4 = this.index(e$4), this.proxyOf.nodes[e$4].parent = void 0, this.proxyOf.nodes.splice(e$4, 1);
			let s$8;
			for (let r$12 in this.indexes) s$8 = this.indexes[r$12], s$8 >= e$4 && (this.indexes[r$12] = s$8 - 1);
			return this.markDirty(), this;
		}
		replaceValues(e$4, s$8, r$12) {
			return r$12 || (r$12 = s$8, s$8 = {}), this.walkDecls((n$8) => {
				s$8.props && !s$8.props.includes(n$8.prop) || s$8.fast && !n$8.value.includes(s$8.fast) || (n$8.value = n$8.value.replace(e$4, r$12));
			}), this.markDirty(), this;
		}
		some(e$4) {
			return this.nodes.some(e$4);
		}
		walk(e$4) {
			return this.each((s$8, r$12) => {
				let n$8;
				try {
					n$8 = e$4(s$8, r$12);
				} catch (i$18) {
					throw s$8.addToError(i$18);
				}
				return n$8 !== !1 && s$8.walk && (n$8 = s$8.walk(e$4)), n$8;
			});
		}
		walkAtRules(e$4, s$8) {
			return s$8 ? e$4 instanceof RegExp ? this.walk((r$12, n$8) => {
				if (r$12.type === "atrule" && e$4.test(r$12.name)) return s$8(r$12, n$8);
			}) : this.walk((r$12, n$8) => {
				if (r$12.type === "atrule" && r$12.name === e$4) return s$8(r$12, n$8);
			}) : (s$8 = e$4, this.walk((r$12, n$8) => {
				if (r$12.type === "atrule") return s$8(r$12, n$8);
			}));
		}
		walkComments(e$4) {
			return this.walk((s$8, r$12) => {
				if (s$8.type === "comment") return e$4(s$8, r$12);
			});
		}
		walkDecls(e$4, s$8) {
			return s$8 ? e$4 instanceof RegExp ? this.walk((r$12, n$8) => {
				if (r$12.type === "decl" && e$4.test(r$12.prop)) return s$8(r$12, n$8);
			}) : this.walk((r$12, n$8) => {
				if (r$12.type === "decl" && r$12.prop === e$4) return s$8(r$12, n$8);
			}) : (s$8 = e$4, this.walk((r$12, n$8) => {
				if (r$12.type === "decl") return s$8(r$12, n$8);
			}));
		}
		walkRules(e$4, s$8) {
			return s$8 ? e$4 instanceof RegExp ? this.walk((r$12, n$8) => {
				if (r$12.type === "rule" && e$4.test(r$12.selector)) return s$8(r$12, n$8);
			}) : this.walk((r$12, n$8) => {
				if (r$12.type === "rule" && r$12.selector === e$4) return s$8(r$12, n$8);
			}) : (s$8 = e$4, this.walk((r$12, n$8) => {
				if (r$12.type === "rule") return s$8(r$12, n$8);
			}));
		}
	};
	V$5.registerParse = (t$13) => {
		$i$5 = t$13;
	};
	V$5.registerRule = (t$13) => {
		fs$3 = t$13;
	};
	V$5.registerAtRule = (t$13) => {
		cs$2 = t$13;
	};
	V$5.registerRoot = (t$13) => {
		Wi$5 = t$13;
	};
	Vi$5.exports = V$5;
	V$5.default = V$5;
	V$5.rebuild = (t$13) => {
		t$13.type === "atrule" ? Object.setPrototypeOf(t$13, cs$2.prototype) : t$13.type === "rule" ? Object.setPrototypeOf(t$13, fs$3.prototype) : t$13.type === "decl" ? Object.setPrototypeOf(t$13, Bi$4.prototype) : t$13.type === "comment" ? Object.setPrototypeOf(t$13, Mi$4.prototype) : t$13.type === "root" && Object.setPrototypeOf(t$13, Wi$5.prototype), t$13[Fi$4] = !0, t$13.nodes && t$13.nodes.forEach((e$4) => {
			V$5.rebuild(e$4);
		});
	};
});
var Hi$1 = g$1((Wv, zi$4) => {
	var qc$1 = "useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict", Lc$1 = (t$13, e$4 = 21) => (s$8 = e$4) => {
		let r$12 = "", n$8 = s$8 | 0;
		for (; n$8--;) r$12 += t$13[Math.random() * t$13.length | 0];
		return r$12;
	}, Dc$1 = (t$13 = 21) => {
		let e$4 = "", s$8 = t$13 | 0;
		for (; s$8--;) e$4 += qc$1[Math.random() * 64 | 0];
		return e$4;
	};
	zi$4.exports = {
		nanoid: Dc$1,
		customAlphabet: Lc$1
	};
});
var ji$1 = g$1(() => {});
var ps = g$1((Vv, Ki$5) => {
	Ki$5.exports = class {};
});
var De$2 = g$1((Hv$1, eo$4) => {
	var { nanoid: Mc$1 } = Hi$1(), { isAbsolute: ms$2, resolve: ys$2 } = {}, { SourceMapConsumer: Bc$1, SourceMapGenerator: Uc$1 } = ji$1(), { fileURLToPath: Qi$5, pathToFileURL: zt$5 } = {}, Xi$5 = Gt$1(), Fc$1 = ps(), hs$3 = os(), ds$2 = Symbol("lineToIndexCache"), $c$2 = !!(Bc$1 && Uc$1), Ji$4 = !!(ys$2 && ms$2);
	function Zi$5(t$13) {
		if (t$13[ds$2]) return t$13[ds$2];
		let e$4 = t$13.css.split(`
`), s$8 = new Array(e$4.length), r$12 = 0;
		for (let n$8 = 0, i$18 = e$4.length; n$8 < i$18; n$8++) s$8[n$8] = r$12, r$12 += e$4[n$8].length + 1;
		return t$13[ds$2] = s$8, s$8;
	}
	var Le$6 = class {
		get from() {
			return this.file || this.id;
		}
		constructor(e$4, s$8 = {}) {
			if (e$4 === null || typeof e$4 > "u" || typeof e$4 == "object" && !e$4.toString) throw new Error(`PostCSS received ${e$4} instead of CSS string`);
			if (this.css = e$4.toString(), this.css[0] === "﻿" || this.css[0] === "￾" ? (this.hasBOM = !0, this.css = this.css.slice(1)) : this.hasBOM = !1, this.document = this.css, s$8.document && (this.document = s$8.document.toString()), s$8.from && (!Ji$4 || /^\w+:\/\//.test(s$8.from) || ms$2(s$8.from) ? this.file = s$8.from : this.file = ys$2(s$8.from)), Ji$4 && $c$2) {
				let r$12 = new Fc$1(this.css, s$8);
				if (r$12.text) {
					this.map = r$12;
					let n$8 = r$12.consumer().file;
					!this.file && n$8 && (this.file = this.mapResolve(n$8));
				}
			}
			this.file || (this.id = "<input css " + Mc$1(6) + ">"), this.map && (this.map.file = this.from);
		}
		error(e$4, s$8, r$12, n$8 = {}) {
			let i$18, o$9, u$14, a$13, c$3;
			if (s$8 && typeof s$8 == "object") {
				let p$2 = s$8, l$10 = r$12;
				if (typeof p$2.offset == "number") {
					a$13 = p$2.offset;
					let d$14 = this.fromOffset(a$13);
					s$8 = d$14.line, r$12 = d$14.col;
				} else s$8 = p$2.line, r$12 = p$2.column, a$13 = this.fromLineAndColumn(s$8, r$12);
				if (typeof l$10.offset == "number") {
					u$14 = l$10.offset;
					let d$14 = this.fromOffset(u$14);
					o$9 = d$14.line, i$18 = d$14.col;
				} else o$9 = l$10.line, i$18 = l$10.column, u$14 = this.fromLineAndColumn(l$10.line, l$10.column);
			} else if (r$12) a$13 = this.fromLineAndColumn(s$8, r$12);
			else {
				a$13 = s$8;
				let p$2 = this.fromOffset(a$13);
				s$8 = p$2.line, r$12 = p$2.col;
			}
			let f$3 = this.origin(s$8, r$12, o$9, i$18);
			return f$3 ? c$3 = new Xi$5(e$4, f$3.endLine === void 0 ? f$3.line : {
				column: f$3.column,
				line: f$3.line
			}, f$3.endLine === void 0 ? f$3.column : {
				column: f$3.endColumn,
				line: f$3.endLine
			}, f$3.source, f$3.file, n$8.plugin) : c$3 = new Xi$5(e$4, o$9 === void 0 ? s$8 : {
				column: r$12,
				line: s$8
			}, o$9 === void 0 ? r$12 : {
				column: i$18,
				line: o$9
			}, this.css, this.file, n$8.plugin), c$3.input = {
				column: r$12,
				endColumn: i$18,
				endLine: o$9,
				endOffset: u$14,
				line: s$8,
				offset: a$13,
				source: this.css
			}, this.file && (zt$5 && (c$3.input.url = zt$5(this.file).toString()), c$3.input.file = this.file), c$3;
		}
		fromLineAndColumn(e$4, s$8) {
			return Zi$5(this)[e$4 - 1] + s$8 - 1;
		}
		fromOffset(e$4) {
			let s$8 = Zi$5(this), r$12 = s$8[s$8.length - 1], n$8 = 0;
			if (e$4 >= r$12) n$8 = s$8.length - 1;
			else {
				let i$18 = s$8.length - 2, o$9;
				for (; n$8 < i$18;) if (o$9 = n$8 + (i$18 - n$8 >> 1), e$4 < s$8[o$9]) i$18 = o$9 - 1;
				else if (e$4 >= s$8[o$9 + 1]) n$8 = o$9 + 1;
				else {
					n$8 = o$9;
					break;
				}
			}
			return {
				col: e$4 - s$8[n$8] + 1,
				line: n$8 + 1
			};
		}
		mapResolve(e$4) {
			return /^\w+:\/\//.test(e$4) ? e$4 : ys$2(this.map.consumer().sourceRoot || this.map.root || ".", e$4);
		}
		origin(e$4, s$8, r$12, n$8) {
			if (!this.map) return !1;
			let i$18 = this.map.consumer(), o$9 = i$18.originalPositionFor({
				column: s$8,
				line: e$4
			});
			if (!o$9.source) return !1;
			let u$14;
			typeof r$12 == "number" && (u$14 = i$18.originalPositionFor({
				column: n$8,
				line: r$12
			}));
			let a$13;
			ms$2(o$9.source) ? a$13 = zt$5(o$9.source) : a$13 = new URL(o$9.source, this.map.consumer().sourceRoot || zt$5(this.map.mapFile));
			let c$3 = {
				column: o$9.column,
				endColumn: u$14 && u$14.column,
				endLine: u$14 && u$14.line,
				line: o$9.line,
				url: a$13.toString()
			};
			if (a$13.protocol === "file:") if (Qi$5) c$3.file = Qi$5(a$13);
			else throw new Error("file: protocol is not available in this PostCSS build");
			let f$3 = i$18.sourceContentFor(o$9.source);
			return f$3 && (c$3.source = f$3), c$3;
		}
		toJSON() {
			let e$4 = {};
			for (let s$8 of [
				"hasBOM",
				"css",
				"file",
				"id"
			]) this[s$8] != null && (e$4[s$8] = this[s$8]);
			return this.map && (e$4.map = { ...this.map }, e$4.map.consumerCache && (e$4.map.consumerCache = void 0)), e$4;
		}
	};
	eo$4.exports = Le$6;
	Le$6.default = Le$6;
	hs$3 && hs$3.registerInput && hs$3.registerInput(Le$6);
});
var Ht$2 = g$1((jv$1, ro$4) => {
	var to$4 = le$2(), Me$6 = class extends to$4 {
		constructor(e$4) {
			super(e$4), this.type = "atrule";
		}
		append(...e$4) {
			return this.proxyOf.nodes || (this.nodes = []), super.append(...e$4);
		}
		prepend(...e$4) {
			return this.proxyOf.nodes || (this.nodes = []), super.prepend(...e$4);
		}
	};
	ro$4.exports = Me$6;
	Me$6.default = Me$6;
	to$4.registerAtRule(Me$6);
});
var Be = g$1((Kv$1, oo$4) => {
	var so$4 = le$2(), no$5, io$4, ce$4 = class extends so$4 {
		constructor(e$4) {
			super(e$4), this.type = "root", this.nodes || (this.nodes = []);
		}
		normalize(e$4, s$8, r$12) {
			let n$8 = super.normalize(e$4);
			if (s$8) {
				if (r$12 === "prepend") this.nodes.length > 1 ? s$8.raws.before = this.nodes[1].raws.before : delete s$8.raws.before;
				else if (this.first !== s$8) for (let i$18 of n$8) i$18.raws.before = s$8.raws.before;
			}
			return n$8;
		}
		removeChild(e$4, s$8) {
			let r$12 = this.index(e$4);
			return !s$8 && r$12 === 0 && this.nodes.length > 1 && (this.nodes[1].raws.before = this.nodes[r$12].raws.before), super.removeChild(e$4);
		}
		toResult(e$4 = {}) {
			return new no$5(new io$4(), this, e$4).stringify();
		}
	};
	ce$4.registerLazyResult = (t$13) => {
		no$5 = t$13;
	};
	ce$4.registerProcessor = (t$13) => {
		io$4 = t$13;
	};
	oo$4.exports = ce$4;
	ce$4.default = ce$4;
	so$4.registerRoot(ce$4);
});
var gs = g$1((Qv$1, ao$4) => {
	var yt$4 = {
		comma(t$13) {
			return yt$4.split(t$13, [","], !0);
		},
		space(t$13) {
			return yt$4.split(t$13, [
				" ",
				`
`,
				"	"
			]);
		},
		split(t$13, e$4, s$8) {
			let r$12 = [], n$8 = "", i$18 = !1, o$9 = 0, u$14 = !1, a$13 = "", c$3 = !1;
			for (let f$3 of t$13) c$3 ? c$3 = !1 : f$3 === "\\" ? c$3 = !0 : u$14 ? f$3 === a$13 && (u$14 = !1) : f$3 === "\"" || f$3 === "'" ? (u$14 = !0, a$13 = f$3) : f$3 === "(" ? o$9 += 1 : f$3 === ")" ? o$9 > 0 && (o$9 -= 1) : o$9 === 0 && e$4.includes(f$3) && (i$18 = !0), i$18 ? (n$8 !== "" && r$12.push(n$8.trim()), n$8 = "", i$18 = !1) : n$8 += f$3;
			return (s$8 || n$8 !== "") && r$12.push(n$8.trim()), r$12;
		}
	};
	ao$4.exports = yt$4;
	yt$4.default = yt$4;
});
var jt$1 = g$1((Xv$1, lo$4) => {
	var uo$4 = le$2(), Wc$2 = gs(), Ue$5 = class extends uo$4 {
		get selectors() {
			return Wc$2.comma(this.selector);
		}
		set selectors(e$4) {
			let s$8 = this.selector ? this.selector.match(/,\s*/) : null, r$12 = s$8 ? s$8[0] : "," + this.raw("between", "beforeOpen");
			this.selector = e$4.join(r$12);
		}
		constructor(e$4) {
			super(e$4), this.type = "rule", this.nodes || (this.nodes = []);
		}
	};
	lo$4.exports = Ue$5;
	Ue$5.default = Ue$5;
	uo$4.registerRule(Ue$5);
});
var Xt$2 = g$1((Jv$1, fo$2) => {
	var Kt$4 = /[\t\n\f\r "#'()/;[\\\]{}]/g, Qt$3 = /[\t\n\f\r !"#'():;@[\\\]{}]|\/(?=\*)/g, Gc$2 = /.[\r\n"'(/\\]/, co$5 = /[\da-f]/i;
	fo$2.exports = function(e$4, s$8 = {}) {
		let r$12 = e$4.css.valueOf(), n$8 = s$8.ignoreErrors, i$18, o$9, u$14, a$13, c$3, f$3, p$2, l$10, d$14, x$3, h$3 = r$12.length, m$11 = 0, y$7 = [], b$7 = [];
		function w$3() {
			return m$11;
		}
		function v$5(W$2) {
			throw e$4.error("Unclosed " + W$2, m$11);
		}
		function R$6() {
			return b$7.length === 0 && m$11 >= h$3;
		}
		function F$4(W$2) {
			if (b$7.length) return b$7.pop();
			if (m$11 >= h$3) return;
			let T$9 = W$2 ? W$2.ignoreUnclosed : !1;
			switch (i$18 = r$12.charCodeAt(m$11), i$18) {
				case 10:
				case 32:
				case 9:
				case 13:
				case 12:
					a$13 = m$11;
					do
						a$13 += 1, i$18 = r$12.charCodeAt(a$13);
					while (i$18 === 32 || i$18 === 10 || i$18 === 9 || i$18 === 13 || i$18 === 12);
					f$3 = ["space", r$12.slice(m$11, a$13)], m$11 = a$13 - 1;
					break;
				case 91:
				case 93:
				case 123:
				case 125:
				case 58:
				case 59:
				case 41: {
					let O$3 = String.fromCharCode(i$18);
					f$3 = [
						O$3,
						O$3,
						m$11
					];
					break;
				}
				case 40:
					if (x$3 = y$7.length ? y$7.pop()[1] : "", d$14 = r$12.charCodeAt(m$11 + 1), x$3 === "url" && d$14 !== 39 && d$14 !== 34 && d$14 !== 32 && d$14 !== 10 && d$14 !== 9 && d$14 !== 12 && d$14 !== 13) {
						a$13 = m$11;
						do {
							if (p$2 = !1, a$13 = r$12.indexOf(")", a$13 + 1), a$13 === -1) if (n$8 || T$9) {
								a$13 = m$11;
								break;
							} else v$5("bracket");
							for (l$10 = a$13; r$12.charCodeAt(l$10 - 1) === 92;) l$10 -= 1, p$2 = !p$2;
						} while (p$2);
						f$3 = [
							"brackets",
							r$12.slice(m$11, a$13 + 1),
							m$11,
							a$13
						], m$11 = a$13;
					} else a$13 = r$12.indexOf(")", m$11 + 1), o$9 = r$12.slice(m$11, a$13 + 1), a$13 === -1 || Gc$2.test(o$9) ? f$3 = [
						"(",
						"(",
						m$11
					] : (f$3 = [
						"brackets",
						o$9,
						m$11,
						a$13
					], m$11 = a$13);
					break;
				case 39:
				case 34:
					c$3 = i$18 === 39 ? "'" : "\"", a$13 = m$11;
					do {
						if (p$2 = !1, a$13 = r$12.indexOf(c$3, a$13 + 1), a$13 === -1) if (n$8 || T$9) {
							a$13 = m$11 + 1;
							break;
						} else v$5("string");
						for (l$10 = a$13; r$12.charCodeAt(l$10 - 1) === 92;) l$10 -= 1, p$2 = !p$2;
					} while (p$2);
					f$3 = [
						"string",
						r$12.slice(m$11, a$13 + 1),
						m$11,
						a$13
					], m$11 = a$13;
					break;
				case 64:
					Kt$4.lastIndex = m$11 + 1, Kt$4.test(r$12), Kt$4.lastIndex === 0 ? a$13 = r$12.length - 1 : a$13 = Kt$4.lastIndex - 2, f$3 = [
						"at-word",
						r$12.slice(m$11, a$13 + 1),
						m$11,
						a$13
					], m$11 = a$13;
					break;
				case 92:
					for (a$13 = m$11, u$14 = !0; r$12.charCodeAt(a$13 + 1) === 92;) a$13 += 1, u$14 = !u$14;
					if (i$18 = r$12.charCodeAt(a$13 + 1), u$14 && i$18 !== 47 && i$18 !== 32 && i$18 !== 10 && i$18 !== 9 && i$18 !== 13 && i$18 !== 12 && (a$13 += 1, co$5.test(r$12.charAt(a$13)))) {
						for (; co$5.test(r$12.charAt(a$13 + 1));) a$13 += 1;
						r$12.charCodeAt(a$13 + 1) === 32 && (a$13 += 1);
					}
					f$3 = [
						"word",
						r$12.slice(m$11, a$13 + 1),
						m$11,
						a$13
					], m$11 = a$13;
					break;
				default:
					i$18 === 47 && r$12.charCodeAt(m$11 + 1) === 42 ? (a$13 = r$12.indexOf("*/", m$11 + 2) + 1, a$13 === 0 && (n$8 || T$9 ? a$13 = r$12.length : v$5("comment")), f$3 = [
						"comment",
						r$12.slice(m$11, a$13 + 1),
						m$11,
						a$13
					], m$11 = a$13) : (Qt$3.lastIndex = m$11 + 1, Qt$3.test(r$12), Qt$3.lastIndex === 0 ? a$13 = r$12.length - 1 : a$13 = Qt$3.lastIndex - 2, f$3 = [
						"word",
						r$12.slice(m$11, a$13 + 1),
						m$11,
						a$13
					], y$7.push(f$3), m$11 = a$13);
					break;
			}
			return m$11++, f$3;
		}
		function Q$4(W$2) {
			b$7.push(W$2);
		}
		return {
			back: Q$4,
			endOfFile: R$6,
			nextToken: F$4,
			position: w$3
		};
	};
});
var Jt$1 = g$1((Zv, mo$3) => {
	var Yc$1 = Ht$2(), Vc$1 = qe$2(), zc$2 = mt$1(), Hc$1 = Be(), po$5 = jt$1(), jc$1 = Xt$2(), ho$3 = {
		empty: !0,
		space: !0
	};
	function Kc$2(t$13) {
		for (let e$4 = t$13.length - 1; e$4 >= 0; e$4--) {
			let s$8 = t$13[e$4], r$12 = s$8[3] || s$8[2];
			if (r$12) return r$12;
		}
	}
	var ws$2 = class {
		constructor(e$4) {
			this.input = e$4, this.root = new Hc$1(), this.current = this.root, this.spaces = "", this.semicolon = !1, this.createTokenizer(), this.root.source = {
				input: e$4,
				start: {
					column: 1,
					line: 1,
					offset: 0
				}
			};
		}
		atrule(e$4) {
			let s$8 = new Yc$1();
			s$8.name = e$4[1].slice(1), s$8.name === "" && this.unnamedAtrule(s$8, e$4), this.init(s$8, e$4[2]);
			let r$12, n$8, i$18, o$9 = !1, u$14 = !1, a$13 = [], c$3 = [];
			for (; !this.tokenizer.endOfFile();) {
				if (e$4 = this.tokenizer.nextToken(), r$12 = e$4[0], r$12 === "(" || r$12 === "[" ? c$3.push(r$12 === "(" ? ")" : "]") : r$12 === "{" && c$3.length > 0 ? c$3.push("}") : r$12 === c$3[c$3.length - 1] && c$3.pop(), c$3.length === 0) if (r$12 === ";") {
					s$8.source.end = this.getPosition(e$4[2]), s$8.source.end.offset++, this.semicolon = !0;
					break;
				} else if (r$12 === "{") {
					u$14 = !0;
					break;
				} else if (r$12 === "}") {
					if (a$13.length > 0) {
						for (i$18 = a$13.length - 1, n$8 = a$13[i$18]; n$8 && n$8[0] === "space";) n$8 = a$13[--i$18];
						n$8 && (s$8.source.end = this.getPosition(n$8[3] || n$8[2]), s$8.source.end.offset++);
					}
					this.end(e$4);
					break;
				} else a$13.push(e$4);
				else a$13.push(e$4);
				if (this.tokenizer.endOfFile()) {
					o$9 = !0;
					break;
				}
			}
			s$8.raws.between = this.spacesAndCommentsFromEnd(a$13), a$13.length ? (s$8.raws.afterName = this.spacesAndCommentsFromStart(a$13), this.raw(s$8, "params", a$13), o$9 && (e$4 = a$13[a$13.length - 1], s$8.source.end = this.getPosition(e$4[3] || e$4[2]), s$8.source.end.offset++, this.spaces = s$8.raws.between, s$8.raws.between = "")) : (s$8.raws.afterName = "", s$8.params = ""), u$14 && (s$8.nodes = [], this.current = s$8);
		}
		checkMissedSemicolon(e$4) {
			let s$8 = this.colon(e$4);
			if (s$8 === !1) return;
			let r$12 = 0, n$8;
			for (let i$18 = s$8 - 1; i$18 >= 0 && (n$8 = e$4[i$18], !(n$8[0] !== "space" && (r$12 += 1, r$12 === 2))); i$18--);
			throw this.input.error("Missed semicolon", n$8[0] === "word" ? n$8[3] + 1 : n$8[2]);
		}
		colon(e$4) {
			let s$8 = 0, r$12, n$8, i$18;
			for (let [o$9, u$14] of e$4.entries()) {
				if (n$8 = u$14, i$18 = n$8[0], i$18 === "(" && (s$8 += 1), i$18 === ")" && (s$8 -= 1), s$8 === 0 && i$18 === ":") if (!r$12) this.doubleColon(n$8);
				else {
					if (r$12[0] === "word" && r$12[1] === "progid") continue;
					return o$9;
				}
				r$12 = n$8;
			}
			return !1;
		}
		comment(e$4) {
			let s$8 = new Vc$1();
			this.init(s$8, e$4[2]), s$8.source.end = this.getPosition(e$4[3] || e$4[2]), s$8.source.end.offset++;
			let r$12 = e$4[1].slice(2, -2);
			if (/^\s*$/.test(r$12)) s$8.text = "", s$8.raws.left = r$12, s$8.raws.right = "";
			else {
				let n$8 = r$12.match(/^(\s*)([^]*\S)(\s*)$/);
				s$8.text = n$8[2], s$8.raws.left = n$8[1], s$8.raws.right = n$8[3];
			}
		}
		createTokenizer() {
			this.tokenizer = jc$1(this.input);
		}
		decl(e$4, s$8) {
			let r$12 = new zc$2();
			this.init(r$12, e$4[0][2]);
			let n$8 = e$4[e$4.length - 1];
			for (n$8[0] === ";" && (this.semicolon = !0, e$4.pop()), r$12.source.end = this.getPosition(n$8[3] || n$8[2] || Kc$2(e$4)), r$12.source.end.offset++; e$4[0][0] !== "word";) e$4.length === 1 && this.unknownWord(e$4), r$12.raws.before += e$4.shift()[1];
			for (r$12.source.start = this.getPosition(e$4[0][2]), r$12.prop = ""; e$4.length;) {
				let c$3 = e$4[0][0];
				if (c$3 === ":" || c$3 === "space" || c$3 === "comment") break;
				r$12.prop += e$4.shift()[1];
			}
			r$12.raws.between = "";
			let i$18;
			for (; e$4.length;) if (i$18 = e$4.shift(), i$18[0] === ":") {
				r$12.raws.between += i$18[1];
				break;
			} else i$18[0] === "word" && /\w/.test(i$18[1]) && this.unknownWord([i$18]), r$12.raws.between += i$18[1];
			(r$12.prop[0] === "_" || r$12.prop[0] === "*") && (r$12.raws.before += r$12.prop[0], r$12.prop = r$12.prop.slice(1));
			let o$9 = [], u$14;
			for (; e$4.length && (u$14 = e$4[0][0], !(u$14 !== "space" && u$14 !== "comment"));) o$9.push(e$4.shift());
			this.precheckMissedSemicolon(e$4);
			for (let c$3 = e$4.length - 1; c$3 >= 0; c$3--) {
				if (i$18 = e$4[c$3], i$18[1].toLowerCase() === "!important") {
					r$12.important = !0;
					let f$3 = this.stringFrom(e$4, c$3);
					f$3 = this.spacesFromEnd(e$4) + f$3, f$3 !== " !important" && (r$12.raws.important = f$3);
					break;
				} else if (i$18[1].toLowerCase() === "important") {
					let f$3 = e$4.slice(0), p$2 = "";
					for (let l$10 = c$3; l$10 > 0; l$10--) {
						let d$14 = f$3[l$10][0];
						if (p$2.trim().startsWith("!") && d$14 !== "space") break;
						p$2 = f$3.pop()[1] + p$2;
					}
					p$2.trim().startsWith("!") && (r$12.important = !0, r$12.raws.important = p$2, e$4 = f$3);
				}
				if (i$18[0] !== "space" && i$18[0] !== "comment") break;
			}
			e$4.some((c$3) => c$3[0] !== "space" && c$3[0] !== "comment") && (r$12.raws.between += o$9.map((c$3) => c$3[1]).join(""), o$9 = []), this.raw(r$12, "value", o$9.concat(e$4), s$8), r$12.value.includes(":") && !s$8 && this.checkMissedSemicolon(e$4);
		}
		doubleColon(e$4) {
			throw this.input.error("Double colon", { offset: e$4[2] }, { offset: e$4[2] + e$4[1].length });
		}
		emptyRule(e$4) {
			let s$8 = new po$5();
			this.init(s$8, e$4[2]), s$8.selector = "", s$8.raws.between = "", this.current = s$8;
		}
		end(e$4) {
			this.current.nodes && this.current.nodes.length && (this.current.raws.semicolon = this.semicolon), this.semicolon = !1, this.current.raws.after = (this.current.raws.after || "") + this.spaces, this.spaces = "", this.current.parent ? (this.current.source.end = this.getPosition(e$4[2]), this.current.source.end.offset++, this.current = this.current.parent) : this.unexpectedClose(e$4);
		}
		endFile() {
			this.current.parent && this.unclosedBlock(), this.current.nodes && this.current.nodes.length && (this.current.raws.semicolon = this.semicolon), this.current.raws.after = (this.current.raws.after || "") + this.spaces, this.root.source.end = this.getPosition(this.tokenizer.position());
		}
		freeSemicolon(e$4) {
			if (this.spaces += e$4[1], this.current.nodes) {
				let s$8 = this.current.nodes[this.current.nodes.length - 1];
				s$8 && s$8.type === "rule" && !s$8.raws.ownSemicolon && (s$8.raws.ownSemicolon = this.spaces, this.spaces = "", s$8.source.end = this.getPosition(e$4[2]), s$8.source.end.offset += s$8.raws.ownSemicolon.length);
			}
		}
		getPosition(e$4) {
			let s$8 = this.input.fromOffset(e$4);
			return {
				column: s$8.col,
				line: s$8.line,
				offset: e$4
			};
		}
		init(e$4, s$8) {
			this.current.push(e$4), e$4.source = {
				input: this.input,
				start: this.getPosition(s$8)
			}, e$4.raws.before = this.spaces, this.spaces = "", e$4.type !== "comment" && (this.semicolon = !1);
		}
		other(e$4) {
			let s$8 = !1, r$12 = null, n$8 = !1, i$18 = null, o$9 = [], u$14 = e$4[1].startsWith("--"), a$13 = [], c$3 = e$4;
			for (; c$3;) {
				if (r$12 = c$3[0], a$13.push(c$3), r$12 === "(" || r$12 === "[") i$18 || (i$18 = c$3), o$9.push(r$12 === "(" ? ")" : "]");
				else if (u$14 && n$8 && r$12 === "{") i$18 || (i$18 = c$3), o$9.push("}");
				else if (o$9.length === 0) if (r$12 === ";") if (n$8) {
					this.decl(a$13, u$14);
					return;
				} else break;
				else if (r$12 === "{") {
					this.rule(a$13);
					return;
				} else if (r$12 === "}") {
					this.tokenizer.back(a$13.pop()), s$8 = !0;
					break;
				} else r$12 === ":" && (n$8 = !0);
				else r$12 === o$9[o$9.length - 1] && (o$9.pop(), o$9.length === 0 && (i$18 = null));
				c$3 = this.tokenizer.nextToken();
			}
			if (this.tokenizer.endOfFile() && (s$8 = !0), o$9.length > 0 && this.unclosedBracket(i$18), s$8 && n$8) {
				if (!u$14) for (; a$13.length && (c$3 = a$13[a$13.length - 1][0], !(c$3 !== "space" && c$3 !== "comment"));) this.tokenizer.back(a$13.pop());
				this.decl(a$13, u$14);
			} else this.unknownWord(a$13);
		}
		parse() {
			let e$4;
			for (; !this.tokenizer.endOfFile();) switch (e$4 = this.tokenizer.nextToken(), e$4[0]) {
				case "space":
					this.spaces += e$4[1];
					break;
				case ";":
					this.freeSemicolon(e$4);
					break;
				case "}":
					this.end(e$4);
					break;
				case "comment":
					this.comment(e$4);
					break;
				case "at-word":
					this.atrule(e$4);
					break;
				case "{":
					this.emptyRule(e$4);
					break;
				default:
					this.other(e$4);
					break;
			}
			this.endFile();
		}
		precheckMissedSemicolon() {}
		raw(e$4, s$8, r$12, n$8) {
			let i$18, o$9, u$14 = r$12.length, a$13 = "", c$3 = !0, f$3, p$2;
			for (let l$10 = 0; l$10 < u$14; l$10 += 1) i$18 = r$12[l$10], o$9 = i$18[0], o$9 === "space" && l$10 === u$14 - 1 && !n$8 ? c$3 = !1 : o$9 === "comment" ? (p$2 = r$12[l$10 - 1] ? r$12[l$10 - 1][0] : "empty", f$3 = r$12[l$10 + 1] ? r$12[l$10 + 1][0] : "empty", !ho$3[p$2] && !ho$3[f$3] ? a$13.slice(-1) === "," ? c$3 = !1 : a$13 += i$18[1] : c$3 = !1) : a$13 += i$18[1];
			if (!c$3) {
				let l$10 = r$12.reduce((d$14, x$3) => d$14 + x$3[1], "");
				e$4.raws[s$8] = {
					raw: l$10,
					value: a$13
				};
			}
			e$4[s$8] = a$13;
		}
		rule(e$4) {
			e$4.pop();
			let s$8 = new po$5();
			this.init(s$8, e$4[0][2]), s$8.raws.between = this.spacesAndCommentsFromEnd(e$4), this.raw(s$8, "selector", e$4), this.current = s$8;
		}
		spacesAndCommentsFromEnd(e$4) {
			let s$8, r$12 = "";
			for (; e$4.length && (s$8 = e$4[e$4.length - 1][0], !(s$8 !== "space" && s$8 !== "comment"));) r$12 = e$4.pop()[1] + r$12;
			return r$12;
		}
		spacesAndCommentsFromStart(e$4) {
			let s$8, r$12 = "";
			for (; e$4.length && (s$8 = e$4[0][0], !(s$8 !== "space" && s$8 !== "comment"));) r$12 += e$4.shift()[1];
			return r$12;
		}
		spacesFromEnd(e$4) {
			let s$8, r$12 = "";
			for (; e$4.length && (s$8 = e$4[e$4.length - 1][0], s$8 === "space");) r$12 = e$4.pop()[1] + r$12;
			return r$12;
		}
		stringFrom(e$4, s$8) {
			let r$12 = "";
			for (let n$8 = s$8; n$8 < e$4.length; n$8++) r$12 += e$4[n$8][1];
			return e$4.splice(s$8, e$4.length - s$8), r$12;
		}
		unclosedBlock() {
			let e$4 = this.current.source.start;
			throw this.input.error("Unclosed block", e$4.line, e$4.column);
		}
		unclosedBracket(e$4) {
			throw this.input.error("Unclosed bracket", { offset: e$4[2] }, { offset: e$4[2] + 1 });
		}
		unexpectedClose(e$4) {
			throw this.input.error("Unexpected }", { offset: e$4[2] }, { offset: e$4[2] + 1 });
		}
		unknownWord(e$4) {
			throw this.input.error("Unknown word " + e$4[0][1], { offset: e$4[0][2] }, { offset: e$4[0][2] + e$4[0][1].length });
		}
		unnamedAtrule(e$4, s$8) {
			throw this.input.error("At-rule without name", { offset: s$8[2] }, { offset: s$8[2] + s$8[1].length });
		}
	};
	mo$3.exports = ws$2;
});
var gt$2 = g$1((ex, yo$3) => {
	var Qc$1 = le$2(), Xc$1 = De$2(), Jc$2 = Jt$1();
	function Zt$3(t$13, e$4) {
		let s$8 = new Xc$1(t$13, e$4), r$12 = new Jc$2(s$8);
		try {
			r$12.parse();
		} catch (n$8) {
			throw n$8;
		}
		return r$12.root;
	}
	yo$3.exports = Zt$3;
	Zt$3.default = Zt$3;
	Qc$1.registerParse(Zt$3);
});
var go$1 = g$1((tx, vs$2) => {
	var Zc$1 = Xt$2(), ef$2 = De$2();
	vs$2.exports = { isInlineComment(t$13) {
		if (t$13[0] === "word" && t$13[1].slice(0, 2) === "//") {
			let e$4 = t$13, s$8 = [], r$12, n$8;
			for (; t$13;) {
				if (/\r?\n/.test(t$13[1])) {
					if (/['"].*\r?\n/.test(t$13[1])) {
						s$8.push(t$13[1].substring(0, t$13[1].indexOf(`
`))), n$8 = t$13[1].substring(t$13[1].indexOf(`
`));
						let o$9 = this.input.css.valueOf().substring(this.tokenizer.position());
						n$8 += o$9, r$12 = t$13[3] + o$9.length - n$8.length;
					} else this.tokenizer.back(t$13);
					break;
				}
				s$8.push(t$13[1]), r$12 = t$13[2], t$13 = this.tokenizer.nextToken({ ignoreUnclosed: !0 });
			}
			let i$18 = [
				"comment",
				s$8.join(""),
				e$4[2],
				r$12
			];
			return this.inlineComment(i$18), n$8 && (this.input = new ef$2(n$8), this.tokenizer = Zc$1(this.input)), !0;
		} else if (t$13[1] === "/") {
			let e$4 = this.tokenizer.nextToken({ ignoreUnclosed: !0 });
			if (e$4[0] === "comment" && /^\/\*/.test(e$4[1])) return e$4[0] = "word", e$4[1] = e$4[1].slice(1), t$13[1] = "//", this.tokenizer.back(e$4), vs$2.exports.isInlineComment.bind(this)(t$13);
		}
		return !1;
	} };
});
var vo$1 = g$1((rx, wo$3) => {
	wo$3.exports = { interpolation(t$13) {
		let e$4 = [t$13, this.tokenizer.nextToken()], s$8 = ["word", "}"];
		if (e$4[0][1].length > 1 || e$4[1][0] !== "{") return this.tokenizer.back(e$4[1]), !1;
		for (t$13 = this.tokenizer.nextToken(); t$13 && s$8.includes(t$13[0]);) e$4.push(t$13), t$13 = this.tokenizer.nextToken();
		let r$12 = e$4.map((u$14) => u$14[1]), [n$8] = e$4, i$18 = e$4.pop(), o$9 = [
			"word",
			r$12.join(""),
			n$8[2],
			i$18[2]
		];
		return this.tokenizer.back(t$13), this.tokenizer.back(o$9), !0;
	} };
});
var bo$1 = g$1((sx, xo$2) => {
	var tf$2 = /^#[0-9a-fA-F]{6}$|^#[0-9a-fA-F]{3}$/, rf$2 = /\.[0-9]/, sf$2 = (t$13) => {
		let [, e$4] = t$13, [s$8] = e$4;
		return (s$8 === "." || s$8 === "#") && tf$2.test(e$4) === !1 && rf$2.test(e$4) === !1;
	};
	xo$2.exports = { isMixinToken: sf$2 };
});
var Eo$2 = g$1((nx, _o$2) => {
	var nf$2 = Xt$2(), of$2 = /^url\((.+)\)/;
	_o$2.exports = (t$13) => {
		let { name: e$4, params: s$8 = "" } = t$13;
		if (e$4 === "import" && s$8.length) {
			t$13.import = !0;
			let r$12 = nf$2({ css: s$8 });
			for (t$13.filename = s$8.replace(of$2, "$1"); !r$12.endOfFile();) {
				let [n$8, i$18] = r$12.nextToken();
				if (n$8 === "word" && i$18 === "url") return;
				if (n$8 === "brackets") {
					t$13.options = i$18, t$13.filename = s$8.replace(i$18, "").trim();
					break;
				}
			}
		}
	};
});
var Oo$1 = g$1((ix, To$3) => {
	var ko$2 = /:$/, So$4 = /^:(\s+)?/;
	To$3.exports = (t$13) => {
		let { name: e$4, params: s$8 = "" } = t$13;
		if (t$13.name.slice(-1) === ":") {
			if (ko$2.test(e$4)) {
				let [r$12] = e$4.match(ko$2);
				t$13.name = e$4.replace(r$12, ""), t$13.raws.afterName = r$12 + (t$13.raws.afterName || ""), t$13.variable = !0, t$13.value = t$13.params;
			}
			if (So$4.test(s$8)) {
				let [r$12] = s$8.match(So$4);
				t$13.value = s$8.replace(r$12, ""), t$13.raws.afterName = (t$13.raws.afterName || "") + r$12, t$13.variable = !0;
			}
		}
	};
});
var No$1 = g$1((ax, Ao$2) => {
	var af$1 = qe$2(), uf$2 = Jt$1(), { isInlineComment: lf$2 } = go$1(), { interpolation: Co$1 } = vo$1(), { isMixinToken: cf$2 } = bo$1(), ff$2 = Eo$2(), pf$2 = Oo$1(), hf$2 = /(!\s*important)$/i;
	Ao$2.exports = class extends uf$2 {
		constructor(...e$4) {
			super(...e$4), this.lastNode = null;
		}
		atrule(e$4) {
			Co$1.bind(this)(e$4) || (super.atrule(e$4), ff$2(this.lastNode), pf$2(this.lastNode));
		}
		decl(...e$4) {
			super.decl(...e$4), /extend\(.+\)/i.test(this.lastNode.value) && (this.lastNode.extend = !0);
		}
		each(e$4) {
			e$4[0][1] = ` ${e$4[0][1]}`;
			let s$8 = e$4.findIndex((u$14) => u$14[0] === "("), r$12 = e$4.reverse().find((u$14) => u$14[0] === ")"), n$8 = e$4.reverse().indexOf(r$12), o$9 = e$4.splice(s$8, n$8).map((u$14) => u$14[1]).join("");
			for (let u$14 of e$4.reverse()) this.tokenizer.back(u$14);
			this.atrule(this.tokenizer.nextToken()), this.lastNode.function = !0, this.lastNode.params = o$9;
		}
		init(e$4, s$8, r$12) {
			super.init(e$4, s$8, r$12), this.lastNode = e$4;
		}
		inlineComment(e$4) {
			let s$8 = new af$1(), r$12 = e$4[1].slice(2);
			if (this.init(s$8, e$4[2]), s$8.source.end = this.getPosition(e$4[3] || e$4[2]), s$8.inline = !0, s$8.raws.begin = "//", /^\s*$/.test(r$12)) s$8.text = "", s$8.raws.left = r$12, s$8.raws.right = "";
			else {
				let n$8 = r$12.match(/^(\s*)([^]*[^\s])(\s*)$/);
				[, s$8.raws.left, s$8.text, s$8.raws.right] = n$8;
			}
		}
		mixin(e$4) {
			let [s$8] = e$4, r$12 = s$8[1].slice(0, 1), n$8 = e$4.findIndex((c$3) => c$3[0] === "brackets"), i$18 = e$4.findIndex((c$3) => c$3[0] === "("), o$9 = "";
			if ((n$8 < 0 || n$8 > 3) && i$18 > 0) {
				let c$3 = e$4.reduce((w$3, v$5, R$6) => v$5[0] === ")" ? R$6 : w$3), p$2 = e$4.slice(i$18, c$3 + i$18).map((w$3) => w$3[1]).join(""), [l$10] = e$4.slice(i$18), d$14 = [l$10[2], l$10[3]], [x$3] = e$4.slice(c$3, c$3 + 1), h$3 = [x$3[2], x$3[3]], m$11 = ["brackets", p$2].concat(d$14, h$3), y$7 = e$4.slice(0, i$18), b$7 = e$4.slice(c$3 + 1);
				e$4 = y$7, e$4.push(m$11), e$4 = e$4.concat(b$7);
			}
			let u$14 = [];
			for (let c$3 of e$4) if ((c$3[1] === "!" || u$14.length) && u$14.push(c$3), c$3[1] === "important") break;
			if (u$14.length) {
				let [c$3] = u$14, f$3 = e$4.indexOf(c$3), p$2 = u$14[u$14.length - 1], l$10 = [c$3[2], c$3[3]], d$14 = [p$2[4], p$2[5]], h$3 = ["word", u$14.map((m$11) => m$11[1]).join("")].concat(l$10, d$14);
				e$4.splice(f$3, u$14.length, h$3);
			}
			let a$13 = e$4.findIndex((c$3) => hf$2.test(c$3[1]));
			a$13 > 0 && ([, o$9] = e$4[a$13], e$4.splice(a$13, 1));
			for (let c$3 of e$4.reverse()) this.tokenizer.back(c$3);
			this.atrule(this.tokenizer.nextToken()), this.lastNode.mixin = !0, this.lastNode.raws.identifier = r$12, o$9 && (this.lastNode.important = !0, this.lastNode.raws.important = o$9);
		}
		other(e$4) {
			lf$2.bind(this)(e$4) || super.other(e$4);
		}
		rule(e$4) {
			let s$8 = e$4[e$4.length - 1], r$12 = e$4[e$4.length - 2];
			if (r$12[0] === "at-word" && s$8[0] === "{" && (this.tokenizer.back(s$8), Co$1.bind(this)(r$12))) {
				let i$18 = this.tokenizer.nextToken();
				e$4 = e$4.slice(0, e$4.length - 2).concat([i$18]);
				for (let o$9 of e$4.reverse()) this.tokenizer.back(o$9);
				return;
			}
			super.rule(e$4), /:extend\(.+\)/i.test(this.lastNode.selector) && (this.lastNode.extend = !0);
		}
		unknownWord(e$4) {
			let [s$8] = e$4;
			if (e$4[0][1] === "each" && e$4[1][0] === "(") {
				this.each(e$4);
				return;
			}
			if (cf$2(s$8)) {
				this.mixin(e$4);
				return;
			}
			super.unknownWord(e$4);
		}
	};
});
var Ro$1 = g$1((lx, Po$2) => {
	var df$2 = Yt$1();
	Po$2.exports = class extends df$2 {
		atrule(e$4, s$8) {
			if (!e$4.mixin && !e$4.variable && !e$4.function) {
				super.atrule(e$4, s$8);
				return;
			}
			let n$8 = `${e$4.function ? "" : e$4.raws.identifier || "@"}${e$4.name}`, i$18 = e$4.params ? this.rawValue(e$4, "params") : "", o$9 = e$4.raws.important || "";
			if (e$4.variable && (i$18 = e$4.value), typeof e$4.raws.afterName < "u" ? n$8 += e$4.raws.afterName : i$18 && (n$8 += " "), e$4.nodes) this.block(e$4, n$8 + i$18 + o$9);
			else {
				let u$14 = (e$4.raws.between || "") + o$9 + (s$8 ? ";" : "");
				this.builder(n$8 + i$18 + u$14, e$4);
			}
		}
		comment(e$4) {
			if (e$4.inline) {
				let s$8 = this.raw(e$4, "left", "commentLeft"), r$12 = this.raw(e$4, "right", "commentRight");
				this.builder(`//${s$8}${e$4.text}${r$12}`, e$4);
			} else super.comment(e$4);
		}
	};
});
var Io$1 = g$1((cx, xs$3) => {
	var mf$2 = De$2(), yf$2 = No$1(), gf$2 = Ro$1();
	xs$3.exports = {
		parse(t$13, e$4) {
			let s$8 = new mf$2(t$13, e$4), r$12 = new yf$2(s$8);
			return r$12.parse(), r$12.root.walk((n$8) => {
				let i$18 = s$8.css.lastIndexOf(n$8.source.input.css);
				if (i$18 === 0) return;
				if (i$18 + n$8.source.input.css.length !== s$8.css.length) throw new Error("Invalid state detected in postcss-less");
				let o$9 = i$18 + n$8.source.start.offset, u$14 = s$8.fromOffset(i$18 + n$8.source.start.offset);
				if (n$8.source.start = {
					offset: o$9,
					line: u$14.line,
					column: u$14.col
				}, n$8.source.end) {
					let a$13 = i$18 + n$8.source.end.offset, c$3 = s$8.fromOffset(i$18 + n$8.source.end.offset);
					n$8.source.end = {
						offset: a$13,
						line: c$3.line,
						column: c$3.col
					};
				}
			}), r$12.root;
		},
		stringify(t$13, e$4) {
			new gf$2(e$4).stringify(t$13);
		},
		nodeToString(t$13) {
			let e$4 = "";
			return xs$3.exports.stringify(t$13, (s$8) => {
				e$4 += s$8;
			}), e$4;
		}
	};
});
var er$2 = g$1((fx$1, Do$2) => {
	var wf$2 = le$2(), qo$3, Lo$2, ge$6 = class extends wf$2 {
		constructor(e$4) {
			super({
				type: "document",
				...e$4
			}), this.nodes || (this.nodes = []);
		}
		toResult(e$4 = {}) {
			return new qo$3(new Lo$2(), this, e$4).stringify();
		}
	};
	ge$6.registerLazyResult = (t$13) => {
		qo$3 = t$13;
	};
	ge$6.registerProcessor = (t$13) => {
		Lo$2 = t$13;
	};
	Do$2.exports = ge$6;
	ge$6.default = ge$6;
});
var Bo$1 = g$1((px$1, Mo$3) => {
	var vf$2 = Ht$2(), xf$3 = qe$2(), bf$2 = mt$1(), _f$2 = De$2(), Ef$2 = ps(), kf$2 = Be(), Sf$2 = jt$1();
	function wt$7(t$13, e$4) {
		if (Array.isArray(t$13)) return t$13.map((n$8) => wt$7(n$8));
		let { inputs: s$8,...r$12 } = t$13;
		if (s$8) {
			e$4 = [];
			for (let n$8 of s$8) {
				let i$18 = {
					...n$8,
					__proto__: _f$2.prototype
				};
				i$18.map && (i$18.map = {
					...i$18.map,
					__proto__: Ef$2.prototype
				}), e$4.push(i$18);
			}
		}
		if (r$12.nodes && (r$12.nodes = t$13.nodes.map((n$8) => wt$7(n$8, e$4))), r$12.source) {
			let { inputId: n$8,...i$18 } = r$12.source;
			r$12.source = i$18, n$8 != null && (r$12.source.input = e$4[n$8]);
		}
		if (r$12.type === "root") return new kf$2(r$12);
		if (r$12.type === "decl") return new bf$2(r$12);
		if (r$12.type === "rule") return new Sf$2(r$12);
		if (r$12.type === "comment") return new xf$3(r$12);
		if (r$12.type === "atrule") return new vf$2(r$12);
		throw new Error("Unknown node type: " + t$13.type);
	}
	Mo$3.exports = wt$7;
	wt$7.default = wt$7;
});
var bs = g$1((hx, Uo$3) => {
	Uo$3.exports = class {
		generate() {}
	};
});
var _s = g$1((mx, Fo$2) => {
	var vt$6 = class {
		constructor(e$4, s$8 = {}) {
			if (this.type = "warning", this.text = e$4, s$8.node && s$8.node.source) {
				let r$12 = s$8.node.rangeBy(s$8);
				this.line = r$12.start.line, this.column = r$12.start.column, this.endLine = r$12.end.line, this.endColumn = r$12.end.column;
			}
			for (let r$12 in s$8) this[r$12] = s$8[r$12];
		}
		toString() {
			return this.node ? this.node.error(this.text, {
				index: this.index,
				plugin: this.plugin,
				word: this.word
			}).message : this.plugin ? this.plugin + ": " + this.text : this.text;
		}
	};
	Fo$2.exports = vt$6;
	vt$6.default = vt$6;
});
var tr$3 = g$1((yx, $o$3) => {
	var Tf$2 = _s(), xt$4 = class {
		get content() {
			return this.css;
		}
		constructor(e$4, s$8, r$12) {
			this.processor = e$4, this.messages = [], this.root = s$8, this.opts = r$12, this.css = "", this.map = void 0;
		}
		toString() {
			return this.css;
		}
		warn(e$4, s$8 = {}) {
			s$8.plugin || this.lastPlugin && this.lastPlugin.postcssPlugin && (s$8.plugin = this.lastPlugin.postcssPlugin);
			let r$12 = new Tf$2(e$4, s$8);
			return this.messages.push(r$12), r$12;
		}
		warnings() {
			return this.messages.filter((e$4) => e$4.type === "warning");
		}
	};
	$o$3.exports = xt$4;
	xt$4.default = xt$4;
});
var Es = g$1((gx, Go$3) => {
	var Wo$4 = {};
	Go$3.exports = function(e$4) {
		Wo$4[e$4] || (Wo$4[e$4] = !0, typeof console < "u" && console.warn && console.warn(e$4));
	};
});
var Ts = g$1((vx, Ho$3) => {
	var Of$2 = le$2(), Cf$2 = er$2(), Af$2 = bs(), Nf$2 = gt$2(), Yo$3 = tr$3(), Pf$2 = Be(), Rf$2 = lt$1(), { isClean: K$6, my: If$2 } = Vt$2();
	Es();
	var qf$2 = {
		atrule: "AtRule",
		comment: "Comment",
		decl: "Declaration",
		document: "Document",
		root: "Root",
		rule: "Rule"
	}, Lf$2 = {
		AtRule: !0,
		AtRuleExit: !0,
		Comment: !0,
		CommentExit: !0,
		Declaration: !0,
		DeclarationExit: !0,
		Document: !0,
		DocumentExit: !0,
		Once: !0,
		OnceExit: !0,
		postcssPlugin: !0,
		prepare: !0,
		Root: !0,
		RootExit: !0,
		Rule: !0,
		RuleExit: !0
	}, Df$2 = {
		Once: !0,
		postcssPlugin: !0,
		prepare: !0
	}, Fe$4 = 0;
	function bt$7(t$13) {
		return typeof t$13 == "object" && typeof t$13.then == "function";
	}
	function zo$4(t$13) {
		let e$4 = !1, s$8 = qf$2[t$13.type];
		return t$13.type === "decl" ? e$4 = t$13.prop.toLowerCase() : t$13.type === "atrule" && (e$4 = t$13.name.toLowerCase()), e$4 && t$13.append ? [
			s$8,
			s$8 + "-" + e$4,
			Fe$4,
			s$8 + "Exit",
			s$8 + "Exit-" + e$4
		] : e$4 ? [
			s$8,
			s$8 + "-" + e$4,
			s$8 + "Exit",
			s$8 + "Exit-" + e$4
		] : t$13.append ? [
			s$8,
			Fe$4,
			s$8 + "Exit"
		] : [s$8, s$8 + "Exit"];
	}
	function Vo$4(t$13) {
		let e$4;
		return t$13.type === "document" ? e$4 = [
			"Document",
			Fe$4,
			"DocumentExit"
		] : t$13.type === "root" ? e$4 = [
			"Root",
			Fe$4,
			"RootExit"
		] : e$4 = zo$4(t$13), {
			eventIndex: 0,
			events: e$4,
			iterator: 0,
			node: t$13,
			visitorIndex: 0,
			visitors: []
		};
	}
	function ks$3(t$13) {
		return t$13[K$6] = !1, t$13.nodes && t$13.nodes.forEach((e$4) => ks$3(e$4)), t$13;
	}
	var Ss$2 = {}, fe$4 = class t$13 {
		get content() {
			return this.stringify().content;
		}
		get css() {
			return this.stringify().css;
		}
		get map() {
			return this.stringify().map;
		}
		get messages() {
			return this.sync().messages;
		}
		get opts() {
			return this.result.opts;
		}
		get processor() {
			return this.result.processor;
		}
		get root() {
			return this.sync().root;
		}
		get [Symbol.toStringTag]() {
			return "LazyResult";
		}
		constructor(e$4, s$8, r$12) {
			this.stringified = !1, this.processed = !1;
			let n$8;
			if (typeof s$8 == "object" && s$8 !== null && (s$8.type === "root" || s$8.type === "document")) n$8 = ks$3(s$8);
			else if (s$8 instanceof t$13 || s$8 instanceof Yo$3) n$8 = ks$3(s$8.root), s$8.map && (typeof r$12.map > "u" && (r$12.map = {}), r$12.map.inline || (r$12.map.inline = !1), r$12.map.prev = s$8.map);
			else {
				let i$18 = Nf$2;
				r$12.syntax && (i$18 = r$12.syntax.parse), r$12.parser && (i$18 = r$12.parser), i$18.parse && (i$18 = i$18.parse);
				try {
					n$8 = i$18(s$8, r$12);
				} catch (o$9) {
					this.processed = !0, this.error = o$9;
				}
				n$8 && !n$8[If$2] && Of$2.rebuild(n$8);
			}
			this.result = new Yo$3(e$4, n$8, r$12), this.helpers = {
				...Ss$2,
				postcss: Ss$2,
				result: this.result
			}, this.plugins = this.processor.plugins.map((i$18) => typeof i$18 == "object" && i$18.prepare ? {
				...i$18,
				...i$18.prepare(this.result)
			} : i$18);
		}
		async() {
			return this.error ? Promise.reject(this.error) : this.processed ? Promise.resolve(this.result) : (this.processing || (this.processing = this.runAsync()), this.processing);
		}
		catch(e$4) {
			return this.async().catch(e$4);
		}
		finally(e$4) {
			return this.async().then(e$4, e$4);
		}
		getAsyncError() {
			throw new Error("Use process(css).then(cb) to work with async plugins");
		}
		handleError(e$4, s$8) {
			let r$12 = this.result.lastPlugin;
			try {
				s$8 && s$8.addToError(e$4), this.error = e$4, e$4.name === "CssSyntaxError" && !e$4.plugin ? (e$4.plugin = r$12.postcssPlugin, e$4.setMessage()) : r$12.postcssVersion;
			} catch (n$8) {
				console && console.error && console.error(n$8);
			}
			return e$4;
		}
		prepareVisitors() {
			this.listeners = {};
			let e$4 = (s$8, r$12, n$8) => {
				this.listeners[r$12] || (this.listeners[r$12] = []), this.listeners[r$12].push([s$8, n$8]);
			};
			for (let s$8 of this.plugins) if (typeof s$8 == "object") for (let r$12 in s$8) {
				if (!Lf$2[r$12] && /^[A-Z]/.test(r$12)) throw new Error(`Unknown event ${r$12} in ${s$8.postcssPlugin}. Try to update PostCSS (${this.processor.version} now).`);
				if (!Df$2[r$12]) if (typeof s$8[r$12] == "object") for (let n$8 in s$8[r$12]) n$8 === "*" ? e$4(s$8, r$12, s$8[r$12][n$8]) : e$4(s$8, r$12 + "-" + n$8.toLowerCase(), s$8[r$12][n$8]);
				else typeof s$8[r$12] == "function" && e$4(s$8, r$12, s$8[r$12]);
			}
			this.hasListener = Object.keys(this.listeners).length > 0;
		}
		async runAsync() {
			this.plugin = 0;
			for (let e$4 = 0; e$4 < this.plugins.length; e$4++) {
				let s$8 = this.plugins[e$4], r$12 = this.runOnRoot(s$8);
				if (bt$7(r$12)) try {
					await r$12;
				} catch (n$8) {
					throw this.handleError(n$8);
				}
			}
			if (this.prepareVisitors(), this.hasListener) {
				let e$4 = this.result.root;
				for (; !e$4[K$6];) {
					e$4[K$6] = !0;
					let s$8 = [Vo$4(e$4)];
					for (; s$8.length > 0;) {
						let r$12 = this.visitTick(s$8);
						if (bt$7(r$12)) try {
							await r$12;
						} catch (n$8) {
							let i$18 = s$8[s$8.length - 1].node;
							throw this.handleError(n$8, i$18);
						}
					}
				}
				if (this.listeners.OnceExit) for (let [s$8, r$12] of this.listeners.OnceExit) {
					this.result.lastPlugin = s$8;
					try {
						if (e$4.type === "document") {
							let n$8 = e$4.nodes.map((i$18) => r$12(i$18, this.helpers));
							await Promise.all(n$8);
						} else await r$12(e$4, this.helpers);
					} catch (n$8) {
						throw this.handleError(n$8);
					}
				}
			}
			return this.processed = !0, this.stringify();
		}
		runOnRoot(e$4) {
			this.result.lastPlugin = e$4;
			try {
				if (typeof e$4 == "object" && e$4.Once) {
					if (this.result.root.type === "document") {
						let s$8 = this.result.root.nodes.map((r$12) => e$4.Once(r$12, this.helpers));
						return bt$7(s$8[0]) ? Promise.all(s$8) : s$8;
					}
					return e$4.Once(this.result.root, this.helpers);
				} else if (typeof e$4 == "function") return e$4(this.result.root, this.result);
			} catch (s$8) {
				throw this.handleError(s$8);
			}
		}
		stringify() {
			if (this.error) throw this.error;
			if (this.stringified) return this.result;
			this.stringified = !0, this.sync();
			let e$4 = this.result.opts, s$8 = Rf$2;
			e$4.syntax && (s$8 = e$4.syntax.stringify), e$4.stringifier && (s$8 = e$4.stringifier), s$8.stringify && (s$8 = s$8.stringify);
			let n$8 = new Af$2(s$8, this.result.root, this.result.opts).generate();
			return this.result.css = n$8[0], this.result.map = n$8[1], this.result;
		}
		sync() {
			if (this.error) throw this.error;
			if (this.processed) return this.result;
			if (this.processed = !0, this.processing) throw this.getAsyncError();
			for (let e$4 of this.plugins) {
				let s$8 = this.runOnRoot(e$4);
				if (bt$7(s$8)) throw this.getAsyncError();
			}
			if (this.prepareVisitors(), this.hasListener) {
				let e$4 = this.result.root;
				for (; !e$4[K$6];) e$4[K$6] = !0, this.walkSync(e$4);
				if (this.listeners.OnceExit) if (e$4.type === "document") for (let s$8 of e$4.nodes) this.visitSync(this.listeners.OnceExit, s$8);
				else this.visitSync(this.listeners.OnceExit, e$4);
			}
			return this.result;
		}
		then(e$4, s$8) {
			return this.async().then(e$4, s$8);
		}
		toString() {
			return this.css;
		}
		visitSync(e$4, s$8) {
			for (let [r$12, n$8] of e$4) {
				this.result.lastPlugin = r$12;
				let i$18;
				try {
					i$18 = n$8(s$8, this.helpers);
				} catch (o$9) {
					throw this.handleError(o$9, s$8.proxyOf);
				}
				if (s$8.type !== "root" && s$8.type !== "document" && !s$8.parent) return !0;
				if (bt$7(i$18)) throw this.getAsyncError();
			}
		}
		visitTick(e$4) {
			let s$8 = e$4[e$4.length - 1], { node: r$12, visitors: n$8 } = s$8;
			if (r$12.type !== "root" && r$12.type !== "document" && !r$12.parent) {
				e$4.pop();
				return;
			}
			if (n$8.length > 0 && s$8.visitorIndex < n$8.length) {
				let [o$9, u$14] = n$8[s$8.visitorIndex];
				s$8.visitorIndex += 1, s$8.visitorIndex === n$8.length && (s$8.visitors = [], s$8.visitorIndex = 0), this.result.lastPlugin = o$9;
				try {
					return u$14(r$12.toProxy(), this.helpers);
				} catch (a$13) {
					throw this.handleError(a$13, r$12);
				}
			}
			if (s$8.iterator !== 0) {
				let o$9 = s$8.iterator, u$14;
				for (; u$14 = r$12.nodes[r$12.indexes[o$9]];) if (r$12.indexes[o$9] += 1, !u$14[K$6]) {
					u$14[K$6] = !0, e$4.push(Vo$4(u$14));
					return;
				}
				s$8.iterator = 0, delete r$12.indexes[o$9];
			}
			let i$18 = s$8.events;
			for (; s$8.eventIndex < i$18.length;) {
				let o$9 = i$18[s$8.eventIndex];
				if (s$8.eventIndex += 1, o$9 === Fe$4) {
					r$12.nodes && r$12.nodes.length && (r$12[K$6] = !0, s$8.iterator = r$12.getIterator());
					return;
				} else if (this.listeners[o$9]) {
					s$8.visitors = this.listeners[o$9];
					return;
				}
			}
			e$4.pop();
		}
		walkSync(e$4) {
			e$4[K$6] = !0;
			let s$8 = zo$4(e$4);
			for (let r$12 of s$8) if (r$12 === Fe$4) e$4.nodes && e$4.each((n$8) => {
				n$8[K$6] || this.walkSync(n$8);
			});
			else {
				let n$8 = this.listeners[r$12];
				if (n$8 && this.visitSync(n$8, e$4.toProxy())) return;
			}
		}
		warnings() {
			return this.sync().warnings();
		}
	};
	fe$4.registerPostcss = (t$13) => {
		Ss$2 = t$13;
	};
	Ho$3.exports = fe$4;
	fe$4.default = fe$4;
	Pf$2.registerLazyResult(fe$4);
	Cf$2.registerLazyResult(fe$4);
});
var Ko$1 = g$1((bx, jo$3) => {
	var Mf$2 = bs(), Bf$2 = gt$2(), Uf$2 = tr$3(), Ff$2 = lt$1();
	Es();
	var _t$5 = class {
		get content() {
			return this.result.css;
		}
		get css() {
			return this.result.css;
		}
		get map() {
			return this.result.map;
		}
		get messages() {
			return [];
		}
		get opts() {
			return this.result.opts;
		}
		get processor() {
			return this.result.processor;
		}
		get root() {
			if (this._root) return this._root;
			let e$4, s$8 = Bf$2;
			try {
				e$4 = s$8(this._css, this._opts);
			} catch (r$12) {
				this.error = r$12;
			}
			if (this.error) throw this.error;
			return this._root = e$4, e$4;
		}
		get [Symbol.toStringTag]() {
			return "NoWorkResult";
		}
		constructor(e$4, s$8, r$12) {
			s$8 = s$8.toString(), this.stringified = !1, this._processor = e$4, this._css = s$8, this._opts = r$12, this._map = void 0;
			let n$8, i$18 = Ff$2;
			this.result = new Uf$2(this._processor, n$8, this._opts), this.result.css = s$8;
			let o$9 = this;
			Object.defineProperty(this.result, "root", { get() {
				return o$9.root;
			} });
			let u$14 = new Mf$2(i$18, n$8, this._opts, s$8);
			if (u$14.isMap()) {
				let [a$13, c$3] = u$14.generate();
				a$13 && (this.result.css = a$13), c$3 && (this.result.map = c$3);
			} else u$14.clearAnnotation(), this.result.css = u$14.css;
		}
		async() {
			return this.error ? Promise.reject(this.error) : Promise.resolve(this.result);
		}
		catch(e$4) {
			return this.async().catch(e$4);
		}
		finally(e$4) {
			return this.async().then(e$4, e$4);
		}
		sync() {
			if (this.error) throw this.error;
			return this.result;
		}
		then(e$4, s$8) {
			return this.async().then(e$4, s$8);
		}
		toString() {
			return this._css;
		}
		warnings() {
			return [];
		}
	};
	jo$3.exports = _t$5;
	_t$5.default = _t$5;
});
var Xo$1 = g$1((_x, Qo$4) => {
	var $f$1 = er$2(), Wf$1 = Ts(), Gf$1 = Ko$1(), Yf$1 = Be(), we$3 = class {
		constructor(e$4 = []) {
			this.version = "8.5.6", this.plugins = this.normalize(e$4);
		}
		normalize(e$4) {
			let s$8 = [];
			for (let r$12 of e$4) if (r$12.postcss === !0 ? r$12 = r$12() : r$12.postcss && (r$12 = r$12.postcss), typeof r$12 == "object" && Array.isArray(r$12.plugins)) s$8 = s$8.concat(r$12.plugins);
			else if (typeof r$12 == "object" && r$12.postcssPlugin) s$8.push(r$12);
			else if (typeof r$12 == "function") s$8.push(r$12);
			else if (!(typeof r$12 == "object" && (r$12.parse || r$12.stringify))) throw new Error(r$12 + " is not a PostCSS plugin");
			return s$8;
		}
		process(e$4, s$8 = {}) {
			return !this.plugins.length && !s$8.parser && !s$8.stringifier && !s$8.syntax ? new Gf$1(this, e$4, s$8) : new Wf$1(this, e$4, s$8);
		}
		use(e$4) {
			return this.plugins = this.plugins.concat(this.normalize([e$4])), this;
		}
	};
	Qo$4.exports = we$3;
	we$3.default = we$3;
	Yf$1.registerProcessor(we$3);
	$f$1.registerProcessor(we$3);
});
var rr$2 = g$1((Ex, na$5) => {
	var Jo$3 = Ht$2(), Zo$3 = qe$2(), Vf$1 = le$2(), zf$1 = Gt$1(), ea$4 = mt$1(), ta$4 = er$2(), Hf = Bo$1(), jf$1 = De$2(), Kf$1 = Ts(), Qf$1 = gs(), Xf = pt$1(), Jf$1 = gt$2(), Os$2 = Xo$1(), Zf$1 = tr$3(), ra$4 = Be(), sa$4 = jt$1(), ep$1 = lt$1(), tp$1 = _s();
	function k$5(...t$13) {
		return t$13.length === 1 && Array.isArray(t$13[0]) && (t$13 = t$13[0]), new Os$2(t$13);
	}
	k$5.plugin = function(e$4, s$8) {
		let r$12 = !1;
		function n$8(...o$9) {
			console && console.warn && !r$12 && (r$12 = !0, console.warn(e$4 + `: postcss.plugin was deprecated. Migration guide:
https://evilmartians.com/chronicles/postcss-8-plugin-migration`));
			let u$14 = s$8(...o$9);
			return u$14.postcssPlugin = e$4, u$14.postcssVersion = new Os$2().version, u$14;
		}
		let i$18;
		return Object.defineProperty(n$8, "postcss", { get() {
			return i$18 || (i$18 = n$8()), i$18;
		} }), n$8.process = function(o$9, u$14, a$13) {
			return k$5([n$8(a$13)]).process(o$9, u$14);
		}, n$8;
	};
	k$5.stringify = ep$1;
	k$5.parse = Jf$1;
	k$5.fromJSON = Hf;
	k$5.list = Qf$1;
	k$5.comment = (t$13) => new Zo$3(t$13);
	k$5.atRule = (t$13) => new Jo$3(t$13);
	k$5.decl = (t$13) => new ea$4(t$13);
	k$5.rule = (t$13) => new sa$4(t$13);
	k$5.root = (t$13) => new ra$4(t$13);
	k$5.document = (t$13) => new ta$4(t$13);
	k$5.CssSyntaxError = zf$1;
	k$5.Declaration = ea$4;
	k$5.Container = Vf$1;
	k$5.Processor = Os$2;
	k$5.Document = ta$4;
	k$5.Comment = Zo$3;
	k$5.Warning = tp$1;
	k$5.AtRule = Jo$3;
	k$5.Result = Zf$1;
	k$5.Input = jf$1;
	k$5.Rule = sa$4;
	k$5.Root = ra$4;
	k$5.Node = Xf;
	Kf$1.registerPostcss(k$5);
	na$5.exports = k$5;
	k$5.default = k$5;
});
var oa = g$1((kx, ia$4) => {
	var { Container: rp$1 } = rr$2(), Cs$2 = class extends rp$1 {
		constructor(e$4) {
			super(e$4), this.type = "decl", this.isNested = !0, this.nodes || (this.nodes = []);
		}
	};
	ia$4.exports = Cs$2;
});
var la = g$1((Sx, ua$3) => {
	var sr$5 = /[\t\n\f\r "#'()/;[\\\]{}]/g, nr$6 = /[,\t\n\f\r !"#'():;@[\\\]{}]|\/(?=\*)/g, sp$1 = /.[\r\n"'(/\\]/, aa$5 = /[\da-f]/i, ir$5 = /[\n\f\r]/g;
	ua$3.exports = function(e$4, s$8 = {}) {
		let r$12 = e$4.css.valueOf(), n$8 = s$8.ignoreErrors, i$18, o$9, u$14, a$13, c$3, f$3, p$2, l$10, d$14, x$3 = r$12.length, h$3 = 0, m$11 = [], y$7 = [], b$7;
		function w$3() {
			return h$3;
		}
		function v$5(T$9) {
			throw e$4.error("Unclosed " + T$9, h$3);
		}
		function R$6() {
			return y$7.length === 0 && h$3 >= x$3;
		}
		function F$4() {
			let T$9 = 1, O$3 = !1, C$3 = !1;
			for (; T$9 > 0;) o$9 += 1, r$12.length <= o$9 && v$5("interpolation"), i$18 = r$12.charCodeAt(o$9), l$10 = r$12.charCodeAt(o$9 + 1), O$3 ? !C$3 && i$18 === O$3 ? (O$3 = !1, C$3 = !1) : i$18 === 92 ? C$3 = !C$3 : C$3 && (C$3 = !1) : i$18 === 39 || i$18 === 34 ? O$3 = i$18 : i$18 === 125 ? T$9 -= 1 : i$18 === 35 && l$10 === 123 && (T$9 += 1);
		}
		function Q$4(T$9) {
			if (y$7.length) return y$7.pop();
			if (h$3 >= x$3) return;
			let O$3 = T$9 ? T$9.ignoreUnclosed : !1;
			switch (i$18 = r$12.charCodeAt(h$3), i$18) {
				case 10:
				case 32:
				case 9:
				case 13:
				case 12:
					o$9 = h$3;
					do
						o$9 += 1, i$18 = r$12.charCodeAt(o$9);
					while (i$18 === 32 || i$18 === 10 || i$18 === 9 || i$18 === 13 || i$18 === 12);
					d$14 = ["space", r$12.slice(h$3, o$9)], h$3 = o$9 - 1;
					break;
				case 91:
				case 93:
				case 123:
				case 125:
				case 58:
				case 59:
				case 41: {
					let C$3 = String.fromCharCode(i$18);
					d$14 = [
						C$3,
						C$3,
						h$3
					];
					break;
				}
				case 44:
					d$14 = [
						"word",
						",",
						h$3,
						h$3 + 1
					];
					break;
				case 40:
					if (p$2 = m$11.length ? m$11.pop()[1] : "", l$10 = r$12.charCodeAt(h$3 + 1), p$2 === "url" && l$10 !== 39 && l$10 !== 34) {
						for (b$7 = 1, f$3 = !1, o$9 = h$3 + 1; o$9 <= r$12.length - 1;) {
							if (l$10 = r$12.charCodeAt(o$9), l$10 === 92) f$3 = !f$3;
							else if (l$10 === 40) b$7 += 1;
							else if (l$10 === 41 && (b$7 -= 1, b$7 === 0)) break;
							o$9 += 1;
						}
						a$13 = r$12.slice(h$3, o$9 + 1), d$14 = [
							"brackets",
							a$13,
							h$3,
							o$9
						], h$3 = o$9;
					} else o$9 = r$12.indexOf(")", h$3 + 1), a$13 = r$12.slice(h$3, o$9 + 1), o$9 === -1 || sp$1.test(a$13) ? d$14 = [
						"(",
						"(",
						h$3
					] : (d$14 = [
						"brackets",
						a$13,
						h$3,
						o$9
					], h$3 = o$9);
					break;
				case 39:
				case 34:
					for (u$14 = i$18, o$9 = h$3, f$3 = !1; o$9 < x$3 && (o$9++, o$9 === x$3 && v$5("string"), i$18 = r$12.charCodeAt(o$9), l$10 = r$12.charCodeAt(o$9 + 1), !(!f$3 && i$18 === u$14));) i$18 === 92 ? f$3 = !f$3 : f$3 ? f$3 = !1 : i$18 === 35 && l$10 === 123 && F$4();
					d$14 = [
						"string",
						r$12.slice(h$3, o$9 + 1),
						h$3,
						o$9
					], h$3 = o$9;
					break;
				case 64:
					sr$5.lastIndex = h$3 + 1, sr$5.test(r$12), sr$5.lastIndex === 0 ? o$9 = r$12.length - 1 : o$9 = sr$5.lastIndex - 2, d$14 = [
						"at-word",
						r$12.slice(h$3, o$9 + 1),
						h$3,
						o$9
					], h$3 = o$9;
					break;
				case 92:
					for (o$9 = h$3, c$3 = !0; r$12.charCodeAt(o$9 + 1) === 92;) o$9 += 1, c$3 = !c$3;
					if (i$18 = r$12.charCodeAt(o$9 + 1), c$3 && i$18 !== 47 && i$18 !== 32 && i$18 !== 10 && i$18 !== 9 && i$18 !== 13 && i$18 !== 12 && (o$9 += 1, aa$5.test(r$12.charAt(o$9)))) {
						for (; aa$5.test(r$12.charAt(o$9 + 1));) o$9 += 1;
						r$12.charCodeAt(o$9 + 1) === 32 && (o$9 += 1);
					}
					d$14 = [
						"word",
						r$12.slice(h$3, o$9 + 1),
						h$3,
						o$9
					], h$3 = o$9;
					break;
				default:
					l$10 = r$12.charCodeAt(h$3 + 1), i$18 === 35 && l$10 === 123 ? (o$9 = h$3, F$4(), a$13 = r$12.slice(h$3, o$9 + 1), d$14 = [
						"word",
						a$13,
						h$3,
						o$9
					], h$3 = o$9) : i$18 === 47 && l$10 === 42 ? (o$9 = r$12.indexOf("*/", h$3 + 2) + 1, o$9 === 0 && (n$8 || O$3 ? o$9 = r$12.length : v$5("comment")), d$14 = [
						"comment",
						r$12.slice(h$3, o$9 + 1),
						h$3,
						o$9
					], h$3 = o$9) : i$18 === 47 && l$10 === 47 ? (ir$5.lastIndex = h$3 + 1, ir$5.test(r$12), ir$5.lastIndex === 0 ? o$9 = r$12.length - 1 : o$9 = ir$5.lastIndex - 2, a$13 = r$12.slice(h$3, o$9 + 1), d$14 = [
						"comment",
						a$13,
						h$3,
						o$9,
						"inline"
					], h$3 = o$9) : (nr$6.lastIndex = h$3 + 1, nr$6.test(r$12), nr$6.lastIndex === 0 ? o$9 = r$12.length - 1 : o$9 = nr$6.lastIndex - 2, d$14 = [
						"word",
						r$12.slice(h$3, o$9 + 1),
						h$3,
						o$9
					], m$11.push(d$14), h$3 = o$9);
					break;
			}
			return h$3++, d$14;
		}
		function W$2(T$9) {
			y$7.push(T$9);
		}
		return {
			back: W$2,
			endOfFile: R$6,
			nextToken: Q$4,
			position: w$3
		};
	};
});
var fa = g$1((Tx, ca$4) => {
	var { Comment: np$1 } = rr$2(), ip$1 = Jt$1(), op$1 = oa(), ap$1 = la(), As$2 = class extends ip$1 {
		atrule(e$4) {
			let s$8 = e$4[1], r$12 = e$4;
			for (; !this.tokenizer.endOfFile();) {
				let n$8 = this.tokenizer.nextToken();
				if (n$8[0] === "word" && n$8[2] === r$12[3] + 1) s$8 += n$8[1], r$12 = n$8;
				else {
					this.tokenizer.back(n$8);
					break;
				}
			}
			super.atrule([
				"at-word",
				s$8,
				e$4[2],
				r$12[3]
			]);
		}
		comment(e$4) {
			if (e$4[4] === "inline") {
				let s$8 = new np$1();
				this.init(s$8, e$4[2]), s$8.raws.inline = !0;
				let r$12 = this.input.fromOffset(e$4[3]);
				s$8.source.end = {
					column: r$12.col,
					line: r$12.line,
					offset: e$4[3] + 1
				};
				let n$8 = e$4[1].slice(2);
				if (/^\s*$/.test(n$8)) s$8.text = "", s$8.raws.left = n$8, s$8.raws.right = "";
				else {
					let i$18 = n$8.match(/^(\s*)([^]*\S)(\s*)$/);
					s$8.text = i$18[2].replace(/(\*\/|\/\*)/g, "*//*"), s$8.raws.left = i$18[1], s$8.raws.right = i$18[3], s$8.raws.text = i$18[2];
				}
			} else super.comment(e$4);
		}
		createTokenizer() {
			this.tokenizer = ap$1(this.input);
		}
		raw(e$4, s$8, r$12, n$8) {
			if (super.raw(e$4, s$8, r$12, n$8), e$4.raws[s$8]) {
				let i$18 = e$4.raws[s$8].raw;
				e$4.raws[s$8].raw = r$12.reduce((o$9, u$14) => {
					if (u$14[0] === "comment" && u$14[4] === "inline") {
						let a$13 = u$14[1].slice(2).replace(/(\*\/|\/\*)/g, "*//*");
						return o$9 + "/*" + a$13 + "*/";
					} else return o$9 + u$14[1];
				}, ""), i$18 !== e$4.raws[s$8].raw && (e$4.raws[s$8].scss = i$18);
			}
		}
		rule(e$4) {
			let s$8 = !1, r$12 = 0, n$8 = "";
			for (let i$18 of e$4) if (s$8) i$18[0] !== "comment" && i$18[0] !== "{" && (n$8 += i$18[1]);
			else {
				if (i$18[0] === "space" && i$18[1].includes(`
`)) break;
				i$18[0] === "(" ? r$12 += 1 : i$18[0] === ")" ? r$12 -= 1 : r$12 === 0 && i$18[0] === ":" && (s$8 = !0);
			}
			if (!s$8 || n$8.trim() === "" || /^[#:A-Za-z-]/.test(n$8)) super.rule(e$4);
			else {
				e$4.pop();
				let i$18 = new op$1();
				this.init(i$18, e$4[0][2]);
				let o$9;
				for (let a$13 = e$4.length - 1; a$13 >= 0; a$13--) if (e$4[a$13][0] !== "space") {
					o$9 = e$4[a$13];
					break;
				}
				if (o$9[3]) {
					let a$13 = this.input.fromOffset(o$9[3]);
					i$18.source.end = {
						column: a$13.col,
						line: a$13.line,
						offset: o$9[3] + 1
					};
				} else {
					let a$13 = this.input.fromOffset(o$9[2]);
					i$18.source.end = {
						column: a$13.col,
						line: a$13.line,
						offset: o$9[2] + 1
					};
				}
				for (; e$4[0][0] !== "word";) i$18.raws.before += e$4.shift()[1];
				if (e$4[0][2]) {
					let a$13 = this.input.fromOffset(e$4[0][2]);
					i$18.source.start = {
						column: a$13.col,
						line: a$13.line,
						offset: e$4[0][2]
					};
				}
				for (i$18.prop = ""; e$4.length;) {
					let a$13 = e$4[0][0];
					if (a$13 === ":" || a$13 === "space" || a$13 === "comment") break;
					i$18.prop += e$4.shift()[1];
				}
				i$18.raws.between = "";
				let u$14;
				for (; e$4.length;) if (u$14 = e$4.shift(), u$14[0] === ":") {
					i$18.raws.between += u$14[1];
					break;
				} else i$18.raws.between += u$14[1];
				(i$18.prop[0] === "_" || i$18.prop[0] === "*") && (i$18.raws.before += i$18.prop[0], i$18.prop = i$18.prop.slice(1)), i$18.raws.between += this.spacesAndCommentsFromStart(e$4), this.precheckMissedSemicolon(e$4);
				for (let a$13 = e$4.length - 1; a$13 > 0; a$13--) {
					if (u$14 = e$4[a$13], u$14[1] === "!important") {
						i$18.important = !0;
						let c$3 = this.stringFrom(e$4, a$13);
						c$3 = this.spacesFromEnd(e$4) + c$3, c$3 !== " !important" && (i$18.raws.important = c$3);
						break;
					} else if (u$14[1] === "important") {
						let c$3 = e$4.slice(0), f$3 = "";
						for (let p$2 = a$13; p$2 > 0; p$2--) {
							let l$10 = c$3[p$2][0];
							if (f$3.trim().indexOf("!") === 0 && l$10 !== "space") break;
							f$3 = c$3.pop()[1] + f$3;
						}
						f$3.trim().indexOf("!") === 0 && (i$18.important = !0, i$18.raws.important = f$3, e$4 = c$3);
					}
					if (u$14[0] !== "space" && u$14[0] !== "comment") break;
				}
				this.raw(i$18, "value", e$4), i$18.value.includes(":") && this.checkMissedSemicolon(e$4), this.current = i$18;
			}
		}
	};
	ca$4.exports = As$2;
});
var ha = g$1((Ox, pa$3) => {
	var { Input: up$1 } = rr$2(), lp$1 = fa();
	pa$3.exports = function(e$4, s$8) {
		let r$12 = new up$1(e$4, s$8), n$8 = new lp$1(r$12);
		return n$8.parse(), n$8.root;
	};
});
var Ps = g$1((Ns$1) => {
	Object.defineProperty(Ns$1, "__esModule", { value: !0 });
	function fp$1(t$13) {
		this.after = t$13.after, this.before = t$13.before, this.type = t$13.type, this.value = t$13.value, this.sourceIndex = t$13.sourceIndex;
	}
	Ns$1.default = fp$1;
});
var Is = g$1((Rs$3) => {
	Object.defineProperty(Rs$3, "__esModule", { value: !0 });
	var pp$1 = Ps(), ma$3 = hp$1(pp$1);
	function hp$1(t$13) {
		return t$13 && t$13.__esModule ? t$13 : { default: t$13 };
	}
	function Et$5(t$13) {
		var e$4 = this;
		this.constructor(t$13), this.nodes = t$13.nodes, this.after === void 0 && (this.after = this.nodes.length > 0 ? this.nodes[this.nodes.length - 1].after : ""), this.before === void 0 && (this.before = this.nodes.length > 0 ? this.nodes[0].before : ""), this.sourceIndex === void 0 && (this.sourceIndex = this.before.length), this.nodes.forEach(function(s$8) {
			s$8.parent = e$4;
		});
	}
	Et$5.prototype = Object.create(ma$3.default.prototype);
	Et$5.constructor = ma$3.default;
	Et$5.prototype.walk = function(e$4, s$8) {
		for (var r$12 = typeof e$4 == "string" || e$4 instanceof RegExp, n$8 = r$12 ? s$8 : e$4, i$18 = typeof e$4 == "string" ? new RegExp(e$4) : e$4, o$9 = 0; o$9 < this.nodes.length; o$9++) {
			var u$14 = this.nodes[o$9];
			if ((r$12 ? i$18.test(u$14.type) : !0) && n$8 && n$8(u$14, o$9, this.nodes) === !1 || u$14.nodes && u$14.walk(e$4, s$8) === !1) return !1;
		}
		return !0;
	};
	Et$5.prototype.each = function() {
		for (var e$4 = arguments.length <= 0 || arguments[0] === void 0 ? function() {} : arguments[0], s$8 = 0; s$8 < this.nodes.length; s$8++) {
			var r$12 = this.nodes[s$8];
			if (e$4(r$12, s$8, this.nodes) === !1) return !1;
		}
		return !0;
	};
	Rs$3.default = Et$5;
});
var va = g$1((kt$6) => {
	Object.defineProperty(kt$6, "__esModule", { value: !0 });
	kt$6.parseMediaFeature = wa$3;
	kt$6.parseMediaQuery = Ls$3;
	kt$6.parseMediaList = yp$1;
	var dp$1 = Ps(), ya$3 = ga$3(dp$1), mp$1 = Is(), qs$3 = ga$3(mp$1);
	function ga$3(t$13) {
		return t$13 && t$13.__esModule ? t$13 : { default: t$13 };
	}
	function wa$3(t$13) {
		var e$4 = arguments.length <= 1 || arguments[1] === void 0 ? 0 : arguments[1], s$8 = [{
			mode: "normal",
			character: null
		}], r$12 = [], n$8 = 0, i$18 = "", o$9 = null, u$14 = null, a$13 = e$4, c$3 = t$13;
		t$13[0] === "(" && t$13[t$13.length - 1] === ")" && (c$3 = t$13.substring(1, t$13.length - 1), a$13++);
		for (var f$3 = 0; f$3 < c$3.length; f$3++) {
			var p$2 = c$3[f$3];
			if ((p$2 === "'" || p$2 === "\"") && (s$8[n$8].isCalculationEnabled === !0 ? (s$8.push({
				mode: "string",
				isCalculationEnabled: !1,
				character: p$2
			}), n$8++) : s$8[n$8].mode === "string" && s$8[n$8].character === p$2 && c$3[f$3 - 1] !== "\\" && (s$8.pop(), n$8--)), p$2 === "{" ? (s$8.push({
				mode: "interpolation",
				isCalculationEnabled: !0
			}), n$8++) : p$2 === "}" && (s$8.pop(), n$8--), s$8[n$8].mode === "normal" && p$2 === ":") {
				var l$10 = c$3.substring(f$3 + 1);
				u$14 = {
					type: "value",
					before: /^(\s*)/.exec(l$10)[1],
					after: /(\s*)$/.exec(l$10)[1],
					value: l$10.trim()
				}, u$14.sourceIndex = u$14.before.length + f$3 + 1 + a$13, o$9 = {
					type: "colon",
					sourceIndex: f$3 + a$13,
					after: u$14.before,
					value: ":"
				};
				break;
			}
			i$18 += p$2;
		}
		return i$18 = {
			type: "media-feature",
			before: /^(\s*)/.exec(i$18)[1],
			after: /(\s*)$/.exec(i$18)[1],
			value: i$18.trim()
		}, i$18.sourceIndex = i$18.before.length + a$13, r$12.push(i$18), o$9 !== null && (o$9.before = i$18.after, r$12.push(o$9)), u$14 !== null && r$12.push(u$14), r$12;
	}
	function Ls$3(t$13) {
		var e$4 = arguments.length <= 1 || arguments[1] === void 0 ? 0 : arguments[1], s$8 = [], r$12 = 0, n$8 = !1, i$18 = void 0;
		function o$9() {
			return {
				before: "",
				after: "",
				value: ""
			};
		}
		i$18 = o$9();
		for (var u$14 = 0; u$14 < t$13.length; u$14++) {
			var a$13 = t$13[u$14];
			n$8 ? (i$18.value += a$13, (a$13 === "{" || a$13 === "(") && r$12++, (a$13 === ")" || a$13 === "}") && r$12--) : a$13.search(/\s/) !== -1 ? i$18.before += a$13 : (a$13 === "(" && (i$18.type = "media-feature-expression", r$12++), i$18.value = a$13, i$18.sourceIndex = e$4 + u$14, n$8 = !0), n$8 && r$12 === 0 && (a$13 === ")" || u$14 === t$13.length - 1 || t$13[u$14 + 1].search(/\s/) !== -1) && ([
				"not",
				"only",
				"and"
			].indexOf(i$18.value) !== -1 && (i$18.type = "keyword"), i$18.type === "media-feature-expression" && (i$18.nodes = wa$3(i$18.value, i$18.sourceIndex)), s$8.push(Array.isArray(i$18.nodes) ? new qs$3.default(i$18) : new ya$3.default(i$18)), i$18 = o$9(), n$8 = !1);
		}
		for (var c$3 = 0; c$3 < s$8.length; c$3++) if (i$18 = s$8[c$3], c$3 > 0 && (s$8[c$3 - 1].after = i$18.before), i$18.type === void 0) {
			if (c$3 > 0) {
				if (s$8[c$3 - 1].type === "media-feature-expression") {
					i$18.type = "keyword";
					continue;
				}
				if (s$8[c$3 - 1].value === "not" || s$8[c$3 - 1].value === "only") {
					i$18.type = "media-type";
					continue;
				}
				if (s$8[c$3 - 1].value === "and") {
					i$18.type = "media-feature-expression";
					continue;
				}
				s$8[c$3 - 1].type === "media-type" && (s$8[c$3 + 1] ? i$18.type = s$8[c$3 + 1].type === "media-feature-expression" ? "keyword" : "media-feature-expression" : i$18.type = "media-feature-expression");
			}
			if (c$3 === 0) {
				if (!s$8[c$3 + 1]) {
					i$18.type = "media-type";
					continue;
				}
				if (s$8[c$3 + 1] && (s$8[c$3 + 1].type === "media-feature-expression" || s$8[c$3 + 1].type === "keyword")) {
					i$18.type = "media-type";
					continue;
				}
				if (s$8[c$3 + 2]) {
					if (s$8[c$3 + 2].type === "media-feature-expression") {
						i$18.type = "media-type", s$8[c$3 + 1].type = "keyword";
						continue;
					}
					if (s$8[c$3 + 2].type === "keyword") {
						i$18.type = "keyword", s$8[c$3 + 1].type = "media-type";
						continue;
					}
				}
				if (s$8[c$3 + 3] && s$8[c$3 + 3].type === "media-feature-expression") {
					i$18.type = "keyword", s$8[c$3 + 1].type = "media-type", s$8[c$3 + 2].type = "keyword";
					continue;
				}
			}
		}
		return s$8;
	}
	function yp$1(t$13) {
		var e$4 = [], s$8 = 0, r$12 = 0, n$8 = /^(\s*)url\s*\(/.exec(t$13);
		if (n$8 !== null) {
			for (var i$18 = n$8[0].length, o$9 = 1; o$9 > 0;) {
				var u$14 = t$13[i$18];
				u$14 === "(" && o$9++, u$14 === ")" && o$9--, i$18++;
			}
			e$4.unshift(new ya$3.default({
				type: "url",
				value: t$13.substring(0, i$18).trim(),
				sourceIndex: n$8[1].length,
				before: n$8[1],
				after: /^(\s*)/.exec(t$13.substring(i$18))[1]
			})), s$8 = i$18;
		}
		for (var a$13 = s$8; a$13 < t$13.length; a$13++) {
			var c$3 = t$13[a$13];
			if (c$3 === "(" && r$12++, c$3 === ")" && r$12--, r$12 === 0 && c$3 === ",") {
				var f$3 = t$13.substring(s$8, a$13), p$2 = /^(\s*)/.exec(f$3)[1];
				e$4.push(new qs$3.default({
					type: "media-query",
					value: f$3.trim(),
					sourceIndex: s$8 + p$2.length,
					nodes: Ls$3(f$3, s$8),
					before: p$2,
					after: /(\s*)$/.exec(f$3)[1]
				})), s$8 = a$13 + 1;
			}
		}
		var l$10 = t$13.substring(s$8), d$14 = /^(\s*)/.exec(l$10)[1];
		return e$4.push(new qs$3.default({
			type: "media-query",
			value: l$10.trim(),
			sourceIndex: s$8 + d$14.length,
			nodes: Ls$3(l$10, s$8),
			before: d$14,
			after: /(\s*)$/.exec(l$10)[1]
		})), e$4;
	}
});
var xa = g$1((Ds$2) => {
	Object.defineProperty(Ds$2, "__esModule", { value: !0 });
	Ds$2.default = bp$2;
	var gp$2 = Is(), wp$2 = xp$2(gp$2), vp$2 = va();
	function xp$2(t$13) {
		return t$13 && t$13.__esModule ? t$13 : { default: t$13 };
	}
	function bp$2(t$13) {
		return new wp$2.default({
			nodes: (0, vp$2.parseMediaList)(t$13),
			type: "media-query-list",
			value: t$13.trim()
		});
	}
});
var Bs$1 = g$1((Dx, Ea$4) => {
	Ea$4.exports = function(e$4, s$8) {
		if (s$8 = typeof s$8 == "number" ? s$8 : Infinity, !s$8) return Array.isArray(e$4) ? e$4.map(function(n$8) {
			return n$8;
		}) : e$4;
		return r$12(e$4, 1);
		function r$12(n$8, i$18) {
			return n$8.reduce(function(o$9, u$14) {
				return Array.isArray(u$14) && i$18 < s$8 ? o$9.concat(r$12(u$14, i$18 + 1)) : o$9.concat(u$14);
			}, []);
		}
	};
});
var Us$1 = g$1((Mx, ka$4) => {
	ka$4.exports = function(t$13, e$4) {
		for (var s$8 = -1, r$12 = []; (s$8 = t$13.indexOf(e$4, s$8 + 1)) !== -1;) r$12.push(s$8);
		return r$12;
	};
});
var Fs$1 = g$1((Bx, Sa$4) => {
	function kp$2(t$13, e$4) {
		for (var s$8 = 1, r$12 = t$13.length, n$8 = t$13[0], i$18 = t$13[0], o$9 = 1; o$9 < r$12; ++o$9) if (i$18 = n$8, n$8 = t$13[o$9], e$4(n$8, i$18)) {
			if (o$9 === s$8) {
				s$8++;
				continue;
			}
			t$13[s$8++] = n$8;
		}
		return t$13.length = s$8, t$13;
	}
	function Sp$2(t$13) {
		for (var e$4 = 1, s$8 = t$13.length, r$12 = t$13[0], n$8 = t$13[0], i$18 = 1; i$18 < s$8; ++i$18, n$8 = r$12) if (n$8 = r$12, r$12 = t$13[i$18], r$12 !== n$8) {
			if (i$18 === e$4) {
				e$4++;
				continue;
			}
			t$13[e$4++] = r$12;
		}
		return t$13.length = e$4, t$13;
	}
	function Tp$2(t$13, e$4, s$8) {
		return t$13.length === 0 ? t$13 : e$4 ? (s$8 || t$13.sort(e$4), kp$2(t$13, e$4)) : (s$8 || t$13.sort(), Sp$2(t$13));
	}
	Sa$4.exports = Tp$2;
});
var ve$2 = g$1((or$5, Oa$3) => {
	or$5.__esModule = !0;
	var Ta$3 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t$13) {
		return typeof t$13;
	} : function(t$13) {
		return t$13 && typeof Symbol == "function" && t$13.constructor === Symbol && t$13 !== Symbol.prototype ? "symbol" : typeof t$13;
	};
	function Op$2(t$13, e$4) {
		if (!(t$13 instanceof e$4)) throw new TypeError("Cannot call a class as a function");
	}
	var Cp$2 = function t$13(e$4, s$8) {
		if ((typeof e$4 > "u" ? "undefined" : Ta$3(e$4)) !== "object") return e$4;
		var r$12 = new e$4.constructor();
		for (var n$8 in e$4) if (e$4.hasOwnProperty(n$8)) {
			var i$18 = e$4[n$8], o$9 = typeof i$18 > "u" ? "undefined" : Ta$3(i$18);
			n$8 === "parent" && o$9 === "object" ? s$8 && (r$12[n$8] = s$8) : i$18 instanceof Array ? r$12[n$8] = i$18.map(function(u$14) {
				return t$13(u$14, r$12);
			}) : r$12[n$8] = t$13(i$18, r$12);
		}
		return r$12;
	};
	or$5.default = function() {
		function t$13() {
			var e$4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
			Op$2(this, t$13);
			for (var s$8 in e$4) this[s$8] = e$4[s$8];
			var r$12 = e$4.spaces;
			r$12 = r$12 === void 0 ? {} : r$12;
			var n$8 = r$12.before, i$18 = n$8 === void 0 ? "" : n$8, o$9 = r$12.after;
			this.spaces = {
				before: i$18,
				after: o$9 === void 0 ? "" : o$9
			};
		}
		return t$13.prototype.remove = function() {
			return this.parent && this.parent.removeChild(this), this.parent = void 0, this;
		}, t$13.prototype.replaceWith = function() {
			if (this.parent) {
				for (var s$8 in arguments) this.parent.insertBefore(this, arguments[s$8]);
				this.remove();
			}
			return this;
		}, t$13.prototype.next = function() {
			return this.parent.at(this.parent.index(this) + 1);
		}, t$13.prototype.prev = function() {
			return this.parent.at(this.parent.index(this) - 1);
		}, t$13.prototype.clone = function() {
			var s$8 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, r$12 = Cp$2(this);
			for (var n$8 in s$8) r$12[n$8] = s$8[n$8];
			return r$12;
		}, t$13.prototype.toString = function() {
			return [
				this.spaces.before,
				String(this.value),
				this.spaces.after
			].join("");
		}, t$13;
	}();
	Oa$3.exports = or$5.default;
});
var M$1 = g$1((B$4) => {
	B$4.__esModule = !0;
	B$4.TAG = "tag";
	B$4.STRING = "string";
	B$4.SELECTOR = "selector";
	B$4.ROOT = "root";
	B$4.PSEUDO = "pseudo";
	B$4.NESTING = "nesting";
	B$4.ID = "id";
	B$4.COMMENT = "comment";
	B$4.COMBINATOR = "combinator";
	B$4.CLASS = "class";
	B$4.ATTRIBUTE = "attribute";
	B$4.UNIVERSAL = "universal";
});
var ur$2 = g$1((ar$5, Ca$3) => {
	ar$5.__esModule = !0;
	var Np$2 = function() {
		function t$13(e$4, s$8) {
			for (var r$12 = 0; r$12 < s$8.length; r$12++) {
				var n$8 = s$8[r$12];
				n$8.enumerable = n$8.enumerable || !1, n$8.configurable = !0, "value" in n$8 && (n$8.writable = !0), Object.defineProperty(e$4, n$8.key, n$8);
			}
		}
		return function(e$4, s$8, r$12) {
			return s$8 && t$13(e$4.prototype, s$8), r$12 && t$13(e$4, r$12), e$4;
		};
	}(), Pp$2 = ve$2(), Rp$2 = Lp$2(Pp$2), Ip$2 = M$1(), ee$4 = qp$2(Ip$2);
	function qp$2(t$13) {
		if (t$13 && t$13.__esModule) return t$13;
		var e$4 = {};
		if (t$13 != null) for (var s$8 in t$13) Object.prototype.hasOwnProperty.call(t$13, s$8) && (e$4[s$8] = t$13[s$8]);
		return e$4.default = t$13, e$4;
	}
	function Lp$2(t$13) {
		return t$13 && t$13.__esModule ? t$13 : { default: t$13 };
	}
	function Dp$2(t$13, e$4) {
		if (!(t$13 instanceof e$4)) throw new TypeError("Cannot call a class as a function");
	}
	function Mp$2(t$13, e$4) {
		if (!t$13) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		return e$4 && (typeof e$4 == "object" || typeof e$4 == "function") ? e$4 : t$13;
	}
	function Bp$2(t$13, e$4) {
		if (typeof e$4 != "function" && e$4 !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof e$4);
		t$13.prototype = Object.create(e$4 && e$4.prototype, { constructor: {
			value: t$13,
			enumerable: !1,
			writable: !0,
			configurable: !0
		} }), e$4 && (Object.setPrototypeOf ? Object.setPrototypeOf(t$13, e$4) : t$13.__proto__ = e$4);
	}
	ar$5.default = function(t$13) {
		Bp$2(e$4, t$13);
		function e$4(s$8) {
			Dp$2(this, e$4);
			var r$12 = Mp$2(this, t$13.call(this, s$8));
			return r$12.nodes || (r$12.nodes = []), r$12;
		}
		return e$4.prototype.append = function(r$12) {
			return r$12.parent = this, this.nodes.push(r$12), this;
		}, e$4.prototype.prepend = function(r$12) {
			return r$12.parent = this, this.nodes.unshift(r$12), this;
		}, e$4.prototype.at = function(r$12) {
			return this.nodes[r$12];
		}, e$4.prototype.index = function(r$12) {
			return typeof r$12 == "number" ? r$12 : this.nodes.indexOf(r$12);
		}, e$4.prototype.removeChild = function(r$12) {
			r$12 = this.index(r$12), this.at(r$12).parent = void 0, this.nodes.splice(r$12, 1);
			var n$8 = void 0;
			for (var i$18 in this.indexes) n$8 = this.indexes[i$18], n$8 >= r$12 && (this.indexes[i$18] = n$8 - 1);
			return this;
		}, e$4.prototype.removeAll = function() {
			for (var i$18 = this.nodes, r$12 = Array.isArray(i$18), n$8 = 0, i$18 = r$12 ? i$18 : i$18[Symbol.iterator]();;) {
				var o$9;
				if (r$12) {
					if (n$8 >= i$18.length) break;
					o$9 = i$18[n$8++];
				} else {
					if (n$8 = i$18.next(), n$8.done) break;
					o$9 = n$8.value;
				}
				var u$14 = o$9;
				u$14.parent = void 0;
			}
			return this.nodes = [], this;
		}, e$4.prototype.empty = function() {
			return this.removeAll();
		}, e$4.prototype.insertAfter = function(r$12, n$8) {
			var i$18 = this.index(r$12);
			this.nodes.splice(i$18 + 1, 0, n$8);
			var o$9 = void 0;
			for (var u$14 in this.indexes) o$9 = this.indexes[u$14], i$18 <= o$9 && (this.indexes[u$14] = o$9 + this.nodes.length);
			return this;
		}, e$4.prototype.insertBefore = function(r$12, n$8) {
			var i$18 = this.index(r$12);
			this.nodes.splice(i$18, 0, n$8);
			var o$9 = void 0;
			for (var u$14 in this.indexes) o$9 = this.indexes[u$14], i$18 <= o$9 && (this.indexes[u$14] = o$9 + this.nodes.length);
			return this;
		}, e$4.prototype.each = function(r$12) {
			this.lastEach || (this.lastEach = 0), this.indexes || (this.indexes = {}), this.lastEach++;
			var n$8 = this.lastEach;
			if (this.indexes[n$8] = 0, !!this.length) {
				for (var i$18 = void 0, o$9 = void 0; this.indexes[n$8] < this.length && (i$18 = this.indexes[n$8], o$9 = r$12(this.at(i$18), i$18), o$9 !== !1);) this.indexes[n$8] += 1;
				if (delete this.indexes[n$8], o$9 === !1) return !1;
			}
		}, e$4.prototype.walk = function(r$12) {
			return this.each(function(n$8, i$18) {
				var o$9 = r$12(n$8, i$18);
				if (o$9 !== !1 && n$8.length && (o$9 = n$8.walk(r$12)), o$9 === !1) return !1;
			});
		}, e$4.prototype.walkAttributes = function(r$12) {
			var n$8 = this;
			return this.walk(function(i$18) {
				if (i$18.type === ee$4.ATTRIBUTE) return r$12.call(n$8, i$18);
			});
		}, e$4.prototype.walkClasses = function(r$12) {
			var n$8 = this;
			return this.walk(function(i$18) {
				if (i$18.type === ee$4.CLASS) return r$12.call(n$8, i$18);
			});
		}, e$4.prototype.walkCombinators = function(r$12) {
			var n$8 = this;
			return this.walk(function(i$18) {
				if (i$18.type === ee$4.COMBINATOR) return r$12.call(n$8, i$18);
			});
		}, e$4.prototype.walkComments = function(r$12) {
			var n$8 = this;
			return this.walk(function(i$18) {
				if (i$18.type === ee$4.COMMENT) return r$12.call(n$8, i$18);
			});
		}, e$4.prototype.walkIds = function(r$12) {
			var n$8 = this;
			return this.walk(function(i$18) {
				if (i$18.type === ee$4.ID) return r$12.call(n$8, i$18);
			});
		}, e$4.prototype.walkNesting = function(r$12) {
			var n$8 = this;
			return this.walk(function(i$18) {
				if (i$18.type === ee$4.NESTING) return r$12.call(n$8, i$18);
			});
		}, e$4.prototype.walkPseudos = function(r$12) {
			var n$8 = this;
			return this.walk(function(i$18) {
				if (i$18.type === ee$4.PSEUDO) return r$12.call(n$8, i$18);
			});
		}, e$4.prototype.walkTags = function(r$12) {
			var n$8 = this;
			return this.walk(function(i$18) {
				if (i$18.type === ee$4.TAG) return r$12.call(n$8, i$18);
			});
		}, e$4.prototype.walkUniversals = function(r$12) {
			var n$8 = this;
			return this.walk(function(i$18) {
				if (i$18.type === ee$4.UNIVERSAL) return r$12.call(n$8, i$18);
			});
		}, e$4.prototype.split = function(r$12) {
			var n$8 = this, i$18 = [];
			return this.reduce(function(o$9, u$14, a$13) {
				var c$3 = r$12.call(n$8, u$14);
				return i$18.push(u$14), c$3 ? (o$9.push(i$18), i$18 = []) : a$13 === n$8.length - 1 && o$9.push(i$18), o$9;
			}, []);
		}, e$4.prototype.map = function(r$12) {
			return this.nodes.map(r$12);
		}, e$4.prototype.reduce = function(r$12, n$8) {
			return this.nodes.reduce(r$12, n$8);
		}, e$4.prototype.every = function(r$12) {
			return this.nodes.every(r$12);
		}, e$4.prototype.some = function(r$12) {
			return this.nodes.some(r$12);
		}, e$4.prototype.filter = function(r$12) {
			return this.nodes.filter(r$12);
		}, e$4.prototype.sort = function(r$12) {
			return this.nodes.sort(r$12);
		}, e$4.prototype.toString = function() {
			return this.map(String).join("");
		}, Np$2(e$4, [
			{
				key: "first",
				get: function() {
					return this.at(0);
				}
			},
			{
				key: "last",
				get: function() {
					return this.at(this.length - 1);
				}
			},
			{
				key: "length",
				get: function() {
					return this.nodes.length;
				}
			}
		]), e$4;
	}(Rp$2.default);
	Ca$3.exports = ar$5.default;
});
var Na = g$1((lr$5, Aa$4) => {
	lr$5.__esModule = !0;
	var Fp$2 = ur$2(), $p$2 = Gp$2(Fp$2), Wp$2 = M$1();
	function Gp$2(t$13) {
		return t$13 && t$13.__esModule ? t$13 : { default: t$13 };
	}
	function Yp$2(t$13, e$4) {
		if (!(t$13 instanceof e$4)) throw new TypeError("Cannot call a class as a function");
	}
	function Vp$2(t$13, e$4) {
		if (!t$13) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		return e$4 && (typeof e$4 == "object" || typeof e$4 == "function") ? e$4 : t$13;
	}
	function zp$2(t$13, e$4) {
		if (typeof e$4 != "function" && e$4 !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof e$4);
		t$13.prototype = Object.create(e$4 && e$4.prototype, { constructor: {
			value: t$13,
			enumerable: !1,
			writable: !0,
			configurable: !0
		} }), e$4 && (Object.setPrototypeOf ? Object.setPrototypeOf(t$13, e$4) : t$13.__proto__ = e$4);
	}
	lr$5.default = function(t$13) {
		zp$2(e$4, t$13);
		function e$4(s$8) {
			Yp$2(this, e$4);
			var r$12 = Vp$2(this, t$13.call(this, s$8));
			return r$12.type = Wp$2.ROOT, r$12;
		}
		return e$4.prototype.toString = function() {
			var r$12 = this.reduce(function(n$8, i$18) {
				var o$9 = String(i$18);
				return o$9 ? n$8 + o$9 + "," : "";
			}, "").slice(0, -1);
			return this.trailingComma ? r$12 + "," : r$12;
		}, e$4;
	}($p$2.default);
	Aa$4.exports = lr$5.default;
});
var Ra$1 = g$1((cr$5, Pa$3) => {
	cr$5.__esModule = !0;
	var jp$2 = ur$2(), Kp$2 = Xp$2(jp$2), Qp$2 = M$1();
	function Xp$2(t$13) {
		return t$13 && t$13.__esModule ? t$13 : { default: t$13 };
	}
	function Jp$2(t$13, e$4) {
		if (!(t$13 instanceof e$4)) throw new TypeError("Cannot call a class as a function");
	}
	function Zp$2(t$13, e$4) {
		if (!t$13) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		return e$4 && (typeof e$4 == "object" || typeof e$4 == "function") ? e$4 : t$13;
	}
	function eh$1(t$13, e$4) {
		if (typeof e$4 != "function" && e$4 !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof e$4);
		t$13.prototype = Object.create(e$4 && e$4.prototype, { constructor: {
			value: t$13,
			enumerable: !1,
			writable: !0,
			configurable: !0
		} }), e$4 && (Object.setPrototypeOf ? Object.setPrototypeOf(t$13, e$4) : t$13.__proto__ = e$4);
	}
	cr$5.default = function(t$13) {
		eh$1(e$4, t$13);
		function e$4(s$8) {
			Jp$2(this, e$4);
			var r$12 = Zp$2(this, t$13.call(this, s$8));
			return r$12.type = Qp$2.SELECTOR, r$12;
		}
		return e$4;
	}(Kp$2.default);
	Pa$3.exports = cr$5.default;
});
var $e$2 = g$1((fr$5, Ia$3) => {
	fr$5.__esModule = !0;
	var rh$1 = function() {
		function t$13(e$4, s$8) {
			for (var r$12 = 0; r$12 < s$8.length; r$12++) {
				var n$8 = s$8[r$12];
				n$8.enumerable = n$8.enumerable || !1, n$8.configurable = !0, "value" in n$8 && (n$8.writable = !0), Object.defineProperty(e$4, n$8.key, n$8);
			}
		}
		return function(e$4, s$8, r$12) {
			return s$8 && t$13(e$4.prototype, s$8), r$12 && t$13(e$4, r$12), e$4;
		};
	}(), sh$1 = ve$2(), nh$1 = ih$1(sh$1);
	function ih$1(t$13) {
		return t$13 && t$13.__esModule ? t$13 : { default: t$13 };
	}
	function oh$1(t$13, e$4) {
		if (!(t$13 instanceof e$4)) throw new TypeError("Cannot call a class as a function");
	}
	function ah$1(t$13, e$4) {
		if (!t$13) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		return e$4 && (typeof e$4 == "object" || typeof e$4 == "function") ? e$4 : t$13;
	}
	function uh$1(t$13, e$4) {
		if (typeof e$4 != "function" && e$4 !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof e$4);
		t$13.prototype = Object.create(e$4 && e$4.prototype, { constructor: {
			value: t$13,
			enumerable: !1,
			writable: !0,
			configurable: !0
		} }), e$4 && (Object.setPrototypeOf ? Object.setPrototypeOf(t$13, e$4) : t$13.__proto__ = e$4);
	}
	fr$5.default = function(t$13) {
		uh$1(e$4, t$13);
		function e$4() {
			return oh$1(this, e$4), ah$1(this, t$13.apply(this, arguments));
		}
		return e$4.prototype.toString = function() {
			return [
				this.spaces.before,
				this.ns,
				String(this.value),
				this.spaces.after
			].join("");
		}, rh$1(e$4, [{
			key: "ns",
			get: function() {
				var r$12 = this.namespace;
				return r$12 ? (typeof r$12 == "string" ? r$12 : "") + "|" : "";
			}
		}]), e$4;
	}(nh$1.default);
	Ia$3.exports = fr$5.default;
});
var La$1 = g$1((pr$4, qa$4) => {
	pr$4.__esModule = !0;
	var ch$1 = $e$2(), fh$1 = hh$1(ch$1), ph$1 = M$1();
	function hh$1(t$13) {
		return t$13 && t$13.__esModule ? t$13 : { default: t$13 };
	}
	function dh$1(t$13, e$4) {
		if (!(t$13 instanceof e$4)) throw new TypeError("Cannot call a class as a function");
	}
	function mh$1(t$13, e$4) {
		if (!t$13) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		return e$4 && (typeof e$4 == "object" || typeof e$4 == "function") ? e$4 : t$13;
	}
	function yh$1(t$13, e$4) {
		if (typeof e$4 != "function" && e$4 !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof e$4);
		t$13.prototype = Object.create(e$4 && e$4.prototype, { constructor: {
			value: t$13,
			enumerable: !1,
			writable: !0,
			configurable: !0
		} }), e$4 && (Object.setPrototypeOf ? Object.setPrototypeOf(t$13, e$4) : t$13.__proto__ = e$4);
	}
	pr$4.default = function(t$13) {
		yh$1(e$4, t$13);
		function e$4(s$8) {
			dh$1(this, e$4);
			var r$12 = mh$1(this, t$13.call(this, s$8));
			return r$12.type = ph$1.CLASS, r$12;
		}
		return e$4.prototype.toString = function() {
			return [
				this.spaces.before,
				this.ns,
				"." + this.value,
				this.spaces.after
			].join("");
		}, e$4;
	}(fh$1.default);
	qa$4.exports = pr$4.default;
});
var Ma$1 = g$1((hr$4, Da$3) => {
	hr$4.__esModule = !0;
	var wh$1 = ve$2(), vh$1 = bh$1(wh$1), xh$1 = M$1();
	function bh$1(t$13) {
		return t$13 && t$13.__esModule ? t$13 : { default: t$13 };
	}
	function _h$1(t$13, e$4) {
		if (!(t$13 instanceof e$4)) throw new TypeError("Cannot call a class as a function");
	}
	function Eh$1(t$13, e$4) {
		if (!t$13) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		return e$4 && (typeof e$4 == "object" || typeof e$4 == "function") ? e$4 : t$13;
	}
	function kh$1(t$13, e$4) {
		if (typeof e$4 != "function" && e$4 !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof e$4);
		t$13.prototype = Object.create(e$4 && e$4.prototype, { constructor: {
			value: t$13,
			enumerable: !1,
			writable: !0,
			configurable: !0
		} }), e$4 && (Object.setPrototypeOf ? Object.setPrototypeOf(t$13, e$4) : t$13.__proto__ = e$4);
	}
	hr$4.default = function(t$13) {
		kh$1(e$4, t$13);
		function e$4(s$8) {
			_h$1(this, e$4);
			var r$12 = Eh$1(this, t$13.call(this, s$8));
			return r$12.type = xh$1.COMMENT, r$12;
		}
		return e$4;
	}(vh$1.default);
	Da$3.exports = hr$4.default;
});
var Ua$2 = g$1((dr$5, Ba$4) => {
	dr$5.__esModule = !0;
	var Th$1 = $e$2(), Oh$1 = Ah(Th$1), Ch$1 = M$1();
	function Ah(t$13) {
		return t$13 && t$13.__esModule ? t$13 : { default: t$13 };
	}
	function Nh$1(t$13, e$4) {
		if (!(t$13 instanceof e$4)) throw new TypeError("Cannot call a class as a function");
	}
	function Ph$1(t$13, e$4) {
		if (!t$13) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		return e$4 && (typeof e$4 == "object" || typeof e$4 == "function") ? e$4 : t$13;
	}
	function Rh$1(t$13, e$4) {
		if (typeof e$4 != "function" && e$4 !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof e$4);
		t$13.prototype = Object.create(e$4 && e$4.prototype, { constructor: {
			value: t$13,
			enumerable: !1,
			writable: !0,
			configurable: !0
		} }), e$4 && (Object.setPrototypeOf ? Object.setPrototypeOf(t$13, e$4) : t$13.__proto__ = e$4);
	}
	dr$5.default = function(t$13) {
		Rh$1(e$4, t$13);
		function e$4(s$8) {
			Nh$1(this, e$4);
			var r$12 = Ph$1(this, t$13.call(this, s$8));
			return r$12.type = Ch$1.ID, r$12;
		}
		return e$4.prototype.toString = function() {
			return [
				this.spaces.before,
				this.ns,
				"#" + this.value,
				this.spaces.after
			].join("");
		}, e$4;
	}(Oh$1.default);
	Ba$4.exports = dr$5.default;
});
var $a$1 = g$1((mr$5, Fa$6) => {
	mr$5.__esModule = !0;
	var qh$1 = $e$2(), Lh$1 = Mh$1(qh$1), Dh = M$1();
	function Mh$1(t$13) {
		return t$13 && t$13.__esModule ? t$13 : { default: t$13 };
	}
	function Bh$1(t$13, e$4) {
		if (!(t$13 instanceof e$4)) throw new TypeError("Cannot call a class as a function");
	}
	function Uh$1(t$13, e$4) {
		if (!t$13) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		return e$4 && (typeof e$4 == "object" || typeof e$4 == "function") ? e$4 : t$13;
	}
	function Fh$1(t$13, e$4) {
		if (typeof e$4 != "function" && e$4 !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof e$4);
		t$13.prototype = Object.create(e$4 && e$4.prototype, { constructor: {
			value: t$13,
			enumerable: !1,
			writable: !0,
			configurable: !0
		} }), e$4 && (Object.setPrototypeOf ? Object.setPrototypeOf(t$13, e$4) : t$13.__proto__ = e$4);
	}
	mr$5.default = function(t$13) {
		Fh$1(e$4, t$13);
		function e$4(s$8) {
			Bh$1(this, e$4);
			var r$12 = Uh$1(this, t$13.call(this, s$8));
			return r$12.type = Dh.TAG, r$12;
		}
		return e$4;
	}(Lh$1.default);
	Fa$6.exports = mr$5.default;
});
var Ga$2 = g$1((yr$4, Wa$3) => {
	yr$4.__esModule = !0;
	var Wh$1 = ve$2(), Gh$1 = Vh$1(Wh$1), Yh$1 = M$1();
	function Vh$1(t$13) {
		return t$13 && t$13.__esModule ? t$13 : { default: t$13 };
	}
	function zh$1(t$13, e$4) {
		if (!(t$13 instanceof e$4)) throw new TypeError("Cannot call a class as a function");
	}
	function Hh$1(t$13, e$4) {
		if (!t$13) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		return e$4 && (typeof e$4 == "object" || typeof e$4 == "function") ? e$4 : t$13;
	}
	function jh$1(t$13, e$4) {
		if (typeof e$4 != "function" && e$4 !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof e$4);
		t$13.prototype = Object.create(e$4 && e$4.prototype, { constructor: {
			value: t$13,
			enumerable: !1,
			writable: !0,
			configurable: !0
		} }), e$4 && (Object.setPrototypeOf ? Object.setPrototypeOf(t$13, e$4) : t$13.__proto__ = e$4);
	}
	yr$4.default = function(t$13) {
		jh$1(e$4, t$13);
		function e$4(s$8) {
			zh$1(this, e$4);
			var r$12 = Hh$1(this, t$13.call(this, s$8));
			return r$12.type = Yh$1.STRING, r$12;
		}
		return e$4;
	}(Gh$1.default);
	Wa$3.exports = yr$4.default;
});
var Va$2 = g$1((gr$4, Ya$3) => {
	gr$4.__esModule = !0;
	var Qh$1 = ur$2(), Xh$1 = Zh$1(Qh$1), Jh$1 = M$1();
	function Zh$1(t$13) {
		return t$13 && t$13.__esModule ? t$13 : { default: t$13 };
	}
	function ed$1(t$13, e$4) {
		if (!(t$13 instanceof e$4)) throw new TypeError("Cannot call a class as a function");
	}
	function td$1(t$13, e$4) {
		if (!t$13) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		return e$4 && (typeof e$4 == "object" || typeof e$4 == "function") ? e$4 : t$13;
	}
	function rd$1(t$13, e$4) {
		if (typeof e$4 != "function" && e$4 !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof e$4);
		t$13.prototype = Object.create(e$4 && e$4.prototype, { constructor: {
			value: t$13,
			enumerable: !1,
			writable: !0,
			configurable: !0
		} }), e$4 && (Object.setPrototypeOf ? Object.setPrototypeOf(t$13, e$4) : t$13.__proto__ = e$4);
	}
	gr$4.default = function(t$13) {
		rd$1(e$4, t$13);
		function e$4(s$8) {
			ed$1(this, e$4);
			var r$12 = td$1(this, t$13.call(this, s$8));
			return r$12.type = Jh$1.PSEUDO, r$12;
		}
		return e$4.prototype.toString = function() {
			var r$12 = this.length ? "(" + this.map(String).join(",") + ")" : "";
			return [
				this.spaces.before,
				String(this.value),
				r$12,
				this.spaces.after
			].join("");
		}, e$4;
	}(Xh$1.default);
	Ya$3.exports = gr$4.default;
});
var Ha$2 = g$1((wr$4, za$4) => {
	wr$4.__esModule = !0;
	var nd = $e$2(), id$1 = ad$1(nd), od$1 = M$1();
	function ad$1(t$13) {
		return t$13 && t$13.__esModule ? t$13 : { default: t$13 };
	}
	function ud$1(t$13, e$4) {
		if (!(t$13 instanceof e$4)) throw new TypeError("Cannot call a class as a function");
	}
	function ld$1(t$13, e$4) {
		if (!t$13) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		return e$4 && (typeof e$4 == "object" || typeof e$4 == "function") ? e$4 : t$13;
	}
	function cd$1(t$13, e$4) {
		if (typeof e$4 != "function" && e$4 !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof e$4);
		t$13.prototype = Object.create(e$4 && e$4.prototype, { constructor: {
			value: t$13,
			enumerable: !1,
			writable: !0,
			configurable: !0
		} }), e$4 && (Object.setPrototypeOf ? Object.setPrototypeOf(t$13, e$4) : t$13.__proto__ = e$4);
	}
	wr$4.default = function(t$13) {
		cd$1(e$4, t$13);
		function e$4(s$8) {
			ud$1(this, e$4);
			var r$12 = ld$1(this, t$13.call(this, s$8));
			return r$12.type = od$1.ATTRIBUTE, r$12.raws = {}, r$12;
		}
		return e$4.prototype.toString = function() {
			var r$12 = [
				this.spaces.before,
				"[",
				this.ns,
				this.attribute
			];
			return this.operator && r$12.push(this.operator), this.value && r$12.push(this.value), this.raws.insensitive ? r$12.push(this.raws.insensitive) : this.insensitive && r$12.push(" i"), r$12.push("]"), r$12.concat(this.spaces.after).join("");
		}, e$4;
	}(id$1.default);
	za$4.exports = wr$4.default;
});
var Ka$2 = g$1((vr$4, ja$6) => {
	vr$4.__esModule = !0;
	var pd$1 = $e$2(), hd$1 = md$1(pd$1), dd$1 = M$1();
	function md$1(t$13) {
		return t$13 && t$13.__esModule ? t$13 : { default: t$13 };
	}
	function yd(t$13, e$4) {
		if (!(t$13 instanceof e$4)) throw new TypeError("Cannot call a class as a function");
	}
	function gd(t$13, e$4) {
		if (!t$13) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		return e$4 && (typeof e$4 == "object" || typeof e$4 == "function") ? e$4 : t$13;
	}
	function wd$1(t$13, e$4) {
		if (typeof e$4 != "function" && e$4 !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof e$4);
		t$13.prototype = Object.create(e$4 && e$4.prototype, { constructor: {
			value: t$13,
			enumerable: !1,
			writable: !0,
			configurable: !0
		} }), e$4 && (Object.setPrototypeOf ? Object.setPrototypeOf(t$13, e$4) : t$13.__proto__ = e$4);
	}
	vr$4.default = function(t$13) {
		wd$1(e$4, t$13);
		function e$4(s$8) {
			yd(this, e$4);
			var r$12 = gd(this, t$13.call(this, s$8));
			return r$12.type = dd$1.UNIVERSAL, r$12.value = "*", r$12;
		}
		return e$4;
	}(hd$1.default);
	ja$6.exports = vr$4.default;
});
var Xa$2 = g$1((xr$4, Qa$4) => {
	xr$4.__esModule = !0;
	var xd$1 = ve$2(), bd = Ed$1(xd$1), _d$1 = M$1();
	function Ed$1(t$13) {
		return t$13 && t$13.__esModule ? t$13 : { default: t$13 };
	}
	function kd$1(t$13, e$4) {
		if (!(t$13 instanceof e$4)) throw new TypeError("Cannot call a class as a function");
	}
	function Sd$1(t$13, e$4) {
		if (!t$13) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		return e$4 && (typeof e$4 == "object" || typeof e$4 == "function") ? e$4 : t$13;
	}
	function Td(t$13, e$4) {
		if (typeof e$4 != "function" && e$4 !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof e$4);
		t$13.prototype = Object.create(e$4 && e$4.prototype, { constructor: {
			value: t$13,
			enumerable: !1,
			writable: !0,
			configurable: !0
		} }), e$4 && (Object.setPrototypeOf ? Object.setPrototypeOf(t$13, e$4) : t$13.__proto__ = e$4);
	}
	xr$4.default = function(t$13) {
		Td(e$4, t$13);
		function e$4(s$8) {
			kd$1(this, e$4);
			var r$12 = Sd$1(this, t$13.call(this, s$8));
			return r$12.type = _d$1.COMBINATOR, r$12;
		}
		return e$4;
	}(bd.default);
	Qa$4.exports = xr$4.default;
});
var Za$2 = g$1((br$4, Ja$4) => {
	br$4.__esModule = !0;
	var Cd$1 = ve$2(), Ad$1 = Pd$1(Cd$1), Nd$1 = M$1();
	function Pd$1(t$13) {
		return t$13 && t$13.__esModule ? t$13 : { default: t$13 };
	}
	function Rd$1(t$13, e$4) {
		if (!(t$13 instanceof e$4)) throw new TypeError("Cannot call a class as a function");
	}
	function Id$1(t$13, e$4) {
		if (!t$13) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		return e$4 && (typeof e$4 == "object" || typeof e$4 == "function") ? e$4 : t$13;
	}
	function qd$1(t$13, e$4) {
		if (typeof e$4 != "function" && e$4 !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof e$4);
		t$13.prototype = Object.create(e$4 && e$4.prototype, { constructor: {
			value: t$13,
			enumerable: !1,
			writable: !0,
			configurable: !0
		} }), e$4 && (Object.setPrototypeOf ? Object.setPrototypeOf(t$13, e$4) : t$13.__proto__ = e$4);
	}
	br$4.default = function(t$13) {
		qd$1(e$4, t$13);
		function e$4(s$8) {
			Rd$1(this, e$4);
			var r$12 = Id$1(this, t$13.call(this, s$8));
			return r$12.type = Nd$1.NESTING, r$12.value = "&", r$12;
		}
		return e$4;
	}(Ad$1.default);
	Ja$4.exports = br$4.default;
});
var tu$1 = g$1((_r$5, eu$4) => {
	_r$5.__esModule = !0;
	_r$5.default = Dd$1;
	function Dd$1(t$13) {
		return t$13.sort(function(e$4, s$8) {
			return e$4 - s$8;
		});
	}
	eu$4.exports = _r$5.default;
});
var cu$1 = g$1((Sr$5, lu$1) => {
	Sr$5.__esModule = !0;
	Sr$5.default = Hd$1;
	var ru$4 = 39, Md$1 = 34, $s$2 = 92, su$3 = 47, St$5 = 10, Ws$4 = 32, Gs$4 = 12, Ys$3 = 9, Vs$4 = 13, nu$3 = 43, iu$4 = 62, ou$2 = 126, au$3 = 124, Bd$1 = 44, Ud$1 = 40, Fd$1 = 41, $d$1 = 91, Wd$1 = 93, Gd$1 = 59, uu$3 = 42, Yd$1 = 58, Vd$1 = 38, zd$1 = 64, Er$5 = /[ \n\t\r\{\(\)'"\\;/]/g, kr$5 = /[ \n\t\r\(\)\*:;@!&'"\+\|~>,\[\]\\]|\/(?=\*)/g;
	function Hd$1(t$13) {
		for (var e$4 = [], s$8 = t$13.css.valueOf(), r$12 = void 0, n$8 = void 0, i$18 = void 0, o$9 = void 0, u$14 = void 0, a$13 = void 0, c$3 = void 0, f$3 = void 0, p$2 = void 0, l$10 = void 0, d$14 = void 0, x$3 = s$8.length, h$3 = -1, m$11 = 1, y$7 = 0, b$7 = function(v$5, R$6) {
			if (t$13.safe) s$8 += R$6, n$8 = s$8.length - 1;
			else throw t$13.error("Unclosed " + v$5, m$11, y$7 - h$3, y$7);
		}; y$7 < x$3;) {
			switch (r$12 = s$8.charCodeAt(y$7), r$12 === St$5 && (h$3 = y$7, m$11 += 1), r$12) {
				case St$5:
				case Ws$4:
				case Ys$3:
				case Vs$4:
				case Gs$4:
					n$8 = y$7;
					do
						n$8 += 1, r$12 = s$8.charCodeAt(n$8), r$12 === St$5 && (h$3 = n$8, m$11 += 1);
					while (r$12 === Ws$4 || r$12 === St$5 || r$12 === Ys$3 || r$12 === Vs$4 || r$12 === Gs$4);
					e$4.push([
						"space",
						s$8.slice(y$7, n$8),
						m$11,
						y$7 - h$3,
						y$7
					]), y$7 = n$8 - 1;
					break;
				case nu$3:
				case iu$4:
				case ou$2:
				case au$3:
					n$8 = y$7;
					do
						n$8 += 1, r$12 = s$8.charCodeAt(n$8);
					while (r$12 === nu$3 || r$12 === iu$4 || r$12 === ou$2 || r$12 === au$3);
					e$4.push([
						"combinator",
						s$8.slice(y$7, n$8),
						m$11,
						y$7 - h$3,
						y$7
					]), y$7 = n$8 - 1;
					break;
				case uu$3:
					e$4.push([
						"*",
						"*",
						m$11,
						y$7 - h$3,
						y$7
					]);
					break;
				case Vd$1:
					e$4.push([
						"&",
						"&",
						m$11,
						y$7 - h$3,
						y$7
					]);
					break;
				case Bd$1:
					e$4.push([
						",",
						",",
						m$11,
						y$7 - h$3,
						y$7
					]);
					break;
				case $d$1:
					e$4.push([
						"[",
						"[",
						m$11,
						y$7 - h$3,
						y$7
					]);
					break;
				case Wd$1:
					e$4.push([
						"]",
						"]",
						m$11,
						y$7 - h$3,
						y$7
					]);
					break;
				case Yd$1:
					e$4.push([
						":",
						":",
						m$11,
						y$7 - h$3,
						y$7
					]);
					break;
				case Gd$1:
					e$4.push([
						";",
						";",
						m$11,
						y$7 - h$3,
						y$7
					]);
					break;
				case Ud$1:
					e$4.push([
						"(",
						"(",
						m$11,
						y$7 - h$3,
						y$7
					]);
					break;
				case Fd$1:
					e$4.push([
						")",
						")",
						m$11,
						y$7 - h$3,
						y$7
					]);
					break;
				case ru$4:
				case Md$1:
					i$18 = r$12 === ru$4 ? "'" : "\"", n$8 = y$7;
					do
						for (l$10 = !1, n$8 = s$8.indexOf(i$18, n$8 + 1), n$8 === -1 && b$7("quote", i$18), d$14 = n$8; s$8.charCodeAt(d$14 - 1) === $s$2;) d$14 -= 1, l$10 = !l$10;
					while (l$10);
					e$4.push([
						"string",
						s$8.slice(y$7, n$8 + 1),
						m$11,
						y$7 - h$3,
						m$11,
						n$8 - h$3,
						y$7
					]), y$7 = n$8;
					break;
				case zd$1:
					Er$5.lastIndex = y$7 + 1, Er$5.test(s$8), Er$5.lastIndex === 0 ? n$8 = s$8.length - 1 : n$8 = Er$5.lastIndex - 2, e$4.push([
						"at-word",
						s$8.slice(y$7, n$8 + 1),
						m$11,
						y$7 - h$3,
						m$11,
						n$8 - h$3,
						y$7
					]), y$7 = n$8;
					break;
				case $s$2:
					for (n$8 = y$7, c$3 = !0; s$8.charCodeAt(n$8 + 1) === $s$2;) n$8 += 1, c$3 = !c$3;
					r$12 = s$8.charCodeAt(n$8 + 1), c$3 && r$12 !== su$3 && r$12 !== Ws$4 && r$12 !== St$5 && r$12 !== Ys$3 && r$12 !== Vs$4 && r$12 !== Gs$4 && (n$8 += 1), e$4.push([
						"word",
						s$8.slice(y$7, n$8 + 1),
						m$11,
						y$7 - h$3,
						m$11,
						n$8 - h$3,
						y$7
					]), y$7 = n$8;
					break;
				default:
					r$12 === su$3 && s$8.charCodeAt(y$7 + 1) === uu$3 ? (n$8 = s$8.indexOf("*/", y$7 + 2) + 1, n$8 === 0 && b$7("comment", "*/"), a$13 = s$8.slice(y$7, n$8 + 1), o$9 = a$13.split(`
`), u$14 = o$9.length - 1, u$14 > 0 ? (f$3 = m$11 + u$14, p$2 = n$8 - o$9[u$14].length) : (f$3 = m$11, p$2 = h$3), e$4.push([
						"comment",
						a$13,
						m$11,
						y$7 - h$3,
						f$3,
						n$8 - p$2,
						y$7
					]), h$3 = p$2, m$11 = f$3, y$7 = n$8) : (kr$5.lastIndex = y$7 + 1, kr$5.test(s$8), kr$5.lastIndex === 0 ? n$8 = s$8.length - 1 : n$8 = kr$5.lastIndex - 2, e$4.push([
						"word",
						s$8.slice(y$7, n$8 + 1),
						m$11,
						y$7 - h$3,
						m$11,
						n$8 - h$3,
						y$7
					]), y$7 = n$8);
					break;
			}
			y$7++;
		}
		return e$4;
	}
	lu$1.exports = Sr$5.default;
});
var hu$1 = g$1((Tr$4, pu$2) => {
	Tr$4.__esModule = !0;
	var jd$1 = function() {
		function t$13(e$4, s$8) {
			for (var r$12 = 0; r$12 < s$8.length; r$12++) {
				var n$8 = s$8[r$12];
				n$8.enumerable = n$8.enumerable || !1, n$8.configurable = !0, "value" in n$8 && (n$8.writable = !0), Object.defineProperty(e$4, n$8.key, n$8);
			}
		}
		return function(e$4, s$8, r$12) {
			return s$8 && t$13(e$4.prototype, s$8), r$12 && t$13(e$4, r$12), e$4;
		};
	}(), Kd$1 = Bs$1(), Qd$1 = I$2(Kd$1), Xd$1 = Us$1(), zs$4 = I$2(Xd$1), Jd$1 = Fs$1(), Zd$1 = I$2(Jd$1), em$2 = Na(), tm$2 = I$2(em$2), rm$2 = Ra$1(), Hs$4 = I$2(rm$2), sm$2 = La$1(), nm$2 = I$2(sm$2), im$2 = Ma$1(), om$2 = I$2(im$2), am$2 = Ua$2(), um$2 = I$2(am$2), lm$2 = $a$1(), cm$2 = I$2(lm$2), fm$2 = Ga$2(), pm$2 = I$2(fm$2), hm$1 = Va$2(), dm$2 = I$2(hm$1), mm$2 = Ha$2(), ym$3 = I$2(mm$2), gm$1 = Ka$2(), wm$1 = I$2(gm$1), vm$1 = Xa$2(), xm$1 = I$2(vm$1), bm$1 = Za$2(), _m$1 = I$2(bm$1), Em$2 = tu$1(), km$1 = I$2(Em$2), Sm$1 = cu$1(), fu$3 = I$2(Sm$1), Tm$2 = M$1(), Om$1 = Cm$2(Tm$2);
	function Cm$2(t$13) {
		if (t$13 && t$13.__esModule) return t$13;
		var e$4 = {};
		if (t$13 != null) for (var s$8 in t$13) Object.prototype.hasOwnProperty.call(t$13, s$8) && (e$4[s$8] = t$13[s$8]);
		return e$4.default = t$13, e$4;
	}
	function I$2(t$13) {
		return t$13 && t$13.__esModule ? t$13 : { default: t$13 };
	}
	function Am$2(t$13, e$4) {
		if (!(t$13 instanceof e$4)) throw new TypeError("Cannot call a class as a function");
	}
	Tr$4.default = function() {
		function t$13(e$4) {
			Am$2(this, t$13), this.input = e$4, this.lossy = e$4.options.lossless === !1, this.position = 0, this.root = new tm$2.default();
			var s$8 = new Hs$4.default();
			return this.root.append(s$8), this.current = s$8, this.lossy ? this.tokens = (0, fu$3.default)({
				safe: e$4.safe,
				css: e$4.css.trim()
			}) : this.tokens = (0, fu$3.default)(e$4), this.loop();
		}
		return t$13.prototype.attribute = function() {
			var s$8 = "", r$12 = void 0, n$8 = this.currToken;
			for (this.position++; this.position < this.tokens.length && this.currToken[0] !== "]";) s$8 += this.tokens[this.position][1], this.position++;
			this.position === this.tokens.length && !~s$8.indexOf("]") && this.error("Expected a closing square bracket.");
			var i$18 = s$8.split(/((?:[*~^$|]?=))([^]*)/), o$9 = i$18[0].split(/(\|)/g), u$14 = {
				operator: i$18[1],
				value: i$18[2],
				source: {
					start: {
						line: n$8[2],
						column: n$8[3]
					},
					end: {
						line: this.currToken[2],
						column: this.currToken[3]
					}
				},
				sourceIndex: n$8[4]
			};
			if (o$9.length > 1 ? (o$9[0] === "" && (o$9[0] = !0), u$14.attribute = this.parseValue(o$9[2]), u$14.namespace = this.parseNamespace(o$9[0])) : u$14.attribute = this.parseValue(i$18[0]), r$12 = new ym$3.default(u$14), i$18[2]) {
				var a$13 = i$18[2].split(/(\s+i\s*?)$/), c$3 = a$13[0].trim();
				r$12.value = this.lossy ? c$3 : a$13[0], a$13[1] && (r$12.insensitive = !0, this.lossy || (r$12.raws.insensitive = a$13[1])), r$12.quoted = c$3[0] === "'" || c$3[0] === "\"", r$12.raws.unquoted = r$12.quoted ? c$3.slice(1, -1) : c$3;
			}
			this.newNode(r$12), this.position++;
		}, t$13.prototype.combinator = function() {
			if (this.currToken[1] === "|") return this.namespace();
			for (var s$8 = new xm$1.default({
				value: "",
				source: {
					start: {
						line: this.currToken[2],
						column: this.currToken[3]
					},
					end: {
						line: this.currToken[2],
						column: this.currToken[3]
					}
				},
				sourceIndex: this.currToken[4]
			}); this.position < this.tokens.length && this.currToken && (this.currToken[0] === "space" || this.currToken[0] === "combinator");) this.nextToken && this.nextToken[0] === "combinator" ? (s$8.spaces.before = this.parseSpace(this.currToken[1]), s$8.source.start.line = this.nextToken[2], s$8.source.start.column = this.nextToken[3], s$8.source.end.column = this.nextToken[3], s$8.source.end.line = this.nextToken[2], s$8.sourceIndex = this.nextToken[4]) : this.prevToken && this.prevToken[0] === "combinator" ? s$8.spaces.after = this.parseSpace(this.currToken[1]) : this.currToken[0] === "combinator" ? s$8.value = this.currToken[1] : this.currToken[0] === "space" && (s$8.value = this.parseSpace(this.currToken[1], " ")), this.position++;
			return this.newNode(s$8);
		}, t$13.prototype.comma = function() {
			if (this.position === this.tokens.length - 1) {
				this.root.trailingComma = !0, this.position++;
				return;
			}
			var s$8 = new Hs$4.default();
			this.current.parent.append(s$8), this.current = s$8, this.position++;
		}, t$13.prototype.comment = function() {
			var s$8 = new om$2.default({
				value: this.currToken[1],
				source: {
					start: {
						line: this.currToken[2],
						column: this.currToken[3]
					},
					end: {
						line: this.currToken[4],
						column: this.currToken[5]
					}
				},
				sourceIndex: this.currToken[6]
			});
			this.newNode(s$8), this.position++;
		}, t$13.prototype.error = function(s$8) {
			throw new this.input.error(s$8);
		}, t$13.prototype.missingBackslash = function() {
			return this.error("Expected a backslash preceding the semicolon.");
		}, t$13.prototype.missingParenthesis = function() {
			return this.error("Expected opening parenthesis.");
		}, t$13.prototype.missingSquareBracket = function() {
			return this.error("Expected opening square bracket.");
		}, t$13.prototype.namespace = function() {
			var s$8 = this.prevToken && this.prevToken[1] || !0;
			if (this.nextToken[0] === "word") return this.position++, this.word(s$8);
			if (this.nextToken[0] === "*") return this.position++, this.universal(s$8);
		}, t$13.prototype.nesting = function() {
			this.newNode(new _m$1.default({
				value: this.currToken[1],
				source: {
					start: {
						line: this.currToken[2],
						column: this.currToken[3]
					},
					end: {
						line: this.currToken[2],
						column: this.currToken[3]
					}
				},
				sourceIndex: this.currToken[4]
			})), this.position++;
		}, t$13.prototype.parentheses = function() {
			var s$8 = this.current.last;
			if (s$8 && s$8.type === Om$1.PSEUDO) {
				var r$12 = new Hs$4.default(), n$8 = this.current;
				s$8.append(r$12), this.current = r$12;
				var i$18 = 1;
				for (this.position++; this.position < this.tokens.length && i$18;) this.currToken[0] === "(" && i$18++, this.currToken[0] === ")" && i$18--, i$18 ? this.parse() : (r$12.parent.source.end.line = this.currToken[2], r$12.parent.source.end.column = this.currToken[3], this.position++);
				i$18 && this.error("Expected closing parenthesis."), this.current = n$8;
			} else {
				var o$9 = 1;
				for (this.position++, s$8.value += "("; this.position < this.tokens.length && o$9;) this.currToken[0] === "(" && o$9++, this.currToken[0] === ")" && o$9--, s$8.value += this.parseParenthesisToken(this.currToken), this.position++;
				o$9 && this.error("Expected closing parenthesis.");
			}
		}, t$13.prototype.pseudo = function() {
			for (var s$8 = this, r$12 = "", n$8 = this.currToken; this.currToken && this.currToken[0] === ":";) r$12 += this.currToken[1], this.position++;
			if (!this.currToken) return this.error("Expected pseudo-class or pseudo-element");
			if (this.currToken[0] === "word") {
				var i$18 = void 0;
				this.splitWord(!1, function(o$9, u$14) {
					r$12 += o$9, i$18 = new dm$2.default({
						value: r$12,
						source: {
							start: {
								line: n$8[2],
								column: n$8[3]
							},
							end: {
								line: s$8.currToken[4],
								column: s$8.currToken[5]
							}
						},
						sourceIndex: n$8[4]
					}), s$8.newNode(i$18), u$14 > 1 && s$8.nextToken && s$8.nextToken[0] === "(" && s$8.error("Misplaced parenthesis.");
				});
			} else this.error("Unexpected \"" + this.currToken[0] + "\" found.");
		}, t$13.prototype.space = function() {
			var s$8 = this.currToken;
			this.position === 0 || this.prevToken[0] === "," || this.prevToken[0] === "(" ? (this.spaces = this.parseSpace(s$8[1]), this.position++) : this.position === this.tokens.length - 1 || this.nextToken[0] === "," || this.nextToken[0] === ")" ? (this.current.last.spaces.after = this.parseSpace(s$8[1]), this.position++) : this.combinator();
		}, t$13.prototype.string = function() {
			var s$8 = this.currToken;
			this.newNode(new pm$2.default({
				value: this.currToken[1],
				source: {
					start: {
						line: s$8[2],
						column: s$8[3]
					},
					end: {
						line: s$8[4],
						column: s$8[5]
					}
				},
				sourceIndex: s$8[6]
			})), this.position++;
		}, t$13.prototype.universal = function(s$8) {
			var r$12 = this.nextToken;
			if (r$12 && r$12[1] === "|") return this.position++, this.namespace();
			this.newNode(new wm$1.default({
				value: this.currToken[1],
				source: {
					start: {
						line: this.currToken[2],
						column: this.currToken[3]
					},
					end: {
						line: this.currToken[2],
						column: this.currToken[3]
					}
				},
				sourceIndex: this.currToken[4]
			}), s$8), this.position++;
		}, t$13.prototype.splitWord = function(s$8, r$12) {
			for (var n$8 = this, i$18 = this.nextToken, o$9 = this.currToken[1]; i$18 && i$18[0] === "word";) {
				this.position++;
				var u$14 = this.currToken[1];
				if (o$9 += u$14, u$14.lastIndexOf("\\") === u$14.length - 1) {
					var a$13 = this.nextToken;
					a$13 && a$13[0] === "space" && (o$9 += this.parseSpace(a$13[1], " "), this.position++);
				}
				i$18 = this.nextToken;
			}
			var c$3 = (0, zs$4.default)(o$9, "."), f$3 = (0, zs$4.default)(o$9, "#"), p$2 = (0, zs$4.default)(o$9, "#{");
			p$2.length && (f$3 = f$3.filter(function(d$14) {
				return !~p$2.indexOf(d$14);
			}));
			var l$10 = (0, km$1.default)((0, Zd$1.default)((0, Qd$1.default)([
				[0],
				c$3,
				f$3
			])));
			l$10.forEach(function(d$14, x$3) {
				var h$3 = l$10[x$3 + 1] || o$9.length, m$11 = o$9.slice(d$14, h$3);
				if (x$3 === 0 && r$12) return r$12.call(n$8, m$11, l$10.length);
				var y$7 = void 0;
				~c$3.indexOf(d$14) ? y$7 = new nm$2.default({
					value: m$11.slice(1),
					source: {
						start: {
							line: n$8.currToken[2],
							column: n$8.currToken[3] + d$14
						},
						end: {
							line: n$8.currToken[4],
							column: n$8.currToken[3] + (h$3 - 1)
						}
					},
					sourceIndex: n$8.currToken[6] + l$10[x$3]
				}) : ~f$3.indexOf(d$14) ? y$7 = new um$2.default({
					value: m$11.slice(1),
					source: {
						start: {
							line: n$8.currToken[2],
							column: n$8.currToken[3] + d$14
						},
						end: {
							line: n$8.currToken[4],
							column: n$8.currToken[3] + (h$3 - 1)
						}
					},
					sourceIndex: n$8.currToken[6] + l$10[x$3]
				}) : y$7 = new cm$2.default({
					value: m$11,
					source: {
						start: {
							line: n$8.currToken[2],
							column: n$8.currToken[3] + d$14
						},
						end: {
							line: n$8.currToken[4],
							column: n$8.currToken[3] + (h$3 - 1)
						}
					},
					sourceIndex: n$8.currToken[6] + l$10[x$3]
				}), n$8.newNode(y$7, s$8);
			}), this.position++;
		}, t$13.prototype.word = function(s$8) {
			var r$12 = this.nextToken;
			return r$12 && r$12[1] === "|" ? (this.position++, this.namespace()) : this.splitWord(s$8);
		}, t$13.prototype.loop = function() {
			for (; this.position < this.tokens.length;) this.parse(!0);
			return this.root;
		}, t$13.prototype.parse = function(s$8) {
			switch (this.currToken[0]) {
				case "space":
					this.space();
					break;
				case "comment":
					this.comment();
					break;
				case "(":
					this.parentheses();
					break;
				case ")":
					s$8 && this.missingParenthesis();
					break;
				case "[":
					this.attribute();
					break;
				case "]":
					this.missingSquareBracket();
					break;
				case "at-word":
				case "word":
					this.word();
					break;
				case ":":
					this.pseudo();
					break;
				case ";":
					this.missingBackslash();
					break;
				case ",":
					this.comma();
					break;
				case "*":
					this.universal();
					break;
				case "&":
					this.nesting();
					break;
				case "combinator":
					this.combinator();
					break;
				case "string":
					this.string();
					break;
			}
		}, t$13.prototype.parseNamespace = function(s$8) {
			if (this.lossy && typeof s$8 == "string") {
				var r$12 = s$8.trim();
				return r$12.length ? r$12 : !0;
			}
			return s$8;
		}, t$13.prototype.parseSpace = function(s$8, r$12) {
			return this.lossy ? r$12 || "" : s$8;
		}, t$13.prototype.parseValue = function(s$8) {
			return this.lossy && s$8 && typeof s$8 == "string" ? s$8.trim() : s$8;
		}, t$13.prototype.parseParenthesisToken = function(s$8) {
			return this.lossy ? s$8[0] === "space" ? this.parseSpace(s$8[1], " ") : this.parseValue(s$8[1]) : s$8[1];
		}, t$13.prototype.newNode = function(s$8, r$12) {
			return r$12 && (s$8.namespace = this.parseNamespace(r$12)), this.spaces && (s$8.spaces.before = this.spaces, this.spaces = ""), this.current.append(s$8);
		}, jd$1(t$13, [
			{
				key: "currToken",
				get: function() {
					return this.tokens[this.position];
				}
			},
			{
				key: "nextToken",
				get: function() {
					return this.tokens[this.position + 1];
				}
			},
			{
				key: "prevToken",
				get: function() {
					return this.tokens[this.position - 1];
				}
			}
		]), t$13;
	}();
	pu$2.exports = Tr$4.default;
});
var mu$1 = g$1((Or$5, du$2) => {
	Or$5.__esModule = !0;
	var Pm$1 = function() {
		function t$13(e$4, s$8) {
			for (var r$12 = 0; r$12 < s$8.length; r$12++) {
				var n$8 = s$8[r$12];
				n$8.enumerable = n$8.enumerable || !1, n$8.configurable = !0, "value" in n$8 && (n$8.writable = !0), Object.defineProperty(e$4, n$8.key, n$8);
			}
		}
		return function(e$4, s$8, r$12) {
			return s$8 && t$13(e$4.prototype, s$8), r$12 && t$13(e$4, r$12), e$4;
		};
	}(), Rm$1 = hu$1(), Im$1 = qm$1(Rm$1);
	function qm$1(t$13) {
		return t$13 && t$13.__esModule ? t$13 : { default: t$13 };
	}
	function Lm$1(t$13, e$4) {
		if (!(t$13 instanceof e$4)) throw new TypeError("Cannot call a class as a function");
	}
	Or$5.default = function() {
		function t$13(e$4) {
			return Lm$1(this, t$13), this.func = e$4 || function() {}, this;
		}
		return t$13.prototype.process = function(s$8) {
			var r$12 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n$8 = new Im$1.default({
				css: s$8,
				error: function(o$9) {
					throw new Error(o$9);
				},
				options: r$12
			});
			return this.res = n$8, this.func(n$8), this;
		}, Pm$1(t$13, [{
			key: "result",
			get: function() {
				return String(this.res);
			}
		}]), t$13;
	}();
	du$2.exports = Or$5.default;
});
var z$1 = g$1((tb$1, gu$3) => {
	var js$4 = function(t$13, e$4) {
		let s$8 = new t$13.constructor();
		for (let r$12 in t$13) {
			if (!t$13.hasOwnProperty(r$12)) continue;
			let n$8 = t$13[r$12], i$18 = typeof n$8;
			r$12 === "parent" && i$18 === "object" ? e$4 && (s$8[r$12] = e$4) : r$12 === "source" ? s$8[r$12] = n$8 : n$8 instanceof Array ? s$8[r$12] = n$8.map((o$9) => js$4(o$9, s$8)) : r$12 !== "before" && r$12 !== "after" && r$12 !== "between" && r$12 !== "semicolon" && (i$18 === "object" && n$8 !== null && (n$8 = js$4(n$8)), s$8[r$12] = n$8);
		}
		return s$8;
	};
	gu$3.exports = class {
		constructor(e$4) {
			e$4 = e$4 || {}, this.raws = {
				before: "",
				after: ""
			};
			for (let s$8 in e$4) this[s$8] = e$4[s$8];
		}
		remove() {
			return this.parent && this.parent.removeChild(this), this.parent = void 0, this;
		}
		toString() {
			return [
				this.raws.before,
				String(this.value),
				this.raws.after
			].join("");
		}
		clone(e$4) {
			e$4 = e$4 || {};
			let s$8 = js$4(this);
			for (let r$12 in e$4) s$8[r$12] = e$4[r$12];
			return s$8;
		}
		cloneBefore(e$4) {
			e$4 = e$4 || {};
			let s$8 = this.clone(e$4);
			return this.parent.insertBefore(this, s$8), s$8;
		}
		cloneAfter(e$4) {
			e$4 = e$4 || {};
			let s$8 = this.clone(e$4);
			return this.parent.insertAfter(this, s$8), s$8;
		}
		replaceWith() {
			let e$4 = Array.prototype.slice.call(arguments);
			if (this.parent) {
				for (let s$8 of e$4) this.parent.insertBefore(this, s$8);
				this.remove();
			}
			return this;
		}
		moveTo(e$4) {
			return this.cleanRaws(this.root() === e$4.root()), this.remove(), e$4.append(this), this;
		}
		moveBefore(e$4) {
			return this.cleanRaws(this.root() === e$4.root()), this.remove(), e$4.parent.insertBefore(e$4, this), this;
		}
		moveAfter(e$4) {
			return this.cleanRaws(this.root() === e$4.root()), this.remove(), e$4.parent.insertAfter(e$4, this), this;
		}
		next() {
			let e$4 = this.parent.index(this);
			return this.parent.nodes[e$4 + 1];
		}
		prev() {
			let e$4 = this.parent.index(this);
			return this.parent.nodes[e$4 - 1];
		}
		toJSON() {
			let e$4 = {};
			for (let s$8 in this) {
				if (!this.hasOwnProperty(s$8) || s$8 === "parent") continue;
				let r$12 = this[s$8];
				r$12 instanceof Array ? e$4[s$8] = r$12.map((n$8) => typeof n$8 == "object" && n$8.toJSON ? n$8.toJSON() : n$8) : typeof r$12 == "object" && r$12.toJSON ? e$4[s$8] = r$12.toJSON() : e$4[s$8] = r$12;
			}
			return e$4;
		}
		root() {
			let e$4 = this;
			for (; e$4.parent;) e$4 = e$4.parent;
			return e$4;
		}
		cleanRaws(e$4) {
			delete this.raws.before, delete this.raws.after, e$4 || delete this.raws.between;
		}
		positionInside(e$4) {
			let s$8 = this.toString(), r$12 = this.source.start.column, n$8 = this.source.start.line;
			for (let i$18 = 0; i$18 < e$4; i$18++) s$8[i$18] === `
` ? (r$12 = 1, n$8 += 1) : r$12 += 1;
			return {
				line: n$8,
				column: r$12
			};
		}
		positionBy(e$4) {
			let s$8 = this.source.start;
			if (Object(e$4).index) s$8 = this.positionInside(e$4.index);
			else if (Object(e$4).word) {
				let r$12 = this.toString().indexOf(e$4.word);
				r$12 !== -1 && (s$8 = this.positionInside(r$12));
			}
			return s$8;
		}
	};
});
var U$2 = g$1((rb$1, wu$2) => {
	var Bm$1 = z$1(), We$2 = class extends Bm$1 {
		constructor(e$4) {
			super(e$4), this.nodes || (this.nodes = []);
		}
		push(e$4) {
			return e$4.parent = this, this.nodes.push(e$4), this;
		}
		each(e$4) {
			this.lastEach || (this.lastEach = 0), this.indexes || (this.indexes = {}), this.lastEach += 1;
			let s$8 = this.lastEach, r$12, n$8;
			if (this.indexes[s$8] = 0, !!this.nodes) {
				for (; this.indexes[s$8] < this.nodes.length && (r$12 = this.indexes[s$8], n$8 = e$4(this.nodes[r$12], r$12), n$8 !== !1);) this.indexes[s$8] += 1;
				return delete this.indexes[s$8], n$8;
			}
		}
		walk(e$4) {
			return this.each((s$8, r$12) => {
				let n$8 = e$4(s$8, r$12);
				return n$8 !== !1 && s$8.walk && (n$8 = s$8.walk(e$4)), n$8;
			});
		}
		walkType(e$4, s$8) {
			if (!e$4 || !s$8) throw new Error("Parameters {type} and {callback} are required.");
			let r$12 = typeof e$4 == "function";
			return this.walk((n$8, i$18) => {
				if (r$12 && n$8 instanceof e$4 || !r$12 && n$8.type === e$4) return s$8.call(this, n$8, i$18);
			});
		}
		append(e$4) {
			return e$4.parent = this, this.nodes.push(e$4), this;
		}
		prepend(e$4) {
			return e$4.parent = this, this.nodes.unshift(e$4), this;
		}
		cleanRaws(e$4) {
			if (super.cleanRaws(e$4), this.nodes) for (let s$8 of this.nodes) s$8.cleanRaws(e$4);
		}
		insertAfter(e$4, s$8) {
			let r$12 = this.index(e$4), n$8;
			this.nodes.splice(r$12 + 1, 0, s$8);
			for (let i$18 in this.indexes) n$8 = this.indexes[i$18], r$12 <= n$8 && (this.indexes[i$18] = n$8 + this.nodes.length);
			return this;
		}
		insertBefore(e$4, s$8) {
			let r$12 = this.index(e$4), n$8;
			this.nodes.splice(r$12, 0, s$8);
			for (let i$18 in this.indexes) n$8 = this.indexes[i$18], r$12 <= n$8 && (this.indexes[i$18] = n$8 + this.nodes.length);
			return this;
		}
		removeChild(e$4) {
			e$4 = this.index(e$4), this.nodes[e$4].parent = void 0, this.nodes.splice(e$4, 1);
			let s$8;
			for (let r$12 in this.indexes) s$8 = this.indexes[r$12], s$8 >= e$4 && (this.indexes[r$12] = s$8 - 1);
			return this;
		}
		removeAll() {
			for (let e$4 of this.nodes) e$4.parent = void 0;
			return this.nodes = [], this;
		}
		every(e$4) {
			return this.nodes.every(e$4);
		}
		some(e$4) {
			return this.nodes.some(e$4);
		}
		index(e$4) {
			return typeof e$4 == "number" ? e$4 : this.nodes.indexOf(e$4);
		}
		get first() {
			if (this.nodes) return this.nodes[0];
		}
		get last() {
			if (this.nodes) return this.nodes[this.nodes.length - 1];
		}
		toString() {
			let e$4 = this.nodes.map(String).join("");
			return this.value && (e$4 = this.value + e$4), this.raws.before && (e$4 = this.raws.before + e$4), this.raws.after && (e$4 += this.raws.after), e$4;
		}
	};
	We$2.registerWalker = (t$13) => {
		let e$4 = "walk" + t$13.name;
		e$4.lastIndexOf("s") !== e$4.length - 1 && (e$4 += "s"), !We$2.prototype[e$4] && (We$2.prototype[e$4] = function(s$8) {
			return this.walkType(t$13, s$8);
		});
	};
	wu$2.exports = We$2;
});
var xu$1 = g$1((nb$1, vu$3) => {
	var Um$1 = U$2();
	vu$3.exports = class extends Um$1 {
		constructor(e$4) {
			super(e$4), this.type = "root";
		}
	};
});
var _u$1 = g$1((ob$1, bu$2) => {
	var Fm$2 = U$2();
	bu$2.exports = class extends Fm$2 {
		constructor(e$4) {
			super(e$4), this.type = "value", this.unbalanced = 0;
		}
	};
});
var Su$1 = g$1((ab$1, ku$3) => {
	var Eu$2 = U$2(), Cr$4 = class extends Eu$2 {
		constructor(e$4) {
			super(e$4), this.type = "atword";
		}
		toString() {
			this.quoted && this.raws.quote;
			return [
				this.raws.before,
				"@",
				String.prototype.toString.call(this.value),
				this.raws.after
			].join("");
		}
	};
	Eu$2.registerWalker(Cr$4);
	ku$3.exports = Cr$4;
});
var Ou$1 = g$1((ub$1, Tu$3) => {
	var $m$1 = U$2(), Wm$1 = z$1(), Ar$5 = class extends Wm$1 {
		constructor(e$4) {
			super(e$4), this.type = "colon";
		}
	};
	$m$1.registerWalker(Ar$5);
	Tu$3.exports = Ar$5;
});
var Au$1 = g$1((lb$1, Cu$2) => {
	var Gm$1 = U$2(), Ym$1 = z$1(), Nr$6 = class extends Ym$1 {
		constructor(e$4) {
			super(e$4), this.type = "comma";
		}
	};
	Gm$1.registerWalker(Nr$6);
	Cu$2.exports = Nr$6;
});
var Pu$1 = g$1((cb$1, Nu$3) => {
	var Vm$1 = U$2(), zm$1 = z$1(), Pr$6 = class extends zm$1 {
		constructor(e$4) {
			super(e$4), this.type = "comment", this.inline = Object(e$4).inline || !1;
		}
		toString() {
			return [
				this.raws.before,
				this.inline ? "//" : "/*",
				String(this.value),
				this.inline ? "" : "*/",
				this.raws.after
			].join("");
		}
	};
	Vm$1.registerWalker(Pr$6);
	Nu$3.exports = Pr$6;
});
var qu$1 = g$1((fb$1, Iu$2) => {
	var Ru$3 = U$2(), Rr$5 = class extends Ru$3 {
		constructor(e$4) {
			super(e$4), this.type = "func", this.unbalanced = -1;
		}
	};
	Ru$3.registerWalker(Rr$5);
	Iu$2.exports = Rr$5;
});
var Du$1 = g$1((pb$1, Lu$2) => {
	var Hm$2 = U$2(), jm$1 = z$1(), Ir$6 = class extends jm$1 {
		constructor(e$4) {
			super(e$4), this.type = "number", this.unit = Object(e$4).unit || "";
		}
		toString() {
			return [
				this.raws.before,
				String(this.value),
				this.unit,
				this.raws.after
			].join("");
		}
	};
	Hm$2.registerWalker(Ir$6);
	Lu$2.exports = Ir$6;
});
var Bu$1 = g$1((hb$1, Mu$2) => {
	var Km$2 = U$2(), Qm$2 = z$1(), qr$4 = class extends Qm$2 {
		constructor(e$4) {
			super(e$4), this.type = "operator";
		}
	};
	Km$2.registerWalker(qr$4);
	Mu$2.exports = qr$4;
});
var Fu$1 = g$1((db$1, Uu$2) => {
	var Xm$2 = U$2(), Jm$2 = z$1(), Lr$5 = class extends Jm$2 {
		constructor(e$4) {
			super(e$4), this.type = "paren", this.parenType = "";
		}
	};
	Xm$2.registerWalker(Lr$5);
	Uu$2.exports = Lr$5;
});
var Wu$1 = g$1((mb$1, $u$2) => {
	var Zm$2 = U$2(), ey = z$1(), Dr$5 = class extends ey {
		constructor(e$4) {
			super(e$4), this.type = "string";
		}
		toString() {
			let e$4 = this.quoted ? this.raws.quote : "";
			return [
				this.raws.before,
				e$4,
				this.value + "",
				e$4,
				this.raws.after
			].join("");
		}
	};
	Zm$2.registerWalker(Dr$5);
	$u$2.exports = Dr$5;
});
var Yu$1 = g$1((yb$1, Gu$2) => {
	var ty = U$2(), ry = z$1(), Mr$4 = class extends ry {
		constructor(e$4) {
			super(e$4), this.type = "word";
		}
	};
	ty.registerWalker(Mr$4);
	Gu$2.exports = Mr$4;
});
var zu$1 = g$1((gb$1, Vu$2) => {
	var sy = U$2(), ny = z$1(), Br$5 = class extends ny {
		constructor(e$4) {
			super(e$4), this.type = "unicode-range";
		}
	};
	sy.registerWalker(Br$5);
	Vu$2.exports = Br$5;
});
var ju$1 = g$1((wb$1, Hu$2) => {
	var Ks$5 = class extends Error {
		constructor(e$4) {
			super(e$4), this.name = this.constructor.name, this.message = e$4 || "An error ocurred while tokzenizing.", typeof Error.captureStackTrace == "function" ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error(e$4).stack;
		}
	};
	Hu$2.exports = Ks$5;
});
var Xu$1 = g$1((vb$1, Qu$2) => {
	var Ur$5 = /[ \n\t\r\{\(\)'"\\;,/]/g, iy = /[ \n\t\r\(\)\{\}\*:;@!&'"\+\|~>,\[\]\\]|\/(?=\*)/g, Ge$5 = /[ \n\t\r\(\)\{\}\*:;@!&'"\-\+\|~>,\[\]\\]|\//g, oy = /^[a-z0-9]/i, ay = /^[a-f0-9?\-]/i, Ku$2 = ju$1();
	Qu$2.exports = function(e$4, s$8) {
		s$8 = s$8 || {};
		let r$12 = [], n$8 = e$4.valueOf(), i$18 = n$8.length, o$9 = -1, u$14 = 1, a$13 = 0, c$3 = 0, f$3 = null, p$2, l$10, d$14, x$3, h$3, m$11, b$7, w$3, v$5, R$6, F$4;
		function Q$4(T$9) {
			let O$3 = `Unclosed ${T$9} at line: ${u$14}, column: ${a$13 - o$9}, token: ${a$13}`;
			throw new Ku$2(O$3);
		}
		for (; a$13 < i$18;) {
			switch (p$2 = n$8.charCodeAt(a$13), p$2 === 10 && (o$9 = a$13, u$14 += 1), p$2) {
				case 10:
				case 32:
				case 9:
				case 13:
				case 12:
					l$10 = a$13;
					do
						l$10 += 1, p$2 = n$8.charCodeAt(l$10), p$2 === 10 && (o$9 = l$10, u$14 += 1);
					while (p$2 === 32 || p$2 === 10 || p$2 === 9 || p$2 === 13 || p$2 === 12);
					r$12.push([
						"space",
						n$8.slice(a$13, l$10),
						u$14,
						a$13 - o$9,
						u$14,
						l$10 - o$9,
						a$13
					]), a$13 = l$10 - 1;
					break;
				case 58:
					l$10 = a$13 + 1, r$12.push([
						"colon",
						n$8.slice(a$13, l$10),
						u$14,
						a$13 - o$9,
						u$14,
						l$10 - o$9,
						a$13
					]), a$13 = l$10 - 1;
					break;
				case 44:
					l$10 = a$13 + 1, r$12.push([
						"comma",
						n$8.slice(a$13, l$10),
						u$14,
						a$13 - o$9,
						u$14,
						l$10 - o$9,
						a$13
					]), a$13 = l$10 - 1;
					break;
				case 123:
					r$12.push([
						"{",
						"{",
						u$14,
						a$13 - o$9,
						u$14,
						l$10 - o$9,
						a$13
					]);
					break;
				case 125:
					r$12.push([
						"}",
						"}",
						u$14,
						a$13 - o$9,
						u$14,
						l$10 - o$9,
						a$13
					]);
					break;
				case 40:
					c$3++, f$3 = !f$3 && c$3 === 1 && r$12.length > 0 && r$12[r$12.length - 1][0] === "word" && r$12[r$12.length - 1][1] === "url", r$12.push([
						"(",
						"(",
						u$14,
						a$13 - o$9,
						u$14,
						l$10 - o$9,
						a$13
					]);
					break;
				case 41:
					c$3--, f$3 = f$3 && c$3 > 0, r$12.push([
						")",
						")",
						u$14,
						a$13 - o$9,
						u$14,
						l$10 - o$9,
						a$13
					]);
					break;
				case 39:
				case 34:
					d$14 = p$2 === 39 ? "'" : "\"", l$10 = a$13;
					do
						for (v$5 = !1, l$10 = n$8.indexOf(d$14, l$10 + 1), l$10 === -1 && Q$4("quote", d$14), R$6 = l$10; n$8.charCodeAt(R$6 - 1) === 92;) R$6 -= 1, v$5 = !v$5;
					while (v$5);
					r$12.push([
						"string",
						n$8.slice(a$13, l$10 + 1),
						u$14,
						a$13 - o$9,
						u$14,
						l$10 - o$9,
						a$13
					]), a$13 = l$10;
					break;
				case 64:
					Ur$5.lastIndex = a$13 + 1, Ur$5.test(n$8), Ur$5.lastIndex === 0 ? l$10 = n$8.length - 1 : l$10 = Ur$5.lastIndex - 2, r$12.push([
						"atword",
						n$8.slice(a$13, l$10 + 1),
						u$14,
						a$13 - o$9,
						u$14,
						l$10 - o$9,
						a$13
					]), a$13 = l$10;
					break;
				case 92:
					l$10 = a$13, p$2 = n$8.charCodeAt(l$10 + 1), r$12.push([
						"word",
						n$8.slice(a$13, l$10 + 1),
						u$14,
						a$13 - o$9,
						u$14,
						l$10 - o$9,
						a$13
					]), a$13 = l$10;
					break;
				case 43:
				case 45:
				case 42:
					l$10 = a$13 + 1, F$4 = n$8.slice(a$13 + 1, l$10 + 1);
					n$8.slice(a$13 - 1, a$13);
					if (p$2 === 45 && F$4.charCodeAt(0) === 45) {
						l$10++, r$12.push([
							"word",
							n$8.slice(a$13, l$10),
							u$14,
							a$13 - o$9,
							u$14,
							l$10 - o$9,
							a$13
						]), a$13 = l$10 - 1;
						break;
					}
					r$12.push([
						"operator",
						n$8.slice(a$13, l$10),
						u$14,
						a$13 - o$9,
						u$14,
						l$10 - o$9,
						a$13
					]), a$13 = l$10 - 1;
					break;
				default:
					if (p$2 === 47 && (n$8.charCodeAt(a$13 + 1) === 42 || s$8.loose && !f$3 && n$8.charCodeAt(a$13 + 1) === 47)) {
						if (n$8.charCodeAt(a$13 + 1) === 42) l$10 = n$8.indexOf("*/", a$13 + 2) + 1, l$10 === 0 && Q$4("comment", "*/");
						else {
							let C$3 = n$8.indexOf(`
`, a$13 + 2);
							l$10 = C$3 !== -1 ? C$3 - 1 : i$18;
						}
						m$11 = n$8.slice(a$13, l$10 + 1), x$3 = m$11.split(`
`), h$3 = x$3.length - 1, h$3 > 0 ? (b$7 = u$14 + h$3, w$3 = l$10 - x$3[h$3].length) : (b$7 = u$14, w$3 = o$9), r$12.push([
							"comment",
							m$11,
							u$14,
							a$13 - o$9,
							b$7,
							l$10 - w$3,
							a$13
						]), o$9 = w$3, u$14 = b$7, a$13 = l$10;
					} else if (p$2 === 35 && !oy.test(n$8.slice(a$13 + 1, a$13 + 2))) l$10 = a$13 + 1, r$12.push([
						"#",
						n$8.slice(a$13, l$10),
						u$14,
						a$13 - o$9,
						u$14,
						l$10 - o$9,
						a$13
					]), a$13 = l$10 - 1;
					else if ((p$2 === 117 || p$2 === 85) && n$8.charCodeAt(a$13 + 1) === 43) {
						l$10 = a$13 + 2;
						do
							l$10 += 1, p$2 = n$8.charCodeAt(l$10);
						while (l$10 < i$18 && ay.test(n$8.slice(l$10, l$10 + 1)));
						r$12.push([
							"unicoderange",
							n$8.slice(a$13, l$10),
							u$14,
							a$13 - o$9,
							u$14,
							l$10 - o$9,
							a$13
						]), a$13 = l$10 - 1;
					} else if (p$2 === 47) l$10 = a$13 + 1, r$12.push([
						"operator",
						n$8.slice(a$13, l$10),
						u$14,
						a$13 - o$9,
						u$14,
						l$10 - o$9,
						a$13
					]), a$13 = l$10 - 1;
					else {
						let O$3 = iy;
						if (p$2 >= 48 && p$2 <= 57 && (O$3 = Ge$5), O$3.lastIndex = a$13 + 1, O$3.test(n$8), O$3.lastIndex === 0 ? l$10 = n$8.length - 1 : l$10 = O$3.lastIndex - 2, O$3 === Ge$5 || p$2 === 46) {
							let C$3 = n$8.charCodeAt(l$10), xe$4 = n$8.charCodeAt(l$10 + 1), tn$4 = n$8.charCodeAt(l$10 + 2);
							(C$3 === 101 || C$3 === 69) && (xe$4 === 45 || xe$4 === 43) && tn$4 >= 48 && tn$4 <= 57 && (Ge$5.lastIndex = l$10 + 2, Ge$5.test(n$8), Ge$5.lastIndex === 0 ? l$10 = n$8.length - 1 : l$10 = Ge$5.lastIndex - 2);
						}
						r$12.push([
							"word",
							n$8.slice(a$13, l$10 + 1),
							u$14,
							a$13 - o$9,
							u$14,
							l$10 - o$9,
							a$13
						]), a$13 = l$10;
					}
					break;
			}
			a$13++;
		}
		return r$12;
	};
});
var Zu$1 = g$1((xb$1, Ju$2) => {
	var Qs$3 = class extends Error {
		constructor(e$4) {
			super(e$4), this.name = this.constructor.name, this.message = e$4 || "An error ocurred while parsing.", typeof Error.captureStackTrace == "function" ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error(e$4).stack;
		}
	};
	Ju$2.exports = Qs$3;
});
var sl$1 = g$1((_b$1, rl$2) => {
	var uy = xu$1(), ly = _u$1(), cy = Su$1(), fy = Ou$1(), py = Au$1(), hy$1 = Pu$1(), dy = qu$1(), my$1 = Du$1(), yy$1 = Bu$1(), el$1 = Fu$1(), gy$1 = Wu$1(), tl$1 = Yu$1(), wy$1 = zu$1(), vy$1 = Xu$1(), xy$1 = Bs$1(), by$1 = Us$1(), _y = Fs$1(), Ey$1 = Zu$1();
	function ky$1(t$13) {
		return t$13.sort((e$4, s$8) => e$4 - s$8);
	}
	rl$2.exports = class {
		constructor(e$4, s$8) {
			this.cache = [], this.input = e$4, this.options = Object.assign({}, { loose: !1 }, s$8), this.position = 0, this.unbalanced = 0, this.root = new uy();
			let n$8 = new ly();
			this.root.append(n$8), this.current = n$8, this.tokens = vy$1(e$4, this.options);
		}
		parse() {
			return this.loop();
		}
		colon() {
			let e$4 = this.currToken;
			this.newNode(new fy({
				value: e$4[1],
				source: {
					start: {
						line: e$4[2],
						column: e$4[3]
					},
					end: {
						line: e$4[4],
						column: e$4[5]
					}
				},
				sourceIndex: e$4[6]
			})), this.position++;
		}
		comma() {
			let e$4 = this.currToken;
			this.newNode(new py({
				value: e$4[1],
				source: {
					start: {
						line: e$4[2],
						column: e$4[3]
					},
					end: {
						line: e$4[4],
						column: e$4[5]
					}
				},
				sourceIndex: e$4[6]
			})), this.position++;
		}
		comment() {
			let e$4 = !1, s$8 = this.currToken[1].replace(/\/\*|\*\//g, ""), r$12;
			this.options.loose && s$8.startsWith("//") && (s$8 = s$8.substring(2), e$4 = !0), r$12 = new hy$1({
				value: s$8,
				inline: e$4,
				source: {
					start: {
						line: this.currToken[2],
						column: this.currToken[3]
					},
					end: {
						line: this.currToken[4],
						column: this.currToken[5]
					}
				},
				sourceIndex: this.currToken[6]
			}), this.newNode(r$12), this.position++;
		}
		error(e$4, s$8) {
			throw new Ey$1(e$4 + ` at line: ${s$8[2]}, column ${s$8[3]}`);
		}
		loop() {
			for (; this.position < this.tokens.length;) this.parseTokens();
			return !this.current.last && this.spaces ? this.current.raws.before += this.spaces : this.spaces && (this.current.last.raws.after += this.spaces), this.spaces = "", this.root;
		}
		operator() {
			let e$4 = this.currToken[1], s$8;
			if (e$4 === "+" || e$4 === "-") {
				if (this.options.loose || this.position > 0 && (this.current.type === "func" && this.current.value === "calc" ? this.prevToken[0] !== "space" && this.prevToken[0] !== "(" ? this.error("Syntax Error", this.currToken) : this.nextToken[0] !== "space" && this.nextToken[0] !== "word" ? this.error("Syntax Error", this.currToken) : this.nextToken[0] === "word" && this.current.last.type !== "operator" && this.current.last.value !== "(" && this.error("Syntax Error", this.currToken) : (this.nextToken[0] === "space" || this.nextToken[0] === "operator" || this.prevToken[0] === "operator") && this.error("Syntax Error", this.currToken)), this.options.loose) {
					if ((!this.current.nodes.length || this.current.last && this.current.last.type === "operator") && this.nextToken[0] === "word") return this.word();
				} else if (this.nextToken[0] === "word") return this.word();
			}
			return s$8 = new yy$1({
				value: this.currToken[1],
				source: {
					start: {
						line: this.currToken[2],
						column: this.currToken[3]
					},
					end: {
						line: this.currToken[2],
						column: this.currToken[3]
					}
				},
				sourceIndex: this.currToken[4]
			}), this.position++, this.newNode(s$8);
		}
		parseTokens() {
			switch (this.currToken[0]) {
				case "space":
					this.space();
					break;
				case "colon":
					this.colon();
					break;
				case "comma":
					this.comma();
					break;
				case "comment":
					this.comment();
					break;
				case "(":
					this.parenOpen();
					break;
				case ")":
					this.parenClose();
					break;
				case "atword":
				case "word":
					this.word();
					break;
				case "operator":
					this.operator();
					break;
				case "string":
					this.string();
					break;
				case "unicoderange":
					this.unicodeRange();
					break;
				default:
					this.word();
					break;
			}
		}
		parenOpen() {
			let e$4 = 1, s$8 = this.position + 1, r$12 = this.currToken, n$8;
			for (; s$8 < this.tokens.length && e$4;) {
				let i$18 = this.tokens[s$8];
				i$18[0] === "(" && e$4++, i$18[0] === ")" && e$4--, s$8++;
			}
			if (e$4 && this.error("Expected closing parenthesis", r$12), n$8 = this.current.last, n$8 && n$8.type === "func" && n$8.unbalanced < 0 && (n$8.unbalanced = 0, this.current = n$8), this.current.unbalanced++, this.newNode(new el$1({
				value: r$12[1],
				source: {
					start: {
						line: r$12[2],
						column: r$12[3]
					},
					end: {
						line: r$12[4],
						column: r$12[5]
					}
				},
				sourceIndex: r$12[6]
			})), this.position++, this.current.type === "func" && this.current.unbalanced && this.current.value === "url" && this.currToken[0] !== "string" && this.currToken[0] !== ")" && !this.options.loose) {
				let i$18 = this.nextToken, o$9 = this.currToken[1], u$14 = {
					line: this.currToken[2],
					column: this.currToken[3]
				};
				for (; i$18 && i$18[0] !== ")" && this.current.unbalanced;) this.position++, o$9 += this.currToken[1], i$18 = this.nextToken;
				this.position !== this.tokens.length - 1 && (this.position++, this.newNode(new tl$1({
					value: o$9,
					source: {
						start: u$14,
						end: {
							line: this.currToken[4],
							column: this.currToken[5]
						}
					},
					sourceIndex: this.currToken[6]
				})));
			}
		}
		parenClose() {
			let e$4 = this.currToken;
			this.newNode(new el$1({
				value: e$4[1],
				source: {
					start: {
						line: e$4[2],
						column: e$4[3]
					},
					end: {
						line: e$4[4],
						column: e$4[5]
					}
				},
				sourceIndex: e$4[6]
			})), this.position++, !(this.position >= this.tokens.length - 1 && !this.current.unbalanced) && (this.current.unbalanced--, this.current.unbalanced < 0 && this.error("Expected opening parenthesis", e$4), !this.current.unbalanced && this.cache.length && (this.current = this.cache.pop()));
		}
		space() {
			let e$4 = this.currToken;
			this.position === this.tokens.length - 1 || this.nextToken[0] === "," || this.nextToken[0] === ")" ? (this.current.last.raws.after += e$4[1], this.position++) : (this.spaces = e$4[1], this.position++);
		}
		unicodeRange() {
			let e$4 = this.currToken;
			this.newNode(new wy$1({
				value: e$4[1],
				source: {
					start: {
						line: e$4[2],
						column: e$4[3]
					},
					end: {
						line: e$4[4],
						column: e$4[5]
					}
				},
				sourceIndex: e$4[6]
			})), this.position++;
		}
		splitWord() {
			let e$4 = this.nextToken, s$8 = this.currToken[1], r$12 = /^[\+\-]?((\d+(\.\d*)?)|(\.\d+))([eE][\+\-]?\d+)?/, n$8 = /^(?!\#([a-z0-9]+))[\#\{\}]/gi, i$18, o$9;
			if (!n$8.test(s$8)) for (; e$4 && e$4[0] === "word";) {
				this.position++;
				let u$14 = this.currToken[1];
				s$8 += u$14, e$4 = this.nextToken;
			}
			i$18 = by$1(s$8, "@"), o$9 = ky$1(_y(xy$1([[0], i$18]))), o$9.forEach((u$14, a$13) => {
				let c$3 = o$9[a$13 + 1] || s$8.length, f$3 = s$8.slice(u$14, c$3), p$2;
				if (~i$18.indexOf(u$14)) p$2 = new cy({
					value: f$3.slice(1),
					source: {
						start: {
							line: this.currToken[2],
							column: this.currToken[3] + u$14
						},
						end: {
							line: this.currToken[4],
							column: this.currToken[3] + (c$3 - 1)
						}
					},
					sourceIndex: this.currToken[6] + o$9[a$13]
				});
				else if (r$12.test(this.currToken[1])) {
					let l$10 = f$3.replace(r$12, "");
					p$2 = new my$1({
						value: f$3.replace(l$10, ""),
						source: {
							start: {
								line: this.currToken[2],
								column: this.currToken[3] + u$14
							},
							end: {
								line: this.currToken[4],
								column: this.currToken[3] + (c$3 - 1)
							}
						},
						sourceIndex: this.currToken[6] + o$9[a$13],
						unit: l$10
					});
				} else p$2 = new (e$4 && e$4[0] === "(" ? dy : tl$1)({
					value: f$3,
					source: {
						start: {
							line: this.currToken[2],
							column: this.currToken[3] + u$14
						},
						end: {
							line: this.currToken[4],
							column: this.currToken[3] + (c$3 - 1)
						}
					},
					sourceIndex: this.currToken[6] + o$9[a$13]
				}), p$2.type === "word" ? (p$2.isHex = /^#(.+)/.test(f$3), p$2.isColor = /^#([0-9a-f]{3}|[0-9a-f]{4}|[0-9a-f]{6}|[0-9a-f]{8})$/i.test(f$3)) : this.cache.push(this.current);
				this.newNode(p$2);
			}), this.position++;
		}
		string() {
			let e$4 = this.currToken, s$8 = this.currToken[1], r$12 = /^(\"|\')/, n$8 = r$12.test(s$8), i$18 = "", o$9;
			n$8 && (i$18 = s$8.match(r$12)[0], s$8 = s$8.slice(1, s$8.length - 1)), o$9 = new gy$1({
				value: s$8,
				source: {
					start: {
						line: e$4[2],
						column: e$4[3]
					},
					end: {
						line: e$4[4],
						column: e$4[5]
					}
				},
				sourceIndex: e$4[6],
				quoted: n$8
			}), o$9.raws.quote = i$18, this.newNode(o$9), this.position++;
		}
		word() {
			return this.splitWord();
		}
		newNode(e$4) {
			return this.spaces && (e$4.raws.before += this.spaces, this.spaces = ""), this.current.append(e$4);
		}
		get currToken() {
			return this.tokens[this.position];
		}
		get nextToken() {
			return this.tokens[this.position + 1];
		}
		get prevToken() {
			return this.tokens[this.position - 1];
		}
	};
});
var en$2 = {};
rn$3(en$2, {
	languages: () => Ei$1,
	options: () => Si$2,
	parsers: () => Zs$2,
	printers: () => Fy$1
});
var Tl$1 = (t$13, e$4, s$8, r$12) => {
	if (!(t$13 && e$4 == null)) return e$4.replaceAll ? e$4.replaceAll(s$8, r$12) : s$8.global ? e$4.replace(s$8, r$12) : e$4.split(s$8).join(r$12);
}, E = Tl$1;
var _e$2 = "string", Ye$2 = "array", Ve$1 = "cursor", re$1 = "indent", Ee$1 = "align", ze$2 = "trim", se$1 = "group", ne$2 = "fill", ie$2 = "if-break", He$3 = "indent-if-break", ke$3 = "line-suffix", je$1 = "line-suffix-boundary", H$2 = "line", Ke$1 = "label", Se$1 = "break-parent", Tt$2 = new Set([
	Ve$1,
	re$1,
	Ee$1,
	ze$2,
	se$1,
	ne$2,
	ie$2,
	He$3,
	ke$3,
	je$1,
	H$2,
	Ke$1,
	Se$1
]);
var Ol$1 = (t$13, e$4, s$8) => {
	if (!(t$13 && e$4 == null)) return Array.isArray(e$4) || typeof e$4 == "string" ? e$4[s$8 < 0 ? e$4.length + s$8 : s$8] : e$4.at(s$8);
}, $ = Ol$1;
function Cl$1(t$13) {
	if (typeof t$13 == "string") return _e$2;
	if (Array.isArray(t$13)) return Ye$2;
	if (!t$13) return;
	let { type: e$4 } = t$13;
	if (Tt$2.has(e$4)) return e$4;
}
var j$2 = Cl$1;
var Al$1 = (t$13) => new Intl.ListFormat("en-US", { type: "disjunction" }).format(t$13);
function Nl$1(t$13) {
	let e$4 = t$13 === null ? "null" : typeof t$13;
	if (e$4 !== "string" && e$4 !== "object") return `Unexpected doc '${e$4}', 
Expected it to be 'string' or 'object'.`;
	if (j$2(t$13)) throw new Error("doc is valid.");
	let s$8 = Object.prototype.toString.call(t$13);
	if (s$8 !== "[object Object]") return `Unexpected doc '${s$8}'.`;
	let r$12 = Al$1([...Tt$2].map((n$8) => `'${n$8}'`));
	return `Unexpected doc.type '${t$13.type}'.
Expected it to be ${r$12}.`;
}
var Gr$2 = class extends Error {
	name = "InvalidDocError";
	constructor(e$4) {
		super(Nl$1(e$4)), this.doc = e$4;
	}
}, Yr$3 = Gr$2;
function Rl$1(t$13, e$4) {
	if (typeof t$13 == "string") return e$4(t$13);
	let s$8 = /* @__PURE__ */ new Map();
	return r$12(t$13);
	function r$12(i$18) {
		if (s$8.has(i$18)) return s$8.get(i$18);
		let o$9 = n$8(i$18);
		return s$8.set(i$18, o$9), o$9;
	}
	function n$8(i$18) {
		switch (j$2(i$18)) {
			case Ye$2: return e$4(i$18.map(r$12));
			case ne$2: return e$4({
				...i$18,
				parts: i$18.parts.map(r$12)
			});
			case ie$2: return e$4({
				...i$18,
				breakContents: r$12(i$18.breakContents),
				flatContents: r$12(i$18.flatContents)
			});
			case se$1: {
				let { expandedStates: o$9, contents: u$14 } = i$18;
				return o$9 ? (o$9 = o$9.map(r$12), u$14 = o$9[0]) : u$14 = r$12(u$14), e$4({
					...i$18,
					contents: u$14,
					expandedStates: o$9
				});
			}
			case Ee$1:
			case re$1:
			case He$3:
			case Ke$1:
			case ke$3: return e$4({
				...i$18,
				contents: r$12(i$18.contents)
			});
			case _e$2:
			case Ve$1:
			case ze$2:
			case je$1:
			case H$2:
			case Se$1: return e$4(i$18);
			default: throw new Yr$3(i$18);
		}
	}
}
function Il$1(t$13) {
	return t$13.type === H$2 && !t$13.hard ? t$13.soft ? "" : " " : t$13.type === ie$2 ? t$13.flatContents : t$13;
}
function sn$2(t$13) {
	return Rl$1(t$13, Il$1);
}
var Vr$2 = () => {}, oe$2 = Vr$2, Qe$1 = Vr$2, nn$3 = Vr$2;
function q$2(t$13) {
	return oe$2(t$13), {
		type: re$1,
		contents: t$13
	};
}
function on$2(t$13, e$4) {
	return oe$2(e$4), {
		type: Ee$1,
		contents: e$4,
		n: t$13
	};
}
function L$1(t$13, e$4 = {}) {
	return oe$2(t$13), Qe$1(e$4.expandedStates, !0), {
		type: se$1,
		id: e$4.id,
		contents: t$13,
		break: !!e$4.shouldBreak,
		expandedStates: e$4.expandedStates
	};
}
function an$2(t$13) {
	return on$2({ type: "root" }, t$13);
}
function ae$2(t$13) {
	return on$2(-1, t$13);
}
function Te$2(t$13) {
	return nn$3(t$13), {
		type: ne$2,
		parts: t$13
	};
}
function Ot$2(t$13, e$4 = "", s$8 = {}) {
	return oe$2(t$13), e$4 !== "" && oe$2(e$4), {
		type: ie$2,
		breakContents: t$13,
		flatContents: e$4,
		groupId: s$8.groupId
	};
}
function un$2(t$13) {
	return oe$2(t$13), {
		type: ke$3,
		contents: t$13
	};
}
var Xe$2 = { type: Se$1 };
var ql = {
	type: H$2,
	hard: !0
};
var A$2 = { type: H$2 }, D$2 = {
	type: H$2,
	soft: !0
}, S$1 = [ql, Xe$2];
function G$1(t$13, e$4) {
	oe$2(t$13), Qe$1(e$4);
	let s$8 = [];
	for (let r$12 = 0; r$12 < e$4.length; r$12++) r$12 !== 0 && s$8.push(t$13), s$8.push(e$4[r$12]);
	return s$8;
}
function Ll$1(t$13) {
	return Array.isArray(t$13) && t$13.length > 0;
}
var ue$1 = Ll$1;
var ln$2 = new Proxy(() => {}, { get: () => ln$2 }), cn$3 = ln$2;
var Ct$2 = "'", fn$2 = "\"";
function Dl$1(t$13, e$4) {
	let s$8 = e$4 === !0 || e$4 === Ct$2 ? Ct$2 : fn$2, r$12 = s$8 === Ct$2 ? fn$2 : Ct$2, n$8 = 0, i$18 = 0;
	for (let o$9 of t$13) o$9 === s$8 ? n$8++ : o$9 === r$12 && i$18++;
	return n$8 > i$18 ? r$12 : s$8;
}
var pn$2 = Dl$1;
function Ml$1(t$13, e$4, s$8) {
	let r$12 = e$4 === "\"" ? "'" : "\"", i$18 = E(!1, t$13, /\\(.)|(["'])/gsu, (o$9, u$14, a$13) => u$14 === r$12 ? u$14 : a$13 === e$4 ? "\\" + a$13 : a$13 || (s$8 && /^[^\n\r"'0-7\\bfnrt-vx\u2028\u2029]$/u.test(u$14) ? u$14 : "\\" + u$14));
	return e$4 + i$18 + e$4;
}
var hn$2 = Ml$1;
function Bl(t$13, e$4) {
	cn$3.ok(/^(?<quote>["']).*\k<quote>$/su.test(t$13));
	let s$8 = t$13.slice(1, -1), r$12 = e$4.parser === "json" || e$4.parser === "jsonc" || e$4.parser === "json5" && e$4.quoteProps === "preserve" && !e$4.singleQuote ? "\"" : e$4.__isInHtmlAttribute ? "'" : pn$2(s$8, e$4.singleQuote);
	return t$13.charAt(0) === r$12 ? t$13 : hn$2(s$8, r$12, !1);
}
var At$3 = Bl;
var zr$2 = class extends Error {
	name = "UnexpectedNodeError";
	constructor(e$4, s$8, r$12 = "type") {
		super(`Unexpected ${s$8} node ${r$12}: ${JSON.stringify(e$4[r$12])}.`), this.node = e$4;
	}
}, dn$2 = zr$2;
function Ul$1(t$13) {
	return (t$13 == null ? void 0 : t$13.type) === "front-matter";
}
var Oe$1 = Ul$1;
var Fl = new Set([
	"raw",
	"raws",
	"sourceIndex",
	"source",
	"before",
	"after",
	"trailingComma",
	"spaces"
]);
function mn$2(t$13, e$4, s$8) {
	if (Oe$1(t$13) && t$13.language === "yaml" && delete e$4.value, t$13.type === "css-comment" && s$8.type === "css-root" && s$8.nodes.length > 0 && ((s$8.nodes[0] === t$13 || Oe$1(s$8.nodes[0]) && s$8.nodes[1] === t$13) && (delete e$4.text, /^\*\s*@(?:format|prettier)\s*$/u.test(t$13.text)) || s$8.type === "css-root" && $(!1, s$8.nodes, -1) === t$13)) return null;
	if (t$13.type === "value-root" && delete e$4.text, (t$13.type === "media-query" || t$13.type === "media-query-list" || t$13.type === "media-feature-expression") && delete e$4.value, t$13.type === "css-rule" && delete e$4.params, (t$13.type === "media-feature" || t$13.type === "media-keyword" || t$13.type === "media-type" || t$13.type === "media-unknown" || t$13.type === "media-url" || t$13.type === "media-value" || t$13.type === "selector-attribute" || t$13.type === "selector-string" || t$13.type === "selector-class" || t$13.type === "selector-combinator" || t$13.type === "value-string") && t$13.value && (e$4.value = $l(t$13.value)), t$13.type === "selector-combinator" && (e$4.value = E(!1, e$4.value, /\s+/gu, " ")), t$13.type === "media-feature" && (e$4.value = E(!1, e$4.value, " ", "")), (t$13.type === "value-word" && (t$13.isColor && t$13.isHex || [
		"initial",
		"inherit",
		"unset",
		"revert"
	].includes(t$13.value.toLowerCase())) || t$13.type === "media-feature" || t$13.type === "selector-root-invalid" || t$13.type === "selector-pseudo") && (e$4.value = e$4.value.toLowerCase()), t$13.type === "css-decl" && (e$4.prop = t$13.prop.toLowerCase()), (t$13.type === "css-atrule" || t$13.type === "css-import") && (e$4.name = t$13.name.toLowerCase()), t$13.type === "value-number" && (e$4.unit = t$13.unit.toLowerCase()), t$13.type === "value-unknown" && (e$4.value = E(!1, e$4.value, /;$/gu, "")), t$13.type === "selector-attribute" && (e$4.attribute = t$13.attribute.trim(), t$13.namespace && typeof t$13.namespace == "string" && (e$4.namespace = t$13.namespace.trim() || !0), t$13.value && (e$4.value = E(!1, e$4.value.trim(), /^["']|["']$/gu, ""), delete e$4.quoted)), (t$13.type === "media-value" || t$13.type === "media-type" || t$13.type === "value-number" || t$13.type === "selector-root-invalid" || t$13.type === "selector-class" || t$13.type === "selector-combinator" || t$13.type === "selector-tag") && t$13.value && (e$4.value = E(!1, e$4.value, /([\d+.e-]+)([a-z]*)/giu, (r$12, n$8, i$18) => {
		let o$9 = Number(n$8);
		return Number.isNaN(o$9) ? r$12 : o$9 + i$18.toLowerCase();
	})), t$13.type === "selector-tag") {
		let r$12 = e$4.value.toLowerCase();
		["from", "to"].includes(r$12) && (e$4.value = r$12);
	}
	if (t$13.type === "css-atrule" && t$13.name.toLowerCase() === "supports" && delete e$4.value, t$13.type === "selector-unknown" && delete e$4.value, t$13.type === "value-comma_group") {
		let r$12 = t$13.groups.findIndex((n$8) => n$8.type === "value-number" && n$8.unit === "...");
		r$12 !== -1 && (e$4.groups[r$12].unit = "", e$4.groups.splice(r$12 + 1, 0, {
			type: "value-word",
			value: "...",
			isColor: !1,
			isHex: !1
		}));
	}
	if (t$13.type === "value-comma_group" && t$13.groups.some((r$12) => r$12.type === "value-atword" && r$12.value.endsWith("[") || r$12.type === "value-word" && r$12.value.startsWith("]"))) return {
		type: "value-atword",
		value: t$13.groups.map((r$12) => r$12.value).join(""),
		group: {
			open: null,
			close: null,
			groups: [],
			type: "value-paren_group"
		}
	};
}
mn$2.ignoredProperties = Fl;
function $l(t$13) {
	return E(!1, E(!1, t$13, "'", "\""), /\\([^\da-f])/giu, "$1");
}
var yn$2 = mn$2;
async function Wl(t$13, e$4) {
	if (t$13.language === "yaml") {
		let s$8 = t$13.value.trim(), r$12 = s$8 ? await e$4(s$8, { parser: "yaml" }) : "";
		return an$2([
			t$13.startDelimiter,
			t$13.explicitLanguage,
			S$1,
			r$12,
			r$12 ? S$1 : "",
			t$13.endDelimiter
		]);
	}
}
var gn$3 = Wl;
function wn$2(t$13) {
	let { node: e$4 } = t$13;
	if (e$4.type === "front-matter") return async (s$8) => {
		let r$12 = await gn$3(e$4, s$8);
		return r$12 ? [r$12, S$1] : void 0;
	};
}
wn$2.getVisitorKeys = (t$13) => t$13.type === "css-root" ? ["frontMatter"] : [];
var vn$1 = wn$2;
var Je$3 = null;
function Ze$3(t$13) {
	if (Je$3 !== null && typeof Je$3.property) {
		let e$4 = Je$3;
		return Je$3 = Ze$3.prototype = null, e$4;
	}
	return Je$3 = Ze$3.prototype = t$13 ?? Object.create(null), new Ze$3();
}
var Gl = 10;
for (let t$13 = 0; t$13 <= Gl; t$13++) Ze$3();
function Hr$3(t$13) {
	return Ze$3(t$13);
}
function Yl(t$13, e$4 = "type") {
	Hr$3(t$13);
	function s$8(r$12) {
		let n$8 = r$12[e$4], i$18 = t$13[n$8];
		if (!Array.isArray(i$18)) throw Object.assign(/* @__PURE__ */ new Error(`Missing visitor keys for '${n$8}'.`), { node: r$12 });
		return i$18;
	}
	return s$8;
}
var zl = Yl({
	"front-matter": [],
	"css-root": ["frontMatter", "nodes"],
	"css-comment": [],
	"css-rule": ["selector", "nodes"],
	"css-decl": [
		"value",
		"selector",
		"nodes"
	],
	"css-atrule": [
		"selector",
		"params",
		"value",
		"nodes"
	],
	"media-query-list": ["nodes"],
	"media-query": ["nodes"],
	"media-type": [],
	"media-feature-expression": ["nodes"],
	"media-feature": [],
	"media-colon": [],
	"media-value": [],
	"media-keyword": [],
	"media-url": [],
	"media-unknown": [],
	"selector-root": ["nodes"],
	"selector-selector": ["nodes"],
	"selector-comment": [],
	"selector-string": [],
	"selector-tag": [],
	"selector-id": [],
	"selector-class": [],
	"selector-attribute": [],
	"selector-combinator": ["nodes"],
	"selector-universal": [],
	"selector-pseudo": ["nodes"],
	"selector-nesting": [],
	"selector-unknown": [],
	"value-value": ["group"],
	"value-root": ["group"],
	"value-comment": [],
	"value-comma_group": ["groups"],
	"value-paren_group": [
		"open",
		"groups",
		"close"
	],
	"value-func": ["group"],
	"value-paren": [],
	"value-number": [],
	"value-operator": [],
	"value-word": [],
	"value-colon": [],
	"value-comma": [],
	"value-string": [],
	"value-atword": [],
	"value-unicode-range": [],
	"value-unknown": []
}), _n$1 = zl;
function Hl(t$13, e$4) {
	let s$8 = 0;
	for (let r$12 = 0; r$12 < t$13.line - 1; ++r$12) s$8 = e$4.indexOf(`
`, s$8) + 1;
	return s$8 + t$13.column;
}
var jr$2 = Hl;
function Nt$2(t$13) {
	return (e$4, s$8, r$12) => {
		let n$8 = !!(r$12 != null && r$12.backwards);
		if (s$8 === !1) return !1;
		let { length: i$18 } = e$4, o$9 = s$8;
		for (; o$9 >= 0 && o$9 < i$18;) {
			let u$14 = e$4.charAt(o$9);
			if (t$13 instanceof RegExp) {
				if (!t$13.test(u$14)) return o$9;
			} else if (!t$13.includes(u$14)) return o$9;
			n$8 ? o$9-- : o$9++;
		}
		return o$9 === -1 || o$9 === i$18 ? o$9 : !1;
	};
}
Nt$2(/\s/u);
var Pt$2 = Nt$2(" 	"), En$2 = Nt$2(",; 	"), Rt$2 = Nt$2(/[^\n\r]/u);
function kn$1(t$13, e$4) {
	let { value: s$8 } = t$13;
	return s$8 === "-" || s$8 === "--" || s$8.charAt(0) !== "-" ? e$4 : e$4 - (s$8.charAt(1) === "-" ? 2 : 1);
}
function Sn$2(t$13, e$4) {
	var s$8, r$12, n$8;
	if (typeof ((r$12 = (s$8 = t$13.source) == null ? void 0 : s$8.start) == null ? void 0 : r$12.offset) == "number") return t$13.source.start.offset;
	if (typeof t$13.sourceIndex == "number") return t$13.type === "value-word" ? kn$1(t$13, t$13.sourceIndex) : t$13.sourceIndex;
	if ((n$8 = t$13.source) != null && n$8.start) return jr$2(t$13.source.start, e$4);
	throw Object.assign(/* @__PURE__ */ new Error("Can not locate node."), { node: t$13 });
}
function Kr$2(t$13, e$4) {
	var s$8, r$12;
	if (t$13.type === "css-comment" && t$13.inline) return Rt$2(e$4, t$13.source.startOffset);
	if (typeof ((r$12 = (s$8 = t$13.source) == null ? void 0 : s$8.end) == null ? void 0 : r$12.offset) == "number") return t$13.source.end.offset;
	if (t$13.source) {
		if (t$13.source.end) {
			let n$8 = jr$2(t$13.source.end, e$4);
			return t$13.type === "value-word" ? kn$1(t$13, n$8) : n$8;
		}
		if (ue$1(t$13.nodes)) return Kr$2($(!1, t$13.nodes, -1), e$4);
	}
	return null;
}
function Qr$3(t$13, e$4) {
	t$13.source && (t$13.source.startOffset = Sn$2(t$13, e$4), t$13.source.endOffset = Kr$2(t$13, e$4));
	for (let s$8 in t$13) {
		let r$12 = t$13[s$8];
		s$8 === "source" || !r$12 || typeof r$12 != "object" || (r$12.type === "value-root" || r$12.type === "value-unknown" ? Tn$2(r$12, jl$1(t$13), r$12.text || r$12.value) : Qr$3(r$12, e$4));
	}
}
function Tn$2(t$13, e$4, s$8) {
	t$13.source && (t$13.source.startOffset = Sn$2(t$13, s$8) + e$4, t$13.source.endOffset = Kr$2(t$13, s$8) + e$4);
	for (let r$12 in t$13) {
		let n$8 = t$13[r$12];
		r$12 === "source" || !n$8 || typeof n$8 != "object" || Tn$2(n$8, e$4, s$8);
	}
}
function jl$1(t$13) {
	var s$8;
	let e$4 = t$13.source.startOffset;
	return typeof t$13.prop == "string" && (e$4 += t$13.prop.length), t$13.type === "css-atrule" && typeof t$13.name == "string" && (e$4 += 1 + t$13.name.length + t$13.raws.afterName.match(/^\s*:?\s*/u)[0].length), t$13.type !== "css-atrule" && typeof ((s$8 = t$13.raws) == null ? void 0 : s$8.between) == "string" && (e$4 += t$13.raws.between.length), e$4;
}
function On$2(t$13) {
	let e$4 = "initial", s$8 = "initial", r$12, n$8 = !1, i$18 = [];
	for (let o$9 = 0; o$9 < t$13.length; o$9++) {
		let u$14 = t$13[o$9];
		switch (e$4) {
			case "initial":
				if (u$14 === "'") {
					e$4 = "single-quotes";
					continue;
				}
				if (u$14 === "\"") {
					e$4 = "double-quotes";
					continue;
				}
				if ((u$14 === "u" || u$14 === "U") && t$13.slice(o$9, o$9 + 4).toLowerCase() === "url(") {
					e$4 = "url", o$9 += 3;
					continue;
				}
				if (u$14 === "*" && t$13[o$9 - 1] === "/") {
					e$4 = "comment-block";
					continue;
				}
				if (u$14 === "/" && t$13[o$9 - 1] === "/") {
					e$4 = "comment-inline", r$12 = o$9 - 1;
					continue;
				}
				continue;
			case "single-quotes":
				if (u$14 === "'" && t$13[o$9 - 1] !== "\\" && (e$4 = s$8, s$8 = "initial"), u$14 === `
` || u$14 === "\r") return t$13;
				continue;
			case "double-quotes":
				if (u$14 === "\"" && t$13[o$9 - 1] !== "\\" && (e$4 = s$8, s$8 = "initial"), u$14 === `
` || u$14 === "\r") return t$13;
				continue;
			case "url":
				if (u$14 === ")" && (e$4 = "initial"), u$14 === `
` || u$14 === "\r") return t$13;
				if (u$14 === "'") {
					e$4 = "single-quotes", s$8 = "url";
					continue;
				}
				if (u$14 === "\"") {
					e$4 = "double-quotes", s$8 = "url";
					continue;
				}
				continue;
			case "comment-block":
				u$14 === "/" && t$13[o$9 - 1] === "*" && (e$4 = "initial");
				continue;
			case "comment-inline":
				(u$14 === "\"" || u$14 === "'" || u$14 === "*") && (n$8 = !0), (u$14 === `
` || u$14 === "\r") && (n$8 && i$18.push([r$12, o$9]), e$4 = "initial", n$8 = !1);
				continue;
		}
	}
	for (let [o$9, u$14] of i$18) t$13 = t$13.slice(0, o$9) + E(!1, t$13.slice(o$9, u$14), /["'*]/gu, " ") + t$13.slice(u$14);
	return t$13;
}
function N$2(t$13) {
	var e$4;
	return (e$4 = t$13.source) == null ? void 0 : e$4.startOffset;
}
function P$2(t$13) {
	var e$4;
	return (e$4 = t$13.source) == null ? void 0 : e$4.endOffset;
}
var Kl = /\*\/$/, Ql = /^\/\*\*?/, Pn$2 = /^\s*(\/\*\*?(.|\r?\n)*?\*\/)/, Xl = /(^|\s+)\/\/([^\n\r]*)/g, Cn$2 = /^(\r?\n)+/, Jl$1 = /(?:^|\r?\n) *(@[^\n\r]*?) *\r?\n *(?![^\n\r@]*\/\/[^]*)([^\s@][^\n\r@]+?) *\r?\n/g, An$2 = /(?:^|\r?\n) *@(\S+) *([^\n\r]*)/g, Zl = /(\r?\n|^) *\* ?/g, Rn$1 = [];
function In$2(t$13) {
	let e$4 = t$13.match(Pn$2);
	return e$4 ? e$4[0].trimStart() : "";
}
function qn$2(t$13) {
	let e$4 = t$13.match(Pn$2), s$8 = e$4 == null ? void 0 : e$4[0];
	return s$8 == null ? t$13 : t$13.slice(s$8.length);
}
function Ln$2(t$13) {
	let e$4 = `
`;
	t$13 = E(!1, t$13.replace(Ql, "").replace(Kl, ""), Zl, "$1");
	let s$8 = "";
	for (; s$8 !== t$13;) s$8 = t$13, t$13 = E(!1, t$13, Jl$1, `${e$4}$1 $2${e$4}`);
	t$13 = t$13.replace(Cn$2, "").trimEnd();
	let r$12 = Object.create(null), n$8 = E(!1, t$13, An$2, "").replace(Cn$2, "").trimEnd(), i$18;
	for (; i$18 = An$2.exec(t$13);) {
		let o$9 = E(!1, i$18[2], Xl, "");
		if (typeof r$12[i$18[1]] == "string" || Array.isArray(r$12[i$18[1]])) {
			let u$14 = r$12[i$18[1]];
			r$12[i$18[1]] = [
				...Rn$1,
				...Array.isArray(u$14) ? u$14 : [u$14],
				o$9
			];
		} else r$12[i$18[1]] = o$9;
	}
	return {
		comments: n$8,
		pragmas: r$12
	};
}
function Dn$2({ comments: t$13 = "", pragmas: e$4 = {} }) {
	let s$8 = `
`, r$12 = "/**", n$8 = " *", i$18 = " */", o$9 = Object.keys(e$4), u$14 = o$9.flatMap((c$3) => Nn$3(c$3, e$4[c$3])).map((c$3) => `${n$8} ${c$3}${s$8}`).join("");
	if (!t$13) {
		if (o$9.length === 0) return "";
		if (o$9.length === 1 && !Array.isArray(e$4[o$9[0]])) {
			let c$3 = e$4[o$9[0]];
			return `${r$12} ${Nn$3(o$9[0], c$3)[0]}${i$18}`;
		}
	}
	let a$13 = t$13.split(s$8).map((c$3) => `${n$8} ${c$3}`).join(s$8) + s$8;
	return r$12 + s$8 + (t$13 ? a$13 : "") + (t$13 && o$9.length > 0 ? n$8 + s$8 : "") + u$14 + i$18;
}
function Nn$3(t$13, e$4) {
	return [...Rn$1, ...Array.isArray(e$4) ? e$4 : [e$4]].map((s$8) => `@${t$13} ${s$8}`.trim());
}
var Mn$1 = ["noformat", "noprettier"], Bn$2 = ["format", "prettier"], Un$2 = "format";
function ec$1(t$13) {
	if (!t$13.startsWith("#!")) return "";
	let e$4 = t$13.indexOf(`
`);
	return e$4 === -1 ? t$13 : t$13.slice(0, e$4);
}
var Fn$1 = ec$1;
function Xr$3(t$13) {
	let e$4 = Fn$1(t$13);
	e$4 && (t$13 = t$13.slice(e$4.length + 1));
	let s$8 = In$2(t$13), { pragmas: r$12, comments: n$8 } = Ln$2(s$8);
	return {
		shebang: e$4,
		text: t$13,
		pragmas: r$12,
		comments: n$8
	};
}
function $n$1(t$13) {
	let { pragmas: e$4 } = Xr$3(t$13);
	return Bn$2.some((s$8) => Object.prototype.hasOwnProperty.call(e$4, s$8));
}
function Wn$1(t$13) {
	let { pragmas: e$4 } = Xr$3(t$13);
	return Mn$1.some((s$8) => Object.prototype.hasOwnProperty.call(e$4, s$8));
}
function Gn$2(t$13) {
	let { shebang: e$4, text: s$8, pragmas: r$12, comments: n$8 } = Xr$3(t$13), i$18 = qn$2(s$8), o$9 = Dn$2({
		pragmas: {
			[Un$2]: "",
			...r$12
		},
		comments: n$8.trimStart()
	});
	return (e$4 ? `${e$4}
` : "") + o$9 + (i$18.startsWith(`
`) ? `
` : `

`) + i$18;
}
var et$2 = 3;
function tc$1(t$13) {
	let e$4 = t$13.slice(0, et$2);
	if (e$4 !== "---" && e$4 !== "+++") return;
	let s$8 = t$13.indexOf(`
`, et$2);
	if (s$8 === -1) return;
	let r$12 = t$13.slice(et$2, s$8).trim(), n$8 = t$13.indexOf(`
${e$4}`, s$8), i$18 = r$12;
	if (i$18 || (i$18 = e$4 === "+++" ? "toml" : "yaml"), n$8 === -1 && e$4 === "---" && i$18 === "yaml" && (n$8 = t$13.indexOf(`
...`, s$8)), n$8 === -1) return;
	let o$9 = n$8 + 1 + et$2, u$14 = t$13.charAt(o$9 + 1);
	if (!/\s?/u.test(u$14)) return;
	let a$13 = t$13.slice(0, o$9);
	return {
		type: "front-matter",
		language: i$18,
		explicitLanguage: r$12,
		value: t$13.slice(s$8 + 1, n$8),
		startDelimiter: e$4,
		endDelimiter: a$13.slice(-et$2),
		raw: a$13
	};
}
function rc$1(t$13) {
	let e$4 = tc$1(t$13);
	if (!e$4) return { content: t$13 };
	let { raw: s$8 } = e$4;
	return {
		frontMatter: e$4,
		content: E(!1, s$8, /[^\n]/gu, " ") + t$13.slice(s$8.length)
	};
}
var Ce$2 = rc$1;
function Yn$1(t$13) {
	return $n$1(Ce$2(t$13).content);
}
function Vn$1(t$13) {
	return Wn$1(Ce$2(t$13).content);
}
function zn$2(t$13) {
	let { frontMatter: e$4, content: s$8 } = Ce$2(t$13);
	return (e$4 ? e$4.raw + `

` : "") + Gn$2(s$8);
}
var sc$1 = new Set([
	"red",
	"green",
	"blue",
	"alpha",
	"a",
	"rgb",
	"hue",
	"h",
	"saturation",
	"s",
	"lightness",
	"l",
	"whiteness",
	"w",
	"blackness",
	"b",
	"tint",
	"shade",
	"blend",
	"blenda",
	"contrast",
	"hsl",
	"hsla",
	"hwb",
	"hwba"
]);
function Hn$1(t$13) {
	var e$4, s$8;
	return (s$8 = (e$4 = t$13.findAncestor((r$12) => r$12.type === "css-decl")) == null ? void 0 : e$4.prop) == null ? void 0 : s$8.toLowerCase();
}
var nc$1 = new Set([
	"initial",
	"inherit",
	"unset",
	"revert"
]);
function jn$1(t$13) {
	return nc$1.has(t$13.toLowerCase());
}
function Kn$1(t$13, e$4) {
	var r$12;
	let s$8 = t$13.findAncestor((n$8) => n$8.type === "css-atrule");
	return ((r$12 = s$8 == null ? void 0 : s$8.name) == null ? void 0 : r$12.toLowerCase().endsWith("keyframes")) && ["from", "to"].includes(e$4.toLowerCase());
}
function Ae$2(t$13) {
	return t$13.includes("$") || t$13.includes("@") || t$13.includes("#") || t$13.startsWith("%") || t$13.startsWith("--") || t$13.startsWith(":--") || t$13.includes("(") && t$13.includes(")") ? t$13 : t$13.toLowerCase();
}
function Ne$1(t$13, e$4) {
	var r$12;
	let s$8 = t$13.findAncestor((n$8) => n$8.type === "value-func");
	return ((r$12 = s$8 == null ? void 0 : s$8.value) == null ? void 0 : r$12.toLowerCase()) === e$4;
}
function Qn$1(t$13) {
	var r$12;
	let e$4 = t$13.findAncestor((n$8) => n$8.type === "css-rule"), s$8 = (r$12 = e$4 == null ? void 0 : e$4.raws) == null ? void 0 : r$12.selector;
	return s$8 && (s$8.startsWith(":import") || s$8.startsWith(":export"));
}
function he$3(t$13, e$4) {
	let s$8 = Array.isArray(e$4) ? e$4 : [e$4], r$12 = t$13.findAncestor((n$8) => n$8.type === "css-atrule");
	return r$12 && s$8.includes(r$12.name.toLowerCase());
}
function Xn$1(t$13) {
	var s$8;
	let { node: e$4 } = t$13;
	return e$4.groups[0].value === "url" && e$4.groups.length === 2 && ((s$8 = t$13.findAncestor((r$12) => r$12.type === "css-atrule")) == null ? void 0 : s$8.name) === "import";
}
function Jn$1(t$13) {
	return t$13.type === "value-func" && t$13.value.toLowerCase() === "url";
}
function Zn$1(t$13) {
	return t$13.type === "value-func" && t$13.value.toLowerCase() === "var";
}
function ei$3(t$13) {
	let { selector: e$4 } = t$13;
	return e$4 ? typeof e$4 == "string" && /^@.+:.*$/u.test(e$4) || e$4.value && /^@.+:.*$/u.test(e$4.value) : !1;
}
function ti$2(t$13) {
	return t$13.type === "value-word" && [
		"from",
		"through",
		"end"
	].includes(t$13.value);
}
function ri$2(t$13) {
	return t$13.type === "value-word" && [
		"and",
		"or",
		"not"
	].includes(t$13.value);
}
function si$1(t$13) {
	return t$13.type === "value-word" && t$13.value === "in";
}
function It$2(t$13) {
	return t$13.type === "value-operator" && t$13.value === "*";
}
function tt$2(t$13) {
	return t$13.type === "value-operator" && t$13.value === "/";
}
function X$2(t$13) {
	return t$13.type === "value-operator" && t$13.value === "+";
}
function de$2(t$13) {
	return t$13.type === "value-operator" && t$13.value === "-";
}
function ic(t$13) {
	return t$13.type === "value-operator" && t$13.value === "%";
}
function qt$1(t$13) {
	return It$2(t$13) || tt$2(t$13) || X$2(t$13) || de$2(t$13) || ic(t$13);
}
function ni$2(t$13) {
	return t$13.type === "value-word" && ["==", "!="].includes(t$13.value);
}
function ii$1(t$13) {
	return t$13.type === "value-word" && [
		"<",
		">",
		"<=",
		">="
	].includes(t$13.value);
}
function rt$2(t$13, e$4) {
	return e$4.parser === "scss" && t$13.type === "css-atrule" && [
		"if",
		"else",
		"for",
		"each",
		"while"
	].includes(t$13.name);
}
function Zr$2(t$13) {
	var e$4;
	return ((e$4 = t$13.raws) == null ? void 0 : e$4.params) && /^\(\s*\)$/u.test(t$13.raws.params);
}
function Lt$2(t$13) {
	return t$13.name.startsWith("prettier-placeholder");
}
function oi$1(t$13) {
	return t$13.prop.startsWith("@prettier-placeholder");
}
function ai$1(t$13, e$4) {
	return t$13.value === "$$" && t$13.type === "value-func" && (e$4 == null ? void 0 : e$4.type) === "value-word" && !e$4.raws.before;
}
function ui$2(t$13) {
	var e$4, s$8;
	return ((e$4 = t$13.value) == null ? void 0 : e$4.type) === "value-root" && ((s$8 = t$13.value.group) == null ? void 0 : s$8.type) === "value-value" && t$13.prop.toLowerCase() === "composes";
}
function li$1(t$13) {
	var e$4, s$8, r$12;
	return ((r$12 = (s$8 = (e$4 = t$13.value) == null ? void 0 : e$4.group) == null ? void 0 : s$8.group) == null ? void 0 : r$12.type) === "value-paren_group" && t$13.value.group.group.open !== null && t$13.value.group.group.close !== null;
}
function me$2(t$13) {
	var e$4;
	return ((e$4 = t$13.raws) == null ? void 0 : e$4.before) === "";
}
function Dt$2(t$13) {
	var e$4, s$8;
	return t$13.type === "value-comma_group" && ((s$8 = (e$4 = t$13.groups) == null ? void 0 : e$4[1]) == null ? void 0 : s$8.type) === "value-colon";
}
function Jr$2(t$13) {
	var e$4;
	return t$13.type === "value-paren_group" && ((e$4 = t$13.groups) == null ? void 0 : e$4[0]) && Dt$2(t$13.groups[0]);
}
function es(t$13, e$4) {
	var i$18;
	if (e$4.parser !== "scss") return !1;
	let { node: s$8 } = t$13;
	if (s$8.groups.length === 0) return !1;
	let r$12 = t$13.grandparent;
	if (!Jr$2(s$8) && !(r$12 && Jr$2(r$12))) return !1;
	let n$8 = t$13.findAncestor((o$9) => o$9.type === "css-decl");
	return !!((i$18 = n$8 == null ? void 0 : n$8.prop) != null && i$18.startsWith("$") || Jr$2(r$12) || r$12.type === "value-func");
}
function Pe$2(t$13) {
	return t$13.type === "value-comment" && t$13.inline;
}
function Mt$1(t$13) {
	return t$13.type === "value-word" && t$13.value === "#";
}
function ts(t$13) {
	return t$13.type === "value-word" && t$13.value === "{";
}
function Bt$1(t$13) {
	return t$13.type === "value-word" && t$13.value === "}";
}
function st$2(t$13) {
	return ["value-word", "value-atword"].includes(t$13.type);
}
function nt$2(t$13) {
	return (t$13 == null ? void 0 : t$13.type) === "value-colon";
}
function ci$1(t$13, e$4) {
	if (!Dt$2(e$4)) return !1;
	let { groups: s$8 } = e$4, r$12 = s$8.indexOf(t$13);
	return r$12 === -1 ? !1 : nt$2(s$8[r$12 + 1]);
}
function fi$2(t$13) {
	return t$13.value && [
		"not",
		"and",
		"or"
	].includes(t$13.value.toLowerCase());
}
function pi$1(t$13) {
	return t$13.type !== "value-func" ? !1 : sc$1.has(t$13.value.toLowerCase());
}
function Re$2(t$13) {
	return /\/\//u.test(t$13.split(/[\n\r]/u).pop());
}
function it$3(t$13) {
	return (t$13 == null ? void 0 : t$13.type) === "value-atword" && t$13.value.startsWith("prettier-placeholder-");
}
function hi$2(t$13, e$4) {
	var s$8, r$12;
	if (((s$8 = t$13.open) == null ? void 0 : s$8.value) !== "(" || ((r$12 = t$13.close) == null ? void 0 : r$12.value) !== ")" || t$13.groups.some((n$8) => n$8.type !== "value-comma_group")) return !1;
	if (e$4.type === "value-comma_group") {
		let n$8 = e$4.groups.indexOf(t$13) - 1, i$18 = e$4.groups[n$8];
		if ((i$18 == null ? void 0 : i$18.type) === "value-word" && i$18.value === "with") return !0;
	}
	return !1;
}
function ot$3(t$13) {
	var e$4, s$8;
	return t$13.type === "value-paren_group" && ((e$4 = t$13.open) == null ? void 0 : e$4.value) === "(" && ((s$8 = t$13.close) == null ? void 0 : s$8.value) === ")";
}
function oc(t$13, e$4, s$8) {
	var m$11;
	let { node: r$12 } = t$13, n$8 = t$13.parent, i$18 = t$13.grandparent, o$9 = Hn$1(t$13), u$14 = o$9 && n$8.type === "value-value" && (o$9 === "grid" || o$9.startsWith("grid-template")), a$13 = t$13.findAncestor((y$7) => y$7.type === "css-atrule"), c$3 = a$13 && rt$2(a$13, e$4), f$3 = r$12.groups.some((y$7) => Pe$2(y$7)), p$2 = t$13.map(s$8, "groups"), l$10 = [""], d$14 = Ne$1(t$13, "url"), x$3 = !1, h$3 = !1;
	for (let y$7 = 0; y$7 < r$12.groups.length; ++y$7) {
		let b$7 = r$12.groups[y$7 - 1], w$3 = r$12.groups[y$7], v$5 = r$12.groups[y$7 + 1], R$6 = r$12.groups[y$7 + 2];
		if (Pe$2(w$3) && !v$5) {
			l$10.push([l$10.pop(), un$2([" ", p$2[y$7]])]);
			continue;
		}
		if (l$10.push([l$10.pop(), p$2[y$7]]), d$14) {
			(v$5 && X$2(v$5) || X$2(w$3)) && l$10.push([l$10.pop(), " "]);
			continue;
		}
		if (nt$2(v$5) && w$3.type === "value-word" && l$10.length > 2 && r$12.groups.slice(0, y$7).every((C$3) => C$3.type === "value-comment") && !Pe$2(b$7) && (l$10[l$10.length - 2] = ae$2($(!1, l$10, -2))), he$3(t$13, "forward") && w$3.type === "value-word" && w$3.value && b$7 !== void 0 && b$7.type === "value-word" && b$7.value === "as" && v$5.type === "value-operator" && v$5.value === "*" || he$3(t$13, "utility") && w$3.type === "value-word" && v$5 && v$5.type === "value-operator" && v$5.value === "*" || !v$5 || w$3.type === "value-word" && it$3(v$5) && P$2(w$3) === N$2(v$5)) continue;
		if (w$3.type === "value-string" && w$3.quoted) {
			let C$3 = w$3.value.lastIndexOf("#{"), xe$4 = w$3.value.lastIndexOf("}");
			C$3 !== -1 && xe$4 !== -1 ? x$3 = C$3 > xe$4 : C$3 !== -1 ? x$3 = !0 : xe$4 !== -1 && (x$3 = !1);
		}
		if (x$3 || nt$2(w$3) || nt$2(v$5) || w$3.type === "value-atword" && (w$3.value === "" || w$3.value.endsWith("[")) || v$5.type === "value-word" && v$5.value.startsWith("]") || w$3.value === "~" || w$3.type !== "value-string" && w$3.value && w$3.value.includes("\\") && v$5 && v$5.type !== "value-comment" || b$7 != null && b$7.value && b$7.value.indexOf("\\") === b$7.value.length - 1 && w$3.type === "value-operator" && w$3.value === "/" || w$3.value === "\\" || ai$1(w$3, v$5) || Mt$1(w$3) || ts(w$3) || Bt$1(v$5) || ts(v$5) && me$2(v$5) || Bt$1(w$3) && me$2(v$5) || w$3.value === "--" && Mt$1(v$5)) continue;
		let F$4 = qt$1(w$3), Q$4 = qt$1(v$5);
		if ((F$4 && Mt$1(v$5) || Q$4 && Bt$1(w$3)) && me$2(v$5) || !b$7 && tt$2(w$3) || Ne$1(t$13, "calc") && (X$2(w$3) || X$2(v$5) || de$2(w$3) || de$2(v$5)) && me$2(v$5)) continue;
		let W$2 = (X$2(w$3) || de$2(w$3)) && y$7 === 0 && (v$5.type === "value-number" || v$5.isHex) && i$18 && pi$1(i$18) && !me$2(v$5), T$9 = (R$6 == null ? void 0 : R$6.type) === "value-func" || R$6 && st$2(R$6) || w$3.type === "value-func" || st$2(w$3), O$3 = v$5.type === "value-func" || st$2(v$5) || (b$7 == null ? void 0 : b$7.type) === "value-func" || b$7 && st$2(b$7);
		if (e$4.parser === "scss" && F$4 && w$3.value === "-" && v$5.type === "value-func" && P$2(w$3) !== N$2(v$5)) {
			l$10.push([l$10.pop(), " "]);
			continue;
		}
		if (!(!(It$2(v$5) || It$2(w$3)) && !Ne$1(t$13, "calc") && !W$2 && (tt$2(v$5) && !T$9 || tt$2(w$3) && !O$3 || X$2(v$5) && !T$9 || X$2(w$3) && !O$3 || de$2(v$5) || de$2(w$3)) && (me$2(v$5) || F$4 && (!b$7 || b$7 && qt$1(b$7)))) && !((e$4.parser === "scss" || e$4.parser === "less") && F$4 && w$3.value === "-" && ot$3(v$5) && P$2(w$3) === N$2(v$5.open) && v$5.open.value === "(")) {
			if (Pe$2(w$3)) {
				if (n$8.type === "value-paren_group") {
					l$10.push(ae$2(S$1), "");
					continue;
				}
				l$10.push(S$1, "");
				continue;
			}
			if (c$3 && (ni$2(v$5) || ii$1(v$5) || ri$2(v$5) || si$1(w$3) || ti$2(w$3))) {
				l$10.push([l$10.pop(), " "]);
				continue;
			}
			if (a$13 && a$13.name.toLowerCase() === "namespace") {
				l$10.push([l$10.pop(), " "]);
				continue;
			}
			if (u$14) {
				w$3.source && v$5.source && w$3.source.start.line !== v$5.source.start.line ? (l$10.push(S$1, ""), h$3 = !0) : l$10.push([l$10.pop(), " "]);
				continue;
			}
			if (Q$4) {
				l$10.push([l$10.pop(), " "]);
				continue;
			}
			if ((v$5 == null ? void 0 : v$5.value) !== "..." && !(it$3(w$3) && it$3(v$5) && P$2(w$3) === N$2(v$5))) {
				if (it$3(w$3) && ot$3(v$5) && P$2(w$3) === N$2(v$5.open)) {
					l$10.push(D$2, "");
					continue;
				}
				if (w$3.value === "with" && ot$3(v$5)) {
					l$10 = [[Te$2(l$10), " "]];
					continue;
				}
				(m$11 = w$3.value) != null && m$11.endsWith("#") && v$5.value === "{" && ot$3(v$5.group) || Pe$2(v$5) && !R$6 || l$10.push(A$2, "");
			}
		}
	}
	return f$3 && l$10.push([l$10.pop(), Xe$2]), h$3 && l$10.unshift("", S$1), c$3 ? L$1(q$2(l$10)) : Xn$1(t$13) ? L$1(Te$2(l$10)) : L$1(q$2(Te$2(l$10)));
}
var di$2 = oc;
function ac(t$13) {
	return t$13.length === 1 ? t$13 : t$13.toLowerCase().replace(/^([+-]?[\d.]+e)(?:\+|(-))?0*(?=\d)/u, "$1$2").replace(/^([+-]?[\d.]+)e[+-]?0+$/u, "$1").replace(/^([+-])?\./u, "$10.").replace(/(\.\d+?)0+(?=e|$)/u, "$1").replace(/\.(?=e|$)/u, "");
}
var mi$2 = ac;
var Ut$1 = new Map([
	["em", "em"],
	["rem", "rem"],
	["ex", "ex"],
	["rex", "rex"],
	["cap", "cap"],
	["rcap", "rcap"],
	["ch", "ch"],
	["rch", "rch"],
	["ic", "ic"],
	["ric", "ric"],
	["lh", "lh"],
	["rlh", "rlh"],
	["vw", "vw"],
	["svw", "svw"],
	["lvw", "lvw"],
	["dvw", "dvw"],
	["vh", "vh"],
	["svh", "svh"],
	["lvh", "lvh"],
	["dvh", "dvh"],
	["vi", "vi"],
	["svi", "svi"],
	["lvi", "lvi"],
	["dvi", "dvi"],
	["vb", "vb"],
	["svb", "svb"],
	["lvb", "lvb"],
	["dvb", "dvb"],
	["vmin", "vmin"],
	["svmin", "svmin"],
	["lvmin", "lvmin"],
	["dvmin", "dvmin"],
	["vmax", "vmax"],
	["svmax", "svmax"],
	["lvmax", "lvmax"],
	["dvmax", "dvmax"],
	["cm", "cm"],
	["mm", "mm"],
	["q", "Q"],
	["in", "in"],
	["pt", "pt"],
	["pc", "pc"],
	["px", "px"],
	["deg", "deg"],
	["grad", "grad"],
	["rad", "rad"],
	["turn", "turn"],
	["s", "s"],
	["ms", "ms"],
	["hz", "Hz"],
	["khz", "kHz"],
	["dpi", "dpi"],
	["dpcm", "dpcm"],
	["dppx", "dppx"],
	["x", "x"],
	["cqw", "cqw"],
	["cqh", "cqh"],
	["cqi", "cqi"],
	["cqb", "cqb"],
	["cqmin", "cqmin"],
	["cqmax", "cqmax"],
	["fr", "fr"]
]);
function rs(t$13) {
	let e$4 = t$13.toLowerCase();
	return Ut$1.has(e$4) ? Ut$1.get(e$4) : t$13;
}
var yi$2 = /(["'])(?:(?!\1)[^\\]|\\.)*\1/gsu, uc = /(?:\d*\.\d+|\d+\.?)(?:e[+-]?\d+)?/giu, lc = /[a-z]+/giu, cc = /[$@]?[_a-z\u0080-\uFFFF][\w\u0080-\uFFFF-]*/giu, fc = new RegExp(yi$2.source + `|(${cc.source})?(${uc.source})(${lc.source})?`, "giu");
function Y$1(t$13, e$4) {
	return E(!1, t$13, yi$2, (s$8) => At$3(s$8, e$4));
}
function gi$2(t$13, e$4) {
	let s$8 = e$4.singleQuote ? "'" : "\"";
	return t$13.includes("\"") || t$13.includes("'") ? t$13 : s$8 + t$13 + s$8;
}
function ye$1(t$13) {
	return E(!1, t$13, fc, (e$4, s$8, r$12, n$8, i$18) => !r$12 && n$8 && (i$18 ?? (i$18 = ""), i$18 = i$18.toLowerCase(), !i$18 || i$18 === "n" || Ut$1.has(i$18)) ? ss(n$8) + (i$18 ? rs(i$18) : "") : e$4);
}
function ss(t$13) {
	return mi$2(t$13).replace(/\.0(?=$|e)/u, "");
}
function wi$2(t$13) {
	return t$13.trailingComma === "es5" || t$13.trailingComma === "all";
}
function pc(t$13, e$4, s$8) {
	let r$12 = !!(s$8 != null && s$8.backwards);
	if (e$4 === !1) return !1;
	let n$8 = t$13.charAt(e$4);
	if (r$12) {
		if (t$13.charAt(e$4 - 1) === "\r" && n$8 === `
`) return e$4 - 2;
		if (n$8 === `
` || n$8 === "\r" || n$8 === "\u2028" || n$8 === "\u2029") return e$4 - 1;
	} else {
		if (n$8 === "\r" && t$13.charAt(e$4 + 1) === `
`) return e$4 + 2;
		if (n$8 === `
` || n$8 === "\r" || n$8 === "\u2028" || n$8 === "\u2029") return e$4 + 1;
	}
	return e$4;
}
var Ft = pc;
function hc(t$13, e$4, s$8 = {}) {
	let r$12 = Pt$2(t$13, s$8.backwards ? e$4 - 1 : e$4, s$8), n$8 = Ft(t$13, r$12, s$8);
	return r$12 !== n$8;
}
var $t$1 = hc;
function dc(t$13, e$4) {
	if (e$4 === !1) return !1;
	if (t$13.charAt(e$4) === "/" && t$13.charAt(e$4 + 1) === "*") {
		for (let s$8 = e$4 + 2; s$8 < t$13.length; ++s$8) if (t$13.charAt(s$8) === "*" && t$13.charAt(s$8 + 1) === "/") return s$8 + 2;
	}
	return e$4;
}
var vi$2 = dc;
function mc(t$13, e$4) {
	return e$4 === !1 ? !1 : t$13.charAt(e$4) === "/" && t$13.charAt(e$4 + 1) === "/" ? Rt$2(t$13, e$4) : e$4;
}
var xi$2 = mc;
function yc(t$13, e$4) {
	let s$8 = null, r$12 = e$4;
	for (; r$12 !== s$8;) s$8 = r$12, r$12 = En$2(t$13, r$12), r$12 = vi$2(t$13, r$12), r$12 = Pt$2(t$13, r$12);
	return r$12 = xi$2(t$13, r$12), r$12 = Ft(t$13, r$12), r$12 !== !1 && $t$1(t$13, r$12);
}
var Wt$1 = yc;
function gc({ node: t$13, parent: e$4 }, s$8) {
	return !!(t$13.source && s$8.originalText.slice(N$2(t$13), N$2(e$4.close)).trimEnd().endsWith(","));
}
function wc(t$13, e$4) {
	return Zn$1(t$13.grandparent) && gc(t$13, e$4) ? "," : t$13.node.type !== "value-comment" && !(t$13.node.type === "value-comma_group" && t$13.node.groups.every((s$8) => s$8.type === "value-comment")) && wi$2(e$4) && t$13.callParent(() => es(t$13, e$4)) ? Ot$2(",") : "";
}
function bi$2(t$13, e$4, s$8) {
	let { node: r$12, parent: n$8 } = t$13, i$18 = t$13.map(({ node: d$14 }) => typeof d$14 == "string" ? d$14 : s$8(), "groups");
	if (n$8 && Jn$1(n$8) && (r$12.groups.length === 1 || r$12.groups.length > 0 && r$12.groups[0].type === "value-comma_group" && r$12.groups[0].groups.length > 0 && r$12.groups[0].groups[0].type === "value-word" && r$12.groups[0].groups[0].value.startsWith("data:"))) return [
		r$12.open ? s$8("open") : "",
		G$1(",", i$18),
		r$12.close ? s$8("close") : ""
	];
	if (!r$12.open) {
		let d$14 = ns$1(t$13);
		Qe$1(i$18);
		let x$3 = xc(G$1(",", i$18), 2), h$3 = G$1(d$14 ? S$1 : A$2, x$3);
		return q$2(d$14 ? [S$1, h$3] : L$1([vc(t$13) ? D$2 : "", Te$2(h$3)]));
	}
	let o$9 = t$13.map(({ node: d$14, isLast: x$3, index: h$3 }) => {
		var b$7;
		let m$11 = i$18[h$3];
		Dt$2(d$14) && d$14.type === "value-comma_group" && d$14.groups && d$14.groups[0].type !== "value-paren_group" && ((b$7 = d$14.groups[2]) == null ? void 0 : b$7.type) === "value-paren_group" && j$2(m$11) === se$1 && j$2(m$11.contents) === re$1 && j$2(m$11.contents.contents) === ne$2 && (m$11 = L$1(ae$2(m$11)));
		let y$7 = [m$11, x$3 ? wc(t$13, e$4) : ","];
		if (!x$3 && d$14.type === "value-comma_group" && ue$1(d$14.groups)) {
			let w$3 = $(!1, d$14.groups, -1);
			!w$3.source && w$3.close && (w$3 = w$3.close), w$3.source && Wt$1(e$4.originalText, P$2(w$3)) && y$7.push(S$1);
		}
		return y$7;
	}, "groups"), u$14 = ci$1(r$12, n$8), a$13 = hi$2(r$12, n$8), c$3 = es(t$13, e$4), f$3 = a$13 || c$3 && !u$14, p$2 = a$13 || u$14, l$10 = L$1([
		r$12.open ? s$8("open") : "",
		q$2([D$2, G$1(A$2, o$9)]),
		D$2,
		r$12.close ? s$8("close") : ""
	], { shouldBreak: f$3 });
	return p$2 ? ae$2(l$10) : l$10;
}
function ns$1(t$13) {
	return t$13.match((e$4) => e$4.type === "value-paren_group" && !e$4.open && e$4.groups.some((s$8) => s$8.type === "value-comma_group"), (e$4, s$8) => s$8 === "group" && e$4.type === "value-value", (e$4, s$8) => s$8 === "group" && e$4.type === "value-root", (e$4, s$8) => s$8 === "value" && (e$4.type === "css-decl" && !e$4.prop.startsWith("--") || e$4.type === "css-atrule" && e$4.variable));
}
function vc(t$13) {
	return t$13.match((e$4) => e$4.type === "value-paren_group" && !e$4.open, (e$4, s$8) => s$8 === "group" && e$4.type === "value-value", (e$4, s$8) => s$8 === "group" && e$4.type === "value-root", (e$4, s$8) => s$8 === "value" && e$4.type === "css-decl");
}
function xc(t$13, e$4) {
	let s$8 = [];
	for (let r$12 = 0; r$12 < t$13.length; r$12 += e$4) s$8.push(t$13.slice(r$12, r$12 + e$4));
	return s$8;
}
function bc(t$13, e$4, s$8) {
	let r$12 = [];
	return t$13.each(() => {
		let { node: n$8, previous: i$18 } = t$13;
		if ((i$18 == null ? void 0 : i$18.type) === "css-comment" && i$18.text.trim() === "prettier-ignore" ? r$12.push(e$4.originalText.slice(N$2(n$8), P$2(n$8))) : r$12.push(s$8()), t$13.isLast) return;
		let { next: o$9 } = t$13;
		o$9.type === "css-comment" && !$t$1(e$4.originalText, N$2(o$9), { backwards: !0 }) && !Oe$1(n$8) || o$9.type === "css-atrule" && o$9.name === "else" && n$8.type !== "css-comment" ? r$12.push(" ") : (r$12.push(e$4.__isHTMLStyleAttribute ? A$2 : S$1), Wt$1(e$4.originalText, P$2(n$8)) && !Oe$1(n$8) && r$12.push(S$1));
	}, "nodes"), r$12;
}
var Ie$3 = bc;
function _c(t$13, e$4, s$8) {
	var n$8, i$18, o$9, u$14, a$13, c$3;
	let { node: r$12 } = t$13;
	switch (r$12.type) {
		case "front-matter": return [r$12.raw, S$1];
		case "css-root": {
			let f$3 = Ie$3(t$13, e$4, s$8), p$2 = r$12.raws.after.trim();
			return p$2.startsWith(";") && (p$2 = p$2.slice(1).trim()), [
				r$12.frontMatter ? [s$8("frontMatter"), S$1] : "",
				f$3,
				p$2 ? ` ${p$2}` : "",
				r$12.nodes.length > 0 ? S$1 : ""
			];
		}
		case "css-comment": {
			let f$3 = r$12.inline || r$12.raws.inline, p$2 = e$4.originalText.slice(N$2(r$12), P$2(r$12));
			return f$3 ? p$2.trimEnd() : p$2;
		}
		case "css-rule": return [
			s$8("selector"),
			r$12.important ? " !important" : "",
			r$12.nodes ? [
				((n$8 = r$12.selector) == null ? void 0 : n$8.type) === "selector-unknown" && Re$2(r$12.selector.value) ? A$2 : r$12.selector ? " " : "",
				"{",
				r$12.nodes.length > 0 ? q$2([S$1, Ie$3(t$13, e$4, s$8)]) : "",
				S$1,
				"}",
				ei$3(r$12) ? ";" : ""
			] : ";"
		];
		case "css-decl": {
			let f$3 = t$13.parent, { between: p$2 } = r$12.raws, l$10 = p$2.trim(), d$14 = l$10 === ":", x$3 = typeof r$12.value == "string" && /^ *$/u.test(r$12.value), h$3 = typeof r$12.value == "string" ? r$12.value : s$8("value");
			return h$3 = ui$2(r$12) ? sn$2(h$3) : h$3, !d$14 && Re$2(l$10) && !((o$9 = (i$18 = r$12.value) == null ? void 0 : i$18.group) != null && o$9.group && t$13.call(() => ns$1(t$13), "value", "group", "group")) && (h$3 = q$2([S$1, ae$2(h$3)])), [
				E(!1, r$12.raws.before, /[\s;]/gu, ""),
				f$3.type === "css-atrule" && f$3.variable || Qn$1(t$13) ? r$12.prop : Ae$2(r$12.prop),
				l$10.startsWith("//") ? " " : "",
				l$10,
				r$12.extend || x$3 ? "" : " ",
				e$4.parser === "less" && r$12.extend && r$12.selector ? [
					"extend(",
					s$8("selector"),
					")"
				] : "",
				h$3,
				r$12.raws.important ? r$12.raws.important.replace(/\s*!\s*important/iu, " !important") : r$12.important ? " !important" : "",
				r$12.raws.scssDefault ? r$12.raws.scssDefault.replace(/\s*!default/iu, " !default") : r$12.scssDefault ? " !default" : "",
				r$12.raws.scssGlobal ? r$12.raws.scssGlobal.replace(/\s*!global/iu, " !global") : r$12.scssGlobal ? " !global" : "",
				r$12.nodes ? [
					" {",
					q$2([D$2, Ie$3(t$13, e$4, s$8)]),
					D$2,
					"}"
				] : oi$1(r$12) && !f$3.raws.semicolon && e$4.originalText[P$2(r$12) - 1] !== ";" ? "" : e$4.__isHTMLStyleAttribute && t$13.isLast ? Ot$2(";") : ";"
			];
		}
		case "css-atrule": {
			let f$3 = t$13.parent, p$2 = Lt$2(r$12) && !f$3.raws.semicolon && e$4.originalText[P$2(r$12) - 1] !== ";";
			if (e$4.parser === "less") {
				if (r$12.mixin) return [
					s$8("selector"),
					r$12.important ? " !important" : "",
					p$2 ? "" : ";"
				];
				if (r$12.function) return [
					r$12.name,
					typeof r$12.params == "string" ? r$12.params : s$8("params"),
					p$2 ? "" : ";"
				];
				if (r$12.variable) return [
					"@",
					r$12.name,
					": ",
					r$12.value ? s$8("value") : "",
					r$12.raws.between.trim() ? r$12.raws.between.trim() + " " : "",
					r$12.nodes ? [
						"{",
						q$2([r$12.nodes.length > 0 ? D$2 : "", Ie$3(t$13, e$4, s$8)]),
						D$2,
						"}"
					] : "",
					p$2 ? "" : ";"
				];
			}
			let l$10 = r$12.name === "import" && ((u$14 = r$12.params) == null ? void 0 : u$14.type) === "value-unknown" && r$12.params.value.endsWith(";");
			return [
				"@",
				Zr$2(r$12) || r$12.name.endsWith(":") || Lt$2(r$12) ? r$12.name : Ae$2(r$12.name),
				r$12.params ? [Zr$2(r$12) ? "" : Lt$2(r$12) ? r$12.raws.afterName === "" ? "" : r$12.name.endsWith(":") ? " " : /^\s*\n\s*\n/u.test(r$12.raws.afterName) ? [S$1, S$1] : /^\s*\n/u.test(r$12.raws.afterName) ? S$1 : " " : " ", typeof r$12.params == "string" ? r$12.params : s$8("params")] : "",
				r$12.selector ? q$2([" ", s$8("selector")]) : "",
				r$12.value ? L$1([
					" ",
					s$8("value"),
					rt$2(r$12, e$4) ? li$1(r$12) ? " " : A$2 : ""
				]) : r$12.name === "else" ? " " : "",
				r$12.nodes ? [
					rt$2(r$12, e$4) ? "" : r$12.selector && !r$12.selector.nodes && typeof r$12.selector.value == "string" && Re$2(r$12.selector.value) || !r$12.selector && typeof r$12.params == "string" && Re$2(r$12.params) ? A$2 : " ",
					"{",
					q$2([r$12.nodes.length > 0 ? D$2 : "", Ie$3(t$13, e$4, s$8)]),
					D$2,
					"}"
				] : p$2 || l$10 ? "" : ";"
			];
		}
		case "media-query-list": {
			let f$3 = [];
			return t$13.each(({ node: p$2 }) => {
				p$2.type === "media-query" && p$2.value === "" || f$3.push(s$8());
			}, "nodes"), L$1(q$2(G$1(A$2, f$3)));
		}
		case "media-query": return [G$1(" ", t$13.map(s$8, "nodes")), t$13.isLast ? "" : ","];
		case "media-type": return ye$1(Y$1(r$12.value, e$4));
		case "media-feature-expression": return r$12.nodes ? [
			"(",
			...t$13.map(s$8, "nodes"),
			")"
		] : r$12.value;
		case "media-feature": return Ae$2(Y$1(E(!1, r$12.value, / +/gu, " "), e$4));
		case "media-colon": return [r$12.value, " "];
		case "media-value": return ye$1(Y$1(r$12.value, e$4));
		case "media-keyword": return Y$1(r$12.value, e$4);
		case "media-url": return Y$1(E(!1, E(!1, r$12.value, /^url\(\s+/giu, "url("), /\s+\)$/gu, ")"), e$4);
		case "media-unknown": return r$12.value;
		case "selector-root": return L$1([he$3(t$13, "custom-selector") ? [t$13.findAncestor((f$3) => f$3.type === "css-atrule").customSelector, A$2] : "", G$1([",", he$3(t$13, [
			"extend",
			"custom-selector",
			"nest"
		]) ? A$2 : S$1], t$13.map(s$8, "nodes"))]);
		case "selector-selector": {
			let f$3 = r$12.nodes.length > 2;
			return L$1((f$3 ? q$2 : (p$2) => p$2)(t$13.map(s$8, "nodes")));
		}
		case "selector-comment": return r$12.value;
		case "selector-string": return Y$1(r$12.value, e$4);
		case "selector-tag": return [r$12.namespace ? [r$12.namespace === !0 ? "" : r$12.namespace.trim(), "|"] : "", ((a$13 = t$13.previous) == null ? void 0 : a$13.type) === "selector-nesting" ? r$12.value : ye$1(Kn$1(t$13, r$12.value) ? r$12.value.toLowerCase() : r$12.value)];
		case "selector-id": return ["#", r$12.value];
		case "selector-class": return [".", ye$1(Y$1(r$12.value, e$4))];
		case "selector-attribute": return [
			"[",
			r$12.namespace ? [r$12.namespace === !0 ? "" : r$12.namespace.trim(), "|"] : "",
			r$12.attribute.trim(),
			r$12.operator ?? "",
			r$12.value ? gi$2(Y$1(r$12.value.trim(), e$4), e$4) : "",
			r$12.insensitive ? " i" : "",
			"]"
		];
		case "selector-combinator": {
			if (r$12.value === "+" || r$12.value === ">" || r$12.value === "~" || r$12.value === ">>>") {
				let l$10 = t$13.parent;
				return [
					l$10.type === "selector-selector" && l$10.nodes[0] === r$12 ? "" : A$2,
					r$12.value,
					t$13.isLast ? "" : " "
				];
			}
			let f$3 = r$12.value.trim().startsWith("(") ? A$2 : "", p$2 = ye$1(Y$1(r$12.value.trim(), e$4)) || A$2;
			return [f$3, p$2];
		}
		case "selector-universal": return [r$12.namespace ? [r$12.namespace === !0 ? "" : r$12.namespace.trim(), "|"] : "", r$12.value];
		case "selector-pseudo": return [Ae$2(r$12.value), ue$1(r$12.nodes) ? L$1([
			"(",
			q$2([D$2, G$1([",", A$2], t$13.map(s$8, "nodes"))]),
			D$2,
			")"
		]) : ""];
		case "selector-nesting": return r$12.value;
		case "selector-unknown": {
			let f$3 = t$13.findAncestor((d$14) => d$14.type === "css-rule");
			if (f$3 != null && f$3.isSCSSNesterProperty) return ye$1(Y$1(Ae$2(r$12.value), e$4));
			let p$2 = t$13.parent;
			if ((c$3 = p$2.raws) != null && c$3.selector) {
				let d$14 = N$2(p$2), x$3 = d$14 + p$2.raws.selector.length;
				return e$4.originalText.slice(d$14, x$3).trim();
			}
			let l$10 = t$13.grandparent;
			if (p$2.type === "value-paren_group" && (l$10 == null ? void 0 : l$10.type) === "value-func" && l$10.value === "selector") {
				let d$14 = P$2(p$2.open) + 1, x$3 = N$2(p$2.close), h$3 = e$4.originalText.slice(d$14, x$3).trim();
				return Re$2(h$3) ? [Xe$2, h$3] : h$3;
			}
			return r$12.value;
		}
		case "value-value":
		case "value-root": return s$8("group");
		case "value-comment": return e$4.originalText.slice(N$2(r$12), P$2(r$12));
		case "value-comma_group": return di$2(t$13, e$4, s$8);
		case "value-paren_group": return bi$2(t$13, e$4, s$8);
		case "value-func": return [
			r$12.value,
			he$3(t$13, "supports") && fi$2(r$12) ? " " : "",
			s$8("group")
		];
		case "value-paren": return r$12.value;
		case "value-number": return [ss(r$12.value), rs(r$12.unit)];
		case "value-operator": return r$12.value;
		case "value-word": return r$12.isColor && r$12.isHex || jn$1(r$12.value) ? r$12.value.toLowerCase() : r$12.value;
		case "value-colon": {
			let { previous: f$3 } = t$13;
			return L$1([r$12.value, typeof (f$3 == null ? void 0 : f$3.value) == "string" && f$3.value.endsWith("\\") || Ne$1(t$13, "url") ? "" : A$2]);
		}
		case "value-string": return At$3(r$12.raws.quote + r$12.value + r$12.raws.quote, e$4);
		case "value-atword": return ["@", r$12.value];
		case "value-unicode-range": return r$12.value;
		case "value-unknown": return r$12.value;
		case "value-comma":
		default: throw new dn$2(r$12, "PostCSS");
	}
}
var Ec = {
	print: _c,
	embed: vn$1,
	insertPragma: zn$2,
	massageAstNode: yn$2,
	getVisitorKeys: _n$1
}, _i$1 = Ec;
var Ei$1 = [
	{
		name: "CSS",
		type: "markup",
		extensions: [".css", ".wxss"],
		tmScope: "source.css",
		aceMode: "css",
		codemirrorMode: "css",
		codemirrorMimeType: "text/css",
		parsers: ["css"],
		vscodeLanguageIds: ["css"],
		linguistLanguageId: 50
	},
	{
		name: "PostCSS",
		type: "markup",
		extensions: [".pcss", ".postcss"],
		tmScope: "source.postcss",
		aceMode: "text",
		group: "CSS",
		parsers: ["css"],
		vscodeLanguageIds: ["postcss"],
		linguistLanguageId: 262764437
	},
	{
		name: "Less",
		type: "markup",
		extensions: [".less"],
		tmScope: "source.css.less",
		aceMode: "less",
		aliases: ["less-css"],
		codemirrorMode: "css",
		codemirrorMimeType: "text/css",
		parsers: ["less"],
		vscodeLanguageIds: ["less"],
		linguistLanguageId: 198
	},
	{
		name: "SCSS",
		type: "markup",
		extensions: [".scss"],
		tmScope: "source.css.scss",
		aceMode: "scss",
		codemirrorMode: "css",
		codemirrorMimeType: "text/x-scss",
		parsers: ["scss"],
		vscodeLanguageIds: ["scss"],
		linguistLanguageId: 329
	}
];
var kc = { singleQuote: {
	bracketSpacing: {
		category: "Common",
		type: "boolean",
		default: !0,
		description: "Print spaces between brackets.",
		oppositeDescription: "Do not print spaces between brackets."
	},
	objectWrap: {
		category: "Common",
		type: "choice",
		default: "preserve",
		description: "How to wrap object literals.",
		choices: [{
			value: "preserve",
			description: "Keep as multi-line, if there is a newline between the opening brace and first property."
		}, {
			value: "collapse",
			description: "Fit to a single line when possible."
		}]
	},
	singleQuote: {
		category: "Common",
		type: "boolean",
		default: !1,
		description: "Use single quotes instead of double quotes."
	},
	proseWrap: {
		category: "Common",
		type: "choice",
		default: "preserve",
		description: "How to wrap prose.",
		choices: [
			{
				value: "always",
				description: "Wrap prose if it exceeds the print width."
			},
			{
				value: "never",
				description: "Do not wrap prose."
			},
			{
				value: "preserve",
				description: "Wrap prose as-is."
			}
		]
	},
	bracketSameLine: {
		category: "Common",
		type: "boolean",
		default: !1,
		description: "Put > of opening tags on the last line instead of on a new line."
	},
	singleAttributePerLine: {
		category: "Common",
		type: "boolean",
		default: !1,
		description: "Enforce single attribute per line in HTML, Vue and JSX."
	}
}.singleQuote }, Si$2 = kc;
var Zs$2 = {};
rn$3(Zs$2, {
	css: () => My$1,
	less: () => By$1,
	scss: () => Uy$1
});
var hl$1 = be$1(gt$2(), 1), dl$1 = be$1(Io$1(), 1), ml$1 = be$1(ha(), 1);
function cp(t$13, e$4) {
	let s$8 = /* @__PURE__ */ new SyntaxError(t$13 + " (" + e$4.loc.start.line + ":" + e$4.loc.start.column + ")");
	return Object.assign(s$8, e$4);
}
var da = cp;
var ba = be$1(xa(), 1);
function Z$2(t$13, e$4, s$8) {
	if (t$13 && typeof t$13 == "object") {
		delete t$13.parent;
		for (let r$12 in t$13) Z$2(t$13[r$12], e$4, s$8), r$12 === "type" && typeof t$13[r$12] == "string" && !t$13[r$12].startsWith(e$4) && (!s$8 || !s$8.test(t$13[r$12])) && (t$13[r$12] = e$4 + t$13[r$12]);
	}
	return t$13;
}
function Ms(t$13) {
	if (t$13 && typeof t$13 == "object") {
		delete t$13.parent;
		for (let e$4 in t$13) Ms(t$13[e$4]);
		!Array.isArray(t$13) && t$13.value && !t$13.type && (t$13.type = "unknown");
	}
	return t$13;
}
var _p = ba.default.default;
function Ep$1(t$13) {
	let e$4;
	try {
		e$4 = _p(t$13);
	} catch {
		return {
			type: "selector-unknown",
			value: t$13
		};
	}
	return Z$2(Ms(e$4), "media-");
}
var _a = Ep$1;
var yu$1 = be$1(mu$1(), 1);
function Mm$1(t$13) {
	if (/\/\/|\/\*/u.test(t$13)) return {
		type: "selector-unknown",
		value: t$13.trim()
	};
	let e$4;
	try {
		new yu$1.default((s$8) => {
			e$4 = s$8;
		}).process(t$13);
	} catch {
		return {
			type: "selector-unknown",
			value: t$13
		};
	}
	return Z$2(e$4, "selector-");
}
var te$2 = Mm$1;
var ll$1 = be$1(sl$1(), 1);
var Sy$1 = (t$13) => {
	for (; t$13.parent;) t$13 = t$13.parent;
	return t$13;
}, Fr$2 = Sy$1;
function Ty$1(t$13) {
	return Fr$2(t$13).text.slice(t$13.group.open.sourceIndex + 1, t$13.group.close.sourceIndex).trim();
}
var nl$1 = Ty$1;
function Oy$1(t$13) {
	if (ue$1(t$13)) {
		for (let e$4 = t$13.length - 1; e$4 > 0; e$4--) if (t$13[e$4].type === "word" && t$13[e$4].value === "{" && t$13[e$4 - 1].type === "word" && t$13[e$4 - 1].value.endsWith("#")) return !0;
	}
	return !1;
}
var il$1 = Oy$1;
function Cy$1(t$13) {
	return t$13.some((e$4) => e$4.type === "string" || e$4.type === "func" && !e$4.value.endsWith("\\"));
}
var ol$1 = Cy$1;
function Ay$1(t$13, e$4) {
	return !!(e$4.parser === "scss" && (t$13 == null ? void 0 : t$13.type) === "word" && t$13.value.startsWith("$"));
}
var al$1 = Ay$1;
var ul$1 = (t$13) => t$13.type === "paren" && t$13.value === ")";
function Ny$1(t$13, e$4) {
	var a$13;
	let { nodes: s$8 } = t$13, r$12 = {
		open: null,
		close: null,
		groups: [],
		type: "paren_group"
	}, n$8 = [r$12], i$18 = r$12, o$9 = {
		groups: [],
		type: "comma_group"
	}, u$14 = [o$9];
	for (let c$3 = 0; c$3 < s$8.length; ++c$3) {
		let f$3 = s$8[c$3];
		if (e$4.parser === "scss" && f$3.type === "number" && f$3.unit === ".." && f$3.value.endsWith(".") && (f$3.value = f$3.value.slice(0, -1), f$3.unit = "..."), f$3.type === "func" && f$3.value === "selector" && (f$3.group.groups = [te$2(Fr$2(t$13).text.slice(f$3.group.open.sourceIndex + 1, f$3.group.close.sourceIndex))]), f$3.type === "func" && f$3.value === "url") {
			let p$2 = ((a$13 = f$3.group) == null ? void 0 : a$13.groups) ?? [], l$10 = [];
			for (let d$14 = 0; d$14 < p$2.length; d$14++) {
				let x$3 = p$2[d$14];
				x$3.type === "comma_group" ? l$10 = [...l$10, ...x$3.groups] : l$10.push(x$3);
			}
			(il$1(l$10) || !ol$1(l$10) && !al$1(l$10[0], e$4)) && (f$3.group.groups = [nl$1(f$3)]);
		}
		if (f$3.type === "paren" && f$3.value === "(") r$12 = {
			open: f$3,
			close: null,
			groups: [],
			type: "paren_group"
		}, n$8.push(r$12), o$9 = {
			groups: [],
			type: "comma_group"
		}, u$14.push(o$9);
		else if (ul$1(f$3)) {
			if (o$9.groups.length > 0 && r$12.groups.push(o$9), r$12.close = f$3, u$14.length === 1) throw new Error("Unbalanced parenthesis");
			u$14.pop(), o$9 = $(!1, u$14, -1), o$9.groups.push(r$12), n$8.pop(), r$12 = $(!1, n$8, -1);
		} else if (f$3.type === "comma") {
			if (c$3 === s$8.length - 3 && s$8[c$3 + 1].type === "comment" && ul$1(s$8[c$3 + 2])) continue;
			r$12.groups.push(o$9), o$9 = {
				groups: [],
				type: "comma_group"
			}, u$14[u$14.length - 1] = o$9;
		} else o$9.groups.push(f$3);
	}
	return o$9.groups.length > 0 && r$12.groups.push(o$9), i$18;
}
function $r$3(t$13) {
	return t$13.type === "paren_group" && !t$13.open && !t$13.close && t$13.groups.length === 1 || t$13.type === "comma_group" && t$13.groups.length === 1 ? $r$3(t$13.groups[0]) : t$13.type === "paren_group" || t$13.type === "comma_group" ? {
		...t$13,
		groups: t$13.groups.map($r$3)
	} : t$13;
}
function cl$1(t$13, e$4) {
	if (t$13 && typeof t$13 == "object") for (let s$8 in t$13) s$8 !== "parent" && (cl$1(t$13[s$8], e$4), s$8 === "nodes" && (t$13.group = $r$3(Ny$1(t$13, e$4)), delete t$13[s$8]));
	return t$13;
}
function Py$1(t$13, e$4) {
	if (e$4.parser === "less" && t$13.startsWith("~`")) return {
		type: "value-unknown",
		value: t$13
	};
	let s$8 = null;
	try {
		s$8 = new ll$1.default(t$13, { loose: !0 }).parse();
	} catch {
		return {
			type: "value-unknown",
			value: t$13
		};
	}
	s$8.text = t$13;
	let r$12 = cl$1(s$8, e$4);
	return Z$2(r$12, "value-", /^selector-/u);
}
var pe$2 = Py$1;
var Ry$1 = new Set([
	"import",
	"use",
	"forward"
]);
function Iy$1(t$13) {
	return Ry$1.has(t$13);
}
var fl$1 = Iy$1;
function qy$1(t$13, e$4) {
	return e$4.parser !== "scss" || !t$13.selector ? !1 : t$13.selector.replace(/\/\*.*?\*\//u, "").replace(/\/\/.*\n/u, "").trim().endsWith(":");
}
var pl$1 = qy$1;
var Ly$1 = /(\s*)(!default).*$/u, Dy$1 = /(\s*)(!global).*$/u;
function yl$1(t$13, e$4) {
	var s$8, r$12;
	if (t$13 && typeof t$13 == "object") {
		delete t$13.parent;
		for (let u$14 in t$13) yl$1(t$13[u$14], e$4);
		if (!t$13.type) return t$13;
		if (t$13.raws ?? (t$13.raws = {}), t$13.type === "css-decl" && typeof t$13.prop == "string" && t$13.prop.startsWith("--") && typeof t$13.value == "string" && t$13.value.startsWith("{")) {
			let u$14;
			if (t$13.value.trimEnd().endsWith("}")) {
				let a$13 = e$4.originalText.slice(0, t$13.source.start.offset), c$3 = "a".repeat(t$13.prop.length) + e$4.originalText.slice(t$13.source.start.offset + t$13.prop.length, t$13.source.end.offset), f$3 = E(!1, a$13, /[^\n]/gu, " ") + c$3, p$2;
				e$4.parser === "scss" ? p$2 = vl$1 : e$4.parser === "less" ? p$2 = wl$1 : p$2 = gl$1;
				let l$10;
				try {
					l$10 = p$2(f$3, { ...e$4 });
				} catch {}
				((s$8 = l$10 == null ? void 0 : l$10.nodes) == null ? void 0 : s$8.length) === 1 && l$10.nodes[0].type === "css-rule" && (u$14 = l$10.nodes[0].nodes);
			}
			return u$14 ? t$13.value = {
				type: "css-rule",
				nodes: u$14
			} : t$13.value = {
				type: "value-unknown",
				value: t$13.raws.value.raw
			}, t$13;
		}
		let n$8 = "";
		typeof t$13.selector == "string" && (n$8 = t$13.raws.selector ? t$13.raws.selector.scss ?? t$13.raws.selector.raw : t$13.selector, t$13.raws.between && t$13.raws.between.trim().length > 0 && (n$8 += t$13.raws.between), t$13.raws.selector = n$8);
		let i$18 = "";
		typeof t$13.value == "string" && (i$18 = t$13.raws.value ? t$13.raws.value.scss ?? t$13.raws.value.raw : t$13.value, t$13.raws.value = i$18.trim());
		let o$9 = "";
		if (typeof t$13.params == "string" && (o$9 = t$13.raws.params ? t$13.raws.params.scss ?? t$13.raws.params.raw : t$13.params, t$13.raws.afterName && t$13.raws.afterName.trim().length > 0 && (o$9 = t$13.raws.afterName + o$9), t$13.raws.between && t$13.raws.between.trim().length > 0 && (o$9 = o$9 + t$13.raws.between), o$9 = o$9.trim(), t$13.raws.params = o$9), n$8.trim().length > 0) return n$8.startsWith("@") && n$8.endsWith(":") ? t$13 : t$13.mixin ? (t$13.selector = pe$2(n$8, e$4), t$13) : (pl$1(t$13, e$4) && (t$13.isSCSSNesterProperty = !0), t$13.selector = te$2(n$8), t$13);
		if (i$18.trim().length > 0) {
			let u$14 = i$18.match(Ly$1);
			u$14 && (i$18 = i$18.slice(0, u$14.index), t$13.scssDefault = !0, u$14[0].trim() !== "!default" && (t$13.raws.scssDefault = u$14[0]));
			let a$13 = i$18.match(Dy$1);
			if (a$13 && (i$18 = i$18.slice(0, a$13.index), t$13.scssGlobal = !0, a$13[0].trim() !== "!global" && (t$13.raws.scssGlobal = a$13[0])), i$18.startsWith("progid:")) return {
				type: "value-unknown",
				value: i$18
			};
			t$13.value = pe$2(i$18, e$4);
		}
		if (e$4.parser === "less" && t$13.type === "css-decl" && i$18.startsWith("extend(") && (t$13.extend || (t$13.extend = t$13.raws.between === ":"), t$13.extend && !t$13.selector && (delete t$13.value, t$13.selector = te$2(i$18.slice(7, -1)))), t$13.type === "css-atrule") {
			if (e$4.parser === "less") {
				if (t$13.mixin) {
					let u$14 = t$13.raws.identifier + t$13.name + t$13.raws.afterName + t$13.raws.params;
					return t$13.selector = te$2(u$14), delete t$13.params, t$13;
				}
				if (t$13.function) return t$13;
			}
			if (e$4.parser === "css" && t$13.name === "custom-selector") {
				let u$14 = t$13.params.match(/:--\S+\s+/u)[0].trim();
				return t$13.customSelector = u$14, t$13.selector = te$2(t$13.params.slice(u$14.length).trim()), delete t$13.params, t$13;
			}
			if (e$4.parser === "less") {
				if (t$13.name.includes(":") && !t$13.params) {
					t$13.variable = !0;
					let u$14 = t$13.name.split(":");
					t$13.name = u$14[0], t$13.value = pe$2(u$14.slice(1).join(":"), e$4);
				}
				if (![
					"page",
					"nest",
					"keyframes"
				].includes(t$13.name) && ((r$12 = t$13.params) == null ? void 0 : r$12[0]) === ":") {
					t$13.variable = !0;
					let u$14 = t$13.params.slice(1);
					u$14 && (t$13.value = pe$2(u$14, e$4)), t$13.raws.afterName += ":";
				}
				if (t$13.variable) return delete t$13.params, t$13.value || delete t$13.value, t$13;
			}
		}
		if (t$13.type === "css-atrule" && o$9.length > 0) {
			let { name: u$14 } = t$13, a$13 = t$13.name.toLowerCase();
			return u$14 === "warn" || u$14 === "error" ? (t$13.params = {
				type: "media-unknown",
				value: o$9
			}, t$13) : u$14 === "extend" || u$14 === "nest" ? (t$13.selector = te$2(o$9), delete t$13.params, t$13) : u$14 === "at-root" ? (/^\(\s*(?:without|with)\s*:.+\)$/su.test(o$9) ? t$13.params = pe$2(o$9, e$4) : (t$13.selector = te$2(o$9), delete t$13.params), t$13) : fl$1(a$13) ? (t$13.import = !0, delete t$13.filename, t$13.params = pe$2(o$9, e$4), t$13) : [
				"namespace",
				"supports",
				"if",
				"else",
				"for",
				"each",
				"while",
				"debug",
				"mixin",
				"include",
				"function",
				"return",
				"define-mixin",
				"add-mixin"
			].includes(u$14) ? (o$9 = o$9.replace(/(\$\S+?)(\s+)?\.{3}/u, "$1...$2"), o$9 = o$9.replace(/^(?!if)(\S+)(\s+)\(/u, "$1($2"), t$13.value = pe$2(o$9, e$4), delete t$13.params, t$13) : ["media", "custom-media"].includes(a$13) ? o$9.includes("#{") ? {
				type: "media-unknown",
				value: o$9
			} : (t$13.params = _a(o$9), t$13) : (t$13.params = o$9, t$13);
		}
	}
	return t$13;
}
function Xs$1(t$13, e$4, s$8) {
	let r$12 = Ce$2(e$4), { frontMatter: n$8 } = r$12;
	e$4 = r$12.content;
	let i$18;
	try {
		i$18 = t$13(e$4, { map: !1 });
	} catch (o$9) {
		let { name: u$14, reason: a$13, line: c$3, column: f$3 } = o$9;
		throw typeof c$3 != "number" ? o$9 : da(`${u$14}: ${a$13}`, {
			loc: { start: {
				line: c$3,
				column: f$3
			} },
			cause: o$9
		});
	}
	return s$8.originalText = e$4, i$18 = yl$1(Z$2(i$18, "css-"), s$8), Qr$3(i$18, e$4), n$8 && (n$8.source = {
		startOffset: 0,
		endOffset: n$8.raw.length
	}, i$18.frontMatter = n$8), i$18;
}
function gl$1(t$13, e$4 = {}) {
	return Xs$1(hl$1.default.default, t$13, e$4);
}
function wl$1(t$13, e$4 = {}) {
	return Xs$1((s$8) => dl$1.default.parse(On$2(s$8)), t$13, e$4);
}
function vl$1(t$13, e$4 = {}) {
	return Xs$1(ml$1.default, t$13, e$4);
}
var Js$1 = {
	astFormat: "postcss",
	hasPragma: Yn$1,
	hasIgnorePragma: Vn$1,
	locStart: N$2,
	locEnd: P$2
}, My$1 = {
	...Js$1,
	parse: gl$1
}, By$1 = {
	...Js$1,
	parse: wl$1
}, Uy$1 = {
	...Js$1,
	parse: vl$1
};
var Fy$1 = { postcss: _i$1 };
var s_ = en$2;

//#endregion
//#region node_modules/.pnpm/prettier@3.6.2_patch_hash=2c5fac0fd268a2b2ab314d9e790cb805e3eb5e35106fc2644635eb6950a6ec1f/node_modules/prettier/plugins/typescript.mjs
var xd = Object.defineProperty;
var Sd = (e$4) => {
	throw TypeError(e$4);
};
var my = (e$4, t$13, a$13) => t$13 in e$4 ? xd(e$4, t$13, {
	enumerable: !0,
	configurable: !0,
	writable: !0,
	value: a$13
}) : e$4[t$13] = a$13;
var wd = (e$4, t$13) => {
	for (var a$13 in t$13) xd(e$4, a$13, {
		get: t$13[a$13],
		enumerable: !0
	});
};
var Vi$1 = (e$4, t$13, a$13) => my(e$4, typeof t$13 != "symbol" ? t$13 + "" : t$13, a$13), hy = (e$4, t$13, a$13) => t$13.has(e$4) || Sd("Cannot " + a$13);
var gp = (e$4, t$13, a$13) => t$13.has(e$4) ? Sd("Cannot add the same private member more than once") : t$13 instanceof WeakSet ? t$13.add(e$4) : t$13.set(e$4, a$13);
var ge$2 = (e$4, t$13, a$13) => (hy(e$4, t$13, "access private method"), a$13);
var hd = {};
wd(hd, { parsers: () => md });
var md = {};
wd(md, { typescript: () => t3 });
var yy = () => () => {}, Ma = yy;
var gy = (e$4, t$13, a$13, o$9) => {
	if (!(e$4 && t$13 == null)) return t$13.replaceAll ? t$13.replaceAll(a$13, o$9) : a$13.global ? t$13.replace(a$13, o$9) : t$13.split(a$13).join(o$9);
}, Er$2 = gy;
var Em = "5.8";
var bt$2 = [], by = /* @__PURE__ */ new Map();
function r_(e$4) {
	return e$4 !== void 0 ? e$4.length : 0;
}
function qn$1(e$4, t$13) {
	if (e$4 !== void 0) for (let a$13 = 0; a$13 < e$4.length; a$13++) {
		let o$9 = t$13(e$4[a$13], a$13);
		if (o$9) return o$9;
	}
}
function vy(e$4, t$13) {
	if (e$4 !== void 0) for (let a$13 = 0; a$13 < e$4.length; a$13++) {
		let o$9 = t$13(e$4[a$13], a$13);
		if (o$9 !== void 0) return o$9;
	}
}
function kd(e$4, t$13, a$13) {
	let o$9 = [];
	B$2.assertEqual(e$4.length, t$13.length);
	for (let m$11 = 0; m$11 < e$4.length; m$11++) o$9.push(a$13(e$4[m$11], t$13[m$11], m$11));
	return o$9;
}
function Yp(e$4, t$13) {
	if (e$4 !== void 0) {
		for (let a$13 = 0; a$13 < e$4.length; a$13++) if (!t$13(e$4[a$13], a$13)) return !1;
	}
	return !0;
}
function Am(e$4, t$13, a$13) {
	if (e$4 !== void 0) for (let o$9 = a$13 ?? 0; o$9 < e$4.length; o$9++) {
		let m$11 = e$4[o$9];
		if (t$13(m$11, o$9)) return m$11;
	}
}
function bp(e$4, t$13, a$13) {
	if (e$4 === void 0) return -1;
	for (let o$9 = a$13 ?? 0; o$9 < e$4.length; o$9++) if (t$13(e$4[o$9], o$9)) return o$9;
	return -1;
}
function Ty(e$4, t$13, a$13 = $p) {
	if (e$4 !== void 0) {
		for (let o$9 = 0; o$9 < e$4.length; o$9++) if (a$13(e$4[o$9], t$13)) return !0;
	}
	return !1;
}
function Xr$2(e$4, t$13) {
	if (e$4 !== void 0) {
		let a$13 = e$4.length, o$9 = 0;
		for (; o$9 < a$13 && t$13(e$4[o$9]);) o$9++;
		if (o$9 < a$13) {
			let m$11 = e$4.slice(0, o$9);
			for (o$9++; o$9 < a$13;) {
				let v$5 = e$4[o$9];
				t$13(v$5) && m$11.push(v$5), o$9++;
			}
			return m$11;
		}
	}
	return e$4;
}
function Np(e$4, t$13) {
	let a$13;
	if (e$4 !== void 0) {
		a$13 = [];
		for (let o$9 = 0; o$9 < e$4.length; o$9++) a$13.push(t$13(e$4[o$9], o$9));
	}
	return a$13;
}
function Cm(e$4) {
	let t$13 = [];
	for (let a$13 = 0; a$13 < e$4.length; a$13++) {
		let o$9 = e$4[a$13];
		o$9 && (Qr$2(o$9) ? Nn$2(t$13, o$9) : t$13.push(o$9));
	}
	return t$13;
}
function Dm(e$4, t$13) {
	let a$13;
	if (e$4 !== void 0) for (let o$9 = 0; o$9 < e$4.length; o$9++) {
		let m$11 = t$13(e$4[o$9], o$9);
		m$11 && (Qr$2(m$11) ? a$13 = Nn$2(a$13, m$11) : a$13 = Dn$1(a$13, m$11));
	}
	return a$13 ?? bt$2;
}
function xy(e$4, t$13) {
	let a$13;
	if (e$4 !== void 0) for (let o$9 = 0; o$9 < e$4.length; o$9++) {
		let m$11 = e$4[o$9], v$5 = t$13(m$11, o$9);
		(a$13 || m$11 !== v$5 || Qr$2(v$5)) && (a$13 || (a$13 = e$4.slice(0, o$9)), Qr$2(v$5) ? Nn$2(a$13, v$5) : a$13.push(v$5));
	}
	return a$13 ?? e$4;
}
function Sy(e$4, t$13) {
	let a$13 = [];
	if (e$4 !== void 0) for (let o$9 = 0; o$9 < e$4.length; o$9++) {
		let m$11 = t$13(e$4[o$9], o$9);
		m$11 !== void 0 && a$13.push(m$11);
	}
	return a$13;
}
function nn$2(e$4, t$13) {
	if (e$4 !== void 0) if (t$13 !== void 0) {
		for (let a$13 = 0; a$13 < e$4.length; a$13++) if (t$13(e$4[a$13])) return !0;
	} else return e$4.length > 0;
	return !1;
}
function Hp(e$4, t$13) {
	return t$13 === void 0 || t$13.length === 0 ? e$4 : e$4 === void 0 || e$4.length === 0 ? t$13 : [...e$4, ...t$13];
}
function wy(e$4, t$13, a$13 = $p) {
	if (e$4 === void 0 || t$13 === void 0) return e$4 === t$13;
	if (e$4.length !== t$13.length) return !1;
	for (let o$9 = 0; o$9 < e$4.length; o$9++) if (!a$13(e$4[o$9], t$13[o$9], o$9)) return !1;
	return !0;
}
function Dn$1(e$4, t$13) {
	return t$13 === void 0 ? e$4 : e$4 === void 0 ? [t$13] : (e$4.push(t$13), e$4);
}
function Ip(e$4, t$13) {
	return t$13 < 0 ? e$4.length + t$13 : t$13;
}
function Nn$2(e$4, t$13, a$13, o$9) {
	if (t$13 === void 0 || t$13.length === 0) return e$4;
	if (e$4 === void 0) return t$13.slice(a$13, o$9);
	a$13 = a$13 === void 0 ? 0 : Ip(t$13, a$13), o$9 = o$9 === void 0 ? t$13.length : Ip(t$13, o$9);
	for (let m$11 = a$13; m$11 < o$9 && m$11 < t$13.length; m$11++) t$13[m$11] !== void 0 && e$4.push(t$13[m$11]);
	return e$4;
}
function ky(e$4, t$13, a$13) {
	return Ty(e$4, t$13, a$13) ? !1 : (e$4.push(t$13), !0);
}
function Ey(e$4, t$13, a$13) {
	return e$4 !== void 0 ? (ky(e$4, t$13, a$13), e$4) : [t$13];
}
function Ay(e$4, t$13) {
	return e$4.length === 0 ? bt$2 : e$4.slice().sort(t$13);
}
Array.prototype.at;
function Xp(e$4) {
	return e$4 === void 0 || e$4.length === 0 ? void 0 : e$4[0];
}
function Fa$1(e$4) {
	return e$4 === void 0 || e$4.length === 0 ? void 0 : e$4[e$4.length - 1];
}
function Cy(e$4) {
	return B$2.assert(e$4.length !== 0), e$4[e$4.length - 1];
}
function Dy(e$4) {
	return e$4 !== void 0 && e$4.length === 1 ? e$4[0] : void 0;
}
function Py(e$4, t$13, a$13, o$9, m$11) {
	return Ny(e$4, a$13(t$13), a$13, o$9, m$11);
}
function Ny(e$4, t$13, a$13, o$9, m$11) {
	if (!nn$2(e$4)) return -1;
	let v$5 = m$11 ?? 0, E$3 = e$4.length - 1;
	for (; v$5 <= E$3;) {
		let C$3 = v$5 + (E$3 - v$5 >> 1), c$3 = a$13(e$4[C$3], C$3);
		switch (o$9(c$3, t$13)) {
			case -1:
				v$5 = C$3 + 1;
				break;
			case 0: return C$3;
			case 1:
				E$3 = C$3 - 1;
				break;
		}
	}
	return ~v$5;
}
function Iy(e$4, t$13, a$13, o$9, m$11) {
	if (e$4 && e$4.length > 0) {
		let v$5 = e$4.length;
		if (v$5 > 0) {
			let E$3 = o$9 === void 0 || o$9 < 0 ? 0 : o$9, C$3 = m$11 === void 0 || E$3 + m$11 > v$5 - 1 ? v$5 - 1 : E$3 + m$11, c$3;
			for (arguments.length <= 2 ? (c$3 = e$4[E$3], E$3++) : c$3 = a$13; E$3 <= C$3;) c$3 = t$13(c$3, e$4[E$3], E$3), E$3++;
			return c$3;
		}
	}
	return a$13;
}
var Pm = Object.prototype.hasOwnProperty;
function Nr$2(e$4, t$13) {
	return Pm.call(e$4, t$13);
}
function Oy(e$4) {
	let t$13 = [];
	for (let a$13 in e$4) Pm.call(e$4, a$13) && t$13.push(a$13);
	return t$13;
}
function My() {
	let e$4 = /* @__PURE__ */ new Map();
	return e$4.add = Ly, e$4.remove = Jy, e$4;
}
function Ly(e$4, t$13) {
	let a$13 = this.get(e$4);
	return a$13 !== void 0 ? a$13.push(t$13) : this.set(e$4, a$13 = [t$13]), a$13;
}
function Jy(e$4, t$13) {
	let a$13 = this.get(e$4);
	a$13 !== void 0 && (Wy(a$13, t$13), a$13.length || this.delete(e$4));
}
function Qr$2(e$4) {
	return Array.isArray(e$4);
}
function vp(e$4) {
	return Qr$2(e$4) ? e$4 : [e$4];
}
function jy(e$4, t$13) {
	return e$4 !== void 0 && t$13(e$4) ? e$4 : void 0;
}
function Cr$1(e$4, t$13) {
	return e$4 !== void 0 && t$13(e$4) ? e$4 : B$2.fail(`Invalid cast. The supplied value ${e$4} did not pass the test '${B$2.getFunctionName(t$13)}'.`);
}
function Ga$1(e$4) {}
function Ry() {
	return !0;
}
function gt$1(e$4) {
	return e$4;
}
function Ed(e$4) {
	let t$13;
	return () => (e$4 && (t$13 = e$4(), e$4 = void 0), t$13);
}
function er$1(e$4) {
	let t$13 = /* @__PURE__ */ new Map();
	return (a$13) => {
		let o$9 = `${typeof a$13}:${a$13}`, m$11 = t$13.get(o$9);
		return m$11 === void 0 && !t$13.has(o$9) && (m$11 = e$4(a$13), t$13.set(o$9, m$11)), m$11;
	};
}
function $p(e$4, t$13) {
	return e$4 === t$13;
}
function Qp(e$4, t$13) {
	return e$4 === t$13 || e$4 !== void 0 && t$13 !== void 0 && e$4.toUpperCase() === t$13.toUpperCase();
}
function Uy(e$4, t$13) {
	return $p(e$4, t$13);
}
function By(e$4, t$13) {
	return e$4 === t$13 ? 0 : e$4 === void 0 ? -1 : t$13 === void 0 ? 1 : e$4 < t$13 ? -1 : 1;
}
function Nm(e$4, t$13) {
	return By(e$4, t$13);
}
function qy(e$4, t$13, a$13) {
	for (let o$9 = 0; o$9 < e$4.length; o$9++) t$13 = Math.max(t$13, a$13(e$4[o$9]));
	return t$13;
}
function i_(e$4, t$13, a$13) {
	let o$9 = Math.max(2, Math.floor(e$4.length * .34)), m$11 = Math.floor(e$4.length * .4) + 1, v$5;
	for (let E$3 of t$13) {
		let C$3 = a$13(E$3);
		if (C$3 !== void 0 && Math.abs(C$3.length - e$4.length) <= o$9) {
			if (C$3 === e$4 || C$3.length < 3 && C$3.toLowerCase() !== e$4.toLowerCase()) continue;
			let c$3 = Fy(e$4, C$3, m$11 - .1);
			if (c$3 === void 0) continue;
			B$2.assert(c$3 < m$11), m$11 = c$3, v$5 = E$3;
		}
	}
	return v$5;
}
function Fy(e$4, t$13, a$13) {
	let o$9 = new Array(t$13.length + 1), m$11 = new Array(t$13.length + 1), v$5 = a$13 + .01;
	for (let C$3 = 0; C$3 <= t$13.length; C$3++) o$9[C$3] = C$3;
	for (let C$3 = 1; C$3 <= e$4.length; C$3++) {
		let c$3 = e$4.charCodeAt(C$3 - 1), W$2 = Math.ceil(C$3 > a$13 ? C$3 - a$13 : 1), h$3 = Math.floor(t$13.length > a$13 + C$3 ? a$13 + C$3 : t$13.length);
		m$11[0] = C$3;
		let y$7 = C$3;
		for (let x$3 = 1; x$3 < W$2; x$3++) m$11[x$3] = v$5;
		for (let x$3 = W$2; x$3 <= h$3; x$3++) {
			let N$5 = e$4[C$3 - 1].toLowerCase() === t$13[x$3 - 1].toLowerCase() ? o$9[x$3 - 1] + .1 : o$9[x$3 - 1] + 2, te$5 = c$3 === t$13.charCodeAt(x$3 - 1) ? o$9[x$3 - 1] : Math.min(o$9[x$3] + 1, m$11[x$3 - 1] + 1, N$5);
			m$11[x$3] = te$5, y$7 = Math.min(y$7, te$5);
		}
		for (let x$3 = h$3 + 1; x$3 <= t$13.length; x$3++) m$11[x$3] = v$5;
		if (y$7 > a$13) return;
		let g$2 = o$9;
		o$9 = m$11, m$11 = g$2;
	}
	let E$3 = o$9[t$13.length];
	return E$3 > a$13 ? void 0 : E$3;
}
function zy(e$4, t$13, a$13) {
	let o$9 = e$4.length - t$13.length;
	return o$9 >= 0 && (a$13 ? Qp(e$4.slice(o$9), t$13) : e$4.indexOf(t$13, o$9) === o$9);
}
function Vy(e$4, t$13) {
	e$4[t$13] = e$4[e$4.length - 1], e$4.pop();
}
function Wy(e$4, t$13) {
	return Gy(e$4, (a$13) => a$13 === t$13);
}
function Gy(e$4, t$13) {
	for (let a$13 = 0; a$13 < e$4.length; a$13++) if (t$13(e$4[a$13])) return Vy(e$4, a$13), !0;
	return !1;
}
function dl(e$4, t$13, a$13) {
	return a$13 ? Qp(e$4.slice(0, t$13.length), t$13) : e$4.lastIndexOf(t$13, 0) === 0;
}
function Op(e$4) {
	return e$4 === void 0 ? void 0 : [e$4];
}
var B$2;
((e$4) => {
	let t$13 = 0;
	e$4.currentLogLevel = 2, e$4.isDebugging = !1;
	function a$13(J$4) {
		return e$4.currentLogLevel <= J$4;
	}
	e$4.shouldLog = a$13;
	function o$9(J$4, _e$7) {
		e$4.loggingHost && a$13(J$4) && e$4.loggingHost.log(J$4, _e$7);
	}
	function m$11(J$4) {
		o$9(3, J$4);
	}
	e$4.log = m$11, ((J$4) => {
		function _e$7(Ke$4) {
			o$9(1, Ke$4);
		}
		J$4.error = _e$7;
		function me$5(Ke$4) {
			o$9(2, Ke$4);
		}
		J$4.warn = me$5;
		function Te$7(Ke$4) {
			o$9(3, Ke$4);
		}
		J$4.log = Te$7;
		function Xe$4(Ke$4) {
			o$9(4, Ke$4);
		}
		J$4.trace = Xe$4;
	})(m$11 = e$4.log || (e$4.log = {}));
	let v$5 = {};
	function E$3() {
		return t$13;
	}
	e$4.getAssertionLevel = E$3;
	function C$3(J$4) {
		let _e$7 = t$13;
		if (t$13 = J$4, J$4 > _e$7) for (let me$5 of Oy(v$5)) {
			let Te$7 = v$5[me$5];
			Te$7 !== void 0 && e$4[me$5] !== Te$7.assertion && J$4 >= Te$7.level && (e$4[me$5] = Te$7, v$5[me$5] = void 0);
		}
	}
	e$4.setAssertionLevel = C$3;
	function c$3(J$4) {
		return t$13 >= J$4;
	}
	e$4.shouldAssert = c$3;
	function W$2(J$4, _e$7) {
		return c$3(J$4) ? !0 : (v$5[_e$7] = {
			level: J$4,
			assertion: e$4[_e$7]
		}, e$4[_e$7] = Ga$1, !1);
	}
	function h$3(J$4, _e$7) {
		debugger;
		let me$5 = /* @__PURE__ */ new Error(J$4 ? `Debug Failure. ${J$4}` : "Debug Failure.");
		throw Error.captureStackTrace && Error.captureStackTrace(me$5, _e$7 || h$3), me$5;
	}
	e$4.fail = h$3;
	function y$7(J$4, _e$7, me$5) {
		return h$3(`${_e$7 || "Unexpected node."}\r
Node ${Mt$5(J$4.kind)} was unexpected.`, me$5 || y$7);
	}
	e$4.failBadSyntaxKind = y$7;
	function g$2(J$4, _e$7, me$5, Te$7) {
		J$4 || (_e$7 = _e$7 ? `False expression: ${_e$7}` : "False expression.", me$5 && (_e$7 += `\r
Verbose Debug Information: ` + (typeof me$5 == "string" ? me$5 : me$5())), h$3(_e$7, Te$7 || g$2));
	}
	e$4.assert = g$2;
	function x$3(J$4, _e$7, me$5, Te$7, Xe$4) {
		if (J$4 !== _e$7) {
			let Ke$4 = me$5 ? Te$7 ? `${me$5} ${Te$7}` : me$5 : "";
			h$3(`Expected ${J$4} === ${_e$7}. ${Ke$4}`, Xe$4 || x$3);
		}
	}
	e$4.assertEqual = x$3;
	function N$5(J$4, _e$7, me$5, Te$7) {
		J$4 >= _e$7 && h$3(`Expected ${J$4} < ${_e$7}. ${me$5 || ""}`, Te$7 || N$5);
	}
	e$4.assertLessThan = N$5;
	function te$5(J$4, _e$7, me$5) {
		J$4 > _e$7 && h$3(`Expected ${J$4} <= ${_e$7}`, me$5 || te$5);
	}
	e$4.assertLessThanOrEqual = te$5;
	function ue$4(J$4, _e$7, me$5) {
		J$4 < _e$7 && h$3(`Expected ${J$4} >= ${_e$7}`, me$5 || ue$4);
	}
	e$4.assertGreaterThanOrEqual = ue$4;
	function ye$4(J$4, _e$7, me$5) {
		J$4 ?? h$3(_e$7, me$5 || ye$4);
	}
	e$4.assertIsDefined = ye$4;
	function fe$4(J$4, _e$7, me$5) {
		return ye$4(J$4, _e$7, me$5 || fe$4), J$4;
	}
	e$4.checkDefined = fe$4;
	function M$2(J$4, _e$7, me$5) {
		for (let Te$7 of J$4) ye$4(Te$7, _e$7, me$5 || M$2);
	}
	e$4.assertEachIsDefined = M$2;
	function ie$6(J$4, _e$7, me$5) {
		return M$2(J$4, _e$7, me$5 || ie$6), J$4;
	}
	e$4.checkEachDefined = ie$6;
	function Ce$6(J$4, _e$7 = "Illegal value:", me$5) {
		let Te$7 = typeof J$4 == "object" && Nr$2(J$4, "kind") && Nr$2(J$4, "pos") ? "SyntaxKind: " + Mt$5(J$4.kind) : JSON.stringify(J$4);
		return h$3(`${_e$7} ${Te$7}`, me$5 || Ce$6);
	}
	e$4.assertNever = Ce$6;
	function V$5(J$4, _e$7, me$5, Te$7) {
		W$2(1, "assertEachNode") && g$2(_e$7 === void 0 || Yp(J$4, _e$7), me$5 || "Unexpected node.", () => `Node array did not pass test '${Tn$5(_e$7)}'.`, Te$7 || V$5);
	}
	e$4.assertEachNode = V$5;
	function oe$6(J$4, _e$7, me$5, Te$7) {
		W$2(1, "assertNode") && g$2(J$4 !== void 0 && (_e$7 === void 0 || _e$7(J$4)), me$5 || "Unexpected node.", () => `Node ${Mt$5(J$4 == null ? void 0 : J$4.kind)} did not pass test '${Tn$5(_e$7)}'.`, Te$7 || oe$6);
	}
	e$4.assertNode = oe$6;
	function G$6(J$4, _e$7, me$5, Te$7) {
		W$2(1, "assertNotNode") && g$2(J$4 === void 0 || _e$7 === void 0 || !_e$7(J$4), me$5 || "Unexpected node.", () => `Node ${Mt$5(J$4.kind)} should not have passed test '${Tn$5(_e$7)}'.`, Te$7 || G$6);
	}
	e$4.assertNotNode = G$6;
	function dt$3(J$4, _e$7, me$5, Te$7) {
		W$2(1, "assertOptionalNode") && g$2(_e$7 === void 0 || J$4 === void 0 || _e$7(J$4), me$5 || "Unexpected node.", () => `Node ${Mt$5(J$4 == null ? void 0 : J$4.kind)} did not pass test '${Tn$5(_e$7)}'.`, Te$7 || dt$3);
	}
	e$4.assertOptionalNode = dt$3;
	function rr$5(J$4, _e$7, me$5, Te$7) {
		W$2(1, "assertOptionalToken") && g$2(_e$7 === void 0 || J$4 === void 0 || J$4.kind === _e$7, me$5 || "Unexpected node.", () => `Node ${Mt$5(J$4 == null ? void 0 : J$4.kind)} was not a '${Mt$5(_e$7)}' token.`, Te$7 || rr$5);
	}
	e$4.assertOptionalToken = rr$5;
	function vn$4(J$4, _e$7, me$5) {
		W$2(1, "assertMissingNode") && g$2(J$4 === void 0, _e$7 || "Unexpected node.", () => `Node ${Mt$5(J$4.kind)} was unexpected'.`, me$5 || vn$4);
	}
	e$4.assertMissingNode = vn$4;
	function ir$5(J$4) {}
	e$4.type = ir$5;
	function Tn$5(J$4) {
		if (typeof J$4 != "function") return "";
		if (Nr$2(J$4, "name")) return J$4.name;
		{
			let _e$7 = Function.prototype.toString.call(J$4), me$5 = /^function\s+([\w$]+)\s*\(/.exec(_e$7);
			return me$5 ? me$5[1] : "";
		}
	}
	e$4.getFunctionName = Tn$5;
	function Mn$4(J$4) {
		return `{ name: ${f_(J$4.escapedName)}; flags: ${ct$4(J$4.flags)}; declarations: ${Np(J$4.declarations, (_e$7) => Mt$5(_e$7.kind))} }`;
	}
	e$4.formatSymbol = Mn$4;
	function Ge$5(J$4 = 0, _e$7, me$5) {
		let Te$7 = Or$5(_e$7);
		if (J$4 === 0) return Te$7.length > 0 && Te$7[0][0] === 0 ? Te$7[0][1] : "0";
		if (me$5) {
			let Xe$4 = [], Ke$4 = J$4;
			for (let [st$5, Pt$5] of Te$7) {
				if (st$5 > J$4) break;
				st$5 !== 0 && st$5 & J$4 && (Xe$4.push(Pt$5), Ke$4 &= ~st$5);
			}
			if (Ke$4 === 0) return Xe$4.join("|");
		} else for (let [Xe$4, Ke$4] of Te$7) if (Xe$4 === J$4) return Ke$4;
		return J$4.toString();
	}
	e$4.formatEnum = Ge$5;
	let ar$5 = /* @__PURE__ */ new Map();
	function Or$5(J$4) {
		let _e$7 = ar$5.get(J$4);
		if (_e$7) return _e$7;
		let me$5 = [];
		for (let Xe$4 in J$4) {
			let Ke$4 = J$4[Xe$4];
			typeof Ke$4 == "number" && me$5.push([Ke$4, Xe$4]);
		}
		let Te$7 = Ay(me$5, (Xe$4, Ke$4) => Nm(Xe$4[0], Ke$4[0]));
		return ar$5.set(J$4, Te$7), Te$7;
	}
	function Mt$5(J$4) {
		return Ge$5(J$4, Ie$2, !1);
	}
	e$4.formatSyntaxKind = Mt$5;
	function Fn$4(J$4) {
		return Ge$5(J$4, Jm, !1);
	}
	e$4.formatSnippetKind = Fn$4;
	function Ln$5(J$4) {
		return Ge$5(J$4, Ir$2, !1);
	}
	e$4.formatScriptKind = Ln$5;
	function Lt$6(J$4) {
		return Ge$5(J$4, bn$2, !0);
	}
	e$4.formatNodeFlags = Lt$6;
	function vt$6(J$4) {
		return Ge$5(J$4, Om, !0);
	}
	e$4.formatNodeCheckFlags = vt$6;
	function Qe$4(J$4) {
		return Ge$5(J$4, Kp, !0);
	}
	e$4.formatModifierFlags = Qe$4;
	function zn$6(J$4) {
		return Ge$5(J$4, Lm, !0);
	}
	e$4.formatTransformFlags = zn$6;
	function $t$4(J$4) {
		return Ge$5(J$4, jm, !0);
	}
	e$4.formatEmitFlags = $t$4;
	function ct$4(J$4) {
		return Ge$5(J$4, Zp, !0);
	}
	e$4.formatSymbolFlags = ct$4;
	function at$4(J$4) {
		return Ge$5(J$4, rn$2, !0);
	}
	e$4.formatTypeFlags = at$4;
	function Ut$4(J$4) {
		return Ge$5(J$4, Mm, !0);
	}
	e$4.formatSignatureFlags = Ut$4;
	function Jt$3(J$4) {
		return Ge$5(J$4, ef, !0);
	}
	e$4.formatObjectFlags = Jt$3;
	function lt$3(J$4) {
		return Ge$5(J$4, Mp, !0);
	}
	e$4.formatFlowFlags = lt$3;
	function sr$5(J$4) {
		return Ge$5(J$4, Im, !0);
	}
	e$4.formatRelationComparisonResult = sr$5;
	function mt$5(J$4) {
		return Ge$5(J$4, CheckMode, !0);
	}
	e$4.formatCheckMode = mt$5;
	function xn$3(J$4) {
		return Ge$5(J$4, SignatureCheckMode, !0);
	}
	e$4.formatSignatureCheckMode = xn$3;
	function yt$4(J$4) {
		return Ge$5(J$4, TypeFacts, !0);
	}
	e$4.formatTypeFacts = yt$4;
	let ln$5 = !1, nt$4;
	function Bt$5(J$4) {
		"__debugFlowFlags" in J$4 || Object.defineProperties(J$4, {
			__tsDebuggerDisplay: { value() {
				let _e$7 = this.flags & 2 ? "FlowStart" : this.flags & 4 ? "FlowBranchLabel" : this.flags & 8 ? "FlowLoopLabel" : this.flags & 16 ? "FlowAssignment" : this.flags & 32 ? "FlowTrueCondition" : this.flags & 64 ? "FlowFalseCondition" : this.flags & 128 ? "FlowSwitchClause" : this.flags & 256 ? "FlowArrayMutation" : this.flags & 512 ? "FlowCall" : this.flags & 1024 ? "FlowReduceLabel" : this.flags & 1 ? "FlowUnreachable" : "UnknownFlow", me$5 = this.flags & -2048;
				return `${_e$7}${me$5 ? ` (${lt$3(me$5)})` : ""}`;
			} },
			__debugFlowFlags: { get() {
				return Ge$5(this.flags, Mp, !0);
			} },
			__debugToString: { value() {
				return gr$4(this);
			} }
		});
	}
	function an$5(J$4) {
		return ln$5 && (typeof Object.setPrototypeOf == "function" ? (nt$4 || (nt$4 = Object.create(Object.prototype), Bt$5(nt$4)), Object.setPrototypeOf(J$4, nt$4)) : Bt$5(J$4)), J$4;
	}
	e$4.attachFlowNodeDebugInfo = an$5;
	let _r$5;
	function hr$4(J$4) {
		"__tsDebuggerDisplay" in J$4 || Object.defineProperties(J$4, { __tsDebuggerDisplay: { value(_e$7) {
			return _e$7 = String(_e$7).replace(/(?:,[\s\w]+:[^,]+)+\]$/, "]"), `NodeArray ${_e$7}`;
		} } });
	}
	function yr$4(J$4) {
		ln$5 && (typeof Object.setPrototypeOf == "function" ? (_r$5 || (_r$5 = Object.create(Array.prototype), hr$4(_r$5)), Object.setPrototypeOf(J$4, _r$5)) : hr$4(J$4));
	}
	e$4.attachNodeArrayDebugInfo = yr$4;
	function Vn$5() {
		if (ln$5) return;
		let J$4 = /* @__PURE__ */ new WeakMap(), _e$7 = /* @__PURE__ */ new WeakMap();
		Object.defineProperties(At$2.getSymbolConstructor().prototype, {
			__tsDebuggerDisplay: { value() {
				let Te$7 = this.flags & 33554432 ? "TransientSymbol" : "Symbol", Xe$4 = this.flags & -33554433;
				return `${Te$7} '${jp(this)}'${Xe$4 ? ` (${ct$4(Xe$4)})` : ""}`;
			} },
			__debugFlags: { get() {
				return ct$4(this.flags);
			} }
		}), Object.defineProperties(At$2.getTypeConstructor().prototype, {
			__tsDebuggerDisplay: { value() {
				let Te$7 = this.flags & 67359327 ? `IntrinsicType ${this.intrinsicName}${this.debugIntrinsicName ? ` (${this.debugIntrinsicName})` : ""}` : this.flags & 98304 ? "NullableType" : this.flags & 384 ? `LiteralType ${JSON.stringify(this.value)}` : this.flags & 2048 ? `LiteralType ${this.value.negative ? "-" : ""}${this.value.base10Value}n` : this.flags & 8192 ? "UniqueESSymbolType" : this.flags & 32 ? "EnumType" : this.flags & 1048576 ? "UnionType" : this.flags & 2097152 ? "IntersectionType" : this.flags & 4194304 ? "IndexType" : this.flags & 8388608 ? "IndexedAccessType" : this.flags & 16777216 ? "ConditionalType" : this.flags & 33554432 ? "SubstitutionType" : this.flags & 262144 ? "TypeParameter" : this.flags & 524288 ? this.objectFlags & 3 ? "InterfaceType" : this.objectFlags & 4 ? "TypeReference" : this.objectFlags & 8 ? "TupleType" : this.objectFlags & 16 ? "AnonymousType" : this.objectFlags & 32 ? "MappedType" : this.objectFlags & 1024 ? "ReverseMappedType" : this.objectFlags & 256 ? "EvolvingArrayType" : "ObjectType" : "Type", Xe$4 = this.flags & 524288 ? this.objectFlags & -1344 : 0;
				return `${Te$7}${this.symbol ? ` '${jp(this.symbol)}'` : ""}${Xe$4 ? ` (${Jt$3(Xe$4)})` : ""}`;
			} },
			__debugFlags: { get() {
				return at$4(this.flags);
			} },
			__debugObjectFlags: { get() {
				return this.flags & 524288 ? Jt$3(this.objectFlags) : "";
			} },
			__debugTypeToString: { value() {
				let Te$7 = J$4.get(this);
				return Te$7 === void 0 && (Te$7 = this.checker.typeToString(this), J$4.set(this, Te$7)), Te$7;
			} }
		}), Object.defineProperties(At$2.getSignatureConstructor().prototype, {
			__debugFlags: { get() {
				return Ut$4(this.flags);
			} },
			__debugSignatureToString: { value() {
				var Te$7;
				return (Te$7 = this.checker) == null ? void 0 : Te$7.signatureToString(this);
			} }
		});
		let me$5 = [
			At$2.getNodeConstructor(),
			At$2.getIdentifierConstructor(),
			At$2.getTokenConstructor(),
			At$2.getSourceFileConstructor()
		];
		for (let Te$7 of me$5) Nr$2(Te$7.prototype, "__debugKind") || Object.defineProperties(Te$7.prototype, {
			__tsDebuggerDisplay: { value() {
				return `${qa$1(this) ? "GeneratedIdentifier" : Ze$2(this) ? `Identifier '${In$1(this)}'` : vi$1(this) ? `PrivateIdentifier '${In$1(this)}'` : Si$1(this) ? `StringLiteral ${JSON.stringify(this.text.length < 10 ? this.text : this.text.slice(10) + "...")}` : na(this) ? `NumericLiteral ${this.text}` : O1(this) ? `BigIntLiteral ${this.text}n` : Ef(this) ? "TypeParameterDeclaration" : g_(this) ? "ParameterDeclaration" : Af(this) ? "ConstructorDeclaration" : vl(this) ? "GetAccessorDeclaration" : v_(this) ? "SetAccessorDeclaration" : R1(this) ? "CallSignatureDeclaration" : U1(this) ? "ConstructSignatureDeclaration" : Cf(this) ? "IndexSignatureDeclaration" : B1(this) ? "TypePredicateNode" : Df(this) ? "TypeReferenceNode" : Pf(this) ? "FunctionTypeNode" : Nf(this) ? "ConstructorTypeNode" : t6(this) ? "TypeQueryNode" : q1(this) ? "TypeLiteralNode" : n6(this) ? "ArrayTypeNode" : r6(this) ? "TupleTypeNode" : i6(this) ? "OptionalTypeNode" : a6(this) ? "RestTypeNode" : z1(this) ? "UnionTypeNode" : V1(this) ? "IntersectionTypeNode" : s6(this) ? "ConditionalTypeNode" : _6(this) ? "InferTypeNode" : W1(this) ? "ParenthesizedTypeNode" : o6(this) ? "ThisTypeNode" : G1(this) ? "TypeOperatorNode" : c6(this) ? "IndexedAccessTypeNode" : Y1(this) ? "MappedTypeNode" : l6(this) ? "LiteralTypeNode" : F1(this) ? "NamedTupleMember" : u6(this) ? "ImportTypeNode" : Mt$5(this.kind)}${this.flags ? ` (${Lt$6(this.flags)})` : ""}`;
			} },
			__debugKind: { get() {
				return Mt$5(this.kind);
			} },
			__debugNodeFlags: { get() {
				return Lt$6(this.flags);
			} },
			__debugModifierFlags: { get() {
				return Qe$4(ob(this));
			} },
			__debugTransformFlags: { get() {
				return zn$6(this.transformFlags);
			} },
			__debugIsParseTreeNode: { get() {
				return yl(this);
			} },
			__debugEmitFlags: { get() {
				return $t$4(Wa$1(this));
			} },
			__debugGetText: { value(Xe$4) {
				if (Ra(this)) return "";
				let Ke$4 = _e$7.get(this);
				if (Ke$4 === void 0) {
					let st$5 = Dg(this), Pt$5 = st$5 && gi$1(st$5);
					Ke$4 = Pt$5 ? qd(Pt$5, st$5, Xe$4) : "", _e$7.set(this, Ke$4);
				}
				return Ke$4;
			} }
		});
		ln$5 = !0;
	}
	e$4.enableDebugInfo = Vn$5;
	function Wn$5(J$4) {
		let _e$7 = J$4 & 7, me$5 = _e$7 === 0 ? "in out" : _e$7 === 3 ? "[bivariant]" : _e$7 === 2 ? "in" : _e$7 === 1 ? "out" : _e$7 === 4 ? "[independent]" : "";
		return J$4 & 8 ? me$5 += " (unmeasurable)" : J$4 & 16 && (me$5 += " (unreliable)"), me$5;
	}
	e$4.formatVariance = Wn$5;
	class Mr$4 {
		__debugToString() {
			var _e$7;
			switch (this.kind) {
				case 3: return ((_e$7 = this.debugInfo) == null ? void 0 : _e$7.call(this)) || "(function mapper)";
				case 0: return `${this.source.__debugTypeToString()} -> ${this.target.__debugTypeToString()}`;
				case 1: return kd(this.sources, this.targets || Np(this.sources, () => "any"), (me$5, Te$7) => `${me$5.__debugTypeToString()} -> ${typeof Te$7 == "string" ? Te$7 : Te$7.__debugTypeToString()}`).join(", ");
				case 2: return kd(this.sources, this.targets, (me$5, Te$7) => `${me$5.__debugTypeToString()} -> ${Te$7().__debugTypeToString()}`).join(", ");
				case 5:
				case 4: return `m1: ${this.mapper1.__debugToString().split(`
`).join(`
    `)}
m2: ${this.mapper2.__debugToString().split(`
`).join(`
    `)}`;
				default: return Ce$6(this);
			}
		}
	}
	e$4.DebugTypeMapper = Mr$4;
	function Gn$6(J$4) {
		return e$4.isDebugging ? Object.setPrototypeOf(J$4, Mr$4.prototype) : J$4;
	}
	e$4.attachDebugPrototypeIfDebug = Gn$6;
	function De$7(J$4) {
		return console.log(gr$4(J$4));
	}
	e$4.printControlFlowGraph = De$7;
	function gr$4(J$4) {
		let _e$7 = -1;
		function me$5(u$14) {
			return u$14.id || (u$14.id = _e$7, _e$7--), u$14.id;
		}
		let Te$7;
		((u$14) => {
			u$14.lr = "─", u$14.ud = "│", u$14.dr = "╭", u$14.dl = "╮", u$14.ul = "╯", u$14.ur = "╰", u$14.udr = "├", u$14.udl = "┤", u$14.dlr = "┬", u$14.ulr = "┴", u$14.udlr = "╫";
		})(Te$7 || (Te$7 = {}));
		let Xe$4;
		((u$14) => {
			u$14[u$14.None = 0] = "None", u$14[u$14.Up = 1] = "Up", u$14[u$14.Down = 2] = "Down", u$14[u$14.Left = 4] = "Left", u$14[u$14.Right = 8] = "Right", u$14[u$14.UpDown = 3] = "UpDown", u$14[u$14.LeftRight = 12] = "LeftRight", u$14[u$14.UpLeft = 5] = "UpLeft", u$14[u$14.UpRight = 9] = "UpRight", u$14[u$14.DownLeft = 6] = "DownLeft", u$14[u$14.DownRight = 10] = "DownRight", u$14[u$14.UpDownLeft = 7] = "UpDownLeft", u$14[u$14.UpDownRight = 11] = "UpDownRight", u$14[u$14.UpLeftRight = 13] = "UpLeftRight", u$14[u$14.DownLeftRight = 14] = "DownLeftRight", u$14[u$14.UpDownLeftRight = 15] = "UpDownLeftRight", u$14[u$14.NoChildren = 16] = "NoChildren";
		})(Xe$4 || (Xe$4 = {}));
		let Ke$4 = 2032, st$5 = 882, Pt$5 = Object.create(null), Tt$7 = [], ut$4 = [], Lr$5 = Se$5(J$4, /* @__PURE__ */ new Set());
		for (let u$14 of Tt$7) u$14.text = rt$5(u$14.flowNode, u$14.circular), be$5(u$14);
		let br$4 = We$2(Lr$5), Jn$5 = et$5(br$4);
		return Ye$6(Lr$5, 0), un$5();
		function Yn$5(u$14) {
			return !!(u$14.flags & 128);
		}
		function Ei$5(u$14) {
			return !!(u$14.flags & 12) && !!u$14.antecedent;
		}
		function R$6(u$14) {
			return !!(u$14.flags & Ke$4);
		}
		function Q$4(u$14) {
			return !!(u$14.flags & st$5);
		}
		function K$6(u$14) {
			let Oe$6 = [];
			for (let Me$6 of u$14.edges) Me$6.source === u$14 && Oe$6.push(Me$6.target);
			return Oe$6;
		}
		function xe$4(u$14) {
			let Oe$6 = [];
			for (let Me$6 of u$14.edges) Me$6.target === u$14 && Oe$6.push(Me$6.source);
			return Oe$6;
		}
		function Se$5(u$14, Oe$6) {
			let Me$6 = me$5(u$14), U$4 = Pt$5[Me$6];
			if (U$4 && Oe$6.has(u$14)) return U$4.circular = !0, U$4 = {
				id: -1,
				flowNode: u$14,
				edges: [],
				text: "",
				lane: -1,
				endLane: -1,
				level: -1,
				circular: "circularity"
			}, Tt$7.push(U$4), U$4;
			if (Oe$6.add(u$14), !U$4) if (Pt$5[Me$6] = U$4 = {
				id: Me$6,
				flowNode: u$14,
				edges: [],
				text: "",
				lane: -1,
				endLane: -1,
				level: -1,
				circular: !1
			}, Tt$7.push(U$4), Ei$5(u$14)) for (let Fe$4 of u$14.antecedent) we$3(U$4, Fe$4, Oe$6);
			else R$6(u$14) && we$3(U$4, u$14.antecedent, Oe$6);
			return Oe$6.delete(u$14), U$4;
		}
		function we$3(u$14, Oe$6, Me$6) {
			let U$4 = Se$5(Oe$6, Me$6), Fe$4 = {
				source: u$14,
				target: U$4
			};
			ut$4.push(Fe$4), u$14.edges.push(Fe$4), U$4.edges.push(Fe$4);
		}
		function be$5(u$14) {
			if (u$14.level !== -1) return u$14.level;
			let Oe$6 = 0;
			for (let Me$6 of xe$4(u$14)) Oe$6 = Math.max(Oe$6, be$5(Me$6) + 1);
			return u$14.level = Oe$6;
		}
		function We$2(u$14) {
			let Oe$6 = 0;
			for (let Me$6 of K$6(u$14)) Oe$6 = Math.max(Oe$6, We$2(Me$6));
			return Oe$6 + 1;
		}
		function et$5(u$14) {
			let Oe$6 = L$4(Array(u$14), 0);
			for (let Me$6 of Tt$7) Oe$6[Me$6.level] = Math.max(Oe$6[Me$6.level], Me$6.text.length);
			return Oe$6;
		}
		function Ye$6(u$14, Oe$6) {
			if (u$14.lane === -1) {
				u$14.lane = Oe$6, u$14.endLane = Oe$6;
				let Me$6 = K$6(u$14);
				for (let U$4 = 0; U$4 < Me$6.length; U$4++) {
					U$4 > 0 && Oe$6++;
					let Fe$4 = Me$6[U$4];
					Ye$6(Fe$4, Oe$6), Fe$4.endLane > u$14.endLane && (Oe$6 = Fe$4.endLane);
				}
				u$14.endLane = Oe$6;
			}
		}
		function Ee$4(u$14) {
			if (u$14 & 2) return "Start";
			if (u$14 & 4) return "Branch";
			if (u$14 & 8) return "Loop";
			if (u$14 & 16) return "Assignment";
			if (u$14 & 32) return "True";
			if (u$14 & 64) return "False";
			if (u$14 & 128) return "SwitchClause";
			if (u$14 & 256) return "ArrayMutation";
			if (u$14 & 512) return "Call";
			if (u$14 & 1024) return "ReduceLabel";
			if (u$14 & 1) return "Unreachable";
			throw new Error();
		}
		function Sn$5(u$14) {
			let Oe$6 = gi$1(u$14);
			return qd(Oe$6, u$14, !1);
		}
		function rt$5(u$14, Oe$6) {
			let Me$6 = Ee$4(u$14.flags);
			if (Oe$6 && (Me$6 = `${Me$6}#${me$5(u$14)}`), Yn$5(u$14)) {
				let U$4 = [], { switchStatement: Fe$4, clauseStart: sn$4, clauseEnd: Ve$5 } = u$14.node;
				for (let $e$5 = sn$4; $e$5 < Ve$5; $e$5++) {
					let Nt$6 = Fe$4.caseBlock.clauses[$e$5];
					y6(Nt$6) ? U$4.push("default") : U$4.push(Sn$5(Nt$6.expression));
				}
				Me$6 += ` (${U$4.join(", ")})`;
			} else Q$4(u$14) && u$14.node && (Me$6 += ` (${Sn$5(u$14.node)})`);
			return Oe$6 === "circularity" ? `Circular(${Me$6})` : Me$6;
		}
		function un$5() {
			let u$14 = Jn$5.length, Oe$6 = qy(Tt$7, 0, (Ve$5) => Ve$5.lane) + 1, Me$6 = L$4(Array(Oe$6), ""), U$4 = Jn$5.map(() => Array(Oe$6)), Fe$4 = Jn$5.map(() => L$4(Array(Oe$6), 0));
			for (let Ve$5 of Tt$7) {
				U$4[Ve$5.level][Ve$5.lane] = Ve$5;
				let $e$5 = K$6(Ve$5);
				for (let kt$6 = 0; kt$6 < $e$5.length; kt$6++) {
					let It$7 = $e$5[kt$6], qt$5 = 8;
					It$7.lane === Ve$5.lane && (qt$5 |= 4), kt$6 > 0 && (qt$5 |= 1), kt$6 < $e$5.length - 1 && (qt$5 |= 2), Fe$4[Ve$5.level][It$7.lane] |= qt$5;
				}
				$e$5.length === 0 && (Fe$4[Ve$5.level][Ve$5.lane] |= 16);
				let Nt$6 = xe$4(Ve$5);
				for (let kt$6 = 0; kt$6 < Nt$6.length; kt$6++) {
					let It$7 = Nt$6[kt$6], qt$5 = 4;
					kt$6 > 0 && (qt$5 |= 1), kt$6 < Nt$6.length - 1 && (qt$5 |= 2), Fe$4[Ve$5.level - 1][It$7.lane] |= qt$5;
				}
			}
			for (let Ve$5 = 0; Ve$5 < u$14; Ve$5++) for (let $e$5 = 0; $e$5 < Oe$6; $e$5++) {
				let Nt$6 = Ve$5 > 0 ? Fe$4[Ve$5 - 1][$e$5] : 0, kt$6 = $e$5 > 0 ? Fe$4[Ve$5][$e$5 - 1] : 0, It$7 = Fe$4[Ve$5][$e$5];
				It$7 || (Nt$6 & 8 && (It$7 |= 12), kt$6 & 2 && (It$7 |= 3), Fe$4[Ve$5][$e$5] = It$7);
			}
			for (let Ve$5 = 0; Ve$5 < u$14; Ve$5++) for (let $e$5 = 0; $e$5 < Me$6.length; $e$5++) {
				let Nt$6 = Fe$4[Ve$5][$e$5], kt$6 = Nt$6 & 4 ? "─" : " ", It$7 = U$4[Ve$5][$e$5];
				It$7 ? (sn$4($e$5, It$7.text), Ve$5 < u$14 - 1 && (sn$4($e$5, " "), sn$4($e$5, qe$6(kt$6, Jn$5[Ve$5] - It$7.text.length)))) : Ve$5 < u$14 - 1 && sn$4($e$5, qe$6(kt$6, Jn$5[Ve$5] + 1)), sn$4($e$5, ti$7(Nt$6)), sn$4($e$5, Nt$6 & 8 && Ve$5 < u$14 - 1 && !U$4[Ve$5 + 1][$e$5] ? "─" : " ");
			}
			return `
${Me$6.join(`
`)}
`;
			function sn$4(Ve$5, $e$5) {
				Me$6[Ve$5] += $e$5;
			}
		}
		function ti$7(u$14) {
			switch (u$14) {
				case 3: return "│";
				case 12: return "─";
				case 5: return "╯";
				case 9: return "╰";
				case 6: return "╮";
				case 10: return "╭";
				case 7: return "┤";
				case 11: return "├";
				case 13: return "┴";
				case 14: return "┬";
				case 15: return "╫";
			}
			return " ";
		}
		function L$4(u$14, Oe$6) {
			if (u$14.fill) u$14.fill(Oe$6);
			else for (let Me$6 = 0; Me$6 < u$14.length; Me$6++) u$14[Me$6] = Oe$6;
			return u$14;
		}
		function qe$6(u$14, Oe$6) {
			if (u$14.repeat) return Oe$6 > 0 ? u$14.repeat(Oe$6) : "";
			let Me$6 = "";
			for (; Me$6.length < Oe$6;) Me$6 += u$14;
			return Me$6;
		}
	}
	e$4.formatControlFlowGraph = gr$4;
})(B$2 || (B$2 = {}));
Date.now;
var Ad = () => {}, Yy = () => {}, cl, Ie$2 = ((e$4) => (e$4[e$4.Unknown = 0] = "Unknown", e$4[e$4.EndOfFileToken = 1] = "EndOfFileToken", e$4[e$4.SingleLineCommentTrivia = 2] = "SingleLineCommentTrivia", e$4[e$4.MultiLineCommentTrivia = 3] = "MultiLineCommentTrivia", e$4[e$4.NewLineTrivia = 4] = "NewLineTrivia", e$4[e$4.WhitespaceTrivia = 5] = "WhitespaceTrivia", e$4[e$4.ShebangTrivia = 6] = "ShebangTrivia", e$4[e$4.ConflictMarkerTrivia = 7] = "ConflictMarkerTrivia", e$4[e$4.NonTextFileMarkerTrivia = 8] = "NonTextFileMarkerTrivia", e$4[e$4.NumericLiteral = 9] = "NumericLiteral", e$4[e$4.BigIntLiteral = 10] = "BigIntLiteral", e$4[e$4.StringLiteral = 11] = "StringLiteral", e$4[e$4.JsxText = 12] = "JsxText", e$4[e$4.JsxTextAllWhiteSpaces = 13] = "JsxTextAllWhiteSpaces", e$4[e$4.RegularExpressionLiteral = 14] = "RegularExpressionLiteral", e$4[e$4.NoSubstitutionTemplateLiteral = 15] = "NoSubstitutionTemplateLiteral", e$4[e$4.TemplateHead = 16] = "TemplateHead", e$4[e$4.TemplateMiddle = 17] = "TemplateMiddle", e$4[e$4.TemplateTail = 18] = "TemplateTail", e$4[e$4.OpenBraceToken = 19] = "OpenBraceToken", e$4[e$4.CloseBraceToken = 20] = "CloseBraceToken", e$4[e$4.OpenParenToken = 21] = "OpenParenToken", e$4[e$4.CloseParenToken = 22] = "CloseParenToken", e$4[e$4.OpenBracketToken = 23] = "OpenBracketToken", e$4[e$4.CloseBracketToken = 24] = "CloseBracketToken", e$4[e$4.DotToken = 25] = "DotToken", e$4[e$4.DotDotDotToken = 26] = "DotDotDotToken", e$4[e$4.SemicolonToken = 27] = "SemicolonToken", e$4[e$4.CommaToken = 28] = "CommaToken", e$4[e$4.QuestionDotToken = 29] = "QuestionDotToken", e$4[e$4.LessThanToken = 30] = "LessThanToken", e$4[e$4.LessThanSlashToken = 31] = "LessThanSlashToken", e$4[e$4.GreaterThanToken = 32] = "GreaterThanToken", e$4[e$4.LessThanEqualsToken = 33] = "LessThanEqualsToken", e$4[e$4.GreaterThanEqualsToken = 34] = "GreaterThanEqualsToken", e$4[e$4.EqualsEqualsToken = 35] = "EqualsEqualsToken", e$4[e$4.ExclamationEqualsToken = 36] = "ExclamationEqualsToken", e$4[e$4.EqualsEqualsEqualsToken = 37] = "EqualsEqualsEqualsToken", e$4[e$4.ExclamationEqualsEqualsToken = 38] = "ExclamationEqualsEqualsToken", e$4[e$4.EqualsGreaterThanToken = 39] = "EqualsGreaterThanToken", e$4[e$4.PlusToken = 40] = "PlusToken", e$4[e$4.MinusToken = 41] = "MinusToken", e$4[e$4.AsteriskToken = 42] = "AsteriskToken", e$4[e$4.AsteriskAsteriskToken = 43] = "AsteriskAsteriskToken", e$4[e$4.SlashToken = 44] = "SlashToken", e$4[e$4.PercentToken = 45] = "PercentToken", e$4[e$4.PlusPlusToken = 46] = "PlusPlusToken", e$4[e$4.MinusMinusToken = 47] = "MinusMinusToken", e$4[e$4.LessThanLessThanToken = 48] = "LessThanLessThanToken", e$4[e$4.GreaterThanGreaterThanToken = 49] = "GreaterThanGreaterThanToken", e$4[e$4.GreaterThanGreaterThanGreaterThanToken = 50] = "GreaterThanGreaterThanGreaterThanToken", e$4[e$4.AmpersandToken = 51] = "AmpersandToken", e$4[e$4.BarToken = 52] = "BarToken", e$4[e$4.CaretToken = 53] = "CaretToken", e$4[e$4.ExclamationToken = 54] = "ExclamationToken", e$4[e$4.TildeToken = 55] = "TildeToken", e$4[e$4.AmpersandAmpersandToken = 56] = "AmpersandAmpersandToken", e$4[e$4.BarBarToken = 57] = "BarBarToken", e$4[e$4.QuestionToken = 58] = "QuestionToken", e$4[e$4.ColonToken = 59] = "ColonToken", e$4[e$4.AtToken = 60] = "AtToken", e$4[e$4.QuestionQuestionToken = 61] = "QuestionQuestionToken", e$4[e$4.BacktickToken = 62] = "BacktickToken", e$4[e$4.HashToken = 63] = "HashToken", e$4[e$4.EqualsToken = 64] = "EqualsToken", e$4[e$4.PlusEqualsToken = 65] = "PlusEqualsToken", e$4[e$4.MinusEqualsToken = 66] = "MinusEqualsToken", e$4[e$4.AsteriskEqualsToken = 67] = "AsteriskEqualsToken", e$4[e$4.AsteriskAsteriskEqualsToken = 68] = "AsteriskAsteriskEqualsToken", e$4[e$4.SlashEqualsToken = 69] = "SlashEqualsToken", e$4[e$4.PercentEqualsToken = 70] = "PercentEqualsToken", e$4[e$4.LessThanLessThanEqualsToken = 71] = "LessThanLessThanEqualsToken", e$4[e$4.GreaterThanGreaterThanEqualsToken = 72] = "GreaterThanGreaterThanEqualsToken", e$4[e$4.GreaterThanGreaterThanGreaterThanEqualsToken = 73] = "GreaterThanGreaterThanGreaterThanEqualsToken", e$4[e$4.AmpersandEqualsToken = 74] = "AmpersandEqualsToken", e$4[e$4.BarEqualsToken = 75] = "BarEqualsToken", e$4[e$4.BarBarEqualsToken = 76] = "BarBarEqualsToken", e$4[e$4.AmpersandAmpersandEqualsToken = 77] = "AmpersandAmpersandEqualsToken", e$4[e$4.QuestionQuestionEqualsToken = 78] = "QuestionQuestionEqualsToken", e$4[e$4.CaretEqualsToken = 79] = "CaretEqualsToken", e$4[e$4.Identifier = 80] = "Identifier", e$4[e$4.PrivateIdentifier = 81] = "PrivateIdentifier", e$4[e$4.JSDocCommentTextToken = 82] = "JSDocCommentTextToken", e$4[e$4.BreakKeyword = 83] = "BreakKeyword", e$4[e$4.CaseKeyword = 84] = "CaseKeyword", e$4[e$4.CatchKeyword = 85] = "CatchKeyword", e$4[e$4.ClassKeyword = 86] = "ClassKeyword", e$4[e$4.ConstKeyword = 87] = "ConstKeyword", e$4[e$4.ContinueKeyword = 88] = "ContinueKeyword", e$4[e$4.DebuggerKeyword = 89] = "DebuggerKeyword", e$4[e$4.DefaultKeyword = 90] = "DefaultKeyword", e$4[e$4.DeleteKeyword = 91] = "DeleteKeyword", e$4[e$4.DoKeyword = 92] = "DoKeyword", e$4[e$4.ElseKeyword = 93] = "ElseKeyword", e$4[e$4.EnumKeyword = 94] = "EnumKeyword", e$4[e$4.ExportKeyword = 95] = "ExportKeyword", e$4[e$4.ExtendsKeyword = 96] = "ExtendsKeyword", e$4[e$4.FalseKeyword = 97] = "FalseKeyword", e$4[e$4.FinallyKeyword = 98] = "FinallyKeyword", e$4[e$4.ForKeyword = 99] = "ForKeyword", e$4[e$4.FunctionKeyword = 100] = "FunctionKeyword", e$4[e$4.IfKeyword = 101] = "IfKeyword", e$4[e$4.ImportKeyword = 102] = "ImportKeyword", e$4[e$4.InKeyword = 103] = "InKeyword", e$4[e$4.InstanceOfKeyword = 104] = "InstanceOfKeyword", e$4[e$4.NewKeyword = 105] = "NewKeyword", e$4[e$4.NullKeyword = 106] = "NullKeyword", e$4[e$4.ReturnKeyword = 107] = "ReturnKeyword", e$4[e$4.SuperKeyword = 108] = "SuperKeyword", e$4[e$4.SwitchKeyword = 109] = "SwitchKeyword", e$4[e$4.ThisKeyword = 110] = "ThisKeyword", e$4[e$4.ThrowKeyword = 111] = "ThrowKeyword", e$4[e$4.TrueKeyword = 112] = "TrueKeyword", e$4[e$4.TryKeyword = 113] = "TryKeyword", e$4[e$4.TypeOfKeyword = 114] = "TypeOfKeyword", e$4[e$4.VarKeyword = 115] = "VarKeyword", e$4[e$4.VoidKeyword = 116] = "VoidKeyword", e$4[e$4.WhileKeyword = 117] = "WhileKeyword", e$4[e$4.WithKeyword = 118] = "WithKeyword", e$4[e$4.ImplementsKeyword = 119] = "ImplementsKeyword", e$4[e$4.InterfaceKeyword = 120] = "InterfaceKeyword", e$4[e$4.LetKeyword = 121] = "LetKeyword", e$4[e$4.PackageKeyword = 122] = "PackageKeyword", e$4[e$4.PrivateKeyword = 123] = "PrivateKeyword", e$4[e$4.ProtectedKeyword = 124] = "ProtectedKeyword", e$4[e$4.PublicKeyword = 125] = "PublicKeyword", e$4[e$4.StaticKeyword = 126] = "StaticKeyword", e$4[e$4.YieldKeyword = 127] = "YieldKeyword", e$4[e$4.AbstractKeyword = 128] = "AbstractKeyword", e$4[e$4.AccessorKeyword = 129] = "AccessorKeyword", e$4[e$4.AsKeyword = 130] = "AsKeyword", e$4[e$4.AssertsKeyword = 131] = "AssertsKeyword", e$4[e$4.AssertKeyword = 132] = "AssertKeyword", e$4[e$4.AnyKeyword = 133] = "AnyKeyword", e$4[e$4.AsyncKeyword = 134] = "AsyncKeyword", e$4[e$4.AwaitKeyword = 135] = "AwaitKeyword", e$4[e$4.BooleanKeyword = 136] = "BooleanKeyword", e$4[e$4.ConstructorKeyword = 137] = "ConstructorKeyword", e$4[e$4.DeclareKeyword = 138] = "DeclareKeyword", e$4[e$4.GetKeyword = 139] = "GetKeyword", e$4[e$4.InferKeyword = 140] = "InferKeyword", e$4[e$4.IntrinsicKeyword = 141] = "IntrinsicKeyword", e$4[e$4.IsKeyword = 142] = "IsKeyword", e$4[e$4.KeyOfKeyword = 143] = "KeyOfKeyword", e$4[e$4.ModuleKeyword = 144] = "ModuleKeyword", e$4[e$4.NamespaceKeyword = 145] = "NamespaceKeyword", e$4[e$4.NeverKeyword = 146] = "NeverKeyword", e$4[e$4.OutKeyword = 147] = "OutKeyword", e$4[e$4.ReadonlyKeyword = 148] = "ReadonlyKeyword", e$4[e$4.RequireKeyword = 149] = "RequireKeyword", e$4[e$4.NumberKeyword = 150] = "NumberKeyword", e$4[e$4.ObjectKeyword = 151] = "ObjectKeyword", e$4[e$4.SatisfiesKeyword = 152] = "SatisfiesKeyword", e$4[e$4.SetKeyword = 153] = "SetKeyword", e$4[e$4.StringKeyword = 154] = "StringKeyword", e$4[e$4.SymbolKeyword = 155] = "SymbolKeyword", e$4[e$4.TypeKeyword = 156] = "TypeKeyword", e$4[e$4.UndefinedKeyword = 157] = "UndefinedKeyword", e$4[e$4.UniqueKeyword = 158] = "UniqueKeyword", e$4[e$4.UnknownKeyword = 159] = "UnknownKeyword", e$4[e$4.UsingKeyword = 160] = "UsingKeyword", e$4[e$4.FromKeyword = 161] = "FromKeyword", e$4[e$4.GlobalKeyword = 162] = "GlobalKeyword", e$4[e$4.BigIntKeyword = 163] = "BigIntKeyword", e$4[e$4.OverrideKeyword = 164] = "OverrideKeyword", e$4[e$4.OfKeyword = 165] = "OfKeyword", e$4[e$4.QualifiedName = 166] = "QualifiedName", e$4[e$4.ComputedPropertyName = 167] = "ComputedPropertyName", e$4[e$4.TypeParameter = 168] = "TypeParameter", e$4[e$4.Parameter = 169] = "Parameter", e$4[e$4.Decorator = 170] = "Decorator", e$4[e$4.PropertySignature = 171] = "PropertySignature", e$4[e$4.PropertyDeclaration = 172] = "PropertyDeclaration", e$4[e$4.MethodSignature = 173] = "MethodSignature", e$4[e$4.MethodDeclaration = 174] = "MethodDeclaration", e$4[e$4.ClassStaticBlockDeclaration = 175] = "ClassStaticBlockDeclaration", e$4[e$4.Constructor = 176] = "Constructor", e$4[e$4.GetAccessor = 177] = "GetAccessor", e$4[e$4.SetAccessor = 178] = "SetAccessor", e$4[e$4.CallSignature = 179] = "CallSignature", e$4[e$4.ConstructSignature = 180] = "ConstructSignature", e$4[e$4.IndexSignature = 181] = "IndexSignature", e$4[e$4.TypePredicate = 182] = "TypePredicate", e$4[e$4.TypeReference = 183] = "TypeReference", e$4[e$4.FunctionType = 184] = "FunctionType", e$4[e$4.ConstructorType = 185] = "ConstructorType", e$4[e$4.TypeQuery = 186] = "TypeQuery", e$4[e$4.TypeLiteral = 187] = "TypeLiteral", e$4[e$4.ArrayType = 188] = "ArrayType", e$4[e$4.TupleType = 189] = "TupleType", e$4[e$4.OptionalType = 190] = "OptionalType", e$4[e$4.RestType = 191] = "RestType", e$4[e$4.UnionType = 192] = "UnionType", e$4[e$4.IntersectionType = 193] = "IntersectionType", e$4[e$4.ConditionalType = 194] = "ConditionalType", e$4[e$4.InferType = 195] = "InferType", e$4[e$4.ParenthesizedType = 196] = "ParenthesizedType", e$4[e$4.ThisType = 197] = "ThisType", e$4[e$4.TypeOperator = 198] = "TypeOperator", e$4[e$4.IndexedAccessType = 199] = "IndexedAccessType", e$4[e$4.MappedType = 200] = "MappedType", e$4[e$4.LiteralType = 201] = "LiteralType", e$4[e$4.NamedTupleMember = 202] = "NamedTupleMember", e$4[e$4.TemplateLiteralType = 203] = "TemplateLiteralType", e$4[e$4.TemplateLiteralTypeSpan = 204] = "TemplateLiteralTypeSpan", e$4[e$4.ImportType = 205] = "ImportType", e$4[e$4.ObjectBindingPattern = 206] = "ObjectBindingPattern", e$4[e$4.ArrayBindingPattern = 207] = "ArrayBindingPattern", e$4[e$4.BindingElement = 208] = "BindingElement", e$4[e$4.ArrayLiteralExpression = 209] = "ArrayLiteralExpression", e$4[e$4.ObjectLiteralExpression = 210] = "ObjectLiteralExpression", e$4[e$4.PropertyAccessExpression = 211] = "PropertyAccessExpression", e$4[e$4.ElementAccessExpression = 212] = "ElementAccessExpression", e$4[e$4.CallExpression = 213] = "CallExpression", e$4[e$4.NewExpression = 214] = "NewExpression", e$4[e$4.TaggedTemplateExpression = 215] = "TaggedTemplateExpression", e$4[e$4.TypeAssertionExpression = 216] = "TypeAssertionExpression", e$4[e$4.ParenthesizedExpression = 217] = "ParenthesizedExpression", e$4[e$4.FunctionExpression = 218] = "FunctionExpression", e$4[e$4.ArrowFunction = 219] = "ArrowFunction", e$4[e$4.DeleteExpression = 220] = "DeleteExpression", e$4[e$4.TypeOfExpression = 221] = "TypeOfExpression", e$4[e$4.VoidExpression = 222] = "VoidExpression", e$4[e$4.AwaitExpression = 223] = "AwaitExpression", e$4[e$4.PrefixUnaryExpression = 224] = "PrefixUnaryExpression", e$4[e$4.PostfixUnaryExpression = 225] = "PostfixUnaryExpression", e$4[e$4.BinaryExpression = 226] = "BinaryExpression", e$4[e$4.ConditionalExpression = 227] = "ConditionalExpression", e$4[e$4.TemplateExpression = 228] = "TemplateExpression", e$4[e$4.YieldExpression = 229] = "YieldExpression", e$4[e$4.SpreadElement = 230] = "SpreadElement", e$4[e$4.ClassExpression = 231] = "ClassExpression", e$4[e$4.OmittedExpression = 232] = "OmittedExpression", e$4[e$4.ExpressionWithTypeArguments = 233] = "ExpressionWithTypeArguments", e$4[e$4.AsExpression = 234] = "AsExpression", e$4[e$4.NonNullExpression = 235] = "NonNullExpression", e$4[e$4.MetaProperty = 236] = "MetaProperty", e$4[e$4.SyntheticExpression = 237] = "SyntheticExpression", e$4[e$4.SatisfiesExpression = 238] = "SatisfiesExpression", e$4[e$4.TemplateSpan = 239] = "TemplateSpan", e$4[e$4.SemicolonClassElement = 240] = "SemicolonClassElement", e$4[e$4.Block = 241] = "Block", e$4[e$4.EmptyStatement = 242] = "EmptyStatement", e$4[e$4.VariableStatement = 243] = "VariableStatement", e$4[e$4.ExpressionStatement = 244] = "ExpressionStatement", e$4[e$4.IfStatement = 245] = "IfStatement", e$4[e$4.DoStatement = 246] = "DoStatement", e$4[e$4.WhileStatement = 247] = "WhileStatement", e$4[e$4.ForStatement = 248] = "ForStatement", e$4[e$4.ForInStatement = 249] = "ForInStatement", e$4[e$4.ForOfStatement = 250] = "ForOfStatement", e$4[e$4.ContinueStatement = 251] = "ContinueStatement", e$4[e$4.BreakStatement = 252] = "BreakStatement", e$4[e$4.ReturnStatement = 253] = "ReturnStatement", e$4[e$4.WithStatement = 254] = "WithStatement", e$4[e$4.SwitchStatement = 255] = "SwitchStatement", e$4[e$4.LabeledStatement = 256] = "LabeledStatement", e$4[e$4.ThrowStatement = 257] = "ThrowStatement", e$4[e$4.TryStatement = 258] = "TryStatement", e$4[e$4.DebuggerStatement = 259] = "DebuggerStatement", e$4[e$4.VariableDeclaration = 260] = "VariableDeclaration", e$4[e$4.VariableDeclarationList = 261] = "VariableDeclarationList", e$4[e$4.FunctionDeclaration = 262] = "FunctionDeclaration", e$4[e$4.ClassDeclaration = 263] = "ClassDeclaration", e$4[e$4.InterfaceDeclaration = 264] = "InterfaceDeclaration", e$4[e$4.TypeAliasDeclaration = 265] = "TypeAliasDeclaration", e$4[e$4.EnumDeclaration = 266] = "EnumDeclaration", e$4[e$4.ModuleDeclaration = 267] = "ModuleDeclaration", e$4[e$4.ModuleBlock = 268] = "ModuleBlock", e$4[e$4.CaseBlock = 269] = "CaseBlock", e$4[e$4.NamespaceExportDeclaration = 270] = "NamespaceExportDeclaration", e$4[e$4.ImportEqualsDeclaration = 271] = "ImportEqualsDeclaration", e$4[e$4.ImportDeclaration = 272] = "ImportDeclaration", e$4[e$4.ImportClause = 273] = "ImportClause", e$4[e$4.NamespaceImport = 274] = "NamespaceImport", e$4[e$4.NamedImports = 275] = "NamedImports", e$4[e$4.ImportSpecifier = 276] = "ImportSpecifier", e$4[e$4.ExportAssignment = 277] = "ExportAssignment", e$4[e$4.ExportDeclaration = 278] = "ExportDeclaration", e$4[e$4.NamedExports = 279] = "NamedExports", e$4[e$4.NamespaceExport = 280] = "NamespaceExport", e$4[e$4.ExportSpecifier = 281] = "ExportSpecifier", e$4[e$4.MissingDeclaration = 282] = "MissingDeclaration", e$4[e$4.ExternalModuleReference = 283] = "ExternalModuleReference", e$4[e$4.JsxElement = 284] = "JsxElement", e$4[e$4.JsxSelfClosingElement = 285] = "JsxSelfClosingElement", e$4[e$4.JsxOpeningElement = 286] = "JsxOpeningElement", e$4[e$4.JsxClosingElement = 287] = "JsxClosingElement", e$4[e$4.JsxFragment = 288] = "JsxFragment", e$4[e$4.JsxOpeningFragment = 289] = "JsxOpeningFragment", e$4[e$4.JsxClosingFragment = 290] = "JsxClosingFragment", e$4[e$4.JsxAttribute = 291] = "JsxAttribute", e$4[e$4.JsxAttributes = 292] = "JsxAttributes", e$4[e$4.JsxSpreadAttribute = 293] = "JsxSpreadAttribute", e$4[e$4.JsxExpression = 294] = "JsxExpression", e$4[e$4.JsxNamespacedName = 295] = "JsxNamespacedName", e$4[e$4.CaseClause = 296] = "CaseClause", e$4[e$4.DefaultClause = 297] = "DefaultClause", e$4[e$4.HeritageClause = 298] = "HeritageClause", e$4[e$4.CatchClause = 299] = "CatchClause", e$4[e$4.ImportAttributes = 300] = "ImportAttributes", e$4[e$4.ImportAttribute = 301] = "ImportAttribute", e$4[e$4.AssertClause = 300] = "AssertClause", e$4[e$4.AssertEntry = 301] = "AssertEntry", e$4[e$4.ImportTypeAssertionContainer = 302] = "ImportTypeAssertionContainer", e$4[e$4.PropertyAssignment = 303] = "PropertyAssignment", e$4[e$4.ShorthandPropertyAssignment = 304] = "ShorthandPropertyAssignment", e$4[e$4.SpreadAssignment = 305] = "SpreadAssignment", e$4[e$4.EnumMember = 306] = "EnumMember", e$4[e$4.SourceFile = 307] = "SourceFile", e$4[e$4.Bundle = 308] = "Bundle", e$4[e$4.JSDocTypeExpression = 309] = "JSDocTypeExpression", e$4[e$4.JSDocNameReference = 310] = "JSDocNameReference", e$4[e$4.JSDocMemberName = 311] = "JSDocMemberName", e$4[e$4.JSDocAllType = 312] = "JSDocAllType", e$4[e$4.JSDocUnknownType = 313] = "JSDocUnknownType", e$4[e$4.JSDocNullableType = 314] = "JSDocNullableType", e$4[e$4.JSDocNonNullableType = 315] = "JSDocNonNullableType", e$4[e$4.JSDocOptionalType = 316] = "JSDocOptionalType", e$4[e$4.JSDocFunctionType = 317] = "JSDocFunctionType", e$4[e$4.JSDocVariadicType = 318] = "JSDocVariadicType", e$4[e$4.JSDocNamepathType = 319] = "JSDocNamepathType", e$4[e$4.JSDoc = 320] = "JSDoc", e$4[e$4.JSDocComment = 320] = "JSDocComment", e$4[e$4.JSDocText = 321] = "JSDocText", e$4[e$4.JSDocTypeLiteral = 322] = "JSDocTypeLiteral", e$4[e$4.JSDocSignature = 323] = "JSDocSignature", e$4[e$4.JSDocLink = 324] = "JSDocLink", e$4[e$4.JSDocLinkCode = 325] = "JSDocLinkCode", e$4[e$4.JSDocLinkPlain = 326] = "JSDocLinkPlain", e$4[e$4.JSDocTag = 327] = "JSDocTag", e$4[e$4.JSDocAugmentsTag = 328] = "JSDocAugmentsTag", e$4[e$4.JSDocImplementsTag = 329] = "JSDocImplementsTag", e$4[e$4.JSDocAuthorTag = 330] = "JSDocAuthorTag", e$4[e$4.JSDocDeprecatedTag = 331] = "JSDocDeprecatedTag", e$4[e$4.JSDocClassTag = 332] = "JSDocClassTag", e$4[e$4.JSDocPublicTag = 333] = "JSDocPublicTag", e$4[e$4.JSDocPrivateTag = 334] = "JSDocPrivateTag", e$4[e$4.JSDocProtectedTag = 335] = "JSDocProtectedTag", e$4[e$4.JSDocReadonlyTag = 336] = "JSDocReadonlyTag", e$4[e$4.JSDocOverrideTag = 337] = "JSDocOverrideTag", e$4[e$4.JSDocCallbackTag = 338] = "JSDocCallbackTag", e$4[e$4.JSDocOverloadTag = 339] = "JSDocOverloadTag", e$4[e$4.JSDocEnumTag = 340] = "JSDocEnumTag", e$4[e$4.JSDocParameterTag = 341] = "JSDocParameterTag", e$4[e$4.JSDocReturnTag = 342] = "JSDocReturnTag", e$4[e$4.JSDocThisTag = 343] = "JSDocThisTag", e$4[e$4.JSDocTypeTag = 344] = "JSDocTypeTag", e$4[e$4.JSDocTemplateTag = 345] = "JSDocTemplateTag", e$4[e$4.JSDocTypedefTag = 346] = "JSDocTypedefTag", e$4[e$4.JSDocSeeTag = 347] = "JSDocSeeTag", e$4[e$4.JSDocPropertyTag = 348] = "JSDocPropertyTag", e$4[e$4.JSDocThrowsTag = 349] = "JSDocThrowsTag", e$4[e$4.JSDocSatisfiesTag = 350] = "JSDocSatisfiesTag", e$4[e$4.JSDocImportTag = 351] = "JSDocImportTag", e$4[e$4.SyntaxList = 352] = "SyntaxList", e$4[e$4.NotEmittedStatement = 353] = "NotEmittedStatement", e$4[e$4.NotEmittedTypeElement = 354] = "NotEmittedTypeElement", e$4[e$4.PartiallyEmittedExpression = 355] = "PartiallyEmittedExpression", e$4[e$4.CommaListExpression = 356] = "CommaListExpression", e$4[e$4.SyntheticReferenceExpression = 357] = "SyntheticReferenceExpression", e$4[e$4.Count = 358] = "Count", e$4[e$4.FirstAssignment = 64] = "FirstAssignment", e$4[e$4.LastAssignment = 79] = "LastAssignment", e$4[e$4.FirstCompoundAssignment = 65] = "FirstCompoundAssignment", e$4[e$4.LastCompoundAssignment = 79] = "LastCompoundAssignment", e$4[e$4.FirstReservedWord = 83] = "FirstReservedWord", e$4[e$4.LastReservedWord = 118] = "LastReservedWord", e$4[e$4.FirstKeyword = 83] = "FirstKeyword", e$4[e$4.LastKeyword = 165] = "LastKeyword", e$4[e$4.FirstFutureReservedWord = 119] = "FirstFutureReservedWord", e$4[e$4.LastFutureReservedWord = 127] = "LastFutureReservedWord", e$4[e$4.FirstTypeNode = 182] = "FirstTypeNode", e$4[e$4.LastTypeNode = 205] = "LastTypeNode", e$4[e$4.FirstPunctuation = 19] = "FirstPunctuation", e$4[e$4.LastPunctuation = 79] = "LastPunctuation", e$4[e$4.FirstToken = 0] = "FirstToken", e$4[e$4.LastToken = 165] = "LastToken", e$4[e$4.FirstTriviaToken = 2] = "FirstTriviaToken", e$4[e$4.LastTriviaToken = 7] = "LastTriviaToken", e$4[e$4.FirstLiteralToken = 9] = "FirstLiteralToken", e$4[e$4.LastLiteralToken = 15] = "LastLiteralToken", e$4[e$4.FirstTemplateToken = 15] = "FirstTemplateToken", e$4[e$4.LastTemplateToken = 18] = "LastTemplateToken", e$4[e$4.FirstBinaryOperator = 30] = "FirstBinaryOperator", e$4[e$4.LastBinaryOperator = 79] = "LastBinaryOperator", e$4[e$4.FirstStatement = 243] = "FirstStatement", e$4[e$4.LastStatement = 259] = "LastStatement", e$4[e$4.FirstNode = 166] = "FirstNode", e$4[e$4.FirstJSDocNode = 309] = "FirstJSDocNode", e$4[e$4.LastJSDocNode = 351] = "LastJSDocNode", e$4[e$4.FirstJSDocTagNode = 327] = "FirstJSDocTagNode", e$4[e$4.LastJSDocTagNode = 351] = "LastJSDocTagNode", e$4[e$4.FirstContextualKeyword = 128] = "FirstContextualKeyword", e$4[e$4.LastContextualKeyword = 165] = "LastContextualKeyword", e$4))(Ie$2 || {}), bn$2 = ((e$4) => (e$4[e$4.None = 0] = "None", e$4[e$4.Let = 1] = "Let", e$4[e$4.Const = 2] = "Const", e$4[e$4.Using = 4] = "Using", e$4[e$4.AwaitUsing = 6] = "AwaitUsing", e$4[e$4.NestedNamespace = 8] = "NestedNamespace", e$4[e$4.Synthesized = 16] = "Synthesized", e$4[e$4.Namespace = 32] = "Namespace", e$4[e$4.OptionalChain = 64] = "OptionalChain", e$4[e$4.ExportContext = 128] = "ExportContext", e$4[e$4.ContainsThis = 256] = "ContainsThis", e$4[e$4.HasImplicitReturn = 512] = "HasImplicitReturn", e$4[e$4.HasExplicitReturn = 1024] = "HasExplicitReturn", e$4[e$4.GlobalAugmentation = 2048] = "GlobalAugmentation", e$4[e$4.HasAsyncFunctions = 4096] = "HasAsyncFunctions", e$4[e$4.DisallowInContext = 8192] = "DisallowInContext", e$4[e$4.YieldContext = 16384] = "YieldContext", e$4[e$4.DecoratorContext = 32768] = "DecoratorContext", e$4[e$4.AwaitContext = 65536] = "AwaitContext", e$4[e$4.DisallowConditionalTypesContext = 131072] = "DisallowConditionalTypesContext", e$4[e$4.ThisNodeHasError = 262144] = "ThisNodeHasError", e$4[e$4.JavaScriptFile = 524288] = "JavaScriptFile", e$4[e$4.ThisNodeOrAnySubNodesHasError = 1048576] = "ThisNodeOrAnySubNodesHasError", e$4[e$4.HasAggregatedChildData = 2097152] = "HasAggregatedChildData", e$4[e$4.PossiblyContainsDynamicImport = 4194304] = "PossiblyContainsDynamicImport", e$4[e$4.PossiblyContainsImportMeta = 8388608] = "PossiblyContainsImportMeta", e$4[e$4.JSDoc = 16777216] = "JSDoc", e$4[e$4.Ambient = 33554432] = "Ambient", e$4[e$4.InWithStatement = 67108864] = "InWithStatement", e$4[e$4.JsonFile = 134217728] = "JsonFile", e$4[e$4.TypeCached = 268435456] = "TypeCached", e$4[e$4.Deprecated = 536870912] = "Deprecated", e$4[e$4.BlockScoped = 7] = "BlockScoped", e$4[e$4.Constant = 6] = "Constant", e$4[e$4.ReachabilityCheckFlags = 1536] = "ReachabilityCheckFlags", e$4[e$4.ReachabilityAndEmitFlags = 5632] = "ReachabilityAndEmitFlags", e$4[e$4.ContextFlags = 101441536] = "ContextFlags", e$4[e$4.TypeExcludesFlags = 81920] = "TypeExcludesFlags", e$4[e$4.PermanentlySetIncrementalFlags = 12582912] = "PermanentlySetIncrementalFlags", e$4[e$4.IdentifierHasExtendedUnicodeEscape = 256] = "IdentifierHasExtendedUnicodeEscape", e$4[e$4.IdentifierIsInJSDocNamespace = 4096] = "IdentifierIsInJSDocNamespace", e$4))(bn$2 || {}), Kp = ((e$4) => (e$4[e$4.None = 0] = "None", e$4[e$4.Public = 1] = "Public", e$4[e$4.Private = 2] = "Private", e$4[e$4.Protected = 4] = "Protected", e$4[e$4.Readonly = 8] = "Readonly", e$4[e$4.Override = 16] = "Override", e$4[e$4.Export = 32] = "Export", e$4[e$4.Abstract = 64] = "Abstract", e$4[e$4.Ambient = 128] = "Ambient", e$4[e$4.Static = 256] = "Static", e$4[e$4.Accessor = 512] = "Accessor", e$4[e$4.Async = 1024] = "Async", e$4[e$4.Default = 2048] = "Default", e$4[e$4.Const = 4096] = "Const", e$4[e$4.In = 8192] = "In", e$4[e$4.Out = 16384] = "Out", e$4[e$4.Decorator = 32768] = "Decorator", e$4[e$4.Deprecated = 65536] = "Deprecated", e$4[e$4.JSDocPublic = 8388608] = "JSDocPublic", e$4[e$4.JSDocPrivate = 16777216] = "JSDocPrivate", e$4[e$4.JSDocProtected = 33554432] = "JSDocProtected", e$4[e$4.JSDocReadonly = 67108864] = "JSDocReadonly", e$4[e$4.JSDocOverride = 134217728] = "JSDocOverride", e$4[e$4.SyntacticOrJSDocModifiers = 31] = "SyntacticOrJSDocModifiers", e$4[e$4.SyntacticOnlyModifiers = 65504] = "SyntacticOnlyModifiers", e$4[e$4.SyntacticModifiers = 65535] = "SyntacticModifiers", e$4[e$4.JSDocCacheOnlyModifiers = 260046848] = "JSDocCacheOnlyModifiers", e$4[e$4.JSDocOnlyModifiers = 65536] = "JSDocOnlyModifiers", e$4[e$4.NonCacheOnlyModifiers = 131071] = "NonCacheOnlyModifiers", e$4[e$4.HasComputedJSDocModifiers = 268435456] = "HasComputedJSDocModifiers", e$4[e$4.HasComputedFlags = 536870912] = "HasComputedFlags", e$4[e$4.AccessibilityModifier = 7] = "AccessibilityModifier", e$4[e$4.ParameterPropertyModifier = 31] = "ParameterPropertyModifier", e$4[e$4.NonPublicAccessibilityModifier = 6] = "NonPublicAccessibilityModifier", e$4[e$4.TypeScriptModifier = 28895] = "TypeScriptModifier", e$4[e$4.ExportDefault = 2080] = "ExportDefault", e$4[e$4.All = 131071] = "All", e$4[e$4.Modifier = 98303] = "Modifier", e$4))(Kp || {});
var Im = ((e$4) => (e$4[e$4.None = 0] = "None", e$4[e$4.Succeeded = 1] = "Succeeded", e$4[e$4.Failed = 2] = "Failed", e$4[e$4.ReportsUnmeasurable = 8] = "ReportsUnmeasurable", e$4[e$4.ReportsUnreliable = 16] = "ReportsUnreliable", e$4[e$4.ReportsMask = 24] = "ReportsMask", e$4[e$4.ComplexityOverflow = 32] = "ComplexityOverflow", e$4[e$4.StackDepthOverflow = 64] = "StackDepthOverflow", e$4[e$4.Overflow = 96] = "Overflow", e$4))(Im || {});
var Mp = ((e$4) => (e$4[e$4.Unreachable = 1] = "Unreachable", e$4[e$4.Start = 2] = "Start", e$4[e$4.BranchLabel = 4] = "BranchLabel", e$4[e$4.LoopLabel = 8] = "LoopLabel", e$4[e$4.Assignment = 16] = "Assignment", e$4[e$4.TrueCondition = 32] = "TrueCondition", e$4[e$4.FalseCondition = 64] = "FalseCondition", e$4[e$4.SwitchClause = 128] = "SwitchClause", e$4[e$4.ArrayMutation = 256] = "ArrayMutation", e$4[e$4.Call = 512] = "Call", e$4[e$4.ReduceLabel = 1024] = "ReduceLabel", e$4[e$4.Referenced = 2048] = "Referenced", e$4[e$4.Shared = 4096] = "Shared", e$4[e$4.Label = 12] = "Label", e$4[e$4.Condition = 96] = "Condition", e$4))(Mp || {});
var Zp = ((e$4) => (e$4[e$4.None = 0] = "None", e$4[e$4.FunctionScopedVariable = 1] = "FunctionScopedVariable", e$4[e$4.BlockScopedVariable = 2] = "BlockScopedVariable", e$4[e$4.Property = 4] = "Property", e$4[e$4.EnumMember = 8] = "EnumMember", e$4[e$4.Function = 16] = "Function", e$4[e$4.Class = 32] = "Class", e$4[e$4.Interface = 64] = "Interface", e$4[e$4.ConstEnum = 128] = "ConstEnum", e$4[e$4.RegularEnum = 256] = "RegularEnum", e$4[e$4.ValueModule = 512] = "ValueModule", e$4[e$4.NamespaceModule = 1024] = "NamespaceModule", e$4[e$4.TypeLiteral = 2048] = "TypeLiteral", e$4[e$4.ObjectLiteral = 4096] = "ObjectLiteral", e$4[e$4.Method = 8192] = "Method", e$4[e$4.Constructor = 16384] = "Constructor", e$4[e$4.GetAccessor = 32768] = "GetAccessor", e$4[e$4.SetAccessor = 65536] = "SetAccessor", e$4[e$4.Signature = 131072] = "Signature", e$4[e$4.TypeParameter = 262144] = "TypeParameter", e$4[e$4.TypeAlias = 524288] = "TypeAlias", e$4[e$4.ExportValue = 1048576] = "ExportValue", e$4[e$4.Alias = 2097152] = "Alias", e$4[e$4.Prototype = 4194304] = "Prototype", e$4[e$4.ExportStar = 8388608] = "ExportStar", e$4[e$4.Optional = 16777216] = "Optional", e$4[e$4.Transient = 33554432] = "Transient", e$4[e$4.Assignment = 67108864] = "Assignment", e$4[e$4.ModuleExports = 134217728] = "ModuleExports", e$4[e$4.All = -1] = "All", e$4[e$4.Enum = 384] = "Enum", e$4[e$4.Variable = 3] = "Variable", e$4[e$4.Value = 111551] = "Value", e$4[e$4.Type = 788968] = "Type", e$4[e$4.Namespace = 1920] = "Namespace", e$4[e$4.Module = 1536] = "Module", e$4[e$4.Accessor = 98304] = "Accessor", e$4[e$4.FunctionScopedVariableExcludes = 111550] = "FunctionScopedVariableExcludes", e$4[e$4.BlockScopedVariableExcludes = 111551] = "BlockScopedVariableExcludes", e$4[e$4.ParameterExcludes = 111551] = "ParameterExcludes", e$4[e$4.PropertyExcludes = 0] = "PropertyExcludes", e$4[e$4.EnumMemberExcludes = 900095] = "EnumMemberExcludes", e$4[e$4.FunctionExcludes = 110991] = "FunctionExcludes", e$4[e$4.ClassExcludes = 899503] = "ClassExcludes", e$4[e$4.InterfaceExcludes = 788872] = "InterfaceExcludes", e$4[e$4.RegularEnumExcludes = 899327] = "RegularEnumExcludes", e$4[e$4.ConstEnumExcludes = 899967] = "ConstEnumExcludes", e$4[e$4.ValueModuleExcludes = 110735] = "ValueModuleExcludes", e$4[e$4.NamespaceModuleExcludes = 0] = "NamespaceModuleExcludes", e$4[e$4.MethodExcludes = 103359] = "MethodExcludes", e$4[e$4.GetAccessorExcludes = 46015] = "GetAccessorExcludes", e$4[e$4.SetAccessorExcludes = 78783] = "SetAccessorExcludes", e$4[e$4.AccessorExcludes = 13247] = "AccessorExcludes", e$4[e$4.TypeParameterExcludes = 526824] = "TypeParameterExcludes", e$4[e$4.TypeAliasExcludes = 788968] = "TypeAliasExcludes", e$4[e$4.AliasExcludes = 2097152] = "AliasExcludes", e$4[e$4.ModuleMember = 2623475] = "ModuleMember", e$4[e$4.ExportHasLocal = 944] = "ExportHasLocal", e$4[e$4.BlockScoped = 418] = "BlockScoped", e$4[e$4.PropertyOrAccessor = 98308] = "PropertyOrAccessor", e$4[e$4.ClassMember = 106500] = "ClassMember", e$4[e$4.ExportSupportsDefaultModifier = 112] = "ExportSupportsDefaultModifier", e$4[e$4.ExportDoesNotSupportDefaultModifier = -113] = "ExportDoesNotSupportDefaultModifier", e$4[e$4.Classifiable = 2885600] = "Classifiable", e$4[e$4.LateBindingContainer = 6256] = "LateBindingContainer", e$4))(Zp || {});
var Om = ((e$4) => (e$4[e$4.None = 0] = "None", e$4[e$4.TypeChecked = 1] = "TypeChecked", e$4[e$4.LexicalThis = 2] = "LexicalThis", e$4[e$4.CaptureThis = 4] = "CaptureThis", e$4[e$4.CaptureNewTarget = 8] = "CaptureNewTarget", e$4[e$4.SuperInstance = 16] = "SuperInstance", e$4[e$4.SuperStatic = 32] = "SuperStatic", e$4[e$4.ContextChecked = 64] = "ContextChecked", e$4[e$4.MethodWithSuperPropertyAccessInAsync = 128] = "MethodWithSuperPropertyAccessInAsync", e$4[e$4.MethodWithSuperPropertyAssignmentInAsync = 256] = "MethodWithSuperPropertyAssignmentInAsync", e$4[e$4.CaptureArguments = 512] = "CaptureArguments", e$4[e$4.EnumValuesComputed = 1024] = "EnumValuesComputed", e$4[e$4.LexicalModuleMergesWithClass = 2048] = "LexicalModuleMergesWithClass", e$4[e$4.LoopWithCapturedBlockScopedBinding = 4096] = "LoopWithCapturedBlockScopedBinding", e$4[e$4.ContainsCapturedBlockScopeBinding = 8192] = "ContainsCapturedBlockScopeBinding", e$4[e$4.CapturedBlockScopedBinding = 16384] = "CapturedBlockScopedBinding", e$4[e$4.BlockScopedBindingInLoop = 32768] = "BlockScopedBindingInLoop", e$4[e$4.NeedsLoopOutParameter = 65536] = "NeedsLoopOutParameter", e$4[e$4.AssignmentsMarked = 131072] = "AssignmentsMarked", e$4[e$4.ContainsConstructorReference = 262144] = "ContainsConstructorReference", e$4[e$4.ConstructorReference = 536870912] = "ConstructorReference", e$4[e$4.ContainsClassWithPrivateIdentifiers = 1048576] = "ContainsClassWithPrivateIdentifiers", e$4[e$4.ContainsSuperPropertyInStaticInitializer = 2097152] = "ContainsSuperPropertyInStaticInitializer", e$4[e$4.InCheckIdentifier = 4194304] = "InCheckIdentifier", e$4[e$4.PartiallyTypeChecked = 8388608] = "PartiallyTypeChecked", e$4[e$4.LazyFlags = 539358128] = "LazyFlags", e$4))(Om || {}), rn$2 = ((e$4) => (e$4[e$4.Any = 1] = "Any", e$4[e$4.Unknown = 2] = "Unknown", e$4[e$4.String = 4] = "String", e$4[e$4.Number = 8] = "Number", e$4[e$4.Boolean = 16] = "Boolean", e$4[e$4.Enum = 32] = "Enum", e$4[e$4.BigInt = 64] = "BigInt", e$4[e$4.StringLiteral = 128] = "StringLiteral", e$4[e$4.NumberLiteral = 256] = "NumberLiteral", e$4[e$4.BooleanLiteral = 512] = "BooleanLiteral", e$4[e$4.EnumLiteral = 1024] = "EnumLiteral", e$4[e$4.BigIntLiteral = 2048] = "BigIntLiteral", e$4[e$4.ESSymbol = 4096] = "ESSymbol", e$4[e$4.UniqueESSymbol = 8192] = "UniqueESSymbol", e$4[e$4.Void = 16384] = "Void", e$4[e$4.Undefined = 32768] = "Undefined", e$4[e$4.Null = 65536] = "Null", e$4[e$4.Never = 131072] = "Never", e$4[e$4.TypeParameter = 262144] = "TypeParameter", e$4[e$4.Object = 524288] = "Object", e$4[e$4.Union = 1048576] = "Union", e$4[e$4.Intersection = 2097152] = "Intersection", e$4[e$4.Index = 4194304] = "Index", e$4[e$4.IndexedAccess = 8388608] = "IndexedAccess", e$4[e$4.Conditional = 16777216] = "Conditional", e$4[e$4.Substitution = 33554432] = "Substitution", e$4[e$4.NonPrimitive = 67108864] = "NonPrimitive", e$4[e$4.TemplateLiteral = 134217728] = "TemplateLiteral", e$4[e$4.StringMapping = 268435456] = "StringMapping", e$4[e$4.Reserved1 = 536870912] = "Reserved1", e$4[e$4.Reserved2 = 1073741824] = "Reserved2", e$4[e$4.AnyOrUnknown = 3] = "AnyOrUnknown", e$4[e$4.Nullable = 98304] = "Nullable", e$4[e$4.Literal = 2944] = "Literal", e$4[e$4.Unit = 109472] = "Unit", e$4[e$4.Freshable = 2976] = "Freshable", e$4[e$4.StringOrNumberLiteral = 384] = "StringOrNumberLiteral", e$4[e$4.StringOrNumberLiteralOrUnique = 8576] = "StringOrNumberLiteralOrUnique", e$4[e$4.DefinitelyFalsy = 117632] = "DefinitelyFalsy", e$4[e$4.PossiblyFalsy = 117724] = "PossiblyFalsy", e$4[e$4.Intrinsic = 67359327] = "Intrinsic", e$4[e$4.StringLike = 402653316] = "StringLike", e$4[e$4.NumberLike = 296] = "NumberLike", e$4[e$4.BigIntLike = 2112] = "BigIntLike", e$4[e$4.BooleanLike = 528] = "BooleanLike", e$4[e$4.EnumLike = 1056] = "EnumLike", e$4[e$4.ESSymbolLike = 12288] = "ESSymbolLike", e$4[e$4.VoidLike = 49152] = "VoidLike", e$4[e$4.Primitive = 402784252] = "Primitive", e$4[e$4.DefinitelyNonNullable = 470302716] = "DefinitelyNonNullable", e$4[e$4.DisjointDomains = 469892092] = "DisjointDomains", e$4[e$4.UnionOrIntersection = 3145728] = "UnionOrIntersection", e$4[e$4.StructuredType = 3670016] = "StructuredType", e$4[e$4.TypeVariable = 8650752] = "TypeVariable", e$4[e$4.InstantiableNonPrimitive = 58982400] = "InstantiableNonPrimitive", e$4[e$4.InstantiablePrimitive = 406847488] = "InstantiablePrimitive", e$4[e$4.Instantiable = 465829888] = "Instantiable", e$4[e$4.StructuredOrInstantiable = 469499904] = "StructuredOrInstantiable", e$4[e$4.ObjectFlagsType = 3899393] = "ObjectFlagsType", e$4[e$4.Simplifiable = 25165824] = "Simplifiable", e$4[e$4.Singleton = 67358815] = "Singleton", e$4[e$4.Narrowable = 536624127] = "Narrowable", e$4[e$4.IncludesMask = 473694207] = "IncludesMask", e$4[e$4.IncludesMissingType = 262144] = "IncludesMissingType", e$4[e$4.IncludesNonWideningType = 4194304] = "IncludesNonWideningType", e$4[e$4.IncludesWildcard = 8388608] = "IncludesWildcard", e$4[e$4.IncludesEmptyObject = 16777216] = "IncludesEmptyObject", e$4[e$4.IncludesInstantiable = 33554432] = "IncludesInstantiable", e$4[e$4.IncludesConstrainedTypeVariable = 536870912] = "IncludesConstrainedTypeVariable", e$4[e$4.IncludesError = 1073741824] = "IncludesError", e$4[e$4.NotPrimitiveUnion = 36323331] = "NotPrimitiveUnion", e$4))(rn$2 || {}), ef = ((e$4) => (e$4[e$4.None = 0] = "None", e$4[e$4.Class = 1] = "Class", e$4[e$4.Interface = 2] = "Interface", e$4[e$4.Reference = 4] = "Reference", e$4[e$4.Tuple = 8] = "Tuple", e$4[e$4.Anonymous = 16] = "Anonymous", e$4[e$4.Mapped = 32] = "Mapped", e$4[e$4.Instantiated = 64] = "Instantiated", e$4[e$4.ObjectLiteral = 128] = "ObjectLiteral", e$4[e$4.EvolvingArray = 256] = "EvolvingArray", e$4[e$4.ObjectLiteralPatternWithComputedProperties = 512] = "ObjectLiteralPatternWithComputedProperties", e$4[e$4.ReverseMapped = 1024] = "ReverseMapped", e$4[e$4.JsxAttributes = 2048] = "JsxAttributes", e$4[e$4.JSLiteral = 4096] = "JSLiteral", e$4[e$4.FreshLiteral = 8192] = "FreshLiteral", e$4[e$4.ArrayLiteral = 16384] = "ArrayLiteral", e$4[e$4.PrimitiveUnion = 32768] = "PrimitiveUnion", e$4[e$4.ContainsWideningType = 65536] = "ContainsWideningType", e$4[e$4.ContainsObjectOrArrayLiteral = 131072] = "ContainsObjectOrArrayLiteral", e$4[e$4.NonInferrableType = 262144] = "NonInferrableType", e$4[e$4.CouldContainTypeVariablesComputed = 524288] = "CouldContainTypeVariablesComputed", e$4[e$4.CouldContainTypeVariables = 1048576] = "CouldContainTypeVariables", e$4[e$4.ClassOrInterface = 3] = "ClassOrInterface", e$4[e$4.RequiresWidening = 196608] = "RequiresWidening", e$4[e$4.PropagatingFlags = 458752] = "PropagatingFlags", e$4[e$4.InstantiatedMapped = 96] = "InstantiatedMapped", e$4[e$4.ObjectTypeKindMask = 1343] = "ObjectTypeKindMask", e$4[e$4.ContainsSpread = 2097152] = "ContainsSpread", e$4[e$4.ObjectRestType = 4194304] = "ObjectRestType", e$4[e$4.InstantiationExpressionType = 8388608] = "InstantiationExpressionType", e$4[e$4.SingleSignatureType = 134217728] = "SingleSignatureType", e$4[e$4.IsClassInstanceClone = 16777216] = "IsClassInstanceClone", e$4[e$4.IdenticalBaseTypeCalculated = 33554432] = "IdenticalBaseTypeCalculated", e$4[e$4.IdenticalBaseTypeExists = 67108864] = "IdenticalBaseTypeExists", e$4[e$4.IsGenericTypeComputed = 2097152] = "IsGenericTypeComputed", e$4[e$4.IsGenericObjectType = 4194304] = "IsGenericObjectType", e$4[e$4.IsGenericIndexType = 8388608] = "IsGenericIndexType", e$4[e$4.IsGenericType = 12582912] = "IsGenericType", e$4[e$4.ContainsIntersections = 16777216] = "ContainsIntersections", e$4[e$4.IsUnknownLikeUnionComputed = 33554432] = "IsUnknownLikeUnionComputed", e$4[e$4.IsUnknownLikeUnion = 67108864] = "IsUnknownLikeUnion", e$4[e$4.IsNeverIntersectionComputed = 16777216] = "IsNeverIntersectionComputed", e$4[e$4.IsNeverIntersection = 33554432] = "IsNeverIntersection", e$4[e$4.IsConstrainedTypeVariable = 67108864] = "IsConstrainedTypeVariable", e$4))(ef || {});
var Mm = ((e$4) => (e$4[e$4.None = 0] = "None", e$4[e$4.HasRestParameter = 1] = "HasRestParameter", e$4[e$4.HasLiteralTypes = 2] = "HasLiteralTypes", e$4[e$4.Abstract = 4] = "Abstract", e$4[e$4.IsInnerCallChain = 8] = "IsInnerCallChain", e$4[e$4.IsOuterCallChain = 16] = "IsOuterCallChain", e$4[e$4.IsUntypedSignatureInJSFile = 32] = "IsUntypedSignatureInJSFile", e$4[e$4.IsNonInferrable = 64] = "IsNonInferrable", e$4[e$4.IsSignatureCandidateForOverloadFailure = 128] = "IsSignatureCandidateForOverloadFailure", e$4[e$4.PropagatingFlags = 167] = "PropagatingFlags", e$4[e$4.CallChainFlags = 24] = "CallChainFlags", e$4))(Mm || {});
var Ir$2 = ((e$4) => (e$4[e$4.Unknown = 0] = "Unknown", e$4[e$4.JS = 1] = "JS", e$4[e$4.JSX = 2] = "JSX", e$4[e$4.TS = 3] = "TS", e$4[e$4.TSX = 4] = "TSX", e$4[e$4.External = 5] = "External", e$4[e$4.JSON = 6] = "JSON", e$4[e$4.Deferred = 7] = "Deferred", e$4))(Ir$2 || {}), T_ = ((e$4) => (e$4[e$4.ES3 = 0] = "ES3", e$4[e$4.ES5 = 1] = "ES5", e$4[e$4.ES2015 = 2] = "ES2015", e$4[e$4.ES2016 = 3] = "ES2016", e$4[e$4.ES2017 = 4] = "ES2017", e$4[e$4.ES2018 = 5] = "ES2018", e$4[e$4.ES2019 = 6] = "ES2019", e$4[e$4.ES2020 = 7] = "ES2020", e$4[e$4.ES2021 = 8] = "ES2021", e$4[e$4.ES2022 = 9] = "ES2022", e$4[e$4.ES2023 = 10] = "ES2023", e$4[e$4.ES2024 = 11] = "ES2024", e$4[e$4.ESNext = 99] = "ESNext", e$4[e$4.JSON = 100] = "JSON", e$4[e$4.Latest = 99] = "Latest", e$4))(T_ || {}), Sl = ((e$4) => (e$4[e$4.Standard = 0] = "Standard", e$4[e$4.JSX = 1] = "JSX", e$4))(Sl || {});
var On$1 = ((e$4) => (e$4.Ts = ".ts", e$4.Tsx = ".tsx", e$4.Dts = ".d.ts", e$4.Js = ".js", e$4.Jsx = ".jsx", e$4.Json = ".json", e$4.TsBuildInfo = ".tsbuildinfo", e$4.Mjs = ".mjs", e$4.Mts = ".mts", e$4.Dmts = ".d.mts", e$4.Cjs = ".cjs", e$4.Cts = ".cts", e$4.Dcts = ".d.cts", e$4))(On$1 || {}), Lm = ((e$4) => (e$4[e$4.None = 0] = "None", e$4[e$4.ContainsTypeScript = 1] = "ContainsTypeScript", e$4[e$4.ContainsJsx = 2] = "ContainsJsx", e$4[e$4.ContainsESNext = 4] = "ContainsESNext", e$4[e$4.ContainsES2022 = 8] = "ContainsES2022", e$4[e$4.ContainsES2021 = 16] = "ContainsES2021", e$4[e$4.ContainsES2020 = 32] = "ContainsES2020", e$4[e$4.ContainsES2019 = 64] = "ContainsES2019", e$4[e$4.ContainsES2018 = 128] = "ContainsES2018", e$4[e$4.ContainsES2017 = 256] = "ContainsES2017", e$4[e$4.ContainsES2016 = 512] = "ContainsES2016", e$4[e$4.ContainsES2015 = 1024] = "ContainsES2015", e$4[e$4.ContainsGenerator = 2048] = "ContainsGenerator", e$4[e$4.ContainsDestructuringAssignment = 4096] = "ContainsDestructuringAssignment", e$4[e$4.ContainsTypeScriptClassSyntax = 8192] = "ContainsTypeScriptClassSyntax", e$4[e$4.ContainsLexicalThis = 16384] = "ContainsLexicalThis", e$4[e$4.ContainsRestOrSpread = 32768] = "ContainsRestOrSpread", e$4[e$4.ContainsObjectRestOrSpread = 65536] = "ContainsObjectRestOrSpread", e$4[e$4.ContainsComputedPropertyName = 131072] = "ContainsComputedPropertyName", e$4[e$4.ContainsBlockScopedBinding = 262144] = "ContainsBlockScopedBinding", e$4[e$4.ContainsBindingPattern = 524288] = "ContainsBindingPattern", e$4[e$4.ContainsYield = 1048576] = "ContainsYield", e$4[e$4.ContainsAwait = 2097152] = "ContainsAwait", e$4[e$4.ContainsHoistedDeclarationOrCompletion = 4194304] = "ContainsHoistedDeclarationOrCompletion", e$4[e$4.ContainsDynamicImport = 8388608] = "ContainsDynamicImport", e$4[e$4.ContainsClassFields = 16777216] = "ContainsClassFields", e$4[e$4.ContainsDecorators = 33554432] = "ContainsDecorators", e$4[e$4.ContainsPossibleTopLevelAwait = 67108864] = "ContainsPossibleTopLevelAwait", e$4[e$4.ContainsLexicalSuper = 134217728] = "ContainsLexicalSuper", e$4[e$4.ContainsUpdateExpressionForIdentifier = 268435456] = "ContainsUpdateExpressionForIdentifier", e$4[e$4.ContainsPrivateIdentifierInExpression = 536870912] = "ContainsPrivateIdentifierInExpression", e$4[e$4.HasComputedFlags = -2147483648] = "HasComputedFlags", e$4[e$4.AssertTypeScript = 1] = "AssertTypeScript", e$4[e$4.AssertJsx = 2] = "AssertJsx", e$4[e$4.AssertESNext = 4] = "AssertESNext", e$4[e$4.AssertES2022 = 8] = "AssertES2022", e$4[e$4.AssertES2021 = 16] = "AssertES2021", e$4[e$4.AssertES2020 = 32] = "AssertES2020", e$4[e$4.AssertES2019 = 64] = "AssertES2019", e$4[e$4.AssertES2018 = 128] = "AssertES2018", e$4[e$4.AssertES2017 = 256] = "AssertES2017", e$4[e$4.AssertES2016 = 512] = "AssertES2016", e$4[e$4.AssertES2015 = 1024] = "AssertES2015", e$4[e$4.AssertGenerator = 2048] = "AssertGenerator", e$4[e$4.AssertDestructuringAssignment = 4096] = "AssertDestructuringAssignment", e$4[e$4.OuterExpressionExcludes = -2147483648] = "OuterExpressionExcludes", e$4[e$4.PropertyAccessExcludes = -2147483648] = "PropertyAccessExcludes", e$4[e$4.NodeExcludes = -2147483648] = "NodeExcludes", e$4[e$4.ArrowFunctionExcludes = -2072174592] = "ArrowFunctionExcludes", e$4[e$4.FunctionExcludes = -1937940480] = "FunctionExcludes", e$4[e$4.ConstructorExcludes = -1937948672] = "ConstructorExcludes", e$4[e$4.MethodOrAccessorExcludes = -2005057536] = "MethodOrAccessorExcludes", e$4[e$4.PropertyExcludes = -2013249536] = "PropertyExcludes", e$4[e$4.ClassExcludes = -2147344384] = "ClassExcludes", e$4[e$4.ModuleExcludes = -1941676032] = "ModuleExcludes", e$4[e$4.TypeExcludes = -2] = "TypeExcludes", e$4[e$4.ObjectLiteralExcludes = -2147278848] = "ObjectLiteralExcludes", e$4[e$4.ArrayLiteralOrCallOrNewExcludes = -2147450880] = "ArrayLiteralOrCallOrNewExcludes", e$4[e$4.VariableDeclarationListExcludes = -2146893824] = "VariableDeclarationListExcludes", e$4[e$4.ParameterExcludes = -2147483648] = "ParameterExcludes", e$4[e$4.CatchClauseExcludes = -2147418112] = "CatchClauseExcludes", e$4[e$4.BindingPatternExcludes = -2147450880] = "BindingPatternExcludes", e$4[e$4.ContainsLexicalThisOrSuper = 134234112] = "ContainsLexicalThisOrSuper", e$4[e$4.PropertyNamePropagatingFlags = 134234112] = "PropertyNamePropagatingFlags", e$4))(Lm || {}), Jm = ((e$4) => (e$4[e$4.TabStop = 0] = "TabStop", e$4[e$4.Placeholder = 1] = "Placeholder", e$4[e$4.Choice = 2] = "Choice", e$4[e$4.Variable = 3] = "Variable", e$4))(Jm || {}), jm = ((e$4) => (e$4[e$4.None = 0] = "None", e$4[e$4.SingleLine = 1] = "SingleLine", e$4[e$4.MultiLine = 2] = "MultiLine", e$4[e$4.AdviseOnEmitNode = 4] = "AdviseOnEmitNode", e$4[e$4.NoSubstitution = 8] = "NoSubstitution", e$4[e$4.CapturesThis = 16] = "CapturesThis", e$4[e$4.NoLeadingSourceMap = 32] = "NoLeadingSourceMap", e$4[e$4.NoTrailingSourceMap = 64] = "NoTrailingSourceMap", e$4[e$4.NoSourceMap = 96] = "NoSourceMap", e$4[e$4.NoNestedSourceMaps = 128] = "NoNestedSourceMaps", e$4[e$4.NoTokenLeadingSourceMaps = 256] = "NoTokenLeadingSourceMaps", e$4[e$4.NoTokenTrailingSourceMaps = 512] = "NoTokenTrailingSourceMaps", e$4[e$4.NoTokenSourceMaps = 768] = "NoTokenSourceMaps", e$4[e$4.NoLeadingComments = 1024] = "NoLeadingComments", e$4[e$4.NoTrailingComments = 2048] = "NoTrailingComments", e$4[e$4.NoComments = 3072] = "NoComments", e$4[e$4.NoNestedComments = 4096] = "NoNestedComments", e$4[e$4.HelperName = 8192] = "HelperName", e$4[e$4.ExportName = 16384] = "ExportName", e$4[e$4.LocalName = 32768] = "LocalName", e$4[e$4.InternalName = 65536] = "InternalName", e$4[e$4.Indented = 131072] = "Indented", e$4[e$4.NoIndentation = 262144] = "NoIndentation", e$4[e$4.AsyncFunctionBody = 524288] = "AsyncFunctionBody", e$4[e$4.ReuseTempVariableScope = 1048576] = "ReuseTempVariableScope", e$4[e$4.CustomPrologue = 2097152] = "CustomPrologue", e$4[e$4.NoHoisting = 4194304] = "NoHoisting", e$4[e$4.Iterator = 8388608] = "Iterator", e$4[e$4.NoAsciiEscaping = 16777216] = "NoAsciiEscaping", e$4))(jm || {});
var Zs$1 = {
	Classes: 2,
	ForOf: 2,
	Generators: 2,
	Iteration: 2,
	SpreadElements: 2,
	RestElements: 2,
	TaggedTemplates: 2,
	DestructuringAssignment: 2,
	BindingPatterns: 2,
	ArrowFunctions: 2,
	BlockScopedVariables: 2,
	ObjectAssign: 2,
	RegularExpressionFlagsUnicode: 2,
	RegularExpressionFlagsSticky: 2,
	Exponentiation: 3,
	AsyncFunctions: 4,
	ForAwaitOf: 5,
	AsyncGenerators: 5,
	AsyncIteration: 5,
	ObjectSpreadRest: 5,
	RegularExpressionFlagsDotAll: 5,
	BindinglessCatch: 6,
	BigInt: 7,
	NullishCoalesce: 7,
	OptionalChaining: 7,
	LogicalAssignment: 8,
	TopLevelAwait: 9,
	ClassFields: 9,
	PrivateNamesAndClassStaticBlocks: 9,
	RegularExpressionFlagsHasIndices: 9,
	ShebangComments: 10,
	RegularExpressionFlagsUnicodeSets: 11,
	UsingAndAwaitUsing: 99,
	ClassAndClassElementDecorators: 99
};
var Rm = {
	reference: {
		args: [
			{
				name: "types",
				optional: !0,
				captureSpan: !0
			},
			{
				name: "lib",
				optional: !0,
				captureSpan: !0
			},
			{
				name: "path",
				optional: !0,
				captureSpan: !0
			},
			{
				name: "no-default-lib",
				optional: !0
			},
			{
				name: "resolution-mode",
				optional: !0
			},
			{
				name: "preserve",
				optional: !0
			}
		],
		kind: 1
	},
	"amd-dependency": {
		args: [{ name: "path" }, {
			name: "name",
			optional: !0
		}],
		kind: 1
	},
	"amd-module": {
		args: [{ name: "name" }],
		kind: 1
	},
	"ts-check": { kind: 2 },
	"ts-nocheck": { kind: 2 },
	jsx: {
		args: [{ name: "factory" }],
		kind: 4
	},
	jsxfrag: {
		args: [{ name: "factory" }],
		kind: 4
	},
	jsximportsource: {
		args: [{ name: "factory" }],
		kind: 4
	},
	jsxruntime: {
		args: [{ name: "factory" }],
		kind: 4
	}
}, Xa$1 = ((e$4) => (e$4[e$4.ParseAll = 0] = "ParseAll", e$4[e$4.ParseNone = 1] = "ParseNone", e$4[e$4.ParseForTypeErrors = 2] = "ParseForTypeErrors", e$4[e$4.ParseForTypeInfo = 3] = "ParseForTypeInfo", e$4))(Xa$1 || {});
var $r$2 = "/", Hy = "\\", Cd = "://", Xy = /\\/g;
function $y(e$4) {
	return e$4 === 47 || e$4 === 92;
}
function Qy(e$4, t$13) {
	return e$4.length > t$13.length && zy(e$4, t$13);
}
function tf(e$4) {
	return e$4.length > 0 && $y(e$4.charCodeAt(e$4.length - 1));
}
function Dd(e$4) {
	return e$4 >= 97 && e$4 <= 122 || e$4 >= 65 && e$4 <= 90;
}
function Ky(e$4, t$13) {
	let a$13 = e$4.charCodeAt(t$13);
	if (a$13 === 58) return t$13 + 1;
	if (a$13 === 37 && e$4.charCodeAt(t$13 + 1) === 51) {
		let o$9 = e$4.charCodeAt(t$13 + 2);
		if (o$9 === 97 || o$9 === 65) return t$13 + 3;
	}
	return -1;
}
function Zy(e$4) {
	if (!e$4) return 0;
	let t$13 = e$4.charCodeAt(0);
	if (t$13 === 47 || t$13 === 92) {
		if (e$4.charCodeAt(1) !== t$13) return 1;
		let o$9 = e$4.indexOf(t$13 === 47 ? $r$2 : Hy, 2);
		return o$9 < 0 ? e$4.length : o$9 + 1;
	}
	if (Dd(t$13) && e$4.charCodeAt(1) === 58) {
		let o$9 = e$4.charCodeAt(2);
		if (o$9 === 47 || o$9 === 92) return 3;
		if (e$4.length === 2) return 2;
	}
	let a$13 = e$4.indexOf(Cd);
	if (a$13 !== -1) {
		let o$9 = a$13 + Cd.length, m$11 = e$4.indexOf($r$2, o$9);
		if (m$11 !== -1) {
			let v$5 = e$4.slice(0, a$13), E$3 = e$4.slice(o$9, m$11);
			if (v$5 === "file" && (E$3 === "" || E$3 === "localhost") && Dd(e$4.charCodeAt(m$11 + 1))) {
				let C$3 = Ky(e$4, m$11 + 2);
				if (C$3 !== -1) {
					if (e$4.charCodeAt(C$3) === 47) return ~(C$3 + 1);
					if (C$3 === e$4.length) return ~C$3;
				}
			}
			return ~(m$11 + 1);
		}
		return ~e$4.length;
	}
	return 0;
}
function u_(e$4) {
	let t$13 = Zy(e$4);
	return t$13 < 0 ? ~t$13 : t$13;
}
function Um(e$4, t$13, a$13) {
	if (e$4 = p_(e$4), u_(e$4) === e$4.length) return "";
	e$4 = ml(e$4);
	let m$11 = e$4.slice(Math.max(u_(e$4), e$4.lastIndexOf($r$2) + 1)), v$5 = t$13 !== void 0 && a$13 !== void 0 ? Bm(m$11, t$13, a$13) : void 0;
	return v$5 ? m$11.slice(0, m$11.length - v$5.length) : m$11;
}
function Pd(e$4, t$13, a$13) {
	if (dl(t$13, ".") || (t$13 = "." + t$13), e$4.length >= t$13.length && e$4.charCodeAt(e$4.length - t$13.length) === 46) {
		let o$9 = e$4.slice(e$4.length - t$13.length);
		if (a$13(o$9, t$13)) return o$9;
	}
}
function eg(e$4, t$13, a$13) {
	if (typeof t$13 == "string") return Pd(e$4, t$13, a$13) || "";
	for (let o$9 of t$13) {
		let m$11 = Pd(e$4, o$9, a$13);
		if (m$11) return m$11;
	}
	return "";
}
function Bm(e$4, t$13, a$13) {
	if (t$13) return eg(ml(e$4), t$13, a$13 ? Qp : Uy);
	let o$9 = Um(e$4), m$11 = o$9.lastIndexOf(".");
	return m$11 >= 0 ? o$9.substring(m$11) : "";
}
function p_(e$4) {
	return e$4.includes("\\") ? e$4.replace(Xy, $r$2) : e$4;
}
function tg(e$4, ...t$13) {
	e$4 && (e$4 = p_(e$4));
	for (let a$13 of t$13) a$13 && (a$13 = p_(a$13), !e$4 || u_(a$13) !== 0 ? e$4 = a$13 : e$4 = Fm(e$4) + a$13);
	return e$4;
}
function ng(e$4, t$13) {
	let a$13 = u_(e$4);
	a$13 === 0 && t$13 ? (e$4 = tg(t$13, e$4), a$13 = u_(e$4)) : e$4 = p_(e$4);
	let o$9 = qm(e$4);
	if (o$9 !== void 0) return o$9.length > a$13 ? ml(o$9) : o$9;
	let m$11 = e$4.length, v$5 = e$4.substring(0, a$13), E$3, C$3 = a$13, c$3 = C$3, W$2 = C$3, h$3 = a$13 !== 0;
	for (; C$3 < m$11;) {
		c$3 = C$3;
		let y$7 = e$4.charCodeAt(C$3);
		for (; y$7 === 47 && C$3 + 1 < m$11;) C$3++, y$7 = e$4.charCodeAt(C$3);
		C$3 > c$3 && (E$3 ?? (E$3 = e$4.substring(0, c$3 - 1)), c$3 = C$3);
		let g$2 = e$4.indexOf($r$2, C$3 + 1);
		g$2 === -1 && (g$2 = m$11);
		let x$3 = g$2 - c$3;
		if (x$3 === 1 && e$4.charCodeAt(C$3) === 46) E$3 ?? (E$3 = e$4.substring(0, W$2));
		else if (x$3 === 2 && e$4.charCodeAt(C$3) === 46 && e$4.charCodeAt(C$3 + 1) === 46) if (!h$3) E$3 !== void 0 ? E$3 += E$3.length === a$13 ? ".." : "/.." : W$2 = C$3 + 2;
		else if (E$3 === void 0) W$2 - 2 >= 0 ? E$3 = e$4.substring(0, Math.max(a$13, e$4.lastIndexOf($r$2, W$2 - 2))) : E$3 = e$4.substring(0, W$2);
		else {
			let N$5 = E$3.lastIndexOf($r$2);
			N$5 !== -1 ? E$3 = E$3.substring(0, Math.max(a$13, N$5)) : E$3 = v$5, E$3.length === a$13 && (h$3 = a$13 !== 0);
		}
		else E$3 !== void 0 ? (E$3.length !== a$13 && (E$3 += $r$2), h$3 = !0, E$3 += e$4.substring(c$3, g$2)) : (h$3 = !0, W$2 = g$2);
		C$3 = g$2 + 1;
	}
	return E$3 ?? (m$11 > a$13 ? ml(e$4) : e$4);
}
function rg(e$4) {
	e$4 = p_(e$4);
	let t$13 = qm(e$4);
	return t$13 !== void 0 ? t$13 : (t$13 = ng(e$4, ""), t$13 && tf(e$4) ? Fm(t$13) : t$13);
}
function qm(e$4) {
	if (!Nd.test(e$4)) return e$4;
	let t$13 = e$4.replace(/\/\.\//g, "/");
	if (t$13.startsWith("./") && (t$13 = t$13.slice(2)), t$13 !== e$4 && (e$4 = t$13, !Nd.test(e$4))) return e$4;
}
function ml(e$4) {
	return tf(e$4) ? e$4.substr(0, e$4.length - 1) : e$4;
}
function Fm(e$4) {
	return tf(e$4) ? e$4 : e$4 + $r$2;
}
var Nd = /\/\/|(?:^|\/)\.\.?(?:$|\/)/;
function r$11(e$4, t$13, a$13, o$9, m$11, v$5, E$3) {
	return {
		code: e$4,
		category: t$13,
		key: a$13,
		message: o$9,
		reportsUnnecessary: m$11,
		elidedInCompatabilityPyramid: v$5,
		reportsDeprecated: E$3
	};
}
var A$1 = {
	Unterminated_string_literal: r$11(1002, 1, "Unterminated_string_literal_1002", "Unterminated string literal."),
	Identifier_expected: r$11(1003, 1, "Identifier_expected_1003", "Identifier expected."),
	_0_expected: r$11(1005, 1, "_0_expected_1005", "'{0}' expected."),
	A_file_cannot_have_a_reference_to_itself: r$11(1006, 1, "A_file_cannot_have_a_reference_to_itself_1006", "A file cannot have a reference to itself."),
	The_parser_expected_to_find_a_1_to_match_the_0_token_here: r$11(1007, 1, "The_parser_expected_to_find_a_1_to_match_the_0_token_here_1007", "The parser expected to find a '{1}' to match the '{0}' token here."),
	Trailing_comma_not_allowed: r$11(1009, 1, "Trailing_comma_not_allowed_1009", "Trailing comma not allowed."),
	Asterisk_Slash_expected: r$11(1010, 1, "Asterisk_Slash_expected_1010", "'*/' expected."),
	An_element_access_expression_should_take_an_argument: r$11(1011, 1, "An_element_access_expression_should_take_an_argument_1011", "An element access expression should take an argument."),
	Unexpected_token: r$11(1012, 1, "Unexpected_token_1012", "Unexpected token."),
	A_rest_parameter_or_binding_pattern_may_not_have_a_trailing_comma: r$11(1013, 1, "A_rest_parameter_or_binding_pattern_may_not_have_a_trailing_comma_1013", "A rest parameter or binding pattern may not have a trailing comma."),
	A_rest_parameter_must_be_last_in_a_parameter_list: r$11(1014, 1, "A_rest_parameter_must_be_last_in_a_parameter_list_1014", "A rest parameter must be last in a parameter list."),
	Parameter_cannot_have_question_mark_and_initializer: r$11(1015, 1, "Parameter_cannot_have_question_mark_and_initializer_1015", "Parameter cannot have question mark and initializer."),
	A_required_parameter_cannot_follow_an_optional_parameter: r$11(1016, 1, "A_required_parameter_cannot_follow_an_optional_parameter_1016", "A required parameter cannot follow an optional parameter."),
	An_index_signature_cannot_have_a_rest_parameter: r$11(1017, 1, "An_index_signature_cannot_have_a_rest_parameter_1017", "An index signature cannot have a rest parameter."),
	An_index_signature_parameter_cannot_have_an_accessibility_modifier: r$11(1018, 1, "An_index_signature_parameter_cannot_have_an_accessibility_modifier_1018", "An index signature parameter cannot have an accessibility modifier."),
	An_index_signature_parameter_cannot_have_a_question_mark: r$11(1019, 1, "An_index_signature_parameter_cannot_have_a_question_mark_1019", "An index signature parameter cannot have a question mark."),
	An_index_signature_parameter_cannot_have_an_initializer: r$11(1020, 1, "An_index_signature_parameter_cannot_have_an_initializer_1020", "An index signature parameter cannot have an initializer."),
	An_index_signature_must_have_a_type_annotation: r$11(1021, 1, "An_index_signature_must_have_a_type_annotation_1021", "An index signature must have a type annotation."),
	An_index_signature_parameter_must_have_a_type_annotation: r$11(1022, 1, "An_index_signature_parameter_must_have_a_type_annotation_1022", "An index signature parameter must have a type annotation."),
	readonly_modifier_can_only_appear_on_a_property_declaration_or_index_signature: r$11(1024, 1, "readonly_modifier_can_only_appear_on_a_property_declaration_or_index_signature_1024", "'readonly' modifier can only appear on a property declaration or index signature."),
	An_index_signature_cannot_have_a_trailing_comma: r$11(1025, 1, "An_index_signature_cannot_have_a_trailing_comma_1025", "An index signature cannot have a trailing comma."),
	Accessibility_modifier_already_seen: r$11(1028, 1, "Accessibility_modifier_already_seen_1028", "Accessibility modifier already seen."),
	_0_modifier_must_precede_1_modifier: r$11(1029, 1, "_0_modifier_must_precede_1_modifier_1029", "'{0}' modifier must precede '{1}' modifier."),
	_0_modifier_already_seen: r$11(1030, 1, "_0_modifier_already_seen_1030", "'{0}' modifier already seen."),
	_0_modifier_cannot_appear_on_class_elements_of_this_kind: r$11(1031, 1, "_0_modifier_cannot_appear_on_class_elements_of_this_kind_1031", "'{0}' modifier cannot appear on class elements of this kind."),
	super_must_be_followed_by_an_argument_list_or_member_access: r$11(1034, 1, "super_must_be_followed_by_an_argument_list_or_member_access_1034", "'super' must be followed by an argument list or member access."),
	Only_ambient_modules_can_use_quoted_names: r$11(1035, 1, "Only_ambient_modules_can_use_quoted_names_1035", "Only ambient modules can use quoted names."),
	Statements_are_not_allowed_in_ambient_contexts: r$11(1036, 1, "Statements_are_not_allowed_in_ambient_contexts_1036", "Statements are not allowed in ambient contexts."),
	A_declare_modifier_cannot_be_used_in_an_already_ambient_context: r$11(1038, 1, "A_declare_modifier_cannot_be_used_in_an_already_ambient_context_1038", "A 'declare' modifier cannot be used in an already ambient context."),
	Initializers_are_not_allowed_in_ambient_contexts: r$11(1039, 1, "Initializers_are_not_allowed_in_ambient_contexts_1039", "Initializers are not allowed in ambient contexts."),
	_0_modifier_cannot_be_used_in_an_ambient_context: r$11(1040, 1, "_0_modifier_cannot_be_used_in_an_ambient_context_1040", "'{0}' modifier cannot be used in an ambient context."),
	_0_modifier_cannot_be_used_here: r$11(1042, 1, "_0_modifier_cannot_be_used_here_1042", "'{0}' modifier cannot be used here."),
	_0_modifier_cannot_appear_on_a_module_or_namespace_element: r$11(1044, 1, "_0_modifier_cannot_appear_on_a_module_or_namespace_element_1044", "'{0}' modifier cannot appear on a module or namespace element."),
	Top_level_declarations_in_d_ts_files_must_start_with_either_a_declare_or_export_modifier: r$11(1046, 1, "Top_level_declarations_in_d_ts_files_must_start_with_either_a_declare_or_export_modifier_1046", "Top-level declarations in .d.ts files must start with either a 'declare' or 'export' modifier."),
	A_rest_parameter_cannot_be_optional: r$11(1047, 1, "A_rest_parameter_cannot_be_optional_1047", "A rest parameter cannot be optional."),
	A_rest_parameter_cannot_have_an_initializer: r$11(1048, 1, "A_rest_parameter_cannot_have_an_initializer_1048", "A rest parameter cannot have an initializer."),
	A_set_accessor_must_have_exactly_one_parameter: r$11(1049, 1, "A_set_accessor_must_have_exactly_one_parameter_1049", "A 'set' accessor must have exactly one parameter."),
	A_set_accessor_cannot_have_an_optional_parameter: r$11(1051, 1, "A_set_accessor_cannot_have_an_optional_parameter_1051", "A 'set' accessor cannot have an optional parameter."),
	A_set_accessor_parameter_cannot_have_an_initializer: r$11(1052, 1, "A_set_accessor_parameter_cannot_have_an_initializer_1052", "A 'set' accessor parameter cannot have an initializer."),
	A_set_accessor_cannot_have_rest_parameter: r$11(1053, 1, "A_set_accessor_cannot_have_rest_parameter_1053", "A 'set' accessor cannot have rest parameter."),
	A_get_accessor_cannot_have_parameters: r$11(1054, 1, "A_get_accessor_cannot_have_parameters_1054", "A 'get' accessor cannot have parameters."),
	Type_0_is_not_a_valid_async_function_return_type_in_ES5_because_it_does_not_refer_to_a_Promise_compatible_constructor_value: r$11(1055, 1, "Type_0_is_not_a_valid_async_function_return_type_in_ES5_because_it_does_not_refer_to_a_Promise_compa_1055", "Type '{0}' is not a valid async function return type in ES5 because it does not refer to a Promise-compatible constructor value."),
	Accessors_are_only_available_when_targeting_ECMAScript_5_and_higher: r$11(1056, 1, "Accessors_are_only_available_when_targeting_ECMAScript_5_and_higher_1056", "Accessors are only available when targeting ECMAScript 5 and higher."),
	The_return_type_of_an_async_function_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member: r$11(1058, 1, "The_return_type_of_an_async_function_must_either_be_a_valid_promise_or_must_not_contain_a_callable_t_1058", "The return type of an async function must either be a valid promise or must not contain a callable 'then' member."),
	A_promise_must_have_a_then_method: r$11(1059, 1, "A_promise_must_have_a_then_method_1059", "A promise must have a 'then' method."),
	The_first_parameter_of_the_then_method_of_a_promise_must_be_a_callback: r$11(1060, 1, "The_first_parameter_of_the_then_method_of_a_promise_must_be_a_callback_1060", "The first parameter of the 'then' method of a promise must be a callback."),
	Enum_member_must_have_initializer: r$11(1061, 1, "Enum_member_must_have_initializer_1061", "Enum member must have initializer."),
	Type_is_referenced_directly_or_indirectly_in_the_fulfillment_callback_of_its_own_then_method: r$11(1062, 1, "Type_is_referenced_directly_or_indirectly_in_the_fulfillment_callback_of_its_own_then_method_1062", "Type is referenced directly or indirectly in the fulfillment callback of its own 'then' method."),
	An_export_assignment_cannot_be_used_in_a_namespace: r$11(1063, 1, "An_export_assignment_cannot_be_used_in_a_namespace_1063", "An export assignment cannot be used in a namespace."),
	The_return_type_of_an_async_function_or_method_must_be_the_global_Promise_T_type_Did_you_mean_to_write_Promise_0: r$11(1064, 1, "The_return_type_of_an_async_function_or_method_must_be_the_global_Promise_T_type_Did_you_mean_to_wri_1064", "The return type of an async function or method must be the global Promise<T> type. Did you mean to write 'Promise<{0}>'?"),
	The_return_type_of_an_async_function_or_method_must_be_the_global_Promise_T_type: r$11(1065, 1, "The_return_type_of_an_async_function_or_method_must_be_the_global_Promise_T_type_1065", "The return type of an async function or method must be the global Promise<T> type."),
	In_ambient_enum_declarations_member_initializer_must_be_constant_expression: r$11(1066, 1, "In_ambient_enum_declarations_member_initializer_must_be_constant_expression_1066", "In ambient enum declarations member initializer must be constant expression."),
	Unexpected_token_A_constructor_method_accessor_or_property_was_expected: r$11(1068, 1, "Unexpected_token_A_constructor_method_accessor_or_property_was_expected_1068", "Unexpected token. A constructor, method, accessor, or property was expected."),
	Unexpected_token_A_type_parameter_name_was_expected_without_curly_braces: r$11(1069, 1, "Unexpected_token_A_type_parameter_name_was_expected_without_curly_braces_1069", "Unexpected token. A type parameter name was expected without curly braces."),
	_0_modifier_cannot_appear_on_a_type_member: r$11(1070, 1, "_0_modifier_cannot_appear_on_a_type_member_1070", "'{0}' modifier cannot appear on a type member."),
	_0_modifier_cannot_appear_on_an_index_signature: r$11(1071, 1, "_0_modifier_cannot_appear_on_an_index_signature_1071", "'{0}' modifier cannot appear on an index signature."),
	A_0_modifier_cannot_be_used_with_an_import_declaration: r$11(1079, 1, "A_0_modifier_cannot_be_used_with_an_import_declaration_1079", "A '{0}' modifier cannot be used with an import declaration."),
	Invalid_reference_directive_syntax: r$11(1084, 1, "Invalid_reference_directive_syntax_1084", "Invalid 'reference' directive syntax."),
	_0_modifier_cannot_appear_on_a_constructor_declaration: r$11(1089, 1, "_0_modifier_cannot_appear_on_a_constructor_declaration_1089", "'{0}' modifier cannot appear on a constructor declaration."),
	_0_modifier_cannot_appear_on_a_parameter: r$11(1090, 1, "_0_modifier_cannot_appear_on_a_parameter_1090", "'{0}' modifier cannot appear on a parameter."),
	Only_a_single_variable_declaration_is_allowed_in_a_for_in_statement: r$11(1091, 1, "Only_a_single_variable_declaration_is_allowed_in_a_for_in_statement_1091", "Only a single variable declaration is allowed in a 'for...in' statement."),
	Type_parameters_cannot_appear_on_a_constructor_declaration: r$11(1092, 1, "Type_parameters_cannot_appear_on_a_constructor_declaration_1092", "Type parameters cannot appear on a constructor declaration."),
	Type_annotation_cannot_appear_on_a_constructor_declaration: r$11(1093, 1, "Type_annotation_cannot_appear_on_a_constructor_declaration_1093", "Type annotation cannot appear on a constructor declaration."),
	An_accessor_cannot_have_type_parameters: r$11(1094, 1, "An_accessor_cannot_have_type_parameters_1094", "An accessor cannot have type parameters."),
	A_set_accessor_cannot_have_a_return_type_annotation: r$11(1095, 1, "A_set_accessor_cannot_have_a_return_type_annotation_1095", "A 'set' accessor cannot have a return type annotation."),
	An_index_signature_must_have_exactly_one_parameter: r$11(1096, 1, "An_index_signature_must_have_exactly_one_parameter_1096", "An index signature must have exactly one parameter."),
	_0_list_cannot_be_empty: r$11(1097, 1, "_0_list_cannot_be_empty_1097", "'{0}' list cannot be empty."),
	Type_parameter_list_cannot_be_empty: r$11(1098, 1, "Type_parameter_list_cannot_be_empty_1098", "Type parameter list cannot be empty."),
	Type_argument_list_cannot_be_empty: r$11(1099, 1, "Type_argument_list_cannot_be_empty_1099", "Type argument list cannot be empty."),
	Invalid_use_of_0_in_strict_mode: r$11(1100, 1, "Invalid_use_of_0_in_strict_mode_1100", "Invalid use of '{0}' in strict mode."),
	with_statements_are_not_allowed_in_strict_mode: r$11(1101, 1, "with_statements_are_not_allowed_in_strict_mode_1101", "'with' statements are not allowed in strict mode."),
	delete_cannot_be_called_on_an_identifier_in_strict_mode: r$11(1102, 1, "delete_cannot_be_called_on_an_identifier_in_strict_mode_1102", "'delete' cannot be called on an identifier in strict mode."),
	for_await_loops_are_only_allowed_within_async_functions_and_at_the_top_levels_of_modules: r$11(1103, 1, "for_await_loops_are_only_allowed_within_async_functions_and_at_the_top_levels_of_modules_1103", "'for await' loops are only allowed within async functions and at the top levels of modules."),
	A_continue_statement_can_only_be_used_within_an_enclosing_iteration_statement: r$11(1104, 1, "A_continue_statement_can_only_be_used_within_an_enclosing_iteration_statement_1104", "A 'continue' statement can only be used within an enclosing iteration statement."),
	A_break_statement_can_only_be_used_within_an_enclosing_iteration_or_switch_statement: r$11(1105, 1, "A_break_statement_can_only_be_used_within_an_enclosing_iteration_or_switch_statement_1105", "A 'break' statement can only be used within an enclosing iteration or switch statement."),
	The_left_hand_side_of_a_for_of_statement_may_not_be_async: r$11(1106, 1, "The_left_hand_side_of_a_for_of_statement_may_not_be_async_1106", "The left-hand side of a 'for...of' statement may not be 'async'."),
	Jump_target_cannot_cross_function_boundary: r$11(1107, 1, "Jump_target_cannot_cross_function_boundary_1107", "Jump target cannot cross function boundary."),
	A_return_statement_can_only_be_used_within_a_function_body: r$11(1108, 1, "A_return_statement_can_only_be_used_within_a_function_body_1108", "A 'return' statement can only be used within a function body."),
	Expression_expected: r$11(1109, 1, "Expression_expected_1109", "Expression expected."),
	Type_expected: r$11(1110, 1, "Type_expected_1110", "Type expected."),
	Private_field_0_must_be_declared_in_an_enclosing_class: r$11(1111, 1, "Private_field_0_must_be_declared_in_an_enclosing_class_1111", "Private field '{0}' must be declared in an enclosing class."),
	A_default_clause_cannot_appear_more_than_once_in_a_switch_statement: r$11(1113, 1, "A_default_clause_cannot_appear_more_than_once_in_a_switch_statement_1113", "A 'default' clause cannot appear more than once in a 'switch' statement."),
	Duplicate_label_0: r$11(1114, 1, "Duplicate_label_0_1114", "Duplicate label '{0}'."),
	A_continue_statement_can_only_jump_to_a_label_of_an_enclosing_iteration_statement: r$11(1115, 1, "A_continue_statement_can_only_jump_to_a_label_of_an_enclosing_iteration_statement_1115", "A 'continue' statement can only jump to a label of an enclosing iteration statement."),
	A_break_statement_can_only_jump_to_a_label_of_an_enclosing_statement: r$11(1116, 1, "A_break_statement_can_only_jump_to_a_label_of_an_enclosing_statement_1116", "A 'break' statement can only jump to a label of an enclosing statement."),
	An_object_literal_cannot_have_multiple_properties_with_the_same_name: r$11(1117, 1, "An_object_literal_cannot_have_multiple_properties_with_the_same_name_1117", "An object literal cannot have multiple properties with the same name."),
	An_object_literal_cannot_have_multiple_get_Slashset_accessors_with_the_same_name: r$11(1118, 1, "An_object_literal_cannot_have_multiple_get_Slashset_accessors_with_the_same_name_1118", "An object literal cannot have multiple get/set accessors with the same name."),
	An_object_literal_cannot_have_property_and_accessor_with_the_same_name: r$11(1119, 1, "An_object_literal_cannot_have_property_and_accessor_with_the_same_name_1119", "An object literal cannot have property and accessor with the same name."),
	An_export_assignment_cannot_have_modifiers: r$11(1120, 1, "An_export_assignment_cannot_have_modifiers_1120", "An export assignment cannot have modifiers."),
	Octal_literals_are_not_allowed_Use_the_syntax_0: r$11(1121, 1, "Octal_literals_are_not_allowed_Use_the_syntax_0_1121", "Octal literals are not allowed. Use the syntax '{0}'."),
	Variable_declaration_list_cannot_be_empty: r$11(1123, 1, "Variable_declaration_list_cannot_be_empty_1123", "Variable declaration list cannot be empty."),
	Digit_expected: r$11(1124, 1, "Digit_expected_1124", "Digit expected."),
	Hexadecimal_digit_expected: r$11(1125, 1, "Hexadecimal_digit_expected_1125", "Hexadecimal digit expected."),
	Unexpected_end_of_text: r$11(1126, 1, "Unexpected_end_of_text_1126", "Unexpected end of text."),
	Invalid_character: r$11(1127, 1, "Invalid_character_1127", "Invalid character."),
	Declaration_or_statement_expected: r$11(1128, 1, "Declaration_or_statement_expected_1128", "Declaration or statement expected."),
	Statement_expected: r$11(1129, 1, "Statement_expected_1129", "Statement expected."),
	case_or_default_expected: r$11(1130, 1, "case_or_default_expected_1130", "'case' or 'default' expected."),
	Property_or_signature_expected: r$11(1131, 1, "Property_or_signature_expected_1131", "Property or signature expected."),
	Enum_member_expected: r$11(1132, 1, "Enum_member_expected_1132", "Enum member expected."),
	Variable_declaration_expected: r$11(1134, 1, "Variable_declaration_expected_1134", "Variable declaration expected."),
	Argument_expression_expected: r$11(1135, 1, "Argument_expression_expected_1135", "Argument expression expected."),
	Property_assignment_expected: r$11(1136, 1, "Property_assignment_expected_1136", "Property assignment expected."),
	Expression_or_comma_expected: r$11(1137, 1, "Expression_or_comma_expected_1137", "Expression or comma expected."),
	Parameter_declaration_expected: r$11(1138, 1, "Parameter_declaration_expected_1138", "Parameter declaration expected."),
	Type_parameter_declaration_expected: r$11(1139, 1, "Type_parameter_declaration_expected_1139", "Type parameter declaration expected."),
	Type_argument_expected: r$11(1140, 1, "Type_argument_expected_1140", "Type argument expected."),
	String_literal_expected: r$11(1141, 1, "String_literal_expected_1141", "String literal expected."),
	Line_break_not_permitted_here: r$11(1142, 1, "Line_break_not_permitted_here_1142", "Line break not permitted here."),
	or_expected: r$11(1144, 1, "or_expected_1144", "'{' or ';' expected."),
	or_JSX_element_expected: r$11(1145, 1, "or_JSX_element_expected_1145", "'{' or JSX element expected."),
	Declaration_expected: r$11(1146, 1, "Declaration_expected_1146", "Declaration expected."),
	Import_declarations_in_a_namespace_cannot_reference_a_module: r$11(1147, 1, "Import_declarations_in_a_namespace_cannot_reference_a_module_1147", "Import declarations in a namespace cannot reference a module."),
	Cannot_use_imports_exports_or_module_augmentations_when_module_is_none: r$11(1148, 1, "Cannot_use_imports_exports_or_module_augmentations_when_module_is_none_1148", "Cannot use imports, exports, or module augmentations when '--module' is 'none'."),
	File_name_0_differs_from_already_included_file_name_1_only_in_casing: r$11(1149, 1, "File_name_0_differs_from_already_included_file_name_1_only_in_casing_1149", "File name '{0}' differs from already included file name '{1}' only in casing."),
	_0_declarations_must_be_initialized: r$11(1155, 1, "_0_declarations_must_be_initialized_1155", "'{0}' declarations must be initialized."),
	_0_declarations_can_only_be_declared_inside_a_block: r$11(1156, 1, "_0_declarations_can_only_be_declared_inside_a_block_1156", "'{0}' declarations can only be declared inside a block."),
	Unterminated_template_literal: r$11(1160, 1, "Unterminated_template_literal_1160", "Unterminated template literal."),
	Unterminated_regular_expression_literal: r$11(1161, 1, "Unterminated_regular_expression_literal_1161", "Unterminated regular expression literal."),
	An_object_member_cannot_be_declared_optional: r$11(1162, 1, "An_object_member_cannot_be_declared_optional_1162", "An object member cannot be declared optional."),
	A_yield_expression_is_only_allowed_in_a_generator_body: r$11(1163, 1, "A_yield_expression_is_only_allowed_in_a_generator_body_1163", "A 'yield' expression is only allowed in a generator body."),
	Computed_property_names_are_not_allowed_in_enums: r$11(1164, 1, "Computed_property_names_are_not_allowed_in_enums_1164", "Computed property names are not allowed in enums."),
	A_computed_property_name_in_an_ambient_context_must_refer_to_an_expression_whose_type_is_a_literal_type_or_a_unique_symbol_type: r$11(1165, 1, "A_computed_property_name_in_an_ambient_context_must_refer_to_an_expression_whose_type_is_a_literal_t_1165", "A computed property name in an ambient context must refer to an expression whose type is a literal type or a 'unique symbol' type."),
	A_computed_property_name_in_a_class_property_declaration_must_have_a_simple_literal_type_or_a_unique_symbol_type: r$11(1166, 1, "A_computed_property_name_in_a_class_property_declaration_must_have_a_simple_literal_type_or_a_unique_1166", "A computed property name in a class property declaration must have a simple literal type or a 'unique symbol' type."),
	A_computed_property_name_in_a_method_overload_must_refer_to_an_expression_whose_type_is_a_literal_type_or_a_unique_symbol_type: r$11(1168, 1, "A_computed_property_name_in_a_method_overload_must_refer_to_an_expression_whose_type_is_a_literal_ty_1168", "A computed property name in a method overload must refer to an expression whose type is a literal type or a 'unique symbol' type."),
	A_computed_property_name_in_an_interface_must_refer_to_an_expression_whose_type_is_a_literal_type_or_a_unique_symbol_type: r$11(1169, 1, "A_computed_property_name_in_an_interface_must_refer_to_an_expression_whose_type_is_a_literal_type_or_1169", "A computed property name in an interface must refer to an expression whose type is a literal type or a 'unique symbol' type."),
	A_computed_property_name_in_a_type_literal_must_refer_to_an_expression_whose_type_is_a_literal_type_or_a_unique_symbol_type: r$11(1170, 1, "A_computed_property_name_in_a_type_literal_must_refer_to_an_expression_whose_type_is_a_literal_type__1170", "A computed property name in a type literal must refer to an expression whose type is a literal type or a 'unique symbol' type."),
	A_comma_expression_is_not_allowed_in_a_computed_property_name: r$11(1171, 1, "A_comma_expression_is_not_allowed_in_a_computed_property_name_1171", "A comma expression is not allowed in a computed property name."),
	extends_clause_already_seen: r$11(1172, 1, "extends_clause_already_seen_1172", "'extends' clause already seen."),
	extends_clause_must_precede_implements_clause: r$11(1173, 1, "extends_clause_must_precede_implements_clause_1173", "'extends' clause must precede 'implements' clause."),
	Classes_can_only_extend_a_single_class: r$11(1174, 1, "Classes_can_only_extend_a_single_class_1174", "Classes can only extend a single class."),
	implements_clause_already_seen: r$11(1175, 1, "implements_clause_already_seen_1175", "'implements' clause already seen."),
	Interface_declaration_cannot_have_implements_clause: r$11(1176, 1, "Interface_declaration_cannot_have_implements_clause_1176", "Interface declaration cannot have 'implements' clause."),
	Binary_digit_expected: r$11(1177, 1, "Binary_digit_expected_1177", "Binary digit expected."),
	Octal_digit_expected: r$11(1178, 1, "Octal_digit_expected_1178", "Octal digit expected."),
	Unexpected_token_expected: r$11(1179, 1, "Unexpected_token_expected_1179", "Unexpected token. '{' expected."),
	Property_destructuring_pattern_expected: r$11(1180, 1, "Property_destructuring_pattern_expected_1180", "Property destructuring pattern expected."),
	Array_element_destructuring_pattern_expected: r$11(1181, 1, "Array_element_destructuring_pattern_expected_1181", "Array element destructuring pattern expected."),
	A_destructuring_declaration_must_have_an_initializer: r$11(1182, 1, "A_destructuring_declaration_must_have_an_initializer_1182", "A destructuring declaration must have an initializer."),
	An_implementation_cannot_be_declared_in_ambient_contexts: r$11(1183, 1, "An_implementation_cannot_be_declared_in_ambient_contexts_1183", "An implementation cannot be declared in ambient contexts."),
	Modifiers_cannot_appear_here: r$11(1184, 1, "Modifiers_cannot_appear_here_1184", "Modifiers cannot appear here."),
	Merge_conflict_marker_encountered: r$11(1185, 1, "Merge_conflict_marker_encountered_1185", "Merge conflict marker encountered."),
	A_rest_element_cannot_have_an_initializer: r$11(1186, 1, "A_rest_element_cannot_have_an_initializer_1186", "A rest element cannot have an initializer."),
	A_parameter_property_may_not_be_declared_using_a_binding_pattern: r$11(1187, 1, "A_parameter_property_may_not_be_declared_using_a_binding_pattern_1187", "A parameter property may not be declared using a binding pattern."),
	Only_a_single_variable_declaration_is_allowed_in_a_for_of_statement: r$11(1188, 1, "Only_a_single_variable_declaration_is_allowed_in_a_for_of_statement_1188", "Only a single variable declaration is allowed in a 'for...of' statement."),
	The_variable_declaration_of_a_for_in_statement_cannot_have_an_initializer: r$11(1189, 1, "The_variable_declaration_of_a_for_in_statement_cannot_have_an_initializer_1189", "The variable declaration of a 'for...in' statement cannot have an initializer."),
	The_variable_declaration_of_a_for_of_statement_cannot_have_an_initializer: r$11(1190, 1, "The_variable_declaration_of_a_for_of_statement_cannot_have_an_initializer_1190", "The variable declaration of a 'for...of' statement cannot have an initializer."),
	An_import_declaration_cannot_have_modifiers: r$11(1191, 1, "An_import_declaration_cannot_have_modifiers_1191", "An import declaration cannot have modifiers."),
	Module_0_has_no_default_export: r$11(1192, 1, "Module_0_has_no_default_export_1192", "Module '{0}' has no default export."),
	An_export_declaration_cannot_have_modifiers: r$11(1193, 1, "An_export_declaration_cannot_have_modifiers_1193", "An export declaration cannot have modifiers."),
	Export_declarations_are_not_permitted_in_a_namespace: r$11(1194, 1, "Export_declarations_are_not_permitted_in_a_namespace_1194", "Export declarations are not permitted in a namespace."),
	export_Asterisk_does_not_re_export_a_default: r$11(1195, 1, "export_Asterisk_does_not_re_export_a_default_1195", "'export *' does not re-export a default."),
	Catch_clause_variable_type_annotation_must_be_any_or_unknown_if_specified: r$11(1196, 1, "Catch_clause_variable_type_annotation_must_be_any_or_unknown_if_specified_1196", "Catch clause variable type annotation must be 'any' or 'unknown' if specified."),
	Catch_clause_variable_cannot_have_an_initializer: r$11(1197, 1, "Catch_clause_variable_cannot_have_an_initializer_1197", "Catch clause variable cannot have an initializer."),
	An_extended_Unicode_escape_value_must_be_between_0x0_and_0x10FFFF_inclusive: r$11(1198, 1, "An_extended_Unicode_escape_value_must_be_between_0x0_and_0x10FFFF_inclusive_1198", "An extended Unicode escape value must be between 0x0 and 0x10FFFF inclusive."),
	Unterminated_Unicode_escape_sequence: r$11(1199, 1, "Unterminated_Unicode_escape_sequence_1199", "Unterminated Unicode escape sequence."),
	Line_terminator_not_permitted_before_arrow: r$11(1200, 1, "Line_terminator_not_permitted_before_arrow_1200", "Line terminator not permitted before arrow."),
	Import_assignment_cannot_be_used_when_targeting_ECMAScript_modules_Consider_using_import_Asterisk_as_ns_from_mod_import_a_from_mod_import_d_from_mod_or_another_module_format_instead: r$11(1202, 1, "Import_assignment_cannot_be_used_when_targeting_ECMAScript_modules_Consider_using_import_Asterisk_as_1202", `Import assignment cannot be used when targeting ECMAScript modules. Consider using 'import * as ns from "mod"', 'import {a} from "mod"', 'import d from "mod"', or another module format instead.`),
	Export_assignment_cannot_be_used_when_targeting_ECMAScript_modules_Consider_using_export_default_or_another_module_format_instead: r$11(1203, 1, "Export_assignment_cannot_be_used_when_targeting_ECMAScript_modules_Consider_using_export_default_or__1203", "Export assignment cannot be used when targeting ECMAScript modules. Consider using 'export default' or another module format instead."),
	Re_exporting_a_type_when_0_is_enabled_requires_using_export_type: r$11(1205, 1, "Re_exporting_a_type_when_0_is_enabled_requires_using_export_type_1205", "Re-exporting a type when '{0}' is enabled requires using 'export type'."),
	Decorators_are_not_valid_here: r$11(1206, 1, "Decorators_are_not_valid_here_1206", "Decorators are not valid here."),
	Decorators_cannot_be_applied_to_multiple_get_Slashset_accessors_of_the_same_name: r$11(1207, 1, "Decorators_cannot_be_applied_to_multiple_get_Slashset_accessors_of_the_same_name_1207", "Decorators cannot be applied to multiple get/set accessors of the same name."),
	Invalid_optional_chain_from_new_expression_Did_you_mean_to_call_0: r$11(1209, 1, "Invalid_optional_chain_from_new_expression_Did_you_mean_to_call_0_1209", "Invalid optional chain from new expression. Did you mean to call '{0}()'?"),
	Code_contained_in_a_class_is_evaluated_in_JavaScript_s_strict_mode_which_does_not_allow_this_use_of_0_For_more_information_see_https_Colon_Slash_Slashdeveloper_mozilla_org_Slashen_US_Slashdocs_SlashWeb_SlashJavaScript_SlashReference_SlashStrict_mode: r$11(1210, 1, "Code_contained_in_a_class_is_evaluated_in_JavaScript_s_strict_mode_which_does_not_allow_this_use_of__1210", "Code contained in a class is evaluated in JavaScript's strict mode which does not allow this use of '{0}'. For more information, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode."),
	A_class_declaration_without_the_default_modifier_must_have_a_name: r$11(1211, 1, "A_class_declaration_without_the_default_modifier_must_have_a_name_1211", "A class declaration without the 'default' modifier must have a name."),
	Identifier_expected_0_is_a_reserved_word_in_strict_mode: r$11(1212, 1, "Identifier_expected_0_is_a_reserved_word_in_strict_mode_1212", "Identifier expected. '{0}' is a reserved word in strict mode."),
	Identifier_expected_0_is_a_reserved_word_in_strict_mode_Class_definitions_are_automatically_in_strict_mode: r$11(1213, 1, "Identifier_expected_0_is_a_reserved_word_in_strict_mode_Class_definitions_are_automatically_in_stric_1213", "Identifier expected. '{0}' is a reserved word in strict mode. Class definitions are automatically in strict mode."),
	Identifier_expected_0_is_a_reserved_word_in_strict_mode_Modules_are_automatically_in_strict_mode: r$11(1214, 1, "Identifier_expected_0_is_a_reserved_word_in_strict_mode_Modules_are_automatically_in_strict_mode_1214", "Identifier expected. '{0}' is a reserved word in strict mode. Modules are automatically in strict mode."),
	Invalid_use_of_0_Modules_are_automatically_in_strict_mode: r$11(1215, 1, "Invalid_use_of_0_Modules_are_automatically_in_strict_mode_1215", "Invalid use of '{0}'. Modules are automatically in strict mode."),
	Identifier_expected_esModule_is_reserved_as_an_exported_marker_when_transforming_ECMAScript_modules: r$11(1216, 1, "Identifier_expected_esModule_is_reserved_as_an_exported_marker_when_transforming_ECMAScript_modules_1216", "Identifier expected. '__esModule' is reserved as an exported marker when transforming ECMAScript modules."),
	Export_assignment_is_not_supported_when_module_flag_is_system: r$11(1218, 1, "Export_assignment_is_not_supported_when_module_flag_is_system_1218", "Export assignment is not supported when '--module' flag is 'system'."),
	Generators_are_not_allowed_in_an_ambient_context: r$11(1221, 1, "Generators_are_not_allowed_in_an_ambient_context_1221", "Generators are not allowed in an ambient context."),
	An_overload_signature_cannot_be_declared_as_a_generator: r$11(1222, 1, "An_overload_signature_cannot_be_declared_as_a_generator_1222", "An overload signature cannot be declared as a generator."),
	_0_tag_already_specified: r$11(1223, 1, "_0_tag_already_specified_1223", "'{0}' tag already specified."),
	Signature_0_must_be_a_type_predicate: r$11(1224, 1, "Signature_0_must_be_a_type_predicate_1224", "Signature '{0}' must be a type predicate."),
	Cannot_find_parameter_0: r$11(1225, 1, "Cannot_find_parameter_0_1225", "Cannot find parameter '{0}'."),
	Type_predicate_0_is_not_assignable_to_1: r$11(1226, 1, "Type_predicate_0_is_not_assignable_to_1_1226", "Type predicate '{0}' is not assignable to '{1}'."),
	Parameter_0_is_not_in_the_same_position_as_parameter_1: r$11(1227, 1, "Parameter_0_is_not_in_the_same_position_as_parameter_1_1227", "Parameter '{0}' is not in the same position as parameter '{1}'."),
	A_type_predicate_is_only_allowed_in_return_type_position_for_functions_and_methods: r$11(1228, 1, "A_type_predicate_is_only_allowed_in_return_type_position_for_functions_and_methods_1228", "A type predicate is only allowed in return type position for functions and methods."),
	A_type_predicate_cannot_reference_a_rest_parameter: r$11(1229, 1, "A_type_predicate_cannot_reference_a_rest_parameter_1229", "A type predicate cannot reference a rest parameter."),
	A_type_predicate_cannot_reference_element_0_in_a_binding_pattern: r$11(1230, 1, "A_type_predicate_cannot_reference_element_0_in_a_binding_pattern_1230", "A type predicate cannot reference element '{0}' in a binding pattern."),
	An_export_assignment_must_be_at_the_top_level_of_a_file_or_module_declaration: r$11(1231, 1, "An_export_assignment_must_be_at_the_top_level_of_a_file_or_module_declaration_1231", "An export assignment must be at the top level of a file or module declaration."),
	An_import_declaration_can_only_be_used_at_the_top_level_of_a_namespace_or_module: r$11(1232, 1, "An_import_declaration_can_only_be_used_at_the_top_level_of_a_namespace_or_module_1232", "An import declaration can only be used at the top level of a namespace or module."),
	An_export_declaration_can_only_be_used_at_the_top_level_of_a_namespace_or_module: r$11(1233, 1, "An_export_declaration_can_only_be_used_at_the_top_level_of_a_namespace_or_module_1233", "An export declaration can only be used at the top level of a namespace or module."),
	An_ambient_module_declaration_is_only_allowed_at_the_top_level_in_a_file: r$11(1234, 1, "An_ambient_module_declaration_is_only_allowed_at_the_top_level_in_a_file_1234", "An ambient module declaration is only allowed at the top level in a file."),
	A_namespace_declaration_is_only_allowed_at_the_top_level_of_a_namespace_or_module: r$11(1235, 1, "A_namespace_declaration_is_only_allowed_at_the_top_level_of_a_namespace_or_module_1235", "A namespace declaration is only allowed at the top level of a namespace or module."),
	The_return_type_of_a_property_decorator_function_must_be_either_void_or_any: r$11(1236, 1, "The_return_type_of_a_property_decorator_function_must_be_either_void_or_any_1236", "The return type of a property decorator function must be either 'void' or 'any'."),
	The_return_type_of_a_parameter_decorator_function_must_be_either_void_or_any: r$11(1237, 1, "The_return_type_of_a_parameter_decorator_function_must_be_either_void_or_any_1237", "The return type of a parameter decorator function must be either 'void' or 'any'."),
	Unable_to_resolve_signature_of_class_decorator_when_called_as_an_expression: r$11(1238, 1, "Unable_to_resolve_signature_of_class_decorator_when_called_as_an_expression_1238", "Unable to resolve signature of class decorator when called as an expression."),
	Unable_to_resolve_signature_of_parameter_decorator_when_called_as_an_expression: r$11(1239, 1, "Unable_to_resolve_signature_of_parameter_decorator_when_called_as_an_expression_1239", "Unable to resolve signature of parameter decorator when called as an expression."),
	Unable_to_resolve_signature_of_property_decorator_when_called_as_an_expression: r$11(1240, 1, "Unable_to_resolve_signature_of_property_decorator_when_called_as_an_expression_1240", "Unable to resolve signature of property decorator when called as an expression."),
	Unable_to_resolve_signature_of_method_decorator_when_called_as_an_expression: r$11(1241, 1, "Unable_to_resolve_signature_of_method_decorator_when_called_as_an_expression_1241", "Unable to resolve signature of method decorator when called as an expression."),
	abstract_modifier_can_only_appear_on_a_class_method_or_property_declaration: r$11(1242, 1, "abstract_modifier_can_only_appear_on_a_class_method_or_property_declaration_1242", "'abstract' modifier can only appear on a class, method, or property declaration."),
	_0_modifier_cannot_be_used_with_1_modifier: r$11(1243, 1, "_0_modifier_cannot_be_used_with_1_modifier_1243", "'{0}' modifier cannot be used with '{1}' modifier."),
	Abstract_methods_can_only_appear_within_an_abstract_class: r$11(1244, 1, "Abstract_methods_can_only_appear_within_an_abstract_class_1244", "Abstract methods can only appear within an abstract class."),
	Method_0_cannot_have_an_implementation_because_it_is_marked_abstract: r$11(1245, 1, "Method_0_cannot_have_an_implementation_because_it_is_marked_abstract_1245", "Method '{0}' cannot have an implementation because it is marked abstract."),
	An_interface_property_cannot_have_an_initializer: r$11(1246, 1, "An_interface_property_cannot_have_an_initializer_1246", "An interface property cannot have an initializer."),
	A_type_literal_property_cannot_have_an_initializer: r$11(1247, 1, "A_type_literal_property_cannot_have_an_initializer_1247", "A type literal property cannot have an initializer."),
	A_class_member_cannot_have_the_0_keyword: r$11(1248, 1, "A_class_member_cannot_have_the_0_keyword_1248", "A class member cannot have the '{0}' keyword."),
	A_decorator_can_only_decorate_a_method_implementation_not_an_overload: r$11(1249, 1, "A_decorator_can_only_decorate_a_method_implementation_not_an_overload_1249", "A decorator can only decorate a method implementation, not an overload."),
	Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES5: r$11(1250, 1, "Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES5_1250", "Function declarations are not allowed inside blocks in strict mode when targeting 'ES5'."),
	Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES5_Class_definitions_are_automatically_in_strict_mode: r$11(1251, 1, "Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES5_Class_definiti_1251", "Function declarations are not allowed inside blocks in strict mode when targeting 'ES5'. Class definitions are automatically in strict mode."),
	Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES5_Modules_are_automatically_in_strict_mode: r$11(1252, 1, "Function_declarations_are_not_allowed_inside_blocks_in_strict_mode_when_targeting_ES5_Modules_are_au_1252", "Function declarations are not allowed inside blocks in strict mode when targeting 'ES5'. Modules are automatically in strict mode."),
	Abstract_properties_can_only_appear_within_an_abstract_class: r$11(1253, 1, "Abstract_properties_can_only_appear_within_an_abstract_class_1253", "Abstract properties can only appear within an abstract class."),
	A_const_initializer_in_an_ambient_context_must_be_a_string_or_numeric_literal_or_literal_enum_reference: r$11(1254, 1, "A_const_initializer_in_an_ambient_context_must_be_a_string_or_numeric_literal_or_literal_enum_refere_1254", "A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference."),
	A_definite_assignment_assertion_is_not_permitted_in_this_context: r$11(1255, 1, "A_definite_assignment_assertion_is_not_permitted_in_this_context_1255", "A definite assignment assertion '!' is not permitted in this context."),
	A_required_element_cannot_follow_an_optional_element: r$11(1257, 1, "A_required_element_cannot_follow_an_optional_element_1257", "A required element cannot follow an optional element."),
	A_default_export_must_be_at_the_top_level_of_a_file_or_module_declaration: r$11(1258, 1, "A_default_export_must_be_at_the_top_level_of_a_file_or_module_declaration_1258", "A default export must be at the top level of a file or module declaration."),
	Module_0_can_only_be_default_imported_using_the_1_flag: r$11(1259, 1, "Module_0_can_only_be_default_imported_using_the_1_flag_1259", "Module '{0}' can only be default-imported using the '{1}' flag"),
	Keywords_cannot_contain_escape_characters: r$11(1260, 1, "Keywords_cannot_contain_escape_characters_1260", "Keywords cannot contain escape characters."),
	Already_included_file_name_0_differs_from_file_name_1_only_in_casing: r$11(1261, 1, "Already_included_file_name_0_differs_from_file_name_1_only_in_casing_1261", "Already included file name '{0}' differs from file name '{1}' only in casing."),
	Identifier_expected_0_is_a_reserved_word_at_the_top_level_of_a_module: r$11(1262, 1, "Identifier_expected_0_is_a_reserved_word_at_the_top_level_of_a_module_1262", "Identifier expected. '{0}' is a reserved word at the top-level of a module."),
	Declarations_with_initializers_cannot_also_have_definite_assignment_assertions: r$11(1263, 1, "Declarations_with_initializers_cannot_also_have_definite_assignment_assertions_1263", "Declarations with initializers cannot also have definite assignment assertions."),
	Declarations_with_definite_assignment_assertions_must_also_have_type_annotations: r$11(1264, 1, "Declarations_with_definite_assignment_assertions_must_also_have_type_annotations_1264", "Declarations with definite assignment assertions must also have type annotations."),
	A_rest_element_cannot_follow_another_rest_element: r$11(1265, 1, "A_rest_element_cannot_follow_another_rest_element_1265", "A rest element cannot follow another rest element."),
	An_optional_element_cannot_follow_a_rest_element: r$11(1266, 1, "An_optional_element_cannot_follow_a_rest_element_1266", "An optional element cannot follow a rest element."),
	Property_0_cannot_have_an_initializer_because_it_is_marked_abstract: r$11(1267, 1, "Property_0_cannot_have_an_initializer_because_it_is_marked_abstract_1267", "Property '{0}' cannot have an initializer because it is marked abstract."),
	An_index_signature_parameter_type_must_be_string_number_symbol_or_a_template_literal_type: r$11(1268, 1, "An_index_signature_parameter_type_must_be_string_number_symbol_or_a_template_literal_type_1268", "An index signature parameter type must be 'string', 'number', 'symbol', or a template literal type."),
	Cannot_use_export_import_on_a_type_or_type_only_namespace_when_0_is_enabled: r$11(1269, 1, "Cannot_use_export_import_on_a_type_or_type_only_namespace_when_0_is_enabled_1269", "Cannot use 'export import' on a type or type-only namespace when '{0}' is enabled."),
	Decorator_function_return_type_0_is_not_assignable_to_type_1: r$11(1270, 1, "Decorator_function_return_type_0_is_not_assignable_to_type_1_1270", "Decorator function return type '{0}' is not assignable to type '{1}'."),
	Decorator_function_return_type_is_0_but_is_expected_to_be_void_or_any: r$11(1271, 1, "Decorator_function_return_type_is_0_but_is_expected_to_be_void_or_any_1271", "Decorator function return type is '{0}' but is expected to be 'void' or 'any'."),
	A_type_referenced_in_a_decorated_signature_must_be_imported_with_import_type_or_a_namespace_import_when_isolatedModules_and_emitDecoratorMetadata_are_enabled: r$11(1272, 1, "A_type_referenced_in_a_decorated_signature_must_be_imported_with_import_type_or_a_namespace_import_w_1272", "A type referenced in a decorated signature must be imported with 'import type' or a namespace import when 'isolatedModules' and 'emitDecoratorMetadata' are enabled."),
	_0_modifier_cannot_appear_on_a_type_parameter: r$11(1273, 1, "_0_modifier_cannot_appear_on_a_type_parameter_1273", "'{0}' modifier cannot appear on a type parameter"),
	_0_modifier_can_only_appear_on_a_type_parameter_of_a_class_interface_or_type_alias: r$11(1274, 1, "_0_modifier_can_only_appear_on_a_type_parameter_of_a_class_interface_or_type_alias_1274", "'{0}' modifier can only appear on a type parameter of a class, interface or type alias"),
	accessor_modifier_can_only_appear_on_a_property_declaration: r$11(1275, 1, "accessor_modifier_can_only_appear_on_a_property_declaration_1275", "'accessor' modifier can only appear on a property declaration."),
	An_accessor_property_cannot_be_declared_optional: r$11(1276, 1, "An_accessor_property_cannot_be_declared_optional_1276", "An 'accessor' property cannot be declared optional."),
	_0_modifier_can_only_appear_on_a_type_parameter_of_a_function_method_or_class: r$11(1277, 1, "_0_modifier_can_only_appear_on_a_type_parameter_of_a_function_method_or_class_1277", "'{0}' modifier can only appear on a type parameter of a function, method or class"),
	The_runtime_will_invoke_the_decorator_with_1_arguments_but_the_decorator_expects_0: r$11(1278, 1, "The_runtime_will_invoke_the_decorator_with_1_arguments_but_the_decorator_expects_0_1278", "The runtime will invoke the decorator with {1} arguments, but the decorator expects {0}."),
	The_runtime_will_invoke_the_decorator_with_1_arguments_but_the_decorator_expects_at_least_0: r$11(1279, 1, "The_runtime_will_invoke_the_decorator_with_1_arguments_but_the_decorator_expects_at_least_0_1279", "The runtime will invoke the decorator with {1} arguments, but the decorator expects at least {0}."),
	Namespaces_are_not_allowed_in_global_script_files_when_0_is_enabled_If_this_file_is_not_intended_to_be_a_global_script_set_moduleDetection_to_force_or_add_an_empty_export_statement: r$11(1280, 1, "Namespaces_are_not_allowed_in_global_script_files_when_0_is_enabled_If_this_file_is_not_intended_to__1280", "Namespaces are not allowed in global script files when '{0}' is enabled. If this file is not intended to be a global script, set 'moduleDetection' to 'force' or add an empty 'export {}' statement."),
	Cannot_access_0_from_another_file_without_qualification_when_1_is_enabled_Use_2_instead: r$11(1281, 1, "Cannot_access_0_from_another_file_without_qualification_when_1_is_enabled_Use_2_instead_1281", "Cannot access '{0}' from another file without qualification when '{1}' is enabled. Use '{2}' instead."),
	An_export_declaration_must_reference_a_value_when_verbatimModuleSyntax_is_enabled_but_0_only_refers_to_a_type: r$11(1282, 1, "An_export_declaration_must_reference_a_value_when_verbatimModuleSyntax_is_enabled_but_0_only_refers__1282", "An 'export =' declaration must reference a value when 'verbatimModuleSyntax' is enabled, but '{0}' only refers to a type."),
	An_export_declaration_must_reference_a_real_value_when_verbatimModuleSyntax_is_enabled_but_0_resolves_to_a_type_only_declaration: r$11(1283, 1, "An_export_declaration_must_reference_a_real_value_when_verbatimModuleSyntax_is_enabled_but_0_resolve_1283", "An 'export =' declaration must reference a real value when 'verbatimModuleSyntax' is enabled, but '{0}' resolves to a type-only declaration."),
	An_export_default_must_reference_a_value_when_verbatimModuleSyntax_is_enabled_but_0_only_refers_to_a_type: r$11(1284, 1, "An_export_default_must_reference_a_value_when_verbatimModuleSyntax_is_enabled_but_0_only_refers_to_a_1284", "An 'export default' must reference a value when 'verbatimModuleSyntax' is enabled, but '{0}' only refers to a type."),
	An_export_default_must_reference_a_real_value_when_verbatimModuleSyntax_is_enabled_but_0_resolves_to_a_type_only_declaration: r$11(1285, 1, "An_export_default_must_reference_a_real_value_when_verbatimModuleSyntax_is_enabled_but_0_resolves_to_1285", "An 'export default' must reference a real value when 'verbatimModuleSyntax' is enabled, but '{0}' resolves to a type-only declaration."),
	ESM_syntax_is_not_allowed_in_a_CommonJS_module_when_verbatimModuleSyntax_is_enabled: r$11(1286, 1, "ESM_syntax_is_not_allowed_in_a_CommonJS_module_when_verbatimModuleSyntax_is_enabled_1286", "ESM syntax is not allowed in a CommonJS module when 'verbatimModuleSyntax' is enabled."),
	A_top_level_export_modifier_cannot_be_used_on_value_declarations_in_a_CommonJS_module_when_verbatimModuleSyntax_is_enabled: r$11(1287, 1, "A_top_level_export_modifier_cannot_be_used_on_value_declarations_in_a_CommonJS_module_when_verbatimM_1287", "A top-level 'export' modifier cannot be used on value declarations in a CommonJS module when 'verbatimModuleSyntax' is enabled."),
	An_import_alias_cannot_resolve_to_a_type_or_type_only_declaration_when_verbatimModuleSyntax_is_enabled: r$11(1288, 1, "An_import_alias_cannot_resolve_to_a_type_or_type_only_declaration_when_verbatimModuleSyntax_is_enabl_1288", "An import alias cannot resolve to a type or type-only declaration when 'verbatimModuleSyntax' is enabled."),
	_0_resolves_to_a_type_only_declaration_and_must_be_marked_type_only_in_this_file_before_re_exporting_when_1_is_enabled_Consider_using_import_type_where_0_is_imported: r$11(1289, 1, "_0_resolves_to_a_type_only_declaration_and_must_be_marked_type_only_in_this_file_before_re_exporting_1289", "'{0}' resolves to a type-only declaration and must be marked type-only in this file before re-exporting when '{1}' is enabled. Consider using 'import type' where '{0}' is imported."),
	_0_resolves_to_a_type_only_declaration_and_must_be_marked_type_only_in_this_file_before_re_exporting_when_1_is_enabled_Consider_using_export_type_0_as_default: r$11(1290, 1, "_0_resolves_to_a_type_only_declaration_and_must_be_marked_type_only_in_this_file_before_re_exporting_1290", "'{0}' resolves to a type-only declaration and must be marked type-only in this file before re-exporting when '{1}' is enabled. Consider using 'export type { {0} as default }'."),
	_0_resolves_to_a_type_and_must_be_marked_type_only_in_this_file_before_re_exporting_when_1_is_enabled_Consider_using_import_type_where_0_is_imported: r$11(1291, 1, "_0_resolves_to_a_type_and_must_be_marked_type_only_in_this_file_before_re_exporting_when_1_is_enable_1291", "'{0}' resolves to a type and must be marked type-only in this file before re-exporting when '{1}' is enabled. Consider using 'import type' where '{0}' is imported."),
	_0_resolves_to_a_type_and_must_be_marked_type_only_in_this_file_before_re_exporting_when_1_is_enabled_Consider_using_export_type_0_as_default: r$11(1292, 1, "_0_resolves_to_a_type_and_must_be_marked_type_only_in_this_file_before_re_exporting_when_1_is_enable_1292", "'{0}' resolves to a type and must be marked type-only in this file before re-exporting when '{1}' is enabled. Consider using 'export type { {0} as default }'."),
	ESM_syntax_is_not_allowed_in_a_CommonJS_module_when_module_is_set_to_preserve: r$11(1293, 1, "ESM_syntax_is_not_allowed_in_a_CommonJS_module_when_module_is_set_to_preserve_1293", "ESM syntax is not allowed in a CommonJS module when 'module' is set to 'preserve'."),
	This_syntax_is_not_allowed_when_erasableSyntaxOnly_is_enabled: r$11(1294, 1, "This_syntax_is_not_allowed_when_erasableSyntaxOnly_is_enabled_1294", "This syntax is not allowed when 'erasableSyntaxOnly' is enabled."),
	with_statements_are_not_allowed_in_an_async_function_block: r$11(1300, 1, "with_statements_are_not_allowed_in_an_async_function_block_1300", "'with' statements are not allowed in an async function block."),
	await_expressions_are_only_allowed_within_async_functions_and_at_the_top_levels_of_modules: r$11(1308, 1, "await_expressions_are_only_allowed_within_async_functions_and_at_the_top_levels_of_modules_1308", "'await' expressions are only allowed within async functions and at the top levels of modules."),
	The_current_file_is_a_CommonJS_module_and_cannot_use_await_at_the_top_level: r$11(1309, 1, "The_current_file_is_a_CommonJS_module_and_cannot_use_await_at_the_top_level_1309", "The current file is a CommonJS module and cannot use 'await' at the top level."),
	Did_you_mean_to_use_a_Colon_An_can_only_follow_a_property_name_when_the_containing_object_literal_is_part_of_a_destructuring_pattern: r$11(1312, 1, "Did_you_mean_to_use_a_Colon_An_can_only_follow_a_property_name_when_the_containing_object_literal_is_1312", "Did you mean to use a ':'? An '=' can only follow a property name when the containing object literal is part of a destructuring pattern."),
	The_body_of_an_if_statement_cannot_be_the_empty_statement: r$11(1313, 1, "The_body_of_an_if_statement_cannot_be_the_empty_statement_1313", "The body of an 'if' statement cannot be the empty statement."),
	Global_module_exports_may_only_appear_in_module_files: r$11(1314, 1, "Global_module_exports_may_only_appear_in_module_files_1314", "Global module exports may only appear in module files."),
	Global_module_exports_may_only_appear_in_declaration_files: r$11(1315, 1, "Global_module_exports_may_only_appear_in_declaration_files_1315", "Global module exports may only appear in declaration files."),
	Global_module_exports_may_only_appear_at_top_level: r$11(1316, 1, "Global_module_exports_may_only_appear_at_top_level_1316", "Global module exports may only appear at top level."),
	A_parameter_property_cannot_be_declared_using_a_rest_parameter: r$11(1317, 1, "A_parameter_property_cannot_be_declared_using_a_rest_parameter_1317", "A parameter property cannot be declared using a rest parameter."),
	An_abstract_accessor_cannot_have_an_implementation: r$11(1318, 1, "An_abstract_accessor_cannot_have_an_implementation_1318", "An abstract accessor cannot have an implementation."),
	A_default_export_can_only_be_used_in_an_ECMAScript_style_module: r$11(1319, 1, "A_default_export_can_only_be_used_in_an_ECMAScript_style_module_1319", "A default export can only be used in an ECMAScript-style module."),
	Type_of_await_operand_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member: r$11(1320, 1, "Type_of_await_operand_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member_1320", "Type of 'await' operand must either be a valid promise or must not contain a callable 'then' member."),
	Type_of_yield_operand_in_an_async_generator_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member: r$11(1321, 1, "Type_of_yield_operand_in_an_async_generator_must_either_be_a_valid_promise_or_must_not_contain_a_cal_1321", "Type of 'yield' operand in an async generator must either be a valid promise or must not contain a callable 'then' member."),
	Type_of_iterated_elements_of_a_yield_Asterisk_operand_must_either_be_a_valid_promise_or_must_not_contain_a_callable_then_member: r$11(1322, 1, "Type_of_iterated_elements_of_a_yield_Asterisk_operand_must_either_be_a_valid_promise_or_must_not_con_1322", "Type of iterated elements of a 'yield*' operand must either be a valid promise or must not contain a callable 'then' member."),
	Dynamic_imports_are_only_supported_when_the_module_flag_is_set_to_es2020_es2022_esnext_commonjs_amd_system_umd_node16_node18_or_nodenext: r$11(1323, 1, "Dynamic_imports_are_only_supported_when_the_module_flag_is_set_to_es2020_es2022_esnext_commonjs_amd__1323", "Dynamic imports are only supported when the '--module' flag is set to 'es2020', 'es2022', 'esnext', 'commonjs', 'amd', 'system', 'umd', 'node16', 'node18', or 'nodenext'."),
	Dynamic_imports_only_support_a_second_argument_when_the_module_option_is_set_to_esnext_node16_node18_nodenext_or_preserve: r$11(1324, 1, "Dynamic_imports_only_support_a_second_argument_when_the_module_option_is_set_to_esnext_node16_node18_1324", "Dynamic imports only support a second argument when the '--module' option is set to 'esnext', 'node16', 'node18', 'nodenext', or 'preserve'."),
	Argument_of_dynamic_import_cannot_be_spread_element: r$11(1325, 1, "Argument_of_dynamic_import_cannot_be_spread_element_1325", "Argument of dynamic import cannot be spread element."),
	This_use_of_import_is_invalid_import_calls_can_be_written_but_they_must_have_parentheses_and_cannot_have_type_arguments: r$11(1326, 1, "This_use_of_import_is_invalid_import_calls_can_be_written_but_they_must_have_parentheses_and_cannot__1326", "This use of 'import' is invalid. 'import()' calls can be written, but they must have parentheses and cannot have type arguments."),
	String_literal_with_double_quotes_expected: r$11(1327, 1, "String_literal_with_double_quotes_expected_1327", "String literal with double quotes expected."),
	Property_value_can_only_be_string_literal_numeric_literal_true_false_null_object_literal_or_array_literal: r$11(1328, 1, "Property_value_can_only_be_string_literal_numeric_literal_true_false_null_object_literal_or_array_li_1328", "Property value can only be string literal, numeric literal, 'true', 'false', 'null', object literal or array literal."),
	_0_accepts_too_few_arguments_to_be_used_as_a_decorator_here_Did_you_mean_to_call_it_first_and_write_0: r$11(1329, 1, "_0_accepts_too_few_arguments_to_be_used_as_a_decorator_here_Did_you_mean_to_call_it_first_and_write__1329", "'{0}' accepts too few arguments to be used as a decorator here. Did you mean to call it first and write '@{0}()'?"),
	A_property_of_an_interface_or_type_literal_whose_type_is_a_unique_symbol_type_must_be_readonly: r$11(1330, 1, "A_property_of_an_interface_or_type_literal_whose_type_is_a_unique_symbol_type_must_be_readonly_1330", "A property of an interface or type literal whose type is a 'unique symbol' type must be 'readonly'."),
	A_property_of_a_class_whose_type_is_a_unique_symbol_type_must_be_both_static_and_readonly: r$11(1331, 1, "A_property_of_a_class_whose_type_is_a_unique_symbol_type_must_be_both_static_and_readonly_1331", "A property of a class whose type is a 'unique symbol' type must be both 'static' and 'readonly'."),
	A_variable_whose_type_is_a_unique_symbol_type_must_be_const: r$11(1332, 1, "A_variable_whose_type_is_a_unique_symbol_type_must_be_const_1332", "A variable whose type is a 'unique symbol' type must be 'const'."),
	unique_symbol_types_may_not_be_used_on_a_variable_declaration_with_a_binding_name: r$11(1333, 1, "unique_symbol_types_may_not_be_used_on_a_variable_declaration_with_a_binding_name_1333", "'unique symbol' types may not be used on a variable declaration with a binding name."),
	unique_symbol_types_are_only_allowed_on_variables_in_a_variable_statement: r$11(1334, 1, "unique_symbol_types_are_only_allowed_on_variables_in_a_variable_statement_1334", "'unique symbol' types are only allowed on variables in a variable statement."),
	unique_symbol_types_are_not_allowed_here: r$11(1335, 1, "unique_symbol_types_are_not_allowed_here_1335", "'unique symbol' types are not allowed here."),
	An_index_signature_parameter_type_cannot_be_a_literal_type_or_generic_type_Consider_using_a_mapped_object_type_instead: r$11(1337, 1, "An_index_signature_parameter_type_cannot_be_a_literal_type_or_generic_type_Consider_using_a_mapped_o_1337", "An index signature parameter type cannot be a literal type or generic type. Consider using a mapped object type instead."),
	infer_declarations_are_only_permitted_in_the_extends_clause_of_a_conditional_type: r$11(1338, 1, "infer_declarations_are_only_permitted_in_the_extends_clause_of_a_conditional_type_1338", "'infer' declarations are only permitted in the 'extends' clause of a conditional type."),
	Module_0_does_not_refer_to_a_value_but_is_used_as_a_value_here: r$11(1339, 1, "Module_0_does_not_refer_to_a_value_but_is_used_as_a_value_here_1339", "Module '{0}' does not refer to a value, but is used as a value here."),
	Module_0_does_not_refer_to_a_type_but_is_used_as_a_type_here_Did_you_mean_typeof_import_0: r$11(1340, 1, "Module_0_does_not_refer_to_a_type_but_is_used_as_a_type_here_Did_you_mean_typeof_import_0_1340", "Module '{0}' does not refer to a type, but is used as a type here. Did you mean 'typeof import('{0}')'?"),
	Class_constructor_may_not_be_an_accessor: r$11(1341, 1, "Class_constructor_may_not_be_an_accessor_1341", "Class constructor may not be an accessor."),
	The_import_meta_meta_property_is_only_allowed_when_the_module_option_is_es2020_es2022_esnext_system_node16_node18_or_nodenext: r$11(1343, 1, "The_import_meta_meta_property_is_only_allowed_when_the_module_option_is_es2020_es2022_esnext_system__1343", "The 'import.meta' meta-property is only allowed when the '--module' option is 'es2020', 'es2022', 'esnext', 'system', 'node16', 'node18', or 'nodenext'."),
	A_label_is_not_allowed_here: r$11(1344, 1, "A_label_is_not_allowed_here_1344", "'A label is not allowed here."),
	An_expression_of_type_void_cannot_be_tested_for_truthiness: r$11(1345, 1, "An_expression_of_type_void_cannot_be_tested_for_truthiness_1345", "An expression of type 'void' cannot be tested for truthiness."),
	This_parameter_is_not_allowed_with_use_strict_directive: r$11(1346, 1, "This_parameter_is_not_allowed_with_use_strict_directive_1346", "This parameter is not allowed with 'use strict' directive."),
	use_strict_directive_cannot_be_used_with_non_simple_parameter_list: r$11(1347, 1, "use_strict_directive_cannot_be_used_with_non_simple_parameter_list_1347", "'use strict' directive cannot be used with non-simple parameter list."),
	Non_simple_parameter_declared_here: r$11(1348, 1, "Non_simple_parameter_declared_here_1348", "Non-simple parameter declared here."),
	use_strict_directive_used_here: r$11(1349, 1, "use_strict_directive_used_here_1349", "'use strict' directive used here."),
	Print_the_final_configuration_instead_of_building: r$11(1350, 3, "Print_the_final_configuration_instead_of_building_1350", "Print the final configuration instead of building."),
	An_identifier_or_keyword_cannot_immediately_follow_a_numeric_literal: r$11(1351, 1, "An_identifier_or_keyword_cannot_immediately_follow_a_numeric_literal_1351", "An identifier or keyword cannot immediately follow a numeric literal."),
	A_bigint_literal_cannot_use_exponential_notation: r$11(1352, 1, "A_bigint_literal_cannot_use_exponential_notation_1352", "A bigint literal cannot use exponential notation."),
	A_bigint_literal_must_be_an_integer: r$11(1353, 1, "A_bigint_literal_must_be_an_integer_1353", "A bigint literal must be an integer."),
	readonly_type_modifier_is_only_permitted_on_array_and_tuple_literal_types: r$11(1354, 1, "readonly_type_modifier_is_only_permitted_on_array_and_tuple_literal_types_1354", "'readonly' type modifier is only permitted on array and tuple literal types."),
	A_const_assertions_can_only_be_applied_to_references_to_enum_members_or_string_number_boolean_array_or_object_literals: r$11(1355, 1, "A_const_assertions_can_only_be_applied_to_references_to_enum_members_or_string_number_boolean_array__1355", "A 'const' assertions can only be applied to references to enum members, or string, number, boolean, array, or object literals."),
	Did_you_mean_to_mark_this_function_as_async: r$11(1356, 1, "Did_you_mean_to_mark_this_function_as_async_1356", "Did you mean to mark this function as 'async'?"),
	An_enum_member_name_must_be_followed_by_a_or: r$11(1357, 1, "An_enum_member_name_must_be_followed_by_a_or_1357", "An enum member name must be followed by a ',', '=', or '}'."),
	Tagged_template_expressions_are_not_permitted_in_an_optional_chain: r$11(1358, 1, "Tagged_template_expressions_are_not_permitted_in_an_optional_chain_1358", "Tagged template expressions are not permitted in an optional chain."),
	Identifier_expected_0_is_a_reserved_word_that_cannot_be_used_here: r$11(1359, 1, "Identifier_expected_0_is_a_reserved_word_that_cannot_be_used_here_1359", "Identifier expected. '{0}' is a reserved word that cannot be used here."),
	Type_0_does_not_satisfy_the_expected_type_1: r$11(1360, 1, "Type_0_does_not_satisfy_the_expected_type_1_1360", "Type '{0}' does not satisfy the expected type '{1}'."),
	_0_cannot_be_used_as_a_value_because_it_was_imported_using_import_type: r$11(1361, 1, "_0_cannot_be_used_as_a_value_because_it_was_imported_using_import_type_1361", "'{0}' cannot be used as a value because it was imported using 'import type'."),
	_0_cannot_be_used_as_a_value_because_it_was_exported_using_export_type: r$11(1362, 1, "_0_cannot_be_used_as_a_value_because_it_was_exported_using_export_type_1362", "'{0}' cannot be used as a value because it was exported using 'export type'."),
	A_type_only_import_can_specify_a_default_import_or_named_bindings_but_not_both: r$11(1363, 1, "A_type_only_import_can_specify_a_default_import_or_named_bindings_but_not_both_1363", "A type-only import can specify a default import or named bindings, but not both."),
	Convert_to_type_only_export: r$11(1364, 3, "Convert_to_type_only_export_1364", "Convert to type-only export"),
	Convert_all_re_exported_types_to_type_only_exports: r$11(1365, 3, "Convert_all_re_exported_types_to_type_only_exports_1365", "Convert all re-exported types to type-only exports"),
	Split_into_two_separate_import_declarations: r$11(1366, 3, "Split_into_two_separate_import_declarations_1366", "Split into two separate import declarations"),
	Split_all_invalid_type_only_imports: r$11(1367, 3, "Split_all_invalid_type_only_imports_1367", "Split all invalid type-only imports"),
	Class_constructor_may_not_be_a_generator: r$11(1368, 1, "Class_constructor_may_not_be_a_generator_1368", "Class constructor may not be a generator."),
	Did_you_mean_0: r$11(1369, 3, "Did_you_mean_0_1369", "Did you mean '{0}'?"),
	await_expressions_are_only_allowed_at_the_top_level_of_a_file_when_that_file_is_a_module_but_this_file_has_no_imports_or_exports_Consider_adding_an_empty_export_to_make_this_file_a_module: r$11(1375, 1, "await_expressions_are_only_allowed_at_the_top_level_of_a_file_when_that_file_is_a_module_but_this_fi_1375", "'await' expressions are only allowed at the top level of a file when that file is a module, but this file has no imports or exports. Consider adding an empty 'export {}' to make this file a module."),
	_0_was_imported_here: r$11(1376, 3, "_0_was_imported_here_1376", "'{0}' was imported here."),
	_0_was_exported_here: r$11(1377, 3, "_0_was_exported_here_1377", "'{0}' was exported here."),
	Top_level_await_expressions_are_only_allowed_when_the_module_option_is_set_to_es2022_esnext_system_node16_node18_nodenext_or_preserve_and_the_target_option_is_set_to_es2017_or_higher: r$11(1378, 1, "Top_level_await_expressions_are_only_allowed_when_the_module_option_is_set_to_es2022_esnext_system_n_1378", "Top-level 'await' expressions are only allowed when the 'module' option is set to 'es2022', 'esnext', 'system', 'node16', 'node18', 'nodenext', or 'preserve', and the 'target' option is set to 'es2017' or higher."),
	An_import_alias_cannot_reference_a_declaration_that_was_exported_using_export_type: r$11(1379, 1, "An_import_alias_cannot_reference_a_declaration_that_was_exported_using_export_type_1379", "An import alias cannot reference a declaration that was exported using 'export type'."),
	An_import_alias_cannot_reference_a_declaration_that_was_imported_using_import_type: r$11(1380, 1, "An_import_alias_cannot_reference_a_declaration_that_was_imported_using_import_type_1380", "An import alias cannot reference a declaration that was imported using 'import type'."),
	Unexpected_token_Did_you_mean_or_rbrace: r$11(1381, 1, "Unexpected_token_Did_you_mean_or_rbrace_1381", "Unexpected token. Did you mean `{'}'}` or `&rbrace;`?"),
	Unexpected_token_Did_you_mean_or_gt: r$11(1382, 1, "Unexpected_token_Did_you_mean_or_gt_1382", "Unexpected token. Did you mean `{'>'}` or `&gt;`?"),
	Function_type_notation_must_be_parenthesized_when_used_in_a_union_type: r$11(1385, 1, "Function_type_notation_must_be_parenthesized_when_used_in_a_union_type_1385", "Function type notation must be parenthesized when used in a union type."),
	Constructor_type_notation_must_be_parenthesized_when_used_in_a_union_type: r$11(1386, 1, "Constructor_type_notation_must_be_parenthesized_when_used_in_a_union_type_1386", "Constructor type notation must be parenthesized when used in a union type."),
	Function_type_notation_must_be_parenthesized_when_used_in_an_intersection_type: r$11(1387, 1, "Function_type_notation_must_be_parenthesized_when_used_in_an_intersection_type_1387", "Function type notation must be parenthesized when used in an intersection type."),
	Constructor_type_notation_must_be_parenthesized_when_used_in_an_intersection_type: r$11(1388, 1, "Constructor_type_notation_must_be_parenthesized_when_used_in_an_intersection_type_1388", "Constructor type notation must be parenthesized when used in an intersection type."),
	_0_is_not_allowed_as_a_variable_declaration_name: r$11(1389, 1, "_0_is_not_allowed_as_a_variable_declaration_name_1389", "'{0}' is not allowed as a variable declaration name."),
	_0_is_not_allowed_as_a_parameter_name: r$11(1390, 1, "_0_is_not_allowed_as_a_parameter_name_1390", "'{0}' is not allowed as a parameter name."),
	An_import_alias_cannot_use_import_type: r$11(1392, 1, "An_import_alias_cannot_use_import_type_1392", "An import alias cannot use 'import type'"),
	Imported_via_0_from_file_1: r$11(1393, 3, "Imported_via_0_from_file_1_1393", "Imported via {0} from file '{1}'"),
	Imported_via_0_from_file_1_with_packageId_2: r$11(1394, 3, "Imported_via_0_from_file_1_with_packageId_2_1394", "Imported via {0} from file '{1}' with packageId '{2}'"),
	Imported_via_0_from_file_1_to_import_importHelpers_as_specified_in_compilerOptions: r$11(1395, 3, "Imported_via_0_from_file_1_to_import_importHelpers_as_specified_in_compilerOptions_1395", "Imported via {0} from file '{1}' to import 'importHelpers' as specified in compilerOptions"),
	Imported_via_0_from_file_1_with_packageId_2_to_import_importHelpers_as_specified_in_compilerOptions: r$11(1396, 3, "Imported_via_0_from_file_1_with_packageId_2_to_import_importHelpers_as_specified_in_compilerOptions_1396", "Imported via {0} from file '{1}' with packageId '{2}' to import 'importHelpers' as specified in compilerOptions"),
	Imported_via_0_from_file_1_to_import_jsx_and_jsxs_factory_functions: r$11(1397, 3, "Imported_via_0_from_file_1_to_import_jsx_and_jsxs_factory_functions_1397", "Imported via {0} from file '{1}' to import 'jsx' and 'jsxs' factory functions"),
	Imported_via_0_from_file_1_with_packageId_2_to_import_jsx_and_jsxs_factory_functions: r$11(1398, 3, "Imported_via_0_from_file_1_with_packageId_2_to_import_jsx_and_jsxs_factory_functions_1398", "Imported via {0} from file '{1}' with packageId '{2}' to import 'jsx' and 'jsxs' factory functions"),
	File_is_included_via_import_here: r$11(1399, 3, "File_is_included_via_import_here_1399", "File is included via import here."),
	Referenced_via_0_from_file_1: r$11(1400, 3, "Referenced_via_0_from_file_1_1400", "Referenced via '{0}' from file '{1}'"),
	File_is_included_via_reference_here: r$11(1401, 3, "File_is_included_via_reference_here_1401", "File is included via reference here."),
	Type_library_referenced_via_0_from_file_1: r$11(1402, 3, "Type_library_referenced_via_0_from_file_1_1402", "Type library referenced via '{0}' from file '{1}'"),
	Type_library_referenced_via_0_from_file_1_with_packageId_2: r$11(1403, 3, "Type_library_referenced_via_0_from_file_1_with_packageId_2_1403", "Type library referenced via '{0}' from file '{1}' with packageId '{2}'"),
	File_is_included_via_type_library_reference_here: r$11(1404, 3, "File_is_included_via_type_library_reference_here_1404", "File is included via type library reference here."),
	Library_referenced_via_0_from_file_1: r$11(1405, 3, "Library_referenced_via_0_from_file_1_1405", "Library referenced via '{0}' from file '{1}'"),
	File_is_included_via_library_reference_here: r$11(1406, 3, "File_is_included_via_library_reference_here_1406", "File is included via library reference here."),
	Matched_by_include_pattern_0_in_1: r$11(1407, 3, "Matched_by_include_pattern_0_in_1_1407", "Matched by include pattern '{0}' in '{1}'"),
	File_is_matched_by_include_pattern_specified_here: r$11(1408, 3, "File_is_matched_by_include_pattern_specified_here_1408", "File is matched by include pattern specified here."),
	Part_of_files_list_in_tsconfig_json: r$11(1409, 3, "Part_of_files_list_in_tsconfig_json_1409", "Part of 'files' list in tsconfig.json"),
	File_is_matched_by_files_list_specified_here: r$11(1410, 3, "File_is_matched_by_files_list_specified_here_1410", "File is matched by 'files' list specified here."),
	Output_from_referenced_project_0_included_because_1_specified: r$11(1411, 3, "Output_from_referenced_project_0_included_because_1_specified_1411", "Output from referenced project '{0}' included because '{1}' specified"),
	Output_from_referenced_project_0_included_because_module_is_specified_as_none: r$11(1412, 3, "Output_from_referenced_project_0_included_because_module_is_specified_as_none_1412", "Output from referenced project '{0}' included because '--module' is specified as 'none'"),
	File_is_output_from_referenced_project_specified_here: r$11(1413, 3, "File_is_output_from_referenced_project_specified_here_1413", "File is output from referenced project specified here."),
	Source_from_referenced_project_0_included_because_1_specified: r$11(1414, 3, "Source_from_referenced_project_0_included_because_1_specified_1414", "Source from referenced project '{0}' included because '{1}' specified"),
	Source_from_referenced_project_0_included_because_module_is_specified_as_none: r$11(1415, 3, "Source_from_referenced_project_0_included_because_module_is_specified_as_none_1415", "Source from referenced project '{0}' included because '--module' is specified as 'none'"),
	File_is_source_from_referenced_project_specified_here: r$11(1416, 3, "File_is_source_from_referenced_project_specified_here_1416", "File is source from referenced project specified here."),
	Entry_point_of_type_library_0_specified_in_compilerOptions: r$11(1417, 3, "Entry_point_of_type_library_0_specified_in_compilerOptions_1417", "Entry point of type library '{0}' specified in compilerOptions"),
	Entry_point_of_type_library_0_specified_in_compilerOptions_with_packageId_1: r$11(1418, 3, "Entry_point_of_type_library_0_specified_in_compilerOptions_with_packageId_1_1418", "Entry point of type library '{0}' specified in compilerOptions with packageId '{1}'"),
	File_is_entry_point_of_type_library_specified_here: r$11(1419, 3, "File_is_entry_point_of_type_library_specified_here_1419", "File is entry point of type library specified here."),
	Entry_point_for_implicit_type_library_0: r$11(1420, 3, "Entry_point_for_implicit_type_library_0_1420", "Entry point for implicit type library '{0}'"),
	Entry_point_for_implicit_type_library_0_with_packageId_1: r$11(1421, 3, "Entry_point_for_implicit_type_library_0_with_packageId_1_1421", "Entry point for implicit type library '{0}' with packageId '{1}'"),
	Library_0_specified_in_compilerOptions: r$11(1422, 3, "Library_0_specified_in_compilerOptions_1422", "Library '{0}' specified in compilerOptions"),
	File_is_library_specified_here: r$11(1423, 3, "File_is_library_specified_here_1423", "File is library specified here."),
	Default_library: r$11(1424, 3, "Default_library_1424", "Default library"),
	Default_library_for_target_0: r$11(1425, 3, "Default_library_for_target_0_1425", "Default library for target '{0}'"),
	File_is_default_library_for_target_specified_here: r$11(1426, 3, "File_is_default_library_for_target_specified_here_1426", "File is default library for target specified here."),
	Root_file_specified_for_compilation: r$11(1427, 3, "Root_file_specified_for_compilation_1427", "Root file specified for compilation"),
	File_is_output_of_project_reference_source_0: r$11(1428, 3, "File_is_output_of_project_reference_source_0_1428", "File is output of project reference source '{0}'"),
	File_redirects_to_file_0: r$11(1429, 3, "File_redirects_to_file_0_1429", "File redirects to file '{0}'"),
	The_file_is_in_the_program_because_Colon: r$11(1430, 3, "The_file_is_in_the_program_because_Colon_1430", "The file is in the program because:"),
	for_await_loops_are_only_allowed_at_the_top_level_of_a_file_when_that_file_is_a_module_but_this_file_has_no_imports_or_exports_Consider_adding_an_empty_export_to_make_this_file_a_module: r$11(1431, 1, "for_await_loops_are_only_allowed_at_the_top_level_of_a_file_when_that_file_is_a_module_but_this_file_1431", "'for await' loops are only allowed at the top level of a file when that file is a module, but this file has no imports or exports. Consider adding an empty 'export {}' to make this file a module."),
	Top_level_for_await_loops_are_only_allowed_when_the_module_option_is_set_to_es2022_esnext_system_node16_node18_nodenext_or_preserve_and_the_target_option_is_set_to_es2017_or_higher: r$11(1432, 1, "Top_level_for_await_loops_are_only_allowed_when_the_module_option_is_set_to_es2022_esnext_system_nod_1432", "Top-level 'for await' loops are only allowed when the 'module' option is set to 'es2022', 'esnext', 'system', 'node16', 'node18', 'nodenext', or 'preserve', and the 'target' option is set to 'es2017' or higher."),
	Neither_decorators_nor_modifiers_may_be_applied_to_this_parameters: r$11(1433, 1, "Neither_decorators_nor_modifiers_may_be_applied_to_this_parameters_1433", "Neither decorators nor modifiers may be applied to 'this' parameters."),
	Unexpected_keyword_or_identifier: r$11(1434, 1, "Unexpected_keyword_or_identifier_1434", "Unexpected keyword or identifier."),
	Unknown_keyword_or_identifier_Did_you_mean_0: r$11(1435, 1, "Unknown_keyword_or_identifier_Did_you_mean_0_1435", "Unknown keyword or identifier. Did you mean '{0}'?"),
	Decorators_must_precede_the_name_and_all_keywords_of_property_declarations: r$11(1436, 1, "Decorators_must_precede_the_name_and_all_keywords_of_property_declarations_1436", "Decorators must precede the name and all keywords of property declarations."),
	Namespace_must_be_given_a_name: r$11(1437, 1, "Namespace_must_be_given_a_name_1437", "Namespace must be given a name."),
	Interface_must_be_given_a_name: r$11(1438, 1, "Interface_must_be_given_a_name_1438", "Interface must be given a name."),
	Type_alias_must_be_given_a_name: r$11(1439, 1, "Type_alias_must_be_given_a_name_1439", "Type alias must be given a name."),
	Variable_declaration_not_allowed_at_this_location: r$11(1440, 1, "Variable_declaration_not_allowed_at_this_location_1440", "Variable declaration not allowed at this location."),
	Cannot_start_a_function_call_in_a_type_annotation: r$11(1441, 1, "Cannot_start_a_function_call_in_a_type_annotation_1441", "Cannot start a function call in a type annotation."),
	Expected_for_property_initializer: r$11(1442, 1, "Expected_for_property_initializer_1442", "Expected '=' for property initializer."),
	Module_declaration_names_may_only_use_or_quoted_strings: r$11(1443, 1, "Module_declaration_names_may_only_use_or_quoted_strings_1443", `Module declaration names may only use ' or " quoted strings.`),
	_0_resolves_to_a_type_only_declaration_and_must_be_re_exported_using_a_type_only_re_export_when_1_is_enabled: r$11(1448, 1, "_0_resolves_to_a_type_only_declaration_and_must_be_re_exported_using_a_type_only_re_export_when_1_is_1448", "'{0}' resolves to a type-only declaration and must be re-exported using a type-only re-export when '{1}' is enabled."),
	Preserve_unused_imported_values_in_the_JavaScript_output_that_would_otherwise_be_removed: r$11(1449, 3, "Preserve_unused_imported_values_in_the_JavaScript_output_that_would_otherwise_be_removed_1449", "Preserve unused imported values in the JavaScript output that would otherwise be removed."),
	Dynamic_imports_can_only_accept_a_module_specifier_and_an_optional_set_of_attributes_as_arguments: r$11(1450, 3, "Dynamic_imports_can_only_accept_a_module_specifier_and_an_optional_set_of_attributes_as_arguments_1450", "Dynamic imports can only accept a module specifier and an optional set of attributes as arguments"),
	Private_identifiers_are_only_allowed_in_class_bodies_and_may_only_be_used_as_part_of_a_class_member_declaration_property_access_or_on_the_left_hand_side_of_an_in_expression: r$11(1451, 1, "Private_identifiers_are_only_allowed_in_class_bodies_and_may_only_be_used_as_part_of_a_class_member__1451", "Private identifiers are only allowed in class bodies and may only be used as part of a class member declaration, property access, or on the left-hand-side of an 'in' expression"),
	resolution_mode_should_be_either_require_or_import: r$11(1453, 1, "resolution_mode_should_be_either_require_or_import_1453", "`resolution-mode` should be either `require` or `import`."),
	resolution_mode_can_only_be_set_for_type_only_imports: r$11(1454, 1, "resolution_mode_can_only_be_set_for_type_only_imports_1454", "`resolution-mode` can only be set for type-only imports."),
	resolution_mode_is_the_only_valid_key_for_type_import_assertions: r$11(1455, 1, "resolution_mode_is_the_only_valid_key_for_type_import_assertions_1455", "`resolution-mode` is the only valid key for type import assertions."),
	Type_import_assertions_should_have_exactly_one_key_resolution_mode_with_value_import_or_require: r$11(1456, 1, "Type_import_assertions_should_have_exactly_one_key_resolution_mode_with_value_import_or_require_1456", "Type import assertions should have exactly one key - `resolution-mode` - with value `import` or `require`."),
	Matched_by_default_include_pattern_Asterisk_Asterisk_Slash_Asterisk: r$11(1457, 3, "Matched_by_default_include_pattern_Asterisk_Asterisk_Slash_Asterisk_1457", "Matched by default include pattern '**/*'"),
	File_is_ECMAScript_module_because_0_has_field_type_with_value_module: r$11(1458, 3, "File_is_ECMAScript_module_because_0_has_field_type_with_value_module_1458", `File is ECMAScript module because '{0}' has field "type" with value "module"`),
	File_is_CommonJS_module_because_0_has_field_type_whose_value_is_not_module: r$11(1459, 3, "File_is_CommonJS_module_because_0_has_field_type_whose_value_is_not_module_1459", `File is CommonJS module because '{0}' has field "type" whose value is not "module"`),
	File_is_CommonJS_module_because_0_does_not_have_field_type: r$11(1460, 3, "File_is_CommonJS_module_because_0_does_not_have_field_type_1460", `File is CommonJS module because '{0}' does not have field "type"`),
	File_is_CommonJS_module_because_package_json_was_not_found: r$11(1461, 3, "File_is_CommonJS_module_because_package_json_was_not_found_1461", "File is CommonJS module because 'package.json' was not found"),
	resolution_mode_is_the_only_valid_key_for_type_import_attributes: r$11(1463, 1, "resolution_mode_is_the_only_valid_key_for_type_import_attributes_1463", "'resolution-mode' is the only valid key for type import attributes."),
	Type_import_attributes_should_have_exactly_one_key_resolution_mode_with_value_import_or_require: r$11(1464, 1, "Type_import_attributes_should_have_exactly_one_key_resolution_mode_with_value_import_or_require_1464", "Type import attributes should have exactly one key - 'resolution-mode' - with value 'import' or 'require'."),
	The_import_meta_meta_property_is_not_allowed_in_files_which_will_build_into_CommonJS_output: r$11(1470, 1, "The_import_meta_meta_property_is_not_allowed_in_files_which_will_build_into_CommonJS_output_1470", "The 'import.meta' meta-property is not allowed in files which will build into CommonJS output."),
	Module_0_cannot_be_imported_using_this_construct_The_specifier_only_resolves_to_an_ES_module_which_cannot_be_imported_with_require_Use_an_ECMAScript_import_instead: r$11(1471, 1, "Module_0_cannot_be_imported_using_this_construct_The_specifier_only_resolves_to_an_ES_module_which_c_1471", "Module '{0}' cannot be imported using this construct. The specifier only resolves to an ES module, which cannot be imported with 'require'. Use an ECMAScript import instead."),
	catch_or_finally_expected: r$11(1472, 1, "catch_or_finally_expected_1472", "'catch' or 'finally' expected."),
	An_import_declaration_can_only_be_used_at_the_top_level_of_a_module: r$11(1473, 1, "An_import_declaration_can_only_be_used_at_the_top_level_of_a_module_1473", "An import declaration can only be used at the top level of a module."),
	An_export_declaration_can_only_be_used_at_the_top_level_of_a_module: r$11(1474, 1, "An_export_declaration_can_only_be_used_at_the_top_level_of_a_module_1474", "An export declaration can only be used at the top level of a module."),
	Control_what_method_is_used_to_detect_module_format_JS_files: r$11(1475, 3, "Control_what_method_is_used_to_detect_module_format_JS_files_1475", "Control what method is used to detect module-format JS files."),
	auto_Colon_Treat_files_with_imports_exports_import_meta_jsx_with_jsx_Colon_react_jsx_or_esm_format_with_module_Colon_node16_as_modules: r$11(1476, 3, "auto_Colon_Treat_files_with_imports_exports_import_meta_jsx_with_jsx_Colon_react_jsx_or_esm_format_w_1476", "\"auto\": Treat files with imports, exports, import.meta, jsx (with jsx: react-jsx), or esm format (with module: node16+) as modules."),
	An_instantiation_expression_cannot_be_followed_by_a_property_access: r$11(1477, 1, "An_instantiation_expression_cannot_be_followed_by_a_property_access_1477", "An instantiation expression cannot be followed by a property access."),
	Identifier_or_string_literal_expected: r$11(1478, 1, "Identifier_or_string_literal_expected_1478", "Identifier or string literal expected."),
	The_current_file_is_a_CommonJS_module_whose_imports_will_produce_require_calls_however_the_referenced_file_is_an_ECMAScript_module_and_cannot_be_imported_with_require_Consider_writing_a_dynamic_import_0_call_instead: r$11(1479, 1, "The_current_file_is_a_CommonJS_module_whose_imports_will_produce_require_calls_however_the_reference_1479", `The current file is a CommonJS module whose imports will produce 'require' calls; however, the referenced file is an ECMAScript module and cannot be imported with 'require'. Consider writing a dynamic 'import("{0}")' call instead.`),
	To_convert_this_file_to_an_ECMAScript_module_change_its_file_extension_to_0_or_create_a_local_package_json_file_with_type_Colon_module: r$11(1480, 3, "To_convert_this_file_to_an_ECMAScript_module_change_its_file_extension_to_0_or_create_a_local_packag_1480", "To convert this file to an ECMAScript module, change its file extension to '{0}' or create a local package.json file with `{ \"type\": \"module\" }`."),
	To_convert_this_file_to_an_ECMAScript_module_change_its_file_extension_to_0_or_add_the_field_type_Colon_module_to_1: r$11(1481, 3, "To_convert_this_file_to_an_ECMAScript_module_change_its_file_extension_to_0_or_add_the_field_type_Co_1481", `To convert this file to an ECMAScript module, change its file extension to '{0}', or add the field \`"type": "module"\` to '{1}'.`),
	To_convert_this_file_to_an_ECMAScript_module_add_the_field_type_Colon_module_to_0: r$11(1482, 3, "To_convert_this_file_to_an_ECMAScript_module_add_the_field_type_Colon_module_to_0_1482", "To convert this file to an ECMAScript module, add the field `\"type\": \"module\"` to '{0}'."),
	To_convert_this_file_to_an_ECMAScript_module_create_a_local_package_json_file_with_type_Colon_module: r$11(1483, 3, "To_convert_this_file_to_an_ECMAScript_module_create_a_local_package_json_file_with_type_Colon_module_1483", "To convert this file to an ECMAScript module, create a local package.json file with `{ \"type\": \"module\" }`."),
	_0_is_a_type_and_must_be_imported_using_a_type_only_import_when_verbatimModuleSyntax_is_enabled: r$11(1484, 1, "_0_is_a_type_and_must_be_imported_using_a_type_only_import_when_verbatimModuleSyntax_is_enabled_1484", "'{0}' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled."),
	_0_resolves_to_a_type_only_declaration_and_must_be_imported_using_a_type_only_import_when_verbatimModuleSyntax_is_enabled: r$11(1485, 1, "_0_resolves_to_a_type_only_declaration_and_must_be_imported_using_a_type_only_import_when_verbatimMo_1485", "'{0}' resolves to a type-only declaration and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled."),
	Decorator_used_before_export_here: r$11(1486, 1, "Decorator_used_before_export_here_1486", "Decorator used before 'export' here."),
	Octal_escape_sequences_are_not_allowed_Use_the_syntax_0: r$11(1487, 1, "Octal_escape_sequences_are_not_allowed_Use_the_syntax_0_1487", "Octal escape sequences are not allowed. Use the syntax '{0}'."),
	Escape_sequence_0_is_not_allowed: r$11(1488, 1, "Escape_sequence_0_is_not_allowed_1488", "Escape sequence '{0}' is not allowed."),
	Decimals_with_leading_zeros_are_not_allowed: r$11(1489, 1, "Decimals_with_leading_zeros_are_not_allowed_1489", "Decimals with leading zeros are not allowed."),
	File_appears_to_be_binary: r$11(1490, 1, "File_appears_to_be_binary_1490", "File appears to be binary."),
	_0_modifier_cannot_appear_on_a_using_declaration: r$11(1491, 1, "_0_modifier_cannot_appear_on_a_using_declaration_1491", "'{0}' modifier cannot appear on a 'using' declaration."),
	_0_declarations_may_not_have_binding_patterns: r$11(1492, 1, "_0_declarations_may_not_have_binding_patterns_1492", "'{0}' declarations may not have binding patterns."),
	The_left_hand_side_of_a_for_in_statement_cannot_be_a_using_declaration: r$11(1493, 1, "The_left_hand_side_of_a_for_in_statement_cannot_be_a_using_declaration_1493", "The left-hand side of a 'for...in' statement cannot be a 'using' declaration."),
	The_left_hand_side_of_a_for_in_statement_cannot_be_an_await_using_declaration: r$11(1494, 1, "The_left_hand_side_of_a_for_in_statement_cannot_be_an_await_using_declaration_1494", "The left-hand side of a 'for...in' statement cannot be an 'await using' declaration."),
	_0_modifier_cannot_appear_on_an_await_using_declaration: r$11(1495, 1, "_0_modifier_cannot_appear_on_an_await_using_declaration_1495", "'{0}' modifier cannot appear on an 'await using' declaration."),
	Identifier_string_literal_or_number_literal_expected: r$11(1496, 1, "Identifier_string_literal_or_number_literal_expected_1496", "Identifier, string literal, or number literal expected."),
	Expression_must_be_enclosed_in_parentheses_to_be_used_as_a_decorator: r$11(1497, 1, "Expression_must_be_enclosed_in_parentheses_to_be_used_as_a_decorator_1497", "Expression must be enclosed in parentheses to be used as a decorator."),
	Invalid_syntax_in_decorator: r$11(1498, 1, "Invalid_syntax_in_decorator_1498", "Invalid syntax in decorator."),
	Unknown_regular_expression_flag: r$11(1499, 1, "Unknown_regular_expression_flag_1499", "Unknown regular expression flag."),
	Duplicate_regular_expression_flag: r$11(1500, 1, "Duplicate_regular_expression_flag_1500", "Duplicate regular expression flag."),
	This_regular_expression_flag_is_only_available_when_targeting_0_or_later: r$11(1501, 1, "This_regular_expression_flag_is_only_available_when_targeting_0_or_later_1501", "This regular expression flag is only available when targeting '{0}' or later."),
	The_Unicode_u_flag_and_the_Unicode_Sets_v_flag_cannot_be_set_simultaneously: r$11(1502, 1, "The_Unicode_u_flag_and_the_Unicode_Sets_v_flag_cannot_be_set_simultaneously_1502", "The Unicode (u) flag and the Unicode Sets (v) flag cannot be set simultaneously."),
	Named_capturing_groups_are_only_available_when_targeting_ES2018_or_later: r$11(1503, 1, "Named_capturing_groups_are_only_available_when_targeting_ES2018_or_later_1503", "Named capturing groups are only available when targeting 'ES2018' or later."),
	Subpattern_flags_must_be_present_when_there_is_a_minus_sign: r$11(1504, 1, "Subpattern_flags_must_be_present_when_there_is_a_minus_sign_1504", "Subpattern flags must be present when there is a minus sign."),
	Incomplete_quantifier_Digit_expected: r$11(1505, 1, "Incomplete_quantifier_Digit_expected_1505", "Incomplete quantifier. Digit expected."),
	Numbers_out_of_order_in_quantifier: r$11(1506, 1, "Numbers_out_of_order_in_quantifier_1506", "Numbers out of order in quantifier."),
	There_is_nothing_available_for_repetition: r$11(1507, 1, "There_is_nothing_available_for_repetition_1507", "There is nothing available for repetition."),
	Unexpected_0_Did_you_mean_to_escape_it_with_backslash: r$11(1508, 1, "Unexpected_0_Did_you_mean_to_escape_it_with_backslash_1508", "Unexpected '{0}'. Did you mean to escape it with backslash?"),
	This_regular_expression_flag_cannot_be_toggled_within_a_subpattern: r$11(1509, 1, "This_regular_expression_flag_cannot_be_toggled_within_a_subpattern_1509", "This regular expression flag cannot be toggled within a subpattern."),
	k_must_be_followed_by_a_capturing_group_name_enclosed_in_angle_brackets: r$11(1510, 1, "k_must_be_followed_by_a_capturing_group_name_enclosed_in_angle_brackets_1510", "'\\k' must be followed by a capturing group name enclosed in angle brackets."),
	q_is_only_available_inside_character_class: r$11(1511, 1, "q_is_only_available_inside_character_class_1511", "'\\q' is only available inside character class."),
	c_must_be_followed_by_an_ASCII_letter: r$11(1512, 1, "c_must_be_followed_by_an_ASCII_letter_1512", "'\\c' must be followed by an ASCII letter."),
	Undetermined_character_escape: r$11(1513, 1, "Undetermined_character_escape_1513", "Undetermined character escape."),
	Expected_a_capturing_group_name: r$11(1514, 1, "Expected_a_capturing_group_name_1514", "Expected a capturing group name."),
	Named_capturing_groups_with_the_same_name_must_be_mutually_exclusive_to_each_other: r$11(1515, 1, "Named_capturing_groups_with_the_same_name_must_be_mutually_exclusive_to_each_other_1515", "Named capturing groups with the same name must be mutually exclusive to each other."),
	A_character_class_range_must_not_be_bounded_by_another_character_class: r$11(1516, 1, "A_character_class_range_must_not_be_bounded_by_another_character_class_1516", "A character class range must not be bounded by another character class."),
	Range_out_of_order_in_character_class: r$11(1517, 1, "Range_out_of_order_in_character_class_1517", "Range out of order in character class."),
	Anything_that_would_possibly_match_more_than_a_single_character_is_invalid_inside_a_negated_character_class: r$11(1518, 1, "Anything_that_would_possibly_match_more_than_a_single_character_is_invalid_inside_a_negated_characte_1518", "Anything that would possibly match more than a single character is invalid inside a negated character class."),
	Operators_must_not_be_mixed_within_a_character_class_Wrap_it_in_a_nested_class_instead: r$11(1519, 1, "Operators_must_not_be_mixed_within_a_character_class_Wrap_it_in_a_nested_class_instead_1519", "Operators must not be mixed within a character class. Wrap it in a nested class instead."),
	Expected_a_class_set_operand: r$11(1520, 1, "Expected_a_class_set_operand_1520", "Expected a class set operand."),
	q_must_be_followed_by_string_alternatives_enclosed_in_braces: r$11(1521, 1, "q_must_be_followed_by_string_alternatives_enclosed_in_braces_1521", "'\\q' must be followed by string alternatives enclosed in braces."),
	A_character_class_must_not_contain_a_reserved_double_punctuator_Did_you_mean_to_escape_it_with_backslash: r$11(1522, 1, "A_character_class_must_not_contain_a_reserved_double_punctuator_Did_you_mean_to_escape_it_with_backs_1522", "A character class must not contain a reserved double punctuator. Did you mean to escape it with backslash?"),
	Expected_a_Unicode_property_name: r$11(1523, 1, "Expected_a_Unicode_property_name_1523", "Expected a Unicode property name."),
	Unknown_Unicode_property_name: r$11(1524, 1, "Unknown_Unicode_property_name_1524", "Unknown Unicode property name."),
	Expected_a_Unicode_property_value: r$11(1525, 1, "Expected_a_Unicode_property_value_1525", "Expected a Unicode property value."),
	Unknown_Unicode_property_value: r$11(1526, 1, "Unknown_Unicode_property_value_1526", "Unknown Unicode property value."),
	Expected_a_Unicode_property_name_or_value: r$11(1527, 1, "Expected_a_Unicode_property_name_or_value_1527", "Expected a Unicode property name or value."),
	Any_Unicode_property_that_would_possibly_match_more_than_a_single_character_is_only_available_when_the_Unicode_Sets_v_flag_is_set: r$11(1528, 1, "Any_Unicode_property_that_would_possibly_match_more_than_a_single_character_is_only_available_when_t_1528", "Any Unicode property that would possibly match more than a single character is only available when the Unicode Sets (v) flag is set."),
	Unknown_Unicode_property_name_or_value: r$11(1529, 1, "Unknown_Unicode_property_name_or_value_1529", "Unknown Unicode property name or value."),
	Unicode_property_value_expressions_are_only_available_when_the_Unicode_u_flag_or_the_Unicode_Sets_v_flag_is_set: r$11(1530, 1, "Unicode_property_value_expressions_are_only_available_when_the_Unicode_u_flag_or_the_Unicode_Sets_v__1530", "Unicode property value expressions are only available when the Unicode (u) flag or the Unicode Sets (v) flag is set."),
	_0_must_be_followed_by_a_Unicode_property_value_expression_enclosed_in_braces: r$11(1531, 1, "_0_must_be_followed_by_a_Unicode_property_value_expression_enclosed_in_braces_1531", "'\\{0}' must be followed by a Unicode property value expression enclosed in braces."),
	There_is_no_capturing_group_named_0_in_this_regular_expression: r$11(1532, 1, "There_is_no_capturing_group_named_0_in_this_regular_expression_1532", "There is no capturing group named '{0}' in this regular expression."),
	This_backreference_refers_to_a_group_that_does_not_exist_There_are_only_0_capturing_groups_in_this_regular_expression: r$11(1533, 1, "This_backreference_refers_to_a_group_that_does_not_exist_There_are_only_0_capturing_groups_in_this_r_1533", "This backreference refers to a group that does not exist. There are only {0} capturing groups in this regular expression."),
	This_backreference_refers_to_a_group_that_does_not_exist_There_are_no_capturing_groups_in_this_regular_expression: r$11(1534, 1, "This_backreference_refers_to_a_group_that_does_not_exist_There_are_no_capturing_groups_in_this_regul_1534", "This backreference refers to a group that does not exist. There are no capturing groups in this regular expression."),
	This_character_cannot_be_escaped_in_a_regular_expression: r$11(1535, 1, "This_character_cannot_be_escaped_in_a_regular_expression_1535", "This character cannot be escaped in a regular expression."),
	Octal_escape_sequences_and_backreferences_are_not_allowed_in_a_character_class_If_this_was_intended_as_an_escape_sequence_use_the_syntax_0_instead: r$11(1536, 1, "Octal_escape_sequences_and_backreferences_are_not_allowed_in_a_character_class_If_this_was_intended__1536", "Octal escape sequences and backreferences are not allowed in a character class. If this was intended as an escape sequence, use the syntax '{0}' instead."),
	Decimal_escape_sequences_and_backreferences_are_not_allowed_in_a_character_class: r$11(1537, 1, "Decimal_escape_sequences_and_backreferences_are_not_allowed_in_a_character_class_1537", "Decimal escape sequences and backreferences are not allowed in a character class."),
	Unicode_escape_sequences_are_only_available_when_the_Unicode_u_flag_or_the_Unicode_Sets_v_flag_is_set: r$11(1538, 1, "Unicode_escape_sequences_are_only_available_when_the_Unicode_u_flag_or_the_Unicode_Sets_v_flag_is_se_1538", "Unicode escape sequences are only available when the Unicode (u) flag or the Unicode Sets (v) flag is set."),
	A_bigint_literal_cannot_be_used_as_a_property_name: r$11(1539, 1, "A_bigint_literal_cannot_be_used_as_a_property_name_1539", "A 'bigint' literal cannot be used as a property name."),
	A_namespace_declaration_should_not_be_declared_using_the_module_keyword_Please_use_the_namespace_keyword_instead: r$11(1540, 2, "A_namespace_declaration_should_not_be_declared_using_the_module_keyword_Please_use_the_namespace_key_1540", "A 'namespace' declaration should not be declared using the 'module' keyword. Please use the 'namespace' keyword instead.", void 0, void 0, !0),
	Type_only_import_of_an_ECMAScript_module_from_a_CommonJS_module_must_have_a_resolution_mode_attribute: r$11(1541, 1, "Type_only_import_of_an_ECMAScript_module_from_a_CommonJS_module_must_have_a_resolution_mode_attribut_1541", "Type-only import of an ECMAScript module from a CommonJS module must have a 'resolution-mode' attribute."),
	Type_import_of_an_ECMAScript_module_from_a_CommonJS_module_must_have_a_resolution_mode_attribute: r$11(1542, 1, "Type_import_of_an_ECMAScript_module_from_a_CommonJS_module_must_have_a_resolution_mode_attribute_1542", "Type import of an ECMAScript module from a CommonJS module must have a 'resolution-mode' attribute."),
	Importing_a_JSON_file_into_an_ECMAScript_module_requires_a_type_Colon_json_import_attribute_when_module_is_set_to_0: r$11(1543, 1, "Importing_a_JSON_file_into_an_ECMAScript_module_requires_a_type_Colon_json_import_attribute_when_mod_1543", `Importing a JSON file into an ECMAScript module requires a 'type: "json"' import attribute when 'module' is set to '{0}'.`),
	Named_imports_from_a_JSON_file_into_an_ECMAScript_module_are_not_allowed_when_module_is_set_to_0: r$11(1544, 1, "Named_imports_from_a_JSON_file_into_an_ECMAScript_module_are_not_allowed_when_module_is_set_to_0_1544", "Named imports from a JSON file into an ECMAScript module are not allowed when 'module' is set to '{0}'."),
	The_types_of_0_are_incompatible_between_these_types: r$11(2200, 1, "The_types_of_0_are_incompatible_between_these_types_2200", "The types of '{0}' are incompatible between these types."),
	The_types_returned_by_0_are_incompatible_between_these_types: r$11(2201, 1, "The_types_returned_by_0_are_incompatible_between_these_types_2201", "The types returned by '{0}' are incompatible between these types."),
	Call_signature_return_types_0_and_1_are_incompatible: r$11(2202, 1, "Call_signature_return_types_0_and_1_are_incompatible_2202", "Call signature return types '{0}' and '{1}' are incompatible.", void 0, !0),
	Construct_signature_return_types_0_and_1_are_incompatible: r$11(2203, 1, "Construct_signature_return_types_0_and_1_are_incompatible_2203", "Construct signature return types '{0}' and '{1}' are incompatible.", void 0, !0),
	Call_signatures_with_no_arguments_have_incompatible_return_types_0_and_1: r$11(2204, 1, "Call_signatures_with_no_arguments_have_incompatible_return_types_0_and_1_2204", "Call signatures with no arguments have incompatible return types '{0}' and '{1}'.", void 0, !0),
	Construct_signatures_with_no_arguments_have_incompatible_return_types_0_and_1: r$11(2205, 1, "Construct_signatures_with_no_arguments_have_incompatible_return_types_0_and_1_2205", "Construct signatures with no arguments have incompatible return types '{0}' and '{1}'.", void 0, !0),
	The_type_modifier_cannot_be_used_on_a_named_import_when_import_type_is_used_on_its_import_statement: r$11(2206, 1, "The_type_modifier_cannot_be_used_on_a_named_import_when_import_type_is_used_on_its_import_statement_2206", "The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement."),
	The_type_modifier_cannot_be_used_on_a_named_export_when_export_type_is_used_on_its_export_statement: r$11(2207, 1, "The_type_modifier_cannot_be_used_on_a_named_export_when_export_type_is_used_on_its_export_statement_2207", "The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement."),
	This_type_parameter_might_need_an_extends_0_constraint: r$11(2208, 1, "This_type_parameter_might_need_an_extends_0_constraint_2208", "This type parameter might need an `extends {0}` constraint."),
	The_project_root_is_ambiguous_but_is_required_to_resolve_export_map_entry_0_in_file_1_Supply_the_rootDir_compiler_option_to_disambiguate: r$11(2209, 1, "The_project_root_is_ambiguous_but_is_required_to_resolve_export_map_entry_0_in_file_1_Supply_the_roo_2209", "The project root is ambiguous, but is required to resolve export map entry '{0}' in file '{1}'. Supply the `rootDir` compiler option to disambiguate."),
	The_project_root_is_ambiguous_but_is_required_to_resolve_import_map_entry_0_in_file_1_Supply_the_rootDir_compiler_option_to_disambiguate: r$11(2210, 1, "The_project_root_is_ambiguous_but_is_required_to_resolve_import_map_entry_0_in_file_1_Supply_the_roo_2210", "The project root is ambiguous, but is required to resolve import map entry '{0}' in file '{1}'. Supply the `rootDir` compiler option to disambiguate."),
	Add_extends_constraint: r$11(2211, 3, "Add_extends_constraint_2211", "Add `extends` constraint."),
	Add_extends_constraint_to_all_type_parameters: r$11(2212, 3, "Add_extends_constraint_to_all_type_parameters_2212", "Add `extends` constraint to all type parameters"),
	Duplicate_identifier_0: r$11(2300, 1, "Duplicate_identifier_0_2300", "Duplicate identifier '{0}'."),
	Initializer_of_instance_member_variable_0_cannot_reference_identifier_1_declared_in_the_constructor: r$11(2301, 1, "Initializer_of_instance_member_variable_0_cannot_reference_identifier_1_declared_in_the_constructor_2301", "Initializer of instance member variable '{0}' cannot reference identifier '{1}' declared in the constructor."),
	Static_members_cannot_reference_class_type_parameters: r$11(2302, 1, "Static_members_cannot_reference_class_type_parameters_2302", "Static members cannot reference class type parameters."),
	Circular_definition_of_import_alias_0: r$11(2303, 1, "Circular_definition_of_import_alias_0_2303", "Circular definition of import alias '{0}'."),
	Cannot_find_name_0: r$11(2304, 1, "Cannot_find_name_0_2304", "Cannot find name '{0}'."),
	Module_0_has_no_exported_member_1: r$11(2305, 1, "Module_0_has_no_exported_member_1_2305", "Module '{0}' has no exported member '{1}'."),
	File_0_is_not_a_module: r$11(2306, 1, "File_0_is_not_a_module_2306", "File '{0}' is not a module."),
	Cannot_find_module_0_or_its_corresponding_type_declarations: r$11(2307, 1, "Cannot_find_module_0_or_its_corresponding_type_declarations_2307", "Cannot find module '{0}' or its corresponding type declarations."),
	Module_0_has_already_exported_a_member_named_1_Consider_explicitly_re_exporting_to_resolve_the_ambiguity: r$11(2308, 1, "Module_0_has_already_exported_a_member_named_1_Consider_explicitly_re_exporting_to_resolve_the_ambig_2308", "Module {0} has already exported a member named '{1}'. Consider explicitly re-exporting to resolve the ambiguity."),
	An_export_assignment_cannot_be_used_in_a_module_with_other_exported_elements: r$11(2309, 1, "An_export_assignment_cannot_be_used_in_a_module_with_other_exported_elements_2309", "An export assignment cannot be used in a module with other exported elements."),
	Type_0_recursively_references_itself_as_a_base_type: r$11(2310, 1, "Type_0_recursively_references_itself_as_a_base_type_2310", "Type '{0}' recursively references itself as a base type."),
	Cannot_find_name_0_Did_you_mean_to_write_this_in_an_async_function: r$11(2311, 1, "Cannot_find_name_0_Did_you_mean_to_write_this_in_an_async_function_2311", "Cannot find name '{0}'. Did you mean to write this in an async function?"),
	An_interface_can_only_extend_an_object_type_or_intersection_of_object_types_with_statically_known_members: r$11(2312, 1, "An_interface_can_only_extend_an_object_type_or_intersection_of_object_types_with_statically_known_me_2312", "An interface can only extend an object type or intersection of object types with statically known members."),
	Type_parameter_0_has_a_circular_constraint: r$11(2313, 1, "Type_parameter_0_has_a_circular_constraint_2313", "Type parameter '{0}' has a circular constraint."),
	Generic_type_0_requires_1_type_argument_s: r$11(2314, 1, "Generic_type_0_requires_1_type_argument_s_2314", "Generic type '{0}' requires {1} type argument(s)."),
	Type_0_is_not_generic: r$11(2315, 1, "Type_0_is_not_generic_2315", "Type '{0}' is not generic."),
	Global_type_0_must_be_a_class_or_interface_type: r$11(2316, 1, "Global_type_0_must_be_a_class_or_interface_type_2316", "Global type '{0}' must be a class or interface type."),
	Global_type_0_must_have_1_type_parameter_s: r$11(2317, 1, "Global_type_0_must_have_1_type_parameter_s_2317", "Global type '{0}' must have {1} type parameter(s)."),
	Cannot_find_global_type_0: r$11(2318, 1, "Cannot_find_global_type_0_2318", "Cannot find global type '{0}'."),
	Named_property_0_of_types_1_and_2_are_not_identical: r$11(2319, 1, "Named_property_0_of_types_1_and_2_are_not_identical_2319", "Named property '{0}' of types '{1}' and '{2}' are not identical."),
	Interface_0_cannot_simultaneously_extend_types_1_and_2: r$11(2320, 1, "Interface_0_cannot_simultaneously_extend_types_1_and_2_2320", "Interface '{0}' cannot simultaneously extend types '{1}' and '{2}'."),
	Excessive_stack_depth_comparing_types_0_and_1: r$11(2321, 1, "Excessive_stack_depth_comparing_types_0_and_1_2321", "Excessive stack depth comparing types '{0}' and '{1}'."),
	Type_0_is_not_assignable_to_type_1: r$11(2322, 1, "Type_0_is_not_assignable_to_type_1_2322", "Type '{0}' is not assignable to type '{1}'."),
	Cannot_redeclare_exported_variable_0: r$11(2323, 1, "Cannot_redeclare_exported_variable_0_2323", "Cannot redeclare exported variable '{0}'."),
	Property_0_is_missing_in_type_1: r$11(2324, 1, "Property_0_is_missing_in_type_1_2324", "Property '{0}' is missing in type '{1}'."),
	Property_0_is_private_in_type_1_but_not_in_type_2: r$11(2325, 1, "Property_0_is_private_in_type_1_but_not_in_type_2_2325", "Property '{0}' is private in type '{1}' but not in type '{2}'."),
	Types_of_property_0_are_incompatible: r$11(2326, 1, "Types_of_property_0_are_incompatible_2326", "Types of property '{0}' are incompatible."),
	Property_0_is_optional_in_type_1_but_required_in_type_2: r$11(2327, 1, "Property_0_is_optional_in_type_1_but_required_in_type_2_2327", "Property '{0}' is optional in type '{1}' but required in type '{2}'."),
	Types_of_parameters_0_and_1_are_incompatible: r$11(2328, 1, "Types_of_parameters_0_and_1_are_incompatible_2328", "Types of parameters '{0}' and '{1}' are incompatible."),
	Index_signature_for_type_0_is_missing_in_type_1: r$11(2329, 1, "Index_signature_for_type_0_is_missing_in_type_1_2329", "Index signature for type '{0}' is missing in type '{1}'."),
	_0_and_1_index_signatures_are_incompatible: r$11(2330, 1, "_0_and_1_index_signatures_are_incompatible_2330", "'{0}' and '{1}' index signatures are incompatible."),
	this_cannot_be_referenced_in_a_module_or_namespace_body: r$11(2331, 1, "this_cannot_be_referenced_in_a_module_or_namespace_body_2331", "'this' cannot be referenced in a module or namespace body."),
	this_cannot_be_referenced_in_current_location: r$11(2332, 1, "this_cannot_be_referenced_in_current_location_2332", "'this' cannot be referenced in current location."),
	this_cannot_be_referenced_in_a_static_property_initializer: r$11(2334, 1, "this_cannot_be_referenced_in_a_static_property_initializer_2334", "'this' cannot be referenced in a static property initializer."),
	super_can_only_be_referenced_in_a_derived_class: r$11(2335, 1, "super_can_only_be_referenced_in_a_derived_class_2335", "'super' can only be referenced in a derived class."),
	super_cannot_be_referenced_in_constructor_arguments: r$11(2336, 1, "super_cannot_be_referenced_in_constructor_arguments_2336", "'super' cannot be referenced in constructor arguments."),
	Super_calls_are_not_permitted_outside_constructors_or_in_nested_functions_inside_constructors: r$11(2337, 1, "Super_calls_are_not_permitted_outside_constructors_or_in_nested_functions_inside_constructors_2337", "Super calls are not permitted outside constructors or in nested functions inside constructors."),
	super_property_access_is_permitted_only_in_a_constructor_member_function_or_member_accessor_of_a_derived_class: r$11(2338, 1, "super_property_access_is_permitted_only_in_a_constructor_member_function_or_member_accessor_of_a_der_2338", "'super' property access is permitted only in a constructor, member function, or member accessor of a derived class."),
	Property_0_does_not_exist_on_type_1: r$11(2339, 1, "Property_0_does_not_exist_on_type_1_2339", "Property '{0}' does not exist on type '{1}'."),
	Only_public_and_protected_methods_of_the_base_class_are_accessible_via_the_super_keyword: r$11(2340, 1, "Only_public_and_protected_methods_of_the_base_class_are_accessible_via_the_super_keyword_2340", "Only public and protected methods of the base class are accessible via the 'super' keyword."),
	Property_0_is_private_and_only_accessible_within_class_1: r$11(2341, 1, "Property_0_is_private_and_only_accessible_within_class_1_2341", "Property '{0}' is private and only accessible within class '{1}'."),
	This_syntax_requires_an_imported_helper_named_1_which_does_not_exist_in_0_Consider_upgrading_your_version_of_0: r$11(2343, 1, "This_syntax_requires_an_imported_helper_named_1_which_does_not_exist_in_0_Consider_upgrading_your_ve_2343", "This syntax requires an imported helper named '{1}' which does not exist in '{0}'. Consider upgrading your version of '{0}'."),
	Type_0_does_not_satisfy_the_constraint_1: r$11(2344, 1, "Type_0_does_not_satisfy_the_constraint_1_2344", "Type '{0}' does not satisfy the constraint '{1}'."),
	Argument_of_type_0_is_not_assignable_to_parameter_of_type_1: r$11(2345, 1, "Argument_of_type_0_is_not_assignable_to_parameter_of_type_1_2345", "Argument of type '{0}' is not assignable to parameter of type '{1}'."),
	Untyped_function_calls_may_not_accept_type_arguments: r$11(2347, 1, "Untyped_function_calls_may_not_accept_type_arguments_2347", "Untyped function calls may not accept type arguments."),
	Value_of_type_0_is_not_callable_Did_you_mean_to_include_new: r$11(2348, 1, "Value_of_type_0_is_not_callable_Did_you_mean_to_include_new_2348", "Value of type '{0}' is not callable. Did you mean to include 'new'?"),
	This_expression_is_not_callable: r$11(2349, 1, "This_expression_is_not_callable_2349", "This expression is not callable."),
	Only_a_void_function_can_be_called_with_the_new_keyword: r$11(2350, 1, "Only_a_void_function_can_be_called_with_the_new_keyword_2350", "Only a void function can be called with the 'new' keyword."),
	This_expression_is_not_constructable: r$11(2351, 1, "This_expression_is_not_constructable_2351", "This expression is not constructable."),
	Conversion_of_type_0_to_type_1_may_be_a_mistake_because_neither_type_sufficiently_overlaps_with_the_other_If_this_was_intentional_convert_the_expression_to_unknown_first: r$11(2352, 1, "Conversion_of_type_0_to_type_1_may_be_a_mistake_because_neither_type_sufficiently_overlaps_with_the__2352", "Conversion of type '{0}' to type '{1}' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first."),
	Object_literal_may_only_specify_known_properties_and_0_does_not_exist_in_type_1: r$11(2353, 1, "Object_literal_may_only_specify_known_properties_and_0_does_not_exist_in_type_1_2353", "Object literal may only specify known properties, and '{0}' does not exist in type '{1}'."),
	This_syntax_requires_an_imported_helper_but_module_0_cannot_be_found: r$11(2354, 1, "This_syntax_requires_an_imported_helper_but_module_0_cannot_be_found_2354", "This syntax requires an imported helper but module '{0}' cannot be found."),
	A_function_whose_declared_type_is_neither_undefined_void_nor_any_must_return_a_value: r$11(2355, 1, "A_function_whose_declared_type_is_neither_undefined_void_nor_any_must_return_a_value_2355", "A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value."),
	An_arithmetic_operand_must_be_of_type_any_number_bigint_or_an_enum_type: r$11(2356, 1, "An_arithmetic_operand_must_be_of_type_any_number_bigint_or_an_enum_type_2356", "An arithmetic operand must be of type 'any', 'number', 'bigint' or an enum type."),
	The_operand_of_an_increment_or_decrement_operator_must_be_a_variable_or_a_property_access: r$11(2357, 1, "The_operand_of_an_increment_or_decrement_operator_must_be_a_variable_or_a_property_access_2357", "The operand of an increment or decrement operator must be a variable or a property access."),
	The_left_hand_side_of_an_instanceof_expression_must_be_of_type_any_an_object_type_or_a_type_parameter: r$11(2358, 1, "The_left_hand_side_of_an_instanceof_expression_must_be_of_type_any_an_object_type_or_a_type_paramete_2358", "The left-hand side of an 'instanceof' expression must be of type 'any', an object type or a type parameter."),
	The_right_hand_side_of_an_instanceof_expression_must_be_either_of_type_any_a_class_function_or_other_type_assignable_to_the_Function_interface_type_or_an_object_type_with_a_Symbol_hasInstance_method: r$11(2359, 1, "The_right_hand_side_of_an_instanceof_expression_must_be_either_of_type_any_a_class_function_or_other_2359", "The right-hand side of an 'instanceof' expression must be either of type 'any', a class, function, or other type assignable to the 'Function' interface type, or an object type with a 'Symbol.hasInstance' method."),
	The_left_hand_side_of_an_arithmetic_operation_must_be_of_type_any_number_bigint_or_an_enum_type: r$11(2362, 1, "The_left_hand_side_of_an_arithmetic_operation_must_be_of_type_any_number_bigint_or_an_enum_type_2362", "The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type."),
	The_right_hand_side_of_an_arithmetic_operation_must_be_of_type_any_number_bigint_or_an_enum_type: r$11(2363, 1, "The_right_hand_side_of_an_arithmetic_operation_must_be_of_type_any_number_bigint_or_an_enum_type_2363", "The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type."),
	The_left_hand_side_of_an_assignment_expression_must_be_a_variable_or_a_property_access: r$11(2364, 1, "The_left_hand_side_of_an_assignment_expression_must_be_a_variable_or_a_property_access_2364", "The left-hand side of an assignment expression must be a variable or a property access."),
	Operator_0_cannot_be_applied_to_types_1_and_2: r$11(2365, 1, "Operator_0_cannot_be_applied_to_types_1_and_2_2365", "Operator '{0}' cannot be applied to types '{1}' and '{2}'."),
	Function_lacks_ending_return_statement_and_return_type_does_not_include_undefined: r$11(2366, 1, "Function_lacks_ending_return_statement_and_return_type_does_not_include_undefined_2366", "Function lacks ending return statement and return type does not include 'undefined'."),
	This_comparison_appears_to_be_unintentional_because_the_types_0_and_1_have_no_overlap: r$11(2367, 1, "This_comparison_appears_to_be_unintentional_because_the_types_0_and_1_have_no_overlap_2367", "This comparison appears to be unintentional because the types '{0}' and '{1}' have no overlap."),
	Type_parameter_name_cannot_be_0: r$11(2368, 1, "Type_parameter_name_cannot_be_0_2368", "Type parameter name cannot be '{0}'."),
	A_parameter_property_is_only_allowed_in_a_constructor_implementation: r$11(2369, 1, "A_parameter_property_is_only_allowed_in_a_constructor_implementation_2369", "A parameter property is only allowed in a constructor implementation."),
	A_rest_parameter_must_be_of_an_array_type: r$11(2370, 1, "A_rest_parameter_must_be_of_an_array_type_2370", "A rest parameter must be of an array type."),
	A_parameter_initializer_is_only_allowed_in_a_function_or_constructor_implementation: r$11(2371, 1, "A_parameter_initializer_is_only_allowed_in_a_function_or_constructor_implementation_2371", "A parameter initializer is only allowed in a function or constructor implementation."),
	Parameter_0_cannot_reference_itself: r$11(2372, 1, "Parameter_0_cannot_reference_itself_2372", "Parameter '{0}' cannot reference itself."),
	Parameter_0_cannot_reference_identifier_1_declared_after_it: r$11(2373, 1, "Parameter_0_cannot_reference_identifier_1_declared_after_it_2373", "Parameter '{0}' cannot reference identifier '{1}' declared after it."),
	Duplicate_index_signature_for_type_0: r$11(2374, 1, "Duplicate_index_signature_for_type_0_2374", "Duplicate index signature for type '{0}'."),
	Type_0_is_not_assignable_to_type_1_with_exactOptionalPropertyTypes_Colon_true_Consider_adding_undefined_to_the_types_of_the_target_s_properties: r$11(2375, 1, "Type_0_is_not_assignable_to_type_1_with_exactOptionalPropertyTypes_Colon_true_Consider_adding_undefi_2375", "Type '{0}' is not assignable to type '{1}' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties."),
	A_super_call_must_be_the_first_statement_in_the_constructor_to_refer_to_super_or_this_when_a_derived_class_contains_initialized_properties_parameter_properties_or_private_identifiers: r$11(2376, 1, "A_super_call_must_be_the_first_statement_in_the_constructor_to_refer_to_super_or_this_when_a_derived_2376", "A 'super' call must be the first statement in the constructor to refer to 'super' or 'this' when a derived class contains initialized properties, parameter properties, or private identifiers."),
	Constructors_for_derived_classes_must_contain_a_super_call: r$11(2377, 1, "Constructors_for_derived_classes_must_contain_a_super_call_2377", "Constructors for derived classes must contain a 'super' call."),
	A_get_accessor_must_return_a_value: r$11(2378, 1, "A_get_accessor_must_return_a_value_2378", "A 'get' accessor must return a value."),
	Argument_of_type_0_is_not_assignable_to_parameter_of_type_1_with_exactOptionalPropertyTypes_Colon_true_Consider_adding_undefined_to_the_types_of_the_target_s_properties: r$11(2379, 1, "Argument_of_type_0_is_not_assignable_to_parameter_of_type_1_with_exactOptionalPropertyTypes_Colon_tr_2379", "Argument of type '{0}' is not assignable to parameter of type '{1}' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties."),
	Overload_signatures_must_all_be_exported_or_non_exported: r$11(2383, 1, "Overload_signatures_must_all_be_exported_or_non_exported_2383", "Overload signatures must all be exported or non-exported."),
	Overload_signatures_must_all_be_ambient_or_non_ambient: r$11(2384, 1, "Overload_signatures_must_all_be_ambient_or_non_ambient_2384", "Overload signatures must all be ambient or non-ambient."),
	Overload_signatures_must_all_be_public_private_or_protected: r$11(2385, 1, "Overload_signatures_must_all_be_public_private_or_protected_2385", "Overload signatures must all be public, private or protected."),
	Overload_signatures_must_all_be_optional_or_required: r$11(2386, 1, "Overload_signatures_must_all_be_optional_or_required_2386", "Overload signatures must all be optional or required."),
	Function_overload_must_be_static: r$11(2387, 1, "Function_overload_must_be_static_2387", "Function overload must be static."),
	Function_overload_must_not_be_static: r$11(2388, 1, "Function_overload_must_not_be_static_2388", "Function overload must not be static."),
	Function_implementation_name_must_be_0: r$11(2389, 1, "Function_implementation_name_must_be_0_2389", "Function implementation name must be '{0}'."),
	Constructor_implementation_is_missing: r$11(2390, 1, "Constructor_implementation_is_missing_2390", "Constructor implementation is missing."),
	Function_implementation_is_missing_or_not_immediately_following_the_declaration: r$11(2391, 1, "Function_implementation_is_missing_or_not_immediately_following_the_declaration_2391", "Function implementation is missing or not immediately following the declaration."),
	Multiple_constructor_implementations_are_not_allowed: r$11(2392, 1, "Multiple_constructor_implementations_are_not_allowed_2392", "Multiple constructor implementations are not allowed."),
	Duplicate_function_implementation: r$11(2393, 1, "Duplicate_function_implementation_2393", "Duplicate function implementation."),
	This_overload_signature_is_not_compatible_with_its_implementation_signature: r$11(2394, 1, "This_overload_signature_is_not_compatible_with_its_implementation_signature_2394", "This overload signature is not compatible with its implementation signature."),
	Individual_declarations_in_merged_declaration_0_must_be_all_exported_or_all_local: r$11(2395, 1, "Individual_declarations_in_merged_declaration_0_must_be_all_exported_or_all_local_2395", "Individual declarations in merged declaration '{0}' must be all exported or all local."),
	Duplicate_identifier_arguments_Compiler_uses_arguments_to_initialize_rest_parameters: r$11(2396, 1, "Duplicate_identifier_arguments_Compiler_uses_arguments_to_initialize_rest_parameters_2396", "Duplicate identifier 'arguments'. Compiler uses 'arguments' to initialize rest parameters."),
	Declaration_name_conflicts_with_built_in_global_identifier_0: r$11(2397, 1, "Declaration_name_conflicts_with_built_in_global_identifier_0_2397", "Declaration name conflicts with built-in global identifier '{0}'."),
	constructor_cannot_be_used_as_a_parameter_property_name: r$11(2398, 1, "constructor_cannot_be_used_as_a_parameter_property_name_2398", "'constructor' cannot be used as a parameter property name."),
	Duplicate_identifier_this_Compiler_uses_variable_declaration_this_to_capture_this_reference: r$11(2399, 1, "Duplicate_identifier_this_Compiler_uses_variable_declaration_this_to_capture_this_reference_2399", "Duplicate identifier '_this'. Compiler uses variable declaration '_this' to capture 'this' reference."),
	Expression_resolves_to_variable_declaration_this_that_compiler_uses_to_capture_this_reference: r$11(2400, 1, "Expression_resolves_to_variable_declaration_this_that_compiler_uses_to_capture_this_reference_2400", "Expression resolves to variable declaration '_this' that compiler uses to capture 'this' reference."),
	A_super_call_must_be_a_root_level_statement_within_a_constructor_of_a_derived_class_that_contains_initialized_properties_parameter_properties_or_private_identifiers: r$11(2401, 1, "A_super_call_must_be_a_root_level_statement_within_a_constructor_of_a_derived_class_that_contains_in_2401", "A 'super' call must be a root-level statement within a constructor of a derived class that contains initialized properties, parameter properties, or private identifiers."),
	Expression_resolves_to_super_that_compiler_uses_to_capture_base_class_reference: r$11(2402, 1, "Expression_resolves_to_super_that_compiler_uses_to_capture_base_class_reference_2402", "Expression resolves to '_super' that compiler uses to capture base class reference."),
	Subsequent_variable_declarations_must_have_the_same_type_Variable_0_must_be_of_type_1_but_here_has_type_2: r$11(2403, 1, "Subsequent_variable_declarations_must_have_the_same_type_Variable_0_must_be_of_type_1_but_here_has_t_2403", "Subsequent variable declarations must have the same type.  Variable '{0}' must be of type '{1}', but here has type '{2}'."),
	The_left_hand_side_of_a_for_in_statement_cannot_use_a_type_annotation: r$11(2404, 1, "The_left_hand_side_of_a_for_in_statement_cannot_use_a_type_annotation_2404", "The left-hand side of a 'for...in' statement cannot use a type annotation."),
	The_left_hand_side_of_a_for_in_statement_must_be_of_type_string_or_any: r$11(2405, 1, "The_left_hand_side_of_a_for_in_statement_must_be_of_type_string_or_any_2405", "The left-hand side of a 'for...in' statement must be of type 'string' or 'any'."),
	The_left_hand_side_of_a_for_in_statement_must_be_a_variable_or_a_property_access: r$11(2406, 1, "The_left_hand_side_of_a_for_in_statement_must_be_a_variable_or_a_property_access_2406", "The left-hand side of a 'for...in' statement must be a variable or a property access."),
	The_right_hand_side_of_a_for_in_statement_must_be_of_type_any_an_object_type_or_a_type_parameter_but_here_has_type_0: r$11(2407, 1, "The_right_hand_side_of_a_for_in_statement_must_be_of_type_any_an_object_type_or_a_type_parameter_but_2407", "The right-hand side of a 'for...in' statement must be of type 'any', an object type or a type parameter, but here has type '{0}'."),
	Setters_cannot_return_a_value: r$11(2408, 1, "Setters_cannot_return_a_value_2408", "Setters cannot return a value."),
	Return_type_of_constructor_signature_must_be_assignable_to_the_instance_type_of_the_class: r$11(2409, 1, "Return_type_of_constructor_signature_must_be_assignable_to_the_instance_type_of_the_class_2409", "Return type of constructor signature must be assignable to the instance type of the class."),
	The_with_statement_is_not_supported_All_symbols_in_a_with_block_will_have_type_any: r$11(2410, 1, "The_with_statement_is_not_supported_All_symbols_in_a_with_block_will_have_type_any_2410", "The 'with' statement is not supported. All symbols in a 'with' block will have type 'any'."),
	Type_0_is_not_assignable_to_type_1_with_exactOptionalPropertyTypes_Colon_true_Consider_adding_undefined_to_the_type_of_the_target: r$11(2412, 1, "Type_0_is_not_assignable_to_type_1_with_exactOptionalPropertyTypes_Colon_true_Consider_adding_undefi_2412", "Type '{0}' is not assignable to type '{1}' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target."),
	Property_0_of_type_1_is_not_assignable_to_2_index_type_3: r$11(2411, 1, "Property_0_of_type_1_is_not_assignable_to_2_index_type_3_2411", "Property '{0}' of type '{1}' is not assignable to '{2}' index type '{3}'."),
	_0_index_type_1_is_not_assignable_to_2_index_type_3: r$11(2413, 1, "_0_index_type_1_is_not_assignable_to_2_index_type_3_2413", "'{0}' index type '{1}' is not assignable to '{2}' index type '{3}'."),
	Class_name_cannot_be_0: r$11(2414, 1, "Class_name_cannot_be_0_2414", "Class name cannot be '{0}'."),
	Class_0_incorrectly_extends_base_class_1: r$11(2415, 1, "Class_0_incorrectly_extends_base_class_1_2415", "Class '{0}' incorrectly extends base class '{1}'."),
	Property_0_in_type_1_is_not_assignable_to_the_same_property_in_base_type_2: r$11(2416, 1, "Property_0_in_type_1_is_not_assignable_to_the_same_property_in_base_type_2_2416", "Property '{0}' in type '{1}' is not assignable to the same property in base type '{2}'."),
	Class_static_side_0_incorrectly_extends_base_class_static_side_1: r$11(2417, 1, "Class_static_side_0_incorrectly_extends_base_class_static_side_1_2417", "Class static side '{0}' incorrectly extends base class static side '{1}'."),
	Type_of_computed_property_s_value_is_0_which_is_not_assignable_to_type_1: r$11(2418, 1, "Type_of_computed_property_s_value_is_0_which_is_not_assignable_to_type_1_2418", "Type of computed property's value is '{0}', which is not assignable to type '{1}'."),
	Types_of_construct_signatures_are_incompatible: r$11(2419, 1, "Types_of_construct_signatures_are_incompatible_2419", "Types of construct signatures are incompatible."),
	Class_0_incorrectly_implements_interface_1: r$11(2420, 1, "Class_0_incorrectly_implements_interface_1_2420", "Class '{0}' incorrectly implements interface '{1}'."),
	A_class_can_only_implement_an_object_type_or_intersection_of_object_types_with_statically_known_members: r$11(2422, 1, "A_class_can_only_implement_an_object_type_or_intersection_of_object_types_with_statically_known_memb_2422", "A class can only implement an object type or intersection of object types with statically known members."),
	Class_0_defines_instance_member_function_1_but_extended_class_2_defines_it_as_instance_member_accessor: r$11(2423, 1, "Class_0_defines_instance_member_function_1_but_extended_class_2_defines_it_as_instance_member_access_2423", "Class '{0}' defines instance member function '{1}', but extended class '{2}' defines it as instance member accessor."),
	Class_0_defines_instance_member_property_1_but_extended_class_2_defines_it_as_instance_member_function: r$11(2425, 1, "Class_0_defines_instance_member_property_1_but_extended_class_2_defines_it_as_instance_member_functi_2425", "Class '{0}' defines instance member property '{1}', but extended class '{2}' defines it as instance member function."),
	Class_0_defines_instance_member_accessor_1_but_extended_class_2_defines_it_as_instance_member_function: r$11(2426, 1, "Class_0_defines_instance_member_accessor_1_but_extended_class_2_defines_it_as_instance_member_functi_2426", "Class '{0}' defines instance member accessor '{1}', but extended class '{2}' defines it as instance member function."),
	Interface_name_cannot_be_0: r$11(2427, 1, "Interface_name_cannot_be_0_2427", "Interface name cannot be '{0}'."),
	All_declarations_of_0_must_have_identical_type_parameters: r$11(2428, 1, "All_declarations_of_0_must_have_identical_type_parameters_2428", "All declarations of '{0}' must have identical type parameters."),
	Interface_0_incorrectly_extends_interface_1: r$11(2430, 1, "Interface_0_incorrectly_extends_interface_1_2430", "Interface '{0}' incorrectly extends interface '{1}'."),
	Enum_name_cannot_be_0: r$11(2431, 1, "Enum_name_cannot_be_0_2431", "Enum name cannot be '{0}'."),
	In_an_enum_with_multiple_declarations_only_one_declaration_can_omit_an_initializer_for_its_first_enum_element: r$11(2432, 1, "In_an_enum_with_multiple_declarations_only_one_declaration_can_omit_an_initializer_for_its_first_enu_2432", "In an enum with multiple declarations, only one declaration can omit an initializer for its first enum element."),
	A_namespace_declaration_cannot_be_in_a_different_file_from_a_class_or_function_with_which_it_is_merged: r$11(2433, 1, "A_namespace_declaration_cannot_be_in_a_different_file_from_a_class_or_function_with_which_it_is_merg_2433", "A namespace declaration cannot be in a different file from a class or function with which it is merged."),
	A_namespace_declaration_cannot_be_located_prior_to_a_class_or_function_with_which_it_is_merged: r$11(2434, 1, "A_namespace_declaration_cannot_be_located_prior_to_a_class_or_function_with_which_it_is_merged_2434", "A namespace declaration cannot be located prior to a class or function with which it is merged."),
	Ambient_modules_cannot_be_nested_in_other_modules_or_namespaces: r$11(2435, 1, "Ambient_modules_cannot_be_nested_in_other_modules_or_namespaces_2435", "Ambient modules cannot be nested in other modules or namespaces."),
	Ambient_module_declaration_cannot_specify_relative_module_name: r$11(2436, 1, "Ambient_module_declaration_cannot_specify_relative_module_name_2436", "Ambient module declaration cannot specify relative module name."),
	Module_0_is_hidden_by_a_local_declaration_with_the_same_name: r$11(2437, 1, "Module_0_is_hidden_by_a_local_declaration_with_the_same_name_2437", "Module '{0}' is hidden by a local declaration with the same name."),
	Import_name_cannot_be_0: r$11(2438, 1, "Import_name_cannot_be_0_2438", "Import name cannot be '{0}'."),
	Import_or_export_declaration_in_an_ambient_module_declaration_cannot_reference_module_through_relative_module_name: r$11(2439, 1, "Import_or_export_declaration_in_an_ambient_module_declaration_cannot_reference_module_through_relati_2439", "Import or export declaration in an ambient module declaration cannot reference module through relative module name."),
	Import_declaration_conflicts_with_local_declaration_of_0: r$11(2440, 1, "Import_declaration_conflicts_with_local_declaration_of_0_2440", "Import declaration conflicts with local declaration of '{0}'."),
	Duplicate_identifier_0_Compiler_reserves_name_1_in_top_level_scope_of_a_module: r$11(2441, 1, "Duplicate_identifier_0_Compiler_reserves_name_1_in_top_level_scope_of_a_module_2441", "Duplicate identifier '{0}'. Compiler reserves name '{1}' in top level scope of a module."),
	Types_have_separate_declarations_of_a_private_property_0: r$11(2442, 1, "Types_have_separate_declarations_of_a_private_property_0_2442", "Types have separate declarations of a private property '{0}'."),
	Property_0_is_protected_but_type_1_is_not_a_class_derived_from_2: r$11(2443, 1, "Property_0_is_protected_but_type_1_is_not_a_class_derived_from_2_2443", "Property '{0}' is protected but type '{1}' is not a class derived from '{2}'."),
	Property_0_is_protected_in_type_1_but_public_in_type_2: r$11(2444, 1, "Property_0_is_protected_in_type_1_but_public_in_type_2_2444", "Property '{0}' is protected in type '{1}' but public in type '{2}'."),
	Property_0_is_protected_and_only_accessible_within_class_1_and_its_subclasses: r$11(2445, 1, "Property_0_is_protected_and_only_accessible_within_class_1_and_its_subclasses_2445", "Property '{0}' is protected and only accessible within class '{1}' and its subclasses."),
	Property_0_is_protected_and_only_accessible_through_an_instance_of_class_1_This_is_an_instance_of_class_2: r$11(2446, 1, "Property_0_is_protected_and_only_accessible_through_an_instance_of_class_1_This_is_an_instance_of_cl_2446", "Property '{0}' is protected and only accessible through an instance of class '{1}'. This is an instance of class '{2}'."),
	The_0_operator_is_not_allowed_for_boolean_types_Consider_using_1_instead: r$11(2447, 1, "The_0_operator_is_not_allowed_for_boolean_types_Consider_using_1_instead_2447", "The '{0}' operator is not allowed for boolean types. Consider using '{1}' instead."),
	Block_scoped_variable_0_used_before_its_declaration: r$11(2448, 1, "Block_scoped_variable_0_used_before_its_declaration_2448", "Block-scoped variable '{0}' used before its declaration."),
	Class_0_used_before_its_declaration: r$11(2449, 1, "Class_0_used_before_its_declaration_2449", "Class '{0}' used before its declaration."),
	Enum_0_used_before_its_declaration: r$11(2450, 1, "Enum_0_used_before_its_declaration_2450", "Enum '{0}' used before its declaration."),
	Cannot_redeclare_block_scoped_variable_0: r$11(2451, 1, "Cannot_redeclare_block_scoped_variable_0_2451", "Cannot redeclare block-scoped variable '{0}'."),
	An_enum_member_cannot_have_a_numeric_name: r$11(2452, 1, "An_enum_member_cannot_have_a_numeric_name_2452", "An enum member cannot have a numeric name."),
	Variable_0_is_used_before_being_assigned: r$11(2454, 1, "Variable_0_is_used_before_being_assigned_2454", "Variable '{0}' is used before being assigned."),
	Type_alias_0_circularly_references_itself: r$11(2456, 1, "Type_alias_0_circularly_references_itself_2456", "Type alias '{0}' circularly references itself."),
	Type_alias_name_cannot_be_0: r$11(2457, 1, "Type_alias_name_cannot_be_0_2457", "Type alias name cannot be '{0}'."),
	An_AMD_module_cannot_have_multiple_name_assignments: r$11(2458, 1, "An_AMD_module_cannot_have_multiple_name_assignments_2458", "An AMD module cannot have multiple name assignments."),
	Module_0_declares_1_locally_but_it_is_not_exported: r$11(2459, 1, "Module_0_declares_1_locally_but_it_is_not_exported_2459", "Module '{0}' declares '{1}' locally, but it is not exported."),
	Module_0_declares_1_locally_but_it_is_exported_as_2: r$11(2460, 1, "Module_0_declares_1_locally_but_it_is_exported_as_2_2460", "Module '{0}' declares '{1}' locally, but it is exported as '{2}'."),
	Type_0_is_not_an_array_type: r$11(2461, 1, "Type_0_is_not_an_array_type_2461", "Type '{0}' is not an array type."),
	A_rest_element_must_be_last_in_a_destructuring_pattern: r$11(2462, 1, "A_rest_element_must_be_last_in_a_destructuring_pattern_2462", "A rest element must be last in a destructuring pattern."),
	A_binding_pattern_parameter_cannot_be_optional_in_an_implementation_signature: r$11(2463, 1, "A_binding_pattern_parameter_cannot_be_optional_in_an_implementation_signature_2463", "A binding pattern parameter cannot be optional in an implementation signature."),
	A_computed_property_name_must_be_of_type_string_number_symbol_or_any: r$11(2464, 1, "A_computed_property_name_must_be_of_type_string_number_symbol_or_any_2464", "A computed property name must be of type 'string', 'number', 'symbol', or 'any'."),
	this_cannot_be_referenced_in_a_computed_property_name: r$11(2465, 1, "this_cannot_be_referenced_in_a_computed_property_name_2465", "'this' cannot be referenced in a computed property name."),
	super_cannot_be_referenced_in_a_computed_property_name: r$11(2466, 1, "super_cannot_be_referenced_in_a_computed_property_name_2466", "'super' cannot be referenced in a computed property name."),
	A_computed_property_name_cannot_reference_a_type_parameter_from_its_containing_type: r$11(2467, 1, "A_computed_property_name_cannot_reference_a_type_parameter_from_its_containing_type_2467", "A computed property name cannot reference a type parameter from its containing type."),
	Cannot_find_global_value_0: r$11(2468, 1, "Cannot_find_global_value_0_2468", "Cannot find global value '{0}'."),
	The_0_operator_cannot_be_applied_to_type_symbol: r$11(2469, 1, "The_0_operator_cannot_be_applied_to_type_symbol_2469", "The '{0}' operator cannot be applied to type 'symbol'."),
	Spread_operator_in_new_expressions_is_only_available_when_targeting_ECMAScript_5_and_higher: r$11(2472, 1, "Spread_operator_in_new_expressions_is_only_available_when_targeting_ECMAScript_5_and_higher_2472", "Spread operator in 'new' expressions is only available when targeting ECMAScript 5 and higher."),
	Enum_declarations_must_all_be_const_or_non_const: r$11(2473, 1, "Enum_declarations_must_all_be_const_or_non_const_2473", "Enum declarations must all be const or non-const."),
	const_enum_member_initializers_must_be_constant_expressions: r$11(2474, 1, "const_enum_member_initializers_must_be_constant_expressions_2474", "const enum member initializers must be constant expressions."),
	const_enums_can_only_be_used_in_property_or_index_access_expressions_or_the_right_hand_side_of_an_import_declaration_or_export_assignment_or_type_query: r$11(2475, 1, "const_enums_can_only_be_used_in_property_or_index_access_expressions_or_the_right_hand_side_of_an_im_2475", "'const' enums can only be used in property or index access expressions or the right hand side of an import declaration or export assignment or type query."),
	A_const_enum_member_can_only_be_accessed_using_a_string_literal: r$11(2476, 1, "A_const_enum_member_can_only_be_accessed_using_a_string_literal_2476", "A const enum member can only be accessed using a string literal."),
	const_enum_member_initializer_was_evaluated_to_a_non_finite_value: r$11(2477, 1, "const_enum_member_initializer_was_evaluated_to_a_non_finite_value_2477", "'const' enum member initializer was evaluated to a non-finite value."),
	const_enum_member_initializer_was_evaluated_to_disallowed_value_NaN: r$11(2478, 1, "const_enum_member_initializer_was_evaluated_to_disallowed_value_NaN_2478", "'const' enum member initializer was evaluated to disallowed value 'NaN'."),
	let_is_not_allowed_to_be_used_as_a_name_in_let_or_const_declarations: r$11(2480, 1, "let_is_not_allowed_to_be_used_as_a_name_in_let_or_const_declarations_2480", "'let' is not allowed to be used as a name in 'let' or 'const' declarations."),
	Cannot_initialize_outer_scoped_variable_0_in_the_same_scope_as_block_scoped_declaration_1: r$11(2481, 1, "Cannot_initialize_outer_scoped_variable_0_in_the_same_scope_as_block_scoped_declaration_1_2481", "Cannot initialize outer scoped variable '{0}' in the same scope as block scoped declaration '{1}'."),
	The_left_hand_side_of_a_for_of_statement_cannot_use_a_type_annotation: r$11(2483, 1, "The_left_hand_side_of_a_for_of_statement_cannot_use_a_type_annotation_2483", "The left-hand side of a 'for...of' statement cannot use a type annotation."),
	Export_declaration_conflicts_with_exported_declaration_of_0: r$11(2484, 1, "Export_declaration_conflicts_with_exported_declaration_of_0_2484", "Export declaration conflicts with exported declaration of '{0}'."),
	The_left_hand_side_of_a_for_of_statement_must_be_a_variable_or_a_property_access: r$11(2487, 1, "The_left_hand_side_of_a_for_of_statement_must_be_a_variable_or_a_property_access_2487", "The left-hand side of a 'for...of' statement must be a variable or a property access."),
	Type_0_must_have_a_Symbol_iterator_method_that_returns_an_iterator: r$11(2488, 1, "Type_0_must_have_a_Symbol_iterator_method_that_returns_an_iterator_2488", "Type '{0}' must have a '[Symbol.iterator]()' method that returns an iterator."),
	An_iterator_must_have_a_next_method: r$11(2489, 1, "An_iterator_must_have_a_next_method_2489", "An iterator must have a 'next()' method."),
	The_type_returned_by_the_0_method_of_an_iterator_must_have_a_value_property: r$11(2490, 1, "The_type_returned_by_the_0_method_of_an_iterator_must_have_a_value_property_2490", "The type returned by the '{0}()' method of an iterator must have a 'value' property."),
	The_left_hand_side_of_a_for_in_statement_cannot_be_a_destructuring_pattern: r$11(2491, 1, "The_left_hand_side_of_a_for_in_statement_cannot_be_a_destructuring_pattern_2491", "The left-hand side of a 'for...in' statement cannot be a destructuring pattern."),
	Cannot_redeclare_identifier_0_in_catch_clause: r$11(2492, 1, "Cannot_redeclare_identifier_0_in_catch_clause_2492", "Cannot redeclare identifier '{0}' in catch clause."),
	Tuple_type_0_of_length_1_has_no_element_at_index_2: r$11(2493, 1, "Tuple_type_0_of_length_1_has_no_element_at_index_2_2493", "Tuple type '{0}' of length '{1}' has no element at index '{2}'."),
	Using_a_string_in_a_for_of_statement_is_only_supported_in_ECMAScript_5_and_higher: r$11(2494, 1, "Using_a_string_in_a_for_of_statement_is_only_supported_in_ECMAScript_5_and_higher_2494", "Using a string in a 'for...of' statement is only supported in ECMAScript 5 and higher."),
	Type_0_is_not_an_array_type_or_a_string_type: r$11(2495, 1, "Type_0_is_not_an_array_type_or_a_string_type_2495", "Type '{0}' is not an array type or a string type."),
	The_arguments_object_cannot_be_referenced_in_an_arrow_function_in_ES5_Consider_using_a_standard_function_expression: r$11(2496, 1, "The_arguments_object_cannot_be_referenced_in_an_arrow_function_in_ES5_Consider_using_a_standard_func_2496", "The 'arguments' object cannot be referenced in an arrow function in ES5. Consider using a standard function expression."),
	This_module_can_only_be_referenced_with_ECMAScript_imports_Slashexports_by_turning_on_the_0_flag_and_referencing_its_default_export: r$11(2497, 1, "This_module_can_only_be_referenced_with_ECMAScript_imports_Slashexports_by_turning_on_the_0_flag_and_2497", "This module can only be referenced with ECMAScript imports/exports by turning on the '{0}' flag and referencing its default export."),
	Module_0_uses_export_and_cannot_be_used_with_export_Asterisk: r$11(2498, 1, "Module_0_uses_export_and_cannot_be_used_with_export_Asterisk_2498", "Module '{0}' uses 'export =' and cannot be used with 'export *'."),
	An_interface_can_only_extend_an_identifier_Slashqualified_name_with_optional_type_arguments: r$11(2499, 1, "An_interface_can_only_extend_an_identifier_Slashqualified_name_with_optional_type_arguments_2499", "An interface can only extend an identifier/qualified-name with optional type arguments."),
	A_class_can_only_implement_an_identifier_Slashqualified_name_with_optional_type_arguments: r$11(2500, 1, "A_class_can_only_implement_an_identifier_Slashqualified_name_with_optional_type_arguments_2500", "A class can only implement an identifier/qualified-name with optional type arguments."),
	A_rest_element_cannot_contain_a_binding_pattern: r$11(2501, 1, "A_rest_element_cannot_contain_a_binding_pattern_2501", "A rest element cannot contain a binding pattern."),
	_0_is_referenced_directly_or_indirectly_in_its_own_type_annotation: r$11(2502, 1, "_0_is_referenced_directly_or_indirectly_in_its_own_type_annotation_2502", "'{0}' is referenced directly or indirectly in its own type annotation."),
	Cannot_find_namespace_0: r$11(2503, 1, "Cannot_find_namespace_0_2503", "Cannot find namespace '{0}'."),
	Type_0_must_have_a_Symbol_asyncIterator_method_that_returns_an_async_iterator: r$11(2504, 1, "Type_0_must_have_a_Symbol_asyncIterator_method_that_returns_an_async_iterator_2504", "Type '{0}' must have a '[Symbol.asyncIterator]()' method that returns an async iterator."),
	A_generator_cannot_have_a_void_type_annotation: r$11(2505, 1, "A_generator_cannot_have_a_void_type_annotation_2505", "A generator cannot have a 'void' type annotation."),
	_0_is_referenced_directly_or_indirectly_in_its_own_base_expression: r$11(2506, 1, "_0_is_referenced_directly_or_indirectly_in_its_own_base_expression_2506", "'{0}' is referenced directly or indirectly in its own base expression."),
	Type_0_is_not_a_constructor_function_type: r$11(2507, 1, "Type_0_is_not_a_constructor_function_type_2507", "Type '{0}' is not a constructor function type."),
	No_base_constructor_has_the_specified_number_of_type_arguments: r$11(2508, 1, "No_base_constructor_has_the_specified_number_of_type_arguments_2508", "No base constructor has the specified number of type arguments."),
	Base_constructor_return_type_0_is_not_an_object_type_or_intersection_of_object_types_with_statically_known_members: r$11(2509, 1, "Base_constructor_return_type_0_is_not_an_object_type_or_intersection_of_object_types_with_statically_2509", "Base constructor return type '{0}' is not an object type or intersection of object types with statically known members."),
	Base_constructors_must_all_have_the_same_return_type: r$11(2510, 1, "Base_constructors_must_all_have_the_same_return_type_2510", "Base constructors must all have the same return type."),
	Cannot_create_an_instance_of_an_abstract_class: r$11(2511, 1, "Cannot_create_an_instance_of_an_abstract_class_2511", "Cannot create an instance of an abstract class."),
	Overload_signatures_must_all_be_abstract_or_non_abstract: r$11(2512, 1, "Overload_signatures_must_all_be_abstract_or_non_abstract_2512", "Overload signatures must all be abstract or non-abstract."),
	Abstract_method_0_in_class_1_cannot_be_accessed_via_super_expression: r$11(2513, 1, "Abstract_method_0_in_class_1_cannot_be_accessed_via_super_expression_2513", "Abstract method '{0}' in class '{1}' cannot be accessed via super expression."),
	A_tuple_type_cannot_be_indexed_with_a_negative_value: r$11(2514, 1, "A_tuple_type_cannot_be_indexed_with_a_negative_value_2514", "A tuple type cannot be indexed with a negative value."),
	Non_abstract_class_0_does_not_implement_inherited_abstract_member_1_from_class_2: r$11(2515, 1, "Non_abstract_class_0_does_not_implement_inherited_abstract_member_1_from_class_2_2515", "Non-abstract class '{0}' does not implement inherited abstract member {1} from class '{2}'."),
	All_declarations_of_an_abstract_method_must_be_consecutive: r$11(2516, 1, "All_declarations_of_an_abstract_method_must_be_consecutive_2516", "All declarations of an abstract method must be consecutive."),
	Cannot_assign_an_abstract_constructor_type_to_a_non_abstract_constructor_type: r$11(2517, 1, "Cannot_assign_an_abstract_constructor_type_to_a_non_abstract_constructor_type_2517", "Cannot assign an abstract constructor type to a non-abstract constructor type."),
	A_this_based_type_guard_is_not_compatible_with_a_parameter_based_type_guard: r$11(2518, 1, "A_this_based_type_guard_is_not_compatible_with_a_parameter_based_type_guard_2518", "A 'this'-based type guard is not compatible with a parameter-based type guard."),
	An_async_iterator_must_have_a_next_method: r$11(2519, 1, "An_async_iterator_must_have_a_next_method_2519", "An async iterator must have a 'next()' method."),
	Duplicate_identifier_0_Compiler_uses_declaration_1_to_support_async_functions: r$11(2520, 1, "Duplicate_identifier_0_Compiler_uses_declaration_1_to_support_async_functions_2520", "Duplicate identifier '{0}'. Compiler uses declaration '{1}' to support async functions."),
	The_arguments_object_cannot_be_referenced_in_an_async_function_or_method_in_ES5_Consider_using_a_standard_function_or_method: r$11(2522, 1, "The_arguments_object_cannot_be_referenced_in_an_async_function_or_method_in_ES5_Consider_using_a_sta_2522", "The 'arguments' object cannot be referenced in an async function or method in ES5. Consider using a standard function or method."),
	yield_expressions_cannot_be_used_in_a_parameter_initializer: r$11(2523, 1, "yield_expressions_cannot_be_used_in_a_parameter_initializer_2523", "'yield' expressions cannot be used in a parameter initializer."),
	await_expressions_cannot_be_used_in_a_parameter_initializer: r$11(2524, 1, "await_expressions_cannot_be_used_in_a_parameter_initializer_2524", "'await' expressions cannot be used in a parameter initializer."),
	A_this_type_is_available_only_in_a_non_static_member_of_a_class_or_interface: r$11(2526, 1, "A_this_type_is_available_only_in_a_non_static_member_of_a_class_or_interface_2526", "A 'this' type is available only in a non-static member of a class or interface."),
	The_inferred_type_of_0_references_an_inaccessible_1_type_A_type_annotation_is_necessary: r$11(2527, 1, "The_inferred_type_of_0_references_an_inaccessible_1_type_A_type_annotation_is_necessary_2527", "The inferred type of '{0}' references an inaccessible '{1}' type. A type annotation is necessary."),
	A_module_cannot_have_multiple_default_exports: r$11(2528, 1, "A_module_cannot_have_multiple_default_exports_2528", "A module cannot have multiple default exports."),
	Duplicate_identifier_0_Compiler_reserves_name_1_in_top_level_scope_of_a_module_containing_async_functions: r$11(2529, 1, "Duplicate_identifier_0_Compiler_reserves_name_1_in_top_level_scope_of_a_module_containing_async_func_2529", "Duplicate identifier '{0}'. Compiler reserves name '{1}' in top level scope of a module containing async functions."),
	Property_0_is_incompatible_with_index_signature: r$11(2530, 1, "Property_0_is_incompatible_with_index_signature_2530", "Property '{0}' is incompatible with index signature."),
	Object_is_possibly_null: r$11(2531, 1, "Object_is_possibly_null_2531", "Object is possibly 'null'."),
	Object_is_possibly_undefined: r$11(2532, 1, "Object_is_possibly_undefined_2532", "Object is possibly 'undefined'."),
	Object_is_possibly_null_or_undefined: r$11(2533, 1, "Object_is_possibly_null_or_undefined_2533", "Object is possibly 'null' or 'undefined'."),
	A_function_returning_never_cannot_have_a_reachable_end_point: r$11(2534, 1, "A_function_returning_never_cannot_have_a_reachable_end_point_2534", "A function returning 'never' cannot have a reachable end point."),
	Type_0_cannot_be_used_to_index_type_1: r$11(2536, 1, "Type_0_cannot_be_used_to_index_type_1_2536", "Type '{0}' cannot be used to index type '{1}'."),
	Type_0_has_no_matching_index_signature_for_type_1: r$11(2537, 1, "Type_0_has_no_matching_index_signature_for_type_1_2537", "Type '{0}' has no matching index signature for type '{1}'."),
	Type_0_cannot_be_used_as_an_index_type: r$11(2538, 1, "Type_0_cannot_be_used_as_an_index_type_2538", "Type '{0}' cannot be used as an index type."),
	Cannot_assign_to_0_because_it_is_not_a_variable: r$11(2539, 1, "Cannot_assign_to_0_because_it_is_not_a_variable_2539", "Cannot assign to '{0}' because it is not a variable."),
	Cannot_assign_to_0_because_it_is_a_read_only_property: r$11(2540, 1, "Cannot_assign_to_0_because_it_is_a_read_only_property_2540", "Cannot assign to '{0}' because it is a read-only property."),
	Index_signature_in_type_0_only_permits_reading: r$11(2542, 1, "Index_signature_in_type_0_only_permits_reading_2542", "Index signature in type '{0}' only permits reading."),
	Duplicate_identifier_newTarget_Compiler_uses_variable_declaration_newTarget_to_capture_new_target_meta_property_reference: r$11(2543, 1, "Duplicate_identifier_newTarget_Compiler_uses_variable_declaration_newTarget_to_capture_new_target_me_2543", "Duplicate identifier '_newTarget'. Compiler uses variable declaration '_newTarget' to capture 'new.target' meta-property reference."),
	Expression_resolves_to_variable_declaration_newTarget_that_compiler_uses_to_capture_new_target_meta_property_reference: r$11(2544, 1, "Expression_resolves_to_variable_declaration_newTarget_that_compiler_uses_to_capture_new_target_meta__2544", "Expression resolves to variable declaration '_newTarget' that compiler uses to capture 'new.target' meta-property reference."),
	A_mixin_class_must_have_a_constructor_with_a_single_rest_parameter_of_type_any: r$11(2545, 1, "A_mixin_class_must_have_a_constructor_with_a_single_rest_parameter_of_type_any_2545", "A mixin class must have a constructor with a single rest parameter of type 'any[]'."),
	The_type_returned_by_the_0_method_of_an_async_iterator_must_be_a_promise_for_a_type_with_a_value_property: r$11(2547, 1, "The_type_returned_by_the_0_method_of_an_async_iterator_must_be_a_promise_for_a_type_with_a_value_pro_2547", "The type returned by the '{0}()' method of an async iterator must be a promise for a type with a 'value' property."),
	Type_0_is_not_an_array_type_or_does_not_have_a_Symbol_iterator_method_that_returns_an_iterator: r$11(2548, 1, "Type_0_is_not_an_array_type_or_does_not_have_a_Symbol_iterator_method_that_returns_an_iterator_2548", "Type '{0}' is not an array type or does not have a '[Symbol.iterator]()' method that returns an iterator."),
	Type_0_is_not_an_array_type_or_a_string_type_or_does_not_have_a_Symbol_iterator_method_that_returns_an_iterator: r$11(2549, 1, "Type_0_is_not_an_array_type_or_a_string_type_or_does_not_have_a_Symbol_iterator_method_that_returns__2549", "Type '{0}' is not an array type or a string type or does not have a '[Symbol.iterator]()' method that returns an iterator."),
	Property_0_does_not_exist_on_type_1_Do_you_need_to_change_your_target_library_Try_changing_the_lib_compiler_option_to_2_or_later: r$11(2550, 1, "Property_0_does_not_exist_on_type_1_Do_you_need_to_change_your_target_library_Try_changing_the_lib_c_2550", "Property '{0}' does not exist on type '{1}'. Do you need to change your target library? Try changing the 'lib' compiler option to '{2}' or later."),
	Property_0_does_not_exist_on_type_1_Did_you_mean_2: r$11(2551, 1, "Property_0_does_not_exist_on_type_1_Did_you_mean_2_2551", "Property '{0}' does not exist on type '{1}'. Did you mean '{2}'?"),
	Cannot_find_name_0_Did_you_mean_1: r$11(2552, 1, "Cannot_find_name_0_Did_you_mean_1_2552", "Cannot find name '{0}'. Did you mean '{1}'?"),
	Computed_values_are_not_permitted_in_an_enum_with_string_valued_members: r$11(2553, 1, "Computed_values_are_not_permitted_in_an_enum_with_string_valued_members_2553", "Computed values are not permitted in an enum with string valued members."),
	Expected_0_arguments_but_got_1: r$11(2554, 1, "Expected_0_arguments_but_got_1_2554", "Expected {0} arguments, but got {1}."),
	Expected_at_least_0_arguments_but_got_1: r$11(2555, 1, "Expected_at_least_0_arguments_but_got_1_2555", "Expected at least {0} arguments, but got {1}."),
	A_spread_argument_must_either_have_a_tuple_type_or_be_passed_to_a_rest_parameter: r$11(2556, 1, "A_spread_argument_must_either_have_a_tuple_type_or_be_passed_to_a_rest_parameter_2556", "A spread argument must either have a tuple type or be passed to a rest parameter."),
	Expected_0_type_arguments_but_got_1: r$11(2558, 1, "Expected_0_type_arguments_but_got_1_2558", "Expected {0} type arguments, but got {1}."),
	Type_0_has_no_properties_in_common_with_type_1: r$11(2559, 1, "Type_0_has_no_properties_in_common_with_type_1_2559", "Type '{0}' has no properties in common with type '{1}'."),
	Value_of_type_0_has_no_properties_in_common_with_type_1_Did_you_mean_to_call_it: r$11(2560, 1, "Value_of_type_0_has_no_properties_in_common_with_type_1_Did_you_mean_to_call_it_2560", "Value of type '{0}' has no properties in common with type '{1}'. Did you mean to call it?"),
	Object_literal_may_only_specify_known_properties_but_0_does_not_exist_in_type_1_Did_you_mean_to_write_2: r$11(2561, 1, "Object_literal_may_only_specify_known_properties_but_0_does_not_exist_in_type_1_Did_you_mean_to_writ_2561", "Object literal may only specify known properties, but '{0}' does not exist in type '{1}'. Did you mean to write '{2}'?"),
	Base_class_expressions_cannot_reference_class_type_parameters: r$11(2562, 1, "Base_class_expressions_cannot_reference_class_type_parameters_2562", "Base class expressions cannot reference class type parameters."),
	The_containing_function_or_module_body_is_too_large_for_control_flow_analysis: r$11(2563, 1, "The_containing_function_or_module_body_is_too_large_for_control_flow_analysis_2563", "The containing function or module body is too large for control flow analysis."),
	Property_0_has_no_initializer_and_is_not_definitely_assigned_in_the_constructor: r$11(2564, 1, "Property_0_has_no_initializer_and_is_not_definitely_assigned_in_the_constructor_2564", "Property '{0}' has no initializer and is not definitely assigned in the constructor."),
	Property_0_is_used_before_being_assigned: r$11(2565, 1, "Property_0_is_used_before_being_assigned_2565", "Property '{0}' is used before being assigned."),
	A_rest_element_cannot_have_a_property_name: r$11(2566, 1, "A_rest_element_cannot_have_a_property_name_2566", "A rest element cannot have a property name."),
	Enum_declarations_can_only_merge_with_namespace_or_other_enum_declarations: r$11(2567, 1, "Enum_declarations_can_only_merge_with_namespace_or_other_enum_declarations_2567", "Enum declarations can only merge with namespace or other enum declarations."),
	Property_0_may_not_exist_on_type_1_Did_you_mean_2: r$11(2568, 1, "Property_0_may_not_exist_on_type_1_Did_you_mean_2_2568", "Property '{0}' may not exist on type '{1}'. Did you mean '{2}'?"),
	Could_not_find_name_0_Did_you_mean_1: r$11(2570, 1, "Could_not_find_name_0_Did_you_mean_1_2570", "Could not find name '{0}'. Did you mean '{1}'?"),
	Object_is_of_type_unknown: r$11(2571, 1, "Object_is_of_type_unknown_2571", "Object is of type 'unknown'."),
	A_rest_element_type_must_be_an_array_type: r$11(2574, 1, "A_rest_element_type_must_be_an_array_type_2574", "A rest element type must be an array type."),
	No_overload_expects_0_arguments_but_overloads_do_exist_that_expect_either_1_or_2_arguments: r$11(2575, 1, "No_overload_expects_0_arguments_but_overloads_do_exist_that_expect_either_1_or_2_arguments_2575", "No overload expects {0} arguments, but overloads do exist that expect either {1} or {2} arguments."),
	Property_0_does_not_exist_on_type_1_Did_you_mean_to_access_the_static_member_2_instead: r$11(2576, 1, "Property_0_does_not_exist_on_type_1_Did_you_mean_to_access_the_static_member_2_instead_2576", "Property '{0}' does not exist on type '{1}'. Did you mean to access the static member '{2}' instead?"),
	Return_type_annotation_circularly_references_itself: r$11(2577, 1, "Return_type_annotation_circularly_references_itself_2577", "Return type annotation circularly references itself."),
	Unused_ts_expect_error_directive: r$11(2578, 1, "Unused_ts_expect_error_directive_2578", "Unused '@ts-expect-error' directive."),
	Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_node_Try_npm_i_save_dev_types_Slashnode: r$11(2580, 1, "Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_node_Try_npm_i_save_dev_types_Slashno_2580", "Cannot find name '{0}'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`."),
	Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_jQuery_Try_npm_i_save_dev_types_Slashjquery: r$11(2581, 1, "Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_jQuery_Try_npm_i_save_dev_types_Slash_2581", "Cannot find name '{0}'. Do you need to install type definitions for jQuery? Try `npm i --save-dev @types/jquery`."),
	Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_a_test_runner_Try_npm_i_save_dev_types_Slashjest_or_npm_i_save_dev_types_Slashmocha: r$11(2582, 1, "Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_a_test_runner_Try_npm_i_save_dev_type_2582", "Cannot find name '{0}'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha`."),
	Cannot_find_name_0_Do_you_need_to_change_your_target_library_Try_changing_the_lib_compiler_option_to_1_or_later: r$11(2583, 1, "Cannot_find_name_0_Do_you_need_to_change_your_target_library_Try_changing_the_lib_compiler_option_to_2583", "Cannot find name '{0}'. Do you need to change your target library? Try changing the 'lib' compiler option to '{1}' or later."),
	Cannot_find_name_0_Do_you_need_to_change_your_target_library_Try_changing_the_lib_compiler_option_to_include_dom: r$11(2584, 1, "Cannot_find_name_0_Do_you_need_to_change_your_target_library_Try_changing_the_lib_compiler_option_to_2584", "Cannot find name '{0}'. Do you need to change your target library? Try changing the 'lib' compiler option to include 'dom'."),
	_0_only_refers_to_a_type_but_is_being_used_as_a_value_here_Do_you_need_to_change_your_target_library_Try_changing_the_lib_compiler_option_to_es2015_or_later: r$11(2585, 1, "_0_only_refers_to_a_type_but_is_being_used_as_a_value_here_Do_you_need_to_change_your_target_library_2585", "'{0}' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the 'lib' compiler option to es2015 or later."),
	Cannot_assign_to_0_because_it_is_a_constant: r$11(2588, 1, "Cannot_assign_to_0_because_it_is_a_constant_2588", "Cannot assign to '{0}' because it is a constant."),
	Type_instantiation_is_excessively_deep_and_possibly_infinite: r$11(2589, 1, "Type_instantiation_is_excessively_deep_and_possibly_infinite_2589", "Type instantiation is excessively deep and possibly infinite."),
	Expression_produces_a_union_type_that_is_too_complex_to_represent: r$11(2590, 1, "Expression_produces_a_union_type_that_is_too_complex_to_represent_2590", "Expression produces a union type that is too complex to represent."),
	Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_node_Try_npm_i_save_dev_types_Slashnode_and_then_add_node_to_the_types_field_in_your_tsconfig: r$11(2591, 1, "Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_node_Try_npm_i_save_dev_types_Slashno_2591", "Cannot find name '{0}'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node` and then add 'node' to the types field in your tsconfig."),
	Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_jQuery_Try_npm_i_save_dev_types_Slashjquery_and_then_add_jquery_to_the_types_field_in_your_tsconfig: r$11(2592, 1, "Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_jQuery_Try_npm_i_save_dev_types_Slash_2592", "Cannot find name '{0}'. Do you need to install type definitions for jQuery? Try `npm i --save-dev @types/jquery` and then add 'jquery' to the types field in your tsconfig."),
	Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_a_test_runner_Try_npm_i_save_dev_types_Slashjest_or_npm_i_save_dev_types_Slashmocha_and_then_add_jest_or_mocha_to_the_types_field_in_your_tsconfig: r$11(2593, 1, "Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_a_test_runner_Try_npm_i_save_dev_type_2593", "Cannot find name '{0}'. Do you need to install type definitions for a test runner? Try `npm i --save-dev @types/jest` or `npm i --save-dev @types/mocha` and then add 'jest' or 'mocha' to the types field in your tsconfig."),
	This_module_is_declared_with_export_and_can_only_be_used_with_a_default_import_when_using_the_0_flag: r$11(2594, 1, "This_module_is_declared_with_export_and_can_only_be_used_with_a_default_import_when_using_the_0_flag_2594", "This module is declared with 'export =', and can only be used with a default import when using the '{0}' flag."),
	_0_can_only_be_imported_by_using_a_default_import: r$11(2595, 1, "_0_can_only_be_imported_by_using_a_default_import_2595", "'{0}' can only be imported by using a default import."),
	_0_can_only_be_imported_by_turning_on_the_esModuleInterop_flag_and_using_a_default_import: r$11(2596, 1, "_0_can_only_be_imported_by_turning_on_the_esModuleInterop_flag_and_using_a_default_import_2596", "'{0}' can only be imported by turning on the 'esModuleInterop' flag and using a default import."),
	_0_can_only_be_imported_by_using_a_require_call_or_by_using_a_default_import: r$11(2597, 1, "_0_can_only_be_imported_by_using_a_require_call_or_by_using_a_default_import_2597", "'{0}' can only be imported by using a 'require' call or by using a default import."),
	_0_can_only_be_imported_by_using_a_require_call_or_by_turning_on_the_esModuleInterop_flag_and_using_a_default_import: r$11(2598, 1, "_0_can_only_be_imported_by_using_a_require_call_or_by_turning_on_the_esModuleInterop_flag_and_using__2598", "'{0}' can only be imported by using a 'require' call or by turning on the 'esModuleInterop' flag and using a default import."),
	JSX_element_implicitly_has_type_any_because_the_global_type_JSX_Element_does_not_exist: r$11(2602, 1, "JSX_element_implicitly_has_type_any_because_the_global_type_JSX_Element_does_not_exist_2602", "JSX element implicitly has type 'any' because the global type 'JSX.Element' does not exist."),
	Property_0_in_type_1_is_not_assignable_to_type_2: r$11(2603, 1, "Property_0_in_type_1_is_not_assignable_to_type_2_2603", "Property '{0}' in type '{1}' is not assignable to type '{2}'."),
	JSX_element_type_0_does_not_have_any_construct_or_call_signatures: r$11(2604, 1, "JSX_element_type_0_does_not_have_any_construct_or_call_signatures_2604", "JSX element type '{0}' does not have any construct or call signatures."),
	Property_0_of_JSX_spread_attribute_is_not_assignable_to_target_property: r$11(2606, 1, "Property_0_of_JSX_spread_attribute_is_not_assignable_to_target_property_2606", "Property '{0}' of JSX spread attribute is not assignable to target property."),
	JSX_element_class_does_not_support_attributes_because_it_does_not_have_a_0_property: r$11(2607, 1, "JSX_element_class_does_not_support_attributes_because_it_does_not_have_a_0_property_2607", "JSX element class does not support attributes because it does not have a '{0}' property."),
	The_global_type_JSX_0_may_not_have_more_than_one_property: r$11(2608, 1, "The_global_type_JSX_0_may_not_have_more_than_one_property_2608", "The global type 'JSX.{0}' may not have more than one property."),
	JSX_spread_child_must_be_an_array_type: r$11(2609, 1, "JSX_spread_child_must_be_an_array_type_2609", "JSX spread child must be an array type."),
	_0_is_defined_as_an_accessor_in_class_1_but_is_overridden_here_in_2_as_an_instance_property: r$11(2610, 1, "_0_is_defined_as_an_accessor_in_class_1_but_is_overridden_here_in_2_as_an_instance_property_2610", "'{0}' is defined as an accessor in class '{1}', but is overridden here in '{2}' as an instance property."),
	_0_is_defined_as_a_property_in_class_1_but_is_overridden_here_in_2_as_an_accessor: r$11(2611, 1, "_0_is_defined_as_a_property_in_class_1_but_is_overridden_here_in_2_as_an_accessor_2611", "'{0}' is defined as a property in class '{1}', but is overridden here in '{2}' as an accessor."),
	Property_0_will_overwrite_the_base_property_in_1_If_this_is_intentional_add_an_initializer_Otherwise_add_a_declare_modifier_or_remove_the_redundant_declaration: r$11(2612, 1, "Property_0_will_overwrite_the_base_property_in_1_If_this_is_intentional_add_an_initializer_Otherwise_2612", "Property '{0}' will overwrite the base property in '{1}'. If this is intentional, add an initializer. Otherwise, add a 'declare' modifier or remove the redundant declaration."),
	Module_0_has_no_default_export_Did_you_mean_to_use_import_1_from_0_instead: r$11(2613, 1, "Module_0_has_no_default_export_Did_you_mean_to_use_import_1_from_0_instead_2613", "Module '{0}' has no default export. Did you mean to use 'import { {1} } from {0}' instead?"),
	Module_0_has_no_exported_member_1_Did_you_mean_to_use_import_1_from_0_instead: r$11(2614, 1, "Module_0_has_no_exported_member_1_Did_you_mean_to_use_import_1_from_0_instead_2614", "Module '{0}' has no exported member '{1}'. Did you mean to use 'import {1} from {0}' instead?"),
	Type_of_property_0_circularly_references_itself_in_mapped_type_1: r$11(2615, 1, "Type_of_property_0_circularly_references_itself_in_mapped_type_1_2615", "Type of property '{0}' circularly references itself in mapped type '{1}'."),
	_0_can_only_be_imported_by_using_import_1_require_2_or_a_default_import: r$11(2616, 1, "_0_can_only_be_imported_by_using_import_1_require_2_or_a_default_import_2616", "'{0}' can only be imported by using 'import {1} = require({2})' or a default import."),
	_0_can_only_be_imported_by_using_import_1_require_2_or_by_turning_on_the_esModuleInterop_flag_and_using_a_default_import: r$11(2617, 1, "_0_can_only_be_imported_by_using_import_1_require_2_or_by_turning_on_the_esModuleInterop_flag_and_us_2617", "'{0}' can only be imported by using 'import {1} = require({2})' or by turning on the 'esModuleInterop' flag and using a default import."),
	Source_has_0_element_s_but_target_requires_1: r$11(2618, 1, "Source_has_0_element_s_but_target_requires_1_2618", "Source has {0} element(s) but target requires {1}."),
	Source_has_0_element_s_but_target_allows_only_1: r$11(2619, 1, "Source_has_0_element_s_but_target_allows_only_1_2619", "Source has {0} element(s) but target allows only {1}."),
	Target_requires_0_element_s_but_source_may_have_fewer: r$11(2620, 1, "Target_requires_0_element_s_but_source_may_have_fewer_2620", "Target requires {0} element(s) but source may have fewer."),
	Target_allows_only_0_element_s_but_source_may_have_more: r$11(2621, 1, "Target_allows_only_0_element_s_but_source_may_have_more_2621", "Target allows only {0} element(s) but source may have more."),
	Source_provides_no_match_for_required_element_at_position_0_in_target: r$11(2623, 1, "Source_provides_no_match_for_required_element_at_position_0_in_target_2623", "Source provides no match for required element at position {0} in target."),
	Source_provides_no_match_for_variadic_element_at_position_0_in_target: r$11(2624, 1, "Source_provides_no_match_for_variadic_element_at_position_0_in_target_2624", "Source provides no match for variadic element at position {0} in target."),
	Variadic_element_at_position_0_in_source_does_not_match_element_at_position_1_in_target: r$11(2625, 1, "Variadic_element_at_position_0_in_source_does_not_match_element_at_position_1_in_target_2625", "Variadic element at position {0} in source does not match element at position {1} in target."),
	Type_at_position_0_in_source_is_not_compatible_with_type_at_position_1_in_target: r$11(2626, 1, "Type_at_position_0_in_source_is_not_compatible_with_type_at_position_1_in_target_2626", "Type at position {0} in source is not compatible with type at position {1} in target."),
	Type_at_positions_0_through_1_in_source_is_not_compatible_with_type_at_position_2_in_target: r$11(2627, 1, "Type_at_positions_0_through_1_in_source_is_not_compatible_with_type_at_position_2_in_target_2627", "Type at positions {0} through {1} in source is not compatible with type at position {2} in target."),
	Cannot_assign_to_0_because_it_is_an_enum: r$11(2628, 1, "Cannot_assign_to_0_because_it_is_an_enum_2628", "Cannot assign to '{0}' because it is an enum."),
	Cannot_assign_to_0_because_it_is_a_class: r$11(2629, 1, "Cannot_assign_to_0_because_it_is_a_class_2629", "Cannot assign to '{0}' because it is a class."),
	Cannot_assign_to_0_because_it_is_a_function: r$11(2630, 1, "Cannot_assign_to_0_because_it_is_a_function_2630", "Cannot assign to '{0}' because it is a function."),
	Cannot_assign_to_0_because_it_is_a_namespace: r$11(2631, 1, "Cannot_assign_to_0_because_it_is_a_namespace_2631", "Cannot assign to '{0}' because it is a namespace."),
	Cannot_assign_to_0_because_it_is_an_import: r$11(2632, 1, "Cannot_assign_to_0_because_it_is_an_import_2632", "Cannot assign to '{0}' because it is an import."),
	JSX_property_access_expressions_cannot_include_JSX_namespace_names: r$11(2633, 1, "JSX_property_access_expressions_cannot_include_JSX_namespace_names_2633", "JSX property access expressions cannot include JSX namespace names"),
	_0_index_signatures_are_incompatible: r$11(2634, 1, "_0_index_signatures_are_incompatible_2634", "'{0}' index signatures are incompatible."),
	Type_0_has_no_signatures_for_which_the_type_argument_list_is_applicable: r$11(2635, 1, "Type_0_has_no_signatures_for_which_the_type_argument_list_is_applicable_2635", "Type '{0}' has no signatures for which the type argument list is applicable."),
	Type_0_is_not_assignable_to_type_1_as_implied_by_variance_annotation: r$11(2636, 1, "Type_0_is_not_assignable_to_type_1_as_implied_by_variance_annotation_2636", "Type '{0}' is not assignable to type '{1}' as implied by variance annotation."),
	Variance_annotations_are_only_supported_in_type_aliases_for_object_function_constructor_and_mapped_types: r$11(2637, 1, "Variance_annotations_are_only_supported_in_type_aliases_for_object_function_constructor_and_mapped_t_2637", "Variance annotations are only supported in type aliases for object, function, constructor, and mapped types."),
	Type_0_may_represent_a_primitive_value_which_is_not_permitted_as_the_right_operand_of_the_in_operator: r$11(2638, 1, "Type_0_may_represent_a_primitive_value_which_is_not_permitted_as_the_right_operand_of_the_in_operato_2638", "Type '{0}' may represent a primitive value, which is not permitted as the right operand of the 'in' operator."),
	React_components_cannot_include_JSX_namespace_names: r$11(2639, 1, "React_components_cannot_include_JSX_namespace_names_2639", "React components cannot include JSX namespace names"),
	Cannot_augment_module_0_with_value_exports_because_it_resolves_to_a_non_module_entity: r$11(2649, 1, "Cannot_augment_module_0_with_value_exports_because_it_resolves_to_a_non_module_entity_2649", "Cannot augment module '{0}' with value exports because it resolves to a non-module entity."),
	Non_abstract_class_expression_is_missing_implementations_for_the_following_members_of_0_Colon_1_and_2_more: r$11(2650, 1, "Non_abstract_class_expression_is_missing_implementations_for_the_following_members_of_0_Colon_1_and__2650", "Non-abstract class expression is missing implementations for the following members of '{0}': {1} and {2} more."),
	A_member_initializer_in_a_enum_declaration_cannot_reference_members_declared_after_it_including_members_defined_in_other_enums: r$11(2651, 1, "A_member_initializer_in_a_enum_declaration_cannot_reference_members_declared_after_it_including_memb_2651", "A member initializer in a enum declaration cannot reference members declared after it, including members defined in other enums."),
	Merged_declaration_0_cannot_include_a_default_export_declaration_Consider_adding_a_separate_export_default_0_declaration_instead: r$11(2652, 1, "Merged_declaration_0_cannot_include_a_default_export_declaration_Consider_adding_a_separate_export_d_2652", "Merged declaration '{0}' cannot include a default export declaration. Consider adding a separate 'export default {0}' declaration instead."),
	Non_abstract_class_expression_does_not_implement_inherited_abstract_member_0_from_class_1: r$11(2653, 1, "Non_abstract_class_expression_does_not_implement_inherited_abstract_member_0_from_class_1_2653", "Non-abstract class expression does not implement inherited abstract member '{0}' from class '{1}'."),
	Non_abstract_class_0_is_missing_implementations_for_the_following_members_of_1_Colon_2: r$11(2654, 1, "Non_abstract_class_0_is_missing_implementations_for_the_following_members_of_1_Colon_2_2654", "Non-abstract class '{0}' is missing implementations for the following members of '{1}': {2}."),
	Non_abstract_class_0_is_missing_implementations_for_the_following_members_of_1_Colon_2_and_3_more: r$11(2655, 1, "Non_abstract_class_0_is_missing_implementations_for_the_following_members_of_1_Colon_2_and_3_more_2655", "Non-abstract class '{0}' is missing implementations for the following members of '{1}': {2} and {3} more."),
	Non_abstract_class_expression_is_missing_implementations_for_the_following_members_of_0_Colon_1: r$11(2656, 1, "Non_abstract_class_expression_is_missing_implementations_for_the_following_members_of_0_Colon_1_2656", "Non-abstract class expression is missing implementations for the following members of '{0}': {1}."),
	JSX_expressions_must_have_one_parent_element: r$11(2657, 1, "JSX_expressions_must_have_one_parent_element_2657", "JSX expressions must have one parent element."),
	Type_0_provides_no_match_for_the_signature_1: r$11(2658, 1, "Type_0_provides_no_match_for_the_signature_1_2658", "Type '{0}' provides no match for the signature '{1}'."),
	super_is_only_allowed_in_members_of_object_literal_expressions_when_option_target_is_ES2015_or_higher: r$11(2659, 1, "super_is_only_allowed_in_members_of_object_literal_expressions_when_option_target_is_ES2015_or_highe_2659", "'super' is only allowed in members of object literal expressions when option 'target' is 'ES2015' or higher."),
	super_can_only_be_referenced_in_members_of_derived_classes_or_object_literal_expressions: r$11(2660, 1, "super_can_only_be_referenced_in_members_of_derived_classes_or_object_literal_expressions_2660", "'super' can only be referenced in members of derived classes or object literal expressions."),
	Cannot_export_0_Only_local_declarations_can_be_exported_from_a_module: r$11(2661, 1, "Cannot_export_0_Only_local_declarations_can_be_exported_from_a_module_2661", "Cannot export '{0}'. Only local declarations can be exported from a module."),
	Cannot_find_name_0_Did_you_mean_the_static_member_1_0: r$11(2662, 1, "Cannot_find_name_0_Did_you_mean_the_static_member_1_0_2662", "Cannot find name '{0}'. Did you mean the static member '{1}.{0}'?"),
	Cannot_find_name_0_Did_you_mean_the_instance_member_this_0: r$11(2663, 1, "Cannot_find_name_0_Did_you_mean_the_instance_member_this_0_2663", "Cannot find name '{0}'. Did you mean the instance member 'this.{0}'?"),
	Invalid_module_name_in_augmentation_module_0_cannot_be_found: r$11(2664, 1, "Invalid_module_name_in_augmentation_module_0_cannot_be_found_2664", "Invalid module name in augmentation, module '{0}' cannot be found."),
	Invalid_module_name_in_augmentation_Module_0_resolves_to_an_untyped_module_at_1_which_cannot_be_augmented: r$11(2665, 1, "Invalid_module_name_in_augmentation_Module_0_resolves_to_an_untyped_module_at_1_which_cannot_be_augm_2665", "Invalid module name in augmentation. Module '{0}' resolves to an untyped module at '{1}', which cannot be augmented."),
	Exports_and_export_assignments_are_not_permitted_in_module_augmentations: r$11(2666, 1, "Exports_and_export_assignments_are_not_permitted_in_module_augmentations_2666", "Exports and export assignments are not permitted in module augmentations."),
	Imports_are_not_permitted_in_module_augmentations_Consider_moving_them_to_the_enclosing_external_module: r$11(2667, 1, "Imports_are_not_permitted_in_module_augmentations_Consider_moving_them_to_the_enclosing_external_mod_2667", "Imports are not permitted in module augmentations. Consider moving them to the enclosing external module."),
	export_modifier_cannot_be_applied_to_ambient_modules_and_module_augmentations_since_they_are_always_visible: r$11(2668, 1, "export_modifier_cannot_be_applied_to_ambient_modules_and_module_augmentations_since_they_are_always__2668", "'export' modifier cannot be applied to ambient modules and module augmentations since they are always visible."),
	Augmentations_for_the_global_scope_can_only_be_directly_nested_in_external_modules_or_ambient_module_declarations: r$11(2669, 1, "Augmentations_for_the_global_scope_can_only_be_directly_nested_in_external_modules_or_ambient_module_2669", "Augmentations for the global scope can only be directly nested in external modules or ambient module declarations."),
	Augmentations_for_the_global_scope_should_have_declare_modifier_unless_they_appear_in_already_ambient_context: r$11(2670, 1, "Augmentations_for_the_global_scope_should_have_declare_modifier_unless_they_appear_in_already_ambien_2670", "Augmentations for the global scope should have 'declare' modifier unless they appear in already ambient context."),
	Cannot_augment_module_0_because_it_resolves_to_a_non_module_entity: r$11(2671, 1, "Cannot_augment_module_0_because_it_resolves_to_a_non_module_entity_2671", "Cannot augment module '{0}' because it resolves to a non-module entity."),
	Cannot_assign_a_0_constructor_type_to_a_1_constructor_type: r$11(2672, 1, "Cannot_assign_a_0_constructor_type_to_a_1_constructor_type_2672", "Cannot assign a '{0}' constructor type to a '{1}' constructor type."),
	Constructor_of_class_0_is_private_and_only_accessible_within_the_class_declaration: r$11(2673, 1, "Constructor_of_class_0_is_private_and_only_accessible_within_the_class_declaration_2673", "Constructor of class '{0}' is private and only accessible within the class declaration."),
	Constructor_of_class_0_is_protected_and_only_accessible_within_the_class_declaration: r$11(2674, 1, "Constructor_of_class_0_is_protected_and_only_accessible_within_the_class_declaration_2674", "Constructor of class '{0}' is protected and only accessible within the class declaration."),
	Cannot_extend_a_class_0_Class_constructor_is_marked_as_private: r$11(2675, 1, "Cannot_extend_a_class_0_Class_constructor_is_marked_as_private_2675", "Cannot extend a class '{0}'. Class constructor is marked as private."),
	Accessors_must_both_be_abstract_or_non_abstract: r$11(2676, 1, "Accessors_must_both_be_abstract_or_non_abstract_2676", "Accessors must both be abstract or non-abstract."),
	A_type_predicate_s_type_must_be_assignable_to_its_parameter_s_type: r$11(2677, 1, "A_type_predicate_s_type_must_be_assignable_to_its_parameter_s_type_2677", "A type predicate's type must be assignable to its parameter's type."),
	Type_0_is_not_comparable_to_type_1: r$11(2678, 1, "Type_0_is_not_comparable_to_type_1_2678", "Type '{0}' is not comparable to type '{1}'."),
	A_function_that_is_called_with_the_new_keyword_cannot_have_a_this_type_that_is_void: r$11(2679, 1, "A_function_that_is_called_with_the_new_keyword_cannot_have_a_this_type_that_is_void_2679", "A function that is called with the 'new' keyword cannot have a 'this' type that is 'void'."),
	A_0_parameter_must_be_the_first_parameter: r$11(2680, 1, "A_0_parameter_must_be_the_first_parameter_2680", "A '{0}' parameter must be the first parameter."),
	A_constructor_cannot_have_a_this_parameter: r$11(2681, 1, "A_constructor_cannot_have_a_this_parameter_2681", "A constructor cannot have a 'this' parameter."),
	this_implicitly_has_type_any_because_it_does_not_have_a_type_annotation: r$11(2683, 1, "this_implicitly_has_type_any_because_it_does_not_have_a_type_annotation_2683", "'this' implicitly has type 'any' because it does not have a type annotation."),
	The_this_context_of_type_0_is_not_assignable_to_method_s_this_of_type_1: r$11(2684, 1, "The_this_context_of_type_0_is_not_assignable_to_method_s_this_of_type_1_2684", "The 'this' context of type '{0}' is not assignable to method's 'this' of type '{1}'."),
	The_this_types_of_each_signature_are_incompatible: r$11(2685, 1, "The_this_types_of_each_signature_are_incompatible_2685", "The 'this' types of each signature are incompatible."),
	_0_refers_to_a_UMD_global_but_the_current_file_is_a_module_Consider_adding_an_import_instead: r$11(2686, 1, "_0_refers_to_a_UMD_global_but_the_current_file_is_a_module_Consider_adding_an_import_instead_2686", "'{0}' refers to a UMD global, but the current file is a module. Consider adding an import instead."),
	All_declarations_of_0_must_have_identical_modifiers: r$11(2687, 1, "All_declarations_of_0_must_have_identical_modifiers_2687", "All declarations of '{0}' must have identical modifiers."),
	Cannot_find_type_definition_file_for_0: r$11(2688, 1, "Cannot_find_type_definition_file_for_0_2688", "Cannot find type definition file for '{0}'."),
	Cannot_extend_an_interface_0_Did_you_mean_implements: r$11(2689, 1, "Cannot_extend_an_interface_0_Did_you_mean_implements_2689", "Cannot extend an interface '{0}'. Did you mean 'implements'?"),
	_0_only_refers_to_a_type_but_is_being_used_as_a_value_here_Did_you_mean_to_use_1_in_0: r$11(2690, 1, "_0_only_refers_to_a_type_but_is_being_used_as_a_value_here_Did_you_mean_to_use_1_in_0_2690", "'{0}' only refers to a type, but is being used as a value here. Did you mean to use '{1} in {0}'?"),
	_0_is_a_primitive_but_1_is_a_wrapper_object_Prefer_using_0_when_possible: r$11(2692, 1, "_0_is_a_primitive_but_1_is_a_wrapper_object_Prefer_using_0_when_possible_2692", "'{0}' is a primitive, but '{1}' is a wrapper object. Prefer using '{0}' when possible."),
	_0_only_refers_to_a_type_but_is_being_used_as_a_value_here: r$11(2693, 1, "_0_only_refers_to_a_type_but_is_being_used_as_a_value_here_2693", "'{0}' only refers to a type, but is being used as a value here."),
	Namespace_0_has_no_exported_member_1: r$11(2694, 1, "Namespace_0_has_no_exported_member_1_2694", "Namespace '{0}' has no exported member '{1}'."),
	Left_side_of_comma_operator_is_unused_and_has_no_side_effects: r$11(2695, 1, "Left_side_of_comma_operator_is_unused_and_has_no_side_effects_2695", "Left side of comma operator is unused and has no side effects.", !0),
	The_Object_type_is_assignable_to_very_few_other_types_Did_you_mean_to_use_the_any_type_instead: r$11(2696, 1, "The_Object_type_is_assignable_to_very_few_other_types_Did_you_mean_to_use_the_any_type_instead_2696", "The 'Object' type is assignable to very few other types. Did you mean to use the 'any' type instead?"),
	An_async_function_or_method_must_return_a_Promise_Make_sure_you_have_a_declaration_for_Promise_or_include_ES2015_in_your_lib_option: r$11(2697, 1, "An_async_function_or_method_must_return_a_Promise_Make_sure_you_have_a_declaration_for_Promise_or_in_2697", "An async function or method must return a 'Promise'. Make sure you have a declaration for 'Promise' or include 'ES2015' in your '--lib' option."),
	Spread_types_may_only_be_created_from_object_types: r$11(2698, 1, "Spread_types_may_only_be_created_from_object_types_2698", "Spread types may only be created from object types."),
	Static_property_0_conflicts_with_built_in_property_Function_0_of_constructor_function_1: r$11(2699, 1, "Static_property_0_conflicts_with_built_in_property_Function_0_of_constructor_function_1_2699", "Static property '{0}' conflicts with built-in property 'Function.{0}' of constructor function '{1}'."),
	Rest_types_may_only_be_created_from_object_types: r$11(2700, 1, "Rest_types_may_only_be_created_from_object_types_2700", "Rest types may only be created from object types."),
	The_target_of_an_object_rest_assignment_must_be_a_variable_or_a_property_access: r$11(2701, 1, "The_target_of_an_object_rest_assignment_must_be_a_variable_or_a_property_access_2701", "The target of an object rest assignment must be a variable or a property access."),
	_0_only_refers_to_a_type_but_is_being_used_as_a_namespace_here: r$11(2702, 1, "_0_only_refers_to_a_type_but_is_being_used_as_a_namespace_here_2702", "'{0}' only refers to a type, but is being used as a namespace here."),
	The_operand_of_a_delete_operator_must_be_a_property_reference: r$11(2703, 1, "The_operand_of_a_delete_operator_must_be_a_property_reference_2703", "The operand of a 'delete' operator must be a property reference."),
	The_operand_of_a_delete_operator_cannot_be_a_read_only_property: r$11(2704, 1, "The_operand_of_a_delete_operator_cannot_be_a_read_only_property_2704", "The operand of a 'delete' operator cannot be a read-only property."),
	An_async_function_or_method_in_ES5_requires_the_Promise_constructor_Make_sure_you_have_a_declaration_for_the_Promise_constructor_or_include_ES2015_in_your_lib_option: r$11(2705, 1, "An_async_function_or_method_in_ES5_requires_the_Promise_constructor_Make_sure_you_have_a_declaration_2705", "An async function or method in ES5 requires the 'Promise' constructor.  Make sure you have a declaration for the 'Promise' constructor or include 'ES2015' in your '--lib' option."),
	Required_type_parameters_may_not_follow_optional_type_parameters: r$11(2706, 1, "Required_type_parameters_may_not_follow_optional_type_parameters_2706", "Required type parameters may not follow optional type parameters."),
	Generic_type_0_requires_between_1_and_2_type_arguments: r$11(2707, 1, "Generic_type_0_requires_between_1_and_2_type_arguments_2707", "Generic type '{0}' requires between {1} and {2} type arguments."),
	Cannot_use_namespace_0_as_a_value: r$11(2708, 1, "Cannot_use_namespace_0_as_a_value_2708", "Cannot use namespace '{0}' as a value."),
	Cannot_use_namespace_0_as_a_type: r$11(2709, 1, "Cannot_use_namespace_0_as_a_type_2709", "Cannot use namespace '{0}' as a type."),
	_0_are_specified_twice_The_attribute_named_0_will_be_overwritten: r$11(2710, 1, "_0_are_specified_twice_The_attribute_named_0_will_be_overwritten_2710", "'{0}' are specified twice. The attribute named '{0}' will be overwritten."),
	A_dynamic_import_call_returns_a_Promise_Make_sure_you_have_a_declaration_for_Promise_or_include_ES2015_in_your_lib_option: r$11(2711, 1, "A_dynamic_import_call_returns_a_Promise_Make_sure_you_have_a_declaration_for_Promise_or_include_ES20_2711", "A dynamic import call returns a 'Promise'. Make sure you have a declaration for 'Promise' or include 'ES2015' in your '--lib' option."),
	A_dynamic_import_call_in_ES5_requires_the_Promise_constructor_Make_sure_you_have_a_declaration_for_the_Promise_constructor_or_include_ES2015_in_your_lib_option: r$11(2712, 1, "A_dynamic_import_call_in_ES5_requires_the_Promise_constructor_Make_sure_you_have_a_declaration_for_t_2712", "A dynamic import call in ES5 requires the 'Promise' constructor.  Make sure you have a declaration for the 'Promise' constructor or include 'ES2015' in your '--lib' option."),
	Cannot_access_0_1_because_0_is_a_type_but_not_a_namespace_Did_you_mean_to_retrieve_the_type_of_the_property_1_in_0_with_0_1: r$11(2713, 1, "Cannot_access_0_1_because_0_is_a_type_but_not_a_namespace_Did_you_mean_to_retrieve_the_type_of_the_p_2713", `Cannot access '{0}.{1}' because '{0}' is a type, but not a namespace. Did you mean to retrieve the type of the property '{1}' in '{0}' with '{0}["{1}"]'?`),
	The_expression_of_an_export_assignment_must_be_an_identifier_or_qualified_name_in_an_ambient_context: r$11(2714, 1, "The_expression_of_an_export_assignment_must_be_an_identifier_or_qualified_name_in_an_ambient_context_2714", "The expression of an export assignment must be an identifier or qualified name in an ambient context."),
	Abstract_property_0_in_class_1_cannot_be_accessed_in_the_constructor: r$11(2715, 1, "Abstract_property_0_in_class_1_cannot_be_accessed_in_the_constructor_2715", "Abstract property '{0}' in class '{1}' cannot be accessed in the constructor."),
	Type_parameter_0_has_a_circular_default: r$11(2716, 1, "Type_parameter_0_has_a_circular_default_2716", "Type parameter '{0}' has a circular default."),
	Subsequent_property_declarations_must_have_the_same_type_Property_0_must_be_of_type_1_but_here_has_type_2: r$11(2717, 1, "Subsequent_property_declarations_must_have_the_same_type_Property_0_must_be_of_type_1_but_here_has_t_2717", "Subsequent property declarations must have the same type.  Property '{0}' must be of type '{1}', but here has type '{2}'."),
	Duplicate_property_0: r$11(2718, 1, "Duplicate_property_0_2718", "Duplicate property '{0}'."),
	Type_0_is_not_assignable_to_type_1_Two_different_types_with_this_name_exist_but_they_are_unrelated: r$11(2719, 1, "Type_0_is_not_assignable_to_type_1_Two_different_types_with_this_name_exist_but_they_are_unrelated_2719", "Type '{0}' is not assignable to type '{1}'. Two different types with this name exist, but they are unrelated."),
	Class_0_incorrectly_implements_class_1_Did_you_mean_to_extend_1_and_inherit_its_members_as_a_subclass: r$11(2720, 1, "Class_0_incorrectly_implements_class_1_Did_you_mean_to_extend_1_and_inherit_its_members_as_a_subclas_2720", "Class '{0}' incorrectly implements class '{1}'. Did you mean to extend '{1}' and inherit its members as a subclass?"),
	Cannot_invoke_an_object_which_is_possibly_null: r$11(2721, 1, "Cannot_invoke_an_object_which_is_possibly_null_2721", "Cannot invoke an object which is possibly 'null'."),
	Cannot_invoke_an_object_which_is_possibly_undefined: r$11(2722, 1, "Cannot_invoke_an_object_which_is_possibly_undefined_2722", "Cannot invoke an object which is possibly 'undefined'."),
	Cannot_invoke_an_object_which_is_possibly_null_or_undefined: r$11(2723, 1, "Cannot_invoke_an_object_which_is_possibly_null_or_undefined_2723", "Cannot invoke an object which is possibly 'null' or 'undefined'."),
	_0_has_no_exported_member_named_1_Did_you_mean_2: r$11(2724, 1, "_0_has_no_exported_member_named_1_Did_you_mean_2_2724", "'{0}' has no exported member named '{1}'. Did you mean '{2}'?"),
	Class_name_cannot_be_Object_when_targeting_ES5_with_module_0: r$11(2725, 1, "Class_name_cannot_be_Object_when_targeting_ES5_with_module_0_2725", "Class name cannot be 'Object' when targeting ES5 with module {0}."),
	Cannot_find_lib_definition_for_0: r$11(2726, 1, "Cannot_find_lib_definition_for_0_2726", "Cannot find lib definition for '{0}'."),
	Cannot_find_lib_definition_for_0_Did_you_mean_1: r$11(2727, 1, "Cannot_find_lib_definition_for_0_Did_you_mean_1_2727", "Cannot find lib definition for '{0}'. Did you mean '{1}'?"),
	_0_is_declared_here: r$11(2728, 3, "_0_is_declared_here_2728", "'{0}' is declared here."),
	Property_0_is_used_before_its_initialization: r$11(2729, 1, "Property_0_is_used_before_its_initialization_2729", "Property '{0}' is used before its initialization."),
	An_arrow_function_cannot_have_a_this_parameter: r$11(2730, 1, "An_arrow_function_cannot_have_a_this_parameter_2730", "An arrow function cannot have a 'this' parameter."),
	Implicit_conversion_of_a_symbol_to_a_string_will_fail_at_runtime_Consider_wrapping_this_expression_in_String: r$11(2731, 1, "Implicit_conversion_of_a_symbol_to_a_string_will_fail_at_runtime_Consider_wrapping_this_expression_i_2731", "Implicit conversion of a 'symbol' to a 'string' will fail at runtime. Consider wrapping this expression in 'String(...)'."),
	Cannot_find_module_0_Consider_using_resolveJsonModule_to_import_module_with_json_extension: r$11(2732, 1, "Cannot_find_module_0_Consider_using_resolveJsonModule_to_import_module_with_json_extension_2732", "Cannot find module '{0}'. Consider using '--resolveJsonModule' to import module with '.json' extension."),
	Property_0_was_also_declared_here: r$11(2733, 1, "Property_0_was_also_declared_here_2733", "Property '{0}' was also declared here."),
	Are_you_missing_a_semicolon: r$11(2734, 1, "Are_you_missing_a_semicolon_2734", "Are you missing a semicolon?"),
	Did_you_mean_for_0_to_be_constrained_to_type_new_args_Colon_any_1: r$11(2735, 1, "Did_you_mean_for_0_to_be_constrained_to_type_new_args_Colon_any_1_2735", "Did you mean for '{0}' to be constrained to type 'new (...args: any[]) => {1}'?"),
	Operator_0_cannot_be_applied_to_type_1: r$11(2736, 1, "Operator_0_cannot_be_applied_to_type_1_2736", "Operator '{0}' cannot be applied to type '{1}'."),
	BigInt_literals_are_not_available_when_targeting_lower_than_ES2020: r$11(2737, 1, "BigInt_literals_are_not_available_when_targeting_lower_than_ES2020_2737", "BigInt literals are not available when targeting lower than ES2020."),
	An_outer_value_of_this_is_shadowed_by_this_container: r$11(2738, 3, "An_outer_value_of_this_is_shadowed_by_this_container_2738", "An outer value of 'this' is shadowed by this container."),
	Type_0_is_missing_the_following_properties_from_type_1_Colon_2: r$11(2739, 1, "Type_0_is_missing_the_following_properties_from_type_1_Colon_2_2739", "Type '{0}' is missing the following properties from type '{1}': {2}"),
	Type_0_is_missing_the_following_properties_from_type_1_Colon_2_and_3_more: r$11(2740, 1, "Type_0_is_missing_the_following_properties_from_type_1_Colon_2_and_3_more_2740", "Type '{0}' is missing the following properties from type '{1}': {2}, and {3} more."),
	Property_0_is_missing_in_type_1_but_required_in_type_2: r$11(2741, 1, "Property_0_is_missing_in_type_1_but_required_in_type_2_2741", "Property '{0}' is missing in type '{1}' but required in type '{2}'."),
	The_inferred_type_of_0_cannot_be_named_without_a_reference_to_1_This_is_likely_not_portable_A_type_annotation_is_necessary: r$11(2742, 1, "The_inferred_type_of_0_cannot_be_named_without_a_reference_to_1_This_is_likely_not_portable_A_type_a_2742", "The inferred type of '{0}' cannot be named without a reference to '{1}'. This is likely not portable. A type annotation is necessary."),
	No_overload_expects_0_type_arguments_but_overloads_do_exist_that_expect_either_1_or_2_type_arguments: r$11(2743, 1, "No_overload_expects_0_type_arguments_but_overloads_do_exist_that_expect_either_1_or_2_type_arguments_2743", "No overload expects {0} type arguments, but overloads do exist that expect either {1} or {2} type arguments."),
	Type_parameter_defaults_can_only_reference_previously_declared_type_parameters: r$11(2744, 1, "Type_parameter_defaults_can_only_reference_previously_declared_type_parameters_2744", "Type parameter defaults can only reference previously declared type parameters."),
	This_JSX_tag_s_0_prop_expects_type_1_which_requires_multiple_children_but_only_a_single_child_was_provided: r$11(2745, 1, "This_JSX_tag_s_0_prop_expects_type_1_which_requires_multiple_children_but_only_a_single_child_was_pr_2745", "This JSX tag's '{0}' prop expects type '{1}' which requires multiple children, but only a single child was provided."),
	This_JSX_tag_s_0_prop_expects_a_single_child_of_type_1_but_multiple_children_were_provided: r$11(2746, 1, "This_JSX_tag_s_0_prop_expects_a_single_child_of_type_1_but_multiple_children_were_provided_2746", "This JSX tag's '{0}' prop expects a single child of type '{1}', but multiple children were provided."),
	_0_components_don_t_accept_text_as_child_elements_Text_in_JSX_has_the_type_string_but_the_expected_type_of_1_is_2: r$11(2747, 1, "_0_components_don_t_accept_text_as_child_elements_Text_in_JSX_has_the_type_string_but_the_expected_t_2747", "'{0}' components don't accept text as child elements. Text in JSX has the type 'string', but the expected type of '{1}' is '{2}'."),
	Cannot_access_ambient_const_enums_when_0_is_enabled: r$11(2748, 1, "Cannot_access_ambient_const_enums_when_0_is_enabled_2748", "Cannot access ambient const enums when '{0}' is enabled."),
	_0_refers_to_a_value_but_is_being_used_as_a_type_here_Did_you_mean_typeof_0: r$11(2749, 1, "_0_refers_to_a_value_but_is_being_used_as_a_type_here_Did_you_mean_typeof_0_2749", "'{0}' refers to a value, but is being used as a type here. Did you mean 'typeof {0}'?"),
	The_implementation_signature_is_declared_here: r$11(2750, 1, "The_implementation_signature_is_declared_here_2750", "The implementation signature is declared here."),
	Circularity_originates_in_type_at_this_location: r$11(2751, 1, "Circularity_originates_in_type_at_this_location_2751", "Circularity originates in type at this location."),
	The_first_export_default_is_here: r$11(2752, 1, "The_first_export_default_is_here_2752", "The first export default is here."),
	Another_export_default_is_here: r$11(2753, 1, "Another_export_default_is_here_2753", "Another export default is here."),
	super_may_not_use_type_arguments: r$11(2754, 1, "super_may_not_use_type_arguments_2754", "'super' may not use type arguments."),
	No_constituent_of_type_0_is_callable: r$11(2755, 1, "No_constituent_of_type_0_is_callable_2755", "No constituent of type '{0}' is callable."),
	Not_all_constituents_of_type_0_are_callable: r$11(2756, 1, "Not_all_constituents_of_type_0_are_callable_2756", "Not all constituents of type '{0}' are callable."),
	Type_0_has_no_call_signatures: r$11(2757, 1, "Type_0_has_no_call_signatures_2757", "Type '{0}' has no call signatures."),
	Each_member_of_the_union_type_0_has_signatures_but_none_of_those_signatures_are_compatible_with_each_other: r$11(2758, 1, "Each_member_of_the_union_type_0_has_signatures_but_none_of_those_signatures_are_compatible_with_each_2758", "Each member of the union type '{0}' has signatures, but none of those signatures are compatible with each other."),
	No_constituent_of_type_0_is_constructable: r$11(2759, 1, "No_constituent_of_type_0_is_constructable_2759", "No constituent of type '{0}' is constructable."),
	Not_all_constituents_of_type_0_are_constructable: r$11(2760, 1, "Not_all_constituents_of_type_0_are_constructable_2760", "Not all constituents of type '{0}' are constructable."),
	Type_0_has_no_construct_signatures: r$11(2761, 1, "Type_0_has_no_construct_signatures_2761", "Type '{0}' has no construct signatures."),
	Each_member_of_the_union_type_0_has_construct_signatures_but_none_of_those_signatures_are_compatible_with_each_other: r$11(2762, 1, "Each_member_of_the_union_type_0_has_construct_signatures_but_none_of_those_signatures_are_compatible_2762", "Each member of the union type '{0}' has construct signatures, but none of those signatures are compatible with each other."),
	Cannot_iterate_value_because_the_next_method_of_its_iterator_expects_type_1_but_for_of_will_always_send_0: r$11(2763, 1, "Cannot_iterate_value_because_the_next_method_of_its_iterator_expects_type_1_but_for_of_will_always_s_2763", "Cannot iterate value because the 'next' method of its iterator expects type '{1}', but for-of will always send '{0}'."),
	Cannot_iterate_value_because_the_next_method_of_its_iterator_expects_type_1_but_array_spread_will_always_send_0: r$11(2764, 1, "Cannot_iterate_value_because_the_next_method_of_its_iterator_expects_type_1_but_array_spread_will_al_2764", "Cannot iterate value because the 'next' method of its iterator expects type '{1}', but array spread will always send '{0}'."),
	Cannot_iterate_value_because_the_next_method_of_its_iterator_expects_type_1_but_array_destructuring_will_always_send_0: r$11(2765, 1, "Cannot_iterate_value_because_the_next_method_of_its_iterator_expects_type_1_but_array_destructuring__2765", "Cannot iterate value because the 'next' method of its iterator expects type '{1}', but array destructuring will always send '{0}'."),
	Cannot_delegate_iteration_to_value_because_the_next_method_of_its_iterator_expects_type_1_but_the_containing_generator_will_always_send_0: r$11(2766, 1, "Cannot_delegate_iteration_to_value_because_the_next_method_of_its_iterator_expects_type_1_but_the_co_2766", "Cannot delegate iteration to value because the 'next' method of its iterator expects type '{1}', but the containing generator will always send '{0}'."),
	The_0_property_of_an_iterator_must_be_a_method: r$11(2767, 1, "The_0_property_of_an_iterator_must_be_a_method_2767", "The '{0}' property of an iterator must be a method."),
	The_0_property_of_an_async_iterator_must_be_a_method: r$11(2768, 1, "The_0_property_of_an_async_iterator_must_be_a_method_2768", "The '{0}' property of an async iterator must be a method."),
	No_overload_matches_this_call: r$11(2769, 1, "No_overload_matches_this_call_2769", "No overload matches this call."),
	The_last_overload_gave_the_following_error: r$11(2770, 1, "The_last_overload_gave_the_following_error_2770", "The last overload gave the following error."),
	The_last_overload_is_declared_here: r$11(2771, 1, "The_last_overload_is_declared_here_2771", "The last overload is declared here."),
	Overload_0_of_1_2_gave_the_following_error: r$11(2772, 1, "Overload_0_of_1_2_gave_the_following_error_2772", "Overload {0} of {1}, '{2}', gave the following error."),
	Did_you_forget_to_use_await: r$11(2773, 1, "Did_you_forget_to_use_await_2773", "Did you forget to use 'await'?"),
	This_condition_will_always_return_true_since_this_function_is_always_defined_Did_you_mean_to_call_it_instead: r$11(2774, 1, "This_condition_will_always_return_true_since_this_function_is_always_defined_Did_you_mean_to_call_it_2774", "This condition will always return true since this function is always defined. Did you mean to call it instead?"),
	Assertions_require_every_name_in_the_call_target_to_be_declared_with_an_explicit_type_annotation: r$11(2775, 1, "Assertions_require_every_name_in_the_call_target_to_be_declared_with_an_explicit_type_annotation_2775", "Assertions require every name in the call target to be declared with an explicit type annotation."),
	Assertions_require_the_call_target_to_be_an_identifier_or_qualified_name: r$11(2776, 1, "Assertions_require_the_call_target_to_be_an_identifier_or_qualified_name_2776", "Assertions require the call target to be an identifier or qualified name."),
	The_operand_of_an_increment_or_decrement_operator_may_not_be_an_optional_property_access: r$11(2777, 1, "The_operand_of_an_increment_or_decrement_operator_may_not_be_an_optional_property_access_2777", "The operand of an increment or decrement operator may not be an optional property access."),
	The_target_of_an_object_rest_assignment_may_not_be_an_optional_property_access: r$11(2778, 1, "The_target_of_an_object_rest_assignment_may_not_be_an_optional_property_access_2778", "The target of an object rest assignment may not be an optional property access."),
	The_left_hand_side_of_an_assignment_expression_may_not_be_an_optional_property_access: r$11(2779, 1, "The_left_hand_side_of_an_assignment_expression_may_not_be_an_optional_property_access_2779", "The left-hand side of an assignment expression may not be an optional property access."),
	The_left_hand_side_of_a_for_in_statement_may_not_be_an_optional_property_access: r$11(2780, 1, "The_left_hand_side_of_a_for_in_statement_may_not_be_an_optional_property_access_2780", "The left-hand side of a 'for...in' statement may not be an optional property access."),
	The_left_hand_side_of_a_for_of_statement_may_not_be_an_optional_property_access: r$11(2781, 1, "The_left_hand_side_of_a_for_of_statement_may_not_be_an_optional_property_access_2781", "The left-hand side of a 'for...of' statement may not be an optional property access."),
	_0_needs_an_explicit_type_annotation: r$11(2782, 3, "_0_needs_an_explicit_type_annotation_2782", "'{0}' needs an explicit type annotation."),
	_0_is_specified_more_than_once_so_this_usage_will_be_overwritten: r$11(2783, 1, "_0_is_specified_more_than_once_so_this_usage_will_be_overwritten_2783", "'{0}' is specified more than once, so this usage will be overwritten."),
	get_and_set_accessors_cannot_declare_this_parameters: r$11(2784, 1, "get_and_set_accessors_cannot_declare_this_parameters_2784", "'get' and 'set' accessors cannot declare 'this' parameters."),
	This_spread_always_overwrites_this_property: r$11(2785, 1, "This_spread_always_overwrites_this_property_2785", "This spread always overwrites this property."),
	_0_cannot_be_used_as_a_JSX_component: r$11(2786, 1, "_0_cannot_be_used_as_a_JSX_component_2786", "'{0}' cannot be used as a JSX component."),
	Its_return_type_0_is_not_a_valid_JSX_element: r$11(2787, 1, "Its_return_type_0_is_not_a_valid_JSX_element_2787", "Its return type '{0}' is not a valid JSX element."),
	Its_instance_type_0_is_not_a_valid_JSX_element: r$11(2788, 1, "Its_instance_type_0_is_not_a_valid_JSX_element_2788", "Its instance type '{0}' is not a valid JSX element."),
	Its_element_type_0_is_not_a_valid_JSX_element: r$11(2789, 1, "Its_element_type_0_is_not_a_valid_JSX_element_2789", "Its element type '{0}' is not a valid JSX element."),
	The_operand_of_a_delete_operator_must_be_optional: r$11(2790, 1, "The_operand_of_a_delete_operator_must_be_optional_2790", "The operand of a 'delete' operator must be optional."),
	Exponentiation_cannot_be_performed_on_bigint_values_unless_the_target_option_is_set_to_es2016_or_later: r$11(2791, 1, "Exponentiation_cannot_be_performed_on_bigint_values_unless_the_target_option_is_set_to_es2016_or_lat_2791", "Exponentiation cannot be performed on 'bigint' values unless the 'target' option is set to 'es2016' or later."),
	Cannot_find_module_0_Did_you_mean_to_set_the_moduleResolution_option_to_nodenext_or_to_add_aliases_to_the_paths_option: r$11(2792, 1, "Cannot_find_module_0_Did_you_mean_to_set_the_moduleResolution_option_to_nodenext_or_to_add_aliases_t_2792", "Cannot find module '{0}'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?"),
	The_call_would_have_succeeded_against_this_implementation_but_implementation_signatures_of_overloads_are_not_externally_visible: r$11(2793, 1, "The_call_would_have_succeeded_against_this_implementation_but_implementation_signatures_of_overloads_2793", "The call would have succeeded against this implementation, but implementation signatures of overloads are not externally visible."),
	Expected_0_arguments_but_got_1_Did_you_forget_to_include_void_in_your_type_argument_to_Promise: r$11(2794, 1, "Expected_0_arguments_but_got_1_Did_you_forget_to_include_void_in_your_type_argument_to_Promise_2794", "Expected {0} arguments, but got {1}. Did you forget to include 'void' in your type argument to 'Promise'?"),
	The_intrinsic_keyword_can_only_be_used_to_declare_compiler_provided_intrinsic_types: r$11(2795, 1, "The_intrinsic_keyword_can_only_be_used_to_declare_compiler_provided_intrinsic_types_2795", "The 'intrinsic' keyword can only be used to declare compiler provided intrinsic types."),
	It_is_likely_that_you_are_missing_a_comma_to_separate_these_two_template_expressions_They_form_a_tagged_template_expression_which_cannot_be_invoked: r$11(2796, 1, "It_is_likely_that_you_are_missing_a_comma_to_separate_these_two_template_expressions_They_form_a_tag_2796", "It is likely that you are missing a comma to separate these two template expressions. They form a tagged template expression which cannot be invoked."),
	A_mixin_class_that_extends_from_a_type_variable_containing_an_abstract_construct_signature_must_also_be_declared_abstract: r$11(2797, 1, "A_mixin_class_that_extends_from_a_type_variable_containing_an_abstract_construct_signature_must_also_2797", "A mixin class that extends from a type variable containing an abstract construct signature must also be declared 'abstract'."),
	The_declaration_was_marked_as_deprecated_here: r$11(2798, 1, "The_declaration_was_marked_as_deprecated_here_2798", "The declaration was marked as deprecated here."),
	Type_produces_a_tuple_type_that_is_too_large_to_represent: r$11(2799, 1, "Type_produces_a_tuple_type_that_is_too_large_to_represent_2799", "Type produces a tuple type that is too large to represent."),
	Expression_produces_a_tuple_type_that_is_too_large_to_represent: r$11(2800, 1, "Expression_produces_a_tuple_type_that_is_too_large_to_represent_2800", "Expression produces a tuple type that is too large to represent."),
	This_condition_will_always_return_true_since_this_0_is_always_defined: r$11(2801, 1, "This_condition_will_always_return_true_since_this_0_is_always_defined_2801", "This condition will always return true since this '{0}' is always defined."),
	Type_0_can_only_be_iterated_through_when_using_the_downlevelIteration_flag_or_with_a_target_of_es2015_or_higher: r$11(2802, 1, "Type_0_can_only_be_iterated_through_when_using_the_downlevelIteration_flag_or_with_a_target_of_es201_2802", "Type '{0}' can only be iterated through when using the '--downlevelIteration' flag or with a '--target' of 'es2015' or higher."),
	Cannot_assign_to_private_method_0_Private_methods_are_not_writable: r$11(2803, 1, "Cannot_assign_to_private_method_0_Private_methods_are_not_writable_2803", "Cannot assign to private method '{0}'. Private methods are not writable."),
	Duplicate_identifier_0_Static_and_instance_elements_cannot_share_the_same_private_name: r$11(2804, 1, "Duplicate_identifier_0_Static_and_instance_elements_cannot_share_the_same_private_name_2804", "Duplicate identifier '{0}'. Static and instance elements cannot share the same private name."),
	Private_accessor_was_defined_without_a_getter: r$11(2806, 1, "Private_accessor_was_defined_without_a_getter_2806", "Private accessor was defined without a getter."),
	This_syntax_requires_an_imported_helper_named_1_with_2_parameters_which_is_not_compatible_with_the_one_in_0_Consider_upgrading_your_version_of_0: r$11(2807, 1, "This_syntax_requires_an_imported_helper_named_1_with_2_parameters_which_is_not_compatible_with_the_o_2807", "This syntax requires an imported helper named '{1}' with {2} parameters, which is not compatible with the one in '{0}'. Consider upgrading your version of '{0}'."),
	A_get_accessor_must_be_at_least_as_accessible_as_the_setter: r$11(2808, 1, "A_get_accessor_must_be_at_least_as_accessible_as_the_setter_2808", "A get accessor must be at least as accessible as the setter"),
	Declaration_or_statement_expected_This_follows_a_block_of_statements_so_if_you_intended_to_write_a_destructuring_assignment_you_might_need_to_wrap_the_whole_assignment_in_parentheses: r$11(2809, 1, "Declaration_or_statement_expected_This_follows_a_block_of_statements_so_if_you_intended_to_write_a_d_2809", "Declaration or statement expected. This '=' follows a block of statements, so if you intended to write a destructuring assignment, you might need to wrap the whole assignment in parentheses."),
	Expected_1_argument_but_got_0_new_Promise_needs_a_JSDoc_hint_to_produce_a_resolve_that_can_be_called_without_arguments: r$11(2810, 1, "Expected_1_argument_but_got_0_new_Promise_needs_a_JSDoc_hint_to_produce_a_resolve_that_can_be_called_2810", "Expected 1 argument, but got 0. 'new Promise()' needs a JSDoc hint to produce a 'resolve' that can be called without arguments."),
	Initializer_for_property_0: r$11(2811, 1, "Initializer_for_property_0_2811", "Initializer for property '{0}'"),
	Property_0_does_not_exist_on_type_1_Try_changing_the_lib_compiler_option_to_include_dom: r$11(2812, 1, "Property_0_does_not_exist_on_type_1_Try_changing_the_lib_compiler_option_to_include_dom_2812", "Property '{0}' does not exist on type '{1}'. Try changing the 'lib' compiler option to include 'dom'."),
	Class_declaration_cannot_implement_overload_list_for_0: r$11(2813, 1, "Class_declaration_cannot_implement_overload_list_for_0_2813", "Class declaration cannot implement overload list for '{0}'."),
	Function_with_bodies_can_only_merge_with_classes_that_are_ambient: r$11(2814, 1, "Function_with_bodies_can_only_merge_with_classes_that_are_ambient_2814", "Function with bodies can only merge with classes that are ambient."),
	arguments_cannot_be_referenced_in_property_initializers: r$11(2815, 1, "arguments_cannot_be_referenced_in_property_initializers_2815", "'arguments' cannot be referenced in property initializers."),
	Cannot_use_this_in_a_static_property_initializer_of_a_decorated_class: r$11(2816, 1, "Cannot_use_this_in_a_static_property_initializer_of_a_decorated_class_2816", "Cannot use 'this' in a static property initializer of a decorated class."),
	Property_0_has_no_initializer_and_is_not_definitely_assigned_in_a_class_static_block: r$11(2817, 1, "Property_0_has_no_initializer_and_is_not_definitely_assigned_in_a_class_static_block_2817", "Property '{0}' has no initializer and is not definitely assigned in a class static block."),
	Duplicate_identifier_0_Compiler_reserves_name_1_when_emitting_super_references_in_static_initializers: r$11(2818, 1, "Duplicate_identifier_0_Compiler_reserves_name_1_when_emitting_super_references_in_static_initializer_2818", "Duplicate identifier '{0}'. Compiler reserves name '{1}' when emitting 'super' references in static initializers."),
	Namespace_name_cannot_be_0: r$11(2819, 1, "Namespace_name_cannot_be_0_2819", "Namespace name cannot be '{0}'."),
	Type_0_is_not_assignable_to_type_1_Did_you_mean_2: r$11(2820, 1, "Type_0_is_not_assignable_to_type_1_Did_you_mean_2_2820", "Type '{0}' is not assignable to type '{1}'. Did you mean '{2}'?"),
	Import_assertions_are_only_supported_when_the_module_option_is_set_to_esnext_node18_nodenext_or_preserve: r$11(2821, 1, "Import_assertions_are_only_supported_when_the_module_option_is_set_to_esnext_node18_nodenext_or_pres_2821", "Import assertions are only supported when the '--module' option is set to 'esnext', 'node18', 'nodenext', or 'preserve'."),
	Import_assertions_cannot_be_used_with_type_only_imports_or_exports: r$11(2822, 1, "Import_assertions_cannot_be_used_with_type_only_imports_or_exports_2822", "Import assertions cannot be used with type-only imports or exports."),
	Import_attributes_are_only_supported_when_the_module_option_is_set_to_esnext_node18_nodenext_or_preserve: r$11(2823, 1, "Import_attributes_are_only_supported_when_the_module_option_is_set_to_esnext_node18_nodenext_or_pres_2823", "Import attributes are only supported when the '--module' option is set to 'esnext', 'node18', 'nodenext', or 'preserve'."),
	Cannot_find_namespace_0_Did_you_mean_1: r$11(2833, 1, "Cannot_find_namespace_0_Did_you_mean_1_2833", "Cannot find namespace '{0}'. Did you mean '{1}'?"),
	Relative_import_paths_need_explicit_file_extensions_in_ECMAScript_imports_when_moduleResolution_is_node16_or_nodenext_Consider_adding_an_extension_to_the_import_path: r$11(2834, 1, "Relative_import_paths_need_explicit_file_extensions_in_ECMAScript_imports_when_moduleResolution_is_n_2834", "Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path."),
	Relative_import_paths_need_explicit_file_extensions_in_ECMAScript_imports_when_moduleResolution_is_node16_or_nodenext_Did_you_mean_0: r$11(2835, 1, "Relative_import_paths_need_explicit_file_extensions_in_ECMAScript_imports_when_moduleResolution_is_n_2835", "Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '{0}'?"),
	Import_assertions_are_not_allowed_on_statements_that_compile_to_CommonJS_require_calls: r$11(2836, 1, "Import_assertions_are_not_allowed_on_statements_that_compile_to_CommonJS_require_calls_2836", "Import assertions are not allowed on statements that compile to CommonJS 'require' calls."),
	Import_assertion_values_must_be_string_literal_expressions: r$11(2837, 1, "Import_assertion_values_must_be_string_literal_expressions_2837", "Import assertion values must be string literal expressions."),
	All_declarations_of_0_must_have_identical_constraints: r$11(2838, 1, "All_declarations_of_0_must_have_identical_constraints_2838", "All declarations of '{0}' must have identical constraints."),
	This_condition_will_always_return_0_since_JavaScript_compares_objects_by_reference_not_value: r$11(2839, 1, "This_condition_will_always_return_0_since_JavaScript_compares_objects_by_reference_not_value_2839", "This condition will always return '{0}' since JavaScript compares objects by reference, not value."),
	An_interface_cannot_extend_a_primitive_type_like_0_It_can_only_extend_other_named_object_types: r$11(2840, 1, "An_interface_cannot_extend_a_primitive_type_like_0_It_can_only_extend_other_named_object_types_2840", "An interface cannot extend a primitive type like '{0}'. It can only extend other named object types."),
	_0_is_an_unused_renaming_of_1_Did_you_intend_to_use_it_as_a_type_annotation: r$11(2842, 1, "_0_is_an_unused_renaming_of_1_Did_you_intend_to_use_it_as_a_type_annotation_2842", "'{0}' is an unused renaming of '{1}'. Did you intend to use it as a type annotation?"),
	We_can_only_write_a_type_for_0_by_adding_a_type_for_the_entire_parameter_here: r$11(2843, 1, "We_can_only_write_a_type_for_0_by_adding_a_type_for_the_entire_parameter_here_2843", "We can only write a type for '{0}' by adding a type for the entire parameter here."),
	Type_of_instance_member_variable_0_cannot_reference_identifier_1_declared_in_the_constructor: r$11(2844, 1, "Type_of_instance_member_variable_0_cannot_reference_identifier_1_declared_in_the_constructor_2844", "Type of instance member variable '{0}' cannot reference identifier '{1}' declared in the constructor."),
	This_condition_will_always_return_0: r$11(2845, 1, "This_condition_will_always_return_0_2845", "This condition will always return '{0}'."),
	A_declaration_file_cannot_be_imported_without_import_type_Did_you_mean_to_import_an_implementation_file_0_instead: r$11(2846, 1, "A_declaration_file_cannot_be_imported_without_import_type_Did_you_mean_to_import_an_implementation_f_2846", "A declaration file cannot be imported without 'import type'. Did you mean to import an implementation file '{0}' instead?"),
	The_right_hand_side_of_an_instanceof_expression_must_not_be_an_instantiation_expression: r$11(2848, 1, "The_right_hand_side_of_an_instanceof_expression_must_not_be_an_instantiation_expression_2848", "The right-hand side of an 'instanceof' expression must not be an instantiation expression."),
	Target_signature_provides_too_few_arguments_Expected_0_or_more_but_got_1: r$11(2849, 1, "Target_signature_provides_too_few_arguments_Expected_0_or_more_but_got_1_2849", "Target signature provides too few arguments. Expected {0} or more, but got {1}."),
	The_initializer_of_a_using_declaration_must_be_either_an_object_with_a_Symbol_dispose_method_or_be_null_or_undefined: r$11(2850, 1, "The_initializer_of_a_using_declaration_must_be_either_an_object_with_a_Symbol_dispose_method_or_be_n_2850", "The initializer of a 'using' declaration must be either an object with a '[Symbol.dispose]()' method, or be 'null' or 'undefined'."),
	The_initializer_of_an_await_using_declaration_must_be_either_an_object_with_a_Symbol_asyncDispose_or_Symbol_dispose_method_or_be_null_or_undefined: r$11(2851, 1, "The_initializer_of_an_await_using_declaration_must_be_either_an_object_with_a_Symbol_asyncDispose_or_2851", "The initializer of an 'await using' declaration must be either an object with a '[Symbol.asyncDispose]()' or '[Symbol.dispose]()' method, or be 'null' or 'undefined'."),
	await_using_statements_are_only_allowed_within_async_functions_and_at_the_top_levels_of_modules: r$11(2852, 1, "await_using_statements_are_only_allowed_within_async_functions_and_at_the_top_levels_of_modules_2852", "'await using' statements are only allowed within async functions and at the top levels of modules."),
	await_using_statements_are_only_allowed_at_the_top_level_of_a_file_when_that_file_is_a_module_but_this_file_has_no_imports_or_exports_Consider_adding_an_empty_export_to_make_this_file_a_module: r$11(2853, 1, "await_using_statements_are_only_allowed_at_the_top_level_of_a_file_when_that_file_is_a_module_but_th_2853", "'await using' statements are only allowed at the top level of a file when that file is a module, but this file has no imports or exports. Consider adding an empty 'export {}' to make this file a module."),
	Top_level_await_using_statements_are_only_allowed_when_the_module_option_is_set_to_es2022_esnext_system_node16_node18_nodenext_or_preserve_and_the_target_option_is_set_to_es2017_or_higher: r$11(2854, 1, "Top_level_await_using_statements_are_only_allowed_when_the_module_option_is_set_to_es2022_esnext_sys_2854", "Top-level 'await using' statements are only allowed when the 'module' option is set to 'es2022', 'esnext', 'system', 'node16', 'node18', 'nodenext', or 'preserve', and the 'target' option is set to 'es2017' or higher."),
	Class_field_0_defined_by_the_parent_class_is_not_accessible_in_the_child_class_via_super: r$11(2855, 1, "Class_field_0_defined_by_the_parent_class_is_not_accessible_in_the_child_class_via_super_2855", "Class field '{0}' defined by the parent class is not accessible in the child class via super."),
	Import_attributes_are_not_allowed_on_statements_that_compile_to_CommonJS_require_calls: r$11(2856, 1, "Import_attributes_are_not_allowed_on_statements_that_compile_to_CommonJS_require_calls_2856", "Import attributes are not allowed on statements that compile to CommonJS 'require' calls."),
	Import_attributes_cannot_be_used_with_type_only_imports_or_exports: r$11(2857, 1, "Import_attributes_cannot_be_used_with_type_only_imports_or_exports_2857", "Import attributes cannot be used with type-only imports or exports."),
	Import_attribute_values_must_be_string_literal_expressions: r$11(2858, 1, "Import_attribute_values_must_be_string_literal_expressions_2858", "Import attribute values must be string literal expressions."),
	Excessive_complexity_comparing_types_0_and_1: r$11(2859, 1, "Excessive_complexity_comparing_types_0_and_1_2859", "Excessive complexity comparing types '{0}' and '{1}'."),
	The_left_hand_side_of_an_instanceof_expression_must_be_assignable_to_the_first_argument_of_the_right_hand_side_s_Symbol_hasInstance_method: r$11(2860, 1, "The_left_hand_side_of_an_instanceof_expression_must_be_assignable_to_the_first_argument_of_the_right_2860", "The left-hand side of an 'instanceof' expression must be assignable to the first argument of the right-hand side's '[Symbol.hasInstance]' method."),
	An_object_s_Symbol_hasInstance_method_must_return_a_boolean_value_for_it_to_be_used_on_the_right_hand_side_of_an_instanceof_expression: r$11(2861, 1, "An_object_s_Symbol_hasInstance_method_must_return_a_boolean_value_for_it_to_be_used_on_the_right_han_2861", "An object's '[Symbol.hasInstance]' method must return a boolean value for it to be used on the right-hand side of an 'instanceof' expression."),
	Type_0_is_generic_and_can_only_be_indexed_for_reading: r$11(2862, 1, "Type_0_is_generic_and_can_only_be_indexed_for_reading_2862", "Type '{0}' is generic and can only be indexed for reading."),
	A_class_cannot_extend_a_primitive_type_like_0_Classes_can_only_extend_constructable_values: r$11(2863, 1, "A_class_cannot_extend_a_primitive_type_like_0_Classes_can_only_extend_constructable_values_2863", "A class cannot extend a primitive type like '{0}'. Classes can only extend constructable values."),
	A_class_cannot_implement_a_primitive_type_like_0_It_can_only_implement_other_named_object_types: r$11(2864, 1, "A_class_cannot_implement_a_primitive_type_like_0_It_can_only_implement_other_named_object_types_2864", "A class cannot implement a primitive type like '{0}'. It can only implement other named object types."),
	Import_0_conflicts_with_local_value_so_must_be_declared_with_a_type_only_import_when_isolatedModules_is_enabled: r$11(2865, 1, "Import_0_conflicts_with_local_value_so_must_be_declared_with_a_type_only_import_when_isolatedModules_2865", "Import '{0}' conflicts with local value, so must be declared with a type-only import when 'isolatedModules' is enabled."),
	Import_0_conflicts_with_global_value_used_in_this_file_so_must_be_declared_with_a_type_only_import_when_isolatedModules_is_enabled: r$11(2866, 1, "Import_0_conflicts_with_global_value_used_in_this_file_so_must_be_declared_with_a_type_only_import_w_2866", "Import '{0}' conflicts with global value used in this file, so must be declared with a type-only import when 'isolatedModules' is enabled."),
	Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_Bun_Try_npm_i_save_dev_types_Slashbun: r$11(2867, 1, "Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_Bun_Try_npm_i_save_dev_types_Slashbun_2867", "Cannot find name '{0}'. Do you need to install type definitions for Bun? Try `npm i --save-dev @types/bun`."),
	Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_Bun_Try_npm_i_save_dev_types_Slashbun_and_then_add_bun_to_the_types_field_in_your_tsconfig: r$11(2868, 1, "Cannot_find_name_0_Do_you_need_to_install_type_definitions_for_Bun_Try_npm_i_save_dev_types_Slashbun_2868", "Cannot find name '{0}'. Do you need to install type definitions for Bun? Try `npm i --save-dev @types/bun` and then add 'bun' to the types field in your tsconfig."),
	Right_operand_of_is_unreachable_because_the_left_operand_is_never_nullish: r$11(2869, 1, "Right_operand_of_is_unreachable_because_the_left_operand_is_never_nullish_2869", "Right operand of ?? is unreachable because the left operand is never nullish."),
	This_binary_expression_is_never_nullish_Are_you_missing_parentheses: r$11(2870, 1, "This_binary_expression_is_never_nullish_Are_you_missing_parentheses_2870", "This binary expression is never nullish. Are you missing parentheses?"),
	This_expression_is_always_nullish: r$11(2871, 1, "This_expression_is_always_nullish_2871", "This expression is always nullish."),
	This_kind_of_expression_is_always_truthy: r$11(2872, 1, "This_kind_of_expression_is_always_truthy_2872", "This kind of expression is always truthy."),
	This_kind_of_expression_is_always_falsy: r$11(2873, 1, "This_kind_of_expression_is_always_falsy_2873", "This kind of expression is always falsy."),
	This_JSX_tag_requires_0_to_be_in_scope_but_it_could_not_be_found: r$11(2874, 1, "This_JSX_tag_requires_0_to_be_in_scope_but_it_could_not_be_found_2874", "This JSX tag requires '{0}' to be in scope, but it could not be found."),
	This_JSX_tag_requires_the_module_path_0_to_exist_but_none_could_be_found_Make_sure_you_have_types_for_the_appropriate_package_installed: r$11(2875, 1, "This_JSX_tag_requires_the_module_path_0_to_exist_but_none_could_be_found_Make_sure_you_have_types_fo_2875", "This JSX tag requires the module path '{0}' to exist, but none could be found. Make sure you have types for the appropriate package installed."),
	This_relative_import_path_is_unsafe_to_rewrite_because_it_looks_like_a_file_name_but_actually_resolves_to_0: r$11(2876, 1, "This_relative_import_path_is_unsafe_to_rewrite_because_it_looks_like_a_file_name_but_actually_resolv_2876", "This relative import path is unsafe to rewrite because it looks like a file name, but actually resolves to \"{0}\"."),
	This_import_uses_a_0_extension_to_resolve_to_an_input_TypeScript_file_but_will_not_be_rewritten_during_emit_because_it_is_not_a_relative_path: r$11(2877, 1, "This_import_uses_a_0_extension_to_resolve_to_an_input_TypeScript_file_but_will_not_be_rewritten_duri_2877", "This import uses a '{0}' extension to resolve to an input TypeScript file, but will not be rewritten during emit because it is not a relative path."),
	This_import_path_is_unsafe_to_rewrite_because_it_resolves_to_another_project_and_the_relative_path_between_the_projects_output_files_is_not_the_same_as_the_relative_path_between_its_input_files: r$11(2878, 1, "This_import_path_is_unsafe_to_rewrite_because_it_resolves_to_another_project_and_the_relative_path_b_2878", "This import path is unsafe to rewrite because it resolves to another project, and the relative path between the projects' output files is not the same as the relative path between its input files."),
	Using_JSX_fragments_requires_fragment_factory_0_to_be_in_scope_but_it_could_not_be_found: r$11(2879, 1, "Using_JSX_fragments_requires_fragment_factory_0_to_be_in_scope_but_it_could_not_be_found_2879", "Using JSX fragments requires fragment factory '{0}' to be in scope, but it could not be found."),
	Import_assertions_have_been_replaced_by_import_attributes_Use_with_instead_of_assert: r$11(2880, 1, "Import_assertions_have_been_replaced_by_import_attributes_Use_with_instead_of_assert_2880", "Import assertions have been replaced by import attributes. Use 'with' instead of 'assert'."),
	Import_declaration_0_is_using_private_name_1: r$11(4e3, 1, "Import_declaration_0_is_using_private_name_1_4000", "Import declaration '{0}' is using private name '{1}'."),
	Type_parameter_0_of_exported_class_has_or_is_using_private_name_1: r$11(4002, 1, "Type_parameter_0_of_exported_class_has_or_is_using_private_name_1_4002", "Type parameter '{0}' of exported class has or is using private name '{1}'."),
	Type_parameter_0_of_exported_interface_has_or_is_using_private_name_1: r$11(4004, 1, "Type_parameter_0_of_exported_interface_has_or_is_using_private_name_1_4004", "Type parameter '{0}' of exported interface has or is using private name '{1}'."),
	Type_parameter_0_of_constructor_signature_from_exported_interface_has_or_is_using_private_name_1: r$11(4006, 1, "Type_parameter_0_of_constructor_signature_from_exported_interface_has_or_is_using_private_name_1_4006", "Type parameter '{0}' of constructor signature from exported interface has or is using private name '{1}'."),
	Type_parameter_0_of_call_signature_from_exported_interface_has_or_is_using_private_name_1: r$11(4008, 1, "Type_parameter_0_of_call_signature_from_exported_interface_has_or_is_using_private_name_1_4008", "Type parameter '{0}' of call signature from exported interface has or is using private name '{1}'."),
	Type_parameter_0_of_public_static_method_from_exported_class_has_or_is_using_private_name_1: r$11(4010, 1, "Type_parameter_0_of_public_static_method_from_exported_class_has_or_is_using_private_name_1_4010", "Type parameter '{0}' of public static method from exported class has or is using private name '{1}'."),
	Type_parameter_0_of_public_method_from_exported_class_has_or_is_using_private_name_1: r$11(4012, 1, "Type_parameter_0_of_public_method_from_exported_class_has_or_is_using_private_name_1_4012", "Type parameter '{0}' of public method from exported class has or is using private name '{1}'."),
	Type_parameter_0_of_method_from_exported_interface_has_or_is_using_private_name_1: r$11(4014, 1, "Type_parameter_0_of_method_from_exported_interface_has_or_is_using_private_name_1_4014", "Type parameter '{0}' of method from exported interface has or is using private name '{1}'."),
	Type_parameter_0_of_exported_function_has_or_is_using_private_name_1: r$11(4016, 1, "Type_parameter_0_of_exported_function_has_or_is_using_private_name_1_4016", "Type parameter '{0}' of exported function has or is using private name '{1}'."),
	Implements_clause_of_exported_class_0_has_or_is_using_private_name_1: r$11(4019, 1, "Implements_clause_of_exported_class_0_has_or_is_using_private_name_1_4019", "Implements clause of exported class '{0}' has or is using private name '{1}'."),
	extends_clause_of_exported_class_0_has_or_is_using_private_name_1: r$11(4020, 1, "extends_clause_of_exported_class_0_has_or_is_using_private_name_1_4020", "'extends' clause of exported class '{0}' has or is using private name '{1}'."),
	extends_clause_of_exported_class_has_or_is_using_private_name_0: r$11(4021, 1, "extends_clause_of_exported_class_has_or_is_using_private_name_0_4021", "'extends' clause of exported class has or is using private name '{0}'."),
	extends_clause_of_exported_interface_0_has_or_is_using_private_name_1: r$11(4022, 1, "extends_clause_of_exported_interface_0_has_or_is_using_private_name_1_4022", "'extends' clause of exported interface '{0}' has or is using private name '{1}'."),
	Exported_variable_0_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: r$11(4023, 1, "Exported_variable_0_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named_4023", "Exported variable '{0}' has or is using name '{1}' from external module {2} but cannot be named."),
	Exported_variable_0_has_or_is_using_name_1_from_private_module_2: r$11(4024, 1, "Exported_variable_0_has_or_is_using_name_1_from_private_module_2_4024", "Exported variable '{0}' has or is using name '{1}' from private module '{2}'."),
	Exported_variable_0_has_or_is_using_private_name_1: r$11(4025, 1, "Exported_variable_0_has_or_is_using_private_name_1_4025", "Exported variable '{0}' has or is using private name '{1}'."),
	Public_static_property_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: r$11(4026, 1, "Public_static_property_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot__4026", "Public static property '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named."),
	Public_static_property_0_of_exported_class_has_or_is_using_name_1_from_private_module_2: r$11(4027, 1, "Public_static_property_0_of_exported_class_has_or_is_using_name_1_from_private_module_2_4027", "Public static property '{0}' of exported class has or is using name '{1}' from private module '{2}'."),
	Public_static_property_0_of_exported_class_has_or_is_using_private_name_1: r$11(4028, 1, "Public_static_property_0_of_exported_class_has_or_is_using_private_name_1_4028", "Public static property '{0}' of exported class has or is using private name '{1}'."),
	Public_property_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: r$11(4029, 1, "Public_property_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_name_4029", "Public property '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named."),
	Public_property_0_of_exported_class_has_or_is_using_name_1_from_private_module_2: r$11(4030, 1, "Public_property_0_of_exported_class_has_or_is_using_name_1_from_private_module_2_4030", "Public property '{0}' of exported class has or is using name '{1}' from private module '{2}'."),
	Public_property_0_of_exported_class_has_or_is_using_private_name_1: r$11(4031, 1, "Public_property_0_of_exported_class_has_or_is_using_private_name_1_4031", "Public property '{0}' of exported class has or is using private name '{1}'."),
	Property_0_of_exported_interface_has_or_is_using_name_1_from_private_module_2: r$11(4032, 1, "Property_0_of_exported_interface_has_or_is_using_name_1_from_private_module_2_4032", "Property '{0}' of exported interface has or is using name '{1}' from private module '{2}'."),
	Property_0_of_exported_interface_has_or_is_using_private_name_1: r$11(4033, 1, "Property_0_of_exported_interface_has_or_is_using_private_name_1_4033", "Property '{0}' of exported interface has or is using private name '{1}'."),
	Parameter_type_of_public_static_setter_0_from_exported_class_has_or_is_using_name_1_from_private_module_2: r$11(4034, 1, "Parameter_type_of_public_static_setter_0_from_exported_class_has_or_is_using_name_1_from_private_mod_4034", "Parameter type of public static setter '{0}' from exported class has or is using name '{1}' from private module '{2}'."),
	Parameter_type_of_public_static_setter_0_from_exported_class_has_or_is_using_private_name_1: r$11(4035, 1, "Parameter_type_of_public_static_setter_0_from_exported_class_has_or_is_using_private_name_1_4035", "Parameter type of public static setter '{0}' from exported class has or is using private name '{1}'."),
	Parameter_type_of_public_setter_0_from_exported_class_has_or_is_using_name_1_from_private_module_2: r$11(4036, 1, "Parameter_type_of_public_setter_0_from_exported_class_has_or_is_using_name_1_from_private_module_2_4036", "Parameter type of public setter '{0}' from exported class has or is using name '{1}' from private module '{2}'."),
	Parameter_type_of_public_setter_0_from_exported_class_has_or_is_using_private_name_1: r$11(4037, 1, "Parameter_type_of_public_setter_0_from_exported_class_has_or_is_using_private_name_1_4037", "Parameter type of public setter '{0}' from exported class has or is using private name '{1}'."),
	Return_type_of_public_static_getter_0_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: r$11(4038, 1, "Return_type_of_public_static_getter_0_from_exported_class_has_or_is_using_name_1_from_external_modul_4038", "Return type of public static getter '{0}' from exported class has or is using name '{1}' from external module {2} but cannot be named."),
	Return_type_of_public_static_getter_0_from_exported_class_has_or_is_using_name_1_from_private_module_2: r$11(4039, 1, "Return_type_of_public_static_getter_0_from_exported_class_has_or_is_using_name_1_from_private_module_4039", "Return type of public static getter '{0}' from exported class has or is using name '{1}' from private module '{2}'."),
	Return_type_of_public_static_getter_0_from_exported_class_has_or_is_using_private_name_1: r$11(4040, 1, "Return_type_of_public_static_getter_0_from_exported_class_has_or_is_using_private_name_1_4040", "Return type of public static getter '{0}' from exported class has or is using private name '{1}'."),
	Return_type_of_public_getter_0_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: r$11(4041, 1, "Return_type_of_public_getter_0_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_4041", "Return type of public getter '{0}' from exported class has or is using name '{1}' from external module {2} but cannot be named."),
	Return_type_of_public_getter_0_from_exported_class_has_or_is_using_name_1_from_private_module_2: r$11(4042, 1, "Return_type_of_public_getter_0_from_exported_class_has_or_is_using_name_1_from_private_module_2_4042", "Return type of public getter '{0}' from exported class has or is using name '{1}' from private module '{2}'."),
	Return_type_of_public_getter_0_from_exported_class_has_or_is_using_private_name_1: r$11(4043, 1, "Return_type_of_public_getter_0_from_exported_class_has_or_is_using_private_name_1_4043", "Return type of public getter '{0}' from exported class has or is using private name '{1}'."),
	Return_type_of_constructor_signature_from_exported_interface_has_or_is_using_name_0_from_private_module_1: r$11(4044, 1, "Return_type_of_constructor_signature_from_exported_interface_has_or_is_using_name_0_from_private_mod_4044", "Return type of constructor signature from exported interface has or is using name '{0}' from private module '{1}'."),
	Return_type_of_constructor_signature_from_exported_interface_has_or_is_using_private_name_0: r$11(4045, 1, "Return_type_of_constructor_signature_from_exported_interface_has_or_is_using_private_name_0_4045", "Return type of constructor signature from exported interface has or is using private name '{0}'."),
	Return_type_of_call_signature_from_exported_interface_has_or_is_using_name_0_from_private_module_1: r$11(4046, 1, "Return_type_of_call_signature_from_exported_interface_has_or_is_using_name_0_from_private_module_1_4046", "Return type of call signature from exported interface has or is using name '{0}' from private module '{1}'."),
	Return_type_of_call_signature_from_exported_interface_has_or_is_using_private_name_0: r$11(4047, 1, "Return_type_of_call_signature_from_exported_interface_has_or_is_using_private_name_0_4047", "Return type of call signature from exported interface has or is using private name '{0}'."),
	Return_type_of_index_signature_from_exported_interface_has_or_is_using_name_0_from_private_module_1: r$11(4048, 1, "Return_type_of_index_signature_from_exported_interface_has_or_is_using_name_0_from_private_module_1_4048", "Return type of index signature from exported interface has or is using name '{0}' from private module '{1}'."),
	Return_type_of_index_signature_from_exported_interface_has_or_is_using_private_name_0: r$11(4049, 1, "Return_type_of_index_signature_from_exported_interface_has_or_is_using_private_name_0_4049", "Return type of index signature from exported interface has or is using private name '{0}'."),
	Return_type_of_public_static_method_from_exported_class_has_or_is_using_name_0_from_external_module_1_but_cannot_be_named: r$11(4050, 1, "Return_type_of_public_static_method_from_exported_class_has_or_is_using_name_0_from_external_module__4050", "Return type of public static method from exported class has or is using name '{0}' from external module {1} but cannot be named."),
	Return_type_of_public_static_method_from_exported_class_has_or_is_using_name_0_from_private_module_1: r$11(4051, 1, "Return_type_of_public_static_method_from_exported_class_has_or_is_using_name_0_from_private_module_1_4051", "Return type of public static method from exported class has or is using name '{0}' from private module '{1}'."),
	Return_type_of_public_static_method_from_exported_class_has_or_is_using_private_name_0: r$11(4052, 1, "Return_type_of_public_static_method_from_exported_class_has_or_is_using_private_name_0_4052", "Return type of public static method from exported class has or is using private name '{0}'."),
	Return_type_of_public_method_from_exported_class_has_or_is_using_name_0_from_external_module_1_but_cannot_be_named: r$11(4053, 1, "Return_type_of_public_method_from_exported_class_has_or_is_using_name_0_from_external_module_1_but_c_4053", "Return type of public method from exported class has or is using name '{0}' from external module {1} but cannot be named."),
	Return_type_of_public_method_from_exported_class_has_or_is_using_name_0_from_private_module_1: r$11(4054, 1, "Return_type_of_public_method_from_exported_class_has_or_is_using_name_0_from_private_module_1_4054", "Return type of public method from exported class has or is using name '{0}' from private module '{1}'."),
	Return_type_of_public_method_from_exported_class_has_or_is_using_private_name_0: r$11(4055, 1, "Return_type_of_public_method_from_exported_class_has_or_is_using_private_name_0_4055", "Return type of public method from exported class has or is using private name '{0}'."),
	Return_type_of_method_from_exported_interface_has_or_is_using_name_0_from_private_module_1: r$11(4056, 1, "Return_type_of_method_from_exported_interface_has_or_is_using_name_0_from_private_module_1_4056", "Return type of method from exported interface has or is using name '{0}' from private module '{1}'."),
	Return_type_of_method_from_exported_interface_has_or_is_using_private_name_0: r$11(4057, 1, "Return_type_of_method_from_exported_interface_has_or_is_using_private_name_0_4057", "Return type of method from exported interface has or is using private name '{0}'."),
	Return_type_of_exported_function_has_or_is_using_name_0_from_external_module_1_but_cannot_be_named: r$11(4058, 1, "Return_type_of_exported_function_has_or_is_using_name_0_from_external_module_1_but_cannot_be_named_4058", "Return type of exported function has or is using name '{0}' from external module {1} but cannot be named."),
	Return_type_of_exported_function_has_or_is_using_name_0_from_private_module_1: r$11(4059, 1, "Return_type_of_exported_function_has_or_is_using_name_0_from_private_module_1_4059", "Return type of exported function has or is using name '{0}' from private module '{1}'."),
	Return_type_of_exported_function_has_or_is_using_private_name_0: r$11(4060, 1, "Return_type_of_exported_function_has_or_is_using_private_name_0_4060", "Return type of exported function has or is using private name '{0}'."),
	Parameter_0_of_constructor_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: r$11(4061, 1, "Parameter_0_of_constructor_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_can_4061", "Parameter '{0}' of constructor from exported class has or is using name '{1}' from external module {2} but cannot be named."),
	Parameter_0_of_constructor_from_exported_class_has_or_is_using_name_1_from_private_module_2: r$11(4062, 1, "Parameter_0_of_constructor_from_exported_class_has_or_is_using_name_1_from_private_module_2_4062", "Parameter '{0}' of constructor from exported class has or is using name '{1}' from private module '{2}'."),
	Parameter_0_of_constructor_from_exported_class_has_or_is_using_private_name_1: r$11(4063, 1, "Parameter_0_of_constructor_from_exported_class_has_or_is_using_private_name_1_4063", "Parameter '{0}' of constructor from exported class has or is using private name '{1}'."),
	Parameter_0_of_constructor_signature_from_exported_interface_has_or_is_using_name_1_from_private_module_2: r$11(4064, 1, "Parameter_0_of_constructor_signature_from_exported_interface_has_or_is_using_name_1_from_private_mod_4064", "Parameter '{0}' of constructor signature from exported interface has or is using name '{1}' from private module '{2}'."),
	Parameter_0_of_constructor_signature_from_exported_interface_has_or_is_using_private_name_1: r$11(4065, 1, "Parameter_0_of_constructor_signature_from_exported_interface_has_or_is_using_private_name_1_4065", "Parameter '{0}' of constructor signature from exported interface has or is using private name '{1}'."),
	Parameter_0_of_call_signature_from_exported_interface_has_or_is_using_name_1_from_private_module_2: r$11(4066, 1, "Parameter_0_of_call_signature_from_exported_interface_has_or_is_using_name_1_from_private_module_2_4066", "Parameter '{0}' of call signature from exported interface has or is using name '{1}' from private module '{2}'."),
	Parameter_0_of_call_signature_from_exported_interface_has_or_is_using_private_name_1: r$11(4067, 1, "Parameter_0_of_call_signature_from_exported_interface_has_or_is_using_private_name_1_4067", "Parameter '{0}' of call signature from exported interface has or is using private name '{1}'."),
	Parameter_0_of_public_static_method_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: r$11(4068, 1, "Parameter_0_of_public_static_method_from_exported_class_has_or_is_using_name_1_from_external_module__4068", "Parameter '{0}' of public static method from exported class has or is using name '{1}' from external module {2} but cannot be named."),
	Parameter_0_of_public_static_method_from_exported_class_has_or_is_using_name_1_from_private_module_2: r$11(4069, 1, "Parameter_0_of_public_static_method_from_exported_class_has_or_is_using_name_1_from_private_module_2_4069", "Parameter '{0}' of public static method from exported class has or is using name '{1}' from private module '{2}'."),
	Parameter_0_of_public_static_method_from_exported_class_has_or_is_using_private_name_1: r$11(4070, 1, "Parameter_0_of_public_static_method_from_exported_class_has_or_is_using_private_name_1_4070", "Parameter '{0}' of public static method from exported class has or is using private name '{1}'."),
	Parameter_0_of_public_method_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: r$11(4071, 1, "Parameter_0_of_public_method_from_exported_class_has_or_is_using_name_1_from_external_module_2_but_c_4071", "Parameter '{0}' of public method from exported class has or is using name '{1}' from external module {2} but cannot be named."),
	Parameter_0_of_public_method_from_exported_class_has_or_is_using_name_1_from_private_module_2: r$11(4072, 1, "Parameter_0_of_public_method_from_exported_class_has_or_is_using_name_1_from_private_module_2_4072", "Parameter '{0}' of public method from exported class has or is using name '{1}' from private module '{2}'."),
	Parameter_0_of_public_method_from_exported_class_has_or_is_using_private_name_1: r$11(4073, 1, "Parameter_0_of_public_method_from_exported_class_has_or_is_using_private_name_1_4073", "Parameter '{0}' of public method from exported class has or is using private name '{1}'."),
	Parameter_0_of_method_from_exported_interface_has_or_is_using_name_1_from_private_module_2: r$11(4074, 1, "Parameter_0_of_method_from_exported_interface_has_or_is_using_name_1_from_private_module_2_4074", "Parameter '{0}' of method from exported interface has or is using name '{1}' from private module '{2}'."),
	Parameter_0_of_method_from_exported_interface_has_or_is_using_private_name_1: r$11(4075, 1, "Parameter_0_of_method_from_exported_interface_has_or_is_using_private_name_1_4075", "Parameter '{0}' of method from exported interface has or is using private name '{1}'."),
	Parameter_0_of_exported_function_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: r$11(4076, 1, "Parameter_0_of_exported_function_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named_4076", "Parameter '{0}' of exported function has or is using name '{1}' from external module {2} but cannot be named."),
	Parameter_0_of_exported_function_has_or_is_using_name_1_from_private_module_2: r$11(4077, 1, "Parameter_0_of_exported_function_has_or_is_using_name_1_from_private_module_2_4077", "Parameter '{0}' of exported function has or is using name '{1}' from private module '{2}'."),
	Parameter_0_of_exported_function_has_or_is_using_private_name_1: r$11(4078, 1, "Parameter_0_of_exported_function_has_or_is_using_private_name_1_4078", "Parameter '{0}' of exported function has or is using private name '{1}'."),
	Exported_type_alias_0_has_or_is_using_private_name_1: r$11(4081, 1, "Exported_type_alias_0_has_or_is_using_private_name_1_4081", "Exported type alias '{0}' has or is using private name '{1}'."),
	Default_export_of_the_module_has_or_is_using_private_name_0: r$11(4082, 1, "Default_export_of_the_module_has_or_is_using_private_name_0_4082", "Default export of the module has or is using private name '{0}'."),
	Type_parameter_0_of_exported_type_alias_has_or_is_using_private_name_1: r$11(4083, 1, "Type_parameter_0_of_exported_type_alias_has_or_is_using_private_name_1_4083", "Type parameter '{0}' of exported type alias has or is using private name '{1}'."),
	Exported_type_alias_0_has_or_is_using_private_name_1_from_module_2: r$11(4084, 1, "Exported_type_alias_0_has_or_is_using_private_name_1_from_module_2_4084", "Exported type alias '{0}' has or is using private name '{1}' from module {2}."),
	Extends_clause_for_inferred_type_0_has_or_is_using_private_name_1: r$11(4085, 1, "Extends_clause_for_inferred_type_0_has_or_is_using_private_name_1_4085", "Extends clause for inferred type '{0}' has or is using private name '{1}'."),
	Parameter_0_of_index_signature_from_exported_interface_has_or_is_using_name_1_from_private_module_2: r$11(4091, 1, "Parameter_0_of_index_signature_from_exported_interface_has_or_is_using_name_1_from_private_module_2_4091", "Parameter '{0}' of index signature from exported interface has or is using name '{1}' from private module '{2}'."),
	Parameter_0_of_index_signature_from_exported_interface_has_or_is_using_private_name_1: r$11(4092, 1, "Parameter_0_of_index_signature_from_exported_interface_has_or_is_using_private_name_1_4092", "Parameter '{0}' of index signature from exported interface has or is using private name '{1}'."),
	Property_0_of_exported_anonymous_class_type_may_not_be_private_or_protected: r$11(4094, 1, "Property_0_of_exported_anonymous_class_type_may_not_be_private_or_protected_4094", "Property '{0}' of exported anonymous class type may not be private or protected."),
	Public_static_method_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: r$11(4095, 1, "Public_static_method_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_4095", "Public static method '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named."),
	Public_static_method_0_of_exported_class_has_or_is_using_name_1_from_private_module_2: r$11(4096, 1, "Public_static_method_0_of_exported_class_has_or_is_using_name_1_from_private_module_2_4096", "Public static method '{0}' of exported class has or is using name '{1}' from private module '{2}'."),
	Public_static_method_0_of_exported_class_has_or_is_using_private_name_1: r$11(4097, 1, "Public_static_method_0_of_exported_class_has_or_is_using_private_name_1_4097", "Public static method '{0}' of exported class has or is using private name '{1}'."),
	Public_method_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: r$11(4098, 1, "Public_method_0_of_exported_class_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named_4098", "Public method '{0}' of exported class has or is using name '{1}' from external module {2} but cannot be named."),
	Public_method_0_of_exported_class_has_or_is_using_name_1_from_private_module_2: r$11(4099, 1, "Public_method_0_of_exported_class_has_or_is_using_name_1_from_private_module_2_4099", "Public method '{0}' of exported class has or is using name '{1}' from private module '{2}'."),
	Public_method_0_of_exported_class_has_or_is_using_private_name_1: r$11(4100, 1, "Public_method_0_of_exported_class_has_or_is_using_private_name_1_4100", "Public method '{0}' of exported class has or is using private name '{1}'."),
	Method_0_of_exported_interface_has_or_is_using_name_1_from_private_module_2: r$11(4101, 1, "Method_0_of_exported_interface_has_or_is_using_name_1_from_private_module_2_4101", "Method '{0}' of exported interface has or is using name '{1}' from private module '{2}'."),
	Method_0_of_exported_interface_has_or_is_using_private_name_1: r$11(4102, 1, "Method_0_of_exported_interface_has_or_is_using_private_name_1_4102", "Method '{0}' of exported interface has or is using private name '{1}'."),
	Type_parameter_0_of_exported_mapped_object_type_is_using_private_name_1: r$11(4103, 1, "Type_parameter_0_of_exported_mapped_object_type_is_using_private_name_1_4103", "Type parameter '{0}' of exported mapped object type is using private name '{1}'."),
	The_type_0_is_readonly_and_cannot_be_assigned_to_the_mutable_type_1: r$11(4104, 1, "The_type_0_is_readonly_and_cannot_be_assigned_to_the_mutable_type_1_4104", "The type '{0}' is 'readonly' and cannot be assigned to the mutable type '{1}'."),
	Private_or_protected_member_0_cannot_be_accessed_on_a_type_parameter: r$11(4105, 1, "Private_or_protected_member_0_cannot_be_accessed_on_a_type_parameter_4105", "Private or protected member '{0}' cannot be accessed on a type parameter."),
	Parameter_0_of_accessor_has_or_is_using_private_name_1: r$11(4106, 1, "Parameter_0_of_accessor_has_or_is_using_private_name_1_4106", "Parameter '{0}' of accessor has or is using private name '{1}'."),
	Parameter_0_of_accessor_has_or_is_using_name_1_from_private_module_2: r$11(4107, 1, "Parameter_0_of_accessor_has_or_is_using_name_1_from_private_module_2_4107", "Parameter '{0}' of accessor has or is using name '{1}' from private module '{2}'."),
	Parameter_0_of_accessor_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named: r$11(4108, 1, "Parameter_0_of_accessor_has_or_is_using_name_1_from_external_module_2_but_cannot_be_named_4108", "Parameter '{0}' of accessor has or is using name '{1}' from external module '{2}' but cannot be named."),
	Type_arguments_for_0_circularly_reference_themselves: r$11(4109, 1, "Type_arguments_for_0_circularly_reference_themselves_4109", "Type arguments for '{0}' circularly reference themselves."),
	Tuple_type_arguments_circularly_reference_themselves: r$11(4110, 1, "Tuple_type_arguments_circularly_reference_themselves_4110", "Tuple type arguments circularly reference themselves."),
	Property_0_comes_from_an_index_signature_so_it_must_be_accessed_with_0: r$11(4111, 1, "Property_0_comes_from_an_index_signature_so_it_must_be_accessed_with_0_4111", "Property '{0}' comes from an index signature, so it must be accessed with ['{0}']."),
	This_member_cannot_have_an_override_modifier_because_its_containing_class_0_does_not_extend_another_class: r$11(4112, 1, "This_member_cannot_have_an_override_modifier_because_its_containing_class_0_does_not_extend_another__4112", "This member cannot have an 'override' modifier because its containing class '{0}' does not extend another class."),
	This_member_cannot_have_an_override_modifier_because_it_is_not_declared_in_the_base_class_0: r$11(4113, 1, "This_member_cannot_have_an_override_modifier_because_it_is_not_declared_in_the_base_class_0_4113", "This member cannot have an 'override' modifier because it is not declared in the base class '{0}'."),
	This_member_must_have_an_override_modifier_because_it_overrides_a_member_in_the_base_class_0: r$11(4114, 1, "This_member_must_have_an_override_modifier_because_it_overrides_a_member_in_the_base_class_0_4114", "This member must have an 'override' modifier because it overrides a member in the base class '{0}'."),
	This_parameter_property_must_have_an_override_modifier_because_it_overrides_a_member_in_base_class_0: r$11(4115, 1, "This_parameter_property_must_have_an_override_modifier_because_it_overrides_a_member_in_base_class_0_4115", "This parameter property must have an 'override' modifier because it overrides a member in base class '{0}'."),
	This_member_must_have_an_override_modifier_because_it_overrides_an_abstract_method_that_is_declared_in_the_base_class_0: r$11(4116, 1, "This_member_must_have_an_override_modifier_because_it_overrides_an_abstract_method_that_is_declared__4116", "This member must have an 'override' modifier because it overrides an abstract method that is declared in the base class '{0}'."),
	This_member_cannot_have_an_override_modifier_because_it_is_not_declared_in_the_base_class_0_Did_you_mean_1: r$11(4117, 1, "This_member_cannot_have_an_override_modifier_because_it_is_not_declared_in_the_base_class_0_Did_you__4117", "This member cannot have an 'override' modifier because it is not declared in the base class '{0}'. Did you mean '{1}'?"),
	The_type_of_this_node_cannot_be_serialized_because_its_property_0_cannot_be_serialized: r$11(4118, 1, "The_type_of_this_node_cannot_be_serialized_because_its_property_0_cannot_be_serialized_4118", "The type of this node cannot be serialized because its property '{0}' cannot be serialized."),
	This_member_must_have_a_JSDoc_comment_with_an_override_tag_because_it_overrides_a_member_in_the_base_class_0: r$11(4119, 1, "This_member_must_have_a_JSDoc_comment_with_an_override_tag_because_it_overrides_a_member_in_the_base_4119", "This member must have a JSDoc comment with an '@override' tag because it overrides a member in the base class '{0}'."),
	This_parameter_property_must_have_a_JSDoc_comment_with_an_override_tag_because_it_overrides_a_member_in_the_base_class_0: r$11(4120, 1, "This_parameter_property_must_have_a_JSDoc_comment_with_an_override_tag_because_it_overrides_a_member_4120", "This parameter property must have a JSDoc comment with an '@override' tag because it overrides a member in the base class '{0}'."),
	This_member_cannot_have_a_JSDoc_comment_with_an_override_tag_because_its_containing_class_0_does_not_extend_another_class: r$11(4121, 1, "This_member_cannot_have_a_JSDoc_comment_with_an_override_tag_because_its_containing_class_0_does_not_4121", "This member cannot have a JSDoc comment with an '@override' tag because its containing class '{0}' does not extend another class."),
	This_member_cannot_have_a_JSDoc_comment_with_an_override_tag_because_it_is_not_declared_in_the_base_class_0: r$11(4122, 1, "This_member_cannot_have_a_JSDoc_comment_with_an_override_tag_because_it_is_not_declared_in_the_base__4122", "This member cannot have a JSDoc comment with an '@override' tag because it is not declared in the base class '{0}'."),
	This_member_cannot_have_a_JSDoc_comment_with_an_override_tag_because_it_is_not_declared_in_the_base_class_0_Did_you_mean_1: r$11(4123, 1, "This_member_cannot_have_a_JSDoc_comment_with_an_override_tag_because_it_is_not_declared_in_the_base__4123", "This member cannot have a JSDoc comment with an 'override' tag because it is not declared in the base class '{0}'. Did you mean '{1}'?"),
	Compiler_option_0_of_value_1_is_unstable_Use_nightly_TypeScript_to_silence_this_error_Try_updating_with_npm_install_D_typescript_next: r$11(4124, 1, "Compiler_option_0_of_value_1_is_unstable_Use_nightly_TypeScript_to_silence_this_error_Try_updating_w_4124", "Compiler option '{0}' of value '{1}' is unstable. Use nightly TypeScript to silence this error. Try updating with 'npm install -D typescript@next'."),
	Each_declaration_of_0_1_differs_in_its_value_where_2_was_expected_but_3_was_given: r$11(4125, 1, "Each_declaration_of_0_1_differs_in_its_value_where_2_was_expected_but_3_was_given_4125", "Each declaration of '{0}.{1}' differs in its value, where '{2}' was expected but '{3}' was given."),
	One_value_of_0_1_is_the_string_2_and_the_other_is_assumed_to_be_an_unknown_numeric_value: r$11(4126, 1, "One_value_of_0_1_is_the_string_2_and_the_other_is_assumed_to_be_an_unknown_numeric_value_4126", "One value of '{0}.{1}' is the string '{2}', and the other is assumed to be an unknown numeric value."),
	This_member_cannot_have_an_override_modifier_because_its_name_is_dynamic: r$11(4127, 1, "This_member_cannot_have_an_override_modifier_because_its_name_is_dynamic_4127", "This member cannot have an 'override' modifier because its name is dynamic."),
	This_member_cannot_have_a_JSDoc_comment_with_an_override_tag_because_its_name_is_dynamic: r$11(4128, 1, "This_member_cannot_have_a_JSDoc_comment_with_an_override_tag_because_its_name_is_dynamic_4128", "This member cannot have a JSDoc comment with an '@override' tag because its name is dynamic."),
	The_current_host_does_not_support_the_0_option: r$11(5001, 1, "The_current_host_does_not_support_the_0_option_5001", "The current host does not support the '{0}' option."),
	Cannot_find_the_common_subdirectory_path_for_the_input_files: r$11(5009, 1, "Cannot_find_the_common_subdirectory_path_for_the_input_files_5009", "Cannot find the common subdirectory path for the input files."),
	File_specification_cannot_end_in_a_recursive_directory_wildcard_Asterisk_Asterisk_Colon_0: r$11(5010, 1, "File_specification_cannot_end_in_a_recursive_directory_wildcard_Asterisk_Asterisk_Colon_0_5010", "File specification cannot end in a recursive directory wildcard ('**'): '{0}'."),
	Cannot_read_file_0_Colon_1: r$11(5012, 1, "Cannot_read_file_0_Colon_1_5012", "Cannot read file '{0}': {1}."),
	Unknown_compiler_option_0: r$11(5023, 1, "Unknown_compiler_option_0_5023", "Unknown compiler option '{0}'."),
	Compiler_option_0_requires_a_value_of_type_1: r$11(5024, 1, "Compiler_option_0_requires_a_value_of_type_1_5024", "Compiler option '{0}' requires a value of type {1}."),
	Unknown_compiler_option_0_Did_you_mean_1: r$11(5025, 1, "Unknown_compiler_option_0_Did_you_mean_1_5025", "Unknown compiler option '{0}'. Did you mean '{1}'?"),
	Could_not_write_file_0_Colon_1: r$11(5033, 1, "Could_not_write_file_0_Colon_1_5033", "Could not write file '{0}': {1}."),
	Option_project_cannot_be_mixed_with_source_files_on_a_command_line: r$11(5042, 1, "Option_project_cannot_be_mixed_with_source_files_on_a_command_line_5042", "Option 'project' cannot be mixed with source files on a command line."),
	Option_isolatedModules_can_only_be_used_when_either_option_module_is_provided_or_option_target_is_ES2015_or_higher: r$11(5047, 1, "Option_isolatedModules_can_only_be_used_when_either_option_module_is_provided_or_option_target_is_ES_5047", "Option 'isolatedModules' can only be used when either option '--module' is provided or option 'target' is 'ES2015' or higher."),
	Option_0_can_only_be_used_when_either_option_inlineSourceMap_or_option_sourceMap_is_provided: r$11(5051, 1, "Option_0_can_only_be_used_when_either_option_inlineSourceMap_or_option_sourceMap_is_provided_5051", "Option '{0} can only be used when either option '--inlineSourceMap' or option '--sourceMap' is provided."),
	Option_0_cannot_be_specified_without_specifying_option_1: r$11(5052, 1, "Option_0_cannot_be_specified_without_specifying_option_1_5052", "Option '{0}' cannot be specified without specifying option '{1}'."),
	Option_0_cannot_be_specified_with_option_1: r$11(5053, 1, "Option_0_cannot_be_specified_with_option_1_5053", "Option '{0}' cannot be specified with option '{1}'."),
	A_tsconfig_json_file_is_already_defined_at_Colon_0: r$11(5054, 1, "A_tsconfig_json_file_is_already_defined_at_Colon_0_5054", "A 'tsconfig.json' file is already defined at: '{0}'."),
	Cannot_write_file_0_because_it_would_overwrite_input_file: r$11(5055, 1, "Cannot_write_file_0_because_it_would_overwrite_input_file_5055", "Cannot write file '{0}' because it would overwrite input file."),
	Cannot_write_file_0_because_it_would_be_overwritten_by_multiple_input_files: r$11(5056, 1, "Cannot_write_file_0_because_it_would_be_overwritten_by_multiple_input_files_5056", "Cannot write file '{0}' because it would be overwritten by multiple input files."),
	Cannot_find_a_tsconfig_json_file_at_the_specified_directory_Colon_0: r$11(5057, 1, "Cannot_find_a_tsconfig_json_file_at_the_specified_directory_Colon_0_5057", "Cannot find a tsconfig.json file at the specified directory: '{0}'."),
	The_specified_path_does_not_exist_Colon_0: r$11(5058, 1, "The_specified_path_does_not_exist_Colon_0_5058", "The specified path does not exist: '{0}'."),
	Invalid_value_for_reactNamespace_0_is_not_a_valid_identifier: r$11(5059, 1, "Invalid_value_for_reactNamespace_0_is_not_a_valid_identifier_5059", "Invalid value for '--reactNamespace'. '{0}' is not a valid identifier."),
	Pattern_0_can_have_at_most_one_Asterisk_character: r$11(5061, 1, "Pattern_0_can_have_at_most_one_Asterisk_character_5061", "Pattern '{0}' can have at most one '*' character."),
	Substitution_0_in_pattern_1_can_have_at_most_one_Asterisk_character: r$11(5062, 1, "Substitution_0_in_pattern_1_can_have_at_most_one_Asterisk_character_5062", "Substitution '{0}' in pattern '{1}' can have at most one '*' character."),
	Substitutions_for_pattern_0_should_be_an_array: r$11(5063, 1, "Substitutions_for_pattern_0_should_be_an_array_5063", "Substitutions for pattern '{0}' should be an array."),
	Substitution_0_for_pattern_1_has_incorrect_type_expected_string_got_2: r$11(5064, 1, "Substitution_0_for_pattern_1_has_incorrect_type_expected_string_got_2_5064", "Substitution '{0}' for pattern '{1}' has incorrect type, expected 'string', got '{2}'."),
	File_specification_cannot_contain_a_parent_directory_that_appears_after_a_recursive_directory_wildcard_Asterisk_Asterisk_Colon_0: r$11(5065, 1, "File_specification_cannot_contain_a_parent_directory_that_appears_after_a_recursive_directory_wildca_5065", "File specification cannot contain a parent directory ('..') that appears after a recursive directory wildcard ('**'): '{0}'."),
	Substitutions_for_pattern_0_shouldn_t_be_an_empty_array: r$11(5066, 1, "Substitutions_for_pattern_0_shouldn_t_be_an_empty_array_5066", "Substitutions for pattern '{0}' shouldn't be an empty array."),
	Invalid_value_for_jsxFactory_0_is_not_a_valid_identifier_or_qualified_name: r$11(5067, 1, "Invalid_value_for_jsxFactory_0_is_not_a_valid_identifier_or_qualified_name_5067", "Invalid value for 'jsxFactory'. '{0}' is not a valid identifier or qualified-name."),
	Adding_a_tsconfig_json_file_will_help_organize_projects_that_contain_both_TypeScript_and_JavaScript_files_Learn_more_at_https_Colon_Slash_Slashaka_ms_Slashtsconfig: r$11(5068, 1, "Adding_a_tsconfig_json_file_will_help_organize_projects_that_contain_both_TypeScript_and_JavaScript__5068", "Adding a tsconfig.json file will help organize projects that contain both TypeScript and JavaScript files. Learn more at https://aka.ms/tsconfig."),
	Option_0_cannot_be_specified_without_specifying_option_1_or_option_2: r$11(5069, 1, "Option_0_cannot_be_specified_without_specifying_option_1_or_option_2_5069", "Option '{0}' cannot be specified without specifying option '{1}' or option '{2}'."),
	Option_resolveJsonModule_cannot_be_specified_when_moduleResolution_is_set_to_classic: r$11(5070, 1, "Option_resolveJsonModule_cannot_be_specified_when_moduleResolution_is_set_to_classic_5070", "Option '--resolveJsonModule' cannot be specified when 'moduleResolution' is set to 'classic'."),
	Option_resolveJsonModule_cannot_be_specified_when_module_is_set_to_none_system_or_umd: r$11(5071, 1, "Option_resolveJsonModule_cannot_be_specified_when_module_is_set_to_none_system_or_umd_5071", "Option '--resolveJsonModule' cannot be specified when 'module' is set to 'none', 'system', or 'umd'."),
	Unknown_build_option_0: r$11(5072, 1, "Unknown_build_option_0_5072", "Unknown build option '{0}'."),
	Build_option_0_requires_a_value_of_type_1: r$11(5073, 1, "Build_option_0_requires_a_value_of_type_1_5073", "Build option '{0}' requires a value of type {1}."),
	Option_incremental_can_only_be_specified_using_tsconfig_emitting_to_single_file_or_when_option_tsBuildInfoFile_is_specified: r$11(5074, 1, "Option_incremental_can_only_be_specified_using_tsconfig_emitting_to_single_file_or_when_option_tsBui_5074", "Option '--incremental' can only be specified using tsconfig, emitting to single file or when option '--tsBuildInfoFile' is specified."),
	_0_is_assignable_to_the_constraint_of_type_1_but_1_could_be_instantiated_with_a_different_subtype_of_constraint_2: r$11(5075, 1, "_0_is_assignable_to_the_constraint_of_type_1_but_1_could_be_instantiated_with_a_different_subtype_of_5075", "'{0}' is assignable to the constraint of type '{1}', but '{1}' could be instantiated with a different subtype of constraint '{2}'."),
	_0_and_1_operations_cannot_be_mixed_without_parentheses: r$11(5076, 1, "_0_and_1_operations_cannot_be_mixed_without_parentheses_5076", "'{0}' and '{1}' operations cannot be mixed without parentheses."),
	Unknown_build_option_0_Did_you_mean_1: r$11(5077, 1, "Unknown_build_option_0_Did_you_mean_1_5077", "Unknown build option '{0}'. Did you mean '{1}'?"),
	Unknown_watch_option_0: r$11(5078, 1, "Unknown_watch_option_0_5078", "Unknown watch option '{0}'."),
	Unknown_watch_option_0_Did_you_mean_1: r$11(5079, 1, "Unknown_watch_option_0_Did_you_mean_1_5079", "Unknown watch option '{0}'. Did you mean '{1}'?"),
	Watch_option_0_requires_a_value_of_type_1: r$11(5080, 1, "Watch_option_0_requires_a_value_of_type_1_5080", "Watch option '{0}' requires a value of type {1}."),
	Cannot_find_a_tsconfig_json_file_at_the_current_directory_Colon_0: r$11(5081, 1, "Cannot_find_a_tsconfig_json_file_at_the_current_directory_Colon_0_5081", "Cannot find a tsconfig.json file at the current directory: {0}."),
	_0_could_be_instantiated_with_an_arbitrary_type_which_could_be_unrelated_to_1: r$11(5082, 1, "_0_could_be_instantiated_with_an_arbitrary_type_which_could_be_unrelated_to_1_5082", "'{0}' could be instantiated with an arbitrary type which could be unrelated to '{1}'."),
	Cannot_read_file_0: r$11(5083, 1, "Cannot_read_file_0_5083", "Cannot read file '{0}'."),
	A_tuple_member_cannot_be_both_optional_and_rest: r$11(5085, 1, "A_tuple_member_cannot_be_both_optional_and_rest_5085", "A tuple member cannot be both optional and rest."),
	A_labeled_tuple_element_is_declared_as_optional_with_a_question_mark_after_the_name_and_before_the_colon_rather_than_after_the_type: r$11(5086, 1, "A_labeled_tuple_element_is_declared_as_optional_with_a_question_mark_after_the_name_and_before_the_c_5086", "A labeled tuple element is declared as optional with a question mark after the name and before the colon, rather than after the type."),
	A_labeled_tuple_element_is_declared_as_rest_with_a_before_the_name_rather_than_before_the_type: r$11(5087, 1, "A_labeled_tuple_element_is_declared_as_rest_with_a_before_the_name_rather_than_before_the_type_5087", "A labeled tuple element is declared as rest with a '...' before the name, rather than before the type."),
	The_inferred_type_of_0_references_a_type_with_a_cyclic_structure_which_cannot_be_trivially_serialized_A_type_annotation_is_necessary: r$11(5088, 1, "The_inferred_type_of_0_references_a_type_with_a_cyclic_structure_which_cannot_be_trivially_serialize_5088", "The inferred type of '{0}' references a type with a cyclic structure which cannot be trivially serialized. A type annotation is necessary."),
	Option_0_cannot_be_specified_when_option_jsx_is_1: r$11(5089, 1, "Option_0_cannot_be_specified_when_option_jsx_is_1_5089", "Option '{0}' cannot be specified when option 'jsx' is '{1}'."),
	Non_relative_paths_are_not_allowed_when_baseUrl_is_not_set_Did_you_forget_a_leading_Slash: r$11(5090, 1, "Non_relative_paths_are_not_allowed_when_baseUrl_is_not_set_Did_you_forget_a_leading_Slash_5090", "Non-relative paths are not allowed when 'baseUrl' is not set. Did you forget a leading './'?"),
	Option_preserveConstEnums_cannot_be_disabled_when_0_is_enabled: r$11(5091, 1, "Option_preserveConstEnums_cannot_be_disabled_when_0_is_enabled_5091", "Option 'preserveConstEnums' cannot be disabled when '{0}' is enabled."),
	The_root_value_of_a_0_file_must_be_an_object: r$11(5092, 1, "The_root_value_of_a_0_file_must_be_an_object_5092", "The root value of a '{0}' file must be an object."),
	Compiler_option_0_may_only_be_used_with_build: r$11(5093, 1, "Compiler_option_0_may_only_be_used_with_build_5093", "Compiler option '--{0}' may only be used with '--build'."),
	Compiler_option_0_may_not_be_used_with_build: r$11(5094, 1, "Compiler_option_0_may_not_be_used_with_build_5094", "Compiler option '--{0}' may not be used with '--build'."),
	Option_0_can_only_be_used_when_module_is_set_to_preserve_or_to_es2015_or_later: r$11(5095, 1, "Option_0_can_only_be_used_when_module_is_set_to_preserve_or_to_es2015_or_later_5095", "Option '{0}' can only be used when 'module' is set to 'preserve' or to 'es2015' or later."),
	Option_allowImportingTsExtensions_can_only_be_used_when_either_noEmit_or_emitDeclarationOnly_is_set: r$11(5096, 1, "Option_allowImportingTsExtensions_can_only_be_used_when_either_noEmit_or_emitDeclarationOnly_is_set_5096", "Option 'allowImportingTsExtensions' can only be used when either 'noEmit' or 'emitDeclarationOnly' is set."),
	An_import_path_can_only_end_with_a_0_extension_when_allowImportingTsExtensions_is_enabled: r$11(5097, 1, "An_import_path_can_only_end_with_a_0_extension_when_allowImportingTsExtensions_is_enabled_5097", "An import path can only end with a '{0}' extension when 'allowImportingTsExtensions' is enabled."),
	Option_0_can_only_be_used_when_moduleResolution_is_set_to_node16_nodenext_or_bundler: r$11(5098, 1, "Option_0_can_only_be_used_when_moduleResolution_is_set_to_node16_nodenext_or_bundler_5098", "Option '{0}' can only be used when 'moduleResolution' is set to 'node16', 'nodenext', or 'bundler'."),
	Option_0_is_deprecated_and_will_stop_functioning_in_TypeScript_1_Specify_compilerOption_ignoreDeprecations_Colon_2_to_silence_this_error: r$11(5101, 1, "Option_0_is_deprecated_and_will_stop_functioning_in_TypeScript_1_Specify_compilerOption_ignoreDeprec_5101", `Option '{0}' is deprecated and will stop functioning in TypeScript {1}. Specify compilerOption '"ignoreDeprecations": "{2}"' to silence this error.`),
	Option_0_has_been_removed_Please_remove_it_from_your_configuration: r$11(5102, 1, "Option_0_has_been_removed_Please_remove_it_from_your_configuration_5102", "Option '{0}' has been removed. Please remove it from your configuration."),
	Invalid_value_for_ignoreDeprecations: r$11(5103, 1, "Invalid_value_for_ignoreDeprecations_5103", "Invalid value for '--ignoreDeprecations'."),
	Option_0_is_redundant_and_cannot_be_specified_with_option_1: r$11(5104, 1, "Option_0_is_redundant_and_cannot_be_specified_with_option_1_5104", "Option '{0}' is redundant and cannot be specified with option '{1}'."),
	Option_verbatimModuleSyntax_cannot_be_used_when_module_is_set_to_UMD_AMD_or_System: r$11(5105, 1, "Option_verbatimModuleSyntax_cannot_be_used_when_module_is_set_to_UMD_AMD_or_System_5105", "Option 'verbatimModuleSyntax' cannot be used when 'module' is set to 'UMD', 'AMD', or 'System'."),
	Use_0_instead: r$11(5106, 3, "Use_0_instead_5106", "Use '{0}' instead."),
	Option_0_1_is_deprecated_and_will_stop_functioning_in_TypeScript_2_Specify_compilerOption_ignoreDeprecations_Colon_3_to_silence_this_error: r$11(5107, 1, "Option_0_1_is_deprecated_and_will_stop_functioning_in_TypeScript_2_Specify_compilerOption_ignoreDepr_5107", `Option '{0}={1}' is deprecated and will stop functioning in TypeScript {2}. Specify compilerOption '"ignoreDeprecations": "{3}"' to silence this error.`),
	Option_0_1_has_been_removed_Please_remove_it_from_your_configuration: r$11(5108, 1, "Option_0_1_has_been_removed_Please_remove_it_from_your_configuration_5108", "Option '{0}={1}' has been removed. Please remove it from your configuration."),
	Option_moduleResolution_must_be_set_to_0_or_left_unspecified_when_option_module_is_set_to_1: r$11(5109, 1, "Option_moduleResolution_must_be_set_to_0_or_left_unspecified_when_option_module_is_set_to_1_5109", "Option 'moduleResolution' must be set to '{0}' (or left unspecified) when option 'module' is set to '{1}'."),
	Option_module_must_be_set_to_0_when_option_moduleResolution_is_set_to_1: r$11(5110, 1, "Option_module_must_be_set_to_0_when_option_moduleResolution_is_set_to_1_5110", "Option 'module' must be set to '{0}' when option 'moduleResolution' is set to '{1}'."),
	Generates_a_sourcemap_for_each_corresponding_d_ts_file: r$11(6e3, 3, "Generates_a_sourcemap_for_each_corresponding_d_ts_file_6000", "Generates a sourcemap for each corresponding '.d.ts' file."),
	Concatenate_and_emit_output_to_single_file: r$11(6001, 3, "Concatenate_and_emit_output_to_single_file_6001", "Concatenate and emit output to single file."),
	Generates_corresponding_d_ts_file: r$11(6002, 3, "Generates_corresponding_d_ts_file_6002", "Generates corresponding '.d.ts' file."),
	Specify_the_location_where_debugger_should_locate_TypeScript_files_instead_of_source_locations: r$11(6004, 3, "Specify_the_location_where_debugger_should_locate_TypeScript_files_instead_of_source_locations_6004", "Specify the location where debugger should locate TypeScript files instead of source locations."),
	Watch_input_files: r$11(6005, 3, "Watch_input_files_6005", "Watch input files."),
	Redirect_output_structure_to_the_directory: r$11(6006, 3, "Redirect_output_structure_to_the_directory_6006", "Redirect output structure to the directory."),
	Do_not_erase_const_enum_declarations_in_generated_code: r$11(6007, 3, "Do_not_erase_const_enum_declarations_in_generated_code_6007", "Do not erase const enum declarations in generated code."),
	Do_not_emit_outputs_if_any_errors_were_reported: r$11(6008, 3, "Do_not_emit_outputs_if_any_errors_were_reported_6008", "Do not emit outputs if any errors were reported."),
	Do_not_emit_comments_to_output: r$11(6009, 3, "Do_not_emit_comments_to_output_6009", "Do not emit comments to output."),
	Do_not_emit_outputs: r$11(6010, 3, "Do_not_emit_outputs_6010", "Do not emit outputs."),
	Allow_default_imports_from_modules_with_no_default_export_This_does_not_affect_code_emit_just_typechecking: r$11(6011, 3, "Allow_default_imports_from_modules_with_no_default_export_This_does_not_affect_code_emit_just_typech_6011", "Allow default imports from modules with no default export. This does not affect code emit, just typechecking."),
	Skip_type_checking_of_declaration_files: r$11(6012, 3, "Skip_type_checking_of_declaration_files_6012", "Skip type checking of declaration files."),
	Do_not_resolve_the_real_path_of_symlinks: r$11(6013, 3, "Do_not_resolve_the_real_path_of_symlinks_6013", "Do not resolve the real path of symlinks."),
	Only_emit_d_ts_declaration_files: r$11(6014, 3, "Only_emit_d_ts_declaration_files_6014", "Only emit '.d.ts' declaration files."),
	Specify_ECMAScript_target_version: r$11(6015, 3, "Specify_ECMAScript_target_version_6015", "Specify ECMAScript target version."),
	Specify_module_code_generation: r$11(6016, 3, "Specify_module_code_generation_6016", "Specify module code generation."),
	Print_this_message: r$11(6017, 3, "Print_this_message_6017", "Print this message."),
	Print_the_compiler_s_version: r$11(6019, 3, "Print_the_compiler_s_version_6019", "Print the compiler's version."),
	Compile_the_project_given_the_path_to_its_configuration_file_or_to_a_folder_with_a_tsconfig_json: r$11(6020, 3, "Compile_the_project_given_the_path_to_its_configuration_file_or_to_a_folder_with_a_tsconfig_json_6020", "Compile the project given the path to its configuration file, or to a folder with a 'tsconfig.json'."),
	Syntax_Colon_0: r$11(6023, 3, "Syntax_Colon_0_6023", "Syntax: {0}"),
	options: r$11(6024, 3, "options_6024", "options"),
	file: r$11(6025, 3, "file_6025", "file"),
	Examples_Colon_0: r$11(6026, 3, "Examples_Colon_0_6026", "Examples: {0}"),
	Options_Colon: r$11(6027, 3, "Options_Colon_6027", "Options:"),
	Version_0: r$11(6029, 3, "Version_0_6029", "Version {0}"),
	Insert_command_line_options_and_files_from_a_file: r$11(6030, 3, "Insert_command_line_options_and_files_from_a_file_6030", "Insert command line options and files from a file."),
	Starting_compilation_in_watch_mode: r$11(6031, 3, "Starting_compilation_in_watch_mode_6031", "Starting compilation in watch mode..."),
	File_change_detected_Starting_incremental_compilation: r$11(6032, 3, "File_change_detected_Starting_incremental_compilation_6032", "File change detected. Starting incremental compilation..."),
	KIND: r$11(6034, 3, "KIND_6034", "KIND"),
	FILE: r$11(6035, 3, "FILE_6035", "FILE"),
	VERSION: r$11(6036, 3, "VERSION_6036", "VERSION"),
	LOCATION: r$11(6037, 3, "LOCATION_6037", "LOCATION"),
	DIRECTORY: r$11(6038, 3, "DIRECTORY_6038", "DIRECTORY"),
	STRATEGY: r$11(6039, 3, "STRATEGY_6039", "STRATEGY"),
	FILE_OR_DIRECTORY: r$11(6040, 3, "FILE_OR_DIRECTORY_6040", "FILE OR DIRECTORY"),
	Errors_Files: r$11(6041, 3, "Errors_Files_6041", "Errors  Files"),
	Generates_corresponding_map_file: r$11(6043, 3, "Generates_corresponding_map_file_6043", "Generates corresponding '.map' file."),
	Compiler_option_0_expects_an_argument: r$11(6044, 1, "Compiler_option_0_expects_an_argument_6044", "Compiler option '{0}' expects an argument."),
	Unterminated_quoted_string_in_response_file_0: r$11(6045, 1, "Unterminated_quoted_string_in_response_file_0_6045", "Unterminated quoted string in response file '{0}'."),
	Argument_for_0_option_must_be_Colon_1: r$11(6046, 1, "Argument_for_0_option_must_be_Colon_1_6046", "Argument for '{0}' option must be: {1}."),
	Locale_must_be_of_the_form_language_or_language_territory_For_example_0_or_1: r$11(6048, 1, "Locale_must_be_of_the_form_language_or_language_territory_For_example_0_or_1_6048", "Locale must be of the form <language> or <language>-<territory>. For example '{0}' or '{1}'."),
	Unable_to_open_file_0: r$11(6050, 1, "Unable_to_open_file_0_6050", "Unable to open file '{0}'."),
	Corrupted_locale_file_0: r$11(6051, 1, "Corrupted_locale_file_0_6051", "Corrupted locale file {0}."),
	Raise_error_on_expressions_and_declarations_with_an_implied_any_type: r$11(6052, 3, "Raise_error_on_expressions_and_declarations_with_an_implied_any_type_6052", "Raise error on expressions and declarations with an implied 'any' type."),
	File_0_not_found: r$11(6053, 1, "File_0_not_found_6053", "File '{0}' not found."),
	File_0_has_an_unsupported_extension_The_only_supported_extensions_are_1: r$11(6054, 1, "File_0_has_an_unsupported_extension_The_only_supported_extensions_are_1_6054", "File '{0}' has an unsupported extension. The only supported extensions are {1}."),
	Suppress_noImplicitAny_errors_for_indexing_objects_lacking_index_signatures: r$11(6055, 3, "Suppress_noImplicitAny_errors_for_indexing_objects_lacking_index_signatures_6055", "Suppress noImplicitAny errors for indexing objects lacking index signatures."),
	Do_not_emit_declarations_for_code_that_has_an_internal_annotation: r$11(6056, 3, "Do_not_emit_declarations_for_code_that_has_an_internal_annotation_6056", "Do not emit declarations for code that has an '@internal' annotation."),
	Specify_the_root_directory_of_input_files_Use_to_control_the_output_directory_structure_with_outDir: r$11(6058, 3, "Specify_the_root_directory_of_input_files_Use_to_control_the_output_directory_structure_with_outDir_6058", "Specify the root directory of input files. Use to control the output directory structure with --outDir."),
	File_0_is_not_under_rootDir_1_rootDir_is_expected_to_contain_all_source_files: r$11(6059, 1, "File_0_is_not_under_rootDir_1_rootDir_is_expected_to_contain_all_source_files_6059", "File '{0}' is not under 'rootDir' '{1}'. 'rootDir' is expected to contain all source files."),
	Specify_the_end_of_line_sequence_to_be_used_when_emitting_files_Colon_CRLF_dos_or_LF_unix: r$11(6060, 3, "Specify_the_end_of_line_sequence_to_be_used_when_emitting_files_Colon_CRLF_dos_or_LF_unix_6060", "Specify the end of line sequence to be used when emitting files: 'CRLF' (dos) or 'LF' (unix)."),
	NEWLINE: r$11(6061, 3, "NEWLINE_6061", "NEWLINE"),
	Option_0_can_only_be_specified_in_tsconfig_json_file_or_set_to_null_on_command_line: r$11(6064, 1, "Option_0_can_only_be_specified_in_tsconfig_json_file_or_set_to_null_on_command_line_6064", "Option '{0}' can only be specified in 'tsconfig.json' file or set to 'null' on command line."),
	Enables_experimental_support_for_ES7_decorators: r$11(6065, 3, "Enables_experimental_support_for_ES7_decorators_6065", "Enables experimental support for ES7 decorators."),
	Enables_experimental_support_for_emitting_type_metadata_for_decorators: r$11(6066, 3, "Enables_experimental_support_for_emitting_type_metadata_for_decorators_6066", "Enables experimental support for emitting type metadata for decorators."),
	Initializes_a_TypeScript_project_and_creates_a_tsconfig_json_file: r$11(6070, 3, "Initializes_a_TypeScript_project_and_creates_a_tsconfig_json_file_6070", "Initializes a TypeScript project and creates a tsconfig.json file."),
	Successfully_created_a_tsconfig_json_file: r$11(6071, 3, "Successfully_created_a_tsconfig_json_file_6071", "Successfully created a tsconfig.json file."),
	Suppress_excess_property_checks_for_object_literals: r$11(6072, 3, "Suppress_excess_property_checks_for_object_literals_6072", "Suppress excess property checks for object literals."),
	Stylize_errors_and_messages_using_color_and_context_experimental: r$11(6073, 3, "Stylize_errors_and_messages_using_color_and_context_experimental_6073", "Stylize errors and messages using color and context (experimental)."),
	Do_not_report_errors_on_unused_labels: r$11(6074, 3, "Do_not_report_errors_on_unused_labels_6074", "Do not report errors on unused labels."),
	Report_error_when_not_all_code_paths_in_function_return_a_value: r$11(6075, 3, "Report_error_when_not_all_code_paths_in_function_return_a_value_6075", "Report error when not all code paths in function return a value."),
	Report_errors_for_fallthrough_cases_in_switch_statement: r$11(6076, 3, "Report_errors_for_fallthrough_cases_in_switch_statement_6076", "Report errors for fallthrough cases in switch statement."),
	Do_not_report_errors_on_unreachable_code: r$11(6077, 3, "Do_not_report_errors_on_unreachable_code_6077", "Do not report errors on unreachable code."),
	Disallow_inconsistently_cased_references_to_the_same_file: r$11(6078, 3, "Disallow_inconsistently_cased_references_to_the_same_file_6078", "Disallow inconsistently-cased references to the same file."),
	Specify_library_files_to_be_included_in_the_compilation: r$11(6079, 3, "Specify_library_files_to_be_included_in_the_compilation_6079", "Specify library files to be included in the compilation."),
	Specify_JSX_code_generation: r$11(6080, 3, "Specify_JSX_code_generation_6080", "Specify JSX code generation."),
	Only_amd_and_system_modules_are_supported_alongside_0: r$11(6082, 1, "Only_amd_and_system_modules_are_supported_alongside_0_6082", "Only 'amd' and 'system' modules are supported alongside --{0}."),
	Base_directory_to_resolve_non_absolute_module_names: r$11(6083, 3, "Base_directory_to_resolve_non_absolute_module_names_6083", "Base directory to resolve non-absolute module names."),
	Deprecated_Use_jsxFactory_instead_Specify_the_object_invoked_for_createElement_when_targeting_react_JSX_emit: r$11(6084, 3, "Deprecated_Use_jsxFactory_instead_Specify_the_object_invoked_for_createElement_when_targeting_react__6084", "[Deprecated] Use '--jsxFactory' instead. Specify the object invoked for createElement when targeting 'react' JSX emit"),
	Enable_tracing_of_the_name_resolution_process: r$11(6085, 3, "Enable_tracing_of_the_name_resolution_process_6085", "Enable tracing of the name resolution process."),
	Resolving_module_0_from_1: r$11(6086, 3, "Resolving_module_0_from_1_6086", "======== Resolving module '{0}' from '{1}'. ========"),
	Explicitly_specified_module_resolution_kind_Colon_0: r$11(6087, 3, "Explicitly_specified_module_resolution_kind_Colon_0_6087", "Explicitly specified module resolution kind: '{0}'."),
	Module_resolution_kind_is_not_specified_using_0: r$11(6088, 3, "Module_resolution_kind_is_not_specified_using_0_6088", "Module resolution kind is not specified, using '{0}'."),
	Module_name_0_was_successfully_resolved_to_1: r$11(6089, 3, "Module_name_0_was_successfully_resolved_to_1_6089", "======== Module name '{0}' was successfully resolved to '{1}'. ========"),
	Module_name_0_was_not_resolved: r$11(6090, 3, "Module_name_0_was_not_resolved_6090", "======== Module name '{0}' was not resolved. ========"),
	paths_option_is_specified_looking_for_a_pattern_to_match_module_name_0: r$11(6091, 3, "paths_option_is_specified_looking_for_a_pattern_to_match_module_name_0_6091", "'paths' option is specified, looking for a pattern to match module name '{0}'."),
	Module_name_0_matched_pattern_1: r$11(6092, 3, "Module_name_0_matched_pattern_1_6092", "Module name '{0}', matched pattern '{1}'."),
	Trying_substitution_0_candidate_module_location_Colon_1: r$11(6093, 3, "Trying_substitution_0_candidate_module_location_Colon_1_6093", "Trying substitution '{0}', candidate module location: '{1}'."),
	Resolving_module_name_0_relative_to_base_url_1_2: r$11(6094, 3, "Resolving_module_name_0_relative_to_base_url_1_2_6094", "Resolving module name '{0}' relative to base url '{1}' - '{2}'."),
	Loading_module_as_file_Slash_folder_candidate_module_location_0_target_file_types_Colon_1: r$11(6095, 3, "Loading_module_as_file_Slash_folder_candidate_module_location_0_target_file_types_Colon_1_6095", "Loading module as file / folder, candidate module location '{0}', target file types: {1}."),
	File_0_does_not_exist: r$11(6096, 3, "File_0_does_not_exist_6096", "File '{0}' does not exist."),
	File_0_exists_use_it_as_a_name_resolution_result: r$11(6097, 3, "File_0_exists_use_it_as_a_name_resolution_result_6097", "File '{0}' exists - use it as a name resolution result."),
	Loading_module_0_from_node_modules_folder_target_file_types_Colon_1: r$11(6098, 3, "Loading_module_0_from_node_modules_folder_target_file_types_Colon_1_6098", "Loading module '{0}' from 'node_modules' folder, target file types: {1}."),
	Found_package_json_at_0: r$11(6099, 3, "Found_package_json_at_0_6099", "Found 'package.json' at '{0}'."),
	package_json_does_not_have_a_0_field: r$11(6100, 3, "package_json_does_not_have_a_0_field_6100", "'package.json' does not have a '{0}' field."),
	package_json_has_0_field_1_that_references_2: r$11(6101, 3, "package_json_has_0_field_1_that_references_2_6101", "'package.json' has '{0}' field '{1}' that references '{2}'."),
	Allow_javascript_files_to_be_compiled: r$11(6102, 3, "Allow_javascript_files_to_be_compiled_6102", "Allow javascript files to be compiled."),
	Checking_if_0_is_the_longest_matching_prefix_for_1_2: r$11(6104, 3, "Checking_if_0_is_the_longest_matching_prefix_for_1_2_6104", "Checking if '{0}' is the longest matching prefix for '{1}' - '{2}'."),
	Expected_type_of_0_field_in_package_json_to_be_1_got_2: r$11(6105, 3, "Expected_type_of_0_field_in_package_json_to_be_1_got_2_6105", "Expected type of '{0}' field in 'package.json' to be '{1}', got '{2}'."),
	baseUrl_option_is_set_to_0_using_this_value_to_resolve_non_relative_module_name_1: r$11(6106, 3, "baseUrl_option_is_set_to_0_using_this_value_to_resolve_non_relative_module_name_1_6106", "'baseUrl' option is set to '{0}', using this value to resolve non-relative module name '{1}'."),
	rootDirs_option_is_set_using_it_to_resolve_relative_module_name_0: r$11(6107, 3, "rootDirs_option_is_set_using_it_to_resolve_relative_module_name_0_6107", "'rootDirs' option is set, using it to resolve relative module name '{0}'."),
	Longest_matching_prefix_for_0_is_1: r$11(6108, 3, "Longest_matching_prefix_for_0_is_1_6108", "Longest matching prefix for '{0}' is '{1}'."),
	Loading_0_from_the_root_dir_1_candidate_location_2: r$11(6109, 3, "Loading_0_from_the_root_dir_1_candidate_location_2_6109", "Loading '{0}' from the root dir '{1}', candidate location '{2}'."),
	Trying_other_entries_in_rootDirs: r$11(6110, 3, "Trying_other_entries_in_rootDirs_6110", "Trying other entries in 'rootDirs'."),
	Module_resolution_using_rootDirs_has_failed: r$11(6111, 3, "Module_resolution_using_rootDirs_has_failed_6111", "Module resolution using 'rootDirs' has failed."),
	Do_not_emit_use_strict_directives_in_module_output: r$11(6112, 3, "Do_not_emit_use_strict_directives_in_module_output_6112", "Do not emit 'use strict' directives in module output."),
	Enable_strict_null_checks: r$11(6113, 3, "Enable_strict_null_checks_6113", "Enable strict null checks."),
	Unknown_option_excludes_Did_you_mean_exclude: r$11(6114, 1, "Unknown_option_excludes_Did_you_mean_exclude_6114", "Unknown option 'excludes'. Did you mean 'exclude'?"),
	Raise_error_on_this_expressions_with_an_implied_any_type: r$11(6115, 3, "Raise_error_on_this_expressions_with_an_implied_any_type_6115", "Raise error on 'this' expressions with an implied 'any' type."),
	Resolving_type_reference_directive_0_containing_file_1_root_directory_2: r$11(6116, 3, "Resolving_type_reference_directive_0_containing_file_1_root_directory_2_6116", "======== Resolving type reference directive '{0}', containing file '{1}', root directory '{2}'. ========"),
	Type_reference_directive_0_was_successfully_resolved_to_1_primary_Colon_2: r$11(6119, 3, "Type_reference_directive_0_was_successfully_resolved_to_1_primary_Colon_2_6119", "======== Type reference directive '{0}' was successfully resolved to '{1}', primary: {2}. ========"),
	Type_reference_directive_0_was_not_resolved: r$11(6120, 3, "Type_reference_directive_0_was_not_resolved_6120", "======== Type reference directive '{0}' was not resolved. ========"),
	Resolving_with_primary_search_path_0: r$11(6121, 3, "Resolving_with_primary_search_path_0_6121", "Resolving with primary search path '{0}'."),
	Root_directory_cannot_be_determined_skipping_primary_search_paths: r$11(6122, 3, "Root_directory_cannot_be_determined_skipping_primary_search_paths_6122", "Root directory cannot be determined, skipping primary search paths."),
	Resolving_type_reference_directive_0_containing_file_1_root_directory_not_set: r$11(6123, 3, "Resolving_type_reference_directive_0_containing_file_1_root_directory_not_set_6123", "======== Resolving type reference directive '{0}', containing file '{1}', root directory not set. ========"),
	Type_declaration_files_to_be_included_in_compilation: r$11(6124, 3, "Type_declaration_files_to_be_included_in_compilation_6124", "Type declaration files to be included in compilation."),
	Looking_up_in_node_modules_folder_initial_location_0: r$11(6125, 3, "Looking_up_in_node_modules_folder_initial_location_0_6125", "Looking up in 'node_modules' folder, initial location '{0}'."),
	Containing_file_is_not_specified_and_root_directory_cannot_be_determined_skipping_lookup_in_node_modules_folder: r$11(6126, 3, "Containing_file_is_not_specified_and_root_directory_cannot_be_determined_skipping_lookup_in_node_mod_6126", "Containing file is not specified and root directory cannot be determined, skipping lookup in 'node_modules' folder."),
	Resolving_type_reference_directive_0_containing_file_not_set_root_directory_1: r$11(6127, 3, "Resolving_type_reference_directive_0_containing_file_not_set_root_directory_1_6127", "======== Resolving type reference directive '{0}', containing file not set, root directory '{1}'. ========"),
	Resolving_type_reference_directive_0_containing_file_not_set_root_directory_not_set: r$11(6128, 3, "Resolving_type_reference_directive_0_containing_file_not_set_root_directory_not_set_6128", "======== Resolving type reference directive '{0}', containing file not set, root directory not set. ========"),
	Resolving_real_path_for_0_result_1: r$11(6130, 3, "Resolving_real_path_for_0_result_1_6130", "Resolving real path for '{0}', result '{1}'."),
	Cannot_compile_modules_using_option_0_unless_the_module_flag_is_amd_or_system: r$11(6131, 1, "Cannot_compile_modules_using_option_0_unless_the_module_flag_is_amd_or_system_6131", "Cannot compile modules using option '{0}' unless the '--module' flag is 'amd' or 'system'."),
	File_name_0_has_a_1_extension_stripping_it: r$11(6132, 3, "File_name_0_has_a_1_extension_stripping_it_6132", "File name '{0}' has a '{1}' extension - stripping it."),
	_0_is_declared_but_its_value_is_never_read: r$11(6133, 1, "_0_is_declared_but_its_value_is_never_read_6133", "'{0}' is declared but its value is never read.", !0),
	Report_errors_on_unused_locals: r$11(6134, 3, "Report_errors_on_unused_locals_6134", "Report errors on unused locals."),
	Report_errors_on_unused_parameters: r$11(6135, 3, "Report_errors_on_unused_parameters_6135", "Report errors on unused parameters."),
	The_maximum_dependency_depth_to_search_under_node_modules_and_load_JavaScript_files: r$11(6136, 3, "The_maximum_dependency_depth_to_search_under_node_modules_and_load_JavaScript_files_6136", "The maximum dependency depth to search under node_modules and load JavaScript files."),
	Cannot_import_type_declaration_files_Consider_importing_0_instead_of_1: r$11(6137, 1, "Cannot_import_type_declaration_files_Consider_importing_0_instead_of_1_6137", "Cannot import type declaration files. Consider importing '{0}' instead of '{1}'."),
	Property_0_is_declared_but_its_value_is_never_read: r$11(6138, 1, "Property_0_is_declared_but_its_value_is_never_read_6138", "Property '{0}' is declared but its value is never read.", !0),
	Import_emit_helpers_from_tslib: r$11(6139, 3, "Import_emit_helpers_from_tslib_6139", "Import emit helpers from 'tslib'."),
	Auto_discovery_for_typings_is_enabled_in_project_0_Running_extra_resolution_pass_for_module_1_using_cache_location_2: r$11(6140, 1, "Auto_discovery_for_typings_is_enabled_in_project_0_Running_extra_resolution_pass_for_module_1_using__6140", "Auto discovery for typings is enabled in project '{0}'. Running extra resolution pass for module '{1}' using cache location '{2}'."),
	Parse_in_strict_mode_and_emit_use_strict_for_each_source_file: r$11(6141, 3, "Parse_in_strict_mode_and_emit_use_strict_for_each_source_file_6141", "Parse in strict mode and emit \"use strict\" for each source file."),
	Module_0_was_resolved_to_1_but_jsx_is_not_set: r$11(6142, 1, "Module_0_was_resolved_to_1_but_jsx_is_not_set_6142", "Module '{0}' was resolved to '{1}', but '--jsx' is not set."),
	Module_0_was_resolved_as_locally_declared_ambient_module_in_file_1: r$11(6144, 3, "Module_0_was_resolved_as_locally_declared_ambient_module_in_file_1_6144", "Module '{0}' was resolved as locally declared ambient module in file '{1}'."),
	Specify_the_JSX_factory_function_to_use_when_targeting_react_JSX_emit_e_g_React_createElement_or_h: r$11(6146, 3, "Specify_the_JSX_factory_function_to_use_when_targeting_react_JSX_emit_e_g_React_createElement_or_h_6146", "Specify the JSX factory function to use when targeting 'react' JSX emit, e.g. 'React.createElement' or 'h'."),
	Resolution_for_module_0_was_found_in_cache_from_location_1: r$11(6147, 3, "Resolution_for_module_0_was_found_in_cache_from_location_1_6147", "Resolution for module '{0}' was found in cache from location '{1}'."),
	Directory_0_does_not_exist_skipping_all_lookups_in_it: r$11(6148, 3, "Directory_0_does_not_exist_skipping_all_lookups_in_it_6148", "Directory '{0}' does not exist, skipping all lookups in it."),
	Show_diagnostic_information: r$11(6149, 3, "Show_diagnostic_information_6149", "Show diagnostic information."),
	Show_verbose_diagnostic_information: r$11(6150, 3, "Show_verbose_diagnostic_information_6150", "Show verbose diagnostic information."),
	Emit_a_single_file_with_source_maps_instead_of_having_a_separate_file: r$11(6151, 3, "Emit_a_single_file_with_source_maps_instead_of_having_a_separate_file_6151", "Emit a single file with source maps instead of having a separate file."),
	Emit_the_source_alongside_the_sourcemaps_within_a_single_file_requires_inlineSourceMap_or_sourceMap_to_be_set: r$11(6152, 3, "Emit_the_source_alongside_the_sourcemaps_within_a_single_file_requires_inlineSourceMap_or_sourceMap__6152", "Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set."),
	Transpile_each_file_as_a_separate_module_similar_to_ts_transpileModule: r$11(6153, 3, "Transpile_each_file_as_a_separate_module_similar_to_ts_transpileModule_6153", "Transpile each file as a separate module (similar to 'ts.transpileModule')."),
	Print_names_of_generated_files_part_of_the_compilation: r$11(6154, 3, "Print_names_of_generated_files_part_of_the_compilation_6154", "Print names of generated files part of the compilation."),
	Print_names_of_files_part_of_the_compilation: r$11(6155, 3, "Print_names_of_files_part_of_the_compilation_6155", "Print names of files part of the compilation."),
	The_locale_used_when_displaying_messages_to_the_user_e_g_en_us: r$11(6156, 3, "The_locale_used_when_displaying_messages_to_the_user_e_g_en_us_6156", "The locale used when displaying messages to the user (e.g. 'en-us')"),
	Do_not_generate_custom_helper_functions_like_extends_in_compiled_output: r$11(6157, 3, "Do_not_generate_custom_helper_functions_like_extends_in_compiled_output_6157", "Do not generate custom helper functions like '__extends' in compiled output."),
	Do_not_include_the_default_library_file_lib_d_ts: r$11(6158, 3, "Do_not_include_the_default_library_file_lib_d_ts_6158", "Do not include the default library file (lib.d.ts)."),
	Do_not_add_triple_slash_references_or_imported_modules_to_the_list_of_compiled_files: r$11(6159, 3, "Do_not_add_triple_slash_references_or_imported_modules_to_the_list_of_compiled_files_6159", "Do not add triple-slash references or imported modules to the list of compiled files."),
	Deprecated_Use_skipLibCheck_instead_Skip_type_checking_of_default_library_declaration_files: r$11(6160, 3, "Deprecated_Use_skipLibCheck_instead_Skip_type_checking_of_default_library_declaration_files_6160", "[Deprecated] Use '--skipLibCheck' instead. Skip type checking of default library declaration files."),
	List_of_folders_to_include_type_definitions_from: r$11(6161, 3, "List_of_folders_to_include_type_definitions_from_6161", "List of folders to include type definitions from."),
	Disable_size_limitations_on_JavaScript_projects: r$11(6162, 3, "Disable_size_limitations_on_JavaScript_projects_6162", "Disable size limitations on JavaScript projects."),
	The_character_set_of_the_input_files: r$11(6163, 3, "The_character_set_of_the_input_files_6163", "The character set of the input files."),
	Skipping_module_0_that_looks_like_an_absolute_URI_target_file_types_Colon_1: r$11(6164, 3, "Skipping_module_0_that_looks_like_an_absolute_URI_target_file_types_Colon_1_6164", "Skipping module '{0}' that looks like an absolute URI, target file types: {1}."),
	Do_not_truncate_error_messages: r$11(6165, 3, "Do_not_truncate_error_messages_6165", "Do not truncate error messages."),
	Output_directory_for_generated_declaration_files: r$11(6166, 3, "Output_directory_for_generated_declaration_files_6166", "Output directory for generated declaration files."),
	A_series_of_entries_which_re_map_imports_to_lookup_locations_relative_to_the_baseUrl: r$11(6167, 3, "A_series_of_entries_which_re_map_imports_to_lookup_locations_relative_to_the_baseUrl_6167", "A series of entries which re-map imports to lookup locations relative to the 'baseUrl'."),
	List_of_root_folders_whose_combined_content_represents_the_structure_of_the_project_at_runtime: r$11(6168, 3, "List_of_root_folders_whose_combined_content_represents_the_structure_of_the_project_at_runtime_6168", "List of root folders whose combined content represents the structure of the project at runtime."),
	Show_all_compiler_options: r$11(6169, 3, "Show_all_compiler_options_6169", "Show all compiler options."),
	Deprecated_Use_outFile_instead_Concatenate_and_emit_output_to_single_file: r$11(6170, 3, "Deprecated_Use_outFile_instead_Concatenate_and_emit_output_to_single_file_6170", "[Deprecated] Use '--outFile' instead. Concatenate and emit output to single file"),
	Command_line_Options: r$11(6171, 3, "Command_line_Options_6171", "Command-line Options"),
	Provide_full_support_for_iterables_in_for_of_spread_and_destructuring_when_targeting_ES5: r$11(6179, 3, "Provide_full_support_for_iterables_in_for_of_spread_and_destructuring_when_targeting_ES5_6179", "Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5'."),
	Enable_all_strict_type_checking_options: r$11(6180, 3, "Enable_all_strict_type_checking_options_6180", "Enable all strict type-checking options."),
	Scoped_package_detected_looking_in_0: r$11(6182, 3, "Scoped_package_detected_looking_in_0_6182", "Scoped package detected, looking in '{0}'"),
	Reusing_resolution_of_module_0_from_1_of_old_program_it_was_successfully_resolved_to_2: r$11(6183, 3, "Reusing_resolution_of_module_0_from_1_of_old_program_it_was_successfully_resolved_to_2_6183", "Reusing resolution of module '{0}' from '{1}' of old program, it was successfully resolved to '{2}'."),
	Reusing_resolution_of_module_0_from_1_of_old_program_it_was_successfully_resolved_to_2_with_Package_ID_3: r$11(6184, 3, "Reusing_resolution_of_module_0_from_1_of_old_program_it_was_successfully_resolved_to_2_with_Package__6184", "Reusing resolution of module '{0}' from '{1}' of old program, it was successfully resolved to '{2}' with Package ID '{3}'."),
	Enable_strict_checking_of_function_types: r$11(6186, 3, "Enable_strict_checking_of_function_types_6186", "Enable strict checking of function types."),
	Enable_strict_checking_of_property_initialization_in_classes: r$11(6187, 3, "Enable_strict_checking_of_property_initialization_in_classes_6187", "Enable strict checking of property initialization in classes."),
	Numeric_separators_are_not_allowed_here: r$11(6188, 1, "Numeric_separators_are_not_allowed_here_6188", "Numeric separators are not allowed here."),
	Multiple_consecutive_numeric_separators_are_not_permitted: r$11(6189, 1, "Multiple_consecutive_numeric_separators_are_not_permitted_6189", "Multiple consecutive numeric separators are not permitted."),
	Whether_to_keep_outdated_console_output_in_watch_mode_instead_of_clearing_the_screen: r$11(6191, 3, "Whether_to_keep_outdated_console_output_in_watch_mode_instead_of_clearing_the_screen_6191", "Whether to keep outdated console output in watch mode instead of clearing the screen."),
	All_imports_in_import_declaration_are_unused: r$11(6192, 1, "All_imports_in_import_declaration_are_unused_6192", "All imports in import declaration are unused.", !0),
	Found_1_error_Watching_for_file_changes: r$11(6193, 3, "Found_1_error_Watching_for_file_changes_6193", "Found 1 error. Watching for file changes."),
	Found_0_errors_Watching_for_file_changes: r$11(6194, 3, "Found_0_errors_Watching_for_file_changes_6194", "Found {0} errors. Watching for file changes."),
	Resolve_keyof_to_string_valued_property_names_only_no_numbers_or_symbols: r$11(6195, 3, "Resolve_keyof_to_string_valued_property_names_only_no_numbers_or_symbols_6195", "Resolve 'keyof' to string valued property names only (no numbers or symbols)."),
	_0_is_declared_but_never_used: r$11(6196, 1, "_0_is_declared_but_never_used_6196", "'{0}' is declared but never used.", !0),
	Include_modules_imported_with_json_extension: r$11(6197, 3, "Include_modules_imported_with_json_extension_6197", "Include modules imported with '.json' extension"),
	All_destructured_elements_are_unused: r$11(6198, 1, "All_destructured_elements_are_unused_6198", "All destructured elements are unused.", !0),
	All_variables_are_unused: r$11(6199, 1, "All_variables_are_unused_6199", "All variables are unused.", !0),
	Definitions_of_the_following_identifiers_conflict_with_those_in_another_file_Colon_0: r$11(6200, 1, "Definitions_of_the_following_identifiers_conflict_with_those_in_another_file_Colon_0_6200", "Definitions of the following identifiers conflict with those in another file: {0}"),
	Conflicts_are_in_this_file: r$11(6201, 3, "Conflicts_are_in_this_file_6201", "Conflicts are in this file."),
	Project_references_may_not_form_a_circular_graph_Cycle_detected_Colon_0: r$11(6202, 1, "Project_references_may_not_form_a_circular_graph_Cycle_detected_Colon_0_6202", "Project references may not form a circular graph. Cycle detected: {0}"),
	_0_was_also_declared_here: r$11(6203, 3, "_0_was_also_declared_here_6203", "'{0}' was also declared here."),
	and_here: r$11(6204, 3, "and_here_6204", "and here."),
	All_type_parameters_are_unused: r$11(6205, 1, "All_type_parameters_are_unused_6205", "All type parameters are unused."),
	package_json_has_a_typesVersions_field_with_version_specific_path_mappings: r$11(6206, 3, "package_json_has_a_typesVersions_field_with_version_specific_path_mappings_6206", "'package.json' has a 'typesVersions' field with version-specific path mappings."),
	package_json_does_not_have_a_typesVersions_entry_that_matches_version_0: r$11(6207, 3, "package_json_does_not_have_a_typesVersions_entry_that_matches_version_0_6207", "'package.json' does not have a 'typesVersions' entry that matches version '{0}'."),
	package_json_has_a_typesVersions_entry_0_that_matches_compiler_version_1_looking_for_a_pattern_to_match_module_name_2: r$11(6208, 3, "package_json_has_a_typesVersions_entry_0_that_matches_compiler_version_1_looking_for_a_pattern_to_ma_6208", "'package.json' has a 'typesVersions' entry '{0}' that matches compiler version '{1}', looking for a pattern to match module name '{2}'."),
	package_json_has_a_typesVersions_entry_0_that_is_not_a_valid_semver_range: r$11(6209, 3, "package_json_has_a_typesVersions_entry_0_that_is_not_a_valid_semver_range_6209", "'package.json' has a 'typesVersions' entry '{0}' that is not a valid semver range."),
	An_argument_for_0_was_not_provided: r$11(6210, 3, "An_argument_for_0_was_not_provided_6210", "An argument for '{0}' was not provided."),
	An_argument_matching_this_binding_pattern_was_not_provided: r$11(6211, 3, "An_argument_matching_this_binding_pattern_was_not_provided_6211", "An argument matching this binding pattern was not provided."),
	Did_you_mean_to_call_this_expression: r$11(6212, 3, "Did_you_mean_to_call_this_expression_6212", "Did you mean to call this expression?"),
	Did_you_mean_to_use_new_with_this_expression: r$11(6213, 3, "Did_you_mean_to_use_new_with_this_expression_6213", "Did you mean to use 'new' with this expression?"),
	Enable_strict_bind_call_and_apply_methods_on_functions: r$11(6214, 3, "Enable_strict_bind_call_and_apply_methods_on_functions_6214", "Enable strict 'bind', 'call', and 'apply' methods on functions."),
	Using_compiler_options_of_project_reference_redirect_0: r$11(6215, 3, "Using_compiler_options_of_project_reference_redirect_0_6215", "Using compiler options of project reference redirect '{0}'."),
	Found_1_error: r$11(6216, 3, "Found_1_error_6216", "Found 1 error."),
	Found_0_errors: r$11(6217, 3, "Found_0_errors_6217", "Found {0} errors."),
	Module_name_0_was_successfully_resolved_to_1_with_Package_ID_2: r$11(6218, 3, "Module_name_0_was_successfully_resolved_to_1_with_Package_ID_2_6218", "======== Module name '{0}' was successfully resolved to '{1}' with Package ID '{2}'. ========"),
	Type_reference_directive_0_was_successfully_resolved_to_1_with_Package_ID_2_primary_Colon_3: r$11(6219, 3, "Type_reference_directive_0_was_successfully_resolved_to_1_with_Package_ID_2_primary_Colon_3_6219", "======== Type reference directive '{0}' was successfully resolved to '{1}' with Package ID '{2}', primary: {3}. ========"),
	package_json_had_a_falsy_0_field: r$11(6220, 3, "package_json_had_a_falsy_0_field_6220", "'package.json' had a falsy '{0}' field."),
	Disable_use_of_source_files_instead_of_declaration_files_from_referenced_projects: r$11(6221, 3, "Disable_use_of_source_files_instead_of_declaration_files_from_referenced_projects_6221", "Disable use of source files instead of declaration files from referenced projects."),
	Emit_class_fields_with_Define_instead_of_Set: r$11(6222, 3, "Emit_class_fields_with_Define_instead_of_Set_6222", "Emit class fields with Define instead of Set."),
	Generates_a_CPU_profile: r$11(6223, 3, "Generates_a_CPU_profile_6223", "Generates a CPU profile."),
	Disable_solution_searching_for_this_project: r$11(6224, 3, "Disable_solution_searching_for_this_project_6224", "Disable solution searching for this project."),
	Specify_strategy_for_watching_file_Colon_FixedPollingInterval_default_PriorityPollingInterval_DynamicPriorityPolling_FixedChunkSizePolling_UseFsEvents_UseFsEventsOnParentDirectory: r$11(6225, 3, "Specify_strategy_for_watching_file_Colon_FixedPollingInterval_default_PriorityPollingInterval_Dynami_6225", "Specify strategy for watching file: 'FixedPollingInterval' (default), 'PriorityPollingInterval', 'DynamicPriorityPolling', 'FixedChunkSizePolling', 'UseFsEvents', 'UseFsEventsOnParentDirectory'."),
	Specify_strategy_for_watching_directory_on_platforms_that_don_t_support_recursive_watching_natively_Colon_UseFsEvents_default_FixedPollingInterval_DynamicPriorityPolling_FixedChunkSizePolling: r$11(6226, 3, "Specify_strategy_for_watching_directory_on_platforms_that_don_t_support_recursive_watching_natively__6226", "Specify strategy for watching directory on platforms that don't support recursive watching natively: 'UseFsEvents' (default), 'FixedPollingInterval', 'DynamicPriorityPolling', 'FixedChunkSizePolling'."),
	Specify_strategy_for_creating_a_polling_watch_when_it_fails_to_create_using_file_system_events_Colon_FixedInterval_default_PriorityInterval_DynamicPriority_FixedChunkSize: r$11(6227, 3, "Specify_strategy_for_creating_a_polling_watch_when_it_fails_to_create_using_file_system_events_Colon_6227", "Specify strategy for creating a polling watch when it fails to create using file system events: 'FixedInterval' (default), 'PriorityInterval', 'DynamicPriority', 'FixedChunkSize'."),
	Tag_0_expects_at_least_1_arguments_but_the_JSX_factory_2_provides_at_most_3: r$11(6229, 1, "Tag_0_expects_at_least_1_arguments_but_the_JSX_factory_2_provides_at_most_3_6229", "Tag '{0}' expects at least '{1}' arguments, but the JSX factory '{2}' provides at most '{3}'."),
	Option_0_can_only_be_specified_in_tsconfig_json_file_or_set_to_false_or_null_on_command_line: r$11(6230, 1, "Option_0_can_only_be_specified_in_tsconfig_json_file_or_set_to_false_or_null_on_command_line_6230", "Option '{0}' can only be specified in 'tsconfig.json' file or set to 'false' or 'null' on command line."),
	Could_not_resolve_the_path_0_with_the_extensions_Colon_1: r$11(6231, 1, "Could_not_resolve_the_path_0_with_the_extensions_Colon_1_6231", "Could not resolve the path '{0}' with the extensions: {1}."),
	Declaration_augments_declaration_in_another_file_This_cannot_be_serialized: r$11(6232, 1, "Declaration_augments_declaration_in_another_file_This_cannot_be_serialized_6232", "Declaration augments declaration in another file. This cannot be serialized."),
	This_is_the_declaration_being_augmented_Consider_moving_the_augmenting_declaration_into_the_same_file: r$11(6233, 1, "This_is_the_declaration_being_augmented_Consider_moving_the_augmenting_declaration_into_the_same_fil_6233", "This is the declaration being augmented. Consider moving the augmenting declaration into the same file."),
	This_expression_is_not_callable_because_it_is_a_get_accessor_Did_you_mean_to_use_it_without: r$11(6234, 1, "This_expression_is_not_callable_because_it_is_a_get_accessor_Did_you_mean_to_use_it_without_6234", "This expression is not callable because it is a 'get' accessor. Did you mean to use it without '()'?"),
	Disable_loading_referenced_projects: r$11(6235, 3, "Disable_loading_referenced_projects_6235", "Disable loading referenced projects."),
	Arguments_for_the_rest_parameter_0_were_not_provided: r$11(6236, 1, "Arguments_for_the_rest_parameter_0_were_not_provided_6236", "Arguments for the rest parameter '{0}' were not provided."),
	Generates_an_event_trace_and_a_list_of_types: r$11(6237, 3, "Generates_an_event_trace_and_a_list_of_types_6237", "Generates an event trace and a list of types."),
	Specify_the_module_specifier_to_be_used_to_import_the_jsx_and_jsxs_factory_functions_from_eg_react: r$11(6238, 1, "Specify_the_module_specifier_to_be_used_to_import_the_jsx_and_jsxs_factory_functions_from_eg_react_6238", "Specify the module specifier to be used to import the 'jsx' and 'jsxs' factory functions from. eg, react"),
	File_0_exists_according_to_earlier_cached_lookups: r$11(6239, 3, "File_0_exists_according_to_earlier_cached_lookups_6239", "File '{0}' exists according to earlier cached lookups."),
	File_0_does_not_exist_according_to_earlier_cached_lookups: r$11(6240, 3, "File_0_does_not_exist_according_to_earlier_cached_lookups_6240", "File '{0}' does not exist according to earlier cached lookups."),
	Resolution_for_type_reference_directive_0_was_found_in_cache_from_location_1: r$11(6241, 3, "Resolution_for_type_reference_directive_0_was_found_in_cache_from_location_1_6241", "Resolution for type reference directive '{0}' was found in cache from location '{1}'."),
	Resolving_type_reference_directive_0_containing_file_1: r$11(6242, 3, "Resolving_type_reference_directive_0_containing_file_1_6242", "======== Resolving type reference directive '{0}', containing file '{1}'. ========"),
	Interpret_optional_property_types_as_written_rather_than_adding_undefined: r$11(6243, 3, "Interpret_optional_property_types_as_written_rather_than_adding_undefined_6243", "Interpret optional property types as written, rather than adding 'undefined'."),
	Modules: r$11(6244, 3, "Modules_6244", "Modules"),
	File_Management: r$11(6245, 3, "File_Management_6245", "File Management"),
	Emit: r$11(6246, 3, "Emit_6246", "Emit"),
	JavaScript_Support: r$11(6247, 3, "JavaScript_Support_6247", "JavaScript Support"),
	Type_Checking: r$11(6248, 3, "Type_Checking_6248", "Type Checking"),
	Editor_Support: r$11(6249, 3, "Editor_Support_6249", "Editor Support"),
	Watch_and_Build_Modes: r$11(6250, 3, "Watch_and_Build_Modes_6250", "Watch and Build Modes"),
	Compiler_Diagnostics: r$11(6251, 3, "Compiler_Diagnostics_6251", "Compiler Diagnostics"),
	Interop_Constraints: r$11(6252, 3, "Interop_Constraints_6252", "Interop Constraints"),
	Backwards_Compatibility: r$11(6253, 3, "Backwards_Compatibility_6253", "Backwards Compatibility"),
	Language_and_Environment: r$11(6254, 3, "Language_and_Environment_6254", "Language and Environment"),
	Projects: r$11(6255, 3, "Projects_6255", "Projects"),
	Output_Formatting: r$11(6256, 3, "Output_Formatting_6256", "Output Formatting"),
	Completeness: r$11(6257, 3, "Completeness_6257", "Completeness"),
	_0_should_be_set_inside_the_compilerOptions_object_of_the_config_json_file: r$11(6258, 1, "_0_should_be_set_inside_the_compilerOptions_object_of_the_config_json_file_6258", "'{0}' should be set inside the 'compilerOptions' object of the config json file"),
	Found_1_error_in_0: r$11(6259, 3, "Found_1_error_in_0_6259", "Found 1 error in {0}"),
	Found_0_errors_in_the_same_file_starting_at_Colon_1: r$11(6260, 3, "Found_0_errors_in_the_same_file_starting_at_Colon_1_6260", "Found {0} errors in the same file, starting at: {1}"),
	Found_0_errors_in_1_files: r$11(6261, 3, "Found_0_errors_in_1_files_6261", "Found {0} errors in {1} files."),
	File_name_0_has_a_1_extension_looking_up_2_instead: r$11(6262, 3, "File_name_0_has_a_1_extension_looking_up_2_instead_6262", "File name '{0}' has a '{1}' extension - looking up '{2}' instead."),
	Module_0_was_resolved_to_1_but_allowArbitraryExtensions_is_not_set: r$11(6263, 1, "Module_0_was_resolved_to_1_but_allowArbitraryExtensions_is_not_set_6263", "Module '{0}' was resolved to '{1}', but '--allowArbitraryExtensions' is not set."),
	Enable_importing_files_with_any_extension_provided_a_declaration_file_is_present: r$11(6264, 3, "Enable_importing_files_with_any_extension_provided_a_declaration_file_is_present_6264", "Enable importing files with any extension, provided a declaration file is present."),
	Resolving_type_reference_directive_for_program_that_specifies_custom_typeRoots_skipping_lookup_in_node_modules_folder: r$11(6265, 3, "Resolving_type_reference_directive_for_program_that_specifies_custom_typeRoots_skipping_lookup_in_no_6265", "Resolving type reference directive for program that specifies custom typeRoots, skipping lookup in 'node_modules' folder."),
	Option_0_can_only_be_specified_on_command_line: r$11(6266, 1, "Option_0_can_only_be_specified_on_command_line_6266", "Option '{0}' can only be specified on command line."),
	Directory_0_has_no_containing_package_json_scope_Imports_will_not_resolve: r$11(6270, 3, "Directory_0_has_no_containing_package_json_scope_Imports_will_not_resolve_6270", "Directory '{0}' has no containing package.json scope. Imports will not resolve."),
	Import_specifier_0_does_not_exist_in_package_json_scope_at_path_1: r$11(6271, 3, "Import_specifier_0_does_not_exist_in_package_json_scope_at_path_1_6271", "Import specifier '{0}' does not exist in package.json scope at path '{1}'."),
	Invalid_import_specifier_0_has_no_possible_resolutions: r$11(6272, 3, "Invalid_import_specifier_0_has_no_possible_resolutions_6272", "Invalid import specifier '{0}' has no possible resolutions."),
	package_json_scope_0_has_no_imports_defined: r$11(6273, 3, "package_json_scope_0_has_no_imports_defined_6273", "package.json scope '{0}' has no imports defined."),
	package_json_scope_0_explicitly_maps_specifier_1_to_null: r$11(6274, 3, "package_json_scope_0_explicitly_maps_specifier_1_to_null_6274", "package.json scope '{0}' explicitly maps specifier '{1}' to null."),
	package_json_scope_0_has_invalid_type_for_target_of_specifier_1: r$11(6275, 3, "package_json_scope_0_has_invalid_type_for_target_of_specifier_1_6275", "package.json scope '{0}' has invalid type for target of specifier '{1}'"),
	Export_specifier_0_does_not_exist_in_package_json_scope_at_path_1: r$11(6276, 3, "Export_specifier_0_does_not_exist_in_package_json_scope_at_path_1_6276", "Export specifier '{0}' does not exist in package.json scope at path '{1}'."),
	Resolution_of_non_relative_name_failed_trying_with_modern_Node_resolution_features_disabled_to_see_if_npm_library_needs_configuration_update: r$11(6277, 3, "Resolution_of_non_relative_name_failed_trying_with_modern_Node_resolution_features_disabled_to_see_i_6277", "Resolution of non-relative name failed; trying with modern Node resolution features disabled to see if npm library needs configuration update."),
	There_are_types_at_0_but_this_result_could_not_be_resolved_when_respecting_package_json_exports_The_1_library_may_need_to_update_its_package_json_or_typings: r$11(6278, 3, "There_are_types_at_0_but_this_result_could_not_be_resolved_when_respecting_package_json_exports_The__6278", `There are types at '{0}', but this result could not be resolved when respecting package.json "exports". The '{1}' library may need to update its package.json or typings.`),
	Resolution_of_non_relative_name_failed_trying_with_moduleResolution_bundler_to_see_if_project_may_need_configuration_update: r$11(6279, 3, "Resolution_of_non_relative_name_failed_trying_with_moduleResolution_bundler_to_see_if_project_may_ne_6279", "Resolution of non-relative name failed; trying with '--moduleResolution bundler' to see if project may need configuration update."),
	There_are_types_at_0_but_this_result_could_not_be_resolved_under_your_current_moduleResolution_setting_Consider_updating_to_node16_nodenext_or_bundler: r$11(6280, 3, "There_are_types_at_0_but_this_result_could_not_be_resolved_under_your_current_moduleResolution_setti_6280", "There are types at '{0}', but this result could not be resolved under your current 'moduleResolution' setting. Consider updating to 'node16', 'nodenext', or 'bundler'."),
	package_json_has_a_peerDependencies_field: r$11(6281, 3, "package_json_has_a_peerDependencies_field_6281", "'package.json' has a 'peerDependencies' field."),
	Found_peerDependency_0_with_1_version: r$11(6282, 3, "Found_peerDependency_0_with_1_version_6282", "Found peerDependency '{0}' with '{1}' version."),
	Failed_to_find_peerDependency_0: r$11(6283, 3, "Failed_to_find_peerDependency_0_6283", "Failed to find peerDependency '{0}'."),
	Enable_project_compilation: r$11(6302, 3, "Enable_project_compilation_6302", "Enable project compilation"),
	Composite_projects_may_not_disable_declaration_emit: r$11(6304, 1, "Composite_projects_may_not_disable_declaration_emit_6304", "Composite projects may not disable declaration emit."),
	Output_file_0_has_not_been_built_from_source_file_1: r$11(6305, 1, "Output_file_0_has_not_been_built_from_source_file_1_6305", "Output file '{0}' has not been built from source file '{1}'."),
	Referenced_project_0_must_have_setting_composite_Colon_true: r$11(6306, 1, "Referenced_project_0_must_have_setting_composite_Colon_true_6306", `Referenced project '{0}' must have setting "composite": true.`),
	File_0_is_not_listed_within_the_file_list_of_project_1_Projects_must_list_all_files_or_use_an_include_pattern: r$11(6307, 1, "File_0_is_not_listed_within_the_file_list_of_project_1_Projects_must_list_all_files_or_use_an_includ_6307", "File '{0}' is not listed within the file list of project '{1}'. Projects must list all files or use an 'include' pattern."),
	Referenced_project_0_may_not_disable_emit: r$11(6310, 1, "Referenced_project_0_may_not_disable_emit_6310", "Referenced project '{0}' may not disable emit."),
	Project_0_is_out_of_date_because_output_1_is_older_than_input_2: r$11(6350, 3, "Project_0_is_out_of_date_because_output_1_is_older_than_input_2_6350", "Project '{0}' is out of date because output '{1}' is older than input '{2}'"),
	Project_0_is_up_to_date_because_newest_input_1_is_older_than_output_2: r$11(6351, 3, "Project_0_is_up_to_date_because_newest_input_1_is_older_than_output_2_6351", "Project '{0}' is up to date because newest input '{1}' is older than output '{2}'"),
	Project_0_is_out_of_date_because_output_file_1_does_not_exist: r$11(6352, 3, "Project_0_is_out_of_date_because_output_file_1_does_not_exist_6352", "Project '{0}' is out of date because output file '{1}' does not exist"),
	Project_0_is_out_of_date_because_its_dependency_1_is_out_of_date: r$11(6353, 3, "Project_0_is_out_of_date_because_its_dependency_1_is_out_of_date_6353", "Project '{0}' is out of date because its dependency '{1}' is out of date"),
	Project_0_is_up_to_date_with_d_ts_files_from_its_dependencies: r$11(6354, 3, "Project_0_is_up_to_date_with_d_ts_files_from_its_dependencies_6354", "Project '{0}' is up to date with .d.ts files from its dependencies"),
	Projects_in_this_build_Colon_0: r$11(6355, 3, "Projects_in_this_build_Colon_0_6355", "Projects in this build: {0}"),
	A_non_dry_build_would_delete_the_following_files_Colon_0: r$11(6356, 3, "A_non_dry_build_would_delete_the_following_files_Colon_0_6356", "A non-dry build would delete the following files: {0}"),
	A_non_dry_build_would_build_project_0: r$11(6357, 3, "A_non_dry_build_would_build_project_0_6357", "A non-dry build would build project '{0}'"),
	Building_project_0: r$11(6358, 3, "Building_project_0_6358", "Building project '{0}'..."),
	Updating_output_timestamps_of_project_0: r$11(6359, 3, "Updating_output_timestamps_of_project_0_6359", "Updating output timestamps of project '{0}'..."),
	Project_0_is_up_to_date: r$11(6361, 3, "Project_0_is_up_to_date_6361", "Project '{0}' is up to date"),
	Skipping_build_of_project_0_because_its_dependency_1_has_errors: r$11(6362, 3, "Skipping_build_of_project_0_because_its_dependency_1_has_errors_6362", "Skipping build of project '{0}' because its dependency '{1}' has errors"),
	Project_0_can_t_be_built_because_its_dependency_1_has_errors: r$11(6363, 3, "Project_0_can_t_be_built_because_its_dependency_1_has_errors_6363", "Project '{0}' can't be built because its dependency '{1}' has errors"),
	Build_one_or_more_projects_and_their_dependencies_if_out_of_date: r$11(6364, 3, "Build_one_or_more_projects_and_their_dependencies_if_out_of_date_6364", "Build one or more projects and their dependencies, if out of date"),
	Delete_the_outputs_of_all_projects: r$11(6365, 3, "Delete_the_outputs_of_all_projects_6365", "Delete the outputs of all projects."),
	Show_what_would_be_built_or_deleted_if_specified_with_clean: r$11(6367, 3, "Show_what_would_be_built_or_deleted_if_specified_with_clean_6367", "Show what would be built (or deleted, if specified with '--clean')"),
	Option_build_must_be_the_first_command_line_argument: r$11(6369, 1, "Option_build_must_be_the_first_command_line_argument_6369", "Option '--build' must be the first command line argument."),
	Options_0_and_1_cannot_be_combined: r$11(6370, 1, "Options_0_and_1_cannot_be_combined_6370", "Options '{0}' and '{1}' cannot be combined."),
	Updating_unchanged_output_timestamps_of_project_0: r$11(6371, 3, "Updating_unchanged_output_timestamps_of_project_0_6371", "Updating unchanged output timestamps of project '{0}'..."),
	A_non_dry_build_would_update_timestamps_for_output_of_project_0: r$11(6374, 3, "A_non_dry_build_would_update_timestamps_for_output_of_project_0_6374", "A non-dry build would update timestamps for output of project '{0}'"),
	Cannot_write_file_0_because_it_will_overwrite_tsbuildinfo_file_generated_by_referenced_project_1: r$11(6377, 1, "Cannot_write_file_0_because_it_will_overwrite_tsbuildinfo_file_generated_by_referenced_project_1_6377", "Cannot write file '{0}' because it will overwrite '.tsbuildinfo' file generated by referenced project '{1}'"),
	Composite_projects_may_not_disable_incremental_compilation: r$11(6379, 1, "Composite_projects_may_not_disable_incremental_compilation_6379", "Composite projects may not disable incremental compilation."),
	Specify_file_to_store_incremental_compilation_information: r$11(6380, 3, "Specify_file_to_store_incremental_compilation_information_6380", "Specify file to store incremental compilation information"),
	Project_0_is_out_of_date_because_output_for_it_was_generated_with_version_1_that_differs_with_current_version_2: r$11(6381, 3, "Project_0_is_out_of_date_because_output_for_it_was_generated_with_version_1_that_differs_with_curren_6381", "Project '{0}' is out of date because output for it was generated with version '{1}' that differs with current version '{2}'"),
	Skipping_build_of_project_0_because_its_dependency_1_was_not_built: r$11(6382, 3, "Skipping_build_of_project_0_because_its_dependency_1_was_not_built_6382", "Skipping build of project '{0}' because its dependency '{1}' was not built"),
	Project_0_can_t_be_built_because_its_dependency_1_was_not_built: r$11(6383, 3, "Project_0_can_t_be_built_because_its_dependency_1_was_not_built_6383", "Project '{0}' can't be built because its dependency '{1}' was not built"),
	Have_recompiles_in_incremental_and_watch_assume_that_changes_within_a_file_will_only_affect_files_directly_depending_on_it: r$11(6384, 3, "Have_recompiles_in_incremental_and_watch_assume_that_changes_within_a_file_will_only_affect_files_di_6384", "Have recompiles in '--incremental' and '--watch' assume that changes within a file will only affect files directly depending on it."),
	_0_is_deprecated: r$11(6385, 2, "_0_is_deprecated_6385", "'{0}' is deprecated.", void 0, void 0, !0),
	Performance_timings_for_diagnostics_or_extendedDiagnostics_are_not_available_in_this_session_A_native_implementation_of_the_Web_Performance_API_could_not_be_found: r$11(6386, 3, "Performance_timings_for_diagnostics_or_extendedDiagnostics_are_not_available_in_this_session_A_nativ_6386", "Performance timings for '--diagnostics' or '--extendedDiagnostics' are not available in this session. A native implementation of the Web Performance API could not be found."),
	The_signature_0_of_1_is_deprecated: r$11(6387, 2, "The_signature_0_of_1_is_deprecated_6387", "The signature '{0}' of '{1}' is deprecated.", void 0, void 0, !0),
	Project_0_is_being_forcibly_rebuilt: r$11(6388, 3, "Project_0_is_being_forcibly_rebuilt_6388", "Project '{0}' is being forcibly rebuilt"),
	Reusing_resolution_of_module_0_from_1_of_old_program_it_was_not_resolved: r$11(6389, 3, "Reusing_resolution_of_module_0_from_1_of_old_program_it_was_not_resolved_6389", "Reusing resolution of module '{0}' from '{1}' of old program, it was not resolved."),
	Reusing_resolution_of_type_reference_directive_0_from_1_of_old_program_it_was_successfully_resolved_to_2: r$11(6390, 3, "Reusing_resolution_of_type_reference_directive_0_from_1_of_old_program_it_was_successfully_resolved__6390", "Reusing resolution of type reference directive '{0}' from '{1}' of old program, it was successfully resolved to '{2}'."),
	Reusing_resolution_of_type_reference_directive_0_from_1_of_old_program_it_was_successfully_resolved_to_2_with_Package_ID_3: r$11(6391, 3, "Reusing_resolution_of_type_reference_directive_0_from_1_of_old_program_it_was_successfully_resolved__6391", "Reusing resolution of type reference directive '{0}' from '{1}' of old program, it was successfully resolved to '{2}' with Package ID '{3}'."),
	Reusing_resolution_of_type_reference_directive_0_from_1_of_old_program_it_was_not_resolved: r$11(6392, 3, "Reusing_resolution_of_type_reference_directive_0_from_1_of_old_program_it_was_not_resolved_6392", "Reusing resolution of type reference directive '{0}' from '{1}' of old program, it was not resolved."),
	Reusing_resolution_of_module_0_from_1_found_in_cache_from_location_2_it_was_successfully_resolved_to_3: r$11(6393, 3, "Reusing_resolution_of_module_0_from_1_found_in_cache_from_location_2_it_was_successfully_resolved_to_6393", "Reusing resolution of module '{0}' from '{1}' found in cache from location '{2}', it was successfully resolved to '{3}'."),
	Reusing_resolution_of_module_0_from_1_found_in_cache_from_location_2_it_was_successfully_resolved_to_3_with_Package_ID_4: r$11(6394, 3, "Reusing_resolution_of_module_0_from_1_found_in_cache_from_location_2_it_was_successfully_resolved_to_6394", "Reusing resolution of module '{0}' from '{1}' found in cache from location '{2}', it was successfully resolved to '{3}' with Package ID '{4}'."),
	Reusing_resolution_of_module_0_from_1_found_in_cache_from_location_2_it_was_not_resolved: r$11(6395, 3, "Reusing_resolution_of_module_0_from_1_found_in_cache_from_location_2_it_was_not_resolved_6395", "Reusing resolution of module '{0}' from '{1}' found in cache from location '{2}', it was not resolved."),
	Reusing_resolution_of_type_reference_directive_0_from_1_found_in_cache_from_location_2_it_was_successfully_resolved_to_3: r$11(6396, 3, "Reusing_resolution_of_type_reference_directive_0_from_1_found_in_cache_from_location_2_it_was_succes_6396", "Reusing resolution of type reference directive '{0}' from '{1}' found in cache from location '{2}', it was successfully resolved to '{3}'."),
	Reusing_resolution_of_type_reference_directive_0_from_1_found_in_cache_from_location_2_it_was_successfully_resolved_to_3_with_Package_ID_4: r$11(6397, 3, "Reusing_resolution_of_type_reference_directive_0_from_1_found_in_cache_from_location_2_it_was_succes_6397", "Reusing resolution of type reference directive '{0}' from '{1}' found in cache from location '{2}', it was successfully resolved to '{3}' with Package ID '{4}'."),
	Reusing_resolution_of_type_reference_directive_0_from_1_found_in_cache_from_location_2_it_was_not_resolved: r$11(6398, 3, "Reusing_resolution_of_type_reference_directive_0_from_1_found_in_cache_from_location_2_it_was_not_re_6398", "Reusing resolution of type reference directive '{0}' from '{1}' found in cache from location '{2}', it was not resolved."),
	Project_0_is_out_of_date_because_buildinfo_file_1_indicates_that_some_of_the_changes_were_not_emitted: r$11(6399, 3, "Project_0_is_out_of_date_because_buildinfo_file_1_indicates_that_some_of_the_changes_were_not_emitte_6399", "Project '{0}' is out of date because buildinfo file '{1}' indicates that some of the changes were not emitted"),
	Project_0_is_up_to_date_but_needs_to_update_timestamps_of_output_files_that_are_older_than_input_files: r$11(6400, 3, "Project_0_is_up_to_date_but_needs_to_update_timestamps_of_output_files_that_are_older_than_input_fil_6400", "Project '{0}' is up to date but needs to update timestamps of output files that are older than input files"),
	Project_0_is_out_of_date_because_there_was_error_reading_file_1: r$11(6401, 3, "Project_0_is_out_of_date_because_there_was_error_reading_file_1_6401", "Project '{0}' is out of date because there was error reading file '{1}'"),
	Resolving_in_0_mode_with_conditions_1: r$11(6402, 3, "Resolving_in_0_mode_with_conditions_1_6402", "Resolving in {0} mode with conditions {1}."),
	Matched_0_condition_1: r$11(6403, 3, "Matched_0_condition_1_6403", "Matched '{0}' condition '{1}'."),
	Using_0_subpath_1_with_target_2: r$11(6404, 3, "Using_0_subpath_1_with_target_2_6404", "Using '{0}' subpath '{1}' with target '{2}'."),
	Saw_non_matching_condition_0: r$11(6405, 3, "Saw_non_matching_condition_0_6405", "Saw non-matching condition '{0}'."),
	Project_0_is_out_of_date_because_buildinfo_file_1_indicates_there_is_change_in_compilerOptions: r$11(6406, 3, "Project_0_is_out_of_date_because_buildinfo_file_1_indicates_there_is_change_in_compilerOptions_6406", "Project '{0}' is out of date because buildinfo file '{1}' indicates there is change in compilerOptions"),
	Allow_imports_to_include_TypeScript_file_extensions_Requires_moduleResolution_bundler_and_either_noEmit_or_emitDeclarationOnly_to_be_set: r$11(6407, 3, "Allow_imports_to_include_TypeScript_file_extensions_Requires_moduleResolution_bundler_and_either_noE_6407", "Allow imports to include TypeScript file extensions. Requires '--moduleResolution bundler' and either '--noEmit' or '--emitDeclarationOnly' to be set."),
	Use_the_package_json_exports_field_when_resolving_package_imports: r$11(6408, 3, "Use_the_package_json_exports_field_when_resolving_package_imports_6408", "Use the package.json 'exports' field when resolving package imports."),
	Use_the_package_json_imports_field_when_resolving_imports: r$11(6409, 3, "Use_the_package_json_imports_field_when_resolving_imports_6409", "Use the package.json 'imports' field when resolving imports."),
	Conditions_to_set_in_addition_to_the_resolver_specific_defaults_when_resolving_imports: r$11(6410, 3, "Conditions_to_set_in_addition_to_the_resolver_specific_defaults_when_resolving_imports_6410", "Conditions to set in addition to the resolver-specific defaults when resolving imports."),
	true_when_moduleResolution_is_node16_nodenext_or_bundler_otherwise_false: r$11(6411, 3, "true_when_moduleResolution_is_node16_nodenext_or_bundler_otherwise_false_6411", "`true` when 'moduleResolution' is 'node16', 'nodenext', or 'bundler'; otherwise `false`."),
	Project_0_is_out_of_date_because_buildinfo_file_1_indicates_that_file_2_was_root_file_of_compilation_but_not_any_more: r$11(6412, 3, "Project_0_is_out_of_date_because_buildinfo_file_1_indicates_that_file_2_was_root_file_of_compilation_6412", "Project '{0}' is out of date because buildinfo file '{1}' indicates that file '{2}' was root file of compilation but not any more."),
	Entering_conditional_exports: r$11(6413, 3, "Entering_conditional_exports_6413", "Entering conditional exports."),
	Resolved_under_condition_0: r$11(6414, 3, "Resolved_under_condition_0_6414", "Resolved under condition '{0}'."),
	Failed_to_resolve_under_condition_0: r$11(6415, 3, "Failed_to_resolve_under_condition_0_6415", "Failed to resolve under condition '{0}'."),
	Exiting_conditional_exports: r$11(6416, 3, "Exiting_conditional_exports_6416", "Exiting conditional exports."),
	Searching_all_ancestor_node_modules_directories_for_preferred_extensions_Colon_0: r$11(6417, 3, "Searching_all_ancestor_node_modules_directories_for_preferred_extensions_Colon_0_6417", "Searching all ancestor node_modules directories for preferred extensions: {0}."),
	Searching_all_ancestor_node_modules_directories_for_fallback_extensions_Colon_0: r$11(6418, 3, "Searching_all_ancestor_node_modules_directories_for_fallback_extensions_Colon_0_6418", "Searching all ancestor node_modules directories for fallback extensions: {0}."),
	Project_0_is_out_of_date_because_buildinfo_file_1_indicates_that_program_needs_to_report_errors: r$11(6419, 3, "Project_0_is_out_of_date_because_buildinfo_file_1_indicates_that_program_needs_to_report_errors_6419", "Project '{0}' is out of date because buildinfo file '{1}' indicates that program needs to report errors."),
	Project_0_is_out_of_date_because_1: r$11(6420, 3, "Project_0_is_out_of_date_because_1_6420", "Project '{0}' is out of date because {1}."),
	Rewrite_ts_tsx_mts_and_cts_file_extensions_in_relative_import_paths_to_their_JavaScript_equivalent_in_output_files: r$11(6421, 3, "Rewrite_ts_tsx_mts_and_cts_file_extensions_in_relative_import_paths_to_their_JavaScript_equivalent_i_6421", "Rewrite '.ts', '.tsx', '.mts', and '.cts' file extensions in relative import paths to their JavaScript equivalent in output files."),
	The_expected_type_comes_from_property_0_which_is_declared_here_on_type_1: r$11(6500, 3, "The_expected_type_comes_from_property_0_which_is_declared_here_on_type_1_6500", "The expected type comes from property '{0}' which is declared here on type '{1}'"),
	The_expected_type_comes_from_this_index_signature: r$11(6501, 3, "The_expected_type_comes_from_this_index_signature_6501", "The expected type comes from this index signature."),
	The_expected_type_comes_from_the_return_type_of_this_signature: r$11(6502, 3, "The_expected_type_comes_from_the_return_type_of_this_signature_6502", "The expected type comes from the return type of this signature."),
	Print_names_of_files_that_are_part_of_the_compilation_and_then_stop_processing: r$11(6503, 3, "Print_names_of_files_that_are_part_of_the_compilation_and_then_stop_processing_6503", "Print names of files that are part of the compilation and then stop processing."),
	File_0_is_a_JavaScript_file_Did_you_mean_to_enable_the_allowJs_option: r$11(6504, 1, "File_0_is_a_JavaScript_file_Did_you_mean_to_enable_the_allowJs_option_6504", "File '{0}' is a JavaScript file. Did you mean to enable the 'allowJs' option?"),
	Print_names_of_files_and_the_reason_they_are_part_of_the_compilation: r$11(6505, 3, "Print_names_of_files_and_the_reason_they_are_part_of_the_compilation_6505", "Print names of files and the reason they are part of the compilation."),
	Consider_adding_a_declare_modifier_to_this_class: r$11(6506, 3, "Consider_adding_a_declare_modifier_to_this_class_6506", "Consider adding a 'declare' modifier to this class."),
	Allow_JavaScript_files_to_be_a_part_of_your_program_Use_the_checkJS_option_to_get_errors_from_these_files: r$11(6600, 3, "Allow_JavaScript_files_to_be_a_part_of_your_program_Use_the_checkJS_option_to_get_errors_from_these__6600", "Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files."),
	Allow_import_x_from_y_when_a_module_doesn_t_have_a_default_export: r$11(6601, 3, "Allow_import_x_from_y_when_a_module_doesn_t_have_a_default_export_6601", "Allow 'import x from y' when a module doesn't have a default export."),
	Allow_accessing_UMD_globals_from_modules: r$11(6602, 3, "Allow_accessing_UMD_globals_from_modules_6602", "Allow accessing UMD globals from modules."),
	Disable_error_reporting_for_unreachable_code: r$11(6603, 3, "Disable_error_reporting_for_unreachable_code_6603", "Disable error reporting for unreachable code."),
	Disable_error_reporting_for_unused_labels: r$11(6604, 3, "Disable_error_reporting_for_unused_labels_6604", "Disable error reporting for unused labels."),
	Ensure_use_strict_is_always_emitted: r$11(6605, 3, "Ensure_use_strict_is_always_emitted_6605", "Ensure 'use strict' is always emitted."),
	Have_recompiles_in_projects_that_use_incremental_and_watch_mode_assume_that_changes_within_a_file_will_only_affect_files_directly_depending_on_it: r$11(6606, 3, "Have_recompiles_in_projects_that_use_incremental_and_watch_mode_assume_that_changes_within_a_file_wi_6606", "Have recompiles in projects that use 'incremental' and 'watch' mode assume that changes within a file will only affect files directly depending on it."),
	Specify_the_base_directory_to_resolve_non_relative_module_names: r$11(6607, 3, "Specify_the_base_directory_to_resolve_non_relative_module_names_6607", "Specify the base directory to resolve non-relative module names."),
	No_longer_supported_In_early_versions_manually_set_the_text_encoding_for_reading_files: r$11(6608, 3, "No_longer_supported_In_early_versions_manually_set_the_text_encoding_for_reading_files_6608", "No longer supported. In early versions, manually set the text encoding for reading files."),
	Enable_error_reporting_in_type_checked_JavaScript_files: r$11(6609, 3, "Enable_error_reporting_in_type_checked_JavaScript_files_6609", "Enable error reporting in type-checked JavaScript files."),
	Enable_constraints_that_allow_a_TypeScript_project_to_be_used_with_project_references: r$11(6611, 3, "Enable_constraints_that_allow_a_TypeScript_project_to_be_used_with_project_references_6611", "Enable constraints that allow a TypeScript project to be used with project references."),
	Generate_d_ts_files_from_TypeScript_and_JavaScript_files_in_your_project: r$11(6612, 3, "Generate_d_ts_files_from_TypeScript_and_JavaScript_files_in_your_project_6612", "Generate .d.ts files from TypeScript and JavaScript files in your project."),
	Specify_the_output_directory_for_generated_declaration_files: r$11(6613, 3, "Specify_the_output_directory_for_generated_declaration_files_6613", "Specify the output directory for generated declaration files."),
	Create_sourcemaps_for_d_ts_files: r$11(6614, 3, "Create_sourcemaps_for_d_ts_files_6614", "Create sourcemaps for d.ts files."),
	Output_compiler_performance_information_after_building: r$11(6615, 3, "Output_compiler_performance_information_after_building_6615", "Output compiler performance information after building."),
	Disables_inference_for_type_acquisition_by_looking_at_filenames_in_a_project: r$11(6616, 3, "Disables_inference_for_type_acquisition_by_looking_at_filenames_in_a_project_6616", "Disables inference for type acquisition by looking at filenames in a project."),
	Reduce_the_number_of_projects_loaded_automatically_by_TypeScript: r$11(6617, 3, "Reduce_the_number_of_projects_loaded_automatically_by_TypeScript_6617", "Reduce the number of projects loaded automatically by TypeScript."),
	Remove_the_20mb_cap_on_total_source_code_size_for_JavaScript_files_in_the_TypeScript_language_server: r$11(6618, 3, "Remove_the_20mb_cap_on_total_source_code_size_for_JavaScript_files_in_the_TypeScript_language_server_6618", "Remove the 20mb cap on total source code size for JavaScript files in the TypeScript language server."),
	Opt_a_project_out_of_multi_project_reference_checking_when_editing: r$11(6619, 3, "Opt_a_project_out_of_multi_project_reference_checking_when_editing_6619", "Opt a project out of multi-project reference checking when editing."),
	Disable_preferring_source_files_instead_of_declaration_files_when_referencing_composite_projects: r$11(6620, 3, "Disable_preferring_source_files_instead_of_declaration_files_when_referencing_composite_projects_6620", "Disable preferring source files instead of declaration files when referencing composite projects."),
	Emit_more_compliant_but_verbose_and_less_performant_JavaScript_for_iteration: r$11(6621, 3, "Emit_more_compliant_but_verbose_and_less_performant_JavaScript_for_iteration_6621", "Emit more compliant, but verbose and less performant JavaScript for iteration."),
	Emit_a_UTF_8_Byte_Order_Mark_BOM_in_the_beginning_of_output_files: r$11(6622, 3, "Emit_a_UTF_8_Byte_Order_Mark_BOM_in_the_beginning_of_output_files_6622", "Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files."),
	Only_output_d_ts_files_and_not_JavaScript_files: r$11(6623, 3, "Only_output_d_ts_files_and_not_JavaScript_files_6623", "Only output d.ts files and not JavaScript files."),
	Emit_design_type_metadata_for_decorated_declarations_in_source_files: r$11(6624, 3, "Emit_design_type_metadata_for_decorated_declarations_in_source_files_6624", "Emit design-type metadata for decorated declarations in source files."),
	Disable_the_type_acquisition_for_JavaScript_projects: r$11(6625, 3, "Disable_the_type_acquisition_for_JavaScript_projects_6625", "Disable the type acquisition for JavaScript projects"),
	Emit_additional_JavaScript_to_ease_support_for_importing_CommonJS_modules_This_enables_allowSyntheticDefaultImports_for_type_compatibility: r$11(6626, 3, "Emit_additional_JavaScript_to_ease_support_for_importing_CommonJS_modules_This_enables_allowSyntheti_6626", "Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility."),
	Filters_results_from_the_include_option: r$11(6627, 3, "Filters_results_from_the_include_option_6627", "Filters results from the `include` option."),
	Remove_a_list_of_directories_from_the_watch_process: r$11(6628, 3, "Remove_a_list_of_directories_from_the_watch_process_6628", "Remove a list of directories from the watch process."),
	Remove_a_list_of_files_from_the_watch_mode_s_processing: r$11(6629, 3, "Remove_a_list_of_files_from_the_watch_mode_s_processing_6629", "Remove a list of files from the watch mode's processing."),
	Enable_experimental_support_for_legacy_experimental_decorators: r$11(6630, 3, "Enable_experimental_support_for_legacy_experimental_decorators_6630", "Enable experimental support for legacy experimental decorators."),
	Print_files_read_during_the_compilation_including_why_it_was_included: r$11(6631, 3, "Print_files_read_during_the_compilation_including_why_it_was_included_6631", "Print files read during the compilation including why it was included."),
	Output_more_detailed_compiler_performance_information_after_building: r$11(6632, 3, "Output_more_detailed_compiler_performance_information_after_building_6632", "Output more detailed compiler performance information after building."),
	Specify_one_or_more_path_or_node_module_references_to_base_configuration_files_from_which_settings_are_inherited: r$11(6633, 3, "Specify_one_or_more_path_or_node_module_references_to_base_configuration_files_from_which_settings_a_6633", "Specify one or more path or node module references to base configuration files from which settings are inherited."),
	Specify_what_approach_the_watcher_should_use_if_the_system_runs_out_of_native_file_watchers: r$11(6634, 3, "Specify_what_approach_the_watcher_should_use_if_the_system_runs_out_of_native_file_watchers_6634", "Specify what approach the watcher should use if the system runs out of native file watchers."),
	Include_a_list_of_files_This_does_not_support_glob_patterns_as_opposed_to_include: r$11(6635, 3, "Include_a_list_of_files_This_does_not_support_glob_patterns_as_opposed_to_include_6635", "Include a list of files. This does not support glob patterns, as opposed to `include`."),
	Build_all_projects_including_those_that_appear_to_be_up_to_date: r$11(6636, 3, "Build_all_projects_including_those_that_appear_to_be_up_to_date_6636", "Build all projects, including those that appear to be up to date."),
	Ensure_that_casing_is_correct_in_imports: r$11(6637, 3, "Ensure_that_casing_is_correct_in_imports_6637", "Ensure that casing is correct in imports."),
	Emit_a_v8_CPU_profile_of_the_compiler_run_for_debugging: r$11(6638, 3, "Emit_a_v8_CPU_profile_of_the_compiler_run_for_debugging_6638", "Emit a v8 CPU profile of the compiler run for debugging."),
	Allow_importing_helper_functions_from_tslib_once_per_project_instead_of_including_them_per_file: r$11(6639, 3, "Allow_importing_helper_functions_from_tslib_once_per_project_instead_of_including_them_per_file_6639", "Allow importing helper functions from tslib once per project, instead of including them per-file."),
	Skip_building_downstream_projects_on_error_in_upstream_project: r$11(6640, 3, "Skip_building_downstream_projects_on_error_in_upstream_project_6640", "Skip building downstream projects on error in upstream project."),
	Specify_a_list_of_glob_patterns_that_match_files_to_be_included_in_compilation: r$11(6641, 3, "Specify_a_list_of_glob_patterns_that_match_files_to_be_included_in_compilation_6641", "Specify a list of glob patterns that match files to be included in compilation."),
	Save_tsbuildinfo_files_to_allow_for_incremental_compilation_of_projects: r$11(6642, 3, "Save_tsbuildinfo_files_to_allow_for_incremental_compilation_of_projects_6642", "Save .tsbuildinfo files to allow for incremental compilation of projects."),
	Include_sourcemap_files_inside_the_emitted_JavaScript: r$11(6643, 3, "Include_sourcemap_files_inside_the_emitted_JavaScript_6643", "Include sourcemap files inside the emitted JavaScript."),
	Include_source_code_in_the_sourcemaps_inside_the_emitted_JavaScript: r$11(6644, 3, "Include_source_code_in_the_sourcemaps_inside_the_emitted_JavaScript_6644", "Include source code in the sourcemaps inside the emitted JavaScript."),
	Ensure_that_each_file_can_be_safely_transpiled_without_relying_on_other_imports: r$11(6645, 3, "Ensure_that_each_file_can_be_safely_transpiled_without_relying_on_other_imports_6645", "Ensure that each file can be safely transpiled without relying on other imports."),
	Specify_what_JSX_code_is_generated: r$11(6646, 3, "Specify_what_JSX_code_is_generated_6646", "Specify what JSX code is generated."),
	Specify_the_JSX_factory_function_used_when_targeting_React_JSX_emit_e_g_React_createElement_or_h: r$11(6647, 3, "Specify_the_JSX_factory_function_used_when_targeting_React_JSX_emit_e_g_React_createElement_or_h_6647", "Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'."),
	Specify_the_JSX_Fragment_reference_used_for_fragments_when_targeting_React_JSX_emit_e_g_React_Fragment_or_Fragment: r$11(6648, 3, "Specify_the_JSX_Fragment_reference_used_for_fragments_when_targeting_React_JSX_emit_e_g_React_Fragme_6648", "Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'."),
	Specify_module_specifier_used_to_import_the_JSX_factory_functions_when_using_jsx_Colon_react_jsx_Asterisk: r$11(6649, 3, "Specify_module_specifier_used_to_import_the_JSX_factory_functions_when_using_jsx_Colon_react_jsx_Ast_6649", "Specify module specifier used to import the JSX factory functions when using 'jsx: react-jsx*'."),
	Make_keyof_only_return_strings_instead_of_string_numbers_or_symbols_Legacy_option: r$11(6650, 3, "Make_keyof_only_return_strings_instead_of_string_numbers_or_symbols_Legacy_option_6650", "Make keyof only return strings instead of string, numbers or symbols. Legacy option."),
	Specify_a_set_of_bundled_library_declaration_files_that_describe_the_target_runtime_environment: r$11(6651, 3, "Specify_a_set_of_bundled_library_declaration_files_that_describe_the_target_runtime_environment_6651", "Specify a set of bundled library declaration files that describe the target runtime environment."),
	Print_the_names_of_emitted_files_after_a_compilation: r$11(6652, 3, "Print_the_names_of_emitted_files_after_a_compilation_6652", "Print the names of emitted files after a compilation."),
	Print_all_of_the_files_read_during_the_compilation: r$11(6653, 3, "Print_all_of_the_files_read_during_the_compilation_6653", "Print all of the files read during the compilation."),
	Set_the_language_of_the_messaging_from_TypeScript_This_does_not_affect_emit: r$11(6654, 3, "Set_the_language_of_the_messaging_from_TypeScript_This_does_not_affect_emit_6654", "Set the language of the messaging from TypeScript. This does not affect emit."),
	Specify_the_location_where_debugger_should_locate_map_files_instead_of_generated_locations: r$11(6655, 3, "Specify_the_location_where_debugger_should_locate_map_files_instead_of_generated_locations_6655", "Specify the location where debugger should locate map files instead of generated locations."),
	Specify_the_maximum_folder_depth_used_for_checking_JavaScript_files_from_node_modules_Only_applicable_with_allowJs: r$11(6656, 3, "Specify_the_maximum_folder_depth_used_for_checking_JavaScript_files_from_node_modules_Only_applicabl_6656", "Specify the maximum folder depth used for checking JavaScript files from 'node_modules'. Only applicable with 'allowJs'."),
	Specify_what_module_code_is_generated: r$11(6657, 3, "Specify_what_module_code_is_generated_6657", "Specify what module code is generated."),
	Specify_how_TypeScript_looks_up_a_file_from_a_given_module_specifier: r$11(6658, 3, "Specify_how_TypeScript_looks_up_a_file_from_a_given_module_specifier_6658", "Specify how TypeScript looks up a file from a given module specifier."),
	Set_the_newline_character_for_emitting_files: r$11(6659, 3, "Set_the_newline_character_for_emitting_files_6659", "Set the newline character for emitting files."),
	Disable_emitting_files_from_a_compilation: r$11(6660, 3, "Disable_emitting_files_from_a_compilation_6660", "Disable emitting files from a compilation."),
	Disable_generating_custom_helper_functions_like_extends_in_compiled_output: r$11(6661, 3, "Disable_generating_custom_helper_functions_like_extends_in_compiled_output_6661", "Disable generating custom helper functions like '__extends' in compiled output."),
	Disable_emitting_files_if_any_type_checking_errors_are_reported: r$11(6662, 3, "Disable_emitting_files_if_any_type_checking_errors_are_reported_6662", "Disable emitting files if any type checking errors are reported."),
	Disable_truncating_types_in_error_messages: r$11(6663, 3, "Disable_truncating_types_in_error_messages_6663", "Disable truncating types in error messages."),
	Enable_error_reporting_for_fallthrough_cases_in_switch_statements: r$11(6664, 3, "Enable_error_reporting_for_fallthrough_cases_in_switch_statements_6664", "Enable error reporting for fallthrough cases in switch statements."),
	Enable_error_reporting_for_expressions_and_declarations_with_an_implied_any_type: r$11(6665, 3, "Enable_error_reporting_for_expressions_and_declarations_with_an_implied_any_type_6665", "Enable error reporting for expressions and declarations with an implied 'any' type."),
	Ensure_overriding_members_in_derived_classes_are_marked_with_an_override_modifier: r$11(6666, 3, "Ensure_overriding_members_in_derived_classes_are_marked_with_an_override_modifier_6666", "Ensure overriding members in derived classes are marked with an override modifier."),
	Enable_error_reporting_for_codepaths_that_do_not_explicitly_return_in_a_function: r$11(6667, 3, "Enable_error_reporting_for_codepaths_that_do_not_explicitly_return_in_a_function_6667", "Enable error reporting for codepaths that do not explicitly return in a function."),
	Enable_error_reporting_when_this_is_given_the_type_any: r$11(6668, 3, "Enable_error_reporting_when_this_is_given_the_type_any_6668", "Enable error reporting when 'this' is given the type 'any'."),
	Disable_adding_use_strict_directives_in_emitted_JavaScript_files: r$11(6669, 3, "Disable_adding_use_strict_directives_in_emitted_JavaScript_files_6669", "Disable adding 'use strict' directives in emitted JavaScript files."),
	Disable_including_any_library_files_including_the_default_lib_d_ts: r$11(6670, 3, "Disable_including_any_library_files_including_the_default_lib_d_ts_6670", "Disable including any library files, including the default lib.d.ts."),
	Enforces_using_indexed_accessors_for_keys_declared_using_an_indexed_type: r$11(6671, 3, "Enforces_using_indexed_accessors_for_keys_declared_using_an_indexed_type_6671", "Enforces using indexed accessors for keys declared using an indexed type."),
	Disallow_import_s_require_s_or_reference_s_from_expanding_the_number_of_files_TypeScript_should_add_to_a_project: r$11(6672, 3, "Disallow_import_s_require_s_or_reference_s_from_expanding_the_number_of_files_TypeScript_should_add__6672", "Disallow 'import's, 'require's or '<reference>'s from expanding the number of files TypeScript should add to a project."),
	Disable_strict_checking_of_generic_signatures_in_function_types: r$11(6673, 3, "Disable_strict_checking_of_generic_signatures_in_function_types_6673", "Disable strict checking of generic signatures in function types."),
	Add_undefined_to_a_type_when_accessed_using_an_index: r$11(6674, 3, "Add_undefined_to_a_type_when_accessed_using_an_index_6674", "Add 'undefined' to a type when accessed using an index."),
	Enable_error_reporting_when_local_variables_aren_t_read: r$11(6675, 3, "Enable_error_reporting_when_local_variables_aren_t_read_6675", "Enable error reporting when local variables aren't read."),
	Raise_an_error_when_a_function_parameter_isn_t_read: r$11(6676, 3, "Raise_an_error_when_a_function_parameter_isn_t_read_6676", "Raise an error when a function parameter isn't read."),
	Deprecated_setting_Use_outFile_instead: r$11(6677, 3, "Deprecated_setting_Use_outFile_instead_6677", "Deprecated setting. Use 'outFile' instead."),
	Specify_an_output_folder_for_all_emitted_files: r$11(6678, 3, "Specify_an_output_folder_for_all_emitted_files_6678", "Specify an output folder for all emitted files."),
	Specify_a_file_that_bundles_all_outputs_into_one_JavaScript_file_If_declaration_is_true_also_designates_a_file_that_bundles_all_d_ts_output: r$11(6679, 3, "Specify_a_file_that_bundles_all_outputs_into_one_JavaScript_file_If_declaration_is_true_also_designa_6679", "Specify a file that bundles all outputs into one JavaScript file. If 'declaration' is true, also designates a file that bundles all .d.ts output."),
	Specify_a_set_of_entries_that_re_map_imports_to_additional_lookup_locations: r$11(6680, 3, "Specify_a_set_of_entries_that_re_map_imports_to_additional_lookup_locations_6680", "Specify a set of entries that re-map imports to additional lookup locations."),
	Specify_a_list_of_language_service_plugins_to_include: r$11(6681, 3, "Specify_a_list_of_language_service_plugins_to_include_6681", "Specify a list of language service plugins to include."),
	Disable_erasing_const_enum_declarations_in_generated_code: r$11(6682, 3, "Disable_erasing_const_enum_declarations_in_generated_code_6682", "Disable erasing 'const enum' declarations in generated code."),
	Disable_resolving_symlinks_to_their_realpath_This_correlates_to_the_same_flag_in_node: r$11(6683, 3, "Disable_resolving_symlinks_to_their_realpath_This_correlates_to_the_same_flag_in_node_6683", "Disable resolving symlinks to their realpath. This correlates to the same flag in node."),
	Disable_wiping_the_console_in_watch_mode: r$11(6684, 3, "Disable_wiping_the_console_in_watch_mode_6684", "Disable wiping the console in watch mode."),
	Enable_color_and_formatting_in_TypeScript_s_output_to_make_compiler_errors_easier_to_read: r$11(6685, 3, "Enable_color_and_formatting_in_TypeScript_s_output_to_make_compiler_errors_easier_to_read_6685", "Enable color and formatting in TypeScript's output to make compiler errors easier to read."),
	Specify_the_object_invoked_for_createElement_This_only_applies_when_targeting_react_JSX_emit: r$11(6686, 3, "Specify_the_object_invoked_for_createElement_This_only_applies_when_targeting_react_JSX_emit_6686", "Specify the object invoked for 'createElement'. This only applies when targeting 'react' JSX emit."),
	Specify_an_array_of_objects_that_specify_paths_for_projects_Used_in_project_references: r$11(6687, 3, "Specify_an_array_of_objects_that_specify_paths_for_projects_Used_in_project_references_6687", "Specify an array of objects that specify paths for projects. Used in project references."),
	Disable_emitting_comments: r$11(6688, 3, "Disable_emitting_comments_6688", "Disable emitting comments."),
	Enable_importing_json_files: r$11(6689, 3, "Enable_importing_json_files_6689", "Enable importing .json files."),
	Specify_the_root_folder_within_your_source_files: r$11(6690, 3, "Specify_the_root_folder_within_your_source_files_6690", "Specify the root folder within your source files."),
	Allow_multiple_folders_to_be_treated_as_one_when_resolving_modules: r$11(6691, 3, "Allow_multiple_folders_to_be_treated_as_one_when_resolving_modules_6691", "Allow multiple folders to be treated as one when resolving modules."),
	Skip_type_checking_d_ts_files_that_are_included_with_TypeScript: r$11(6692, 3, "Skip_type_checking_d_ts_files_that_are_included_with_TypeScript_6692", "Skip type checking .d.ts files that are included with TypeScript."),
	Skip_type_checking_all_d_ts_files: r$11(6693, 3, "Skip_type_checking_all_d_ts_files_6693", "Skip type checking all .d.ts files."),
	Create_source_map_files_for_emitted_JavaScript_files: r$11(6694, 3, "Create_source_map_files_for_emitted_JavaScript_files_6694", "Create source map files for emitted JavaScript files."),
	Specify_the_root_path_for_debuggers_to_find_the_reference_source_code: r$11(6695, 3, "Specify_the_root_path_for_debuggers_to_find_the_reference_source_code_6695", "Specify the root path for debuggers to find the reference source code."),
	Check_that_the_arguments_for_bind_call_and_apply_methods_match_the_original_function: r$11(6697, 3, "Check_that_the_arguments_for_bind_call_and_apply_methods_match_the_original_function_6697", "Check that the arguments for 'bind', 'call', and 'apply' methods match the original function."),
	When_assigning_functions_check_to_ensure_parameters_and_the_return_values_are_subtype_compatible: r$11(6698, 3, "When_assigning_functions_check_to_ensure_parameters_and_the_return_values_are_subtype_compatible_6698", "When assigning functions, check to ensure parameters and the return values are subtype-compatible."),
	When_type_checking_take_into_account_null_and_undefined: r$11(6699, 3, "When_type_checking_take_into_account_null_and_undefined_6699", "When type checking, take into account 'null' and 'undefined'."),
	Check_for_class_properties_that_are_declared_but_not_set_in_the_constructor: r$11(6700, 3, "Check_for_class_properties_that_are_declared_but_not_set_in_the_constructor_6700", "Check for class properties that are declared but not set in the constructor."),
	Disable_emitting_declarations_that_have_internal_in_their_JSDoc_comments: r$11(6701, 3, "Disable_emitting_declarations_that_have_internal_in_their_JSDoc_comments_6701", "Disable emitting declarations that have '@internal' in their JSDoc comments."),
	Disable_reporting_of_excess_property_errors_during_the_creation_of_object_literals: r$11(6702, 3, "Disable_reporting_of_excess_property_errors_during_the_creation_of_object_literals_6702", "Disable reporting of excess property errors during the creation of object literals."),
	Suppress_noImplicitAny_errors_when_indexing_objects_that_lack_index_signatures: r$11(6703, 3, "Suppress_noImplicitAny_errors_when_indexing_objects_that_lack_index_signatures_6703", "Suppress 'noImplicitAny' errors when indexing objects that lack index signatures."),
	Synchronously_call_callbacks_and_update_the_state_of_directory_watchers_on_platforms_that_don_t_support_recursive_watching_natively: r$11(6704, 3, "Synchronously_call_callbacks_and_update_the_state_of_directory_watchers_on_platforms_that_don_t_supp_6704", "Synchronously call callbacks and update the state of directory watchers on platforms that don`t support recursive watching natively."),
	Set_the_JavaScript_language_version_for_emitted_JavaScript_and_include_compatible_library_declarations: r$11(6705, 3, "Set_the_JavaScript_language_version_for_emitted_JavaScript_and_include_compatible_library_declaratio_6705", "Set the JavaScript language version for emitted JavaScript and include compatible library declarations."),
	Log_paths_used_during_the_moduleResolution_process: r$11(6706, 3, "Log_paths_used_during_the_moduleResolution_process_6706", "Log paths used during the 'moduleResolution' process."),
	Specify_the_path_to_tsbuildinfo_incremental_compilation_file: r$11(6707, 3, "Specify_the_path_to_tsbuildinfo_incremental_compilation_file_6707", "Specify the path to .tsbuildinfo incremental compilation file."),
	Specify_options_for_automatic_acquisition_of_declaration_files: r$11(6709, 3, "Specify_options_for_automatic_acquisition_of_declaration_files_6709", "Specify options for automatic acquisition of declaration files."),
	Specify_multiple_folders_that_act_like_Slashnode_modules_Slash_types: r$11(6710, 3, "Specify_multiple_folders_that_act_like_Slashnode_modules_Slash_types_6710", "Specify multiple folders that act like './node_modules/@types'."),
	Specify_type_package_names_to_be_included_without_being_referenced_in_a_source_file: r$11(6711, 3, "Specify_type_package_names_to_be_included_without_being_referenced_in_a_source_file_6711", "Specify type package names to be included without being referenced in a source file."),
	Emit_ECMAScript_standard_compliant_class_fields: r$11(6712, 3, "Emit_ECMAScript_standard_compliant_class_fields_6712", "Emit ECMAScript-standard-compliant class fields."),
	Enable_verbose_logging: r$11(6713, 3, "Enable_verbose_logging_6713", "Enable verbose logging."),
	Specify_how_directories_are_watched_on_systems_that_lack_recursive_file_watching_functionality: r$11(6714, 3, "Specify_how_directories_are_watched_on_systems_that_lack_recursive_file_watching_functionality_6714", "Specify how directories are watched on systems that lack recursive file-watching functionality."),
	Specify_how_the_TypeScript_watch_mode_works: r$11(6715, 3, "Specify_how_the_TypeScript_watch_mode_works_6715", "Specify how the TypeScript watch mode works."),
	Require_undeclared_properties_from_index_signatures_to_use_element_accesses: r$11(6717, 3, "Require_undeclared_properties_from_index_signatures_to_use_element_accesses_6717", "Require undeclared properties from index signatures to use element accesses."),
	Specify_emit_Slashchecking_behavior_for_imports_that_are_only_used_for_types: r$11(6718, 3, "Specify_emit_Slashchecking_behavior_for_imports_that_are_only_used_for_types_6718", "Specify emit/checking behavior for imports that are only used for types."),
	Require_sufficient_annotation_on_exports_so_other_tools_can_trivially_generate_declaration_files: r$11(6719, 3, "Require_sufficient_annotation_on_exports_so_other_tools_can_trivially_generate_declaration_files_6719", "Require sufficient annotation on exports so other tools can trivially generate declaration files."),
	Built_in_iterators_are_instantiated_with_a_TReturn_type_of_undefined_instead_of_any: r$11(6720, 3, "Built_in_iterators_are_instantiated_with_a_TReturn_type_of_undefined_instead_of_any_6720", "Built-in iterators are instantiated with a 'TReturn' type of 'undefined' instead of 'any'."),
	Do_not_allow_runtime_constructs_that_are_not_part_of_ECMAScript: r$11(6721, 3, "Do_not_allow_runtime_constructs_that_are_not_part_of_ECMAScript_6721", "Do not allow runtime constructs that are not part of ECMAScript."),
	Default_catch_clause_variables_as_unknown_instead_of_any: r$11(6803, 3, "Default_catch_clause_variables_as_unknown_instead_of_any_6803", "Default catch clause variables as 'unknown' instead of 'any'."),
	Do_not_transform_or_elide_any_imports_or_exports_not_marked_as_type_only_ensuring_they_are_written_in_the_output_file_s_format_based_on_the_module_setting: r$11(6804, 3, "Do_not_transform_or_elide_any_imports_or_exports_not_marked_as_type_only_ensuring_they_are_written_i_6804", "Do not transform or elide any imports or exports not marked as type-only, ensuring they are written in the output file's format based on the 'module' setting."),
	Disable_full_type_checking_only_critical_parse_and_emit_errors_will_be_reported: r$11(6805, 3, "Disable_full_type_checking_only_critical_parse_and_emit_errors_will_be_reported_6805", "Disable full type checking (only critical parse and emit errors will be reported)."),
	Check_side_effect_imports: r$11(6806, 3, "Check_side_effect_imports_6806", "Check side effect imports."),
	This_operation_can_be_simplified_This_shift_is_identical_to_0_1_2: r$11(6807, 1, "This_operation_can_be_simplified_This_shift_is_identical_to_0_1_2_6807", "This operation can be simplified. This shift is identical to `{0} {1} {2}`."),
	Enable_lib_replacement: r$11(6808, 3, "Enable_lib_replacement_6808", "Enable lib replacement."),
	one_of_Colon: r$11(6900, 3, "one_of_Colon_6900", "one of:"),
	one_or_more_Colon: r$11(6901, 3, "one_or_more_Colon_6901", "one or more:"),
	type_Colon: r$11(6902, 3, "type_Colon_6902", "type:"),
	default_Colon: r$11(6903, 3, "default_Colon_6903", "default:"),
	module_system_or_esModuleInterop: r$11(6904, 3, "module_system_or_esModuleInterop_6904", "module === \"system\" or esModuleInterop"),
	false_unless_strict_is_set: r$11(6905, 3, "false_unless_strict_is_set_6905", "`false`, unless `strict` is set"),
	false_unless_composite_is_set: r$11(6906, 3, "false_unless_composite_is_set_6906", "`false`, unless `composite` is set"),
	node_modules_bower_components_jspm_packages_plus_the_value_of_outDir_if_one_is_specified: r$11(6907, 3, "node_modules_bower_components_jspm_packages_plus_the_value_of_outDir_if_one_is_specified_6907", "`[\"node_modules\", \"bower_components\", \"jspm_packages\"]`, plus the value of `outDir` if one is specified."),
	if_files_is_specified_otherwise_Asterisk_Asterisk_Slash_Asterisk: r$11(6908, 3, "if_files_is_specified_otherwise_Asterisk_Asterisk_Slash_Asterisk_6908", "`[]` if `files` is specified, otherwise `[\"**/*\"]`"),
	true_if_composite_false_otherwise: r$11(6909, 3, "true_if_composite_false_otherwise_6909", "`true` if `composite`, `false` otherwise"),
	module_AMD_or_UMD_or_System_or_ES6_then_Classic_Otherwise_Node: r$11(69010, 3, "module_AMD_or_UMD_or_System_or_ES6_then_Classic_Otherwise_Node_69010", "module === `AMD` or `UMD` or `System` or `ES6`, then `Classic`, Otherwise `Node`"),
	Computed_from_the_list_of_input_files: r$11(6911, 3, "Computed_from_the_list_of_input_files_6911", "Computed from the list of input files"),
	Platform_specific: r$11(6912, 3, "Platform_specific_6912", "Platform specific"),
	You_can_learn_about_all_of_the_compiler_options_at_0: r$11(6913, 3, "You_can_learn_about_all_of_the_compiler_options_at_0_6913", "You can learn about all of the compiler options at {0}"),
	Including_watch_w_will_start_watching_the_current_project_for_the_file_changes_Once_set_you_can_config_watch_mode_with_Colon: r$11(6914, 3, "Including_watch_w_will_start_watching_the_current_project_for_the_file_changes_Once_set_you_can_conf_6914", "Including --watch, -w will start watching the current project for the file changes. Once set, you can config watch mode with:"),
	Using_build_b_will_make_tsc_behave_more_like_a_build_orchestrator_than_a_compiler_This_is_used_to_trigger_building_composite_projects_which_you_can_learn_more_about_at_0: r$11(6915, 3, "Using_build_b_will_make_tsc_behave_more_like_a_build_orchestrator_than_a_compiler_This_is_used_to_tr_6915", "Using --build, -b will make tsc behave more like a build orchestrator than a compiler. This is used to trigger building composite projects which you can learn more about at {0}"),
	COMMON_COMMANDS: r$11(6916, 3, "COMMON_COMMANDS_6916", "COMMON COMMANDS"),
	ALL_COMPILER_OPTIONS: r$11(6917, 3, "ALL_COMPILER_OPTIONS_6917", "ALL COMPILER OPTIONS"),
	WATCH_OPTIONS: r$11(6918, 3, "WATCH_OPTIONS_6918", "WATCH OPTIONS"),
	BUILD_OPTIONS: r$11(6919, 3, "BUILD_OPTIONS_6919", "BUILD OPTIONS"),
	COMMON_COMPILER_OPTIONS: r$11(6920, 3, "COMMON_COMPILER_OPTIONS_6920", "COMMON COMPILER OPTIONS"),
	COMMAND_LINE_FLAGS: r$11(6921, 3, "COMMAND_LINE_FLAGS_6921", "COMMAND LINE FLAGS"),
	tsc_Colon_The_TypeScript_Compiler: r$11(6922, 3, "tsc_Colon_The_TypeScript_Compiler_6922", "tsc: The TypeScript Compiler"),
	Compiles_the_current_project_tsconfig_json_in_the_working_directory: r$11(6923, 3, "Compiles_the_current_project_tsconfig_json_in_the_working_directory_6923", "Compiles the current project (tsconfig.json in the working directory.)"),
	Ignoring_tsconfig_json_compiles_the_specified_files_with_default_compiler_options: r$11(6924, 3, "Ignoring_tsconfig_json_compiles_the_specified_files_with_default_compiler_options_6924", "Ignoring tsconfig.json, compiles the specified files with default compiler options."),
	Build_a_composite_project_in_the_working_directory: r$11(6925, 3, "Build_a_composite_project_in_the_working_directory_6925", "Build a composite project in the working directory."),
	Creates_a_tsconfig_json_with_the_recommended_settings_in_the_working_directory: r$11(6926, 3, "Creates_a_tsconfig_json_with_the_recommended_settings_in_the_working_directory_6926", "Creates a tsconfig.json with the recommended settings in the working directory."),
	Compiles_the_TypeScript_project_located_at_the_specified_path: r$11(6927, 3, "Compiles_the_TypeScript_project_located_at_the_specified_path_6927", "Compiles the TypeScript project located at the specified path."),
	An_expanded_version_of_this_information_showing_all_possible_compiler_options: r$11(6928, 3, "An_expanded_version_of_this_information_showing_all_possible_compiler_options_6928", "An expanded version of this information, showing all possible compiler options"),
	Compiles_the_current_project_with_additional_settings: r$11(6929, 3, "Compiles_the_current_project_with_additional_settings_6929", "Compiles the current project, with additional settings."),
	true_for_ES2022_and_above_including_ESNext: r$11(6930, 3, "true_for_ES2022_and_above_including_ESNext_6930", "`true` for ES2022 and above, including ESNext."),
	List_of_file_name_suffixes_to_search_when_resolving_a_module: r$11(6931, 1, "List_of_file_name_suffixes_to_search_when_resolving_a_module_6931", "List of file name suffixes to search when resolving a module."),
	Variable_0_implicitly_has_an_1_type: r$11(7005, 1, "Variable_0_implicitly_has_an_1_type_7005", "Variable '{0}' implicitly has an '{1}' type."),
	Parameter_0_implicitly_has_an_1_type: r$11(7006, 1, "Parameter_0_implicitly_has_an_1_type_7006", "Parameter '{0}' implicitly has an '{1}' type."),
	Member_0_implicitly_has_an_1_type: r$11(7008, 1, "Member_0_implicitly_has_an_1_type_7008", "Member '{0}' implicitly has an '{1}' type."),
	new_expression_whose_target_lacks_a_construct_signature_implicitly_has_an_any_type: r$11(7009, 1, "new_expression_whose_target_lacks_a_construct_signature_implicitly_has_an_any_type_7009", "'new' expression, whose target lacks a construct signature, implicitly has an 'any' type."),
	_0_which_lacks_return_type_annotation_implicitly_has_an_1_return_type: r$11(7010, 1, "_0_which_lacks_return_type_annotation_implicitly_has_an_1_return_type_7010", "'{0}', which lacks return-type annotation, implicitly has an '{1}' return type."),
	Function_expression_which_lacks_return_type_annotation_implicitly_has_an_0_return_type: r$11(7011, 1, "Function_expression_which_lacks_return_type_annotation_implicitly_has_an_0_return_type_7011", "Function expression, which lacks return-type annotation, implicitly has an '{0}' return type."),
	This_overload_implicitly_returns_the_type_0_because_it_lacks_a_return_type_annotation: r$11(7012, 1, "This_overload_implicitly_returns_the_type_0_because_it_lacks_a_return_type_annotation_7012", "This overload implicitly returns the type '{0}' because it lacks a return type annotation."),
	Construct_signature_which_lacks_return_type_annotation_implicitly_has_an_any_return_type: r$11(7013, 1, "Construct_signature_which_lacks_return_type_annotation_implicitly_has_an_any_return_type_7013", "Construct signature, which lacks return-type annotation, implicitly has an 'any' return type."),
	Function_type_which_lacks_return_type_annotation_implicitly_has_an_0_return_type: r$11(7014, 1, "Function_type_which_lacks_return_type_annotation_implicitly_has_an_0_return_type_7014", "Function type, which lacks return-type annotation, implicitly has an '{0}' return type."),
	Element_implicitly_has_an_any_type_because_index_expression_is_not_of_type_number: r$11(7015, 1, "Element_implicitly_has_an_any_type_because_index_expression_is_not_of_type_number_7015", "Element implicitly has an 'any' type because index expression is not of type 'number'."),
	Could_not_find_a_declaration_file_for_module_0_1_implicitly_has_an_any_type: r$11(7016, 1, "Could_not_find_a_declaration_file_for_module_0_1_implicitly_has_an_any_type_7016", "Could not find a declaration file for module '{0}'. '{1}' implicitly has an 'any' type."),
	Element_implicitly_has_an_any_type_because_type_0_has_no_index_signature: r$11(7017, 1, "Element_implicitly_has_an_any_type_because_type_0_has_no_index_signature_7017", "Element implicitly has an 'any' type because type '{0}' has no index signature."),
	Object_literal_s_property_0_implicitly_has_an_1_type: r$11(7018, 1, "Object_literal_s_property_0_implicitly_has_an_1_type_7018", "Object literal's property '{0}' implicitly has an '{1}' type."),
	Rest_parameter_0_implicitly_has_an_any_type: r$11(7019, 1, "Rest_parameter_0_implicitly_has_an_any_type_7019", "Rest parameter '{0}' implicitly has an 'any[]' type."),
	Call_signature_which_lacks_return_type_annotation_implicitly_has_an_any_return_type: r$11(7020, 1, "Call_signature_which_lacks_return_type_annotation_implicitly_has_an_any_return_type_7020", "Call signature, which lacks return-type annotation, implicitly has an 'any' return type."),
	_0_implicitly_has_type_any_because_it_does_not_have_a_type_annotation_and_is_referenced_directly_or_indirectly_in_its_own_initializer: r$11(7022, 1, "_0_implicitly_has_type_any_because_it_does_not_have_a_type_annotation_and_is_referenced_directly_or__7022", "'{0}' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer."),
	_0_implicitly_has_return_type_any_because_it_does_not_have_a_return_type_annotation_and_is_referenced_directly_or_indirectly_in_one_of_its_return_expressions: r$11(7023, 1, "_0_implicitly_has_return_type_any_because_it_does_not_have_a_return_type_annotation_and_is_reference_7023", "'{0}' implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions."),
	Function_implicitly_has_return_type_any_because_it_does_not_have_a_return_type_annotation_and_is_referenced_directly_or_indirectly_in_one_of_its_return_expressions: r$11(7024, 1, "Function_implicitly_has_return_type_any_because_it_does_not_have_a_return_type_annotation_and_is_ref_7024", "Function implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions."),
	Generator_implicitly_has_yield_type_0_Consider_supplying_a_return_type_annotation: r$11(7025, 1, "Generator_implicitly_has_yield_type_0_Consider_supplying_a_return_type_annotation_7025", "Generator implicitly has yield type '{0}'. Consider supplying a return type annotation."),
	JSX_element_implicitly_has_type_any_because_no_interface_JSX_0_exists: r$11(7026, 1, "JSX_element_implicitly_has_type_any_because_no_interface_JSX_0_exists_7026", "JSX element implicitly has type 'any' because no interface 'JSX.{0}' exists."),
	Unreachable_code_detected: r$11(7027, 1, "Unreachable_code_detected_7027", "Unreachable code detected.", !0),
	Unused_label: r$11(7028, 1, "Unused_label_7028", "Unused label.", !0),
	Fallthrough_case_in_switch: r$11(7029, 1, "Fallthrough_case_in_switch_7029", "Fallthrough case in switch."),
	Not_all_code_paths_return_a_value: r$11(7030, 1, "Not_all_code_paths_return_a_value_7030", "Not all code paths return a value."),
	Binding_element_0_implicitly_has_an_1_type: r$11(7031, 1, "Binding_element_0_implicitly_has_an_1_type_7031", "Binding element '{0}' implicitly has an '{1}' type."),
	Property_0_implicitly_has_type_any_because_its_set_accessor_lacks_a_parameter_type_annotation: r$11(7032, 1, "Property_0_implicitly_has_type_any_because_its_set_accessor_lacks_a_parameter_type_annotation_7032", "Property '{0}' implicitly has type 'any', because its set accessor lacks a parameter type annotation."),
	Property_0_implicitly_has_type_any_because_its_get_accessor_lacks_a_return_type_annotation: r$11(7033, 1, "Property_0_implicitly_has_type_any_because_its_get_accessor_lacks_a_return_type_annotation_7033", "Property '{0}' implicitly has type 'any', because its get accessor lacks a return type annotation."),
	Variable_0_implicitly_has_type_1_in_some_locations_where_its_type_cannot_be_determined: r$11(7034, 1, "Variable_0_implicitly_has_type_1_in_some_locations_where_its_type_cannot_be_determined_7034", "Variable '{0}' implicitly has type '{1}' in some locations where its type cannot be determined."),
	Try_npm_i_save_dev_types_Slash_1_if_it_exists_or_add_a_new_declaration_d_ts_file_containing_declare_module_0: r$11(7035, 1, "Try_npm_i_save_dev_types_Slash_1_if_it_exists_or_add_a_new_declaration_d_ts_file_containing_declare__7035", "Try `npm i --save-dev @types/{1}` if it exists or add a new declaration (.d.ts) file containing `declare module '{0}';`"),
	Dynamic_import_s_specifier_must_be_of_type_string_but_here_has_type_0: r$11(7036, 1, "Dynamic_import_s_specifier_must_be_of_type_string_but_here_has_type_0_7036", "Dynamic import's specifier must be of type 'string', but here has type '{0}'."),
	Enables_emit_interoperability_between_CommonJS_and_ES_Modules_via_creation_of_namespace_objects_for_all_imports_Implies_allowSyntheticDefaultImports: r$11(7037, 3, "Enables_emit_interoperability_between_CommonJS_and_ES_Modules_via_creation_of_namespace_objects_for__7037", "Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'."),
	Type_originates_at_this_import_A_namespace_style_import_cannot_be_called_or_constructed_and_will_cause_a_failure_at_runtime_Consider_using_a_default_import_or_import_require_here_instead: r$11(7038, 3, "Type_originates_at_this_import_A_namespace_style_import_cannot_be_called_or_constructed_and_will_cau_7038", "Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead."),
	Mapped_object_type_implicitly_has_an_any_template_type: r$11(7039, 1, "Mapped_object_type_implicitly_has_an_any_template_type_7039", "Mapped object type implicitly has an 'any' template type."),
	If_the_0_package_actually_exposes_this_module_consider_sending_a_pull_request_to_amend_https_Colon_Slash_Slashgithub_com_SlashDefinitelyTyped_SlashDefinitelyTyped_Slashtree_Slashmaster_Slashtypes_Slash_1: r$11(7040, 1, "If_the_0_package_actually_exposes_this_module_consider_sending_a_pull_request_to_amend_https_Colon_S_7040", "If the '{0}' package actually exposes this module, consider sending a pull request to amend 'https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/{1}'"),
	The_containing_arrow_function_captures_the_global_value_of_this: r$11(7041, 1, "The_containing_arrow_function_captures_the_global_value_of_this_7041", "The containing arrow function captures the global value of 'this'."),
	Module_0_was_resolved_to_1_but_resolveJsonModule_is_not_used: r$11(7042, 1, "Module_0_was_resolved_to_1_but_resolveJsonModule_is_not_used_7042", "Module '{0}' was resolved to '{1}', but '--resolveJsonModule' is not used."),
	Variable_0_implicitly_has_an_1_type_but_a_better_type_may_be_inferred_from_usage: r$11(7043, 2, "Variable_0_implicitly_has_an_1_type_but_a_better_type_may_be_inferred_from_usage_7043", "Variable '{0}' implicitly has an '{1}' type, but a better type may be inferred from usage."),
	Parameter_0_implicitly_has_an_1_type_but_a_better_type_may_be_inferred_from_usage: r$11(7044, 2, "Parameter_0_implicitly_has_an_1_type_but_a_better_type_may_be_inferred_from_usage_7044", "Parameter '{0}' implicitly has an '{1}' type, but a better type may be inferred from usage."),
	Member_0_implicitly_has_an_1_type_but_a_better_type_may_be_inferred_from_usage: r$11(7045, 2, "Member_0_implicitly_has_an_1_type_but_a_better_type_may_be_inferred_from_usage_7045", "Member '{0}' implicitly has an '{1}' type, but a better type may be inferred from usage."),
	Variable_0_implicitly_has_type_1_in_some_locations_but_a_better_type_may_be_inferred_from_usage: r$11(7046, 2, "Variable_0_implicitly_has_type_1_in_some_locations_but_a_better_type_may_be_inferred_from_usage_7046", "Variable '{0}' implicitly has type '{1}' in some locations, but a better type may be inferred from usage."),
	Rest_parameter_0_implicitly_has_an_any_type_but_a_better_type_may_be_inferred_from_usage: r$11(7047, 2, "Rest_parameter_0_implicitly_has_an_any_type_but_a_better_type_may_be_inferred_from_usage_7047", "Rest parameter '{0}' implicitly has an 'any[]' type, but a better type may be inferred from usage."),
	Property_0_implicitly_has_type_any_but_a_better_type_for_its_get_accessor_may_be_inferred_from_usage: r$11(7048, 2, "Property_0_implicitly_has_type_any_but_a_better_type_for_its_get_accessor_may_be_inferred_from_usage_7048", "Property '{0}' implicitly has type 'any', but a better type for its get accessor may be inferred from usage."),
	Property_0_implicitly_has_type_any_but_a_better_type_for_its_set_accessor_may_be_inferred_from_usage: r$11(7049, 2, "Property_0_implicitly_has_type_any_but_a_better_type_for_its_set_accessor_may_be_inferred_from_usage_7049", "Property '{0}' implicitly has type 'any', but a better type for its set accessor may be inferred from usage."),
	_0_implicitly_has_an_1_return_type_but_a_better_type_may_be_inferred_from_usage: r$11(7050, 2, "_0_implicitly_has_an_1_return_type_but_a_better_type_may_be_inferred_from_usage_7050", "'{0}' implicitly has an '{1}' return type, but a better type may be inferred from usage."),
	Parameter_has_a_name_but_no_type_Did_you_mean_0_Colon_1: r$11(7051, 1, "Parameter_has_a_name_but_no_type_Did_you_mean_0_Colon_1_7051", "Parameter has a name but no type. Did you mean '{0}: {1}'?"),
	Element_implicitly_has_an_any_type_because_type_0_has_no_index_signature_Did_you_mean_to_call_1: r$11(7052, 1, "Element_implicitly_has_an_any_type_because_type_0_has_no_index_signature_Did_you_mean_to_call_1_7052", "Element implicitly has an 'any' type because type '{0}' has no index signature. Did you mean to call '{1}'?"),
	Element_implicitly_has_an_any_type_because_expression_of_type_0_can_t_be_used_to_index_type_1: r$11(7053, 1, "Element_implicitly_has_an_any_type_because_expression_of_type_0_can_t_be_used_to_index_type_1_7053", "Element implicitly has an 'any' type because expression of type '{0}' can't be used to index type '{1}'."),
	No_index_signature_with_a_parameter_of_type_0_was_found_on_type_1: r$11(7054, 1, "No_index_signature_with_a_parameter_of_type_0_was_found_on_type_1_7054", "No index signature with a parameter of type '{0}' was found on type '{1}'."),
	_0_which_lacks_return_type_annotation_implicitly_has_an_1_yield_type: r$11(7055, 1, "_0_which_lacks_return_type_annotation_implicitly_has_an_1_yield_type_7055", "'{0}', which lacks return-type annotation, implicitly has an '{1}' yield type."),
	The_inferred_type_of_this_node_exceeds_the_maximum_length_the_compiler_will_serialize_An_explicit_type_annotation_is_needed: r$11(7056, 1, "The_inferred_type_of_this_node_exceeds_the_maximum_length_the_compiler_will_serialize_An_explicit_ty_7056", "The inferred type of this node exceeds the maximum length the compiler will serialize. An explicit type annotation is needed."),
	yield_expression_implicitly_results_in_an_any_type_because_its_containing_generator_lacks_a_return_type_annotation: r$11(7057, 1, "yield_expression_implicitly_results_in_an_any_type_because_its_containing_generator_lacks_a_return_t_7057", "'yield' expression implicitly results in an 'any' type because its containing generator lacks a return-type annotation."),
	If_the_0_package_actually_exposes_this_module_try_adding_a_new_declaration_d_ts_file_containing_declare_module_1: r$11(7058, 1, "If_the_0_package_actually_exposes_this_module_try_adding_a_new_declaration_d_ts_file_containing_decl_7058", "If the '{0}' package actually exposes this module, try adding a new declaration (.d.ts) file containing `declare module '{1}';`"),
	This_syntax_is_reserved_in_files_with_the_mts_or_cts_extension_Use_an_as_expression_instead: r$11(7059, 1, "This_syntax_is_reserved_in_files_with_the_mts_or_cts_extension_Use_an_as_expression_instead_7059", "This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead."),
	This_syntax_is_reserved_in_files_with_the_mts_or_cts_extension_Add_a_trailing_comma_or_explicit_constraint: r$11(7060, 1, "This_syntax_is_reserved_in_files_with_the_mts_or_cts_extension_Add_a_trailing_comma_or_explicit_cons_7060", "This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma or explicit constraint."),
	A_mapped_type_may_not_declare_properties_or_methods: r$11(7061, 1, "A_mapped_type_may_not_declare_properties_or_methods_7061", "A mapped type may not declare properties or methods."),
	You_cannot_rename_this_element: r$11(8e3, 1, "You_cannot_rename_this_element_8000", "You cannot rename this element."),
	You_cannot_rename_elements_that_are_defined_in_the_standard_TypeScript_library: r$11(8001, 1, "You_cannot_rename_elements_that_are_defined_in_the_standard_TypeScript_library_8001", "You cannot rename elements that are defined in the standard TypeScript library."),
	import_can_only_be_used_in_TypeScript_files: r$11(8002, 1, "import_can_only_be_used_in_TypeScript_files_8002", "'import ... =' can only be used in TypeScript files."),
	export_can_only_be_used_in_TypeScript_files: r$11(8003, 1, "export_can_only_be_used_in_TypeScript_files_8003", "'export =' can only be used in TypeScript files."),
	Type_parameter_declarations_can_only_be_used_in_TypeScript_files: r$11(8004, 1, "Type_parameter_declarations_can_only_be_used_in_TypeScript_files_8004", "Type parameter declarations can only be used in TypeScript files."),
	implements_clauses_can_only_be_used_in_TypeScript_files: r$11(8005, 1, "implements_clauses_can_only_be_used_in_TypeScript_files_8005", "'implements' clauses can only be used in TypeScript files."),
	_0_declarations_can_only_be_used_in_TypeScript_files: r$11(8006, 1, "_0_declarations_can_only_be_used_in_TypeScript_files_8006", "'{0}' declarations can only be used in TypeScript files."),
	Type_aliases_can_only_be_used_in_TypeScript_files: r$11(8008, 1, "Type_aliases_can_only_be_used_in_TypeScript_files_8008", "Type aliases can only be used in TypeScript files."),
	The_0_modifier_can_only_be_used_in_TypeScript_files: r$11(8009, 1, "The_0_modifier_can_only_be_used_in_TypeScript_files_8009", "The '{0}' modifier can only be used in TypeScript files."),
	Type_annotations_can_only_be_used_in_TypeScript_files: r$11(8010, 1, "Type_annotations_can_only_be_used_in_TypeScript_files_8010", "Type annotations can only be used in TypeScript files."),
	Type_arguments_can_only_be_used_in_TypeScript_files: r$11(8011, 1, "Type_arguments_can_only_be_used_in_TypeScript_files_8011", "Type arguments can only be used in TypeScript files."),
	Parameter_modifiers_can_only_be_used_in_TypeScript_files: r$11(8012, 1, "Parameter_modifiers_can_only_be_used_in_TypeScript_files_8012", "Parameter modifiers can only be used in TypeScript files."),
	Non_null_assertions_can_only_be_used_in_TypeScript_files: r$11(8013, 1, "Non_null_assertions_can_only_be_used_in_TypeScript_files_8013", "Non-null assertions can only be used in TypeScript files."),
	Type_assertion_expressions_can_only_be_used_in_TypeScript_files: r$11(8016, 1, "Type_assertion_expressions_can_only_be_used_in_TypeScript_files_8016", "Type assertion expressions can only be used in TypeScript files."),
	Signature_declarations_can_only_be_used_in_TypeScript_files: r$11(8017, 1, "Signature_declarations_can_only_be_used_in_TypeScript_files_8017", "Signature declarations can only be used in TypeScript files."),
	Report_errors_in_js_files: r$11(8019, 3, "Report_errors_in_js_files_8019", "Report errors in .js files."),
	JSDoc_types_can_only_be_used_inside_documentation_comments: r$11(8020, 1, "JSDoc_types_can_only_be_used_inside_documentation_comments_8020", "JSDoc types can only be used inside documentation comments."),
	JSDoc_typedef_tag_should_either_have_a_type_annotation_or_be_followed_by_property_or_member_tags: r$11(8021, 1, "JSDoc_typedef_tag_should_either_have_a_type_annotation_or_be_followed_by_property_or_member_tags_8021", "JSDoc '@typedef' tag should either have a type annotation or be followed by '@property' or '@member' tags."),
	JSDoc_0_is_not_attached_to_a_class: r$11(8022, 1, "JSDoc_0_is_not_attached_to_a_class_8022", "JSDoc '@{0}' is not attached to a class."),
	JSDoc_0_1_does_not_match_the_extends_2_clause: r$11(8023, 1, "JSDoc_0_1_does_not_match_the_extends_2_clause_8023", "JSDoc '@{0} {1}' does not match the 'extends {2}' clause."),
	JSDoc_param_tag_has_name_0_but_there_is_no_parameter_with_that_name: r$11(8024, 1, "JSDoc_param_tag_has_name_0_but_there_is_no_parameter_with_that_name_8024", "JSDoc '@param' tag has name '{0}', but there is no parameter with that name."),
	Class_declarations_cannot_have_more_than_one_augments_or_extends_tag: r$11(8025, 1, "Class_declarations_cannot_have_more_than_one_augments_or_extends_tag_8025", "Class declarations cannot have more than one '@augments' or '@extends' tag."),
	Expected_0_type_arguments_provide_these_with_an_extends_tag: r$11(8026, 1, "Expected_0_type_arguments_provide_these_with_an_extends_tag_8026", "Expected {0} type arguments; provide these with an '@extends' tag."),
	Expected_0_1_type_arguments_provide_these_with_an_extends_tag: r$11(8027, 1, "Expected_0_1_type_arguments_provide_these_with_an_extends_tag_8027", "Expected {0}-{1} type arguments; provide these with an '@extends' tag."),
	JSDoc_may_only_appear_in_the_last_parameter_of_a_signature: r$11(8028, 1, "JSDoc_may_only_appear_in_the_last_parameter_of_a_signature_8028", "JSDoc '...' may only appear in the last parameter of a signature."),
	JSDoc_param_tag_has_name_0_but_there_is_no_parameter_with_that_name_It_would_match_arguments_if_it_had_an_array_type: r$11(8029, 1, "JSDoc_param_tag_has_name_0_but_there_is_no_parameter_with_that_name_It_would_match_arguments_if_it_h_8029", "JSDoc '@param' tag has name '{0}', but there is no parameter with that name. It would match 'arguments' if it had an array type."),
	The_type_of_a_function_declaration_must_match_the_function_s_signature: r$11(8030, 1, "The_type_of_a_function_declaration_must_match_the_function_s_signature_8030", "The type of a function declaration must match the function's signature."),
	You_cannot_rename_a_module_via_a_global_import: r$11(8031, 1, "You_cannot_rename_a_module_via_a_global_import_8031", "You cannot rename a module via a global import."),
	Qualified_name_0_is_not_allowed_without_a_leading_param_object_1: r$11(8032, 1, "Qualified_name_0_is_not_allowed_without_a_leading_param_object_1_8032", "Qualified name '{0}' is not allowed without a leading '@param {object} {1}'."),
	A_JSDoc_typedef_comment_may_not_contain_multiple_type_tags: r$11(8033, 1, "A_JSDoc_typedef_comment_may_not_contain_multiple_type_tags_8033", "A JSDoc '@typedef' comment may not contain multiple '@type' tags."),
	The_tag_was_first_specified_here: r$11(8034, 1, "The_tag_was_first_specified_here_8034", "The tag was first specified here."),
	You_cannot_rename_elements_that_are_defined_in_a_node_modules_folder: r$11(8035, 1, "You_cannot_rename_elements_that_are_defined_in_a_node_modules_folder_8035", "You cannot rename elements that are defined in a 'node_modules' folder."),
	You_cannot_rename_elements_that_are_defined_in_another_node_modules_folder: r$11(8036, 1, "You_cannot_rename_elements_that_are_defined_in_another_node_modules_folder_8036", "You cannot rename elements that are defined in another 'node_modules' folder."),
	Type_satisfaction_expressions_can_only_be_used_in_TypeScript_files: r$11(8037, 1, "Type_satisfaction_expressions_can_only_be_used_in_TypeScript_files_8037", "Type satisfaction expressions can only be used in TypeScript files."),
	Decorators_may_not_appear_after_export_or_export_default_if_they_also_appear_before_export: r$11(8038, 1, "Decorators_may_not_appear_after_export_or_export_default_if_they_also_appear_before_export_8038", "Decorators may not appear after 'export' or 'export default' if they also appear before 'export'."),
	A_JSDoc_template_tag_may_not_follow_a_typedef_callback_or_overload_tag: r$11(8039, 1, "A_JSDoc_template_tag_may_not_follow_a_typedef_callback_or_overload_tag_8039", "A JSDoc '@template' tag may not follow a '@typedef', '@callback', or '@overload' tag"),
	Declaration_emit_for_this_file_requires_using_private_name_0_An_explicit_type_annotation_may_unblock_declaration_emit: r$11(9005, 1, "Declaration_emit_for_this_file_requires_using_private_name_0_An_explicit_type_annotation_may_unblock_9005", "Declaration emit for this file requires using private name '{0}'. An explicit type annotation may unblock declaration emit."),
	Declaration_emit_for_this_file_requires_using_private_name_0_from_module_1_An_explicit_type_annotation_may_unblock_declaration_emit: r$11(9006, 1, "Declaration_emit_for_this_file_requires_using_private_name_0_from_module_1_An_explicit_type_annotati_9006", "Declaration emit for this file requires using private name '{0}' from module '{1}'. An explicit type annotation may unblock declaration emit."),
	Function_must_have_an_explicit_return_type_annotation_with_isolatedDeclarations: r$11(9007, 1, "Function_must_have_an_explicit_return_type_annotation_with_isolatedDeclarations_9007", "Function must have an explicit return type annotation with --isolatedDeclarations."),
	Method_must_have_an_explicit_return_type_annotation_with_isolatedDeclarations: r$11(9008, 1, "Method_must_have_an_explicit_return_type_annotation_with_isolatedDeclarations_9008", "Method must have an explicit return type annotation with --isolatedDeclarations."),
	At_least_one_accessor_must_have_an_explicit_type_annotation_with_isolatedDeclarations: r$11(9009, 1, "At_least_one_accessor_must_have_an_explicit_type_annotation_with_isolatedDeclarations_9009", "At least one accessor must have an explicit type annotation with --isolatedDeclarations."),
	Variable_must_have_an_explicit_type_annotation_with_isolatedDeclarations: r$11(9010, 1, "Variable_must_have_an_explicit_type_annotation_with_isolatedDeclarations_9010", "Variable must have an explicit type annotation with --isolatedDeclarations."),
	Parameter_must_have_an_explicit_type_annotation_with_isolatedDeclarations: r$11(9011, 1, "Parameter_must_have_an_explicit_type_annotation_with_isolatedDeclarations_9011", "Parameter must have an explicit type annotation with --isolatedDeclarations."),
	Property_must_have_an_explicit_type_annotation_with_isolatedDeclarations: r$11(9012, 1, "Property_must_have_an_explicit_type_annotation_with_isolatedDeclarations_9012", "Property must have an explicit type annotation with --isolatedDeclarations."),
	Expression_type_can_t_be_inferred_with_isolatedDeclarations: r$11(9013, 1, "Expression_type_can_t_be_inferred_with_isolatedDeclarations_9013", "Expression type can't be inferred with --isolatedDeclarations."),
	Computed_properties_must_be_number_or_string_literals_variables_or_dotted_expressions_with_isolatedDeclarations: r$11(9014, 1, "Computed_properties_must_be_number_or_string_literals_variables_or_dotted_expressions_with_isolatedD_9014", "Computed properties must be number or string literals, variables or dotted expressions with --isolatedDeclarations."),
	Objects_that_contain_spread_assignments_can_t_be_inferred_with_isolatedDeclarations: r$11(9015, 1, "Objects_that_contain_spread_assignments_can_t_be_inferred_with_isolatedDeclarations_9015", "Objects that contain spread assignments can't be inferred with --isolatedDeclarations."),
	Objects_that_contain_shorthand_properties_can_t_be_inferred_with_isolatedDeclarations: r$11(9016, 1, "Objects_that_contain_shorthand_properties_can_t_be_inferred_with_isolatedDeclarations_9016", "Objects that contain shorthand properties can't be inferred with --isolatedDeclarations."),
	Only_const_arrays_can_be_inferred_with_isolatedDeclarations: r$11(9017, 1, "Only_const_arrays_can_be_inferred_with_isolatedDeclarations_9017", "Only const arrays can be inferred with --isolatedDeclarations."),
	Arrays_with_spread_elements_can_t_inferred_with_isolatedDeclarations: r$11(9018, 1, "Arrays_with_spread_elements_can_t_inferred_with_isolatedDeclarations_9018", "Arrays with spread elements can't inferred with --isolatedDeclarations."),
	Binding_elements_can_t_be_exported_directly_with_isolatedDeclarations: r$11(9019, 1, "Binding_elements_can_t_be_exported_directly_with_isolatedDeclarations_9019", "Binding elements can't be exported directly with --isolatedDeclarations."),
	Enum_member_initializers_must_be_computable_without_references_to_external_symbols_with_isolatedDeclarations: r$11(9020, 1, "Enum_member_initializers_must_be_computable_without_references_to_external_symbols_with_isolatedDecl_9020", "Enum member initializers must be computable without references to external symbols with --isolatedDeclarations."),
	Extends_clause_can_t_contain_an_expression_with_isolatedDeclarations: r$11(9021, 1, "Extends_clause_can_t_contain_an_expression_with_isolatedDeclarations_9021", "Extends clause can't contain an expression with --isolatedDeclarations."),
	Inference_from_class_expressions_is_not_supported_with_isolatedDeclarations: r$11(9022, 1, "Inference_from_class_expressions_is_not_supported_with_isolatedDeclarations_9022", "Inference from class expressions is not supported with --isolatedDeclarations."),
	Assigning_properties_to_functions_without_declaring_them_is_not_supported_with_isolatedDeclarations_Add_an_explicit_declaration_for_the_properties_assigned_to_this_function: r$11(9023, 1, "Assigning_properties_to_functions_without_declaring_them_is_not_supported_with_isolatedDeclarations__9023", "Assigning properties to functions without declaring them is not supported with --isolatedDeclarations. Add an explicit declaration for the properties assigned to this function."),
	Declaration_emit_for_this_parameter_requires_implicitly_adding_undefined_to_its_type_This_is_not_supported_with_isolatedDeclarations: r$11(9025, 1, "Declaration_emit_for_this_parameter_requires_implicitly_adding_undefined_to_its_type_This_is_not_sup_9025", "Declaration emit for this parameter requires implicitly adding undefined to its type. This is not supported with --isolatedDeclarations."),
	Declaration_emit_for_this_file_requires_preserving_this_import_for_augmentations_This_is_not_supported_with_isolatedDeclarations: r$11(9026, 1, "Declaration_emit_for_this_file_requires_preserving_this_import_for_augmentations_This_is_not_support_9026", "Declaration emit for this file requires preserving this import for augmentations. This is not supported with --isolatedDeclarations."),
	Add_a_type_annotation_to_the_variable_0: r$11(9027, 1, "Add_a_type_annotation_to_the_variable_0_9027", "Add a type annotation to the variable {0}."),
	Add_a_type_annotation_to_the_parameter_0: r$11(9028, 1, "Add_a_type_annotation_to_the_parameter_0_9028", "Add a type annotation to the parameter {0}."),
	Add_a_type_annotation_to_the_property_0: r$11(9029, 1, "Add_a_type_annotation_to_the_property_0_9029", "Add a type annotation to the property {0}."),
	Add_a_return_type_to_the_function_expression: r$11(9030, 1, "Add_a_return_type_to_the_function_expression_9030", "Add a return type to the function expression."),
	Add_a_return_type_to_the_function_declaration: r$11(9031, 1, "Add_a_return_type_to_the_function_declaration_9031", "Add a return type to the function declaration."),
	Add_a_return_type_to_the_get_accessor_declaration: r$11(9032, 1, "Add_a_return_type_to_the_get_accessor_declaration_9032", "Add a return type to the get accessor declaration."),
	Add_a_type_to_parameter_of_the_set_accessor_declaration: r$11(9033, 1, "Add_a_type_to_parameter_of_the_set_accessor_declaration_9033", "Add a type to parameter of the set accessor declaration."),
	Add_a_return_type_to_the_method: r$11(9034, 1, "Add_a_return_type_to_the_method_9034", "Add a return type to the method"),
	Add_satisfies_and_a_type_assertion_to_this_expression_satisfies_T_as_T_to_make_the_type_explicit: r$11(9035, 1, "Add_satisfies_and_a_type_assertion_to_this_expression_satisfies_T_as_T_to_make_the_type_explicit_9035", "Add satisfies and a type assertion to this expression (satisfies T as T) to make the type explicit."),
	Move_the_expression_in_default_export_to_a_variable_and_add_a_type_annotation_to_it: r$11(9036, 1, "Move_the_expression_in_default_export_to_a_variable_and_add_a_type_annotation_to_it_9036", "Move the expression in default export to a variable and add a type annotation to it."),
	Default_exports_can_t_be_inferred_with_isolatedDeclarations: r$11(9037, 1, "Default_exports_can_t_be_inferred_with_isolatedDeclarations_9037", "Default exports can't be inferred with --isolatedDeclarations."),
	Computed_property_names_on_class_or_object_literals_cannot_be_inferred_with_isolatedDeclarations: r$11(9038, 1, "Computed_property_names_on_class_or_object_literals_cannot_be_inferred_with_isolatedDeclarations_9038", "Computed property names on class or object literals cannot be inferred with --isolatedDeclarations."),
	Type_containing_private_name_0_can_t_be_used_with_isolatedDeclarations: r$11(9039, 1, "Type_containing_private_name_0_can_t_be_used_with_isolatedDeclarations_9039", "Type containing private name '{0}' can't be used with --isolatedDeclarations."),
	JSX_attributes_must_only_be_assigned_a_non_empty_expression: r$11(17e3, 1, "JSX_attributes_must_only_be_assigned_a_non_empty_expression_17000", "JSX attributes must only be assigned a non-empty 'expression'."),
	JSX_elements_cannot_have_multiple_attributes_with_the_same_name: r$11(17001, 1, "JSX_elements_cannot_have_multiple_attributes_with_the_same_name_17001", "JSX elements cannot have multiple attributes with the same name."),
	Expected_corresponding_JSX_closing_tag_for_0: r$11(17002, 1, "Expected_corresponding_JSX_closing_tag_for_0_17002", "Expected corresponding JSX closing tag for '{0}'."),
	Cannot_use_JSX_unless_the_jsx_flag_is_provided: r$11(17004, 1, "Cannot_use_JSX_unless_the_jsx_flag_is_provided_17004", "Cannot use JSX unless the '--jsx' flag is provided."),
	A_constructor_cannot_contain_a_super_call_when_its_class_extends_null: r$11(17005, 1, "A_constructor_cannot_contain_a_super_call_when_its_class_extends_null_17005", "A constructor cannot contain a 'super' call when its class extends 'null'."),
	An_unary_expression_with_the_0_operator_is_not_allowed_in_the_left_hand_side_of_an_exponentiation_expression_Consider_enclosing_the_expression_in_parentheses: r$11(17006, 1, "An_unary_expression_with_the_0_operator_is_not_allowed_in_the_left_hand_side_of_an_exponentiation_ex_17006", "An unary expression with the '{0}' operator is not allowed in the left-hand side of an exponentiation expression. Consider enclosing the expression in parentheses."),
	A_type_assertion_expression_is_not_allowed_in_the_left_hand_side_of_an_exponentiation_expression_Consider_enclosing_the_expression_in_parentheses: r$11(17007, 1, "A_type_assertion_expression_is_not_allowed_in_the_left_hand_side_of_an_exponentiation_expression_Con_17007", "A type assertion expression is not allowed in the left-hand side of an exponentiation expression. Consider enclosing the expression in parentheses."),
	JSX_element_0_has_no_corresponding_closing_tag: r$11(17008, 1, "JSX_element_0_has_no_corresponding_closing_tag_17008", "JSX element '{0}' has no corresponding closing tag."),
	super_must_be_called_before_accessing_this_in_the_constructor_of_a_derived_class: r$11(17009, 1, "super_must_be_called_before_accessing_this_in_the_constructor_of_a_derived_class_17009", "'super' must be called before accessing 'this' in the constructor of a derived class."),
	Unknown_type_acquisition_option_0: r$11(17010, 1, "Unknown_type_acquisition_option_0_17010", "Unknown type acquisition option '{0}'."),
	super_must_be_called_before_accessing_a_property_of_super_in_the_constructor_of_a_derived_class: r$11(17011, 1, "super_must_be_called_before_accessing_a_property_of_super_in_the_constructor_of_a_derived_class_17011", "'super' must be called before accessing a property of 'super' in the constructor of a derived class."),
	_0_is_not_a_valid_meta_property_for_keyword_1_Did_you_mean_2: r$11(17012, 1, "_0_is_not_a_valid_meta_property_for_keyword_1_Did_you_mean_2_17012", "'{0}' is not a valid meta-property for keyword '{1}'. Did you mean '{2}'?"),
	Meta_property_0_is_only_allowed_in_the_body_of_a_function_declaration_function_expression_or_constructor: r$11(17013, 1, "Meta_property_0_is_only_allowed_in_the_body_of_a_function_declaration_function_expression_or_constru_17013", "Meta-property '{0}' is only allowed in the body of a function declaration, function expression, or constructor."),
	JSX_fragment_has_no_corresponding_closing_tag: r$11(17014, 1, "JSX_fragment_has_no_corresponding_closing_tag_17014", "JSX fragment has no corresponding closing tag."),
	Expected_corresponding_closing_tag_for_JSX_fragment: r$11(17015, 1, "Expected_corresponding_closing_tag_for_JSX_fragment_17015", "Expected corresponding closing tag for JSX fragment."),
	The_jsxFragmentFactory_compiler_option_must_be_provided_to_use_JSX_fragments_with_the_jsxFactory_compiler_option: r$11(17016, 1, "The_jsxFragmentFactory_compiler_option_must_be_provided_to_use_JSX_fragments_with_the_jsxFactory_com_17016", "The 'jsxFragmentFactory' compiler option must be provided to use JSX fragments with the 'jsxFactory' compiler option."),
	An_jsxFrag_pragma_is_required_when_using_an_jsx_pragma_with_JSX_fragments: r$11(17017, 1, "An_jsxFrag_pragma_is_required_when_using_an_jsx_pragma_with_JSX_fragments_17017", "An @jsxFrag pragma is required when using an @jsx pragma with JSX fragments."),
	Unknown_type_acquisition_option_0_Did_you_mean_1: r$11(17018, 1, "Unknown_type_acquisition_option_0_Did_you_mean_1_17018", "Unknown type acquisition option '{0}'. Did you mean '{1}'?"),
	_0_at_the_end_of_a_type_is_not_valid_TypeScript_syntax_Did_you_mean_to_write_1: r$11(17019, 1, "_0_at_the_end_of_a_type_is_not_valid_TypeScript_syntax_Did_you_mean_to_write_1_17019", "'{0}' at the end of a type is not valid TypeScript syntax. Did you mean to write '{1}'?"),
	_0_at_the_start_of_a_type_is_not_valid_TypeScript_syntax_Did_you_mean_to_write_1: r$11(17020, 1, "_0_at_the_start_of_a_type_is_not_valid_TypeScript_syntax_Did_you_mean_to_write_1_17020", "'{0}' at the start of a type is not valid TypeScript syntax. Did you mean to write '{1}'?"),
	Unicode_escape_sequence_cannot_appear_here: r$11(17021, 1, "Unicode_escape_sequence_cannot_appear_here_17021", "Unicode escape sequence cannot appear here."),
	Circularity_detected_while_resolving_configuration_Colon_0: r$11(18e3, 1, "Circularity_detected_while_resolving_configuration_Colon_0_18000", "Circularity detected while resolving configuration: {0}"),
	The_files_list_in_config_file_0_is_empty: r$11(18002, 1, "The_files_list_in_config_file_0_is_empty_18002", "The 'files' list in config file '{0}' is empty."),
	No_inputs_were_found_in_config_file_0_Specified_include_paths_were_1_and_exclude_paths_were_2: r$11(18003, 1, "No_inputs_were_found_in_config_file_0_Specified_include_paths_were_1_and_exclude_paths_were_2_18003", "No inputs were found in config file '{0}'. Specified 'include' paths were '{1}' and 'exclude' paths were '{2}'."),
	File_is_a_CommonJS_module_it_may_be_converted_to_an_ES_module: r$11(80001, 2, "File_is_a_CommonJS_module_it_may_be_converted_to_an_ES_module_80001", "File is a CommonJS module; it may be converted to an ES module."),
	This_constructor_function_may_be_converted_to_a_class_declaration: r$11(80002, 2, "This_constructor_function_may_be_converted_to_a_class_declaration_80002", "This constructor function may be converted to a class declaration."),
	Import_may_be_converted_to_a_default_import: r$11(80003, 2, "Import_may_be_converted_to_a_default_import_80003", "Import may be converted to a default import."),
	JSDoc_types_may_be_moved_to_TypeScript_types: r$11(80004, 2, "JSDoc_types_may_be_moved_to_TypeScript_types_80004", "JSDoc types may be moved to TypeScript types."),
	require_call_may_be_converted_to_an_import: r$11(80005, 2, "require_call_may_be_converted_to_an_import_80005", "'require' call may be converted to an import."),
	This_may_be_converted_to_an_async_function: r$11(80006, 2, "This_may_be_converted_to_an_async_function_80006", "This may be converted to an async function."),
	await_has_no_effect_on_the_type_of_this_expression: r$11(80007, 2, "await_has_no_effect_on_the_type_of_this_expression_80007", "'await' has no effect on the type of this expression."),
	Numeric_literals_with_absolute_values_equal_to_2_53_or_greater_are_too_large_to_be_represented_accurately_as_integers: r$11(80008, 2, "Numeric_literals_with_absolute_values_equal_to_2_53_or_greater_are_too_large_to_be_represented_accur_80008", "Numeric literals with absolute values equal to 2^53 or greater are too large to be represented accurately as integers."),
	JSDoc_typedef_may_be_converted_to_TypeScript_type: r$11(80009, 2, "JSDoc_typedef_may_be_converted_to_TypeScript_type_80009", "JSDoc typedef may be converted to TypeScript type."),
	JSDoc_typedefs_may_be_converted_to_TypeScript_types: r$11(80010, 2, "JSDoc_typedefs_may_be_converted_to_TypeScript_types_80010", "JSDoc typedefs may be converted to TypeScript types."),
	Add_missing_super_call: r$11(90001, 3, "Add_missing_super_call_90001", "Add missing 'super()' call"),
	Make_super_call_the_first_statement_in_the_constructor: r$11(90002, 3, "Make_super_call_the_first_statement_in_the_constructor_90002", "Make 'super()' call the first statement in the constructor"),
	Change_extends_to_implements: r$11(90003, 3, "Change_extends_to_implements_90003", "Change 'extends' to 'implements'"),
	Remove_unused_declaration_for_Colon_0: r$11(90004, 3, "Remove_unused_declaration_for_Colon_0_90004", "Remove unused declaration for: '{0}'"),
	Remove_import_from_0: r$11(90005, 3, "Remove_import_from_0_90005", "Remove import from '{0}'"),
	Implement_interface_0: r$11(90006, 3, "Implement_interface_0_90006", "Implement interface '{0}'"),
	Implement_inherited_abstract_class: r$11(90007, 3, "Implement_inherited_abstract_class_90007", "Implement inherited abstract class"),
	Add_0_to_unresolved_variable: r$11(90008, 3, "Add_0_to_unresolved_variable_90008", "Add '{0}.' to unresolved variable"),
	Remove_variable_statement: r$11(90010, 3, "Remove_variable_statement_90010", "Remove variable statement"),
	Remove_template_tag: r$11(90011, 3, "Remove_template_tag_90011", "Remove template tag"),
	Remove_type_parameters: r$11(90012, 3, "Remove_type_parameters_90012", "Remove type parameters"),
	Import_0_from_1: r$11(90013, 3, "Import_0_from_1_90013", `Import '{0}' from "{1}"`),
	Change_0_to_1: r$11(90014, 3, "Change_0_to_1_90014", "Change '{0}' to '{1}'"),
	Declare_property_0: r$11(90016, 3, "Declare_property_0_90016", "Declare property '{0}'"),
	Add_index_signature_for_property_0: r$11(90017, 3, "Add_index_signature_for_property_0_90017", "Add index signature for property '{0}'"),
	Disable_checking_for_this_file: r$11(90018, 3, "Disable_checking_for_this_file_90018", "Disable checking for this file"),
	Ignore_this_error_message: r$11(90019, 3, "Ignore_this_error_message_90019", "Ignore this error message"),
	Initialize_property_0_in_the_constructor: r$11(90020, 3, "Initialize_property_0_in_the_constructor_90020", "Initialize property '{0}' in the constructor"),
	Initialize_static_property_0: r$11(90021, 3, "Initialize_static_property_0_90021", "Initialize static property '{0}'"),
	Change_spelling_to_0: r$11(90022, 3, "Change_spelling_to_0_90022", "Change spelling to '{0}'"),
	Declare_method_0: r$11(90023, 3, "Declare_method_0_90023", "Declare method '{0}'"),
	Declare_static_method_0: r$11(90024, 3, "Declare_static_method_0_90024", "Declare static method '{0}'"),
	Prefix_0_with_an_underscore: r$11(90025, 3, "Prefix_0_with_an_underscore_90025", "Prefix '{0}' with an underscore"),
	Rewrite_as_the_indexed_access_type_0: r$11(90026, 3, "Rewrite_as_the_indexed_access_type_0_90026", "Rewrite as the indexed access type '{0}'"),
	Declare_static_property_0: r$11(90027, 3, "Declare_static_property_0_90027", "Declare static property '{0}'"),
	Call_decorator_expression: r$11(90028, 3, "Call_decorator_expression_90028", "Call decorator expression"),
	Add_async_modifier_to_containing_function: r$11(90029, 3, "Add_async_modifier_to_containing_function_90029", "Add async modifier to containing function"),
	Replace_infer_0_with_unknown: r$11(90030, 3, "Replace_infer_0_with_unknown_90030", "Replace 'infer {0}' with 'unknown'"),
	Replace_all_unused_infer_with_unknown: r$11(90031, 3, "Replace_all_unused_infer_with_unknown_90031", "Replace all unused 'infer' with 'unknown'"),
	Add_parameter_name: r$11(90034, 3, "Add_parameter_name_90034", "Add parameter name"),
	Declare_private_property_0: r$11(90035, 3, "Declare_private_property_0_90035", "Declare private property '{0}'"),
	Replace_0_with_Promise_1: r$11(90036, 3, "Replace_0_with_Promise_1_90036", "Replace '{0}' with 'Promise<{1}>'"),
	Fix_all_incorrect_return_type_of_an_async_functions: r$11(90037, 3, "Fix_all_incorrect_return_type_of_an_async_functions_90037", "Fix all incorrect return type of an async functions"),
	Declare_private_method_0: r$11(90038, 3, "Declare_private_method_0_90038", "Declare private method '{0}'"),
	Remove_unused_destructuring_declaration: r$11(90039, 3, "Remove_unused_destructuring_declaration_90039", "Remove unused destructuring declaration"),
	Remove_unused_declarations_for_Colon_0: r$11(90041, 3, "Remove_unused_declarations_for_Colon_0_90041", "Remove unused declarations for: '{0}'"),
	Declare_a_private_field_named_0: r$11(90053, 3, "Declare_a_private_field_named_0_90053", "Declare a private field named '{0}'."),
	Includes_imports_of_types_referenced_by_0: r$11(90054, 3, "Includes_imports_of_types_referenced_by_0_90054", "Includes imports of types referenced by '{0}'"),
	Remove_type_from_import_declaration_from_0: r$11(90055, 3, "Remove_type_from_import_declaration_from_0_90055", `Remove 'type' from import declaration from "{0}"`),
	Remove_type_from_import_of_0_from_1: r$11(90056, 3, "Remove_type_from_import_of_0_from_1_90056", `Remove 'type' from import of '{0}' from "{1}"`),
	Add_import_from_0: r$11(90057, 3, "Add_import_from_0_90057", "Add import from \"{0}\""),
	Update_import_from_0: r$11(90058, 3, "Update_import_from_0_90058", "Update import from \"{0}\""),
	Export_0_from_module_1: r$11(90059, 3, "Export_0_from_module_1_90059", "Export '{0}' from module '{1}'"),
	Export_all_referenced_locals: r$11(90060, 3, "Export_all_referenced_locals_90060", "Export all referenced locals"),
	Update_modifiers_of_0: r$11(90061, 3, "Update_modifiers_of_0_90061", "Update modifiers of '{0}'"),
	Add_annotation_of_type_0: r$11(90062, 3, "Add_annotation_of_type_0_90062", "Add annotation of type '{0}'"),
	Add_return_type_0: r$11(90063, 3, "Add_return_type_0_90063", "Add return type '{0}'"),
	Extract_base_class_to_variable: r$11(90064, 3, "Extract_base_class_to_variable_90064", "Extract base class to variable"),
	Extract_default_export_to_variable: r$11(90065, 3, "Extract_default_export_to_variable_90065", "Extract default export to variable"),
	Extract_binding_expressions_to_variable: r$11(90066, 3, "Extract_binding_expressions_to_variable_90066", "Extract binding expressions to variable"),
	Add_all_missing_type_annotations: r$11(90067, 3, "Add_all_missing_type_annotations_90067", "Add all missing type annotations"),
	Add_satisfies_and_an_inline_type_assertion_with_0: r$11(90068, 3, "Add_satisfies_and_an_inline_type_assertion_with_0_90068", "Add satisfies and an inline type assertion with '{0}'"),
	Extract_to_variable_and_replace_with_0_as_typeof_0: r$11(90069, 3, "Extract_to_variable_and_replace_with_0_as_typeof_0_90069", "Extract to variable and replace with '{0} as typeof {0}'"),
	Mark_array_literal_as_const: r$11(90070, 3, "Mark_array_literal_as_const_90070", "Mark array literal as const"),
	Annotate_types_of_properties_expando_function_in_a_namespace: r$11(90071, 3, "Annotate_types_of_properties_expando_function_in_a_namespace_90071", "Annotate types of properties expando function in a namespace"),
	Convert_function_to_an_ES2015_class: r$11(95001, 3, "Convert_function_to_an_ES2015_class_95001", "Convert function to an ES2015 class"),
	Convert_0_to_1_in_0: r$11(95003, 3, "Convert_0_to_1_in_0_95003", "Convert '{0}' to '{1} in {0}'"),
	Extract_to_0_in_1: r$11(95004, 3, "Extract_to_0_in_1_95004", "Extract to {0} in {1}"),
	Extract_function: r$11(95005, 3, "Extract_function_95005", "Extract function"),
	Extract_constant: r$11(95006, 3, "Extract_constant_95006", "Extract constant"),
	Extract_to_0_in_enclosing_scope: r$11(95007, 3, "Extract_to_0_in_enclosing_scope_95007", "Extract to {0} in enclosing scope"),
	Extract_to_0_in_1_scope: r$11(95008, 3, "Extract_to_0_in_1_scope_95008", "Extract to {0} in {1} scope"),
	Annotate_with_type_from_JSDoc: r$11(95009, 3, "Annotate_with_type_from_JSDoc_95009", "Annotate with type from JSDoc"),
	Infer_type_of_0_from_usage: r$11(95011, 3, "Infer_type_of_0_from_usage_95011", "Infer type of '{0}' from usage"),
	Infer_parameter_types_from_usage: r$11(95012, 3, "Infer_parameter_types_from_usage_95012", "Infer parameter types from usage"),
	Convert_to_default_import: r$11(95013, 3, "Convert_to_default_import_95013", "Convert to default import"),
	Install_0: r$11(95014, 3, "Install_0_95014", "Install '{0}'"),
	Replace_import_with_0: r$11(95015, 3, "Replace_import_with_0_95015", "Replace import with '{0}'."),
	Use_synthetic_default_member: r$11(95016, 3, "Use_synthetic_default_member_95016", "Use synthetic 'default' member."),
	Convert_to_ES_module: r$11(95017, 3, "Convert_to_ES_module_95017", "Convert to ES module"),
	Add_undefined_type_to_property_0: r$11(95018, 3, "Add_undefined_type_to_property_0_95018", "Add 'undefined' type to property '{0}'"),
	Add_initializer_to_property_0: r$11(95019, 3, "Add_initializer_to_property_0_95019", "Add initializer to property '{0}'"),
	Add_definite_assignment_assertion_to_property_0: r$11(95020, 3, "Add_definite_assignment_assertion_to_property_0_95020", "Add definite assignment assertion to property '{0}'"),
	Convert_all_type_literals_to_mapped_type: r$11(95021, 3, "Convert_all_type_literals_to_mapped_type_95021", "Convert all type literals to mapped type"),
	Add_all_missing_members: r$11(95022, 3, "Add_all_missing_members_95022", "Add all missing members"),
	Infer_all_types_from_usage: r$11(95023, 3, "Infer_all_types_from_usage_95023", "Infer all types from usage"),
	Delete_all_unused_declarations: r$11(95024, 3, "Delete_all_unused_declarations_95024", "Delete all unused declarations"),
	Prefix_all_unused_declarations_with_where_possible: r$11(95025, 3, "Prefix_all_unused_declarations_with_where_possible_95025", "Prefix all unused declarations with '_' where possible"),
	Fix_all_detected_spelling_errors: r$11(95026, 3, "Fix_all_detected_spelling_errors_95026", "Fix all detected spelling errors"),
	Add_initializers_to_all_uninitialized_properties: r$11(95027, 3, "Add_initializers_to_all_uninitialized_properties_95027", "Add initializers to all uninitialized properties"),
	Add_definite_assignment_assertions_to_all_uninitialized_properties: r$11(95028, 3, "Add_definite_assignment_assertions_to_all_uninitialized_properties_95028", "Add definite assignment assertions to all uninitialized properties"),
	Add_undefined_type_to_all_uninitialized_properties: r$11(95029, 3, "Add_undefined_type_to_all_uninitialized_properties_95029", "Add undefined type to all uninitialized properties"),
	Change_all_jsdoc_style_types_to_TypeScript: r$11(95030, 3, "Change_all_jsdoc_style_types_to_TypeScript_95030", "Change all jsdoc-style types to TypeScript"),
	Change_all_jsdoc_style_types_to_TypeScript_and_add_undefined_to_nullable_types: r$11(95031, 3, "Change_all_jsdoc_style_types_to_TypeScript_and_add_undefined_to_nullable_types_95031", "Change all jsdoc-style types to TypeScript (and add '| undefined' to nullable types)"),
	Implement_all_unimplemented_interfaces: r$11(95032, 3, "Implement_all_unimplemented_interfaces_95032", "Implement all unimplemented interfaces"),
	Install_all_missing_types_packages: r$11(95033, 3, "Install_all_missing_types_packages_95033", "Install all missing types packages"),
	Rewrite_all_as_indexed_access_types: r$11(95034, 3, "Rewrite_all_as_indexed_access_types_95034", "Rewrite all as indexed access types"),
	Convert_all_to_default_imports: r$11(95035, 3, "Convert_all_to_default_imports_95035", "Convert all to default imports"),
	Make_all_super_calls_the_first_statement_in_their_constructor: r$11(95036, 3, "Make_all_super_calls_the_first_statement_in_their_constructor_95036", "Make all 'super()' calls the first statement in their constructor"),
	Add_qualifier_to_all_unresolved_variables_matching_a_member_name: r$11(95037, 3, "Add_qualifier_to_all_unresolved_variables_matching_a_member_name_95037", "Add qualifier to all unresolved variables matching a member name"),
	Change_all_extended_interfaces_to_implements: r$11(95038, 3, "Change_all_extended_interfaces_to_implements_95038", "Change all extended interfaces to 'implements'"),
	Add_all_missing_super_calls: r$11(95039, 3, "Add_all_missing_super_calls_95039", "Add all missing super calls"),
	Implement_all_inherited_abstract_classes: r$11(95040, 3, "Implement_all_inherited_abstract_classes_95040", "Implement all inherited abstract classes"),
	Add_all_missing_async_modifiers: r$11(95041, 3, "Add_all_missing_async_modifiers_95041", "Add all missing 'async' modifiers"),
	Add_ts_ignore_to_all_error_messages: r$11(95042, 3, "Add_ts_ignore_to_all_error_messages_95042", "Add '@ts-ignore' to all error messages"),
	Annotate_everything_with_types_from_JSDoc: r$11(95043, 3, "Annotate_everything_with_types_from_JSDoc_95043", "Annotate everything with types from JSDoc"),
	Add_to_all_uncalled_decorators: r$11(95044, 3, "Add_to_all_uncalled_decorators_95044", "Add '()' to all uncalled decorators"),
	Convert_all_constructor_functions_to_classes: r$11(95045, 3, "Convert_all_constructor_functions_to_classes_95045", "Convert all constructor functions to classes"),
	Generate_get_and_set_accessors: r$11(95046, 3, "Generate_get_and_set_accessors_95046", "Generate 'get' and 'set' accessors"),
	Convert_require_to_import: r$11(95047, 3, "Convert_require_to_import_95047", "Convert 'require' to 'import'"),
	Convert_all_require_to_import: r$11(95048, 3, "Convert_all_require_to_import_95048", "Convert all 'require' to 'import'"),
	Move_to_a_new_file: r$11(95049, 3, "Move_to_a_new_file_95049", "Move to a new file"),
	Remove_unreachable_code: r$11(95050, 3, "Remove_unreachable_code_95050", "Remove unreachable code"),
	Remove_all_unreachable_code: r$11(95051, 3, "Remove_all_unreachable_code_95051", "Remove all unreachable code"),
	Add_missing_typeof: r$11(95052, 3, "Add_missing_typeof_95052", "Add missing 'typeof'"),
	Remove_unused_label: r$11(95053, 3, "Remove_unused_label_95053", "Remove unused label"),
	Remove_all_unused_labels: r$11(95054, 3, "Remove_all_unused_labels_95054", "Remove all unused labels"),
	Convert_0_to_mapped_object_type: r$11(95055, 3, "Convert_0_to_mapped_object_type_95055", "Convert '{0}' to mapped object type"),
	Convert_namespace_import_to_named_imports: r$11(95056, 3, "Convert_namespace_import_to_named_imports_95056", "Convert namespace import to named imports"),
	Convert_named_imports_to_namespace_import: r$11(95057, 3, "Convert_named_imports_to_namespace_import_95057", "Convert named imports to namespace import"),
	Add_or_remove_braces_in_an_arrow_function: r$11(95058, 3, "Add_or_remove_braces_in_an_arrow_function_95058", "Add or remove braces in an arrow function"),
	Add_braces_to_arrow_function: r$11(95059, 3, "Add_braces_to_arrow_function_95059", "Add braces to arrow function"),
	Remove_braces_from_arrow_function: r$11(95060, 3, "Remove_braces_from_arrow_function_95060", "Remove braces from arrow function"),
	Convert_default_export_to_named_export: r$11(95061, 3, "Convert_default_export_to_named_export_95061", "Convert default export to named export"),
	Convert_named_export_to_default_export: r$11(95062, 3, "Convert_named_export_to_default_export_95062", "Convert named export to default export"),
	Add_missing_enum_member_0: r$11(95063, 3, "Add_missing_enum_member_0_95063", "Add missing enum member '{0}'"),
	Add_all_missing_imports: r$11(95064, 3, "Add_all_missing_imports_95064", "Add all missing imports"),
	Convert_to_async_function: r$11(95065, 3, "Convert_to_async_function_95065", "Convert to async function"),
	Convert_all_to_async_functions: r$11(95066, 3, "Convert_all_to_async_functions_95066", "Convert all to async functions"),
	Add_missing_call_parentheses: r$11(95067, 3, "Add_missing_call_parentheses_95067", "Add missing call parentheses"),
	Add_all_missing_call_parentheses: r$11(95068, 3, "Add_all_missing_call_parentheses_95068", "Add all missing call parentheses"),
	Add_unknown_conversion_for_non_overlapping_types: r$11(95069, 3, "Add_unknown_conversion_for_non_overlapping_types_95069", "Add 'unknown' conversion for non-overlapping types"),
	Add_unknown_to_all_conversions_of_non_overlapping_types: r$11(95070, 3, "Add_unknown_to_all_conversions_of_non_overlapping_types_95070", "Add 'unknown' to all conversions of non-overlapping types"),
	Add_missing_new_operator_to_call: r$11(95071, 3, "Add_missing_new_operator_to_call_95071", "Add missing 'new' operator to call"),
	Add_missing_new_operator_to_all_calls: r$11(95072, 3, "Add_missing_new_operator_to_all_calls_95072", "Add missing 'new' operator to all calls"),
	Add_names_to_all_parameters_without_names: r$11(95073, 3, "Add_names_to_all_parameters_without_names_95073", "Add names to all parameters without names"),
	Enable_the_experimentalDecorators_option_in_your_configuration_file: r$11(95074, 3, "Enable_the_experimentalDecorators_option_in_your_configuration_file_95074", "Enable the 'experimentalDecorators' option in your configuration file"),
	Convert_parameters_to_destructured_object: r$11(95075, 3, "Convert_parameters_to_destructured_object_95075", "Convert parameters to destructured object"),
	Extract_type: r$11(95077, 3, "Extract_type_95077", "Extract type"),
	Extract_to_type_alias: r$11(95078, 3, "Extract_to_type_alias_95078", "Extract to type alias"),
	Extract_to_typedef: r$11(95079, 3, "Extract_to_typedef_95079", "Extract to typedef"),
	Infer_this_type_of_0_from_usage: r$11(95080, 3, "Infer_this_type_of_0_from_usage_95080", "Infer 'this' type of '{0}' from usage"),
	Add_const_to_unresolved_variable: r$11(95081, 3, "Add_const_to_unresolved_variable_95081", "Add 'const' to unresolved variable"),
	Add_const_to_all_unresolved_variables: r$11(95082, 3, "Add_const_to_all_unresolved_variables_95082", "Add 'const' to all unresolved variables"),
	Add_await: r$11(95083, 3, "Add_await_95083", "Add 'await'"),
	Add_await_to_initializer_for_0: r$11(95084, 3, "Add_await_to_initializer_for_0_95084", "Add 'await' to initializer for '{0}'"),
	Fix_all_expressions_possibly_missing_await: r$11(95085, 3, "Fix_all_expressions_possibly_missing_await_95085", "Fix all expressions possibly missing 'await'"),
	Remove_unnecessary_await: r$11(95086, 3, "Remove_unnecessary_await_95086", "Remove unnecessary 'await'"),
	Remove_all_unnecessary_uses_of_await: r$11(95087, 3, "Remove_all_unnecessary_uses_of_await_95087", "Remove all unnecessary uses of 'await'"),
	Enable_the_jsx_flag_in_your_configuration_file: r$11(95088, 3, "Enable_the_jsx_flag_in_your_configuration_file_95088", "Enable the '--jsx' flag in your configuration file"),
	Add_await_to_initializers: r$11(95089, 3, "Add_await_to_initializers_95089", "Add 'await' to initializers"),
	Extract_to_interface: r$11(95090, 3, "Extract_to_interface_95090", "Extract to interface"),
	Convert_to_a_bigint_numeric_literal: r$11(95091, 3, "Convert_to_a_bigint_numeric_literal_95091", "Convert to a bigint numeric literal"),
	Convert_all_to_bigint_numeric_literals: r$11(95092, 3, "Convert_all_to_bigint_numeric_literals_95092", "Convert all to bigint numeric literals"),
	Convert_const_to_let: r$11(95093, 3, "Convert_const_to_let_95093", "Convert 'const' to 'let'"),
	Prefix_with_declare: r$11(95094, 3, "Prefix_with_declare_95094", "Prefix with 'declare'"),
	Prefix_all_incorrect_property_declarations_with_declare: r$11(95095, 3, "Prefix_all_incorrect_property_declarations_with_declare_95095", "Prefix all incorrect property declarations with 'declare'"),
	Convert_to_template_string: r$11(95096, 3, "Convert_to_template_string_95096", "Convert to template string"),
	Add_export_to_make_this_file_into_a_module: r$11(95097, 3, "Add_export_to_make_this_file_into_a_module_95097", "Add 'export {}' to make this file into a module"),
	Set_the_target_option_in_your_configuration_file_to_0: r$11(95098, 3, "Set_the_target_option_in_your_configuration_file_to_0_95098", "Set the 'target' option in your configuration file to '{0}'"),
	Set_the_module_option_in_your_configuration_file_to_0: r$11(95099, 3, "Set_the_module_option_in_your_configuration_file_to_0_95099", "Set the 'module' option in your configuration file to '{0}'"),
	Convert_invalid_character_to_its_html_entity_code: r$11(95100, 3, "Convert_invalid_character_to_its_html_entity_code_95100", "Convert invalid character to its html entity code"),
	Convert_all_invalid_characters_to_HTML_entity_code: r$11(95101, 3, "Convert_all_invalid_characters_to_HTML_entity_code_95101", "Convert all invalid characters to HTML entity code"),
	Convert_all_const_to_let: r$11(95102, 3, "Convert_all_const_to_let_95102", "Convert all 'const' to 'let'"),
	Convert_function_expression_0_to_arrow_function: r$11(95105, 3, "Convert_function_expression_0_to_arrow_function_95105", "Convert function expression '{0}' to arrow function"),
	Convert_function_declaration_0_to_arrow_function: r$11(95106, 3, "Convert_function_declaration_0_to_arrow_function_95106", "Convert function declaration '{0}' to arrow function"),
	Fix_all_implicit_this_errors: r$11(95107, 3, "Fix_all_implicit_this_errors_95107", "Fix all implicit-'this' errors"),
	Wrap_invalid_character_in_an_expression_container: r$11(95108, 3, "Wrap_invalid_character_in_an_expression_container_95108", "Wrap invalid character in an expression container"),
	Wrap_all_invalid_characters_in_an_expression_container: r$11(95109, 3, "Wrap_all_invalid_characters_in_an_expression_container_95109", "Wrap all invalid characters in an expression container"),
	Visit_https_Colon_Slash_Slashaka_ms_Slashtsconfig_to_read_more_about_this_file: r$11(95110, 3, "Visit_https_Colon_Slash_Slashaka_ms_Slashtsconfig_to_read_more_about_this_file_95110", "Visit https://aka.ms/tsconfig to read more about this file"),
	Add_a_return_statement: r$11(95111, 3, "Add_a_return_statement_95111", "Add a return statement"),
	Remove_braces_from_arrow_function_body: r$11(95112, 3, "Remove_braces_from_arrow_function_body_95112", "Remove braces from arrow function body"),
	Wrap_the_following_body_with_parentheses_which_should_be_an_object_literal: r$11(95113, 3, "Wrap_the_following_body_with_parentheses_which_should_be_an_object_literal_95113", "Wrap the following body with parentheses which should be an object literal"),
	Add_all_missing_return_statement: r$11(95114, 3, "Add_all_missing_return_statement_95114", "Add all missing return statement"),
	Remove_braces_from_all_arrow_function_bodies_with_relevant_issues: r$11(95115, 3, "Remove_braces_from_all_arrow_function_bodies_with_relevant_issues_95115", "Remove braces from all arrow function bodies with relevant issues"),
	Wrap_all_object_literal_with_parentheses: r$11(95116, 3, "Wrap_all_object_literal_with_parentheses_95116", "Wrap all object literal with parentheses"),
	Move_labeled_tuple_element_modifiers_to_labels: r$11(95117, 3, "Move_labeled_tuple_element_modifiers_to_labels_95117", "Move labeled tuple element modifiers to labels"),
	Convert_overload_list_to_single_signature: r$11(95118, 3, "Convert_overload_list_to_single_signature_95118", "Convert overload list to single signature"),
	Generate_get_and_set_accessors_for_all_overriding_properties: r$11(95119, 3, "Generate_get_and_set_accessors_for_all_overriding_properties_95119", "Generate 'get' and 'set' accessors for all overriding properties"),
	Wrap_in_JSX_fragment: r$11(95120, 3, "Wrap_in_JSX_fragment_95120", "Wrap in JSX fragment"),
	Wrap_all_unparented_JSX_in_JSX_fragment: r$11(95121, 3, "Wrap_all_unparented_JSX_in_JSX_fragment_95121", "Wrap all unparented JSX in JSX fragment"),
	Convert_arrow_function_or_function_expression: r$11(95122, 3, "Convert_arrow_function_or_function_expression_95122", "Convert arrow function or function expression"),
	Convert_to_anonymous_function: r$11(95123, 3, "Convert_to_anonymous_function_95123", "Convert to anonymous function"),
	Convert_to_named_function: r$11(95124, 3, "Convert_to_named_function_95124", "Convert to named function"),
	Convert_to_arrow_function: r$11(95125, 3, "Convert_to_arrow_function_95125", "Convert to arrow function"),
	Remove_parentheses: r$11(95126, 3, "Remove_parentheses_95126", "Remove parentheses"),
	Could_not_find_a_containing_arrow_function: r$11(95127, 3, "Could_not_find_a_containing_arrow_function_95127", "Could not find a containing arrow function"),
	Containing_function_is_not_an_arrow_function: r$11(95128, 3, "Containing_function_is_not_an_arrow_function_95128", "Containing function is not an arrow function"),
	Could_not_find_export_statement: r$11(95129, 3, "Could_not_find_export_statement_95129", "Could not find export statement"),
	This_file_already_has_a_default_export: r$11(95130, 3, "This_file_already_has_a_default_export_95130", "This file already has a default export"),
	Could_not_find_import_clause: r$11(95131, 3, "Could_not_find_import_clause_95131", "Could not find import clause"),
	Could_not_find_namespace_import_or_named_imports: r$11(95132, 3, "Could_not_find_namespace_import_or_named_imports_95132", "Could not find namespace import or named imports"),
	Selection_is_not_a_valid_type_node: r$11(95133, 3, "Selection_is_not_a_valid_type_node_95133", "Selection is not a valid type node"),
	No_type_could_be_extracted_from_this_type_node: r$11(95134, 3, "No_type_could_be_extracted_from_this_type_node_95134", "No type could be extracted from this type node"),
	Could_not_find_property_for_which_to_generate_accessor: r$11(95135, 3, "Could_not_find_property_for_which_to_generate_accessor_95135", "Could not find property for which to generate accessor"),
	Name_is_not_valid: r$11(95136, 3, "Name_is_not_valid_95136", "Name is not valid"),
	Can_only_convert_property_with_modifier: r$11(95137, 3, "Can_only_convert_property_with_modifier_95137", "Can only convert property with modifier"),
	Switch_each_misused_0_to_1: r$11(95138, 3, "Switch_each_misused_0_to_1_95138", "Switch each misused '{0}' to '{1}'"),
	Convert_to_optional_chain_expression: r$11(95139, 3, "Convert_to_optional_chain_expression_95139", "Convert to optional chain expression"),
	Could_not_find_convertible_access_expression: r$11(95140, 3, "Could_not_find_convertible_access_expression_95140", "Could not find convertible access expression"),
	Could_not_find_matching_access_expressions: r$11(95141, 3, "Could_not_find_matching_access_expressions_95141", "Could not find matching access expressions"),
	Can_only_convert_logical_AND_access_chains: r$11(95142, 3, "Can_only_convert_logical_AND_access_chains_95142", "Can only convert logical AND access chains"),
	Add_void_to_Promise_resolved_without_a_value: r$11(95143, 3, "Add_void_to_Promise_resolved_without_a_value_95143", "Add 'void' to Promise resolved without a value"),
	Add_void_to_all_Promises_resolved_without_a_value: r$11(95144, 3, "Add_void_to_all_Promises_resolved_without_a_value_95144", "Add 'void' to all Promises resolved without a value"),
	Use_element_access_for_0: r$11(95145, 3, "Use_element_access_for_0_95145", "Use element access for '{0}'"),
	Use_element_access_for_all_undeclared_properties: r$11(95146, 3, "Use_element_access_for_all_undeclared_properties_95146", "Use element access for all undeclared properties."),
	Delete_all_unused_imports: r$11(95147, 3, "Delete_all_unused_imports_95147", "Delete all unused imports"),
	Infer_function_return_type: r$11(95148, 3, "Infer_function_return_type_95148", "Infer function return type"),
	Return_type_must_be_inferred_from_a_function: r$11(95149, 3, "Return_type_must_be_inferred_from_a_function_95149", "Return type must be inferred from a function"),
	Could_not_determine_function_return_type: r$11(95150, 3, "Could_not_determine_function_return_type_95150", "Could not determine function return type"),
	Could_not_convert_to_arrow_function: r$11(95151, 3, "Could_not_convert_to_arrow_function_95151", "Could not convert to arrow function"),
	Could_not_convert_to_named_function: r$11(95152, 3, "Could_not_convert_to_named_function_95152", "Could not convert to named function"),
	Could_not_convert_to_anonymous_function: r$11(95153, 3, "Could_not_convert_to_anonymous_function_95153", "Could not convert to anonymous function"),
	Can_only_convert_string_concatenations_and_string_literals: r$11(95154, 3, "Can_only_convert_string_concatenations_and_string_literals_95154", "Can only convert string concatenations and string literals"),
	Selection_is_not_a_valid_statement_or_statements: r$11(95155, 3, "Selection_is_not_a_valid_statement_or_statements_95155", "Selection is not a valid statement or statements"),
	Add_missing_function_declaration_0: r$11(95156, 3, "Add_missing_function_declaration_0_95156", "Add missing function declaration '{0}'"),
	Add_all_missing_function_declarations: r$11(95157, 3, "Add_all_missing_function_declarations_95157", "Add all missing function declarations"),
	Method_not_implemented: r$11(95158, 3, "Method_not_implemented_95158", "Method not implemented."),
	Function_not_implemented: r$11(95159, 3, "Function_not_implemented_95159", "Function not implemented."),
	Add_override_modifier: r$11(95160, 3, "Add_override_modifier_95160", "Add 'override' modifier"),
	Remove_override_modifier: r$11(95161, 3, "Remove_override_modifier_95161", "Remove 'override' modifier"),
	Add_all_missing_override_modifiers: r$11(95162, 3, "Add_all_missing_override_modifiers_95162", "Add all missing 'override' modifiers"),
	Remove_all_unnecessary_override_modifiers: r$11(95163, 3, "Remove_all_unnecessary_override_modifiers_95163", "Remove all unnecessary 'override' modifiers"),
	Can_only_convert_named_export: r$11(95164, 3, "Can_only_convert_named_export_95164", "Can only convert named export"),
	Add_missing_properties: r$11(95165, 3, "Add_missing_properties_95165", "Add missing properties"),
	Add_all_missing_properties: r$11(95166, 3, "Add_all_missing_properties_95166", "Add all missing properties"),
	Add_missing_attributes: r$11(95167, 3, "Add_missing_attributes_95167", "Add missing attributes"),
	Add_all_missing_attributes: r$11(95168, 3, "Add_all_missing_attributes_95168", "Add all missing attributes"),
	Add_undefined_to_optional_property_type: r$11(95169, 3, "Add_undefined_to_optional_property_type_95169", "Add 'undefined' to optional property type"),
	Convert_named_imports_to_default_import: r$11(95170, 3, "Convert_named_imports_to_default_import_95170", "Convert named imports to default import"),
	Delete_unused_param_tag_0: r$11(95171, 3, "Delete_unused_param_tag_0_95171", "Delete unused '@param' tag '{0}'"),
	Delete_all_unused_param_tags: r$11(95172, 3, "Delete_all_unused_param_tags_95172", "Delete all unused '@param' tags"),
	Rename_param_tag_name_0_to_1: r$11(95173, 3, "Rename_param_tag_name_0_to_1_95173", "Rename '@param' tag name '{0}' to '{1}'"),
	Use_0: r$11(95174, 3, "Use_0_95174", "Use `{0}`."),
	Use_Number_isNaN_in_all_conditions: r$11(95175, 3, "Use_Number_isNaN_in_all_conditions_95175", "Use `Number.isNaN` in all conditions."),
	Convert_typedef_to_TypeScript_type: r$11(95176, 3, "Convert_typedef_to_TypeScript_type_95176", "Convert typedef to TypeScript type."),
	Convert_all_typedef_to_TypeScript_types: r$11(95177, 3, "Convert_all_typedef_to_TypeScript_types_95177", "Convert all typedef to TypeScript types."),
	Move_to_file: r$11(95178, 3, "Move_to_file_95178", "Move to file"),
	Cannot_move_to_file_selected_file_is_invalid: r$11(95179, 3, "Cannot_move_to_file_selected_file_is_invalid_95179", "Cannot move to file, selected file is invalid"),
	Use_import_type: r$11(95180, 3, "Use_import_type_95180", "Use 'import type'"),
	Use_type_0: r$11(95181, 3, "Use_type_0_95181", "Use 'type {0}'"),
	Fix_all_with_type_only_imports: r$11(95182, 3, "Fix_all_with_type_only_imports_95182", "Fix all with type-only imports"),
	Cannot_move_statements_to_the_selected_file: r$11(95183, 3, "Cannot_move_statements_to_the_selected_file_95183", "Cannot move statements to the selected file"),
	Inline_variable: r$11(95184, 3, "Inline_variable_95184", "Inline variable"),
	Could_not_find_variable_to_inline: r$11(95185, 3, "Could_not_find_variable_to_inline_95185", "Could not find variable to inline."),
	Variables_with_multiple_declarations_cannot_be_inlined: r$11(95186, 3, "Variables_with_multiple_declarations_cannot_be_inlined_95186", "Variables with multiple declarations cannot be inlined."),
	Add_missing_comma_for_object_member_completion_0: r$11(95187, 3, "Add_missing_comma_for_object_member_completion_0_95187", "Add missing comma for object member completion '{0}'."),
	Add_missing_parameter_to_0: r$11(95188, 3, "Add_missing_parameter_to_0_95188", "Add missing parameter to '{0}'"),
	Add_missing_parameters_to_0: r$11(95189, 3, "Add_missing_parameters_to_0_95189", "Add missing parameters to '{0}'"),
	Add_all_missing_parameters: r$11(95190, 3, "Add_all_missing_parameters_95190", "Add all missing parameters"),
	Add_optional_parameter_to_0: r$11(95191, 3, "Add_optional_parameter_to_0_95191", "Add optional parameter to '{0}'"),
	Add_optional_parameters_to_0: r$11(95192, 3, "Add_optional_parameters_to_0_95192", "Add optional parameters to '{0}'"),
	Add_all_optional_parameters: r$11(95193, 3, "Add_all_optional_parameters_95193", "Add all optional parameters"),
	Wrap_in_parentheses: r$11(95194, 3, "Wrap_in_parentheses_95194", "Wrap in parentheses"),
	Wrap_all_invalid_decorator_expressions_in_parentheses: r$11(95195, 3, "Wrap_all_invalid_decorator_expressions_in_parentheses_95195", "Wrap all invalid decorator expressions in parentheses"),
	Add_resolution_mode_import_attribute: r$11(95196, 3, "Add_resolution_mode_import_attribute_95196", "Add 'resolution-mode' import attribute"),
	Add_resolution_mode_import_attribute_to_all_type_only_imports_that_need_it: r$11(95197, 3, "Add_resolution_mode_import_attribute_to_all_type_only_imports_that_need_it_95197", "Add 'resolution-mode' import attribute to all type-only imports that need it"),
	No_value_exists_in_scope_for_the_shorthand_property_0_Either_declare_one_or_provide_an_initializer: r$11(18004, 1, "No_value_exists_in_scope_for_the_shorthand_property_0_Either_declare_one_or_provide_an_initializer_18004", "No value exists in scope for the shorthand property '{0}'. Either declare one or provide an initializer."),
	Classes_may_not_have_a_field_named_constructor: r$11(18006, 1, "Classes_may_not_have_a_field_named_constructor_18006", "Classes may not have a field named 'constructor'."),
	JSX_expressions_may_not_use_the_comma_operator_Did_you_mean_to_write_an_array: r$11(18007, 1, "JSX_expressions_may_not_use_the_comma_operator_Did_you_mean_to_write_an_array_18007", "JSX expressions may not use the comma operator. Did you mean to write an array?"),
	Private_identifiers_cannot_be_used_as_parameters: r$11(18009, 1, "Private_identifiers_cannot_be_used_as_parameters_18009", "Private identifiers cannot be used as parameters."),
	An_accessibility_modifier_cannot_be_used_with_a_private_identifier: r$11(18010, 1, "An_accessibility_modifier_cannot_be_used_with_a_private_identifier_18010", "An accessibility modifier cannot be used with a private identifier."),
	The_operand_of_a_delete_operator_cannot_be_a_private_identifier: r$11(18011, 1, "The_operand_of_a_delete_operator_cannot_be_a_private_identifier_18011", "The operand of a 'delete' operator cannot be a private identifier."),
	constructor_is_a_reserved_word: r$11(18012, 1, "constructor_is_a_reserved_word_18012", "'#constructor' is a reserved word."),
	Property_0_is_not_accessible_outside_class_1_because_it_has_a_private_identifier: r$11(18013, 1, "Property_0_is_not_accessible_outside_class_1_because_it_has_a_private_identifier_18013", "Property '{0}' is not accessible outside class '{1}' because it has a private identifier."),
	The_property_0_cannot_be_accessed_on_type_1_within_this_class_because_it_is_shadowed_by_another_private_identifier_with_the_same_spelling: r$11(18014, 1, "The_property_0_cannot_be_accessed_on_type_1_within_this_class_because_it_is_shadowed_by_another_priv_18014", "The property '{0}' cannot be accessed on type '{1}' within this class because it is shadowed by another private identifier with the same spelling."),
	Property_0_in_type_1_refers_to_a_different_member_that_cannot_be_accessed_from_within_type_2: r$11(18015, 1, "Property_0_in_type_1_refers_to_a_different_member_that_cannot_be_accessed_from_within_type_2_18015", "Property '{0}' in type '{1}' refers to a different member that cannot be accessed from within type '{2}'."),
	Private_identifiers_are_not_allowed_outside_class_bodies: r$11(18016, 1, "Private_identifiers_are_not_allowed_outside_class_bodies_18016", "Private identifiers are not allowed outside class bodies."),
	The_shadowing_declaration_of_0_is_defined_here: r$11(18017, 1, "The_shadowing_declaration_of_0_is_defined_here_18017", "The shadowing declaration of '{0}' is defined here"),
	The_declaration_of_0_that_you_probably_intended_to_use_is_defined_here: r$11(18018, 1, "The_declaration_of_0_that_you_probably_intended_to_use_is_defined_here_18018", "The declaration of '{0}' that you probably intended to use is defined here"),
	_0_modifier_cannot_be_used_with_a_private_identifier: r$11(18019, 1, "_0_modifier_cannot_be_used_with_a_private_identifier_18019", "'{0}' modifier cannot be used with a private identifier."),
	An_enum_member_cannot_be_named_with_a_private_identifier: r$11(18024, 1, "An_enum_member_cannot_be_named_with_a_private_identifier_18024", "An enum member cannot be named with a private identifier."),
	can_only_be_used_at_the_start_of_a_file: r$11(18026, 1, "can_only_be_used_at_the_start_of_a_file_18026", "'#!' can only be used at the start of a file."),
	Compiler_reserves_name_0_when_emitting_private_identifier_downlevel: r$11(18027, 1, "Compiler_reserves_name_0_when_emitting_private_identifier_downlevel_18027", "Compiler reserves name '{0}' when emitting private identifier downlevel."),
	Private_identifiers_are_only_available_when_targeting_ECMAScript_2015_and_higher: r$11(18028, 1, "Private_identifiers_are_only_available_when_targeting_ECMAScript_2015_and_higher_18028", "Private identifiers are only available when targeting ECMAScript 2015 and higher."),
	Private_identifiers_are_not_allowed_in_variable_declarations: r$11(18029, 1, "Private_identifiers_are_not_allowed_in_variable_declarations_18029", "Private identifiers are not allowed in variable declarations."),
	An_optional_chain_cannot_contain_private_identifiers: r$11(18030, 1, "An_optional_chain_cannot_contain_private_identifiers_18030", "An optional chain cannot contain private identifiers."),
	The_intersection_0_was_reduced_to_never_because_property_1_has_conflicting_types_in_some_constituents: r$11(18031, 1, "The_intersection_0_was_reduced_to_never_because_property_1_has_conflicting_types_in_some_constituent_18031", "The intersection '{0}' was reduced to 'never' because property '{1}' has conflicting types in some constituents."),
	The_intersection_0_was_reduced_to_never_because_property_1_exists_in_multiple_constituents_and_is_private_in_some: r$11(18032, 1, "The_intersection_0_was_reduced_to_never_because_property_1_exists_in_multiple_constituents_and_is_pr_18032", "The intersection '{0}' was reduced to 'never' because property '{1}' exists in multiple constituents and is private in some."),
	Type_0_is_not_assignable_to_type_1_as_required_for_computed_enum_member_values: r$11(18033, 1, "Type_0_is_not_assignable_to_type_1_as_required_for_computed_enum_member_values_18033", "Type '{0}' is not assignable to type '{1}' as required for computed enum member values."),
	Specify_the_JSX_fragment_factory_function_to_use_when_targeting_react_JSX_emit_with_jsxFactory_compiler_option_is_specified_e_g_Fragment: r$11(18034, 3, "Specify_the_JSX_fragment_factory_function_to_use_when_targeting_react_JSX_emit_with_jsxFactory_compi_18034", "Specify the JSX fragment factory function to use when targeting 'react' JSX emit with 'jsxFactory' compiler option is specified, e.g. 'Fragment'."),
	Invalid_value_for_jsxFragmentFactory_0_is_not_a_valid_identifier_or_qualified_name: r$11(18035, 1, "Invalid_value_for_jsxFragmentFactory_0_is_not_a_valid_identifier_or_qualified_name_18035", "Invalid value for 'jsxFragmentFactory'. '{0}' is not a valid identifier or qualified-name."),
	Class_decorators_can_t_be_used_with_static_private_identifier_Consider_removing_the_experimental_decorator: r$11(18036, 1, "Class_decorators_can_t_be_used_with_static_private_identifier_Consider_removing_the_experimental_dec_18036", "Class decorators can't be used with static private identifier. Consider removing the experimental decorator."),
	await_expression_cannot_be_used_inside_a_class_static_block: r$11(18037, 1, "await_expression_cannot_be_used_inside_a_class_static_block_18037", "'await' expression cannot be used inside a class static block."),
	for_await_loops_cannot_be_used_inside_a_class_static_block: r$11(18038, 1, "for_await_loops_cannot_be_used_inside_a_class_static_block_18038", "'for await' loops cannot be used inside a class static block."),
	Invalid_use_of_0_It_cannot_be_used_inside_a_class_static_block: r$11(18039, 1, "Invalid_use_of_0_It_cannot_be_used_inside_a_class_static_block_18039", "Invalid use of '{0}'. It cannot be used inside a class static block."),
	A_return_statement_cannot_be_used_inside_a_class_static_block: r$11(18041, 1, "A_return_statement_cannot_be_used_inside_a_class_static_block_18041", "A 'return' statement cannot be used inside a class static block."),
	_0_is_a_type_and_cannot_be_imported_in_JavaScript_files_Use_1_in_a_JSDoc_type_annotation: r$11(18042, 1, "_0_is_a_type_and_cannot_be_imported_in_JavaScript_files_Use_1_in_a_JSDoc_type_annotation_18042", "'{0}' is a type and cannot be imported in JavaScript files. Use '{1}' in a JSDoc type annotation."),
	Types_cannot_appear_in_export_declarations_in_JavaScript_files: r$11(18043, 1, "Types_cannot_appear_in_export_declarations_in_JavaScript_files_18043", "Types cannot appear in export declarations in JavaScript files."),
	_0_is_automatically_exported_here: r$11(18044, 3, "_0_is_automatically_exported_here_18044", "'{0}' is automatically exported here."),
	Properties_with_the_accessor_modifier_are_only_available_when_targeting_ECMAScript_2015_and_higher: r$11(18045, 1, "Properties_with_the_accessor_modifier_are_only_available_when_targeting_ECMAScript_2015_and_higher_18045", "Properties with the 'accessor' modifier are only available when targeting ECMAScript 2015 and higher."),
	_0_is_of_type_unknown: r$11(18046, 1, "_0_is_of_type_unknown_18046", "'{0}' is of type 'unknown'."),
	_0_is_possibly_null: r$11(18047, 1, "_0_is_possibly_null_18047", "'{0}' is possibly 'null'."),
	_0_is_possibly_undefined: r$11(18048, 1, "_0_is_possibly_undefined_18048", "'{0}' is possibly 'undefined'."),
	_0_is_possibly_null_or_undefined: r$11(18049, 1, "_0_is_possibly_null_or_undefined_18049", "'{0}' is possibly 'null' or 'undefined'."),
	The_value_0_cannot_be_used_here: r$11(18050, 1, "The_value_0_cannot_be_used_here_18050", "The value '{0}' cannot be used here."),
	Compiler_option_0_cannot_be_given_an_empty_string: r$11(18051, 1, "Compiler_option_0_cannot_be_given_an_empty_string_18051", "Compiler option '{0}' cannot be given an empty string."),
	Its_type_0_is_not_a_valid_JSX_element_type: r$11(18053, 1, "Its_type_0_is_not_a_valid_JSX_element_type_18053", "Its type '{0}' is not a valid JSX element type."),
	await_using_statements_cannot_be_used_inside_a_class_static_block: r$11(18054, 1, "await_using_statements_cannot_be_used_inside_a_class_static_block_18054", "'await using' statements cannot be used inside a class static block."),
	_0_has_a_string_type_but_must_have_syntactically_recognizable_string_syntax_when_isolatedModules_is_enabled: r$11(18055, 1, "_0_has_a_string_type_but_must_have_syntactically_recognizable_string_syntax_when_isolatedModules_is__18055", "'{0}' has a string type, but must have syntactically recognizable string syntax when 'isolatedModules' is enabled."),
	Enum_member_following_a_non_literal_numeric_member_must_have_an_initializer_when_isolatedModules_is_enabled: r$11(18056, 1, "Enum_member_following_a_non_literal_numeric_member_must_have_an_initializer_when_isolatedModules_is__18056", "Enum member following a non-literal numeric member must have an initializer when 'isolatedModules' is enabled."),
	String_literal_import_and_export_names_are_not_supported_when_the_module_flag_is_set_to_es2015_or_es2020: r$11(18057, 1, "String_literal_import_and_export_names_are_not_supported_when_the_module_flag_is_set_to_es2015_or_es_18057", "String literal import and export names are not supported when the '--module' flag is set to 'es2015' or 'es2020'.")
};
function wt$2(e$4) {
	return e$4 >= 80;
}
function ig(e$4) {
	return e$4 === 32 || wt$2(e$4);
}
var nf = {
	abstract: 128,
	accessor: 129,
	any: 133,
	as: 130,
	asserts: 131,
	assert: 132,
	bigint: 163,
	boolean: 136,
	break: 83,
	case: 84,
	catch: 85,
	class: 86,
	continue: 88,
	const: 87,
	constructor: 137,
	debugger: 89,
	declare: 138,
	default: 90,
	delete: 91,
	do: 92,
	else: 93,
	enum: 94,
	export: 95,
	extends: 96,
	false: 97,
	finally: 98,
	for: 99,
	from: 161,
	function: 100,
	get: 139,
	if: 101,
	implements: 119,
	import: 102,
	in: 103,
	infer: 140,
	instanceof: 104,
	interface: 120,
	intrinsic: 141,
	is: 142,
	keyof: 143,
	let: 121,
	module: 144,
	namespace: 145,
	never: 146,
	new: 105,
	null: 106,
	number: 150,
	object: 151,
	package: 122,
	private: 123,
	protected: 124,
	public: 125,
	override: 164,
	out: 147,
	readonly: 148,
	require: 149,
	global: 162,
	return: 107,
	satisfies: 152,
	set: 153,
	static: 126,
	string: 154,
	super: 108,
	switch: 109,
	symbol: 155,
	this: 110,
	throw: 111,
	true: 112,
	try: 113,
	type: 156,
	typeof: 114,
	undefined: 157,
	unique: 158,
	unknown: 159,
	using: 160,
	var: 115,
	void: 116,
	while: 117,
	with: 118,
	yield: 127,
	async: 134,
	await: 135,
	of: 165
}, ag = new Map(Object.entries(nf)), zm = new Map(Object.entries({
	...nf,
	"{": 19,
	"}": 20,
	"(": 21,
	")": 22,
	"[": 23,
	"]": 24,
	".": 25,
	"...": 26,
	";": 27,
	",": 28,
	"<": 30,
	">": 32,
	"<=": 33,
	">=": 34,
	"==": 35,
	"!=": 36,
	"===": 37,
	"!==": 38,
	"=>": 39,
	"+": 40,
	"-": 41,
	"**": 43,
	"*": 42,
	"/": 44,
	"%": 45,
	"++": 46,
	"--": 47,
	"<<": 48,
	"</": 31,
	">>": 49,
	">>>": 50,
	"&": 51,
	"|": 52,
	"^": 53,
	"!": 54,
	"~": 55,
	"&&": 56,
	"||": 57,
	"?": 58,
	"??": 61,
	"?.": 29,
	":": 59,
	"=": 64,
	"+=": 65,
	"-=": 66,
	"*=": 67,
	"**=": 68,
	"/=": 69,
	"%=": 70,
	"<<=": 71,
	">>=": 72,
	">>>=": 73,
	"&=": 74,
	"|=": 75,
	"^=": 79,
	"||=": 76,
	"&&=": 77,
	"??=": 78,
	"@": 60,
	"#": 63,
	"`": 62
})), Vm = new Map([
	[100, 1],
	[103, 2],
	[105, 4],
	[109, 8],
	[115, 16],
	[117, 32],
	[118, 64],
	[121, 128]
]), sg = new Map([
	[1, Zs$1.RegularExpressionFlagsHasIndices],
	[16, Zs$1.RegularExpressionFlagsDotAll],
	[32, Zs$1.RegularExpressionFlagsUnicode],
	[64, Zs$1.RegularExpressionFlagsUnicodeSets],
	[128, Zs$1.RegularExpressionFlagsSticky]
]), _g = [
	170,
	170,
	181,
	181,
	186,
	186,
	192,
	214,
	216,
	246,
	248,
	705,
	710,
	721,
	736,
	740,
	748,
	748,
	750,
	750,
	880,
	884,
	886,
	887,
	890,
	893,
	902,
	902,
	904,
	906,
	908,
	908,
	910,
	929,
	931,
	1013,
	1015,
	1153,
	1162,
	1319,
	1329,
	1366,
	1369,
	1369,
	1377,
	1415,
	1488,
	1514,
	1520,
	1522,
	1568,
	1610,
	1646,
	1647,
	1649,
	1747,
	1749,
	1749,
	1765,
	1766,
	1774,
	1775,
	1786,
	1788,
	1791,
	1791,
	1808,
	1808,
	1810,
	1839,
	1869,
	1957,
	1969,
	1969,
	1994,
	2026,
	2036,
	2037,
	2042,
	2042,
	2048,
	2069,
	2074,
	2074,
	2084,
	2084,
	2088,
	2088,
	2112,
	2136,
	2208,
	2208,
	2210,
	2220,
	2308,
	2361,
	2365,
	2365,
	2384,
	2384,
	2392,
	2401,
	2417,
	2423,
	2425,
	2431,
	2437,
	2444,
	2447,
	2448,
	2451,
	2472,
	2474,
	2480,
	2482,
	2482,
	2486,
	2489,
	2493,
	2493,
	2510,
	2510,
	2524,
	2525,
	2527,
	2529,
	2544,
	2545,
	2565,
	2570,
	2575,
	2576,
	2579,
	2600,
	2602,
	2608,
	2610,
	2611,
	2613,
	2614,
	2616,
	2617,
	2649,
	2652,
	2654,
	2654,
	2674,
	2676,
	2693,
	2701,
	2703,
	2705,
	2707,
	2728,
	2730,
	2736,
	2738,
	2739,
	2741,
	2745,
	2749,
	2749,
	2768,
	2768,
	2784,
	2785,
	2821,
	2828,
	2831,
	2832,
	2835,
	2856,
	2858,
	2864,
	2866,
	2867,
	2869,
	2873,
	2877,
	2877,
	2908,
	2909,
	2911,
	2913,
	2929,
	2929,
	2947,
	2947,
	2949,
	2954,
	2958,
	2960,
	2962,
	2965,
	2969,
	2970,
	2972,
	2972,
	2974,
	2975,
	2979,
	2980,
	2984,
	2986,
	2990,
	3001,
	3024,
	3024,
	3077,
	3084,
	3086,
	3088,
	3090,
	3112,
	3114,
	3123,
	3125,
	3129,
	3133,
	3133,
	3160,
	3161,
	3168,
	3169,
	3205,
	3212,
	3214,
	3216,
	3218,
	3240,
	3242,
	3251,
	3253,
	3257,
	3261,
	3261,
	3294,
	3294,
	3296,
	3297,
	3313,
	3314,
	3333,
	3340,
	3342,
	3344,
	3346,
	3386,
	3389,
	3389,
	3406,
	3406,
	3424,
	3425,
	3450,
	3455,
	3461,
	3478,
	3482,
	3505,
	3507,
	3515,
	3517,
	3517,
	3520,
	3526,
	3585,
	3632,
	3634,
	3635,
	3648,
	3654,
	3713,
	3714,
	3716,
	3716,
	3719,
	3720,
	3722,
	3722,
	3725,
	3725,
	3732,
	3735,
	3737,
	3743,
	3745,
	3747,
	3749,
	3749,
	3751,
	3751,
	3754,
	3755,
	3757,
	3760,
	3762,
	3763,
	3773,
	3773,
	3776,
	3780,
	3782,
	3782,
	3804,
	3807,
	3840,
	3840,
	3904,
	3911,
	3913,
	3948,
	3976,
	3980,
	4096,
	4138,
	4159,
	4159,
	4176,
	4181,
	4186,
	4189,
	4193,
	4193,
	4197,
	4198,
	4206,
	4208,
	4213,
	4225,
	4238,
	4238,
	4256,
	4293,
	4295,
	4295,
	4301,
	4301,
	4304,
	4346,
	4348,
	4680,
	4682,
	4685,
	4688,
	4694,
	4696,
	4696,
	4698,
	4701,
	4704,
	4744,
	4746,
	4749,
	4752,
	4784,
	4786,
	4789,
	4792,
	4798,
	4800,
	4800,
	4802,
	4805,
	4808,
	4822,
	4824,
	4880,
	4882,
	4885,
	4888,
	4954,
	4992,
	5007,
	5024,
	5108,
	5121,
	5740,
	5743,
	5759,
	5761,
	5786,
	5792,
	5866,
	5870,
	5872,
	5888,
	5900,
	5902,
	5905,
	5920,
	5937,
	5952,
	5969,
	5984,
	5996,
	5998,
	6e3,
	6016,
	6067,
	6103,
	6103,
	6108,
	6108,
	6176,
	6263,
	6272,
	6312,
	6314,
	6314,
	6320,
	6389,
	6400,
	6428,
	6480,
	6509,
	6512,
	6516,
	6528,
	6571,
	6593,
	6599,
	6656,
	6678,
	6688,
	6740,
	6823,
	6823,
	6917,
	6963,
	6981,
	6987,
	7043,
	7072,
	7086,
	7087,
	7098,
	7141,
	7168,
	7203,
	7245,
	7247,
	7258,
	7293,
	7401,
	7404,
	7406,
	7409,
	7413,
	7414,
	7424,
	7615,
	7680,
	7957,
	7960,
	7965,
	7968,
	8005,
	8008,
	8013,
	8016,
	8023,
	8025,
	8025,
	8027,
	8027,
	8029,
	8029,
	8031,
	8061,
	8064,
	8116,
	8118,
	8124,
	8126,
	8126,
	8130,
	8132,
	8134,
	8140,
	8144,
	8147,
	8150,
	8155,
	8160,
	8172,
	8178,
	8180,
	8182,
	8188,
	8305,
	8305,
	8319,
	8319,
	8336,
	8348,
	8450,
	8450,
	8455,
	8455,
	8458,
	8467,
	8469,
	8469,
	8473,
	8477,
	8484,
	8484,
	8486,
	8486,
	8488,
	8488,
	8490,
	8493,
	8495,
	8505,
	8508,
	8511,
	8517,
	8521,
	8526,
	8526,
	8544,
	8584,
	11264,
	11310,
	11312,
	11358,
	11360,
	11492,
	11499,
	11502,
	11506,
	11507,
	11520,
	11557,
	11559,
	11559,
	11565,
	11565,
	11568,
	11623,
	11631,
	11631,
	11648,
	11670,
	11680,
	11686,
	11688,
	11694,
	11696,
	11702,
	11704,
	11710,
	11712,
	11718,
	11720,
	11726,
	11728,
	11734,
	11736,
	11742,
	11823,
	11823,
	12293,
	12295,
	12321,
	12329,
	12337,
	12341,
	12344,
	12348,
	12353,
	12438,
	12445,
	12447,
	12449,
	12538,
	12540,
	12543,
	12549,
	12589,
	12593,
	12686,
	12704,
	12730,
	12784,
	12799,
	13312,
	19893,
	19968,
	40908,
	40960,
	42124,
	42192,
	42237,
	42240,
	42508,
	42512,
	42527,
	42538,
	42539,
	42560,
	42606,
	42623,
	42647,
	42656,
	42735,
	42775,
	42783,
	42786,
	42888,
	42891,
	42894,
	42896,
	42899,
	42912,
	42922,
	43e3,
	43009,
	43011,
	43013,
	43015,
	43018,
	43020,
	43042,
	43072,
	43123,
	43138,
	43187,
	43250,
	43255,
	43259,
	43259,
	43274,
	43301,
	43312,
	43334,
	43360,
	43388,
	43396,
	43442,
	43471,
	43471,
	43520,
	43560,
	43584,
	43586,
	43588,
	43595,
	43616,
	43638,
	43642,
	43642,
	43648,
	43695,
	43697,
	43697,
	43701,
	43702,
	43705,
	43709,
	43712,
	43712,
	43714,
	43714,
	43739,
	43741,
	43744,
	43754,
	43762,
	43764,
	43777,
	43782,
	43785,
	43790,
	43793,
	43798,
	43808,
	43814,
	43816,
	43822,
	43968,
	44002,
	44032,
	55203,
	55216,
	55238,
	55243,
	55291,
	63744,
	64109,
	64112,
	64217,
	64256,
	64262,
	64275,
	64279,
	64285,
	64285,
	64287,
	64296,
	64298,
	64310,
	64312,
	64316,
	64318,
	64318,
	64320,
	64321,
	64323,
	64324,
	64326,
	64433,
	64467,
	64829,
	64848,
	64911,
	64914,
	64967,
	65008,
	65019,
	65136,
	65140,
	65142,
	65276,
	65313,
	65338,
	65345,
	65370,
	65382,
	65470,
	65474,
	65479,
	65482,
	65487,
	65490,
	65495,
	65498,
	65500
], og = [
	170,
	170,
	181,
	181,
	186,
	186,
	192,
	214,
	216,
	246,
	248,
	705,
	710,
	721,
	736,
	740,
	748,
	748,
	750,
	750,
	768,
	884,
	886,
	887,
	890,
	893,
	902,
	902,
	904,
	906,
	908,
	908,
	910,
	929,
	931,
	1013,
	1015,
	1153,
	1155,
	1159,
	1162,
	1319,
	1329,
	1366,
	1369,
	1369,
	1377,
	1415,
	1425,
	1469,
	1471,
	1471,
	1473,
	1474,
	1476,
	1477,
	1479,
	1479,
	1488,
	1514,
	1520,
	1522,
	1552,
	1562,
	1568,
	1641,
	1646,
	1747,
	1749,
	1756,
	1759,
	1768,
	1770,
	1788,
	1791,
	1791,
	1808,
	1866,
	1869,
	1969,
	1984,
	2037,
	2042,
	2042,
	2048,
	2093,
	2112,
	2139,
	2208,
	2208,
	2210,
	2220,
	2276,
	2302,
	2304,
	2403,
	2406,
	2415,
	2417,
	2423,
	2425,
	2431,
	2433,
	2435,
	2437,
	2444,
	2447,
	2448,
	2451,
	2472,
	2474,
	2480,
	2482,
	2482,
	2486,
	2489,
	2492,
	2500,
	2503,
	2504,
	2507,
	2510,
	2519,
	2519,
	2524,
	2525,
	2527,
	2531,
	2534,
	2545,
	2561,
	2563,
	2565,
	2570,
	2575,
	2576,
	2579,
	2600,
	2602,
	2608,
	2610,
	2611,
	2613,
	2614,
	2616,
	2617,
	2620,
	2620,
	2622,
	2626,
	2631,
	2632,
	2635,
	2637,
	2641,
	2641,
	2649,
	2652,
	2654,
	2654,
	2662,
	2677,
	2689,
	2691,
	2693,
	2701,
	2703,
	2705,
	2707,
	2728,
	2730,
	2736,
	2738,
	2739,
	2741,
	2745,
	2748,
	2757,
	2759,
	2761,
	2763,
	2765,
	2768,
	2768,
	2784,
	2787,
	2790,
	2799,
	2817,
	2819,
	2821,
	2828,
	2831,
	2832,
	2835,
	2856,
	2858,
	2864,
	2866,
	2867,
	2869,
	2873,
	2876,
	2884,
	2887,
	2888,
	2891,
	2893,
	2902,
	2903,
	2908,
	2909,
	2911,
	2915,
	2918,
	2927,
	2929,
	2929,
	2946,
	2947,
	2949,
	2954,
	2958,
	2960,
	2962,
	2965,
	2969,
	2970,
	2972,
	2972,
	2974,
	2975,
	2979,
	2980,
	2984,
	2986,
	2990,
	3001,
	3006,
	3010,
	3014,
	3016,
	3018,
	3021,
	3024,
	3024,
	3031,
	3031,
	3046,
	3055,
	3073,
	3075,
	3077,
	3084,
	3086,
	3088,
	3090,
	3112,
	3114,
	3123,
	3125,
	3129,
	3133,
	3140,
	3142,
	3144,
	3146,
	3149,
	3157,
	3158,
	3160,
	3161,
	3168,
	3171,
	3174,
	3183,
	3202,
	3203,
	3205,
	3212,
	3214,
	3216,
	3218,
	3240,
	3242,
	3251,
	3253,
	3257,
	3260,
	3268,
	3270,
	3272,
	3274,
	3277,
	3285,
	3286,
	3294,
	3294,
	3296,
	3299,
	3302,
	3311,
	3313,
	3314,
	3330,
	3331,
	3333,
	3340,
	3342,
	3344,
	3346,
	3386,
	3389,
	3396,
	3398,
	3400,
	3402,
	3406,
	3415,
	3415,
	3424,
	3427,
	3430,
	3439,
	3450,
	3455,
	3458,
	3459,
	3461,
	3478,
	3482,
	3505,
	3507,
	3515,
	3517,
	3517,
	3520,
	3526,
	3530,
	3530,
	3535,
	3540,
	3542,
	3542,
	3544,
	3551,
	3570,
	3571,
	3585,
	3642,
	3648,
	3662,
	3664,
	3673,
	3713,
	3714,
	3716,
	3716,
	3719,
	3720,
	3722,
	3722,
	3725,
	3725,
	3732,
	3735,
	3737,
	3743,
	3745,
	3747,
	3749,
	3749,
	3751,
	3751,
	3754,
	3755,
	3757,
	3769,
	3771,
	3773,
	3776,
	3780,
	3782,
	3782,
	3784,
	3789,
	3792,
	3801,
	3804,
	3807,
	3840,
	3840,
	3864,
	3865,
	3872,
	3881,
	3893,
	3893,
	3895,
	3895,
	3897,
	3897,
	3902,
	3911,
	3913,
	3948,
	3953,
	3972,
	3974,
	3991,
	3993,
	4028,
	4038,
	4038,
	4096,
	4169,
	4176,
	4253,
	4256,
	4293,
	4295,
	4295,
	4301,
	4301,
	4304,
	4346,
	4348,
	4680,
	4682,
	4685,
	4688,
	4694,
	4696,
	4696,
	4698,
	4701,
	4704,
	4744,
	4746,
	4749,
	4752,
	4784,
	4786,
	4789,
	4792,
	4798,
	4800,
	4800,
	4802,
	4805,
	4808,
	4822,
	4824,
	4880,
	4882,
	4885,
	4888,
	4954,
	4957,
	4959,
	4992,
	5007,
	5024,
	5108,
	5121,
	5740,
	5743,
	5759,
	5761,
	5786,
	5792,
	5866,
	5870,
	5872,
	5888,
	5900,
	5902,
	5908,
	5920,
	5940,
	5952,
	5971,
	5984,
	5996,
	5998,
	6e3,
	6002,
	6003,
	6016,
	6099,
	6103,
	6103,
	6108,
	6109,
	6112,
	6121,
	6155,
	6157,
	6160,
	6169,
	6176,
	6263,
	6272,
	6314,
	6320,
	6389,
	6400,
	6428,
	6432,
	6443,
	6448,
	6459,
	6470,
	6509,
	6512,
	6516,
	6528,
	6571,
	6576,
	6601,
	6608,
	6617,
	6656,
	6683,
	6688,
	6750,
	6752,
	6780,
	6783,
	6793,
	6800,
	6809,
	6823,
	6823,
	6912,
	6987,
	6992,
	7001,
	7019,
	7027,
	7040,
	7155,
	7168,
	7223,
	7232,
	7241,
	7245,
	7293,
	7376,
	7378,
	7380,
	7414,
	7424,
	7654,
	7676,
	7957,
	7960,
	7965,
	7968,
	8005,
	8008,
	8013,
	8016,
	8023,
	8025,
	8025,
	8027,
	8027,
	8029,
	8029,
	8031,
	8061,
	8064,
	8116,
	8118,
	8124,
	8126,
	8126,
	8130,
	8132,
	8134,
	8140,
	8144,
	8147,
	8150,
	8155,
	8160,
	8172,
	8178,
	8180,
	8182,
	8188,
	8204,
	8205,
	8255,
	8256,
	8276,
	8276,
	8305,
	8305,
	8319,
	8319,
	8336,
	8348,
	8400,
	8412,
	8417,
	8417,
	8421,
	8432,
	8450,
	8450,
	8455,
	8455,
	8458,
	8467,
	8469,
	8469,
	8473,
	8477,
	8484,
	8484,
	8486,
	8486,
	8488,
	8488,
	8490,
	8493,
	8495,
	8505,
	8508,
	8511,
	8517,
	8521,
	8526,
	8526,
	8544,
	8584,
	11264,
	11310,
	11312,
	11358,
	11360,
	11492,
	11499,
	11507,
	11520,
	11557,
	11559,
	11559,
	11565,
	11565,
	11568,
	11623,
	11631,
	11631,
	11647,
	11670,
	11680,
	11686,
	11688,
	11694,
	11696,
	11702,
	11704,
	11710,
	11712,
	11718,
	11720,
	11726,
	11728,
	11734,
	11736,
	11742,
	11744,
	11775,
	11823,
	11823,
	12293,
	12295,
	12321,
	12335,
	12337,
	12341,
	12344,
	12348,
	12353,
	12438,
	12441,
	12442,
	12445,
	12447,
	12449,
	12538,
	12540,
	12543,
	12549,
	12589,
	12593,
	12686,
	12704,
	12730,
	12784,
	12799,
	13312,
	19893,
	19968,
	40908,
	40960,
	42124,
	42192,
	42237,
	42240,
	42508,
	42512,
	42539,
	42560,
	42607,
	42612,
	42621,
	42623,
	42647,
	42655,
	42737,
	42775,
	42783,
	42786,
	42888,
	42891,
	42894,
	42896,
	42899,
	42912,
	42922,
	43e3,
	43047,
	43072,
	43123,
	43136,
	43204,
	43216,
	43225,
	43232,
	43255,
	43259,
	43259,
	43264,
	43309,
	43312,
	43347,
	43360,
	43388,
	43392,
	43456,
	43471,
	43481,
	43520,
	43574,
	43584,
	43597,
	43600,
	43609,
	43616,
	43638,
	43642,
	43643,
	43648,
	43714,
	43739,
	43741,
	43744,
	43759,
	43762,
	43766,
	43777,
	43782,
	43785,
	43790,
	43793,
	43798,
	43808,
	43814,
	43816,
	43822,
	43968,
	44010,
	44012,
	44013,
	44016,
	44025,
	44032,
	55203,
	55216,
	55238,
	55243,
	55291,
	63744,
	64109,
	64112,
	64217,
	64256,
	64262,
	64275,
	64279,
	64285,
	64296,
	64298,
	64310,
	64312,
	64316,
	64318,
	64318,
	64320,
	64321,
	64323,
	64324,
	64326,
	64433,
	64467,
	64829,
	64848,
	64911,
	64914,
	64967,
	65008,
	65019,
	65024,
	65039,
	65056,
	65062,
	65075,
	65076,
	65101,
	65103,
	65136,
	65140,
	65142,
	65276,
	65296,
	65305,
	65313,
	65338,
	65343,
	65343,
	65345,
	65370,
	65382,
	65470,
	65474,
	65479,
	65482,
	65487,
	65490,
	65495,
	65498,
	65500
], cg = [
	65,
	90,
	97,
	122,
	170,
	170,
	181,
	181,
	186,
	186,
	192,
	214,
	216,
	246,
	248,
	705,
	710,
	721,
	736,
	740,
	748,
	748,
	750,
	750,
	880,
	884,
	886,
	887,
	890,
	893,
	895,
	895,
	902,
	902,
	904,
	906,
	908,
	908,
	910,
	929,
	931,
	1013,
	1015,
	1153,
	1162,
	1327,
	1329,
	1366,
	1369,
	1369,
	1376,
	1416,
	1488,
	1514,
	1519,
	1522,
	1568,
	1610,
	1646,
	1647,
	1649,
	1747,
	1749,
	1749,
	1765,
	1766,
	1774,
	1775,
	1786,
	1788,
	1791,
	1791,
	1808,
	1808,
	1810,
	1839,
	1869,
	1957,
	1969,
	1969,
	1994,
	2026,
	2036,
	2037,
	2042,
	2042,
	2048,
	2069,
	2074,
	2074,
	2084,
	2084,
	2088,
	2088,
	2112,
	2136,
	2144,
	2154,
	2160,
	2183,
	2185,
	2190,
	2208,
	2249,
	2308,
	2361,
	2365,
	2365,
	2384,
	2384,
	2392,
	2401,
	2417,
	2432,
	2437,
	2444,
	2447,
	2448,
	2451,
	2472,
	2474,
	2480,
	2482,
	2482,
	2486,
	2489,
	2493,
	2493,
	2510,
	2510,
	2524,
	2525,
	2527,
	2529,
	2544,
	2545,
	2556,
	2556,
	2565,
	2570,
	2575,
	2576,
	2579,
	2600,
	2602,
	2608,
	2610,
	2611,
	2613,
	2614,
	2616,
	2617,
	2649,
	2652,
	2654,
	2654,
	2674,
	2676,
	2693,
	2701,
	2703,
	2705,
	2707,
	2728,
	2730,
	2736,
	2738,
	2739,
	2741,
	2745,
	2749,
	2749,
	2768,
	2768,
	2784,
	2785,
	2809,
	2809,
	2821,
	2828,
	2831,
	2832,
	2835,
	2856,
	2858,
	2864,
	2866,
	2867,
	2869,
	2873,
	2877,
	2877,
	2908,
	2909,
	2911,
	2913,
	2929,
	2929,
	2947,
	2947,
	2949,
	2954,
	2958,
	2960,
	2962,
	2965,
	2969,
	2970,
	2972,
	2972,
	2974,
	2975,
	2979,
	2980,
	2984,
	2986,
	2990,
	3001,
	3024,
	3024,
	3077,
	3084,
	3086,
	3088,
	3090,
	3112,
	3114,
	3129,
	3133,
	3133,
	3160,
	3162,
	3165,
	3165,
	3168,
	3169,
	3200,
	3200,
	3205,
	3212,
	3214,
	3216,
	3218,
	3240,
	3242,
	3251,
	3253,
	3257,
	3261,
	3261,
	3293,
	3294,
	3296,
	3297,
	3313,
	3314,
	3332,
	3340,
	3342,
	3344,
	3346,
	3386,
	3389,
	3389,
	3406,
	3406,
	3412,
	3414,
	3423,
	3425,
	3450,
	3455,
	3461,
	3478,
	3482,
	3505,
	3507,
	3515,
	3517,
	3517,
	3520,
	3526,
	3585,
	3632,
	3634,
	3635,
	3648,
	3654,
	3713,
	3714,
	3716,
	3716,
	3718,
	3722,
	3724,
	3747,
	3749,
	3749,
	3751,
	3760,
	3762,
	3763,
	3773,
	3773,
	3776,
	3780,
	3782,
	3782,
	3804,
	3807,
	3840,
	3840,
	3904,
	3911,
	3913,
	3948,
	3976,
	3980,
	4096,
	4138,
	4159,
	4159,
	4176,
	4181,
	4186,
	4189,
	4193,
	4193,
	4197,
	4198,
	4206,
	4208,
	4213,
	4225,
	4238,
	4238,
	4256,
	4293,
	4295,
	4295,
	4301,
	4301,
	4304,
	4346,
	4348,
	4680,
	4682,
	4685,
	4688,
	4694,
	4696,
	4696,
	4698,
	4701,
	4704,
	4744,
	4746,
	4749,
	4752,
	4784,
	4786,
	4789,
	4792,
	4798,
	4800,
	4800,
	4802,
	4805,
	4808,
	4822,
	4824,
	4880,
	4882,
	4885,
	4888,
	4954,
	4992,
	5007,
	5024,
	5109,
	5112,
	5117,
	5121,
	5740,
	5743,
	5759,
	5761,
	5786,
	5792,
	5866,
	5870,
	5880,
	5888,
	5905,
	5919,
	5937,
	5952,
	5969,
	5984,
	5996,
	5998,
	6e3,
	6016,
	6067,
	6103,
	6103,
	6108,
	6108,
	6176,
	6264,
	6272,
	6312,
	6314,
	6314,
	6320,
	6389,
	6400,
	6430,
	6480,
	6509,
	6512,
	6516,
	6528,
	6571,
	6576,
	6601,
	6656,
	6678,
	6688,
	6740,
	6823,
	6823,
	6917,
	6963,
	6981,
	6988,
	7043,
	7072,
	7086,
	7087,
	7098,
	7141,
	7168,
	7203,
	7245,
	7247,
	7258,
	7293,
	7296,
	7304,
	7312,
	7354,
	7357,
	7359,
	7401,
	7404,
	7406,
	7411,
	7413,
	7414,
	7418,
	7418,
	7424,
	7615,
	7680,
	7957,
	7960,
	7965,
	7968,
	8005,
	8008,
	8013,
	8016,
	8023,
	8025,
	8025,
	8027,
	8027,
	8029,
	8029,
	8031,
	8061,
	8064,
	8116,
	8118,
	8124,
	8126,
	8126,
	8130,
	8132,
	8134,
	8140,
	8144,
	8147,
	8150,
	8155,
	8160,
	8172,
	8178,
	8180,
	8182,
	8188,
	8305,
	8305,
	8319,
	8319,
	8336,
	8348,
	8450,
	8450,
	8455,
	8455,
	8458,
	8467,
	8469,
	8469,
	8472,
	8477,
	8484,
	8484,
	8486,
	8486,
	8488,
	8488,
	8490,
	8505,
	8508,
	8511,
	8517,
	8521,
	8526,
	8526,
	8544,
	8584,
	11264,
	11492,
	11499,
	11502,
	11506,
	11507,
	11520,
	11557,
	11559,
	11559,
	11565,
	11565,
	11568,
	11623,
	11631,
	11631,
	11648,
	11670,
	11680,
	11686,
	11688,
	11694,
	11696,
	11702,
	11704,
	11710,
	11712,
	11718,
	11720,
	11726,
	11728,
	11734,
	11736,
	11742,
	12293,
	12295,
	12321,
	12329,
	12337,
	12341,
	12344,
	12348,
	12353,
	12438,
	12443,
	12447,
	12449,
	12538,
	12540,
	12543,
	12549,
	12591,
	12593,
	12686,
	12704,
	12735,
	12784,
	12799,
	13312,
	19903,
	19968,
	42124,
	42192,
	42237,
	42240,
	42508,
	42512,
	42527,
	42538,
	42539,
	42560,
	42606,
	42623,
	42653,
	42656,
	42735,
	42775,
	42783,
	42786,
	42888,
	42891,
	42954,
	42960,
	42961,
	42963,
	42963,
	42965,
	42969,
	42994,
	43009,
	43011,
	43013,
	43015,
	43018,
	43020,
	43042,
	43072,
	43123,
	43138,
	43187,
	43250,
	43255,
	43259,
	43259,
	43261,
	43262,
	43274,
	43301,
	43312,
	43334,
	43360,
	43388,
	43396,
	43442,
	43471,
	43471,
	43488,
	43492,
	43494,
	43503,
	43514,
	43518,
	43520,
	43560,
	43584,
	43586,
	43588,
	43595,
	43616,
	43638,
	43642,
	43642,
	43646,
	43695,
	43697,
	43697,
	43701,
	43702,
	43705,
	43709,
	43712,
	43712,
	43714,
	43714,
	43739,
	43741,
	43744,
	43754,
	43762,
	43764,
	43777,
	43782,
	43785,
	43790,
	43793,
	43798,
	43808,
	43814,
	43816,
	43822,
	43824,
	43866,
	43868,
	43881,
	43888,
	44002,
	44032,
	55203,
	55216,
	55238,
	55243,
	55291,
	63744,
	64109,
	64112,
	64217,
	64256,
	64262,
	64275,
	64279,
	64285,
	64285,
	64287,
	64296,
	64298,
	64310,
	64312,
	64316,
	64318,
	64318,
	64320,
	64321,
	64323,
	64324,
	64326,
	64433,
	64467,
	64829,
	64848,
	64911,
	64914,
	64967,
	65008,
	65019,
	65136,
	65140,
	65142,
	65276,
	65313,
	65338,
	65345,
	65370,
	65382,
	65470,
	65474,
	65479,
	65482,
	65487,
	65490,
	65495,
	65498,
	65500,
	65536,
	65547,
	65549,
	65574,
	65576,
	65594,
	65596,
	65597,
	65599,
	65613,
	65616,
	65629,
	65664,
	65786,
	65856,
	65908,
	66176,
	66204,
	66208,
	66256,
	66304,
	66335,
	66349,
	66378,
	66384,
	66421,
	66432,
	66461,
	66464,
	66499,
	66504,
	66511,
	66513,
	66517,
	66560,
	66717,
	66736,
	66771,
	66776,
	66811,
	66816,
	66855,
	66864,
	66915,
	66928,
	66938,
	66940,
	66954,
	66956,
	66962,
	66964,
	66965,
	66967,
	66977,
	66979,
	66993,
	66995,
	67001,
	67003,
	67004,
	67072,
	67382,
	67392,
	67413,
	67424,
	67431,
	67456,
	67461,
	67463,
	67504,
	67506,
	67514,
	67584,
	67589,
	67592,
	67592,
	67594,
	67637,
	67639,
	67640,
	67644,
	67644,
	67647,
	67669,
	67680,
	67702,
	67712,
	67742,
	67808,
	67826,
	67828,
	67829,
	67840,
	67861,
	67872,
	67897,
	67968,
	68023,
	68030,
	68031,
	68096,
	68096,
	68112,
	68115,
	68117,
	68119,
	68121,
	68149,
	68192,
	68220,
	68224,
	68252,
	68288,
	68295,
	68297,
	68324,
	68352,
	68405,
	68416,
	68437,
	68448,
	68466,
	68480,
	68497,
	68608,
	68680,
	68736,
	68786,
	68800,
	68850,
	68864,
	68899,
	69248,
	69289,
	69296,
	69297,
	69376,
	69404,
	69415,
	69415,
	69424,
	69445,
	69488,
	69505,
	69552,
	69572,
	69600,
	69622,
	69635,
	69687,
	69745,
	69746,
	69749,
	69749,
	69763,
	69807,
	69840,
	69864,
	69891,
	69926,
	69956,
	69956,
	69959,
	69959,
	69968,
	70002,
	70006,
	70006,
	70019,
	70066,
	70081,
	70084,
	70106,
	70106,
	70108,
	70108,
	70144,
	70161,
	70163,
	70187,
	70207,
	70208,
	70272,
	70278,
	70280,
	70280,
	70282,
	70285,
	70287,
	70301,
	70303,
	70312,
	70320,
	70366,
	70405,
	70412,
	70415,
	70416,
	70419,
	70440,
	70442,
	70448,
	70450,
	70451,
	70453,
	70457,
	70461,
	70461,
	70480,
	70480,
	70493,
	70497,
	70656,
	70708,
	70727,
	70730,
	70751,
	70753,
	70784,
	70831,
	70852,
	70853,
	70855,
	70855,
	71040,
	71086,
	71128,
	71131,
	71168,
	71215,
	71236,
	71236,
	71296,
	71338,
	71352,
	71352,
	71424,
	71450,
	71488,
	71494,
	71680,
	71723,
	71840,
	71903,
	71935,
	71942,
	71945,
	71945,
	71948,
	71955,
	71957,
	71958,
	71960,
	71983,
	71999,
	71999,
	72001,
	72001,
	72096,
	72103,
	72106,
	72144,
	72161,
	72161,
	72163,
	72163,
	72192,
	72192,
	72203,
	72242,
	72250,
	72250,
	72272,
	72272,
	72284,
	72329,
	72349,
	72349,
	72368,
	72440,
	72704,
	72712,
	72714,
	72750,
	72768,
	72768,
	72818,
	72847,
	72960,
	72966,
	72968,
	72969,
	72971,
	73008,
	73030,
	73030,
	73056,
	73061,
	73063,
	73064,
	73066,
	73097,
	73112,
	73112,
	73440,
	73458,
	73474,
	73474,
	73476,
	73488,
	73490,
	73523,
	73648,
	73648,
	73728,
	74649,
	74752,
	74862,
	74880,
	75075,
	77712,
	77808,
	77824,
	78895,
	78913,
	78918,
	82944,
	83526,
	92160,
	92728,
	92736,
	92766,
	92784,
	92862,
	92880,
	92909,
	92928,
	92975,
	92992,
	92995,
	93027,
	93047,
	93053,
	93071,
	93760,
	93823,
	93952,
	94026,
	94032,
	94032,
	94099,
	94111,
	94176,
	94177,
	94179,
	94179,
	94208,
	100343,
	100352,
	101589,
	101632,
	101640,
	110576,
	110579,
	110581,
	110587,
	110589,
	110590,
	110592,
	110882,
	110898,
	110898,
	110928,
	110930,
	110933,
	110933,
	110948,
	110951,
	110960,
	111355,
	113664,
	113770,
	113776,
	113788,
	113792,
	113800,
	113808,
	113817,
	119808,
	119892,
	119894,
	119964,
	119966,
	119967,
	119970,
	119970,
	119973,
	119974,
	119977,
	119980,
	119982,
	119993,
	119995,
	119995,
	119997,
	120003,
	120005,
	120069,
	120071,
	120074,
	120077,
	120084,
	120086,
	120092,
	120094,
	120121,
	120123,
	120126,
	120128,
	120132,
	120134,
	120134,
	120138,
	120144,
	120146,
	120485,
	120488,
	120512,
	120514,
	120538,
	120540,
	120570,
	120572,
	120596,
	120598,
	120628,
	120630,
	120654,
	120656,
	120686,
	120688,
	120712,
	120714,
	120744,
	120746,
	120770,
	120772,
	120779,
	122624,
	122654,
	122661,
	122666,
	122928,
	122989,
	123136,
	123180,
	123191,
	123197,
	123214,
	123214,
	123536,
	123565,
	123584,
	123627,
	124112,
	124139,
	124896,
	124902,
	124904,
	124907,
	124909,
	124910,
	124912,
	124926,
	124928,
	125124,
	125184,
	125251,
	125259,
	125259,
	126464,
	126467,
	126469,
	126495,
	126497,
	126498,
	126500,
	126500,
	126503,
	126503,
	126505,
	126514,
	126516,
	126519,
	126521,
	126521,
	126523,
	126523,
	126530,
	126530,
	126535,
	126535,
	126537,
	126537,
	126539,
	126539,
	126541,
	126543,
	126545,
	126546,
	126548,
	126548,
	126551,
	126551,
	126553,
	126553,
	126555,
	126555,
	126557,
	126557,
	126559,
	126559,
	126561,
	126562,
	126564,
	126564,
	126567,
	126570,
	126572,
	126578,
	126580,
	126583,
	126585,
	126588,
	126590,
	126590,
	126592,
	126601,
	126603,
	126619,
	126625,
	126627,
	126629,
	126633,
	126635,
	126651,
	131072,
	173791,
	173824,
	177977,
	177984,
	178205,
	178208,
	183969,
	183984,
	191456,
	191472,
	192093,
	194560,
	195101,
	196608,
	201546,
	201552,
	205743
], lg = [
	48,
	57,
	65,
	90,
	95,
	95,
	97,
	122,
	170,
	170,
	181,
	181,
	183,
	183,
	186,
	186,
	192,
	214,
	216,
	246,
	248,
	705,
	710,
	721,
	736,
	740,
	748,
	748,
	750,
	750,
	768,
	884,
	886,
	887,
	890,
	893,
	895,
	895,
	902,
	906,
	908,
	908,
	910,
	929,
	931,
	1013,
	1015,
	1153,
	1155,
	1159,
	1162,
	1327,
	1329,
	1366,
	1369,
	1369,
	1376,
	1416,
	1425,
	1469,
	1471,
	1471,
	1473,
	1474,
	1476,
	1477,
	1479,
	1479,
	1488,
	1514,
	1519,
	1522,
	1552,
	1562,
	1568,
	1641,
	1646,
	1747,
	1749,
	1756,
	1759,
	1768,
	1770,
	1788,
	1791,
	1791,
	1808,
	1866,
	1869,
	1969,
	1984,
	2037,
	2042,
	2042,
	2045,
	2045,
	2048,
	2093,
	2112,
	2139,
	2144,
	2154,
	2160,
	2183,
	2185,
	2190,
	2200,
	2273,
	2275,
	2403,
	2406,
	2415,
	2417,
	2435,
	2437,
	2444,
	2447,
	2448,
	2451,
	2472,
	2474,
	2480,
	2482,
	2482,
	2486,
	2489,
	2492,
	2500,
	2503,
	2504,
	2507,
	2510,
	2519,
	2519,
	2524,
	2525,
	2527,
	2531,
	2534,
	2545,
	2556,
	2556,
	2558,
	2558,
	2561,
	2563,
	2565,
	2570,
	2575,
	2576,
	2579,
	2600,
	2602,
	2608,
	2610,
	2611,
	2613,
	2614,
	2616,
	2617,
	2620,
	2620,
	2622,
	2626,
	2631,
	2632,
	2635,
	2637,
	2641,
	2641,
	2649,
	2652,
	2654,
	2654,
	2662,
	2677,
	2689,
	2691,
	2693,
	2701,
	2703,
	2705,
	2707,
	2728,
	2730,
	2736,
	2738,
	2739,
	2741,
	2745,
	2748,
	2757,
	2759,
	2761,
	2763,
	2765,
	2768,
	2768,
	2784,
	2787,
	2790,
	2799,
	2809,
	2815,
	2817,
	2819,
	2821,
	2828,
	2831,
	2832,
	2835,
	2856,
	2858,
	2864,
	2866,
	2867,
	2869,
	2873,
	2876,
	2884,
	2887,
	2888,
	2891,
	2893,
	2901,
	2903,
	2908,
	2909,
	2911,
	2915,
	2918,
	2927,
	2929,
	2929,
	2946,
	2947,
	2949,
	2954,
	2958,
	2960,
	2962,
	2965,
	2969,
	2970,
	2972,
	2972,
	2974,
	2975,
	2979,
	2980,
	2984,
	2986,
	2990,
	3001,
	3006,
	3010,
	3014,
	3016,
	3018,
	3021,
	3024,
	3024,
	3031,
	3031,
	3046,
	3055,
	3072,
	3084,
	3086,
	3088,
	3090,
	3112,
	3114,
	3129,
	3132,
	3140,
	3142,
	3144,
	3146,
	3149,
	3157,
	3158,
	3160,
	3162,
	3165,
	3165,
	3168,
	3171,
	3174,
	3183,
	3200,
	3203,
	3205,
	3212,
	3214,
	3216,
	3218,
	3240,
	3242,
	3251,
	3253,
	3257,
	3260,
	3268,
	3270,
	3272,
	3274,
	3277,
	3285,
	3286,
	3293,
	3294,
	3296,
	3299,
	3302,
	3311,
	3313,
	3315,
	3328,
	3340,
	3342,
	3344,
	3346,
	3396,
	3398,
	3400,
	3402,
	3406,
	3412,
	3415,
	3423,
	3427,
	3430,
	3439,
	3450,
	3455,
	3457,
	3459,
	3461,
	3478,
	3482,
	3505,
	3507,
	3515,
	3517,
	3517,
	3520,
	3526,
	3530,
	3530,
	3535,
	3540,
	3542,
	3542,
	3544,
	3551,
	3558,
	3567,
	3570,
	3571,
	3585,
	3642,
	3648,
	3662,
	3664,
	3673,
	3713,
	3714,
	3716,
	3716,
	3718,
	3722,
	3724,
	3747,
	3749,
	3749,
	3751,
	3773,
	3776,
	3780,
	3782,
	3782,
	3784,
	3790,
	3792,
	3801,
	3804,
	3807,
	3840,
	3840,
	3864,
	3865,
	3872,
	3881,
	3893,
	3893,
	3895,
	3895,
	3897,
	3897,
	3902,
	3911,
	3913,
	3948,
	3953,
	3972,
	3974,
	3991,
	3993,
	4028,
	4038,
	4038,
	4096,
	4169,
	4176,
	4253,
	4256,
	4293,
	4295,
	4295,
	4301,
	4301,
	4304,
	4346,
	4348,
	4680,
	4682,
	4685,
	4688,
	4694,
	4696,
	4696,
	4698,
	4701,
	4704,
	4744,
	4746,
	4749,
	4752,
	4784,
	4786,
	4789,
	4792,
	4798,
	4800,
	4800,
	4802,
	4805,
	4808,
	4822,
	4824,
	4880,
	4882,
	4885,
	4888,
	4954,
	4957,
	4959,
	4969,
	4977,
	4992,
	5007,
	5024,
	5109,
	5112,
	5117,
	5121,
	5740,
	5743,
	5759,
	5761,
	5786,
	5792,
	5866,
	5870,
	5880,
	5888,
	5909,
	5919,
	5940,
	5952,
	5971,
	5984,
	5996,
	5998,
	6e3,
	6002,
	6003,
	6016,
	6099,
	6103,
	6103,
	6108,
	6109,
	6112,
	6121,
	6155,
	6157,
	6159,
	6169,
	6176,
	6264,
	6272,
	6314,
	6320,
	6389,
	6400,
	6430,
	6432,
	6443,
	6448,
	6459,
	6470,
	6509,
	6512,
	6516,
	6528,
	6571,
	6576,
	6601,
	6608,
	6618,
	6656,
	6683,
	6688,
	6750,
	6752,
	6780,
	6783,
	6793,
	6800,
	6809,
	6823,
	6823,
	6832,
	6845,
	6847,
	6862,
	6912,
	6988,
	6992,
	7001,
	7019,
	7027,
	7040,
	7155,
	7168,
	7223,
	7232,
	7241,
	7245,
	7293,
	7296,
	7304,
	7312,
	7354,
	7357,
	7359,
	7376,
	7378,
	7380,
	7418,
	7424,
	7957,
	7960,
	7965,
	7968,
	8005,
	8008,
	8013,
	8016,
	8023,
	8025,
	8025,
	8027,
	8027,
	8029,
	8029,
	8031,
	8061,
	8064,
	8116,
	8118,
	8124,
	8126,
	8126,
	8130,
	8132,
	8134,
	8140,
	8144,
	8147,
	8150,
	8155,
	8160,
	8172,
	8178,
	8180,
	8182,
	8188,
	8204,
	8205,
	8255,
	8256,
	8276,
	8276,
	8305,
	8305,
	8319,
	8319,
	8336,
	8348,
	8400,
	8412,
	8417,
	8417,
	8421,
	8432,
	8450,
	8450,
	8455,
	8455,
	8458,
	8467,
	8469,
	8469,
	8472,
	8477,
	8484,
	8484,
	8486,
	8486,
	8488,
	8488,
	8490,
	8505,
	8508,
	8511,
	8517,
	8521,
	8526,
	8526,
	8544,
	8584,
	11264,
	11492,
	11499,
	11507,
	11520,
	11557,
	11559,
	11559,
	11565,
	11565,
	11568,
	11623,
	11631,
	11631,
	11647,
	11670,
	11680,
	11686,
	11688,
	11694,
	11696,
	11702,
	11704,
	11710,
	11712,
	11718,
	11720,
	11726,
	11728,
	11734,
	11736,
	11742,
	11744,
	11775,
	12293,
	12295,
	12321,
	12335,
	12337,
	12341,
	12344,
	12348,
	12353,
	12438,
	12441,
	12447,
	12449,
	12543,
	12549,
	12591,
	12593,
	12686,
	12704,
	12735,
	12784,
	12799,
	13312,
	19903,
	19968,
	42124,
	42192,
	42237,
	42240,
	42508,
	42512,
	42539,
	42560,
	42607,
	42612,
	42621,
	42623,
	42737,
	42775,
	42783,
	42786,
	42888,
	42891,
	42954,
	42960,
	42961,
	42963,
	42963,
	42965,
	42969,
	42994,
	43047,
	43052,
	43052,
	43072,
	43123,
	43136,
	43205,
	43216,
	43225,
	43232,
	43255,
	43259,
	43259,
	43261,
	43309,
	43312,
	43347,
	43360,
	43388,
	43392,
	43456,
	43471,
	43481,
	43488,
	43518,
	43520,
	43574,
	43584,
	43597,
	43600,
	43609,
	43616,
	43638,
	43642,
	43714,
	43739,
	43741,
	43744,
	43759,
	43762,
	43766,
	43777,
	43782,
	43785,
	43790,
	43793,
	43798,
	43808,
	43814,
	43816,
	43822,
	43824,
	43866,
	43868,
	43881,
	43888,
	44010,
	44012,
	44013,
	44016,
	44025,
	44032,
	55203,
	55216,
	55238,
	55243,
	55291,
	63744,
	64109,
	64112,
	64217,
	64256,
	64262,
	64275,
	64279,
	64285,
	64296,
	64298,
	64310,
	64312,
	64316,
	64318,
	64318,
	64320,
	64321,
	64323,
	64324,
	64326,
	64433,
	64467,
	64829,
	64848,
	64911,
	64914,
	64967,
	65008,
	65019,
	65024,
	65039,
	65056,
	65071,
	65075,
	65076,
	65101,
	65103,
	65136,
	65140,
	65142,
	65276,
	65296,
	65305,
	65313,
	65338,
	65343,
	65343,
	65345,
	65370,
	65381,
	65470,
	65474,
	65479,
	65482,
	65487,
	65490,
	65495,
	65498,
	65500,
	65536,
	65547,
	65549,
	65574,
	65576,
	65594,
	65596,
	65597,
	65599,
	65613,
	65616,
	65629,
	65664,
	65786,
	65856,
	65908,
	66045,
	66045,
	66176,
	66204,
	66208,
	66256,
	66272,
	66272,
	66304,
	66335,
	66349,
	66378,
	66384,
	66426,
	66432,
	66461,
	66464,
	66499,
	66504,
	66511,
	66513,
	66517,
	66560,
	66717,
	66720,
	66729,
	66736,
	66771,
	66776,
	66811,
	66816,
	66855,
	66864,
	66915,
	66928,
	66938,
	66940,
	66954,
	66956,
	66962,
	66964,
	66965,
	66967,
	66977,
	66979,
	66993,
	66995,
	67001,
	67003,
	67004,
	67072,
	67382,
	67392,
	67413,
	67424,
	67431,
	67456,
	67461,
	67463,
	67504,
	67506,
	67514,
	67584,
	67589,
	67592,
	67592,
	67594,
	67637,
	67639,
	67640,
	67644,
	67644,
	67647,
	67669,
	67680,
	67702,
	67712,
	67742,
	67808,
	67826,
	67828,
	67829,
	67840,
	67861,
	67872,
	67897,
	67968,
	68023,
	68030,
	68031,
	68096,
	68099,
	68101,
	68102,
	68108,
	68115,
	68117,
	68119,
	68121,
	68149,
	68152,
	68154,
	68159,
	68159,
	68192,
	68220,
	68224,
	68252,
	68288,
	68295,
	68297,
	68326,
	68352,
	68405,
	68416,
	68437,
	68448,
	68466,
	68480,
	68497,
	68608,
	68680,
	68736,
	68786,
	68800,
	68850,
	68864,
	68903,
	68912,
	68921,
	69248,
	69289,
	69291,
	69292,
	69296,
	69297,
	69373,
	69404,
	69415,
	69415,
	69424,
	69456,
	69488,
	69509,
	69552,
	69572,
	69600,
	69622,
	69632,
	69702,
	69734,
	69749,
	69759,
	69818,
	69826,
	69826,
	69840,
	69864,
	69872,
	69881,
	69888,
	69940,
	69942,
	69951,
	69956,
	69959,
	69968,
	70003,
	70006,
	70006,
	70016,
	70084,
	70089,
	70092,
	70094,
	70106,
	70108,
	70108,
	70144,
	70161,
	70163,
	70199,
	70206,
	70209,
	70272,
	70278,
	70280,
	70280,
	70282,
	70285,
	70287,
	70301,
	70303,
	70312,
	70320,
	70378,
	70384,
	70393,
	70400,
	70403,
	70405,
	70412,
	70415,
	70416,
	70419,
	70440,
	70442,
	70448,
	70450,
	70451,
	70453,
	70457,
	70459,
	70468,
	70471,
	70472,
	70475,
	70477,
	70480,
	70480,
	70487,
	70487,
	70493,
	70499,
	70502,
	70508,
	70512,
	70516,
	70656,
	70730,
	70736,
	70745,
	70750,
	70753,
	70784,
	70853,
	70855,
	70855,
	70864,
	70873,
	71040,
	71093,
	71096,
	71104,
	71128,
	71133,
	71168,
	71232,
	71236,
	71236,
	71248,
	71257,
	71296,
	71352,
	71360,
	71369,
	71424,
	71450,
	71453,
	71467,
	71472,
	71481,
	71488,
	71494,
	71680,
	71738,
	71840,
	71913,
	71935,
	71942,
	71945,
	71945,
	71948,
	71955,
	71957,
	71958,
	71960,
	71989,
	71991,
	71992,
	71995,
	72003,
	72016,
	72025,
	72096,
	72103,
	72106,
	72151,
	72154,
	72161,
	72163,
	72164,
	72192,
	72254,
	72263,
	72263,
	72272,
	72345,
	72349,
	72349,
	72368,
	72440,
	72704,
	72712,
	72714,
	72758,
	72760,
	72768,
	72784,
	72793,
	72818,
	72847,
	72850,
	72871,
	72873,
	72886,
	72960,
	72966,
	72968,
	72969,
	72971,
	73014,
	73018,
	73018,
	73020,
	73021,
	73023,
	73031,
	73040,
	73049,
	73056,
	73061,
	73063,
	73064,
	73066,
	73102,
	73104,
	73105,
	73107,
	73112,
	73120,
	73129,
	73440,
	73462,
	73472,
	73488,
	73490,
	73530,
	73534,
	73538,
	73552,
	73561,
	73648,
	73648,
	73728,
	74649,
	74752,
	74862,
	74880,
	75075,
	77712,
	77808,
	77824,
	78895,
	78912,
	78933,
	82944,
	83526,
	92160,
	92728,
	92736,
	92766,
	92768,
	92777,
	92784,
	92862,
	92864,
	92873,
	92880,
	92909,
	92912,
	92916,
	92928,
	92982,
	92992,
	92995,
	93008,
	93017,
	93027,
	93047,
	93053,
	93071,
	93760,
	93823,
	93952,
	94026,
	94031,
	94087,
	94095,
	94111,
	94176,
	94177,
	94179,
	94180,
	94192,
	94193,
	94208,
	100343,
	100352,
	101589,
	101632,
	101640,
	110576,
	110579,
	110581,
	110587,
	110589,
	110590,
	110592,
	110882,
	110898,
	110898,
	110928,
	110930,
	110933,
	110933,
	110948,
	110951,
	110960,
	111355,
	113664,
	113770,
	113776,
	113788,
	113792,
	113800,
	113808,
	113817,
	113821,
	113822,
	118528,
	118573,
	118576,
	118598,
	119141,
	119145,
	119149,
	119154,
	119163,
	119170,
	119173,
	119179,
	119210,
	119213,
	119362,
	119364,
	119808,
	119892,
	119894,
	119964,
	119966,
	119967,
	119970,
	119970,
	119973,
	119974,
	119977,
	119980,
	119982,
	119993,
	119995,
	119995,
	119997,
	120003,
	120005,
	120069,
	120071,
	120074,
	120077,
	120084,
	120086,
	120092,
	120094,
	120121,
	120123,
	120126,
	120128,
	120132,
	120134,
	120134,
	120138,
	120144,
	120146,
	120485,
	120488,
	120512,
	120514,
	120538,
	120540,
	120570,
	120572,
	120596,
	120598,
	120628,
	120630,
	120654,
	120656,
	120686,
	120688,
	120712,
	120714,
	120744,
	120746,
	120770,
	120772,
	120779,
	120782,
	120831,
	121344,
	121398,
	121403,
	121452,
	121461,
	121461,
	121476,
	121476,
	121499,
	121503,
	121505,
	121519,
	122624,
	122654,
	122661,
	122666,
	122880,
	122886,
	122888,
	122904,
	122907,
	122913,
	122915,
	122916,
	122918,
	122922,
	122928,
	122989,
	123023,
	123023,
	123136,
	123180,
	123184,
	123197,
	123200,
	123209,
	123214,
	123214,
	123536,
	123566,
	123584,
	123641,
	124112,
	124153,
	124896,
	124902,
	124904,
	124907,
	124909,
	124910,
	124912,
	124926,
	124928,
	125124,
	125136,
	125142,
	125184,
	125259,
	125264,
	125273,
	126464,
	126467,
	126469,
	126495,
	126497,
	126498,
	126500,
	126500,
	126503,
	126503,
	126505,
	126514,
	126516,
	126519,
	126521,
	126521,
	126523,
	126523,
	126530,
	126530,
	126535,
	126535,
	126537,
	126537,
	126539,
	126539,
	126541,
	126543,
	126545,
	126546,
	126548,
	126548,
	126551,
	126551,
	126553,
	126553,
	126555,
	126555,
	126557,
	126557,
	126559,
	126559,
	126561,
	126562,
	126564,
	126564,
	126567,
	126570,
	126572,
	126578,
	126580,
	126583,
	126585,
	126588,
	126590,
	126590,
	126592,
	126601,
	126603,
	126619,
	126625,
	126627,
	126629,
	126633,
	126635,
	126651,
	130032,
	130041,
	131072,
	173791,
	173824,
	177977,
	177984,
	178205,
	178208,
	183969,
	183984,
	191456,
	191472,
	192093,
	194560,
	195101,
	196608,
	201546,
	201552,
	205743,
	917760,
	917999
], ug = /^\/\/\/?\s*@(ts-expect-error|ts-ignore)/, pg = /^(?:\/|\*)*\s*@(ts-expect-error|ts-ignore)/, fg = /@(?:see|link)/i;
function hl(e$4, t$13) {
	if (e$4 < t$13[0]) return !1;
	let a$13 = 0, o$9 = t$13.length, m$11;
	for (; a$13 + 1 < o$9;) {
		if (m$11 = a$13 + (o$9 - a$13) / 2, m$11 -= m$11 % 2, t$13[m$11] <= e$4 && e$4 <= t$13[m$11 + 1]) return !0;
		e$4 < t$13[m$11] ? o$9 = m$11 : a$13 = m$11 + 2;
	}
	return !1;
}
function dg(e$4, t$13) {
	return t$13 >= 2 ? hl(e$4, cg) : hl(e$4, _g);
}
function mg(e$4, t$13) {
	return t$13 >= 2 ? hl(e$4, lg) : hl(e$4, og);
}
function Wm(e$4) {
	let t$13 = [];
	return e$4.forEach((a$13, o$9) => {
		t$13[a$13] = o$9;
	}), t$13;
}
var hg = Wm(zm);
function it$2(e$4) {
	return hg[e$4];
}
function Gm(e$4) {
	return zm.get(e$4);
}
Wm(Vm);
function Id(e$4) {
	return Vm.get(e$4);
}
function Ym(e$4) {
	let t$13 = [], a$13 = 0, o$9 = 0;
	for (; a$13 < e$4.length;) {
		let m$11 = e$4.charCodeAt(a$13);
		switch (a$13++, m$11) {
			case 13: e$4.charCodeAt(a$13) === 10 && a$13++;
			case 10:
				t$13.push(o$9), o$9 = a$13;
				break;
			default:
				m$11 > 127 && Pn$1(m$11) && (t$13.push(o$9), o$9 = a$13);
				break;
		}
	}
	return t$13.push(o$9), t$13;
}
function yg(e$4, t$13, a$13, o$9, m$11) {
	(t$13 < 0 || t$13 >= e$4.length) && (m$11 ? t$13 = t$13 < 0 ? 0 : t$13 >= e$4.length ? e$4.length - 1 : t$13 : B$2.fail(`Bad line number. Line: ${t$13}, lineStarts.length: ${e$4.length} , line map is correct? ${o$9 !== void 0 ? wy(e$4, Ym(o$9)) : "unknown"}`));
	let v$5 = e$4[t$13] + a$13;
	return m$11 ? v$5 > e$4[t$13 + 1] ? e$4[t$13 + 1] : typeof o$9 == "string" && v$5 > o$9.length ? o$9.length : v$5 : (t$13 < e$4.length - 1 ? B$2.assert(v$5 < e$4[t$13 + 1]) : o$9 !== void 0 && B$2.assert(v$5 <= o$9.length), v$5);
}
function Lp(e$4) {
	return e$4.lineMap || (e$4.lineMap = Ym(e$4.text));
}
function gg(e$4, t$13) {
	let a$13 = bg(e$4, t$13);
	return {
		line: a$13,
		character: t$13 - e$4[a$13]
	};
}
function bg(e$4, t$13, a$13) {
	let o$9 = Py(e$4, t$13, gt$1, Nm, a$13);
	return o$9 < 0 && (o$9 = ~o$9 - 1, B$2.assert(o$9 !== -1, "position cannot precede the beginning of the file")), o$9;
}
function Hm(e$4, t$13) {
	return gg(Lp(e$4), t$13);
}
function za$1(e$4) {
	return a_(e$4) || Pn$1(e$4);
}
function a_(e$4) {
	return e$4 === 32 || e$4 === 9 || e$4 === 11 || e$4 === 12 || e$4 === 160 || e$4 === 133 || e$4 === 5760 || e$4 >= 8192 && e$4 <= 8203 || e$4 === 8239 || e$4 === 8287 || e$4 === 12288 || e$4 === 65279;
}
function Pn$1(e$4) {
	return e$4 === 10 || e$4 === 13 || e$4 === 8232 || e$4 === 8233;
}
function mi$1(e$4) {
	return e$4 >= 48 && e$4 <= 57;
}
function Tp(e$4) {
	return mi$1(e$4) || e$4 >= 65 && e$4 <= 70 || e$4 >= 97 && e$4 <= 102;
}
function rf(e$4) {
	return e$4 >= 65 && e$4 <= 90 || e$4 >= 97 && e$4 <= 122;
}
function Xm(e$4) {
	return rf(e$4) || mi$1(e$4) || e$4 === 95;
}
function xp(e$4) {
	return e$4 >= 48 && e$4 <= 55;
}
function Pr$2(e$4, t$13, a$13, o$9, m$11) {
	if (y_(t$13)) return t$13;
	let v$5 = !1;
	for (;;) {
		let E$3 = e$4.charCodeAt(t$13);
		switch (E$3) {
			case 13: e$4.charCodeAt(t$13 + 1) === 10 && t$13++;
			case 10:
				if (t$13++, a$13) return t$13;
				v$5 = !!m$11;
				continue;
			case 9:
			case 11:
			case 12:
			case 32:
				t$13++;
				continue;
			case 47:
				if (o$9) break;
				if (e$4.charCodeAt(t$13 + 1) === 47) {
					for (t$13 += 2; t$13 < e$4.length && !Pn$1(e$4.charCodeAt(t$13));) t$13++;
					v$5 = !1;
					continue;
				}
				if (e$4.charCodeAt(t$13 + 1) === 42) {
					for (t$13 += 2; t$13 < e$4.length;) {
						if (e$4.charCodeAt(t$13) === 42 && e$4.charCodeAt(t$13 + 1) === 47) {
							t$13 += 2;
							break;
						}
						t$13++;
					}
					v$5 = !1;
					continue;
				}
				break;
			case 60:
			case 124:
			case 61:
			case 62:
				if (Hi(e$4, t$13)) {
					t$13 = Ja$1(e$4, t$13), v$5 = !1;
					continue;
				}
				break;
			case 35:
				if (t$13 === 0 && $m(e$4, t$13)) {
					t$13 = Qm(e$4, t$13), v$5 = !1;
					continue;
				}
				break;
			case 42:
				if (v$5) {
					t$13++, v$5 = !1;
					continue;
				}
				break;
			default:
				if (E$3 > 127 && za$1(E$3)) {
					t$13++;
					continue;
				}
				break;
		}
		return t$13;
	}
}
var ll = 7;
function Hi(e$4, t$13) {
	if (B$2.assert(t$13 >= 0), t$13 === 0 || Pn$1(e$4.charCodeAt(t$13 - 1))) {
		let a$13 = e$4.charCodeAt(t$13);
		if (t$13 + ll < e$4.length) {
			for (let o$9 = 0; o$9 < ll; o$9++) if (e$4.charCodeAt(t$13 + o$9) !== a$13) return !1;
			return a$13 === 61 || e$4.charCodeAt(t$13 + ll) === 32;
		}
	}
	return !1;
}
function Ja$1(e$4, t$13, a$13) {
	a$13 && a$13(A$1.Merge_conflict_marker_encountered, t$13, ll);
	let o$9 = e$4.charCodeAt(t$13), m$11 = e$4.length;
	if (o$9 === 60 || o$9 === 62) for (; t$13 < m$11 && !Pn$1(e$4.charCodeAt(t$13));) t$13++;
	else for (B$2.assert(o$9 === 124 || o$9 === 61); t$13 < m$11;) {
		let v$5 = e$4.charCodeAt(t$13);
		if ((v$5 === 61 || v$5 === 62) && v$5 !== o$9 && Hi(e$4, t$13)) break;
		t$13++;
	}
	return t$13;
}
var af = /^#!.*/;
function $m(e$4, t$13) {
	return B$2.assert(t$13 === 0), af.test(e$4);
}
function Qm(e$4, t$13) {
	let a$13 = af.exec(e$4)[0];
	return t$13 = t$13 + a$13.length, t$13;
}
function wl(e$4, t$13, a$13, o$9, m$11, v$5, E$3) {
	let C$3, c$3, W$2, h$3, y$7 = !1, g$2 = o$9, x$3 = E$3;
	if (a$13 === 0) {
		g$2 = !0;
		let N$5 = sf(t$13);
		N$5 && (a$13 = N$5.length);
	}
	e: for (; a$13 >= 0 && a$13 < t$13.length;) {
		let N$5 = t$13.charCodeAt(a$13);
		switch (N$5) {
			case 13: t$13.charCodeAt(a$13 + 1) === 10 && a$13++;
			case 10:
				if (a$13++, o$9) break e;
				g$2 = !0, y$7 && (h$3 = !0);
				continue;
			case 9:
			case 11:
			case 12:
			case 32:
				a$13++;
				continue;
			case 47:
				let te$5 = t$13.charCodeAt(a$13 + 1), ue$4 = !1;
				if (te$5 === 47 || te$5 === 42) {
					let ye$4 = te$5 === 47 ? 2 : 3, fe$4 = a$13;
					if (a$13 += 2, te$5 === 47) for (; a$13 < t$13.length;) {
						if (Pn$1(t$13.charCodeAt(a$13))) {
							ue$4 = !0;
							break;
						}
						a$13++;
					}
					else for (; a$13 < t$13.length;) {
						if (t$13.charCodeAt(a$13) === 42 && t$13.charCodeAt(a$13 + 1) === 47) {
							a$13 += 2;
							break;
						}
						a$13++;
					}
					if (g$2) {
						if (y$7 && (x$3 = m$11(C$3, c$3, W$2, h$3, v$5, x$3), !e$4 && x$3)) return x$3;
						C$3 = fe$4, c$3 = a$13, W$2 = ye$4, h$3 = ue$4, y$7 = !0;
					}
					continue;
				}
				break e;
			default:
				if (N$5 > 127 && za$1(N$5)) {
					y$7 && Pn$1(N$5) && (h$3 = !0), a$13++;
					continue;
				}
				break e;
		}
	}
	return y$7 && (x$3 = m$11(C$3, c$3, W$2, h$3, v$5, x$3)), x$3;
}
function Km(e$4, t$13, a$13, o$9) {
	return wl(!1, e$4, t$13, !1, a$13, o$9);
}
function Zm(e$4, t$13, a$13, o$9) {
	return wl(!1, e$4, t$13, !0, a$13, o$9);
}
function vg(e$4, t$13, a$13, o$9, m$11) {
	return wl(!0, e$4, t$13, !1, a$13, o$9, m$11);
}
function Tg(e$4, t$13, a$13, o$9, m$11) {
	return wl(!0, e$4, t$13, !0, a$13, o$9, m$11);
}
function e1(e$4, t$13, a$13, o$9, m$11, v$5 = []) {
	return v$5.push({
		kind: a$13,
		pos: e$4,
		end: t$13,
		hasTrailingNewLine: o$9
	}), v$5;
}
function Jp(e$4, t$13) {
	return vg(e$4, t$13, e1, void 0, void 0);
}
function xg(e$4, t$13) {
	return Tg(e$4, t$13, e1, void 0, void 0);
}
function sf(e$4) {
	let t$13 = af.exec(e$4);
	if (t$13) return t$13[0];
}
function tr$2(e$4, t$13) {
	return rf(e$4) || e$4 === 36 || e$4 === 95 || e$4 > 127 && dg(e$4, t$13);
}
function Dr$2(e$4, t$13, a$13) {
	return Xm(e$4) || e$4 === 36 || (a$13 === 1 ? e$4 === 45 || e$4 === 58 : !1) || e$4 > 127 && mg(e$4, t$13);
}
function Sg(e$4, t$13, a$13) {
	let o$9 = Xi$1(e$4, 0);
	if (!tr$2(o$9, t$13)) return !1;
	for (let m$11 = zt$2(o$9); m$11 < e$4.length; m$11 += zt$2(o$9)) if (!Dr$2(o$9 = Xi$1(e$4, m$11), t$13, a$13)) return !1;
	return !0;
}
function _f(e$4, t$13, a$13 = 0, o$9, m$11, v$5, E$3) {
	var C$3 = o$9, c$3, W$2, h$3, y$7, g$2, x$3, N$5, te$5, ue$4 = 0, ye$4 = 0, fe$4 = 0;
	Pt$5(C$3, v$5, E$3);
	var M$2 = {
		getTokenFullStart: () => h$3,
		getStartPos: () => h$3,
		getTokenEnd: () => c$3,
		getTextPos: () => c$3,
		getToken: () => g$2,
		getTokenStart: () => y$7,
		getTokenPos: () => y$7,
		getTokenText: () => C$3.substring(y$7, c$3),
		getTokenValue: () => x$3,
		hasUnicodeEscape: () => (N$5 & 1024) !== 0,
		hasExtendedUnicodeEscape: () => (N$5 & 8) !== 0,
		hasPrecedingLineBreak: () => (N$5 & 1) !== 0,
		hasPrecedingJSDocComment: () => (N$5 & 2) !== 0,
		hasPrecedingJSDocLeadingAsterisks: () => (N$5 & 32768) !== 0,
		isIdentifier: () => g$2 === 80 || g$2 > 118,
		isReservedWord: () => g$2 >= 83 && g$2 <= 118,
		isUnterminated: () => (N$5 & 4) !== 0,
		getCommentDirectives: () => te$5,
		getNumericLiteralFlags: () => N$5 & 25584,
		getTokenFlags: () => N$5,
		reScanGreaterToken: lt$3,
		reScanAsteriskEqualsToken: sr$5,
		reScanSlashToken: mt$5,
		reScanTemplateToken: Bt$5,
		reScanTemplateHeadOrNoSubstitutionTemplate: an$5,
		scanJsxIdentifier: Mr$4,
		scanJsxAttributeValue: Gn$6,
		reScanJsxAttributeValue: De$7,
		reScanJsxToken: _r$5,
		reScanLessThanToken: hr$4,
		reScanHashToken: yr$4,
		reScanQuestionToken: Vn$5,
		reScanInvalidIdentifier: Ut$4,
		scanJsxToken: Wn$5,
		scanJsDocToken: J$4,
		scanJSDocCommentTextToken: gr$4,
		scan: ct$4,
		getText: Ke$4,
		clearCommentDirectives: st$5,
		setText: Pt$5,
		setScriptTarget: ut$4,
		setLanguageVariant: Lr$5,
		setScriptKind: br$4,
		setJSDocParsingMode: Jn$5,
		setOnError: Tt$7,
		resetTokenState: Yn$5,
		setTextPos: Yn$5,
		setSkipJsDocLeadingAsterisks: Ei$5,
		tryScan: Xe$4,
		lookAhead: Te$7,
		scanRange: me$5
	};
	return B$2.isDebugging && Object.defineProperty(M$2, "__debugShowCurrentPositionInText", { get: () => {
		let R$6 = M$2.getText();
		return R$6.slice(0, M$2.getTokenFullStart()) + "║" + R$6.slice(M$2.getTokenFullStart());
	} }), M$2;
	function ie$6(R$6) {
		return Xi$1(C$3, R$6);
	}
	function Ce$6(R$6) {
		return R$6 >= 0 && R$6 < W$2 ? ie$6(R$6) : -1;
	}
	function V$5(R$6) {
		return C$3.charCodeAt(R$6);
	}
	function oe$6(R$6) {
		return R$6 >= 0 && R$6 < W$2 ? V$5(R$6) : -1;
	}
	function G$6(R$6, Q$4 = c$3, K$6, xe$4) {
		if (m$11) {
			let Se$5 = c$3;
			c$3 = Q$4, m$11(R$6, K$6 || 0, xe$4), c$3 = Se$5;
		}
	}
	function dt$3() {
		let R$6 = c$3, Q$4 = !1, K$6 = !1, xe$4 = "";
		for (;;) {
			let Se$5 = V$5(c$3);
			if (Se$5 === 95) {
				N$5 |= 512, Q$4 ? (Q$4 = !1, K$6 = !0, xe$4 += C$3.substring(R$6, c$3)) : (N$5 |= 16384, G$6(K$6 ? A$1.Multiple_consecutive_numeric_separators_are_not_permitted : A$1.Numeric_separators_are_not_allowed_here, c$3, 1)), c$3++, R$6 = c$3;
				continue;
			}
			if (mi$1(Se$5)) {
				Q$4 = !0, K$6 = !1, c$3++;
				continue;
			}
			break;
		}
		return V$5(c$3 - 1) === 95 && (N$5 |= 16384, G$6(A$1.Numeric_separators_are_not_allowed_here, c$3 - 1, 1)), xe$4 + C$3.substring(R$6, c$3);
	}
	function rr$5() {
		let R$6 = c$3, Q$4;
		if (V$5(c$3) === 48) if (c$3++, V$5(c$3) === 95) N$5 |= 16896, G$6(A$1.Numeric_separators_are_not_allowed_here, c$3, 1), c$3--, Q$4 = dt$3();
		else if (!ir$5()) N$5 |= 8192, Q$4 = "" + +x$3;
		else if (!x$3) Q$4 = "0";
		else {
			x$3 = "" + parseInt(x$3, 8), N$5 |= 32;
			let be$5 = g$2 === 41, We$2 = (be$5 ? "-" : "") + "0o" + (+x$3).toString(8);
			return be$5 && R$6--, G$6(A$1.Octal_literals_are_not_allowed_Use_the_syntax_0, R$6, c$3 - R$6, We$2), 9;
		}
		else Q$4 = dt$3();
		let K$6, xe$4;
		V$5(c$3) === 46 && (c$3++, K$6 = dt$3());
		let Se$5 = c$3;
		if (V$5(c$3) === 69 || V$5(c$3) === 101) {
			c$3++, N$5 |= 16, (V$5(c$3) === 43 || V$5(c$3) === 45) && c$3++;
			let be$5 = c$3, We$2 = dt$3();
			We$2 ? (xe$4 = C$3.substring(Se$5, be$5) + We$2, Se$5 = c$3) : G$6(A$1.Digit_expected);
		}
		let we$3;
		if (N$5 & 512 ? (we$3 = Q$4, K$6 && (we$3 += "." + K$6), xe$4 && (we$3 += xe$4)) : we$3 = C$3.substring(R$6, Se$5), N$5 & 8192) return G$6(A$1.Decimals_with_leading_zeros_are_not_allowed, R$6, Se$5 - R$6), x$3 = "" + +we$3, 9;
		if (K$6 !== void 0 || N$5 & 16) return vn$4(R$6, K$6 === void 0 && !!(N$5 & 16)), x$3 = "" + +we$3, 9;
		{
			x$3 = we$3;
			let be$5 = $t$4();
			return vn$4(R$6), be$5;
		}
	}
	function vn$4(R$6, Q$4) {
		if (!tr$2(ie$6(c$3), e$4)) return;
		let K$6 = c$3, { length: xe$4 } = vt$6();
		xe$4 === 1 && C$3[K$6] === "n" ? G$6(Q$4 ? A$1.A_bigint_literal_cannot_use_exponential_notation : A$1.A_bigint_literal_must_be_an_integer, R$6, K$6 - R$6 + 1) : (G$6(A$1.An_identifier_or_keyword_cannot_immediately_follow_a_numeric_literal, K$6, xe$4), c$3 = K$6);
	}
	function ir$5() {
		let R$6 = c$3, Q$4 = !0;
		for (; mi$1(oe$6(c$3));) xp(V$5(c$3)) || (Q$4 = !1), c$3++;
		return x$3 = C$3.substring(R$6, c$3), Q$4;
	}
	function Tn$5(R$6, Q$4) {
		let K$6 = Ge$5(R$6, !1, Q$4);
		return K$6 ? parseInt(K$6, 16) : -1;
	}
	function Mn$4(R$6, Q$4) {
		return Ge$5(R$6, !0, Q$4);
	}
	function Ge$5(R$6, Q$4, K$6) {
		let xe$4 = [], Se$5 = !1, we$3 = !1;
		for (; xe$4.length < R$6 || Q$4;) {
			let be$5 = V$5(c$3);
			if (K$6 && be$5 === 95) {
				N$5 |= 512, Se$5 ? (Se$5 = !1, we$3 = !0) : G$6(we$3 ? A$1.Multiple_consecutive_numeric_separators_are_not_permitted : A$1.Numeric_separators_are_not_allowed_here, c$3, 1), c$3++;
				continue;
			}
			if (Se$5 = K$6, be$5 >= 65 && be$5 <= 70) be$5 += 32;
			else if (!(be$5 >= 48 && be$5 <= 57 || be$5 >= 97 && be$5 <= 102)) break;
			xe$4.push(be$5), c$3++, we$3 = !1;
		}
		return xe$4.length < R$6 && (xe$4 = []), V$5(c$3 - 1) === 95 && G$6(A$1.Numeric_separators_are_not_allowed_here, c$3 - 1, 1), String.fromCharCode(...xe$4);
	}
	function ar$5(R$6 = !1) {
		let Q$4 = V$5(c$3);
		c$3++;
		let K$6 = "", xe$4 = c$3;
		for (;;) {
			if (c$3 >= W$2) {
				K$6 += C$3.substring(xe$4, c$3), N$5 |= 4, G$6(A$1.Unterminated_string_literal);
				break;
			}
			let Se$5 = V$5(c$3);
			if (Se$5 === Q$4) {
				K$6 += C$3.substring(xe$4, c$3), c$3++;
				break;
			}
			if (Se$5 === 92 && !R$6) {
				K$6 += C$3.substring(xe$4, c$3), K$6 += Mt$5(3), xe$4 = c$3;
				continue;
			}
			if ((Se$5 === 10 || Se$5 === 13) && !R$6) {
				K$6 += C$3.substring(xe$4, c$3), N$5 |= 4, G$6(A$1.Unterminated_string_literal);
				break;
			}
			c$3++;
		}
		return K$6;
	}
	function Or$5(R$6) {
		let Q$4 = V$5(c$3) === 96;
		c$3++;
		let K$6 = c$3, xe$4 = "", Se$5;
		for (;;) {
			if (c$3 >= W$2) {
				xe$4 += C$3.substring(K$6, c$3), N$5 |= 4, G$6(A$1.Unterminated_template_literal), Se$5 = Q$4 ? 15 : 18;
				break;
			}
			let we$3 = V$5(c$3);
			if (we$3 === 96) {
				xe$4 += C$3.substring(K$6, c$3), c$3++, Se$5 = Q$4 ? 15 : 18;
				break;
			}
			if (we$3 === 36 && c$3 + 1 < W$2 && V$5(c$3 + 1) === 123) {
				xe$4 += C$3.substring(K$6, c$3), c$3 += 2, Se$5 = Q$4 ? 16 : 17;
				break;
			}
			if (we$3 === 92) {
				xe$4 += C$3.substring(K$6, c$3), xe$4 += Mt$5(1 | (R$6 ? 2 : 0)), K$6 = c$3;
				continue;
			}
			if (we$3 === 13) {
				xe$4 += C$3.substring(K$6, c$3), c$3++, c$3 < W$2 && V$5(c$3) === 10 && c$3++, xe$4 += `
`, K$6 = c$3;
				continue;
			}
			c$3++;
		}
		return B$2.assert(Se$5 !== void 0), x$3 = xe$4, Se$5;
	}
	function Mt$5(R$6) {
		let Q$4 = c$3;
		if (c$3++, c$3 >= W$2) return G$6(A$1.Unexpected_end_of_text), "";
		let K$6 = V$5(c$3);
		switch (c$3++, K$6) {
			case 48: if (c$3 >= W$2 || !mi$1(V$5(c$3))) return "\0";
			case 49:
			case 50:
			case 51: c$3 < W$2 && xp(V$5(c$3)) && c$3++;
			case 52:
			case 53:
			case 54:
			case 55:
				if (c$3 < W$2 && xp(V$5(c$3)) && c$3++, N$5 |= 2048, R$6 & 6) {
					let we$3 = parseInt(C$3.substring(Q$4 + 1, c$3), 8);
					return R$6 & 4 && !(R$6 & 32) && K$6 !== 48 ? G$6(A$1.Octal_escape_sequences_and_backreferences_are_not_allowed_in_a_character_class_If_this_was_intended_as_an_escape_sequence_use_the_syntax_0_instead, Q$4, c$3 - Q$4, "\\x" + we$3.toString(16).padStart(2, "0")) : G$6(A$1.Octal_escape_sequences_are_not_allowed_Use_the_syntax_0, Q$4, c$3 - Q$4, "\\x" + we$3.toString(16).padStart(2, "0")), String.fromCharCode(we$3);
				}
				return C$3.substring(Q$4, c$3);
			case 56:
			case 57: return N$5 |= 2048, R$6 & 6 ? (R$6 & 4 && !(R$6 & 32) ? G$6(A$1.Decimal_escape_sequences_and_backreferences_are_not_allowed_in_a_character_class, Q$4, c$3 - Q$4) : G$6(A$1.Escape_sequence_0_is_not_allowed, Q$4, c$3 - Q$4, C$3.substring(Q$4, c$3)), String.fromCharCode(K$6)) : C$3.substring(Q$4, c$3);
			case 98: return "\b";
			case 116: return "	";
			case 110: return `
`;
			case 118: return "\v";
			case 102: return "\f";
			case 114: return "\r";
			case 39: return "'";
			case 34: return "\"";
			case 117:
				if (c$3 < W$2 && V$5(c$3) === 123) {
					c$3 -= 2;
					let we$3 = Fn$4(!!(R$6 & 6));
					return R$6 & 17 || (N$5 |= 2048, R$6 & 6 && G$6(A$1.Unicode_escape_sequences_are_only_available_when_the_Unicode_u_flag_or_the_Unicode_Sets_v_flag_is_set, Q$4, c$3 - Q$4)), we$3;
				}
				for (; c$3 < Q$4 + 6; c$3++) if (!(c$3 < W$2 && Tp(V$5(c$3)))) return N$5 |= 2048, R$6 & 6 && G$6(A$1.Hexadecimal_digit_expected), C$3.substring(Q$4, c$3);
				N$5 |= 1024;
				let xe$4 = parseInt(C$3.substring(Q$4 + 2, c$3), 16), Se$5 = String.fromCharCode(xe$4);
				if (R$6 & 16 && xe$4 >= 55296 && xe$4 <= 56319 && c$3 + 6 < W$2 && C$3.substring(c$3, c$3 + 2) === "\\u" && V$5(c$3 + 2) !== 123) {
					let we$3 = c$3, be$5 = c$3 + 2;
					for (; be$5 < we$3 + 6; be$5++) if (!Tp(V$5(be$5))) return Se$5;
					let We$2 = parseInt(C$3.substring(we$3 + 2, be$5), 16);
					if (We$2 >= 56320 && We$2 <= 57343) return c$3 = be$5, Se$5 + String.fromCharCode(We$2);
				}
				return Se$5;
			case 120:
				for (; c$3 < Q$4 + 4; c$3++) if (!(c$3 < W$2 && Tp(V$5(c$3)))) return N$5 |= 2048, R$6 & 6 && G$6(A$1.Hexadecimal_digit_expected), C$3.substring(Q$4, c$3);
				return N$5 |= 4096, String.fromCharCode(parseInt(C$3.substring(Q$4 + 2, c$3), 16));
			case 13: c$3 < W$2 && V$5(c$3) === 10 && c$3++;
			case 10:
			case 8232:
			case 8233: return "";
			default: return (R$6 & 16 || R$6 & 4 && !(R$6 & 8) && Dr$2(K$6, e$4)) && G$6(A$1.This_character_cannot_be_escaped_in_a_regular_expression, c$3 - 2, 2), String.fromCharCode(K$6);
		}
	}
	function Fn$4(R$6) {
		let Q$4 = c$3;
		c$3 += 3;
		let K$6 = c$3, xe$4 = Mn$4(1, !1), Se$5 = xe$4 ? parseInt(xe$4, 16) : -1, we$3 = !1;
		return Se$5 < 0 ? (R$6 && G$6(A$1.Hexadecimal_digit_expected), we$3 = !0) : Se$5 > 1114111 && (R$6 && G$6(A$1.An_extended_Unicode_escape_value_must_be_between_0x0_and_0x10FFFF_inclusive, K$6, c$3 - K$6), we$3 = !0), c$3 >= W$2 ? (R$6 && G$6(A$1.Unexpected_end_of_text), we$3 = !0) : V$5(c$3) === 125 ? c$3++ : (R$6 && G$6(A$1.Unterminated_Unicode_escape_sequence), we$3 = !0), we$3 ? (N$5 |= 2048, C$3.substring(Q$4, c$3)) : (N$5 |= 8, Od(Se$5));
	}
	function Ln$5() {
		if (c$3 + 5 < W$2 && V$5(c$3 + 1) === 117) {
			let R$6 = c$3;
			c$3 += 2;
			let Q$4 = Tn$5(4, !1);
			return c$3 = R$6, Q$4;
		}
		return -1;
	}
	function Lt$6() {
		if (ie$6(c$3 + 1) === 117 && ie$6(c$3 + 2) === 123) {
			let R$6 = c$3;
			c$3 += 3;
			let Q$4 = Mn$4(1, !1), K$6 = Q$4 ? parseInt(Q$4, 16) : -1;
			return c$3 = R$6, K$6;
		}
		return -1;
	}
	function vt$6() {
		let R$6 = "", Q$4 = c$3;
		for (; c$3 < W$2;) {
			let K$6 = ie$6(c$3);
			if (Dr$2(K$6, e$4)) c$3 += zt$2(K$6);
			else if (K$6 === 92) {
				if (K$6 = Lt$6(), K$6 >= 0 && Dr$2(K$6, e$4)) {
					R$6 += Fn$4(!0), Q$4 = c$3;
					continue;
				}
				if (K$6 = Ln$5(), !(K$6 >= 0 && Dr$2(K$6, e$4))) break;
				N$5 |= 1024, R$6 += C$3.substring(Q$4, c$3), R$6 += Od(K$6), c$3 += 6, Q$4 = c$3;
			} else break;
		}
		return R$6 += C$3.substring(Q$4, c$3), R$6;
	}
	function Qe$4() {
		let R$6 = x$3.length;
		if (R$6 >= 2 && R$6 <= 12) {
			let Q$4 = x$3.charCodeAt(0);
			if (Q$4 >= 97 && Q$4 <= 122) {
				let K$6 = ag.get(x$3);
				if (K$6 !== void 0) return g$2 = K$6;
			}
		}
		return g$2 = 80;
	}
	function zn$6(R$6) {
		let Q$4 = "", K$6 = !1, xe$4 = !1;
		for (;;) {
			let Se$5 = V$5(c$3);
			if (Se$5 === 95) {
				N$5 |= 512, K$6 ? (K$6 = !1, xe$4 = !0) : G$6(xe$4 ? A$1.Multiple_consecutive_numeric_separators_are_not_permitted : A$1.Numeric_separators_are_not_allowed_here, c$3, 1), c$3++;
				continue;
			}
			if (K$6 = !0, !mi$1(Se$5) || Se$5 - 48 >= R$6) break;
			Q$4 += C$3[c$3], c$3++, xe$4 = !1;
		}
		return V$5(c$3 - 1) === 95 && G$6(A$1.Numeric_separators_are_not_allowed_here, c$3 - 1, 1), Q$4;
	}
	function $t$4() {
		return V$5(c$3) === 110 ? (x$3 += "n", N$5 & 384 && (x$3 = Mb(x$3) + "n"), c$3++, 10) : (x$3 = "" + (N$5 & 128 ? parseInt(x$3.slice(2), 2) : N$5 & 256 ? parseInt(x$3.slice(2), 8) : +x$3), 9);
	}
	function ct$4() {
		for (h$3 = c$3, N$5 = 0;;) {
			if (y$7 = c$3, c$3 >= W$2) return g$2 = 1;
			let R$6 = ie$6(c$3);
			if (c$3 === 0 && R$6 === 35 && $m(C$3, c$3)) {
				if (c$3 = Qm(C$3, c$3), t$13) continue;
				return g$2 = 6;
			}
			switch (R$6) {
				case 10:
				case 13: if (N$5 |= 1, t$13) {
					c$3++;
					continue;
				} else return R$6 === 13 && c$3 + 1 < W$2 && V$5(c$3 + 1) === 10 ? c$3 += 2 : c$3++, g$2 = 4;
				case 9:
				case 11:
				case 12:
				case 32:
				case 160:
				case 5760:
				case 8192:
				case 8193:
				case 8194:
				case 8195:
				case 8196:
				case 8197:
				case 8198:
				case 8199:
				case 8200:
				case 8201:
				case 8202:
				case 8203:
				case 8239:
				case 8287:
				case 12288:
				case 65279: if (t$13) {
					c$3++;
					continue;
				} else {
					for (; c$3 < W$2 && a_(V$5(c$3));) c$3++;
					return g$2 = 5;
				}
				case 33: return V$5(c$3 + 1) === 61 ? V$5(c$3 + 2) === 61 ? (c$3 += 3, g$2 = 38) : (c$3 += 2, g$2 = 36) : (c$3++, g$2 = 54);
				case 34:
				case 39: return x$3 = ar$5(), g$2 = 11;
				case 96: return g$2 = Or$5(!1);
				case 37: return V$5(c$3 + 1) === 61 ? (c$3 += 2, g$2 = 70) : (c$3++, g$2 = 45);
				case 38: return V$5(c$3 + 1) === 38 ? V$5(c$3 + 2) === 61 ? (c$3 += 3, g$2 = 77) : (c$3 += 2, g$2 = 56) : V$5(c$3 + 1) === 61 ? (c$3 += 2, g$2 = 74) : (c$3++, g$2 = 51);
				case 40: return c$3++, g$2 = 21;
				case 41: return c$3++, g$2 = 22;
				case 42:
					if (V$5(c$3 + 1) === 61) return c$3 += 2, g$2 = 67;
					if (V$5(c$3 + 1) === 42) return V$5(c$3 + 2) === 61 ? (c$3 += 3, g$2 = 68) : (c$3 += 2, g$2 = 43);
					if (c$3++, ue$4 && (N$5 & 32768) === 0 && N$5 & 1) {
						N$5 |= 32768;
						continue;
					}
					return g$2 = 42;
				case 43: return V$5(c$3 + 1) === 43 ? (c$3 += 2, g$2 = 46) : V$5(c$3 + 1) === 61 ? (c$3 += 2, g$2 = 65) : (c$3++, g$2 = 40);
				case 44: return c$3++, g$2 = 28;
				case 45: return V$5(c$3 + 1) === 45 ? (c$3 += 2, g$2 = 47) : V$5(c$3 + 1) === 61 ? (c$3 += 2, g$2 = 66) : (c$3++, g$2 = 41);
				case 46: return mi$1(V$5(c$3 + 1)) ? (rr$5(), g$2 = 9) : V$5(c$3 + 1) === 46 && V$5(c$3 + 2) === 46 ? (c$3 += 3, g$2 = 26) : (c$3++, g$2 = 25);
				case 47:
					if (V$5(c$3 + 1) === 47) {
						for (c$3 += 2; c$3 < W$2 && !Pn$1(V$5(c$3));) c$3++;
						if (te$5 = ln$5(te$5, C$3.slice(y$7, c$3), ug, y$7), t$13) continue;
						return g$2 = 2;
					}
					if (V$5(c$3 + 1) === 42) {
						c$3 += 2;
						let be$5 = V$5(c$3) === 42 && V$5(c$3 + 1) !== 47, We$2 = !1, et$5 = y$7;
						for (; c$3 < W$2;) {
							let Ye$6 = V$5(c$3);
							if (Ye$6 === 42 && V$5(c$3 + 1) === 47) {
								c$3 += 2, We$2 = !0;
								break;
							}
							c$3++, Pn$1(Ye$6) && (et$5 = c$3, N$5 |= 1);
						}
						if (be$5 && at$4() && (N$5 |= 2), te$5 = ln$5(te$5, C$3.slice(et$5, c$3), pg, et$5), We$2 || G$6(A$1.Asterisk_Slash_expected), t$13) continue;
						return We$2 || (N$5 |= 4), g$2 = 3;
					}
					return V$5(c$3 + 1) === 61 ? (c$3 += 2, g$2 = 69) : (c$3++, g$2 = 44);
				case 48:
					if (c$3 + 2 < W$2 && (V$5(c$3 + 1) === 88 || V$5(c$3 + 1) === 120)) return c$3 += 2, x$3 = Mn$4(1, !0), x$3 || (G$6(A$1.Hexadecimal_digit_expected), x$3 = "0"), x$3 = "0x" + x$3, N$5 |= 64, g$2 = $t$4();
					if (c$3 + 2 < W$2 && (V$5(c$3 + 1) === 66 || V$5(c$3 + 1) === 98)) return c$3 += 2, x$3 = zn$6(2), x$3 || (G$6(A$1.Binary_digit_expected), x$3 = "0"), x$3 = "0b" + x$3, N$5 |= 128, g$2 = $t$4();
					if (c$3 + 2 < W$2 && (V$5(c$3 + 1) === 79 || V$5(c$3 + 1) === 111)) return c$3 += 2, x$3 = zn$6(8), x$3 || (G$6(A$1.Octal_digit_expected), x$3 = "0"), x$3 = "0o" + x$3, N$5 |= 256, g$2 = $t$4();
				case 49:
				case 50:
				case 51:
				case 52:
				case 53:
				case 54:
				case 55:
				case 56:
				case 57: return g$2 = rr$5();
				case 58: return c$3++, g$2 = 59;
				case 59: return c$3++, g$2 = 27;
				case 60:
					if (Hi(C$3, c$3)) {
						if (c$3 = Ja$1(C$3, c$3, G$6), t$13) continue;
						return g$2 = 7;
					}
					return V$5(c$3 + 1) === 60 ? V$5(c$3 + 2) === 61 ? (c$3 += 3, g$2 = 71) : (c$3 += 2, g$2 = 48) : V$5(c$3 + 1) === 61 ? (c$3 += 2, g$2 = 33) : a$13 === 1 && V$5(c$3 + 1) === 47 && V$5(c$3 + 2) !== 42 ? (c$3 += 2, g$2 = 31) : (c$3++, g$2 = 30);
				case 61:
					if (Hi(C$3, c$3)) {
						if (c$3 = Ja$1(C$3, c$3, G$6), t$13) continue;
						return g$2 = 7;
					}
					return V$5(c$3 + 1) === 61 ? V$5(c$3 + 2) === 61 ? (c$3 += 3, g$2 = 37) : (c$3 += 2, g$2 = 35) : V$5(c$3 + 1) === 62 ? (c$3 += 2, g$2 = 39) : (c$3++, g$2 = 64);
				case 62:
					if (Hi(C$3, c$3)) {
						if (c$3 = Ja$1(C$3, c$3, G$6), t$13) continue;
						return g$2 = 7;
					}
					return c$3++, g$2 = 32;
				case 63: return V$5(c$3 + 1) === 46 && !mi$1(V$5(c$3 + 2)) ? (c$3 += 2, g$2 = 29) : V$5(c$3 + 1) === 63 ? V$5(c$3 + 2) === 61 ? (c$3 += 3, g$2 = 78) : (c$3 += 2, g$2 = 61) : (c$3++, g$2 = 58);
				case 91: return c$3++, g$2 = 23;
				case 93: return c$3++, g$2 = 24;
				case 94: return V$5(c$3 + 1) === 61 ? (c$3 += 2, g$2 = 79) : (c$3++, g$2 = 53);
				case 123: return c$3++, g$2 = 19;
				case 124:
					if (Hi(C$3, c$3)) {
						if (c$3 = Ja$1(C$3, c$3, G$6), t$13) continue;
						return g$2 = 7;
					}
					return V$5(c$3 + 1) === 124 ? V$5(c$3 + 2) === 61 ? (c$3 += 3, g$2 = 76) : (c$3 += 2, g$2 = 57) : V$5(c$3 + 1) === 61 ? (c$3 += 2, g$2 = 75) : (c$3++, g$2 = 52);
				case 125: return c$3++, g$2 = 20;
				case 126: return c$3++, g$2 = 55;
				case 64: return c$3++, g$2 = 60;
				case 92:
					let Q$4 = Lt$6();
					if (Q$4 >= 0 && tr$2(Q$4, e$4)) return x$3 = Fn$4(!0) + vt$6(), g$2 = Qe$4();
					let K$6 = Ln$5();
					return K$6 >= 0 && tr$2(K$6, e$4) ? (c$3 += 6, N$5 |= 1024, x$3 = String.fromCharCode(K$6) + vt$6(), g$2 = Qe$4()) : (G$6(A$1.Invalid_character), c$3++, g$2 = 0);
				case 35:
					if (c$3 !== 0 && C$3[c$3 + 1] === "!") return G$6(A$1.can_only_be_used_at_the_start_of_a_file, c$3, 2), c$3++, g$2 = 0;
					let xe$4 = ie$6(c$3 + 1);
					if (xe$4 === 92) {
						c$3++;
						let be$5 = Lt$6();
						if (be$5 >= 0 && tr$2(be$5, e$4)) return x$3 = "#" + Fn$4(!0) + vt$6(), g$2 = 81;
						let We$2 = Ln$5();
						if (We$2 >= 0 && tr$2(We$2, e$4)) return c$3 += 6, N$5 |= 1024, x$3 = "#" + String.fromCharCode(We$2) + vt$6(), g$2 = 81;
						c$3--;
					}
					return tr$2(xe$4, e$4) ? (c$3++, Jt$3(xe$4, e$4)) : (x$3 = "#", G$6(A$1.Invalid_character, c$3++, zt$2(R$6))), g$2 = 81;
				case 65533: return G$6(A$1.File_appears_to_be_binary, 0, 0), c$3 = W$2, g$2 = 8;
				default:
					let Se$5 = Jt$3(R$6, e$4);
					if (Se$5) return g$2 = Se$5;
					if (a_(R$6)) {
						c$3 += zt$2(R$6);
						continue;
					} else if (Pn$1(R$6)) {
						N$5 |= 1, c$3 += zt$2(R$6);
						continue;
					}
					let we$3 = zt$2(R$6);
					return G$6(A$1.Invalid_character, c$3, we$3), c$3 += we$3, g$2 = 0;
			}
		}
	}
	function at$4() {
		switch (fe$4) {
			case 0: return !0;
			case 1: return !1;
		}
		return ye$4 !== 3 && ye$4 !== 4 ? !0 : fe$4 === 3 ? !1 : fg.test(C$3.slice(h$3, c$3));
	}
	function Ut$4() {
		B$2.assert(g$2 === 0, "'reScanInvalidIdentifier' should only be called when the current token is 'SyntaxKind.Unknown'."), c$3 = y$7 = h$3, N$5 = 0;
		let R$6 = ie$6(c$3), Q$4 = Jt$3(R$6, 99);
		return Q$4 ? g$2 = Q$4 : (c$3 += zt$2(R$6), g$2);
	}
	function Jt$3(R$6, Q$4) {
		let K$6 = R$6;
		if (tr$2(K$6, Q$4)) {
			for (c$3 += zt$2(K$6); c$3 < W$2 && Dr$2(K$6 = ie$6(c$3), Q$4);) c$3 += zt$2(K$6);
			return x$3 = C$3.substring(y$7, c$3), K$6 === 92 && (x$3 += vt$6()), Qe$4();
		}
	}
	function lt$3() {
		if (g$2 === 32) {
			if (V$5(c$3) === 62) return V$5(c$3 + 1) === 62 ? V$5(c$3 + 2) === 61 ? (c$3 += 3, g$2 = 73) : (c$3 += 2, g$2 = 50) : V$5(c$3 + 1) === 61 ? (c$3 += 2, g$2 = 72) : (c$3++, g$2 = 49);
			if (V$5(c$3) === 61) return c$3++, g$2 = 34;
		}
		return g$2;
	}
	function sr$5() {
		return B$2.assert(g$2 === 67, "'reScanAsteriskEqualsToken' should only be called on a '*='"), c$3 = y$7 + 1, g$2 = 64;
	}
	function mt$5(R$6) {
		if (g$2 === 44 || g$2 === 69) {
			let Q$4 = y$7 + 1;
			c$3 = Q$4;
			let K$6 = !1, xe$4 = !1, Se$5 = !1;
			for (;;) {
				let be$5 = oe$6(c$3);
				if (be$5 === -1 || Pn$1(be$5)) {
					N$5 |= 4;
					break;
				}
				if (K$6) K$6 = !1;
				else {
					if (be$5 === 47 && !Se$5) break;
					be$5 === 91 ? Se$5 = !0 : be$5 === 92 ? K$6 = !0 : be$5 === 93 ? Se$5 = !1 : !Se$5 && be$5 === 40 && oe$6(c$3 + 1) === 63 && oe$6(c$3 + 2) === 60 && oe$6(c$3 + 3) !== 61 && oe$6(c$3 + 3) !== 33 && (xe$4 = !0);
				}
				c$3++;
			}
			let we$3 = c$3;
			if (N$5 & 4) {
				c$3 = Q$4, K$6 = !1;
				let be$5 = 0, We$2 = !1, et$5 = 0;
				for (; c$3 < we$3;) {
					let Ye$6 = V$5(c$3);
					if (K$6) K$6 = !1;
					else if (Ye$6 === 92) K$6 = !0;
					else if (Ye$6 === 91) be$5++;
					else if (Ye$6 === 93 && be$5) be$5--;
					else if (!be$5) {
						if (Ye$6 === 123) We$2 = !0;
						else if (Ye$6 === 125 && We$2) We$2 = !1;
						else if (!We$2) {
							if (Ye$6 === 40) et$5++;
							else if (Ye$6 === 41 && et$5) et$5--;
							else if (Ye$6 === 41 || Ye$6 === 93 || Ye$6 === 125) break;
						}
					}
					c$3++;
				}
				for (; za$1(oe$6(c$3 - 1)) || oe$6(c$3 - 1) === 59;) c$3--;
				G$6(A$1.Unterminated_regular_expression_literal, y$7, c$3 - y$7);
			} else {
				c$3++;
				let be$5 = 0;
				for (;;) {
					let We$2 = Ce$6(c$3);
					if (We$2 === -1 || !Dr$2(We$2, e$4)) break;
					let et$5 = zt$2(We$2);
					if (R$6) {
						let Ye$6 = Id(We$2);
						Ye$6 === void 0 ? G$6(A$1.Unknown_regular_expression_flag, c$3, et$5) : be$5 & Ye$6 ? G$6(A$1.Duplicate_regular_expression_flag, c$3, et$5) : ((be$5 | Ye$6) & 96) === 96 ? G$6(A$1.The_Unicode_u_flag_and_the_Unicode_Sets_v_flag_cannot_be_set_simultaneously, c$3, et$5) : (be$5 |= Ye$6, yt$4(Ye$6, et$5));
					}
					c$3 += et$5;
				}
				R$6 && me$5(Q$4, we$3 - Q$4, () => {
					xn$3(be$5, !0, xe$4);
				});
			}
			x$3 = C$3.substring(y$7, c$3), g$2 = 14;
		}
		return g$2;
	}
	function xn$3(R$6, Q$4, K$6) {
		var xe$4 = !!(R$6 & 64), Se$5 = !!(R$6 & 96), we$3 = Se$5 || !Q$4, be$5 = !1, We$2 = 0, et$5, Ye$6, Ee$4, Sn$5 = [], rt$5;
		function un$5(Y$6) {
			for (;;) {
				if (Sn$5.push(rt$5), rt$5 = void 0, ti$7(Y$6), rt$5 = Sn$5.pop(), oe$6(c$3) !== 124) return;
				c$3++;
			}
		}
		function ti$7(Y$6) {
			let pe$6 = !1;
			for (;;) {
				let ze$6 = c$3, ve$6 = oe$6(c$3);
				switch (ve$6) {
					case -1: return;
					case 94:
					case 36:
						c$3++, pe$6 = !1;
						break;
					case 92:
						switch (c$3++, oe$6(c$3)) {
							case 98:
							case 66:
								c$3++, pe$6 = !1;
								break;
							default:
								qe$6(), pe$6 = !0;
								break;
						}
						break;
					case 40:
						if (c$3++, oe$6(c$3) === 63) switch (c$3++, oe$6(c$3)) {
							case 61:
							case 33:
								c$3++, pe$6 = !we$3;
								break;
							case 60:
								let xt$4 = c$3;
								switch (c$3++, oe$6(c$3)) {
									case 61:
									case 33:
										c$3++, pe$6 = !1;
										break;
									default:
										Me$6(!1), pn$5(62), e$4 < 5 && G$6(A$1.Named_capturing_groups_are_only_available_when_targeting_ES2018_or_later, xt$4, c$3 - xt$4), We$2++, pe$6 = !0;
										break;
								}
								break;
							default:
								let jt$5 = c$3, fn$6 = L$4(0);
								oe$6(c$3) === 45 && (c$3++, L$4(fn$6), c$3 === jt$5 + 1 && G$6(A$1.Subpattern_flags_must_be_present_when_there_is_a_minus_sign, jt$5, c$3 - jt$5)), pn$5(58), pe$6 = !0;
								break;
						}
						else We$2++, pe$6 = !0;
						un$5(!0), pn$5(41);
						break;
					case 123:
						c$3++;
						let j$7 = c$3;
						ir$5();
						let ht$4 = x$3;
						if (!we$3 && !ht$4) {
							pe$6 = !0;
							break;
						}
						if (oe$6(c$3) === 44) {
							c$3++, ir$5();
							let xt$4 = x$3;
							if (ht$4) xt$4 && Number.parseInt(ht$4) > Number.parseInt(xt$4) && (we$3 || oe$6(c$3) === 125) && G$6(A$1.Numbers_out_of_order_in_quantifier, j$7, c$3 - j$7);
							else if (xt$4 || oe$6(c$3) === 125) G$6(A$1.Incomplete_quantifier_Digit_expected, j$7, 0);
							else {
								G$6(A$1.Unexpected_0_Did_you_mean_to_escape_it_with_backslash, ze$6, 1, String.fromCharCode(ve$6)), pe$6 = !0;
								break;
							}
						} else if (!ht$4) {
							we$3 && G$6(A$1.Unexpected_0_Did_you_mean_to_escape_it_with_backslash, ze$6, 1, String.fromCharCode(ve$6)), pe$6 = !0;
							break;
						}
						if (oe$6(c$3) !== 125) if (we$3) G$6(A$1._0_expected, c$3, 0, "}"), c$3--;
						else {
							pe$6 = !0;
							break;
						}
					case 42:
					case 43:
					case 63:
						c$3++, oe$6(c$3) === 63 && c$3++, pe$6 || G$6(A$1.There_is_nothing_available_for_repetition, ze$6, c$3 - ze$6), pe$6 = !1;
						break;
					case 46:
						c$3++, pe$6 = !0;
						break;
					case 91:
						c$3++, xe$4 ? sn$4() : Fe$4(), pn$5(93), pe$6 = !0;
						break;
					case 41: if (Y$6) return;
					case 93:
					case 125:
						(we$3 || ve$6 === 41) && G$6(A$1.Unexpected_0_Did_you_mean_to_escape_it_with_backslash, c$3, 1, String.fromCharCode(ve$6)), c$3++, pe$6 = !0;
						break;
					case 47:
					case 124: return;
					default:
						Ai$5(), pe$6 = !0;
						break;
				}
			}
		}
		function L$4(Y$6) {
			for (;;) {
				let pe$6 = Ce$6(c$3);
				if (pe$6 === -1 || !Dr$2(pe$6, e$4)) break;
				let ze$6 = zt$2(pe$6), ve$6 = Id(pe$6);
				ve$6 === void 0 ? G$6(A$1.Unknown_regular_expression_flag, c$3, ze$6) : Y$6 & ve$6 ? G$6(A$1.Duplicate_regular_expression_flag, c$3, ze$6) : ve$6 & 28 ? (Y$6 |= ve$6, yt$4(ve$6, ze$6)) : G$6(A$1.This_regular_expression_flag_cannot_be_toggled_within_a_subpattern, c$3, ze$6), c$3 += ze$6;
			}
			return Y$6;
		}
		function qe$6() {
			switch (B$2.assertEqual(V$5(c$3 - 1), 92), oe$6(c$3)) {
				case 107:
					c$3++, oe$6(c$3) === 60 ? (c$3++, Me$6(!0), pn$5(62)) : (we$3 || K$6) && G$6(A$1.k_must_be_followed_by_a_capturing_group_name_enclosed_in_angle_brackets, c$3 - 2, 2);
					break;
				case 113: if (xe$4) {
					c$3++, G$6(A$1.q_is_only_available_inside_character_class, c$3 - 2, 2);
					break;
				}
				default:
					B$2.assert(qt$5() || u$14() || Oe$6(!0));
					break;
			}
		}
		function u$14() {
			B$2.assertEqual(V$5(c$3 - 1), 92);
			let Y$6 = oe$6(c$3);
			if (Y$6 >= 49 && Y$6 <= 57) {
				let pe$6 = c$3;
				return ir$5(), Ee$4 = Dn$1(Ee$4, {
					pos: pe$6,
					end: c$3,
					value: +x$3
				}), !0;
			}
			return !1;
		}
		function Oe$6(Y$6) {
			B$2.assertEqual(V$5(c$3 - 1), 92);
			let pe$6 = oe$6(c$3);
			switch (pe$6) {
				case -1: return G$6(A$1.Undetermined_character_escape, c$3 - 1, 1), "\\";
				case 99:
					if (c$3++, pe$6 = oe$6(c$3), rf(pe$6)) return c$3++, String.fromCharCode(pe$6 & 31);
					if (we$3) G$6(A$1.c_must_be_followed_by_an_ASCII_letter, c$3 - 2, 2);
					else if (Y$6) return c$3--, "\\";
					return String.fromCharCode(pe$6);
				case 94:
				case 36:
				case 47:
				case 92:
				case 46:
				case 42:
				case 43:
				case 63:
				case 40:
				case 41:
				case 91:
				case 93:
				case 123:
				case 125:
				case 124: return c$3++, String.fromCharCode(pe$6);
				default: return c$3--, Mt$5(4 | (Q$4 ? 8 : 0) | (Se$5 ? 16 : 0) | (Y$6 ? 32 : 0));
			}
		}
		function Me$6(Y$6) {
			B$2.assertEqual(V$5(c$3 - 1), 60), y$7 = c$3, Jt$3(Ce$6(c$3), e$4), c$3 === y$7 ? G$6(A$1.Expected_a_capturing_group_name) : Y$6 ? Ye$6 = Dn$1(Ye$6, {
				pos: y$7,
				end: c$3,
				name: x$3
			}) : rt$5 != null && rt$5.has(x$3) || Sn$5.some((pe$6) => pe$6 == null ? void 0 : pe$6.has(x$3)) ? G$6(A$1.Named_capturing_groups_with_the_same_name_must_be_mutually_exclusive_to_each_other, y$7, c$3 - y$7) : (rt$5 ?? (rt$5 = /* @__PURE__ */ new Set()), rt$5.add(x$3), et$5 ?? (et$5 = /* @__PURE__ */ new Set()), et$5.add(x$3));
		}
		function U$4(Y$6) {
			return Y$6 === 93 || Y$6 === -1 || c$3 >= W$2;
		}
		function Fe$4() {
			for (B$2.assertEqual(V$5(c$3 - 1), 91), oe$6(c$3) === 94 && c$3++;;) {
				let Y$6 = oe$6(c$3);
				if (U$4(Y$6)) return;
				let pe$6 = c$3, ze$6 = It$7();
				if (oe$6(c$3) === 45) {
					c$3++;
					let ve$6 = oe$6(c$3);
					if (U$4(ve$6)) return;
					!ze$6 && we$3 && G$6(A$1.A_character_class_range_must_not_be_bounded_by_another_character_class, pe$6, c$3 - 1 - pe$6);
					let j$7 = c$3, ht$4 = It$7();
					if (!ht$4 && we$3) {
						G$6(A$1.A_character_class_range_must_not_be_bounded_by_another_character_class, j$7, c$3 - j$7);
						continue;
					}
					if (!ze$6) continue;
					let xt$4 = Xi$1(ze$6, 0), jt$5 = Xi$1(ht$4, 0);
					ze$6.length === zt$2(xt$4) && ht$4.length === zt$2(jt$5) && xt$4 > jt$5 && G$6(A$1.Range_out_of_order_in_character_class, pe$6, c$3 - pe$6);
				}
			}
		}
		function sn$4() {
			B$2.assertEqual(V$5(c$3 - 1), 91);
			let Y$6 = !1;
			oe$6(c$3) === 94 && (c$3++, Y$6 = !0);
			let pe$6 = !1, ze$6 = oe$6(c$3);
			if (U$4(ze$6)) return;
			let ve$6 = c$3, j$7;
			switch (C$3.slice(c$3, c$3 + 2)) {
				case "--":
				case "&&":
					G$6(A$1.Expected_a_class_set_operand), be$5 = !1;
					break;
				default:
					j$7 = $e$5();
					break;
			}
			switch (oe$6(c$3)) {
				case 45:
					if (oe$6(c$3 + 1) === 45) {
						Y$6 && be$5 && G$6(A$1.Anything_that_would_possibly_match_more_than_a_single_character_is_invalid_inside_a_negated_character_class, ve$6, c$3 - ve$6), pe$6 = be$5, Ve$5(3), be$5 = !Y$6 && pe$6;
						return;
					}
					break;
				case 38:
					if (oe$6(c$3 + 1) === 38) {
						Ve$5(2), Y$6 && be$5 && G$6(A$1.Anything_that_would_possibly_match_more_than_a_single_character_is_invalid_inside_a_negated_character_class, ve$6, c$3 - ve$6), pe$6 = be$5, be$5 = !Y$6 && pe$6;
						return;
					} else G$6(A$1.Unexpected_0_Did_you_mean_to_escape_it_with_backslash, c$3, 1, String.fromCharCode(ze$6));
					break;
				default:
					Y$6 && be$5 && G$6(A$1.Anything_that_would_possibly_match_more_than_a_single_character_is_invalid_inside_a_negated_character_class, ve$6, c$3 - ve$6), pe$6 = be$5;
					break;
			}
			for (; ze$6 = oe$6(c$3), ze$6 !== -1;) {
				switch (ze$6) {
					case 45:
						if (c$3++, ze$6 = oe$6(c$3), U$4(ze$6)) {
							be$5 = !Y$6 && pe$6;
							return;
						}
						if (ze$6 === 45) {
							c$3++, G$6(A$1.Operators_must_not_be_mixed_within_a_character_class_Wrap_it_in_a_nested_class_instead, c$3 - 2, 2), ve$6 = c$3 - 2, j$7 = C$3.slice(ve$6, c$3);
							continue;
						} else {
							j$7 || G$6(A$1.A_character_class_range_must_not_be_bounded_by_another_character_class, ve$6, c$3 - 1 - ve$6);
							let ht$4 = c$3, xt$4 = $e$5();
							if (Y$6 && be$5 && G$6(A$1.Anything_that_would_possibly_match_more_than_a_single_character_is_invalid_inside_a_negated_character_class, ht$4, c$3 - ht$4), pe$6 || (pe$6 = be$5), !xt$4) {
								G$6(A$1.A_character_class_range_must_not_be_bounded_by_another_character_class, ht$4, c$3 - ht$4);
								break;
							}
							if (!j$7) break;
							let jt$5 = Xi$1(j$7, 0), fn$6 = Xi$1(xt$4, 0);
							j$7.length === zt$2(jt$5) && xt$4.length === zt$2(fn$6) && jt$5 > fn$6 && G$6(A$1.Range_out_of_order_in_character_class, ve$6, c$3 - ve$6);
						}
						break;
					case 38:
						ve$6 = c$3, c$3++, oe$6(c$3) === 38 ? (c$3++, G$6(A$1.Operators_must_not_be_mixed_within_a_character_class_Wrap_it_in_a_nested_class_instead, c$3 - 2, 2), oe$6(c$3) === 38 && (G$6(A$1.Unexpected_0_Did_you_mean_to_escape_it_with_backslash, c$3, 1, String.fromCharCode(ze$6)), c$3++)) : G$6(A$1.Unexpected_0_Did_you_mean_to_escape_it_with_backslash, c$3 - 1, 1, String.fromCharCode(ze$6)), j$7 = C$3.slice(ve$6, c$3);
						continue;
				}
				if (U$4(oe$6(c$3))) break;
				switch (ve$6 = c$3, C$3.slice(c$3, c$3 + 2)) {
					case "--":
					case "&&":
						G$6(A$1.Operators_must_not_be_mixed_within_a_character_class_Wrap_it_in_a_nested_class_instead, c$3, 2), c$3 += 2, j$7 = C$3.slice(ve$6, c$3);
						break;
					default:
						j$7 = $e$5();
						break;
				}
			}
			be$5 = !Y$6 && pe$6;
		}
		function Ve$5(Y$6) {
			let pe$6 = be$5;
			for (;;) {
				let ze$6 = oe$6(c$3);
				if (U$4(ze$6)) break;
				switch (ze$6) {
					case 45:
						c$3++, oe$6(c$3) === 45 ? (c$3++, Y$6 !== 3 && G$6(A$1.Operators_must_not_be_mixed_within_a_character_class_Wrap_it_in_a_nested_class_instead, c$3 - 2, 2)) : G$6(A$1.Operators_must_not_be_mixed_within_a_character_class_Wrap_it_in_a_nested_class_instead, c$3 - 1, 1);
						break;
					case 38:
						c$3++, oe$6(c$3) === 38 ? (c$3++, Y$6 !== 2 && G$6(A$1.Operators_must_not_be_mixed_within_a_character_class_Wrap_it_in_a_nested_class_instead, c$3 - 2, 2), oe$6(c$3) === 38 && (G$6(A$1.Unexpected_0_Did_you_mean_to_escape_it_with_backslash, c$3, 1, String.fromCharCode(ze$6)), c$3++)) : G$6(A$1.Unexpected_0_Did_you_mean_to_escape_it_with_backslash, c$3 - 1, 1, String.fromCharCode(ze$6));
						break;
					default:
						switch (Y$6) {
							case 3:
								G$6(A$1._0_expected, c$3, 0, "--");
								break;
							case 2:
								G$6(A$1._0_expected, c$3, 0, "&&");
								break;
							default: break;
						}
						break;
				}
				if (ze$6 = oe$6(c$3), U$4(ze$6)) {
					G$6(A$1.Expected_a_class_set_operand);
					break;
				}
				$e$5(), pe$6 && (pe$6 = be$5);
			}
			be$5 = pe$6;
		}
		function $e$5() {
			switch (be$5 = !1, oe$6(c$3)) {
				case -1: return "";
				case 91: return c$3++, sn$4(), pn$5(93), "";
				case 92:
					if (c$3++, qt$5()) return "";
					if (oe$6(c$3) === 113) return c$3++, oe$6(c$3) === 123 ? (c$3++, Nt$6(), pn$5(125), "") : (G$6(A$1.q_must_be_followed_by_string_alternatives_enclosed_in_braces, c$3 - 2, 2), "q");
					c$3--;
				default: return kt$6();
			}
		}
		function Nt$6() {
			B$2.assertEqual(V$5(c$3 - 1), 123);
			let Y$6 = 0;
			for (;;) switch (oe$6(c$3)) {
				case -1: return;
				case 125:
					Y$6 !== 1 && (be$5 = !0);
					return;
				case 124:
					Y$6 !== 1 && (be$5 = !0), c$3++, v$5 = c$3, Y$6 = 0;
					break;
				default:
					kt$6(), Y$6++;
					break;
			}
		}
		function kt$6() {
			let Y$6 = oe$6(c$3);
			if (Y$6 === -1) return "";
			if (Y$6 === 92) {
				c$3++;
				let pe$6 = oe$6(c$3);
				switch (pe$6) {
					case 98: return c$3++, "\b";
					case 38:
					case 45:
					case 33:
					case 35:
					case 37:
					case 44:
					case 58:
					case 59:
					case 60:
					case 61:
					case 62:
					case 64:
					case 96:
					case 126: return c$3++, String.fromCharCode(pe$6);
					default: return Oe$6(!1);
				}
			} else if (Y$6 === oe$6(c$3 + 1)) switch (Y$6) {
				case 38:
				case 33:
				case 35:
				case 37:
				case 42:
				case 43:
				case 44:
				case 46:
				case 58:
				case 59:
				case 60:
				case 61:
				case 62:
				case 63:
				case 64:
				case 96:
				case 126: return G$6(A$1.A_character_class_must_not_contain_a_reserved_double_punctuator_Did_you_mean_to_escape_it_with_backslash, c$3, 2), c$3 += 2, C$3.substring(c$3 - 2, c$3);
			}
			switch (Y$6) {
				case 47:
				case 40:
				case 41:
				case 91:
				case 93:
				case 123:
				case 125:
				case 45:
				case 124: return G$6(A$1.Unexpected_0_Did_you_mean_to_escape_it_with_backslash, c$3, 1, String.fromCharCode(Y$6)), c$3++, String.fromCharCode(Y$6);
			}
			return Ai$5();
		}
		function It$7() {
			if (oe$6(c$3) === 92) {
				c$3++;
				let Y$6 = oe$6(c$3);
				switch (Y$6) {
					case 98: return c$3++, "\b";
					case 45: return c$3++, String.fromCharCode(Y$6);
					default: return qt$5() ? "" : Oe$6(!1);
				}
			} else return Ai$5();
		}
		function qt$5() {
			B$2.assertEqual(V$5(c$3 - 1), 92);
			let Y$6 = !1, pe$6 = c$3 - 1, ze$6 = oe$6(c$3);
			switch (ze$6) {
				case 100:
				case 68:
				case 115:
				case 83:
				case 119:
				case 87: return c$3++, !0;
				case 80: Y$6 = !0;
				case 112:
					if (c$3++, oe$6(c$3) === 123) {
						c$3++;
						let ve$6 = c$3, j$7 = Hn$4();
						if (oe$6(c$3) === 61) {
							let ht$4 = Md.get(j$7);
							if (c$3 === ve$6) G$6(A$1.Expected_a_Unicode_property_name);
							else if (ht$4 === void 0) {
								G$6(A$1.Unknown_Unicode_property_name, ve$6, c$3 - ve$6);
								let fn$6 = i_(j$7, Md.keys(), gt$1);
								fn$6 && G$6(A$1.Did_you_mean_0, ve$6, c$3 - ve$6, fn$6);
							}
							c$3++;
							let xt$4 = c$3, jt$5 = Hn$4();
							if (c$3 === xt$4) G$6(A$1.Expected_a_Unicode_property_value);
							else if (ht$4 !== void 0 && !Ba[ht$4].has(jt$5)) {
								G$6(A$1.Unknown_Unicode_property_value, xt$4, c$3 - xt$4);
								let fn$6 = i_(jt$5, Ba[ht$4], gt$1);
								fn$6 && G$6(A$1.Did_you_mean_0, xt$4, c$3 - xt$4, fn$6);
							}
						} else if (c$3 === ve$6) G$6(A$1.Expected_a_Unicode_property_name_or_value);
						else if (Jd.has(j$7)) xe$4 ? Y$6 ? G$6(A$1.Anything_that_would_possibly_match_more_than_a_single_character_is_invalid_inside_a_negated_character_class, ve$6, c$3 - ve$6) : be$5 = !0 : G$6(A$1.Any_Unicode_property_that_would_possibly_match_more_than_a_single_character_is_only_available_when_the_Unicode_Sets_v_flag_is_set, ve$6, c$3 - ve$6);
						else if (!Ba.General_Category.has(j$7) && !Ld.has(j$7)) {
							G$6(A$1.Unknown_Unicode_property_name_or_value, ve$6, c$3 - ve$6);
							let ht$4 = i_(j$7, [
								...Ba.General_Category,
								...Ld,
								...Jd
							], gt$1);
							ht$4 && G$6(A$1.Did_you_mean_0, ve$6, c$3 - ve$6, ht$4);
						}
						pn$5(125), Se$5 || G$6(A$1.Unicode_property_value_expressions_are_only_available_when_the_Unicode_u_flag_or_the_Unicode_Sets_v_flag_is_set, pe$6, c$3 - pe$6);
					} else if (we$3) G$6(A$1._0_must_be_followed_by_a_Unicode_property_value_expression_enclosed_in_braces, c$3 - 2, 2, String.fromCharCode(ze$6));
					else return c$3--, !1;
					return !0;
			}
			return !1;
		}
		function Hn$4() {
			let Y$6 = "";
			for (;;) {
				let pe$6 = oe$6(c$3);
				if (pe$6 === -1 || !Xm(pe$6)) break;
				Y$6 += String.fromCharCode(pe$6), c$3++;
			}
			return Y$6;
		}
		function Ai$5() {
			let Y$6 = Se$5 ? zt$2(Ce$6(c$3)) : 1;
			return c$3 += Y$6, Y$6 > 0 ? C$3.substring(c$3 - Y$6, c$3) : "";
		}
		function pn$5(Y$6) {
			oe$6(c$3) === Y$6 ? c$3++ : G$6(A$1._0_expected, c$3, 0, String.fromCharCode(Y$6));
		}
		un$5(!1), qn$1(Ye$6, (Y$6) => {
			if (!(et$5 != null && et$5.has(Y$6.name)) && (G$6(A$1.There_is_no_capturing_group_named_0_in_this_regular_expression, Y$6.pos, Y$6.end - Y$6.pos, Y$6.name), et$5)) {
				let pe$6 = i_(Y$6.name, et$5, gt$1);
				pe$6 && G$6(A$1.Did_you_mean_0, Y$6.pos, Y$6.end - Y$6.pos, pe$6);
			}
		}), qn$1(Ee$4, (Y$6) => {
			Y$6.value > We$2 && (We$2 ? G$6(A$1.This_backreference_refers_to_a_group_that_does_not_exist_There_are_only_0_capturing_groups_in_this_regular_expression, Y$6.pos, Y$6.end - Y$6.pos, We$2) : G$6(A$1.This_backreference_refers_to_a_group_that_does_not_exist_There_are_no_capturing_groups_in_this_regular_expression, Y$6.pos, Y$6.end - Y$6.pos));
		});
	}
	function yt$4(R$6, Q$4) {
		let K$6 = sg.get(R$6);
		K$6 && e$4 < K$6 && G$6(A$1.This_regular_expression_flag_is_only_available_when_targeting_0_or_later, c$3, Q$4, kb(K$6));
	}
	function ln$5(R$6, Q$4, K$6, xe$4) {
		let Se$5 = nt$4(Q$4.trimStart(), K$6);
		return Se$5 === void 0 ? R$6 : Dn$1(R$6, {
			range: {
				pos: xe$4,
				end: c$3
			},
			type: Se$5
		});
	}
	function nt$4(R$6, Q$4) {
		let K$6 = Q$4.exec(R$6);
		if (K$6) switch (K$6[1]) {
			case "ts-expect-error": return 0;
			case "ts-ignore": return 1;
		}
	}
	function Bt$5(R$6) {
		return c$3 = y$7, g$2 = Or$5(!R$6);
	}
	function an$5() {
		return c$3 = y$7, g$2 = Or$5(!0);
	}
	function _r$5(R$6 = !0) {
		return c$3 = y$7 = h$3, g$2 = Wn$5(R$6);
	}
	function hr$4() {
		return g$2 === 48 ? (c$3 = y$7 + 1, g$2 = 30) : g$2;
	}
	function yr$4() {
		return g$2 === 81 ? (c$3 = y$7 + 1, g$2 = 63) : g$2;
	}
	function Vn$5() {
		return B$2.assert(g$2 === 61, "'reScanQuestionToken' should only be called on a '??'"), c$3 = y$7 + 1, g$2 = 58;
	}
	function Wn$5(R$6 = !0) {
		if (h$3 = y$7 = c$3, c$3 >= W$2) return g$2 = 1;
		let Q$4 = V$5(c$3);
		if (Q$4 === 60) return V$5(c$3 + 1) === 47 ? (c$3 += 2, g$2 = 31) : (c$3++, g$2 = 30);
		if (Q$4 === 123) return c$3++, g$2 = 19;
		let K$6 = 0;
		for (; c$3 < W$2 && (Q$4 = V$5(c$3), Q$4 !== 123);) {
			if (Q$4 === 60) {
				if (Hi(C$3, c$3)) return c$3 = Ja$1(C$3, c$3, G$6), g$2 = 7;
				break;
			}
			if (Q$4 === 62 && G$6(A$1.Unexpected_token_Did_you_mean_or_gt, c$3, 1), Q$4 === 125 && G$6(A$1.Unexpected_token_Did_you_mean_or_rbrace, c$3, 1), Pn$1(Q$4) && K$6 === 0) K$6 = -1;
			else {
				if (!R$6 && Pn$1(Q$4) && K$6 > 0) break;
				za$1(Q$4) || (K$6 = c$3);
			}
			c$3++;
		}
		return x$3 = C$3.substring(h$3, c$3), K$6 === -1 ? 13 : 12;
	}
	function Mr$4() {
		if (wt$2(g$2)) {
			for (; c$3 < W$2;) {
				if (V$5(c$3) === 45) {
					x$3 += "-", c$3++;
					continue;
				}
				let Q$4 = c$3;
				if (x$3 += vt$6(), c$3 === Q$4) break;
			}
			return Qe$4();
		}
		return g$2;
	}
	function Gn$6() {
		switch (h$3 = c$3, V$5(c$3)) {
			case 34:
			case 39: return x$3 = ar$5(!0), g$2 = 11;
			default: return ct$4();
		}
	}
	function De$7() {
		return c$3 = y$7 = h$3, Gn$6();
	}
	function gr$4(R$6) {
		if (h$3 = y$7 = c$3, N$5 = 0, c$3 >= W$2) return g$2 = 1;
		for (let Q$4 = V$5(c$3); c$3 < W$2 && !Pn$1(Q$4) && Q$4 !== 96; Q$4 = ie$6(++c$3)) if (!R$6) {
			if (Q$4 === 123) break;
			if (Q$4 === 64 && c$3 - 1 >= 0 && a_(V$5(c$3 - 1)) && !(c$3 + 1 < W$2 && za$1(V$5(c$3 + 1)))) break;
		}
		return c$3 === y$7 ? J$4() : (x$3 = C$3.substring(y$7, c$3), g$2 = 82);
	}
	function J$4() {
		if (h$3 = y$7 = c$3, N$5 = 0, c$3 >= W$2) return g$2 = 1;
		let R$6 = ie$6(c$3);
		switch (c$3 += zt$2(R$6), R$6) {
			case 9:
			case 11:
			case 12:
			case 32:
				for (; c$3 < W$2 && a_(V$5(c$3));) c$3++;
				return g$2 = 5;
			case 64: return g$2 = 60;
			case 13: V$5(c$3) === 10 && c$3++;
			case 10: return N$5 |= 1, g$2 = 4;
			case 42: return g$2 = 42;
			case 123: return g$2 = 19;
			case 125: return g$2 = 20;
			case 91: return g$2 = 23;
			case 93: return g$2 = 24;
			case 40: return g$2 = 21;
			case 41: return g$2 = 22;
			case 60: return g$2 = 30;
			case 62: return g$2 = 32;
			case 61: return g$2 = 64;
			case 44: return g$2 = 28;
			case 46: return g$2 = 25;
			case 96: return g$2 = 62;
			case 35: return g$2 = 63;
			case 92:
				c$3--;
				let Q$4 = Lt$6();
				if (Q$4 >= 0 && tr$2(Q$4, e$4)) return x$3 = Fn$4(!0) + vt$6(), g$2 = Qe$4();
				let K$6 = Ln$5();
				return K$6 >= 0 && tr$2(K$6, e$4) ? (c$3 += 6, N$5 |= 1024, x$3 = String.fromCharCode(K$6) + vt$6(), g$2 = Qe$4()) : (c$3++, g$2 = 0);
		}
		if (tr$2(R$6, e$4)) {
			let Q$4 = R$6;
			for (; c$3 < W$2 && Dr$2(Q$4 = ie$6(c$3), e$4) || Q$4 === 45;) c$3 += zt$2(Q$4);
			return x$3 = C$3.substring(y$7, c$3), Q$4 === 92 && (x$3 += vt$6()), g$2 = Qe$4();
		} else return g$2 = 0;
	}
	function _e$7(R$6, Q$4) {
		let K$6 = c$3, xe$4 = h$3, Se$5 = y$7, we$3 = g$2, be$5 = x$3, We$2 = N$5, et$5 = R$6();
		return (!et$5 || Q$4) && (c$3 = K$6, h$3 = xe$4, y$7 = Se$5, g$2 = we$3, x$3 = be$5, N$5 = We$2), et$5;
	}
	function me$5(R$6, Q$4, K$6) {
		let xe$4 = W$2, Se$5 = c$3, we$3 = h$3, be$5 = y$7, We$2 = g$2, et$5 = x$3, Ye$6 = N$5, Ee$4 = te$5;
		Pt$5(C$3, R$6, Q$4);
		let Sn$5 = K$6();
		return W$2 = xe$4, c$3 = Se$5, h$3 = we$3, y$7 = be$5, g$2 = We$2, x$3 = et$5, N$5 = Ye$6, te$5 = Ee$4, Sn$5;
	}
	function Te$7(R$6) {
		return _e$7(R$6, !0);
	}
	function Xe$4(R$6) {
		return _e$7(R$6, !1);
	}
	function Ke$4() {
		return C$3;
	}
	function st$5() {
		te$5 = void 0;
	}
	function Pt$5(R$6, Q$4, K$6) {
		C$3 = R$6 || "", W$2 = K$6 === void 0 ? C$3.length : Q$4 + K$6, Yn$5(Q$4 || 0);
	}
	function Tt$7(R$6) {
		m$11 = R$6;
	}
	function ut$4(R$6) {
		e$4 = R$6;
	}
	function Lr$5(R$6) {
		a$13 = R$6;
	}
	function br$4(R$6) {
		ye$4 = R$6;
	}
	function Jn$5(R$6) {
		fe$4 = R$6;
	}
	function Yn$5(R$6) {
		B$2.assert(R$6 >= 0), c$3 = R$6, h$3 = R$6, y$7 = R$6, g$2 = 0, x$3 = void 0, N$5 = 0;
	}
	function Ei$5(R$6) {
		ue$4 += R$6 ? 1 : -1;
	}
}
function Xi$1(e$4, t$13) {
	return e$4.codePointAt(t$13);
}
function zt$2(e$4) {
	return e$4 >= 65536 ? 2 : e$4 === -1 ? 0 : 1;
}
function wg(e$4) {
	if (B$2.assert(0 <= e$4 && e$4 <= 1114111), e$4 <= 65535) return String.fromCharCode(e$4);
	let t$13 = Math.floor((e$4 - 65536) / 1024) + 55296, a$13 = (e$4 - 65536) % 1024 + 56320;
	return String.fromCharCode(t$13, a$13);
}
var kg = String.fromCodePoint ? (e$4) => String.fromCodePoint(e$4) : wg;
function Od(e$4) {
	return kg(e$4);
}
var Md = new Map(Object.entries({
	General_Category: "General_Category",
	gc: "General_Category",
	Script: "Script",
	sc: "Script",
	Script_Extensions: "Script_Extensions",
	scx: "Script_Extensions"
})), Ld = new Set([
	"ASCII",
	"ASCII_Hex_Digit",
	"AHex",
	"Alphabetic",
	"Alpha",
	"Any",
	"Assigned",
	"Bidi_Control",
	"Bidi_C",
	"Bidi_Mirrored",
	"Bidi_M",
	"Case_Ignorable",
	"CI",
	"Cased",
	"Changes_When_Casefolded",
	"CWCF",
	"Changes_When_Casemapped",
	"CWCM",
	"Changes_When_Lowercased",
	"CWL",
	"Changes_When_NFKC_Casefolded",
	"CWKCF",
	"Changes_When_Titlecased",
	"CWT",
	"Changes_When_Uppercased",
	"CWU",
	"Dash",
	"Default_Ignorable_Code_Point",
	"DI",
	"Deprecated",
	"Dep",
	"Diacritic",
	"Dia",
	"Emoji",
	"Emoji_Component",
	"EComp",
	"Emoji_Modifier",
	"EMod",
	"Emoji_Modifier_Base",
	"EBase",
	"Emoji_Presentation",
	"EPres",
	"Extended_Pictographic",
	"ExtPict",
	"Extender",
	"Ext",
	"Grapheme_Base",
	"Gr_Base",
	"Grapheme_Extend",
	"Gr_Ext",
	"Hex_Digit",
	"Hex",
	"IDS_Binary_Operator",
	"IDSB",
	"IDS_Trinary_Operator",
	"IDST",
	"ID_Continue",
	"IDC",
	"ID_Start",
	"IDS",
	"Ideographic",
	"Ideo",
	"Join_Control",
	"Join_C",
	"Logical_Order_Exception",
	"LOE",
	"Lowercase",
	"Lower",
	"Math",
	"Noncharacter_Code_Point",
	"NChar",
	"Pattern_Syntax",
	"Pat_Syn",
	"Pattern_White_Space",
	"Pat_WS",
	"Quotation_Mark",
	"QMark",
	"Radical",
	"Regional_Indicator",
	"RI",
	"Sentence_Terminal",
	"STerm",
	"Soft_Dotted",
	"SD",
	"Terminal_Punctuation",
	"Term",
	"Unified_Ideograph",
	"UIdeo",
	"Uppercase",
	"Upper",
	"Variation_Selector",
	"VS",
	"White_Space",
	"space",
	"XID_Continue",
	"XIDC",
	"XID_Start",
	"XIDS"
]), Jd = new Set([
	"Basic_Emoji",
	"Emoji_Keycap_Sequence",
	"RGI_Emoji_Modifier_Sequence",
	"RGI_Emoji_Flag_Sequence",
	"RGI_Emoji_Tag_Sequence",
	"RGI_Emoji_ZWJ_Sequence",
	"RGI_Emoji"
]), Ba = {
	General_Category: new Set([
		"C",
		"Other",
		"Cc",
		"Control",
		"cntrl",
		"Cf",
		"Format",
		"Cn",
		"Unassigned",
		"Co",
		"Private_Use",
		"Cs",
		"Surrogate",
		"L",
		"Letter",
		"LC",
		"Cased_Letter",
		"Ll",
		"Lowercase_Letter",
		"Lm",
		"Modifier_Letter",
		"Lo",
		"Other_Letter",
		"Lt",
		"Titlecase_Letter",
		"Lu",
		"Uppercase_Letter",
		"M",
		"Mark",
		"Combining_Mark",
		"Mc",
		"Spacing_Mark",
		"Me",
		"Enclosing_Mark",
		"Mn",
		"Nonspacing_Mark",
		"N",
		"Number",
		"Nd",
		"Decimal_Number",
		"digit",
		"Nl",
		"Letter_Number",
		"No",
		"Other_Number",
		"P",
		"Punctuation",
		"punct",
		"Pc",
		"Connector_Punctuation",
		"Pd",
		"Dash_Punctuation",
		"Pe",
		"Close_Punctuation",
		"Pf",
		"Final_Punctuation",
		"Pi",
		"Initial_Punctuation",
		"Po",
		"Other_Punctuation",
		"Ps",
		"Open_Punctuation",
		"S",
		"Symbol",
		"Sc",
		"Currency_Symbol",
		"Sk",
		"Modifier_Symbol",
		"Sm",
		"Math_Symbol",
		"So",
		"Other_Symbol",
		"Z",
		"Separator",
		"Zl",
		"Line_Separator",
		"Zp",
		"Paragraph_Separator",
		"Zs",
		"Space_Separator"
	]),
	Script: new Set([
		"Adlm",
		"Adlam",
		"Aghb",
		"Caucasian_Albanian",
		"Ahom",
		"Arab",
		"Arabic",
		"Armi",
		"Imperial_Aramaic",
		"Armn",
		"Armenian",
		"Avst",
		"Avestan",
		"Bali",
		"Balinese",
		"Bamu",
		"Bamum",
		"Bass",
		"Bassa_Vah",
		"Batk",
		"Batak",
		"Beng",
		"Bengali",
		"Bhks",
		"Bhaiksuki",
		"Bopo",
		"Bopomofo",
		"Brah",
		"Brahmi",
		"Brai",
		"Braille",
		"Bugi",
		"Buginese",
		"Buhd",
		"Buhid",
		"Cakm",
		"Chakma",
		"Cans",
		"Canadian_Aboriginal",
		"Cari",
		"Carian",
		"Cham",
		"Cher",
		"Cherokee",
		"Chrs",
		"Chorasmian",
		"Copt",
		"Coptic",
		"Qaac",
		"Cpmn",
		"Cypro_Minoan",
		"Cprt",
		"Cypriot",
		"Cyrl",
		"Cyrillic",
		"Deva",
		"Devanagari",
		"Diak",
		"Dives_Akuru",
		"Dogr",
		"Dogra",
		"Dsrt",
		"Deseret",
		"Dupl",
		"Duployan",
		"Egyp",
		"Egyptian_Hieroglyphs",
		"Elba",
		"Elbasan",
		"Elym",
		"Elymaic",
		"Ethi",
		"Ethiopic",
		"Geor",
		"Georgian",
		"Glag",
		"Glagolitic",
		"Gong",
		"Gunjala_Gondi",
		"Gonm",
		"Masaram_Gondi",
		"Goth",
		"Gothic",
		"Gran",
		"Grantha",
		"Grek",
		"Greek",
		"Gujr",
		"Gujarati",
		"Guru",
		"Gurmukhi",
		"Hang",
		"Hangul",
		"Hani",
		"Han",
		"Hano",
		"Hanunoo",
		"Hatr",
		"Hatran",
		"Hebr",
		"Hebrew",
		"Hira",
		"Hiragana",
		"Hluw",
		"Anatolian_Hieroglyphs",
		"Hmng",
		"Pahawh_Hmong",
		"Hmnp",
		"Nyiakeng_Puachue_Hmong",
		"Hrkt",
		"Katakana_Or_Hiragana",
		"Hung",
		"Old_Hungarian",
		"Ital",
		"Old_Italic",
		"Java",
		"Javanese",
		"Kali",
		"Kayah_Li",
		"Kana",
		"Katakana",
		"Kawi",
		"Khar",
		"Kharoshthi",
		"Khmr",
		"Khmer",
		"Khoj",
		"Khojki",
		"Kits",
		"Khitan_Small_Script",
		"Knda",
		"Kannada",
		"Kthi",
		"Kaithi",
		"Lana",
		"Tai_Tham",
		"Laoo",
		"Lao",
		"Latn",
		"Latin",
		"Lepc",
		"Lepcha",
		"Limb",
		"Limbu",
		"Lina",
		"Linear_A",
		"Linb",
		"Linear_B",
		"Lisu",
		"Lyci",
		"Lycian",
		"Lydi",
		"Lydian",
		"Mahj",
		"Mahajani",
		"Maka",
		"Makasar",
		"Mand",
		"Mandaic",
		"Mani",
		"Manichaean",
		"Marc",
		"Marchen",
		"Medf",
		"Medefaidrin",
		"Mend",
		"Mende_Kikakui",
		"Merc",
		"Meroitic_Cursive",
		"Mero",
		"Meroitic_Hieroglyphs",
		"Mlym",
		"Malayalam",
		"Modi",
		"Mong",
		"Mongolian",
		"Mroo",
		"Mro",
		"Mtei",
		"Meetei_Mayek",
		"Mult",
		"Multani",
		"Mymr",
		"Myanmar",
		"Nagm",
		"Nag_Mundari",
		"Nand",
		"Nandinagari",
		"Narb",
		"Old_North_Arabian",
		"Nbat",
		"Nabataean",
		"Newa",
		"Nkoo",
		"Nko",
		"Nshu",
		"Nushu",
		"Ogam",
		"Ogham",
		"Olck",
		"Ol_Chiki",
		"Orkh",
		"Old_Turkic",
		"Orya",
		"Oriya",
		"Osge",
		"Osage",
		"Osma",
		"Osmanya",
		"Ougr",
		"Old_Uyghur",
		"Palm",
		"Palmyrene",
		"Pauc",
		"Pau_Cin_Hau",
		"Perm",
		"Old_Permic",
		"Phag",
		"Phags_Pa",
		"Phli",
		"Inscriptional_Pahlavi",
		"Phlp",
		"Psalter_Pahlavi",
		"Phnx",
		"Phoenician",
		"Plrd",
		"Miao",
		"Prti",
		"Inscriptional_Parthian",
		"Rjng",
		"Rejang",
		"Rohg",
		"Hanifi_Rohingya",
		"Runr",
		"Runic",
		"Samr",
		"Samaritan",
		"Sarb",
		"Old_South_Arabian",
		"Saur",
		"Saurashtra",
		"Sgnw",
		"SignWriting",
		"Shaw",
		"Shavian",
		"Shrd",
		"Sharada",
		"Sidd",
		"Siddham",
		"Sind",
		"Khudawadi",
		"Sinh",
		"Sinhala",
		"Sogd",
		"Sogdian",
		"Sogo",
		"Old_Sogdian",
		"Sora",
		"Sora_Sompeng",
		"Soyo",
		"Soyombo",
		"Sund",
		"Sundanese",
		"Sylo",
		"Syloti_Nagri",
		"Syrc",
		"Syriac",
		"Tagb",
		"Tagbanwa",
		"Takr",
		"Takri",
		"Tale",
		"Tai_Le",
		"Talu",
		"New_Tai_Lue",
		"Taml",
		"Tamil",
		"Tang",
		"Tangut",
		"Tavt",
		"Tai_Viet",
		"Telu",
		"Telugu",
		"Tfng",
		"Tifinagh",
		"Tglg",
		"Tagalog",
		"Thaa",
		"Thaana",
		"Thai",
		"Tibt",
		"Tibetan",
		"Tirh",
		"Tirhuta",
		"Tnsa",
		"Tangsa",
		"Toto",
		"Ugar",
		"Ugaritic",
		"Vaii",
		"Vai",
		"Vith",
		"Vithkuqi",
		"Wara",
		"Warang_Citi",
		"Wcho",
		"Wancho",
		"Xpeo",
		"Old_Persian",
		"Xsux",
		"Cuneiform",
		"Yezi",
		"Yezidi",
		"Yiii",
		"Yi",
		"Zanb",
		"Zanabazar_Square",
		"Zinh",
		"Inherited",
		"Qaai",
		"Zyyy",
		"Common",
		"Zzzz",
		"Unknown"
	]),
	Script_Extensions: void 0
};
Ba.Script_Extensions = Ba.Script;
function Ar$2(e$4) {
	return e$4.start + e$4.length;
}
function Eg(e$4) {
	return e$4.length === 0;
}
function of(e$4, t$13) {
	if (e$4 < 0) throw new Error("start < 0");
	if (t$13 < 0) throw new Error("length < 0");
	return {
		start: e$4,
		length: t$13
	};
}
function Ag(e$4, t$13) {
	return of(e$4, t$13 - e$4);
}
function e_(e$4) {
	return of(e$4.span.start, e$4.newLength);
}
function Cg(e$4) {
	return Eg(e$4.span) && e$4.newLength === 0;
}
function t1(e$4, t$13) {
	if (t$13 < 0) throw new Error("newLength < 0");
	return {
		span: e$4,
		newLength: t$13
	};
}
t1(of(0, 0), 0);
function cf(e$4, t$13) {
	for (; e$4;) {
		let a$13 = t$13(e$4);
		if (a$13 === "quit") return;
		if (a$13) return e$4;
		e$4 = e$4.parent;
	}
}
function yl(e$4) {
	return (e$4.flags & 16) === 0;
}
function Dg(e$4, t$13) {
	if (e$4 === void 0 || yl(e$4)) return e$4;
	for (e$4 = e$4.original; e$4;) {
		if (yl(e$4)) return !t$13 || t$13(e$4) ? e$4 : void 0;
		e$4 = e$4.original;
	}
}
function ja$1(e$4) {
	return e$4.length >= 2 && e$4.charCodeAt(0) === 95 && e$4.charCodeAt(1) === 95 ? "_" + e$4 : e$4;
}
function f_(e$4) {
	let t$13 = e$4;
	return t$13.length >= 3 && t$13.charCodeAt(0) === 95 && t$13.charCodeAt(1) === 95 && t$13.charCodeAt(2) === 95 ? t$13.substr(1) : t$13;
}
function In$1(e$4) {
	return f_(e$4.escapedText);
}
function kl(e$4) {
	let t$13 = Gm(e$4.escapedText);
	return t$13 ? jy(t$13, hi$1) : void 0;
}
function jp(e$4) {
	return e$4.valueDeclaration && Qg(e$4.valueDeclaration) ? In$1(e$4.valueDeclaration.name) : f_(e$4.escapedName);
}
function n1(e$4) {
	let t$13 = e$4.parent.parent;
	if (t$13) {
		if (Ud(t$13)) return nl(t$13);
		switch (t$13.kind) {
			case 243:
				if (t$13.declarationList && t$13.declarationList.declarations[0]) return nl(t$13.declarationList.declarations[0]);
				break;
			case 244:
				let a$13 = t$13.expression;
				switch (a$13.kind === 226 && a$13.operatorToken.kind === 64 && (a$13 = a$13.left), a$13.kind) {
					case 211: return a$13.name;
					case 212:
						let o$9 = a$13.argumentExpression;
						if (Ze$2(o$9)) return o$9;
				}
				break;
			case 217: return nl(t$13.expression);
			case 256:
				if (Ud(t$13.statement) || m1(t$13.statement)) return nl(t$13.statement);
				break;
		}
	}
}
function nl(e$4) {
	let t$13 = r1(e$4);
	return t$13 && Ze$2(t$13) ? t$13 : void 0;
}
function Pg(e$4) {
	return e$4.name || n1(e$4);
}
function Ng(e$4) {
	return !!e$4.name;
}
function lf(e$4) {
	switch (e$4.kind) {
		case 80: return e$4;
		case 348:
		case 341: {
			let { name: a$13 } = e$4;
			if (a$13.kind === 166) return a$13.right;
			break;
		}
		case 213:
		case 226: {
			let a$13 = e$4;
			switch (yf(a$13)) {
				case 1:
				case 4:
				case 5:
				case 3: return gf(a$13.left);
				case 7:
				case 8:
				case 9: return a$13.arguments[1];
				default: return;
			}
		}
		case 346: return Pg(e$4);
		case 340: return n1(e$4);
		case 277: {
			let { expression: a$13 } = e$4;
			return Ze$2(a$13) ? a$13 : void 0;
		}
		case 212:
			let t$13 = e$4;
			if (x1(t$13)) return t$13.argumentExpression;
	}
	return e$4.name;
}
function r1(e$4) {
	if (e$4 !== void 0) return lf(e$4) || (Mf(e$4) || Lf(e$4) || Tl(e$4) ? Ig(e$4) : void 0);
}
function Ig(e$4) {
	if (e$4.parent) {
		if (sh(e$4.parent) || H1(e$4.parent)) return e$4.parent.name;
		if (ea(e$4.parent) && e$4 === e$4.parent.right) {
			if (Ze$2(e$4.parent.left)) return e$4.parent.left;
			if (C1(e$4.parent.left)) return gf(e$4.parent.left);
		} else if (Jf(e$4.parent) && Ze$2(e$4.parent.name)) return e$4.parent.name;
	} else return;
}
function uf(e$4) {
	if (nb(e$4)) return Xr$2(e$4.modifiers, Cl);
}
function i1(e$4) {
	if (S_(e$4, 98303)) return Xr$2(e$4.modifiers, e2);
}
function a1(e$4, t$13) {
	if (e$4.name) if (Ze$2(e$4.name)) {
		let a$13 = e$4.name.escapedText;
		return d_(e$4.parent, t$13).filter((o$9) => Vp(o$9) && Ze$2(o$9.name) && o$9.name.escapedText === a$13);
	} else {
		let a$13 = e$4.parent.parameters.indexOf(e$4);
		B$2.assert(a$13 > -1, "Parameters should always be in their parents' parameter list");
		let o$9 = d_(e$4.parent, t$13).filter(Vp);
		if (a$13 < o$9.length) return [o$9[a$13]];
	}
	return bt$2;
}
function Og(e$4) {
	return a1(e$4, !1);
}
function Mg(e$4) {
	return a1(e$4, !0);
}
function s1(e$4, t$13) {
	let a$13 = e$4.name.escapedText;
	return d_(e$4.parent, t$13).filter((o$9) => ph(o$9) && o$9.typeParameters.some((m$11) => m$11.name.escapedText === a$13));
}
function Lg(e$4) {
	return s1(e$4, !1);
}
function Jg(e$4) {
	return s1(e$4, !0);
}
function jg(e$4) {
	return Ti$1(e$4, b6);
}
function Rg(e$4) {
	return Gg(e$4, C6);
}
function Ug(e$4) {
	return Ti$1(e$4, v6, !0);
}
function Bg(e$4) {
	return Ti$1(e$4, T6, !0);
}
function qg(e$4) {
	return Ti$1(e$4, x6, !0);
}
function Fg(e$4) {
	return Ti$1(e$4, S6, !0);
}
function zg(e$4) {
	return Ti$1(e$4, w6, !0);
}
function Vg(e$4) {
	return Ti$1(e$4, E6, !0);
}
function Wg(e$4) {
	let t$13 = Ti$1(e$4, zf);
	if (t$13 && t$13.typeExpression && t$13.typeExpression.type) return t$13;
}
function d_(e$4, t$13) {
	var a$13;
	if (!bf(e$4)) return bt$2;
	let o$9 = (a$13 = e$4.jsDoc) == null ? void 0 : a$13.jsDocCache;
	if (o$9 === void 0 || t$13) {
		let m$11 = B2(e$4, t$13);
		B$2.assert(m$11.length < 2 || m$11[0] !== m$11[1]), o$9 = Dm(m$11, (v$5) => uh(v$5) ? v$5.tags : v$5), t$13 || (e$4.jsDoc ?? (e$4.jsDoc = []), e$4.jsDoc.jsDocCache = o$9);
	}
	return o$9;
}
function _1(e$4) {
	return d_(e$4, !1);
}
function Ti$1(e$4, t$13, a$13) {
	return Am(d_(e$4, a$13), t$13);
}
function Gg(e$4, t$13) {
	return _1(e$4).filter(t$13);
}
function Rp(e$4) {
	return e$4.kind === 80 || e$4.kind === 81;
}
function Yg(e$4) {
	return dr$2(e$4) && !!(e$4.flags & 64);
}
function Hg(e$4) {
	return $a(e$4) && !!(e$4.flags & 64);
}
function jd(e$4) {
	return Of(e$4) && !!(e$4.flags & 64);
}
function o1(e$4) {
	let t$13 = e$4.kind;
	return !!(e$4.flags & 64) && (t$13 === 211 || t$13 === 212 || t$13 === 213 || t$13 === 235);
}
function pf(e$4) {
	return Vf(e$4, 8);
}
function Xg(e$4) {
	return pl(e$4) && !!(e$4.flags & 64);
}
function ff(e$4) {
	return e$4 >= 166;
}
function df(e$4) {
	return e$4 >= 0 && e$4 <= 165;
}
function c1(e$4) {
	return df(e$4.kind);
}
function yi$1(e$4) {
	return Nr$2(e$4, "pos") && Nr$2(e$4, "end");
}
function $g(e$4) {
	return 9 <= e$4 && e$4 <= 15;
}
function Rd(e$4) {
	return 15 <= e$4 && e$4 <= 18;
}
function qa$1(e$4) {
	var t$13;
	return Ze$2(e$4) && ((t$13 = e$4.emitNode) == null ? void 0 : t$13.autoGenerate) !== void 0;
}
function l1(e$4) {
	var t$13;
	return vi$1(e$4) && ((t$13 = e$4.emitNode) == null ? void 0 : t$13.autoGenerate) !== void 0;
}
function Qg(e$4) {
	return (Ya(e$4) || r2(e$4)) && vi$1(e$4.name);
}
function Hr$2(e$4) {
	switch (e$4) {
		case 128:
		case 129:
		case 134:
		case 87:
		case 138:
		case 90:
		case 95:
		case 103:
		case 125:
		case 123:
		case 124:
		case 148:
		case 126:
		case 147:
		case 164: return !0;
	}
	return !1;
}
function Kg(e$4) {
	return !!(E1(e$4) & 31);
}
function Zg(e$4) {
	return Kg(e$4) || e$4 === 126 || e$4 === 164 || e$4 === 129;
}
function e2(e$4) {
	return Hr$2(e$4.kind);
}
function u1(e$4) {
	let t$13 = e$4.kind;
	return t$13 === 80 || t$13 === 81 || t$13 === 11 || t$13 === 9 || t$13 === 167;
}
function mf(e$4) {
	return !!e$4 && n2(e$4.kind);
}
function t2(e$4) {
	switch (e$4) {
		case 262:
		case 174:
		case 176:
		case 177:
		case 178:
		case 218:
		case 219: return !0;
		default: return !1;
	}
}
function n2(e$4) {
	switch (e$4) {
		case 173:
		case 179:
		case 323:
		case 180:
		case 181:
		case 184:
		case 317:
		case 185: return !0;
		default: return t2(e$4);
	}
}
function xi$1(e$4) {
	return e$4 && (e$4.kind === 263 || e$4.kind === 231);
}
function r2(e$4) {
	switch (e$4.kind) {
		case 174:
		case 177:
		case 178: return !0;
		default: return !1;
	}
}
function i2(e$4) {
	let t$13 = e$4.kind;
	return t$13 === 303 || t$13 === 304 || t$13 === 305 || t$13 === 174 || t$13 === 177 || t$13 === 178;
}
function p1(e$4) {
	return fb(e$4.kind);
}
function a2(e$4) {
	if (e$4) {
		let t$13 = e$4.kind;
		return t$13 === 207 || t$13 === 206;
	}
	return !1;
}
function s2(e$4) {
	let t$13 = e$4.kind;
	return t$13 === 209 || t$13 === 210;
}
function _2(e$4) {
	switch (e$4.kind) {
		case 260:
		case 169:
		case 208: return !0;
	}
	return !1;
}
function Va$1(e$4) {
	return f1(pf(e$4).kind);
}
function f1(e$4) {
	switch (e$4) {
		case 211:
		case 212:
		case 214:
		case 213:
		case 284:
		case 285:
		case 288:
		case 215:
		case 209:
		case 217:
		case 210:
		case 231:
		case 218:
		case 80:
		case 81:
		case 14:
		case 9:
		case 10:
		case 11:
		case 15:
		case 228:
		case 97:
		case 106:
		case 110:
		case 112:
		case 108:
		case 235:
		case 233:
		case 236:
		case 102:
		case 282: return !0;
		default: return !1;
	}
}
function o2(e$4) {
	return d1(pf(e$4).kind);
}
function d1(e$4) {
	switch (e$4) {
		case 224:
		case 225:
		case 220:
		case 221:
		case 222:
		case 223:
		case 216: return !0;
		default: return f1(e$4);
	}
}
function m1(e$4) {
	return c2(pf(e$4).kind);
}
function c2(e$4) {
	switch (e$4) {
		case 227:
		case 229:
		case 219:
		case 226:
		case 230:
		case 234:
		case 232:
		case 356:
		case 355:
		case 238: return !0;
		default: return d1(e$4);
	}
}
function l2(e$4) {
	return e$4 === 219 || e$4 === 208 || e$4 === 263 || e$4 === 231 || e$4 === 175 || e$4 === 176 || e$4 === 266 || e$4 === 306 || e$4 === 281 || e$4 === 262 || e$4 === 218 || e$4 === 177 || e$4 === 273 || e$4 === 271 || e$4 === 276 || e$4 === 264 || e$4 === 291 || e$4 === 174 || e$4 === 173 || e$4 === 267 || e$4 === 270 || e$4 === 274 || e$4 === 280 || e$4 === 169 || e$4 === 303 || e$4 === 172 || e$4 === 171 || e$4 === 178 || e$4 === 304 || e$4 === 265 || e$4 === 168 || e$4 === 260 || e$4 === 346 || e$4 === 338 || e$4 === 348 || e$4 === 202;
}
function h1(e$4) {
	return e$4 === 262 || e$4 === 282 || e$4 === 263 || e$4 === 264 || e$4 === 265 || e$4 === 266 || e$4 === 267 || e$4 === 272 || e$4 === 271 || e$4 === 278 || e$4 === 277 || e$4 === 270;
}
function y1(e$4) {
	return e$4 === 252 || e$4 === 251 || e$4 === 259 || e$4 === 246 || e$4 === 244 || e$4 === 242 || e$4 === 249 || e$4 === 250 || e$4 === 248 || e$4 === 245 || e$4 === 256 || e$4 === 253 || e$4 === 255 || e$4 === 257 || e$4 === 258 || e$4 === 243 || e$4 === 247 || e$4 === 254 || e$4 === 353;
}
function Ud(e$4) {
	return e$4.kind === 168 ? e$4.parent && e$4.parent.kind !== 345 || ta(e$4) : l2(e$4.kind);
}
function u2(e$4) {
	let t$13 = e$4.kind;
	return y1(t$13) || h1(t$13) || p2$1(e$4);
}
function p2$1(e$4) {
	return e$4.kind !== 241 || e$4.parent !== void 0 && (e$4.parent.kind === 258 || e$4.parent.kind === 299) ? !1 : !A2(e$4);
}
function f2(e$4) {
	let t$13 = e$4.kind;
	return y1(t$13) || h1(t$13) || t$13 === 241;
}
function g1(e$4) {
	return e$4.kind >= 309 && e$4.kind <= 351;
}
function d2(e$4) {
	return e$4.kind === 320 || e$4.kind === 319 || e$4.kind === 321 || y2(e$4) || m2(e$4) || g6(e$4) || Il(e$4);
}
function m2(e$4) {
	return e$4.kind >= 327 && e$4.kind <= 351;
}
function rl(e$4) {
	return e$4.kind === 178;
}
function il(e$4) {
	return e$4.kind === 177;
}
function $i$1(e$4) {
	if (!bf(e$4)) return !1;
	let { jsDoc: t$13 } = e$4;
	return !!t$13 && t$13.length > 0;
}
function h2(e$4) {
	return !!e$4.initializer;
}
function El(e$4) {
	return e$4.kind === 11 || e$4.kind === 15;
}
function y2(e$4) {
	return e$4.kind === 324 || e$4.kind === 325 || e$4.kind === 326;
}
function Bd(e$4) {
	return (e$4.flags & 33554432) !== 0;
}
g2();
function g2() {
	var e$4 = "";
	let t$13 = (a$13) => e$4 += a$13;
	return {
		getText: () => e$4,
		write: t$13,
		rawWrite: t$13,
		writeKeyword: t$13,
		writeOperator: t$13,
		writePunctuation: t$13,
		writeSpace: t$13,
		writeStringLiteral: t$13,
		writeLiteral: t$13,
		writeParameter: t$13,
		writeProperty: t$13,
		writeSymbol: (a$13, o$9) => t$13(a$13),
		writeTrailingSemicolon: t$13,
		writeComment: t$13,
		getTextPos: () => e$4.length,
		getLine: () => 0,
		getColumn: () => 0,
		getIndent: () => 0,
		isAtStartOfLine: () => !1,
		hasTrailingComment: () => !1,
		hasTrailingWhitespace: () => !!e$4.length && za$1(e$4.charCodeAt(e$4.length - 1)),
		writeLine: () => e$4 += " ",
		increaseIndent: Ga$1,
		decreaseIndent: Ga$1,
		clear: () => e$4 = ""
	};
}
function b2(e$4, t$13) {
	let a$13 = e$4.entries();
	for (let [o$9, m$11] of a$13) {
		let v$5 = t$13(m$11, o$9);
		if (v$5) return v$5;
	}
}
function v2(e$4) {
	return e$4.end - e$4.pos;
}
function b1(e$4) {
	return T2(e$4), (e$4.flags & 1048576) !== 0;
}
function T2(e$4) {
	e$4.flags & 2097152 || ((e$4.flags & 262144 || Ht$1(e$4, b1)) && (e$4.flags |= 1048576), e$4.flags |= 2097152);
}
function gi$1(e$4) {
	for (; e$4 && e$4.kind !== 307;) e$4 = e$4.parent;
	return e$4;
}
function Qi$1(e$4) {
	return e$4 === void 0 ? !0 : e$4.pos === e$4.end && e$4.pos >= 0 && e$4.kind !== 1;
}
function Up(e$4) {
	return !Qi$1(e$4);
}
function gl(e$4, t$13, a$13) {
	if (Qi$1(e$4)) return e$4.pos;
	if (g1(e$4) || e$4.kind === 12) return Pr$2((t$13 ?? gi$1(e$4)).text, e$4.pos, !1, !0);
	if (a$13 && $i$1(e$4)) return gl(e$4.jsDoc[0], t$13);
	if (e$4.kind === 352) {
		t$13 ?? (t$13 = gi$1(e$4));
		let o$9 = Xp(fh(e$4, t$13));
		if (o$9) return gl(o$9, t$13, a$13);
	}
	return Pr$2((t$13 ?? gi$1(e$4)).text, e$4.pos, !1, !1, C2(e$4));
}
function qd(e$4, t$13, a$13 = !1) {
	return s_$1(e$4.text, t$13, a$13);
}
function x2(e$4) {
	return !!cf(e$4, oh);
}
function s_$1(e$4, t$13, a$13 = !1) {
	if (Qi$1(t$13)) return "";
	let o$9 = e$4.substring(a$13 ? t$13.pos : Pr$2(e$4, t$13.pos), t$13.end);
	return x2(t$13) && (o$9 = o$9.split(/\r\n|\n|\r/).map((m$11) => m$11.replace(/^\s*\*/, "").trimStart()).join(`
`)), o$9;
}
function Wa$1(e$4) {
	let t$13 = e$4.emitNode;
	return t$13 && t$13.flags || 0;
}
function S2(e$4, t$13, a$13) {
	B$2.assertGreaterThanOrEqual(t$13, 0), B$2.assertGreaterThanOrEqual(a$13, 0), B$2.assertLessThanOrEqual(t$13, e$4.length), B$2.assertLessThanOrEqual(t$13 + a$13, e$4.length);
}
function ul(e$4) {
	return e$4.kind === 244 && e$4.expression.kind === 11;
}
function hf(e$4) {
	return !!(Wa$1(e$4) & 2097152);
}
function Fd(e$4) {
	return hf(e$4) && jf(e$4);
}
function w2(e$4) {
	return Ze$2(e$4.name) && !e$4.initializer;
}
function zd(e$4) {
	return hf(e$4) && Qa$1(e$4) && Yp(e$4.declarationList.declarations, w2);
}
function k2(e$4, t$13) {
	let a$13 = e$4.kind === 169 || e$4.kind === 168 || e$4.kind === 218 || e$4.kind === 219 || e$4.kind === 217 || e$4.kind === 260 || e$4.kind === 281 ? Hp(xg(t$13, e$4.pos), Jp(t$13, e$4.pos)) : Jp(t$13, e$4.pos);
	return Xr$2(a$13, (o$9) => o$9.end <= e$4.end && t$13.charCodeAt(o$9.pos + 1) === 42 && t$13.charCodeAt(o$9.pos + 2) === 42 && t$13.charCodeAt(o$9.pos + 3) !== 47);
}
function E2(e$4) {
	if (e$4) switch (e$4.kind) {
		case 208:
		case 306:
		case 169:
		case 303:
		case 172:
		case 171:
		case 304:
		case 260: return !0;
	}
	return !1;
}
function A2(e$4) {
	return e$4 && e$4.kind === 241 && mf(e$4.parent);
}
function Vd(e$4) {
	let t$13 = e$4.kind;
	return (t$13 === 211 || t$13 === 212) && e$4.expression.kind === 108;
}
function ta(e$4) {
	return !!e$4 && !!(e$4.flags & 524288);
}
function C2(e$4) {
	return !!e$4 && !!(e$4.flags & 16777216);
}
function D2(e$4) {
	for (; bl(e$4, !0);) e$4 = e$4.right;
	return e$4;
}
function P2(e$4) {
	return Ze$2(e$4) && e$4.escapedText === "exports";
}
function N2(e$4) {
	return Ze$2(e$4) && e$4.escapedText === "module";
}
function v1(e$4) {
	return (dr$2(e$4) || T1(e$4)) && N2(e$4.expression) && h_(e$4) === "exports";
}
function yf(e$4) {
	let t$13 = O2(e$4);
	return t$13 === 5 || ta(e$4) ? t$13 : 0;
}
function I2(e$4) {
	return r_(e$4.arguments) === 3 && dr$2(e$4.expression) && Ze$2(e$4.expression.expression) && In$1(e$4.expression.expression) === "Object" && In$1(e$4.expression.name) === "defineProperty" && Al(e$4.arguments[1]) && m_(e$4.arguments[0], !0);
}
function T1(e$4) {
	return $a(e$4) && Al(e$4.argumentExpression);
}
function x_(e$4, t$13) {
	return dr$2(e$4) && (!t$13 && e$4.expression.kind === 110 || Ze$2(e$4.name) && m_(e$4.expression, !0)) || x1(e$4, t$13);
}
function x1(e$4, t$13) {
	return T1(e$4) && (!t$13 && e$4.expression.kind === 110 || xf$1(e$4.expression) || x_(e$4.expression, !0));
}
function m_(e$4, t$13) {
	return xf$1(e$4) || x_(e$4, t$13);
}
function O2(e$4) {
	if (Of(e$4)) {
		if (!I2(e$4)) return 0;
		let t$13 = e$4.arguments[0];
		return P2(t$13) || v1(t$13) ? 8 : x_(t$13) && h_(t$13) === "prototype" ? 9 : 7;
	}
	return e$4.operatorToken.kind !== 64 || !C1(e$4.left) || M2(D2(e$4)) ? 0 : m_(e$4.left.expression, !0) && h_(e$4.left) === "prototype" && If(J2(e$4)) ? 6 : L2(e$4.left);
}
function M2(e$4) {
	return p6(e$4) && na(e$4.expression) && e$4.expression.text === "0";
}
function gf(e$4) {
	if (dr$2(e$4)) return e$4.name;
	let t$13 = vf(e$4.argumentExpression);
	return na(t$13) || El(t$13) ? t$13 : e$4;
}
function h_(e$4) {
	let t$13 = gf(e$4);
	if (t$13) {
		if (Ze$2(t$13)) return t$13.escapedText;
		if (El(t$13) || na(t$13)) return ja$1(t$13.text);
	}
}
function L2(e$4) {
	if (e$4.expression.kind === 110) return 4;
	if (v1(e$4)) return 2;
	if (m_(e$4.expression, !0)) {
		if (ub(e$4.expression)) return 3;
		let t$13 = e$4;
		for (; !Ze$2(t$13.expression);) t$13 = t$13.expression;
		let a$13 = t$13.expression;
		if ((a$13.escapedText === "exports" || a$13.escapedText === "module" && h_(t$13) === "exports") && x_(e$4)) return 1;
		if (m_(e$4, !0) || $a(e$4) && $2(e$4)) return 5;
	}
	return 0;
}
function J2(e$4) {
	for (; ea(e$4.right);) e$4 = e$4.right;
	return e$4.right;
}
function j2(e$4) {
	return Pl(e$4) && ea(e$4.expression) && yf(e$4.expression) !== 0 && ea(e$4.expression.right) && (e$4.expression.right.operatorToken.kind === 57 || e$4.expression.right.operatorToken.kind === 61) ? e$4.expression.right.right : void 0;
}
function R2(e$4) {
	switch (e$4.kind) {
		case 243:
			let t$13 = Bp(e$4);
			return t$13 && t$13.initializer;
		case 172: return e$4.initializer;
		case 303: return e$4.initializer;
	}
}
function Bp(e$4) {
	return Qa$1(e$4) ? Xp(e$4.declarationList.declarations) : void 0;
}
function U2(e$4) {
	return wi$1(e$4) && e$4.body && e$4.body.kind === 267 ? e$4.body : void 0;
}
function bf(e$4) {
	switch (e$4.kind) {
		case 219:
		case 226:
		case 241:
		case 252:
		case 179:
		case 296:
		case 263:
		case 231:
		case 175:
		case 176:
		case 185:
		case 180:
		case 251:
		case 259:
		case 246:
		case 212:
		case 242:
		case 1:
		case 266:
		case 306:
		case 277:
		case 278:
		case 281:
		case 244:
		case 249:
		case 250:
		case 248:
		case 262:
		case 218:
		case 184:
		case 177:
		case 80:
		case 245:
		case 272:
		case 271:
		case 181:
		case 264:
		case 317:
		case 323:
		case 256:
		case 174:
		case 173:
		case 267:
		case 202:
		case 270:
		case 210:
		case 169:
		case 217:
		case 211:
		case 303:
		case 172:
		case 171:
		case 253:
		case 240:
		case 178:
		case 304:
		case 305:
		case 255:
		case 257:
		case 258:
		case 265:
		case 168:
		case 260:
		case 243:
		case 247:
		case 254: return !0;
		default: return !1;
	}
}
function B2(e$4, t$13) {
	let a$13;
	E2(e$4) && h2(e$4) && $i$1(e$4.initializer) && (a$13 = Nn$2(a$13, Wd(e$4, e$4.initializer.jsDoc)));
	let o$9 = e$4;
	for (; o$9 && o$9.parent;) {
		if ($i$1(o$9) && (a$13 = Nn$2(a$13, Wd(e$4, o$9.jsDoc))), o$9.kind === 169) {
			a$13 = Nn$2(a$13, (t$13 ? Mg : Og)(o$9));
			break;
		}
		if (o$9.kind === 168) {
			a$13 = Nn$2(a$13, (t$13 ? Jg : Lg)(o$9));
			break;
		}
		o$9 = F2(o$9);
	}
	return a$13 || bt$2;
}
function Wd(e$4, t$13) {
	let a$13 = Cy(t$13);
	return Dm(t$13, (o$9) => {
		if (o$9 === a$13) {
			let m$11 = Xr$2(o$9.tags, (v$5) => q2(e$4, v$5));
			return o$9.tags === m$11 ? [o$9] : m$11;
		} else return Xr$2(o$9.tags, k6);
	});
}
function q2(e$4, t$13) {
	return !(zf(t$13) || D6(t$13)) || !t$13.parent || !uh(t$13.parent) || !Dl(t$13.parent.parent) || t$13.parent.parent === e$4;
}
function F2(e$4) {
	let t$13 = e$4.parent;
	if (t$13.kind === 303 || t$13.kind === 277 || t$13.kind === 172 || t$13.kind === 244 && e$4.kind === 211 || t$13.kind === 253 || U2(t$13) || bl(e$4)) return t$13;
	if (t$13.parent && (Bp(t$13.parent) === e$4 || bl(t$13))) return t$13.parent;
	if (t$13.parent && t$13.parent.parent && (Bp(t$13.parent.parent) || R2(t$13.parent.parent) === e$4 || j2(t$13.parent.parent))) return t$13.parent.parent;
}
function vf(e$4, t$13) {
	return Vf(e$4, t$13 ? -2147483647 : 1);
}
function z2(e$4) {
	let t$13 = V2(e$4);
	if (t$13 && ta(e$4)) {
		let a$13 = jg(e$4);
		if (a$13) return a$13.class;
	}
	return t$13;
}
function V2(e$4) {
	let t$13 = Tf(e$4.heritageClauses, 96);
	return t$13 && t$13.types.length > 0 ? t$13.types[0] : void 0;
}
function W2(e$4) {
	if (ta(e$4)) return Rg(e$4).map((t$13) => t$13.class);
	{
		let t$13 = Tf(e$4.heritageClauses, 119);
		return t$13 == null ? void 0 : t$13.types;
	}
}
function G2(e$4) {
	return w_(e$4) ? Y2(e$4) || bt$2 : xi$1(e$4) && Hp(Op(z2(e$4)), W2(e$4)) || bt$2;
}
function Y2(e$4) {
	let t$13 = Tf(e$4.heritageClauses, 96);
	return t$13 ? t$13.types : void 0;
}
function Tf(e$4, t$13) {
	if (e$4) {
		for (let a$13 of e$4) if (a$13.token === t$13) return a$13;
	}
}
function hi$1(e$4) {
	return 83 <= e$4 && e$4 <= 165;
}
function H2(e$4) {
	return 19 <= e$4 && e$4 <= 79;
}
function Sp(e$4) {
	return hi$1(e$4) || H2(e$4);
}
function Al(e$4) {
	return El(e$4) || na(e$4);
}
function X2(e$4) {
	return Q1(e$4) && (e$4.operator === 40 || e$4.operator === 41) && na(e$4.operand);
}
function $2(e$4) {
	if (!(e$4.kind === 167 || e$4.kind === 212)) return !1;
	let t$13 = $a(e$4) ? vf(e$4.argumentExpression) : e$4.expression;
	return !Al(t$13) && !X2(t$13);
}
function Q2(e$4) {
	return Rp(e$4) ? In$1(e$4) : ah(e$4) ? Bb(e$4) : e$4.text;
}
function Ra(e$4) {
	return y_(e$4.pos) || y_(e$4.end);
}
function wp(e$4) {
	switch (e$4) {
		case 61: return 4;
		case 57: return 5;
		case 56: return 6;
		case 52: return 7;
		case 53: return 8;
		case 51: return 9;
		case 35:
		case 36:
		case 37:
		case 38: return 10;
		case 30:
		case 32:
		case 33:
		case 34:
		case 104:
		case 103:
		case 130:
		case 152: return 11;
		case 48:
		case 49:
		case 50: return 12;
		case 40:
		case 41: return 13;
		case 42:
		case 44:
		case 45: return 14;
		case 43: return 15;
	}
	return -1;
}
function kp(e$4) {
	return !!((e$4.templateFlags || 0) & 2048);
}
function K2(e$4) {
	return e$4 && !!(M1(e$4) ? kp(e$4) : kp(e$4.head) || nn$2(e$4.templateSpans, (t$13) => kp(t$13.literal)));
}
new Map(Object.entries({
	"	": "\\t",
	"\v": "\\v",
	"\f": "\\f",
	"\b": "\\b",
	"\r": "\\r",
	"\n": "\\n",
	"\\": "\\\\",
	"\"": "\\\"",
	"'": "\\'",
	"`": "\\`",
	"\u2028": "\\u2028",
	"\u2029": "\\u2029",
	"": "\\u0085",
	"\r\n": "\\r\\n"
}));
new Map(Object.entries({
	"\"": "&quot;",
	"'": "&apos;"
}));
function Z2(e$4) {
	return !!e$4 && e$4.kind === 80 && eb(e$4);
}
function eb(e$4) {
	return e$4.escapedText === "this";
}
function S_(e$4, t$13) {
	return !!rb(e$4, t$13);
}
function tb(e$4) {
	return S_(e$4, 256);
}
function nb(e$4) {
	return S_(e$4, 32768);
}
function rb(e$4, t$13) {
	return ab(e$4) & t$13;
}
function ib(e$4, t$13, a$13) {
	return e$4.kind >= 0 && e$4.kind <= 165 ? 0 : (e$4.modifierFlagsCache & 536870912 || (e$4.modifierFlagsCache = k1(e$4) | 536870912), a$13 || t$13 && ta(e$4) ? (!(e$4.modifierFlagsCache & 268435456) && e$4.parent && (e$4.modifierFlagsCache |= S1(e$4) | 268435456), w1(e$4.modifierFlagsCache)) : sb(e$4.modifierFlagsCache));
}
function ab(e$4) {
	return ib(e$4, !1);
}
function S1(e$4) {
	let t$13 = 0;
	return e$4.parent && !g_(e$4) && (ta(e$4) && (Ug(e$4) && (t$13 |= 8388608), Bg(e$4) && (t$13 |= 16777216), qg(e$4) && (t$13 |= 33554432), Fg(e$4) && (t$13 |= 67108864), zg(e$4) && (t$13 |= 134217728)), Vg(e$4) && (t$13 |= 65536)), t$13;
}
function sb(e$4) {
	return e$4 & 65535;
}
function w1(e$4) {
	return e$4 & 131071 | (e$4 & 260046848) >>> 23;
}
function _b(e$4) {
	return w1(S1(e$4));
}
function ob(e$4) {
	return k1(e$4) | _b(e$4);
}
function k1(e$4) {
	let t$13 = Ol(e$4) ? Bn$1(e$4.modifiers) : 0;
	return (e$4.flags & 8 || e$4.kind === 80 && e$4.flags & 4096) && (t$13 |= 32), t$13;
}
function Bn$1(e$4) {
	let t$13 = 0;
	if (e$4) for (let a$13 of e$4) t$13 |= E1(a$13.kind);
	return t$13;
}
function E1(e$4) {
	switch (e$4) {
		case 126: return 256;
		case 125: return 1;
		case 124: return 4;
		case 123: return 2;
		case 128: return 64;
		case 129: return 512;
		case 95: return 32;
		case 138: return 128;
		case 87: return 4096;
		case 90: return 2048;
		case 134: return 1024;
		case 148: return 8;
		case 164: return 16;
		case 103: return 8192;
		case 147: return 16384;
		case 170: return 32768;
	}
	return 0;
}
function cb(e$4) {
	return e$4 === 76 || e$4 === 77 || e$4 === 78;
}
function A1(e$4) {
	return e$4 >= 64 && e$4 <= 79;
}
function bl(e$4, t$13) {
	return ea(e$4) && (t$13 ? e$4.operatorToken.kind === 64 : A1(e$4.operatorToken.kind)) && Va$1(e$4.left);
}
function xf$1(e$4) {
	return e$4.kind === 80 || lb(e$4);
}
function lb(e$4) {
	return dr$2(e$4) && Ze$2(e$4.name) && xf$1(e$4.expression);
}
function ub(e$4) {
	return x_(e$4) && h_(e$4) === "prototype";
}
function Ep(e$4) {
	return e$4.flags & 3899393 ? e$4.objectFlags : 0;
}
function pb(e$4) {
	let t$13;
	return Ht$1(e$4, (a$13) => {
		Up(a$13) && (t$13 = a$13);
	}, (a$13) => {
		for (let o$9 = a$13.length - 1; o$9 >= 0; o$9--) if (Up(a$13[o$9])) {
			t$13 = a$13[o$9];
			break;
		}
	}), t$13;
}
function fb(e$4) {
	return e$4 >= 182 && e$4 <= 205 || e$4 === 133 || e$4 === 159 || e$4 === 150 || e$4 === 163 || e$4 === 151 || e$4 === 136 || e$4 === 154 || e$4 === 155 || e$4 === 116 || e$4 === 157 || e$4 === 146 || e$4 === 141 || e$4 === 233 || e$4 === 312 || e$4 === 313 || e$4 === 314 || e$4 === 315 || e$4 === 316 || e$4 === 317 || e$4 === 318;
}
function C1(e$4) {
	return e$4.kind === 211 || e$4.kind === 212;
}
function db(e$4, t$13) {
	this.flags = e$4, this.escapedName = t$13, this.declarations = void 0, this.valueDeclaration = void 0, this.id = 0, this.mergeId = 0, this.parent = void 0, this.members = void 0, this.exports = void 0, this.exportSymbol = void 0, this.constEnumOnlyModule = void 0, this.isReferenced = void 0, this.lastAssignmentPos = void 0, this.links = void 0;
}
function mb(e$4, t$13) {
	this.flags = t$13, (B$2.isDebugging || cl) && (this.checker = e$4);
}
function hb(e$4, t$13) {
	this.flags = t$13, B$2.isDebugging && (this.checker = e$4);
}
function Ap(e$4, t$13, a$13) {
	this.pos = t$13, this.end = a$13, this.kind = e$4, this.id = 0, this.flags = 0, this.modifierFlagsCache = 0, this.transformFlags = 0, this.parent = void 0, this.original = void 0, this.emitNode = void 0;
}
function yb(e$4, t$13, a$13) {
	this.pos = t$13, this.end = a$13, this.kind = e$4, this.id = 0, this.flags = 0, this.transformFlags = 0, this.parent = void 0, this.emitNode = void 0;
}
function gb(e$4, t$13, a$13) {
	this.pos = t$13, this.end = a$13, this.kind = e$4, this.id = 0, this.flags = 0, this.transformFlags = 0, this.parent = void 0, this.original = void 0, this.emitNode = void 0;
}
function bb(e$4, t$13, a$13) {
	this.fileName = e$4, this.text = t$13, this.skipTrivia = a$13 || ((o$9) => o$9);
}
var At$2 = {
	getNodeConstructor: () => Ap,
	getTokenConstructor: () => yb,
	getIdentifierConstructor: () => gb,
	getPrivateIdentifierConstructor: () => Ap,
	getSourceFileConstructor: () => Ap,
	getSymbolConstructor: () => db,
	getTypeConstructor: () => mb,
	getSignatureConstructor: () => hb,
	getSourceMapSourceConstructor: () => bb
}, vb = [];
function Tb(e$4) {
	Object.assign(At$2, e$4), qn$1(vb, (t$13) => t$13(At$2));
}
function xb(e$4, t$13) {
	return e$4.replace(/\{(\d+)\}/g, (a$13, o$9) => "" + B$2.checkDefined(t$13[+o$9]));
}
var Gd;
function Sb(e$4) {
	return Gd && Gd[e$4.key] || e$4.message;
}
function La(e$4, t$13, a$13, o$9, m$11, ...v$5) {
	a$13 + o$9 > t$13.length && (o$9 = t$13.length - a$13), S2(t$13, a$13, o$9);
	let E$3 = Sb(m$11);
	return nn$2(v$5) && (E$3 = xb(E$3, v$5)), {
		file: void 0,
		start: a$13,
		length: o$9,
		messageText: E$3,
		category: m$11.category,
		code: m$11.code,
		reportsUnnecessary: m$11.reportsUnnecessary,
		fileName: e$4
	};
}
function wb(e$4) {
	return e$4.file === void 0 && e$4.start !== void 0 && e$4.length !== void 0 && typeof e$4.fileName == "string";
}
function D1(e$4, t$13) {
	let a$13 = t$13.fileName || "", o$9 = t$13.text.length;
	B$2.assertEqual(e$4.fileName, a$13), B$2.assertLessThanOrEqual(e$4.start, o$9), B$2.assertLessThanOrEqual(e$4.start + e$4.length, o$9);
	let m$11 = {
		file: t$13,
		start: e$4.start,
		length: e$4.length,
		messageText: e$4.messageText,
		category: e$4.category,
		code: e$4.code,
		reportsUnnecessary: e$4.reportsUnnecessary
	};
	if (e$4.relatedInformation) {
		m$11.relatedInformation = [];
		for (let v$5 of e$4.relatedInformation) wb(v$5) && v$5.fileName === a$13 ? (B$2.assertLessThanOrEqual(v$5.start, o$9), B$2.assertLessThanOrEqual(v$5.start + v$5.length, o$9), m$11.relatedInformation.push(D1(v$5, t$13))) : m$11.relatedInformation.push(v$5);
	}
	return m$11;
}
function Wi$1(e$4, t$13) {
	let a$13 = [];
	for (let o$9 of e$4) a$13.push(D1(o$9, t$13));
	return a$13;
}
function Yd(e$4) {
	return e$4 === 4 || e$4 === 2 || e$4 === 1 || e$4 === 6 ? 1 : 0;
}
var ot$2 = {
	allowImportingTsExtensions: {
		dependencies: ["rewriteRelativeImportExtensions"],
		computeValue: (e$4) => !!(e$4.allowImportingTsExtensions || e$4.rewriteRelativeImportExtensions)
	},
	target: {
		dependencies: ["module"],
		computeValue: (e$4) => (e$4.target === 0 ? void 0 : e$4.target) ?? (e$4.module === 100 && 9 || e$4.module === 101 && 9 || e$4.module === 199 && 99 || 1)
	},
	module: {
		dependencies: ["target"],
		computeValue: (e$4) => typeof e$4.module == "number" ? e$4.module : ot$2.target.computeValue(e$4) >= 2 ? 5 : 1
	},
	moduleResolution: {
		dependencies: ["module", "target"],
		computeValue: (e$4) => {
			let t$13 = e$4.moduleResolution;
			if (t$13 === void 0) switch (ot$2.module.computeValue(e$4)) {
				case 1:
					t$13 = 2;
					break;
				case 100:
				case 101:
					t$13 = 3;
					break;
				case 199:
					t$13 = 99;
					break;
				case 200:
					t$13 = 100;
					break;
				default:
					t$13 = 1;
					break;
			}
			return t$13;
		}
	},
	moduleDetection: {
		dependencies: ["module", "target"],
		computeValue: (e$4) => {
			if (e$4.moduleDetection !== void 0) return e$4.moduleDetection;
			let t$13 = ot$2.module.computeValue(e$4);
			return 100 <= t$13 && t$13 <= 199 ? 3 : 2;
		}
	},
	isolatedModules: {
		dependencies: ["verbatimModuleSyntax"],
		computeValue: (e$4) => !!(e$4.isolatedModules || e$4.verbatimModuleSyntax)
	},
	esModuleInterop: {
		dependencies: ["module", "target"],
		computeValue: (e$4) => {
			if (e$4.esModuleInterop !== void 0) return e$4.esModuleInterop;
			switch (ot$2.module.computeValue(e$4)) {
				case 100:
				case 101:
				case 199:
				case 200: return !0;
			}
			return !1;
		}
	},
	allowSyntheticDefaultImports: {
		dependencies: [
			"module",
			"target",
			"moduleResolution"
		],
		computeValue: (e$4) => e$4.allowSyntheticDefaultImports !== void 0 ? e$4.allowSyntheticDefaultImports : ot$2.esModuleInterop.computeValue(e$4) || ot$2.module.computeValue(e$4) === 4 || ot$2.moduleResolution.computeValue(e$4) === 100
	},
	resolvePackageJsonExports: {
		dependencies: ["moduleResolution"],
		computeValue: (e$4) => {
			let t$13 = ot$2.moduleResolution.computeValue(e$4);
			if (!Hd(t$13)) return !1;
			if (e$4.resolvePackageJsonExports !== void 0) return e$4.resolvePackageJsonExports;
			switch (t$13) {
				case 3:
				case 99:
				case 100: return !0;
			}
			return !1;
		}
	},
	resolvePackageJsonImports: {
		dependencies: ["moduleResolution", "resolvePackageJsonExports"],
		computeValue: (e$4) => {
			let t$13 = ot$2.moduleResolution.computeValue(e$4);
			if (!Hd(t$13)) return !1;
			if (e$4.resolvePackageJsonExports !== void 0) return e$4.resolvePackageJsonExports;
			switch (t$13) {
				case 3:
				case 99:
				case 100: return !0;
			}
			return !1;
		}
	},
	resolveJsonModule: {
		dependencies: [
			"moduleResolution",
			"module",
			"target"
		],
		computeValue: (e$4) => e$4.resolveJsonModule !== void 0 ? e$4.resolveJsonModule : ot$2.moduleResolution.computeValue(e$4) === 100
	},
	declaration: {
		dependencies: ["composite"],
		computeValue: (e$4) => !!(e$4.declaration || e$4.composite)
	},
	preserveConstEnums: {
		dependencies: ["isolatedModules", "verbatimModuleSyntax"],
		computeValue: (e$4) => !!(e$4.preserveConstEnums || ot$2.isolatedModules.computeValue(e$4))
	},
	incremental: {
		dependencies: ["composite"],
		computeValue: (e$4) => !!(e$4.incremental || e$4.composite)
	},
	declarationMap: {
		dependencies: ["declaration", "composite"],
		computeValue: (e$4) => !!(e$4.declarationMap && ot$2.declaration.computeValue(e$4))
	},
	allowJs: {
		dependencies: ["checkJs"],
		computeValue: (e$4) => e$4.allowJs === void 0 ? !!e$4.checkJs : e$4.allowJs
	},
	useDefineForClassFields: {
		dependencies: ["target", "module"],
		computeValue: (e$4) => e$4.useDefineForClassFields === void 0 ? ot$2.target.computeValue(e$4) >= 9 : e$4.useDefineForClassFields
	},
	noImplicitAny: {
		dependencies: ["strict"],
		computeValue: (e$4) => Yr$2(e$4, "noImplicitAny")
	},
	noImplicitThis: {
		dependencies: ["strict"],
		computeValue: (e$4) => Yr$2(e$4, "noImplicitThis")
	},
	strictNullChecks: {
		dependencies: ["strict"],
		computeValue: (e$4) => Yr$2(e$4, "strictNullChecks")
	},
	strictFunctionTypes: {
		dependencies: ["strict"],
		computeValue: (e$4) => Yr$2(e$4, "strictFunctionTypes")
	},
	strictBindCallApply: {
		dependencies: ["strict"],
		computeValue: (e$4) => Yr$2(e$4, "strictBindCallApply")
	},
	strictPropertyInitialization: {
		dependencies: ["strict"],
		computeValue: (e$4) => Yr$2(e$4, "strictPropertyInitialization")
	},
	strictBuiltinIteratorReturn: {
		dependencies: ["strict"],
		computeValue: (e$4) => Yr$2(e$4, "strictBuiltinIteratorReturn")
	},
	alwaysStrict: {
		dependencies: ["strict"],
		computeValue: (e$4) => Yr$2(e$4, "alwaysStrict")
	},
	useUnknownInCatchVariables: {
		dependencies: ["strict"],
		computeValue: (e$4) => Yr$2(e$4, "useUnknownInCatchVariables")
	}
};
ot$2.allowImportingTsExtensions.computeValue;
ot$2.target.computeValue;
ot$2.module.computeValue;
ot$2.moduleResolution.computeValue;
ot$2.moduleDetection.computeValue;
ot$2.isolatedModules.computeValue;
ot$2.esModuleInterop.computeValue;
ot$2.allowSyntheticDefaultImports.computeValue;
ot$2.resolvePackageJsonExports.computeValue;
ot$2.resolvePackageJsonImports.computeValue;
ot$2.resolveJsonModule.computeValue;
ot$2.declaration.computeValue;
ot$2.preserveConstEnums.computeValue;
ot$2.incremental.computeValue;
ot$2.declarationMap.computeValue;
ot$2.allowJs.computeValue;
ot$2.useDefineForClassFields.computeValue;
function Hd(e$4) {
	return e$4 >= 3 && e$4 <= 99 || e$4 === 100;
}
function Yr$2(e$4, t$13) {
	return e$4[t$13] === void 0 ? !!e$4.strict : !!e$4[t$13];
}
function kb(e$4) {
	return b2(targetOptionDeclaration.type, (t$13, a$13) => t$13 === e$4 ? a$13 : void 0);
}
var Eb = [
	"node_modules",
	"bower_components",
	"jspm_packages"
], P1 = `(?!(${Eb.join("|")})(/|$))`, Ab = {
	singleAsteriskRegexFragment: "([^./]|(\\.(?!min\\.js$))?)*",
	doubleAsteriskRegexFragment: `(/${P1}[^/.][^/]*)*?`,
	replaceWildcardCharacter: (e$4) => N1(e$4, Ab.singleAsteriskRegexFragment)
}, Cb = {
	singleAsteriskRegexFragment: "[^/]*",
	doubleAsteriskRegexFragment: `(/${P1}[^/.][^/]*)*?`,
	replaceWildcardCharacter: (e$4) => N1(e$4, Cb.singleAsteriskRegexFragment)
};
function N1(e$4, t$13) {
	return e$4 === "*" ? t$13 : e$4 === "?" ? "[^/]" : "\\" + e$4;
}
function Db(e$4, t$13) {
	return t$13 || Pb(e$4) || 3;
}
function Pb(e$4) {
	switch (e$4.substr(e$4.lastIndexOf(".")).toLowerCase()) {
		case ".js":
		case ".cjs":
		case ".mjs": return 1;
		case ".jsx": return 2;
		case ".ts":
		case ".cts":
		case ".mts": return 3;
		case ".tsx": return 4;
		case ".json": return 6;
		default: return 0;
	}
}
var I1 = [
	[
		".ts",
		".tsx",
		".d.ts"
	],
	[".cts", ".d.cts"],
	[".mts", ".d.mts"]
];
Cm(I1);
[...I1];
Cm([
	[".js", ".jsx"],
	[".mjs"],
	[".cjs"]
]);
var Ob = [
	".d.ts",
	".d.cts",
	".d.mts"
];
function y_(e$4) {
	return !(e$4 >= 0);
}
function al(e$4, ...t$13) {
	return t$13.length && (e$4.relatedInformation || (e$4.relatedInformation = []), B$2.assert(e$4.relatedInformation !== bt$2, "Diagnostic had empty array singleton for related info, but is still being constructed!"), e$4.relatedInformation.push(...t$13)), e$4;
}
function Mb(e$4) {
	let t$13;
	switch (e$4.charCodeAt(1)) {
		case 98:
		case 66:
			t$13 = 1;
			break;
		case 111:
		case 79:
			t$13 = 3;
			break;
		case 120:
		case 88:
			t$13 = 4;
			break;
		default:
			let W$2 = e$4.length - 1, h$3 = 0;
			for (; e$4.charCodeAt(h$3) === 48;) h$3++;
			return e$4.slice(h$3, W$2) || "0";
	}
	let a$13 = 2, o$9 = e$4.length - 1, m$11 = (o$9 - a$13) * t$13, v$5 = new Uint16Array((m$11 >>> 4) + (m$11 & 15 ? 1 : 0));
	for (let W$2 = o$9 - 1, h$3 = 0; W$2 >= a$13; W$2--, h$3 += t$13) {
		let y$7 = h$3 >>> 4, g$2 = e$4.charCodeAt(W$2), N$5 = (g$2 <= 57 ? g$2 - 48 : 10 + g$2 - (g$2 <= 70 ? 65 : 97)) << (h$3 & 15);
		v$5[y$7] |= N$5;
		let te$5 = N$5 >>> 16;
		te$5 && (v$5[y$7 + 1] |= te$5);
	}
	let E$3 = "", C$3 = v$5.length - 1, c$3 = !0;
	for (; c$3;) {
		let W$2 = 0;
		c$3 = !1;
		for (let h$3 = C$3; h$3 >= 0; h$3--) {
			let y$7 = W$2 << 16 | v$5[h$3], g$2 = y$7 / 10 | 0;
			v$5[h$3] = g$2, W$2 = y$7 - g$2 * 10, g$2 && !c$3 && (C$3 = h$3, c$3 = !0);
		}
		E$3 = W$2 + E$3;
	}
	return E$3;
}
function Lb({ negative: e$4, base10Value: t$13 }) {
	return (e$4 && t$13 !== "0" ? "-" : "") + t$13;
}
function qp(e$4, t$13) {
	return e$4.pos = t$13, e$4;
}
function Jb(e$4, t$13) {
	return e$4.end = t$13, e$4;
}
function bi$1(e$4, t$13, a$13) {
	return Jb(qp(e$4, t$13), a$13);
}
function Xd(e$4, t$13, a$13) {
	return bi$1(e$4, t$13, t$13 + a$13);
}
function Sf(e$4, t$13) {
	return e$4 && t$13 && (e$4.parent = t$13), e$4;
}
function jb(e$4, t$13) {
	if (!e$4) return e$4;
	return xm(e$4, g1(e$4) ? a$13 : m$11), e$4;
	function a$13(v$5, E$3) {
		if (t$13 && v$5.parent === E$3) return "skip";
		Sf(v$5, E$3);
	}
	function o$9(v$5) {
		if ($i$1(v$5)) for (let E$3 of v$5.jsDoc) a$13(E$3, v$5), xm(E$3, a$13);
	}
	function m$11(v$5, E$3) {
		return a$13(v$5, E$3) || o$9(v$5);
	}
}
function Rb(e$4) {
	return !!(e$4.flags & 262144 && e$4.isThisType);
}
function Ub(e$4) {
	var t$13;
	return ((t$13 = getSnippetElement(e$4)) == null ? void 0 : t$13.kind) === 0;
}
function Bb(e$4) {
	return `${In$1(e$4.namespace)}:${In$1(e$4.name)}`;
}
String.prototype.replace;
var Fp = [
	"assert",
	"assert/strict",
	"async_hooks",
	"buffer",
	"child_process",
	"cluster",
	"console",
	"constants",
	"crypto",
	"dgram",
	"diagnostics_channel",
	"dns",
	"dns/promises",
	"domain",
	"events",
	"fs",
	"fs/promises",
	"http",
	"http2",
	"https",
	"inspector",
	"inspector/promises",
	"module",
	"net",
	"os",
	"path",
	"path/posix",
	"path/win32",
	"perf_hooks",
	"process",
	"punycode",
	"querystring",
	"readline",
	"readline/promises",
	"repl",
	"stream",
	"stream/consumers",
	"stream/promises",
	"stream/web",
	"string_decoder",
	"sys",
	"test/mock_loader",
	"timers",
	"timers/promises",
	"tls",
	"trace_events",
	"tty",
	"url",
	"util",
	"util/types",
	"v8",
	"vm",
	"wasi",
	"worker_threads",
	"zlib"
], qb = new Set([
	"node:sea",
	"node:sqlite",
	"node:test",
	"node:test/reporters"
]);
new Set([
	...Fp,
	...Fp.map((e$4) => `node:${e$4}`),
	...qb
]);
function Fb() {
	let e$4, t$13, a$13, o$9, m$11;
	return {
		createBaseSourceFileNode: v$5,
		createBaseIdentifierNode: E$3,
		createBasePrivateIdentifierNode: C$3,
		createBaseTokenNode: c$3,
		createBaseNode: W$2
	};
	function v$5(h$3) {
		return new (m$11 || (m$11 = (At$2.getSourceFileConstructor())))(h$3, -1, -1);
	}
	function E$3(h$3) {
		return new (a$13 || (a$13 = (At$2.getIdentifierConstructor())))(h$3, -1, -1);
	}
	function C$3(h$3) {
		return new (o$9 || (o$9 = (At$2.getPrivateIdentifierConstructor())))(h$3, -1, -1);
	}
	function c$3(h$3) {
		return new (t$13 || (t$13 = (At$2.getTokenConstructor())))(h$3, -1, -1);
	}
	function W$2(h$3) {
		return new (e$4 || (e$4 = (At$2.getNodeConstructor())))(h$3, -1, -1);
	}
}
var zb = {
	getParenthesizeLeftSideOfBinaryForOperator: (e$4) => gt$1,
	getParenthesizeRightSideOfBinaryForOperator: (e$4) => gt$1,
	parenthesizeLeftSideOfBinary: (e$4, t$13) => t$13,
	parenthesizeRightSideOfBinary: (e$4, t$13, a$13) => a$13,
	parenthesizeExpressionOfComputedPropertyName: gt$1,
	parenthesizeConditionOfConditionalExpression: gt$1,
	parenthesizeBranchOfConditionalExpression: gt$1,
	parenthesizeExpressionOfExportDefault: gt$1,
	parenthesizeExpressionOfNew: (e$4) => Cr$1(e$4, Va$1),
	parenthesizeLeftSideOfAccess: (e$4) => Cr$1(e$4, Va$1),
	parenthesizeOperandOfPostfixUnary: (e$4) => Cr$1(e$4, Va$1),
	parenthesizeOperandOfPrefixUnary: (e$4) => Cr$1(e$4, o2),
	parenthesizeExpressionsOfCommaDelimitedList: (e$4) => Cr$1(e$4, yi$1),
	parenthesizeExpressionForDisallowedComma: gt$1,
	parenthesizeExpressionOfExpressionStatement: gt$1,
	parenthesizeConciseBodyOfArrowFunction: gt$1,
	parenthesizeCheckTypeOfConditionalType: gt$1,
	parenthesizeExtendsTypeOfConditionalType: gt$1,
	parenthesizeConstituentTypesOfUnionType: (e$4) => Cr$1(e$4, yi$1),
	parenthesizeConstituentTypeOfUnionType: gt$1,
	parenthesizeConstituentTypesOfIntersectionType: (e$4) => Cr$1(e$4, yi$1),
	parenthesizeConstituentTypeOfIntersectionType: gt$1,
	parenthesizeOperandOfTypeOperator: gt$1,
	parenthesizeOperandOfReadonlyTypeOperator: gt$1,
	parenthesizeNonArrayTypeOfPostfixType: gt$1,
	parenthesizeElementTypesOfTupleType: (e$4) => Cr$1(e$4, yi$1),
	parenthesizeElementTypeOfTupleType: gt$1,
	parenthesizeTypeOfOptionalType: gt$1,
	parenthesizeTypeArguments: (e$4) => e$4 && Cr$1(e$4, yi$1),
	parenthesizeLeadingTypeArgument: gt$1
}, sl = 0;
var Vb = [];
function wf(e$4, t$13) {
	let a$13 = e$4 & 8 ? gt$1 : Xb, o$9 = Ed(() => e$4 & 1 ? zb : createParenthesizerRules(ye$4)), m$11 = Ed(() => e$4 & 2 ? nullNodeConverters : createNodeConverters(ye$4)), v$5 = er$1((n$8) => (i$18, s$8) => fa$5(i$18, n$8, s$8)), E$3 = er$1((n$8) => (i$18) => Br$5(n$8, i$18)), C$3 = er$1((n$8) => (i$18) => ii$6(i$18, n$8)), c$3 = er$1((n$8) => () => Ko$5(n$8)), W$2 = er$1((n$8) => (i$18) => Ps$4(n$8, i$18)), h$3 = er$1((n$8) => (i$18, s$8) => Su$3(n$8, i$18, s$8)), y$7 = er$1((n$8) => (i$18, s$8) => Zo$3(n$8, i$18, s$8)), g$2 = er$1((n$8) => (i$18, s$8) => xu$4(n$8, i$18, s$8)), x$3 = er$1((n$8) => (i$18, s$8) => yc$2(n$8, i$18, s$8)), N$5 = er$1((n$8) => (i$18, s$8, l$10) => Mu$2(n$8, i$18, s$8, l$10)), te$5 = er$1((n$8) => (i$18, s$8, l$10) => gc$2(n$8, i$18, s$8, l$10)), ue$4 = er$1((n$8) => (i$18, s$8, l$10, f$3) => Lu$2(n$8, i$18, s$8, l$10, f$3)), ye$4 = {
		get parenthesizer() {
			return o$9();
		},
		get converters() {
			return m$11();
		},
		baseFactory: t$13,
		flags: e$4,
		createNodeArray: fe$4,
		createNumericLiteral: V$5,
		createBigIntLiteral: oe$6,
		createStringLiteral: dt$3,
		createStringLiteralFromNode: rr$5,
		createRegularExpressionLiteral: vn$4,
		createLiteralLikeNode: ir$5,
		createIdentifier: Ge$5,
		createTempVariable: ar$5,
		createLoopVariable: Or$5,
		createUniqueName: Mt$5,
		getGeneratedNameForNode: Fn$4,
		createPrivateIdentifier: Lt$6,
		createUniquePrivateName: Qe$4,
		getGeneratedPrivateNameForNode: zn$6,
		createToken: ct$4,
		createSuper: at$4,
		createThis: Ut$4,
		createNull: Jt$3,
		createTrue: lt$3,
		createFalse: sr$5,
		createModifier: mt$5,
		createModifiersFromModifierFlags: xn$3,
		createQualifiedName: yt$4,
		updateQualifiedName: ln$5,
		createComputedPropertyName: nt$4,
		updateComputedPropertyName: Bt$5,
		createTypeParameterDeclaration: an$5,
		updateTypeParameterDeclaration: _r$5,
		createParameterDeclaration: hr$4,
		updateParameterDeclaration: yr$4,
		createDecorator: Vn$5,
		updateDecorator: Wn$5,
		createPropertySignature: Mr$4,
		updatePropertySignature: Gn$6,
		createPropertyDeclaration: gr$4,
		updatePropertyDeclaration: J$4,
		createMethodSignature: _e$7,
		updateMethodSignature: me$5,
		createMethodDeclaration: Te$7,
		updateMethodDeclaration: Xe$4,
		createConstructorDeclaration: ut$4,
		updateConstructorDeclaration: Lr$5,
		createGetAccessorDeclaration: Jn$5,
		updateGetAccessorDeclaration: Yn$5,
		createSetAccessorDeclaration: R$6,
		updateSetAccessorDeclaration: Q$4,
		createCallSignature: xe$4,
		updateCallSignature: Se$5,
		createConstructSignature: we$3,
		updateConstructSignature: be$5,
		createIndexSignature: We$2,
		updateIndexSignature: et$5,
		createClassStaticBlockDeclaration: st$5,
		updateClassStaticBlockDeclaration: Pt$5,
		createTemplateLiteralTypeSpan: Ye$6,
		updateTemplateLiteralTypeSpan: Ee$4,
		createKeywordTypeNode: Sn$5,
		createTypePredicateNode: rt$5,
		updateTypePredicateNode: un$5,
		createTypeReferenceNode: ti$7,
		updateTypeReferenceNode: L$4,
		createFunctionTypeNode: qe$6,
		updateFunctionTypeNode: u$14,
		createConstructorTypeNode: Me$6,
		updateConstructorTypeNode: sn$4,
		createTypeQueryNode: Nt$6,
		updateTypeQueryNode: kt$6,
		createTypeLiteralNode: It$7,
		updateTypeLiteralNode: qt$5,
		createArrayTypeNode: Hn$4,
		updateArrayTypeNode: Ai$5,
		createTupleTypeNode: pn$5,
		updateTupleTypeNode: Y$6,
		createNamedTupleMember: pe$6,
		updateNamedTupleMember: ze$6,
		createOptionalTypeNode: ve$6,
		updateOptionalTypeNode: j$7,
		createRestTypeNode: ht$4,
		updateRestTypeNode: xt$4,
		createUnionTypeNode: Bl$3,
		updateUnionTypeNode: D_,
		createIntersectionTypeNode: Jr$6,
		updateIntersectionTypeNode: Le$6,
		createConditionalTypeNode: ft$4,
		updateConditionalTypeNode: ql$3,
		createInferTypeNode: Xn$5,
		updateInferTypeNode: Fl$3,
		createImportTypeNode: or$5,
		updateImportTypeNode: _a$4,
		createParenthesizedType: Qt$3,
		updateParenthesizedType: Ct$7,
		createThisTypeNode: P$5,
		createTypeOperatorNode: Gt$4,
		updateTypeOperatorNode: jr$5,
		createIndexedAccessTypeNode: cr$5,
		updateIndexedAccessTypeNode: es$3,
		createMappedTypeNode: St$5,
		updateMappedTypeNode: Rt$5,
		createLiteralTypeNode: ni$7,
		updateLiteralTypeNode: vr$4,
		createTemplateLiteralType: Wt$4,
		updateTemplateLiteralType: zl$3,
		createObjectBindingPattern: P_,
		updateObjectBindingPattern: Vl$2,
		createArrayBindingPattern: Rr$5,
		updateArrayBindingPattern: Wl$3,
		createBindingElement: oa$4,
		updateBindingElement: ri$7,
		createArrayLiteralExpression: ts$3,
		updateArrayLiteralExpression: N_,
		createObjectLiteralExpression: Ci$5,
		updateObjectLiteralExpression: Gl$3,
		createPropertyAccessExpression: e$4 & 4 ? (n$8, i$18) => setEmitFlags(lr$5(n$8, i$18), 262144) : lr$5,
		updatePropertyAccessExpression: Yl$3,
		createPropertyAccessChain: e$4 & 4 ? (n$8, i$18, s$8) => setEmitFlags(Di$3(n$8, i$18, s$8), 262144) : Di$3,
		updatePropertyAccessChain: ca$4,
		createElementAccessExpression: Pi$5,
		updateElementAccessExpression: Hl$3,
		createElementAccessChain: M_,
		updateElementAccessChain: ns$5,
		createCallExpression: Ni$4,
		updateCallExpression: la$4,
		createCallChain: rs$3,
		updateCallChain: J_,
		createNewExpression: wn$4,
		updateNewExpression: is$2,
		createTaggedTemplateExpression: ua$3,
		updateTaggedTemplateExpression: j_,
		createTypeAssertion: R_,
		updateTypeAssertion: U_,
		createParenthesizedExpression: as$2,
		updateParenthesizedExpression: B_,
		createFunctionExpression: ss$3,
		updateFunctionExpression: q_,
		createArrowFunction: _s$3,
		updateArrowFunction: F_,
		createDeleteExpression: z_,
		updateDeleteExpression: V_,
		createTypeOfExpression: pa$3,
		updateTypeOfExpression: dn$5,
		createVoidExpression: os$4,
		updateVoidExpression: ur$6,
		createAwaitExpression: W_,
		updateAwaitExpression: Ur$5,
		createPrefixUnaryExpression: Br$5,
		updatePrefixUnaryExpression: Xl$3,
		createPostfixUnaryExpression: ii$6,
		updatePostfixUnaryExpression: $l$3,
		createBinaryExpression: fa$5,
		updateBinaryExpression: Ql$3,
		createConditionalExpression: Y_,
		updateConditionalExpression: H_,
		createTemplateExpression: X_,
		updateTemplateExpression: $n$5,
		createTemplateHead: Q_,
		createTemplateMiddle: da$4,
		createTemplateTail: cs$2,
		createNoSubstitutionTemplateLiteral: Zl$3,
		createTemplateLiteralLikeNode: si$6,
		createYieldExpression: ls$3,
		updateYieldExpression: eu$4,
		createSpreadElement: K_,
		updateSpreadElement: tu$5,
		createClassExpression: Z_,
		updateClassExpression: us$2,
		createOmittedExpression: ps$3,
		createExpressionWithTypeArguments: eo$4,
		updateExpressionWithTypeArguments: to$4,
		createAsExpression: mn$5,
		updateAsExpression: ma$3,
		createNonNullExpression: no$5,
		updateNonNullExpression: ro$4,
		createSatisfiesExpression: fs$3,
		updateSatisfiesExpression: io$4,
		createNonNullChain: ds$2,
		updateNonNullChain: jn$5,
		createMetaProperty: ao$4,
		updateMetaProperty: ms$2,
		createTemplateSpan: Qn$5,
		updateTemplateSpan: ha$5,
		createSemicolonClassElement: so$4,
		createBlock: qr$4,
		updateBlock: nu$3,
		createVariableStatement: hs$3,
		updateVariableStatement: _o$2,
		createEmptyStatement: oo$4,
		createExpressionStatement: Oi$5,
		updateExpressionStatement: co$5,
		createIfStatement: lo$4,
		updateIfStatement: uo$4,
		createDoStatement: po$5,
		updateDoStatement: fo$2,
		createWhileStatement: mo$3,
		updateWhileStatement: ru$4,
		createForStatement: ho$3,
		updateForStatement: yo$3,
		createForInStatement: ys$2,
		updateForInStatement: iu$4,
		createForOfStatement: go$4,
		updateForOfStatement: au$3,
		createContinueStatement: bo$3,
		updateContinueStatement: su$3,
		createBreakStatement: gs$3,
		updateBreakStatement: vo$4,
		createReturnStatement: bs$4,
		updateReturnStatement: _u$4,
		createWithStatement: vs$2,
		updateWithStatement: To$3,
		createSwitchStatement: Ts$3,
		updateSwitchStatement: _i$5,
		createLabeledStatement: xo$2,
		updateLabeledStatement: So$4,
		createThrowStatement: wo$3,
		updateThrowStatement: ou$2,
		createTryStatement: ko$2,
		updateTryStatement: cu$3,
		createDebuggerStatement: Eo$4,
		createVariableDeclaration: ya$3,
		updateVariableDeclaration: Ao$2,
		createVariableDeclarationList: xs$3,
		updateVariableDeclarationList: lu$1,
		createFunctionDeclaration: Co$1,
		updateFunctionDeclaration: Ss$2,
		createClassDeclaration: Do$2,
		updateClassDeclaration: ga$3,
		createInterfaceDeclaration: Po$2,
		updateInterfaceDeclaration: No$3,
		createTypeAliasDeclaration: _t$5,
		updateTypeAliasDeclaration: Tr$4,
		createEnumDeclaration: ws$2,
		updateEnumDeclaration: xr$4,
		createModuleDeclaration: Io$4,
		updateModuleDeclaration: Et$5,
		createModuleBlock: Sr$5,
		updateModuleBlock: Ft$4,
		createCaseBlock: Oo$4,
		updateCaseBlock: pu$2,
		createNamespaceExportDeclaration: Mo$3,
		updateNamespaceExportDeclaration: Lo$2,
		createImportEqualsDeclaration: Jo$3,
		updateImportEqualsDeclaration: jo$3,
		createImportDeclaration: Ro$5,
		updateImportDeclaration: Uo$3,
		createImportClause: Bo$3,
		updateImportClause: qo$3,
		createAssertClause: ks$3,
		updateAssertClause: du$2,
		createAssertEntry: Mi$4,
		updateAssertEntry: Fo$2,
		createImportTypeAssertionContainer: Es$2,
		updateImportTypeAssertionContainer: zo$4,
		createImportAttributes: Vo$4,
		updateImportAttributes: As$2,
		createImportAttribute: Wo$4,
		updateImportAttribute: Go$3,
		createNamespaceImport: Yo$3,
		updateNamespaceImport: mu$4,
		createNamespaceExport: Ho$3,
		updateNamespaceExport: hu$3,
		createNamedImports: Xo$4,
		updateNamedImports: $o$3,
		createImportSpecifier: wr$4,
		updateImportSpecifier: yu$3,
		createExportAssignment: ba$4,
		updateExportAssignment: Li$4,
		createExportDeclaration: va$4,
		updateExportDeclaration: Qo$4,
		createNamedExports: Cs$2,
		updateNamedExports: gu$3,
		createExportSpecifier: Ta$3,
		updateExportSpecifier: bu$2,
		createMissingDeclaration: vu$3,
		createExternalModuleReference: Ds$2,
		updateExternalModuleReference: Tu$3,
		get createJSDocAllType() {
			return c$3(312);
		},
		get createJSDocUnknownType() {
			return c$3(313);
		},
		get createJSDocNonNullableType() {
			return y$7(315);
		},
		get updateJSDocNonNullableType() {
			return g$2(315);
		},
		get createJSDocNullableType() {
			return y$7(314);
		},
		get updateJSDocNullableType() {
			return g$2(314);
		},
		get createJSDocOptionalType() {
			return W$2(316);
		},
		get updateJSDocOptionalType() {
			return h$3(316);
		},
		get createJSDocVariadicType() {
			return W$2(318);
		},
		get updateJSDocVariadicType() {
			return h$3(318);
		},
		get createJSDocNamepathType() {
			return W$2(319);
		},
		get updateJSDocNamepathType() {
			return h$3(319);
		},
		createJSDocFunctionType: ec$4,
		updateJSDocFunctionType: wu$2,
		createJSDocTypeLiteral: tc$3,
		updateJSDocTypeLiteral: ku$3,
		createJSDocTypeExpression: nc$4,
		updateJSDocTypeExpression: Ns$1,
		createJSDocSignature: rc$3,
		updateJSDocSignature: Eu$2,
		createJSDocTemplateTag: Is$3,
		updateJSDocTemplateTag: ic$2,
		createJSDocTypedefTag: xa$5,
		updateJSDocTypedefTag: Au$4,
		createJSDocParameterTag: Os$2,
		updateJSDocParameterTag: Cu$2,
		createJSDocPropertyTag: ac$2,
		updateJSDocPropertyTag: sc$3,
		createJSDocCallbackTag: _c$2,
		updateJSDocCallbackTag: oc$2,
		createJSDocOverloadTag: cc$3,
		updateJSDocOverloadTag: Ms$3,
		createJSDocAugmentsTag: Ls$3,
		updateJSDocAugmentsTag: ji$5,
		createJSDocImplementsTag: lc$2,
		updateJSDocImplementsTag: Ou$4,
		createJSDocSeeTag: zr$5,
		updateJSDocSeeTag: Sa$4,
		createJSDocImportTag: Tc$2,
		updateJSDocImportTag: xc$3,
		createJSDocNameReference: uc$3,
		updateJSDocNameReference: Du$3,
		createJSDocMemberName: pc$3,
		updateJSDocMemberName: Pu$3,
		createJSDocLink: fc$2,
		updateJSDocLink: dc$3,
		createJSDocLinkCode: mc$2,
		updateJSDocLinkCode: Nu$3,
		createJSDocLinkPlain: hc$2,
		updateJSDocLinkPlain: Iu$2,
		get createJSDocTypeTag() {
			return te$5(344);
		},
		get updateJSDocTypeTag() {
			return ue$4(344);
		},
		get createJSDocReturnTag() {
			return te$5(342);
		},
		get updateJSDocReturnTag() {
			return ue$4(342);
		},
		get createJSDocThisTag() {
			return te$5(343);
		},
		get updateJSDocThisTag() {
			return ue$4(343);
		},
		get createJSDocAuthorTag() {
			return x$3(330);
		},
		get updateJSDocAuthorTag() {
			return N$5(330);
		},
		get createJSDocClassTag() {
			return x$3(332);
		},
		get updateJSDocClassTag() {
			return N$5(332);
		},
		get createJSDocPublicTag() {
			return x$3(333);
		},
		get updateJSDocPublicTag() {
			return N$5(333);
		},
		get createJSDocPrivateTag() {
			return x$3(334);
		},
		get updateJSDocPrivateTag() {
			return N$5(334);
		},
		get createJSDocProtectedTag() {
			return x$3(335);
		},
		get updateJSDocProtectedTag() {
			return N$5(335);
		},
		get createJSDocReadonlyTag() {
			return x$3(336);
		},
		get updateJSDocReadonlyTag() {
			return N$5(336);
		},
		get createJSDocOverrideTag() {
			return x$3(337);
		},
		get updateJSDocOverrideTag() {
			return N$5(337);
		},
		get createJSDocDeprecatedTag() {
			return x$3(331);
		},
		get updateJSDocDeprecatedTag() {
			return N$5(331);
		},
		get createJSDocThrowsTag() {
			return te$5(349);
		},
		get updateJSDocThrowsTag() {
			return ue$4(349);
		},
		get createJSDocSatisfiesTag() {
			return te$5(350);
		},
		get updateJSDocSatisfiesTag() {
			return ue$4(350);
		},
		createJSDocEnumTag: vc$2,
		updateJSDocEnumTag: Js$3,
		createJSDocUnknownTag: bc$2,
		updateJSDocUnknownTag: Ju$2,
		createJSDocText: js$4,
		updateJSDocText: ju$3,
		createJSDocComment: Ri$4,
		updateJSDocComment: Sc$1,
		createJsxElement: wc$2,
		updateJsxElement: Ru$3,
		createJsxSelfClosingElement: kc$3,
		updateJsxSelfClosingElement: Rs$3,
		createJsxOpeningElement: Us$6,
		updateJsxOpeningElement: Ec$2,
		createJsxClosingElement: wa$3,
		updateJsxClosingElement: Kt$4,
		createJsxFragment: Bs$4,
		createJsxText: ka$4,
		updateJsxText: Cc$1,
		createJsxOpeningFragment: Uu$2,
		createJsxJsxClosingFragment: Bu$3,
		updateJsxFragment: Ac$1,
		createJsxAttribute: Dc$1,
		updateJsxAttribute: Ea$4,
		createJsxAttributes: Pc$1,
		updateJsxAttributes: qu$4,
		createJsxSpreadAttribute: Nc$2,
		updateJsxSpreadAttribute: Fu$3,
		createJsxExpression: Aa$4,
		updateJsxExpression: Ui$4,
		createJsxNamespacedName: Ic$1,
		updateJsxNamespacedName: qs$3,
		createCaseClause: Fs$4,
		updateCaseClause: zu$4,
		createDefaultClause: oi$5,
		updateDefaultClause: Oc$2,
		createHeritageClause: Mc$1,
		updateHeritageClause: Vu$2,
		createCatchClause: zs$4,
		updateCatchClause: Lc$1,
		createPropertyAssignment: Ca$3,
		updatePropertyAssignment: Vr$4,
		createShorthandPropertyAssignment: Jc$2,
		updateShorthandPropertyAssignment: Gu$2,
		createSpreadAssignment: Vs$4,
		updateSpreadAssignment: jc$1,
		createEnumMember: En$5,
		updateEnumMember: Rc$1,
		createSourceFile: Hu$2,
		updateSourceFile: Qu$2,
		createRedirectedSourceFile: Uc$1,
		createBundle: Ws$4,
		updateBundle: Ku$2,
		createSyntheticExpression: Zu$3,
		createSyntaxList: Pa$3,
		createNotEmittedStatement: qc$1,
		createNotEmittedTypeElement: ep$1,
		createPartiallyEmittedExpression: Fc$1,
		updatePartiallyEmittedExpression: zc$2,
		createCommaListExpression: Gs$4,
		updateCommaListExpression: Vc$1,
		createSyntheticReferenceExpression: Ys$3,
		updateSyntheticReferenceExpression: Wc$2,
		cloneNode: Hs$4,
		get createComma() {
			return v$5(28);
		},
		get createAssignment() {
			return v$5(64);
		},
		get createLogicalOr() {
			return v$5(57);
		},
		get createLogicalAnd() {
			return v$5(56);
		},
		get createBitwiseOr() {
			return v$5(52);
		},
		get createBitwiseXor() {
			return v$5(53);
		},
		get createBitwiseAnd() {
			return v$5(51);
		},
		get createStrictEquality() {
			return v$5(37);
		},
		get createStrictInequality() {
			return v$5(38);
		},
		get createEquality() {
			return v$5(35);
		},
		get createInequality() {
			return v$5(36);
		},
		get createLessThan() {
			return v$5(30);
		},
		get createLessThanEquals() {
			return v$5(33);
		},
		get createGreaterThan() {
			return v$5(32);
		},
		get createGreaterThanEquals() {
			return v$5(34);
		},
		get createLeftShift() {
			return v$5(48);
		},
		get createRightShift() {
			return v$5(49);
		},
		get createUnsignedRightShift() {
			return v$5(50);
		},
		get createAdd() {
			return v$5(40);
		},
		get createSubtract() {
			return v$5(41);
		},
		get createMultiply() {
			return v$5(42);
		},
		get createDivide() {
			return v$5(44);
		},
		get createModulo() {
			return v$5(45);
		},
		get createExponent() {
			return v$5(43);
		},
		get createPrefixPlus() {
			return E$3(40);
		},
		get createPrefixMinus() {
			return E$3(41);
		},
		get createPrefixIncrement() {
			return E$3(46);
		},
		get createPrefixDecrement() {
			return E$3(47);
		},
		get createBitwiseNot() {
			return E$3(55);
		},
		get createLogicalNot() {
			return E$3(54);
		},
		get createPostfixIncrement() {
			return C$3(46);
		},
		get createPostfixDecrement() {
			return C$3(47);
		},
		createImmediatelyInvokedFunctionExpression: ip$1,
		createImmediatelyInvokedArrowFunction: ap$1,
		createVoidZero: ci$6,
		createExportDefault: Hc$1,
		createExternalModuleExport: sp$1,
		createTypeCheck: Xs$5,
		createIsNotTypeCheck: _p$2,
		createMethodCall: Wr$6,
		createGlobalMethodCall: Bi$4,
		createFunctionBindCall: op$1,
		createFunctionCallCall: cp$2,
		createFunctionApplyCall: lp$1,
		createArraySliceCall: qi$3,
		createArrayConcatCall: up$1,
		createObjectDefinePropertyCall: $s$2,
		createObjectGetOwnPropertyDescriptorCall: li$6,
		createReflectGetCall: Xc$1,
		createReflectSetCall: pp$1,
		createPropertyDescriptor: $c$2,
		createCallBinding: Kc$2,
		createAssignmentTargetWrapper: _$2,
		inlineExpressions: p$2,
		getInternalName: b$7,
		getLocalName: w$3,
		getExportName: I$2,
		getDeclarationName: $$4,
		getNamespaceMemberName: se$3,
		getExternalModuleOrNamespaceExportName: Z$4,
		restoreOuterExpressions: Qc$1,
		restoreEnclosingLabel: Qs$3,
		createUseStrictPrologue: je$4,
		copyPrologue: ee$4,
		copyStandardPrologue: Re$7,
		copyCustomPrologue: Ae$5,
		ensureUseStrict: Yt$4,
		liftToBlock: hn$5,
		mergeLexicalEnvironment: pr$4,
		replaceModifiers: Rn$4,
		replaceDecoratorsAndModifiers: Gr$6,
		replacePropertyName: mp$1
	};
	return qn$1(Vb, (n$8) => n$8(ye$4)), ye$4;
	function fe$4(n$8, i$18) {
		if (n$8 === void 0 || n$8 === bt$2) n$8 = [];
		else if (yi$1(n$8)) {
			if (i$18 === void 0 || n$8.hasTrailingComma === i$18) return n$8.transformFlags === void 0 && Qd(n$8), B$2.attachNodeArrayDebugInfo(n$8), n$8;
			let f$3 = n$8.slice();
			return f$3.pos = n$8.pos, f$3.end = n$8.end, f$3.hasTrailingComma = i$18, f$3.transformFlags = n$8.transformFlags, B$2.attachNodeArrayDebugInfo(f$3), f$3;
		}
		let s$8 = n$8.length, l$10 = s$8 >= 1 && s$8 <= 4 ? n$8.slice() : n$8;
		return l$10.pos = -1, l$10.end = -1, l$10.hasTrailingComma = !!i$18, l$10.transformFlags = 0, Qd(l$10), B$2.attachNodeArrayDebugInfo(l$10), l$10;
	}
	function M$2(n$8) {
		return t$13.createBaseNode(n$8);
	}
	function ie$6(n$8) {
		let i$18 = M$2(n$8);
		return i$18.symbol = void 0, i$18.localSymbol = void 0, i$18;
	}
	function Ce$6(n$8, i$18) {
		return n$8 !== i$18 && (n$8.typeArguments = i$18.typeArguments), q$3(n$8, i$18);
	}
	function V$5(n$8, i$18 = 0) {
		let s$8 = typeof n$8 == "number" ? n$8 + "" : n$8;
		B$2.assert(s$8.charCodeAt(0) !== 45, "Negative numbers should be created in combination with createPrefixUnaryExpression");
		let l$10 = ie$6(9);
		return l$10.text = s$8, l$10.numericLiteralFlags = i$18, i$18 & 384 && (l$10.transformFlags |= 1024), l$10;
	}
	function oe$6(n$8) {
		let i$18 = $t$4(10);
		return i$18.text = typeof n$8 == "string" ? n$8 : Lb(n$8) + "n", i$18.transformFlags |= 32, i$18;
	}
	function G$6(n$8, i$18) {
		let s$8 = ie$6(11);
		return s$8.text = n$8, s$8.singleQuote = i$18, s$8;
	}
	function dt$3(n$8, i$18, s$8) {
		let l$10 = G$6(n$8, i$18);
		return l$10.hasExtendedUnicodeEscape = s$8, s$8 && (l$10.transformFlags |= 1024), l$10;
	}
	function rr$5(n$8) {
		let i$18 = G$6(Q2(n$8), void 0);
		return i$18.textSourceNode = n$8, i$18;
	}
	function vn$4(n$8) {
		let i$18 = $t$4(14);
		return i$18.text = n$8, i$18;
	}
	function ir$5(n$8, i$18) {
		switch (n$8) {
			case 9: return V$5(i$18, 0);
			case 10: return oe$6(i$18);
			case 11: return dt$3(i$18, void 0);
			case 12: return ka$4(i$18, !1);
			case 13: return ka$4(i$18, !0);
			case 14: return vn$4(i$18);
			case 15: return si$6(n$8, i$18, void 0, 0);
		}
	}
	function Tn$5(n$8) {
		let i$18 = t$13.createBaseIdentifierNode(80);
		return i$18.escapedText = n$8, i$18.jsDoc = void 0, i$18.flowNode = void 0, i$18.symbol = void 0, i$18;
	}
	function Mn$4(n$8, i$18, s$8, l$10) {
		let f$3 = Tn$5(ja$1(n$8));
		return setIdentifierAutoGenerate(f$3, {
			flags: i$18,
			id: sl,
			prefix: s$8,
			suffix: l$10
		}), sl++, f$3;
	}
	function Ge$5(n$8, i$18, s$8) {
		i$18 === void 0 && n$8 && (i$18 = Gm(n$8)), i$18 === 80 && (i$18 = void 0);
		let l$10 = Tn$5(ja$1(n$8));
		return s$8 && (l$10.flags |= 256), l$10.escapedText === "await" && (l$10.transformFlags |= 67108864), l$10.flags & 256 && (l$10.transformFlags |= 1024), l$10;
	}
	function ar$5(n$8, i$18, s$8, l$10) {
		let f$3 = 1;
		i$18 && (f$3 |= 8);
		let S$4 = Mn$4("", f$3, s$8, l$10);
		return n$8 && n$8(S$4), S$4;
	}
	function Or$5(n$8) {
		let i$18 = 2;
		return n$8 && (i$18 |= 8), Mn$4("", i$18, void 0, void 0);
	}
	function Mt$5(n$8, i$18 = 0, s$8, l$10) {
		return B$2.assert(!(i$18 & 7), "Argument out of range: flags"), B$2.assert((i$18 & 48) !== 32, "GeneratedIdentifierFlags.FileLevel cannot be set without also setting GeneratedIdentifierFlags.Optimistic"), Mn$4(n$8, 3 | i$18, s$8, l$10);
	}
	function Fn$4(n$8, i$18 = 0, s$8, l$10) {
		B$2.assert(!(i$18 & 7), "Argument out of range: flags");
		let f$3 = n$8 ? Rp(n$8) ? Wp(!1, s$8, n$8, l$10, In$1) : `generated@${getNodeId(n$8)}` : "";
		(s$8 || l$10) && (i$18 |= 16);
		let S$4 = Mn$4(f$3, 4 | i$18, s$8, l$10);
		return S$4.original = n$8, S$4;
	}
	function Ln$5(n$8) {
		let i$18 = t$13.createBasePrivateIdentifierNode(81);
		return i$18.escapedText = n$8, i$18.transformFlags |= 16777216, i$18;
	}
	function Lt$6(n$8) {
		return dl(n$8, "#") || B$2.fail("First character of private identifier must be #: " + n$8), Ln$5(ja$1(n$8));
	}
	function vt$6(n$8, i$18, s$8, l$10) {
		let f$3 = Ln$5(ja$1(n$8));
		return setIdentifierAutoGenerate(f$3, {
			flags: i$18,
			id: sl,
			prefix: s$8,
			suffix: l$10
		}), sl++, f$3;
	}
	function Qe$4(n$8, i$18, s$8) {
		n$8 && !dl(n$8, "#") && B$2.fail("First character of private identifier must be #: " + n$8);
		return vt$6(n$8 ?? "", 8 | (n$8 ? 3 : 1), i$18, s$8);
	}
	function zn$6(n$8, i$18, s$8) {
		let l$10 = Rp(n$8) ? Wp(!0, i$18, n$8, s$8, In$1) : `#generated@${getNodeId(n$8)}`, S$4 = vt$6(l$10, 4 | (i$18 || s$8 ? 16 : 0), i$18, s$8);
		return S$4.original = n$8, S$4;
	}
	function $t$4(n$8) {
		return t$13.createBaseTokenNode(n$8);
	}
	function ct$4(n$8) {
		B$2.assert(n$8 >= 0 && n$8 <= 165, "Invalid token"), B$2.assert(n$8 <= 15 || n$8 >= 18, "Invalid token. Use 'createTemplateLiteralLikeNode' to create template literals."), B$2.assert(n$8 <= 9 || n$8 >= 15, "Invalid token. Use 'createLiteralLikeNode' to create literals."), B$2.assert(n$8 !== 80, "Invalid token. Use 'createIdentifier' to create identifiers");
		let i$18 = $t$4(n$8), s$8 = 0;
		switch (n$8) {
			case 134:
				s$8 = 384;
				break;
			case 160:
				s$8 = 4;
				break;
			case 125:
			case 123:
			case 124:
			case 148:
			case 128:
			case 138:
			case 87:
			case 133:
			case 150:
			case 163:
			case 146:
			case 151:
			case 103:
			case 147:
			case 164:
			case 154:
			case 136:
			case 155:
			case 116:
			case 159:
			case 157:
				s$8 = 1;
				break;
			case 108:
				s$8 = 134218752, i$18.flowNode = void 0;
				break;
			case 126:
				s$8 = 1024;
				break;
			case 129:
				s$8 = 16777216;
				break;
			case 110:
				s$8 = 16384, i$18.flowNode = void 0;
				break;
		}
		return s$8 && (i$18.transformFlags |= s$8), i$18;
	}
	function at$4() {
		return ct$4(108);
	}
	function Ut$4() {
		return ct$4(110);
	}
	function Jt$3() {
		return ct$4(106);
	}
	function lt$3() {
		return ct$4(112);
	}
	function sr$5() {
		return ct$4(97);
	}
	function mt$5(n$8) {
		return ct$4(n$8);
	}
	function xn$3(n$8) {
		let i$18 = [];
		return n$8 & 32 && i$18.push(mt$5(95)), n$8 & 128 && i$18.push(mt$5(138)), n$8 & 2048 && i$18.push(mt$5(90)), n$8 & 4096 && i$18.push(mt$5(87)), n$8 & 1 && i$18.push(mt$5(125)), n$8 & 2 && i$18.push(mt$5(123)), n$8 & 4 && i$18.push(mt$5(124)), n$8 & 64 && i$18.push(mt$5(128)), n$8 & 256 && i$18.push(mt$5(126)), n$8 & 16 && i$18.push(mt$5(164)), n$8 & 8 && i$18.push(mt$5(148)), n$8 & 512 && i$18.push(mt$5(129)), n$8 & 1024 && i$18.push(mt$5(134)), n$8 & 8192 && i$18.push(mt$5(103)), n$8 & 16384 && i$18.push(mt$5(147)), i$18.length ? i$18 : void 0;
	}
	function yt$4(n$8, i$18) {
		let s$8 = M$2(166);
		return s$8.left = n$8, s$8.right = tt$5(i$18), s$8.transformFlags |= F$2(s$8.left) | Ua$1(s$8.right), s$8.flowNode = void 0, s$8;
	}
	function ln$5(n$8, i$18, s$8) {
		return n$8.left !== i$18 || n$8.right !== s$8 ? q$3(yt$4(i$18, s$8), n$8) : n$8;
	}
	function nt$4(n$8) {
		let i$18 = M$2(167);
		return i$18.expression = o$9().parenthesizeExpressionOfComputedPropertyName(n$8), i$18.transformFlags |= F$2(i$18.expression) | 132096, i$18;
	}
	function Bt$5(n$8, i$18) {
		return n$8.expression !== i$18 ? q$3(nt$4(i$18), n$8) : n$8;
	}
	function an$5(n$8, i$18, s$8, l$10) {
		let f$3 = ie$6(168);
		return f$3.modifiers = Pe$6(n$8), f$3.name = tt$5(i$18), f$3.constraint = s$8, f$3.default = l$10, f$3.transformFlags = 1, f$3.expression = void 0, f$3.jsDoc = void 0, f$3;
	}
	function _r$5(n$8, i$18, s$8, l$10, f$3) {
		return n$8.modifiers !== i$18 || n$8.name !== s$8 || n$8.constraint !== l$10 || n$8.default !== f$3 ? q$3(an$5(i$18, s$8, l$10, f$3), n$8) : n$8;
	}
	function hr$4(n$8, i$18, s$8, l$10, f$3, S$4) {
		let z$5 = ie$6(169);
		return z$5.modifiers = Pe$6(n$8), z$5.dotDotDotToken = i$18, z$5.name = tt$5(s$8), z$5.questionToken = l$10, z$5.type = f$3, z$5.initializer = Na$4(S$4), Z2(z$5.name) ? z$5.transformFlags = 1 : z$5.transformFlags = ke$2(z$5.modifiers) | F$2(z$5.dotDotDotToken) | Un$1(z$5.name) | F$2(z$5.questionToken) | F$2(z$5.initializer) | (z$5.questionToken ?? z$5.type ? 1 : 0) | (z$5.dotDotDotToken ?? z$5.initializer ? 1024 : 0) | (Bn$1(z$5.modifiers) & 31 ? 8192 : 0), z$5.jsDoc = void 0, z$5;
	}
	function yr$4(n$8, i$18, s$8, l$10, f$3, S$4, z$5) {
		return n$8.modifiers !== i$18 || n$8.dotDotDotToken !== s$8 || n$8.name !== l$10 || n$8.questionToken !== f$3 || n$8.type !== S$4 || n$8.initializer !== z$5 ? q$3(hr$4(i$18, s$8, l$10, f$3, S$4, z$5), n$8) : n$8;
	}
	function Vn$5(n$8) {
		let i$18 = M$2(170);
		return i$18.expression = o$9().parenthesizeLeftSideOfAccess(n$8, !1), i$18.transformFlags |= F$2(i$18.expression) | 33562625, i$18;
	}
	function Wn$5(n$8, i$18) {
		return n$8.expression !== i$18 ? q$3(Vn$5(i$18), n$8) : n$8;
	}
	function Mr$4(n$8, i$18, s$8, l$10) {
		let f$3 = ie$6(171);
		return f$3.modifiers = Pe$6(n$8), f$3.name = tt$5(i$18), f$3.type = l$10, f$3.questionToken = s$8, f$3.transformFlags = 1, f$3.initializer = void 0, f$3.jsDoc = void 0, f$3;
	}
	function Gn$6(n$8, i$18, s$8, l$10, f$3) {
		return n$8.modifiers !== i$18 || n$8.name !== s$8 || n$8.questionToken !== l$10 || n$8.type !== f$3 ? De$7(Mr$4(i$18, s$8, l$10, f$3), n$8) : n$8;
	}
	function De$7(n$8, i$18) {
		return n$8 !== i$18 && (n$8.initializer = i$18.initializer), q$3(n$8, i$18);
	}
	function gr$4(n$8, i$18, s$8, l$10, f$3) {
		let S$4 = ie$6(172);
		S$4.modifiers = Pe$6(n$8), S$4.name = tt$5(i$18), S$4.questionToken = s$8 && Zd(s$8) ? s$8 : void 0, S$4.exclamationToken = s$8 && Kd(s$8) ? s$8 : void 0, S$4.type = l$10, S$4.initializer = Na$4(f$3);
		let z$5 = S$4.flags & 33554432 || Bn$1(S$4.modifiers) & 128;
		return S$4.transformFlags = ke$2(S$4.modifiers) | Un$1(S$4.name) | F$2(S$4.initializer) | (z$5 || S$4.questionToken || S$4.exclamationToken || S$4.type ? 1 : 0) | (kf(S$4.name) || Bn$1(S$4.modifiers) & 256 && S$4.initializer ? 8192 : 0) | 16777216, S$4.jsDoc = void 0, S$4;
	}
	function J$4(n$8, i$18, s$8, l$10, f$3, S$4) {
		return n$8.modifiers !== i$18 || n$8.name !== s$8 || n$8.questionToken !== (l$10 !== void 0 && Zd(l$10) ? l$10 : void 0) || n$8.exclamationToken !== (l$10 !== void 0 && Kd(l$10) ? l$10 : void 0) || n$8.type !== f$3 || n$8.initializer !== S$4 ? q$3(gr$4(i$18, s$8, l$10, f$3, S$4), n$8) : n$8;
	}
	function _e$7(n$8, i$18, s$8, l$10, f$3, S$4) {
		let z$5 = ie$6(173);
		return z$5.modifiers = Pe$6(n$8), z$5.name = tt$5(i$18), z$5.questionToken = s$8, z$5.typeParameters = Pe$6(l$10), z$5.parameters = Pe$6(f$3), z$5.type = S$4, z$5.transformFlags = 1, z$5.jsDoc = void 0, z$5.locals = void 0, z$5.nextContainer = void 0, z$5.typeArguments = void 0, z$5;
	}
	function me$5(n$8, i$18, s$8, l$10, f$3, S$4, z$5) {
		return n$8.modifiers !== i$18 || n$8.name !== s$8 || n$8.questionToken !== l$10 || n$8.typeParameters !== f$3 || n$8.parameters !== S$4 || n$8.type !== z$5 ? Ce$6(_e$7(i$18, s$8, l$10, f$3, S$4, z$5), n$8) : n$8;
	}
	function Te$7(n$8, i$18, s$8, l$10, f$3, S$4, z$5, de$6) {
		let Ue$5 = ie$6(174);
		if (Ue$5.modifiers = Pe$6(n$8), Ue$5.asteriskToken = i$18, Ue$5.name = tt$5(s$8), Ue$5.questionToken = l$10, Ue$5.exclamationToken = void 0, Ue$5.typeParameters = Pe$6(f$3), Ue$5.parameters = fe$4(S$4), Ue$5.type = z$5, Ue$5.body = de$6, !Ue$5.body) Ue$5.transformFlags = 1;
		else {
			let en$6 = Bn$1(Ue$5.modifiers) & 1024, An$5 = !!Ue$5.asteriskToken, Kn$5 = en$6 && An$5;
			Ue$5.transformFlags = ke$2(Ue$5.modifiers) | F$2(Ue$5.asteriskToken) | Un$1(Ue$5.name) | F$2(Ue$5.questionToken) | ke$2(Ue$5.typeParameters) | ke$2(Ue$5.parameters) | F$2(Ue$5.type) | F$2(Ue$5.body) & -67108865 | (Kn$5 ? 128 : en$6 ? 256 : An$5 ? 2048 : 0) | (Ue$5.questionToken || Ue$5.typeParameters || Ue$5.type ? 1 : 0) | 1024;
		}
		return Ue$5.typeArguments = void 0, Ue$5.jsDoc = void 0, Ue$5.locals = void 0, Ue$5.nextContainer = void 0, Ue$5.flowNode = void 0, Ue$5.endFlowNode = void 0, Ue$5.returnFlowNode = void 0, Ue$5;
	}
	function Xe$4(n$8, i$18, s$8, l$10, f$3, S$4, z$5, de$6, Ue$5) {
		return n$8.modifiers !== i$18 || n$8.asteriskToken !== s$8 || n$8.name !== l$10 || n$8.questionToken !== f$3 || n$8.typeParameters !== S$4 || n$8.parameters !== z$5 || n$8.type !== de$6 || n$8.body !== Ue$5 ? Ke$4(Te$7(i$18, s$8, l$10, f$3, S$4, z$5, de$6, Ue$5), n$8) : n$8;
	}
	function Ke$4(n$8, i$18) {
		return n$8 !== i$18 && (n$8.exclamationToken = i$18.exclamationToken), q$3(n$8, i$18);
	}
	function st$5(n$8) {
		let i$18 = ie$6(175);
		return i$18.body = n$8, i$18.transformFlags = F$2(n$8) | 16777216, i$18.modifiers = void 0, i$18.jsDoc = void 0, i$18.locals = void 0, i$18.nextContainer = void 0, i$18.endFlowNode = void 0, i$18.returnFlowNode = void 0, i$18;
	}
	function Pt$5(n$8, i$18) {
		return n$8.body !== i$18 ? Tt$7(st$5(i$18), n$8) : n$8;
	}
	function Tt$7(n$8, i$18) {
		return n$8 !== i$18 && (n$8.modifiers = i$18.modifiers), q$3(n$8, i$18);
	}
	function ut$4(n$8, i$18, s$8) {
		let l$10 = ie$6(176);
		return l$10.modifiers = Pe$6(n$8), l$10.parameters = fe$4(i$18), l$10.body = s$8, l$10.body ? l$10.transformFlags = ke$2(l$10.modifiers) | ke$2(l$10.parameters) | F$2(l$10.body) & -67108865 | 1024 : l$10.transformFlags = 1, l$10.typeParameters = void 0, l$10.type = void 0, l$10.typeArguments = void 0, l$10.jsDoc = void 0, l$10.locals = void 0, l$10.nextContainer = void 0, l$10.endFlowNode = void 0, l$10.returnFlowNode = void 0, l$10;
	}
	function Lr$5(n$8, i$18, s$8, l$10) {
		return n$8.modifiers !== i$18 || n$8.parameters !== s$8 || n$8.body !== l$10 ? br$4(ut$4(i$18, s$8, l$10), n$8) : n$8;
	}
	function br$4(n$8, i$18) {
		return n$8 !== i$18 && (n$8.typeParameters = i$18.typeParameters, n$8.type = i$18.type), Ce$6(n$8, i$18);
	}
	function Jn$5(n$8, i$18, s$8, l$10, f$3) {
		let S$4 = ie$6(177);
		return S$4.modifiers = Pe$6(n$8), S$4.name = tt$5(i$18), S$4.parameters = fe$4(s$8), S$4.type = l$10, S$4.body = f$3, S$4.body ? S$4.transformFlags = ke$2(S$4.modifiers) | Un$1(S$4.name) | ke$2(S$4.parameters) | F$2(S$4.type) | F$2(S$4.body) & -67108865 | (S$4.type ? 1 : 0) : S$4.transformFlags = 1, S$4.typeArguments = void 0, S$4.typeParameters = void 0, S$4.jsDoc = void 0, S$4.locals = void 0, S$4.nextContainer = void 0, S$4.flowNode = void 0, S$4.endFlowNode = void 0, S$4.returnFlowNode = void 0, S$4;
	}
	function Yn$5(n$8, i$18, s$8, l$10, f$3, S$4) {
		return n$8.modifiers !== i$18 || n$8.name !== s$8 || n$8.parameters !== l$10 || n$8.type !== f$3 || n$8.body !== S$4 ? Ei$5(Jn$5(i$18, s$8, l$10, f$3, S$4), n$8) : n$8;
	}
	function Ei$5(n$8, i$18) {
		return n$8 !== i$18 && (n$8.typeParameters = i$18.typeParameters), Ce$6(n$8, i$18);
	}
	function R$6(n$8, i$18, s$8, l$10) {
		let f$3 = ie$6(178);
		return f$3.modifiers = Pe$6(n$8), f$3.name = tt$5(i$18), f$3.parameters = fe$4(s$8), f$3.body = l$10, f$3.body ? f$3.transformFlags = ke$2(f$3.modifiers) | Un$1(f$3.name) | ke$2(f$3.parameters) | F$2(f$3.body) & -67108865 | (f$3.type ? 1 : 0) : f$3.transformFlags = 1, f$3.typeArguments = void 0, f$3.typeParameters = void 0, f$3.type = void 0, f$3.jsDoc = void 0, f$3.locals = void 0, f$3.nextContainer = void 0, f$3.flowNode = void 0, f$3.endFlowNode = void 0, f$3.returnFlowNode = void 0, f$3;
	}
	function Q$4(n$8, i$18, s$8, l$10, f$3) {
		return n$8.modifiers !== i$18 || n$8.name !== s$8 || n$8.parameters !== l$10 || n$8.body !== f$3 ? K$6(R$6(i$18, s$8, l$10, f$3), n$8) : n$8;
	}
	function K$6(n$8, i$18) {
		return n$8 !== i$18 && (n$8.typeParameters = i$18.typeParameters, n$8.type = i$18.type), Ce$6(n$8, i$18);
	}
	function xe$4(n$8, i$18, s$8) {
		let l$10 = ie$6(179);
		return l$10.typeParameters = Pe$6(n$8), l$10.parameters = Pe$6(i$18), l$10.type = s$8, l$10.transformFlags = 1, l$10.jsDoc = void 0, l$10.locals = void 0, l$10.nextContainer = void 0, l$10.typeArguments = void 0, l$10;
	}
	function Se$5(n$8, i$18, s$8, l$10) {
		return n$8.typeParameters !== i$18 || n$8.parameters !== s$8 || n$8.type !== l$10 ? Ce$6(xe$4(i$18, s$8, l$10), n$8) : n$8;
	}
	function we$3(n$8, i$18, s$8) {
		let l$10 = ie$6(180);
		return l$10.typeParameters = Pe$6(n$8), l$10.parameters = Pe$6(i$18), l$10.type = s$8, l$10.transformFlags = 1, l$10.jsDoc = void 0, l$10.locals = void 0, l$10.nextContainer = void 0, l$10.typeArguments = void 0, l$10;
	}
	function be$5(n$8, i$18, s$8, l$10) {
		return n$8.typeParameters !== i$18 || n$8.parameters !== s$8 || n$8.type !== l$10 ? Ce$6(we$3(i$18, s$8, l$10), n$8) : n$8;
	}
	function We$2(n$8, i$18, s$8) {
		let l$10 = ie$6(181);
		return l$10.modifiers = Pe$6(n$8), l$10.parameters = Pe$6(i$18), l$10.type = s$8, l$10.transformFlags = 1, l$10.jsDoc = void 0, l$10.locals = void 0, l$10.nextContainer = void 0, l$10.typeArguments = void 0, l$10;
	}
	function et$5(n$8, i$18, s$8, l$10) {
		return n$8.parameters !== s$8 || n$8.type !== l$10 || n$8.modifiers !== i$18 ? Ce$6(We$2(i$18, s$8, l$10), n$8) : n$8;
	}
	function Ye$6(n$8, i$18) {
		let s$8 = M$2(204);
		return s$8.type = n$8, s$8.literal = i$18, s$8.transformFlags = 1, s$8;
	}
	function Ee$4(n$8, i$18, s$8) {
		return n$8.type !== i$18 || n$8.literal !== s$8 ? q$3(Ye$6(i$18, s$8), n$8) : n$8;
	}
	function Sn$5(n$8) {
		return ct$4(n$8);
	}
	function rt$5(n$8, i$18, s$8) {
		let l$10 = M$2(182);
		return l$10.assertsModifier = n$8, l$10.parameterName = tt$5(i$18), l$10.type = s$8, l$10.transformFlags = 1, l$10;
	}
	function un$5(n$8, i$18, s$8, l$10) {
		return n$8.assertsModifier !== i$18 || n$8.parameterName !== s$8 || n$8.type !== l$10 ? q$3(rt$5(i$18, s$8, l$10), n$8) : n$8;
	}
	function ti$7(n$8, i$18) {
		let s$8 = M$2(183);
		return s$8.typeName = tt$5(n$8), s$8.typeArguments = i$18 && o$9().parenthesizeTypeArguments(fe$4(i$18)), s$8.transformFlags = 1, s$8;
	}
	function L$4(n$8, i$18, s$8) {
		return n$8.typeName !== i$18 || n$8.typeArguments !== s$8 ? q$3(ti$7(i$18, s$8), n$8) : n$8;
	}
	function qe$6(n$8, i$18, s$8) {
		let l$10 = ie$6(184);
		return l$10.typeParameters = Pe$6(n$8), l$10.parameters = Pe$6(i$18), l$10.type = s$8, l$10.transformFlags = 1, l$10.modifiers = void 0, l$10.jsDoc = void 0, l$10.locals = void 0, l$10.nextContainer = void 0, l$10.typeArguments = void 0, l$10;
	}
	function u$14(n$8, i$18, s$8, l$10) {
		return n$8.typeParameters !== i$18 || n$8.parameters !== s$8 || n$8.type !== l$10 ? Oe$6(qe$6(i$18, s$8, l$10), n$8) : n$8;
	}
	function Oe$6(n$8, i$18) {
		return n$8 !== i$18 && (n$8.modifiers = i$18.modifiers), Ce$6(n$8, i$18);
	}
	function Me$6(...n$8) {
		return n$8.length === 4 ? U$4(...n$8) : n$8.length === 3 ? Fe$4(...n$8) : B$2.fail("Incorrect number of arguments specified.");
	}
	function U$4(n$8, i$18, s$8, l$10) {
		let f$3 = ie$6(185);
		return f$3.modifiers = Pe$6(n$8), f$3.typeParameters = Pe$6(i$18), f$3.parameters = Pe$6(s$8), f$3.type = l$10, f$3.transformFlags = 1, f$3.jsDoc = void 0, f$3.locals = void 0, f$3.nextContainer = void 0, f$3.typeArguments = void 0, f$3;
	}
	function Fe$4(n$8, i$18, s$8) {
		return U$4(void 0, n$8, i$18, s$8);
	}
	function sn$4(...n$8) {
		return n$8.length === 5 ? Ve$5(...n$8) : n$8.length === 4 ? $e$5(...n$8) : B$2.fail("Incorrect number of arguments specified.");
	}
	function Ve$5(n$8, i$18, s$8, l$10, f$3) {
		return n$8.modifiers !== i$18 || n$8.typeParameters !== s$8 || n$8.parameters !== l$10 || n$8.type !== f$3 ? Ce$6(Me$6(i$18, s$8, l$10, f$3), n$8) : n$8;
	}
	function $e$5(n$8, i$18, s$8, l$10) {
		return Ve$5(n$8, n$8.modifiers, i$18, s$8, l$10);
	}
	function Nt$6(n$8, i$18) {
		let s$8 = M$2(186);
		return s$8.exprName = n$8, s$8.typeArguments = i$18 && o$9().parenthesizeTypeArguments(i$18), s$8.transformFlags = 1, s$8;
	}
	function kt$6(n$8, i$18, s$8) {
		return n$8.exprName !== i$18 || n$8.typeArguments !== s$8 ? q$3(Nt$6(i$18, s$8), n$8) : n$8;
	}
	function It$7(n$8) {
		let i$18 = ie$6(187);
		return i$18.members = fe$4(n$8), i$18.transformFlags = 1, i$18;
	}
	function qt$5(n$8, i$18) {
		return n$8.members !== i$18 ? q$3(It$7(i$18), n$8) : n$8;
	}
	function Hn$4(n$8) {
		let i$18 = M$2(188);
		return i$18.elementType = o$9().parenthesizeNonArrayTypeOfPostfixType(n$8), i$18.transformFlags = 1, i$18;
	}
	function Ai$5(n$8, i$18) {
		return n$8.elementType !== i$18 ? q$3(Hn$4(i$18), n$8) : n$8;
	}
	function pn$5(n$8) {
		let i$18 = M$2(189);
		return i$18.elements = fe$4(o$9().parenthesizeElementTypesOfTupleType(n$8)), i$18.transformFlags = 1, i$18;
	}
	function Y$6(n$8, i$18) {
		return n$8.elements !== i$18 ? q$3(pn$5(i$18), n$8) : n$8;
	}
	function pe$6(n$8, i$18, s$8, l$10) {
		let f$3 = ie$6(202);
		return f$3.dotDotDotToken = n$8, f$3.name = i$18, f$3.questionToken = s$8, f$3.type = l$10, f$3.transformFlags = 1, f$3.jsDoc = void 0, f$3;
	}
	function ze$6(n$8, i$18, s$8, l$10, f$3) {
		return n$8.dotDotDotToken !== i$18 || n$8.name !== s$8 || n$8.questionToken !== l$10 || n$8.type !== f$3 ? q$3(pe$6(i$18, s$8, l$10, f$3), n$8) : n$8;
	}
	function ve$6(n$8) {
		let i$18 = M$2(190);
		return i$18.type = o$9().parenthesizeTypeOfOptionalType(n$8), i$18.transformFlags = 1, i$18;
	}
	function j$7(n$8, i$18) {
		return n$8.type !== i$18 ? q$3(ve$6(i$18), n$8) : n$8;
	}
	function ht$4(n$8) {
		let i$18 = M$2(191);
		return i$18.type = n$8, i$18.transformFlags = 1, i$18;
	}
	function xt$4(n$8, i$18) {
		return n$8.type !== i$18 ? q$3(ht$4(i$18), n$8) : n$8;
	}
	function jt$5(n$8, i$18, s$8) {
		let l$10 = M$2(n$8);
		return l$10.types = ye$4.createNodeArray(s$8(i$18)), l$10.transformFlags = 1, l$10;
	}
	function fn$6(n$8, i$18, s$8) {
		return n$8.types !== i$18 ? q$3(jt$5(n$8.kind, i$18, s$8), n$8) : n$8;
	}
	function Bl$3(n$8) {
		return jt$5(192, n$8, o$9().parenthesizeConstituentTypesOfUnionType);
	}
	function D_(n$8, i$18) {
		return fn$6(n$8, i$18, o$9().parenthesizeConstituentTypesOfUnionType);
	}
	function Jr$6(n$8) {
		return jt$5(193, n$8, o$9().parenthesizeConstituentTypesOfIntersectionType);
	}
	function Le$6(n$8, i$18) {
		return fn$6(n$8, i$18, o$9().parenthesizeConstituentTypesOfIntersectionType);
	}
	function ft$4(n$8, i$18, s$8, l$10) {
		let f$3 = M$2(194);
		return f$3.checkType = o$9().parenthesizeCheckTypeOfConditionalType(n$8), f$3.extendsType = o$9().parenthesizeExtendsTypeOfConditionalType(i$18), f$3.trueType = s$8, f$3.falseType = l$10, f$3.transformFlags = 1, f$3.locals = void 0, f$3.nextContainer = void 0, f$3;
	}
	function ql$3(n$8, i$18, s$8, l$10, f$3) {
		return n$8.checkType !== i$18 || n$8.extendsType !== s$8 || n$8.trueType !== l$10 || n$8.falseType !== f$3 ? q$3(ft$4(i$18, s$8, l$10, f$3), n$8) : n$8;
	}
	function Xn$5(n$8) {
		let i$18 = M$2(195);
		return i$18.typeParameter = n$8, i$18.transformFlags = 1, i$18;
	}
	function Fl$3(n$8, i$18) {
		return n$8.typeParameter !== i$18 ? q$3(Xn$5(i$18), n$8) : n$8;
	}
	function Wt$4(n$8, i$18) {
		let s$8 = M$2(203);
		return s$8.head = n$8, s$8.templateSpans = fe$4(i$18), s$8.transformFlags = 1, s$8;
	}
	function zl$3(n$8, i$18, s$8) {
		return n$8.head !== i$18 || n$8.templateSpans !== s$8 ? q$3(Wt$4(i$18, s$8), n$8) : n$8;
	}
	function or$5(n$8, i$18, s$8, l$10, f$3 = !1) {
		let S$4 = M$2(205);
		return S$4.argument = n$8, S$4.attributes = i$18, S$4.assertions && S$4.assertions.assertClause && S$4.attributes && (S$4.assertions.assertClause = S$4.attributes), S$4.qualifier = s$8, S$4.typeArguments = l$10 && o$9().parenthesizeTypeArguments(l$10), S$4.isTypeOf = f$3, S$4.transformFlags = 1, S$4;
	}
	function _a$4(n$8, i$18, s$8, l$10, f$3, S$4 = n$8.isTypeOf) {
		return n$8.argument !== i$18 || n$8.attributes !== s$8 || n$8.qualifier !== l$10 || n$8.typeArguments !== f$3 || n$8.isTypeOf !== S$4 ? q$3(or$5(i$18, s$8, l$10, f$3, S$4), n$8) : n$8;
	}
	function Qt$3(n$8) {
		let i$18 = M$2(196);
		return i$18.type = n$8, i$18.transformFlags = 1, i$18;
	}
	function Ct$7(n$8, i$18) {
		return n$8.type !== i$18 ? q$3(Qt$3(i$18), n$8) : n$8;
	}
	function P$5() {
		let n$8 = M$2(197);
		return n$8.transformFlags = 1, n$8;
	}
	function Gt$4(n$8, i$18) {
		let s$8 = M$2(198);
		return s$8.operator = n$8, s$8.type = n$8 === 148 ? o$9().parenthesizeOperandOfReadonlyTypeOperator(i$18) : o$9().parenthesizeOperandOfTypeOperator(i$18), s$8.transformFlags = 1, s$8;
	}
	function jr$5(n$8, i$18) {
		return n$8.type !== i$18 ? q$3(Gt$4(n$8.operator, i$18), n$8) : n$8;
	}
	function cr$5(n$8, i$18) {
		let s$8 = M$2(199);
		return s$8.objectType = o$9().parenthesizeNonArrayTypeOfPostfixType(n$8), s$8.indexType = i$18, s$8.transformFlags = 1, s$8;
	}
	function es$3(n$8, i$18, s$8) {
		return n$8.objectType !== i$18 || n$8.indexType !== s$8 ? q$3(cr$5(i$18, s$8), n$8) : n$8;
	}
	function St$5(n$8, i$18, s$8, l$10, f$3, S$4) {
		let z$5 = ie$6(200);
		return z$5.readonlyToken = n$8, z$5.typeParameter = i$18, z$5.nameType = s$8, z$5.questionToken = l$10, z$5.type = f$3, z$5.members = S$4 && fe$4(S$4), z$5.transformFlags = 1, z$5.locals = void 0, z$5.nextContainer = void 0, z$5;
	}
	function Rt$5(n$8, i$18, s$8, l$10, f$3, S$4, z$5) {
		return n$8.readonlyToken !== i$18 || n$8.typeParameter !== s$8 || n$8.nameType !== l$10 || n$8.questionToken !== f$3 || n$8.type !== S$4 || n$8.members !== z$5 ? q$3(St$5(i$18, s$8, l$10, f$3, S$4, z$5), n$8) : n$8;
	}
	function ni$7(n$8) {
		let i$18 = M$2(201);
		return i$18.literal = n$8, i$18.transformFlags = 1, i$18;
	}
	function vr$4(n$8, i$18) {
		return n$8.literal !== i$18 ? q$3(ni$7(i$18), n$8) : n$8;
	}
	function P_(n$8) {
		let i$18 = M$2(206);
		return i$18.elements = fe$4(n$8), i$18.transformFlags |= ke$2(i$18.elements) | 525312, i$18.transformFlags & 32768 && (i$18.transformFlags |= 65664), i$18;
	}
	function Vl$2(n$8, i$18) {
		return n$8.elements !== i$18 ? q$3(P_(i$18), n$8) : n$8;
	}
	function Rr$5(n$8) {
		let i$18 = M$2(207);
		return i$18.elements = fe$4(n$8), i$18.transformFlags |= ke$2(i$18.elements) | 525312, i$18;
	}
	function Wl$3(n$8, i$18) {
		return n$8.elements !== i$18 ? q$3(Rr$5(i$18), n$8) : n$8;
	}
	function oa$4(n$8, i$18, s$8, l$10) {
		let f$3 = ie$6(208);
		return f$3.dotDotDotToken = n$8, f$3.propertyName = tt$5(i$18), f$3.name = tt$5(s$8), f$3.initializer = Na$4(l$10), f$3.transformFlags |= F$2(f$3.dotDotDotToken) | Un$1(f$3.propertyName) | Un$1(f$3.name) | F$2(f$3.initializer) | (f$3.dotDotDotToken ? 32768 : 0) | 1024, f$3.flowNode = void 0, f$3;
	}
	function ri$7(n$8, i$18, s$8, l$10, f$3) {
		return n$8.propertyName !== s$8 || n$8.dotDotDotToken !== i$18 || n$8.name !== l$10 || n$8.initializer !== f$3 ? q$3(oa$4(i$18, s$8, l$10, f$3), n$8) : n$8;
	}
	function ts$3(n$8, i$18) {
		let s$8 = M$2(209), l$10 = n$8 && Fa$1(n$8), f$3 = fe$4(n$8, l$10 && Z1(l$10) ? !0 : void 0);
		return s$8.elements = o$9().parenthesizeExpressionsOfCommaDelimitedList(f$3), s$8.multiLine = i$18, s$8.transformFlags |= ke$2(s$8.elements), s$8;
	}
	function N_(n$8, i$18) {
		return n$8.elements !== i$18 ? q$3(ts$3(i$18, n$8.multiLine), n$8) : n$8;
	}
	function Ci$5(n$8, i$18) {
		let s$8 = ie$6(210);
		return s$8.properties = fe$4(n$8), s$8.multiLine = i$18, s$8.transformFlags |= ke$2(s$8.properties), s$8.jsDoc = void 0, s$8;
	}
	function Gl$3(n$8, i$18) {
		return n$8.properties !== i$18 ? q$3(Ci$5(i$18, n$8.multiLine), n$8) : n$8;
	}
	function I_(n$8, i$18, s$8) {
		let l$10 = ie$6(211);
		return l$10.expression = n$8, l$10.questionDotToken = i$18, l$10.name = s$8, l$10.transformFlags = F$2(l$10.expression) | F$2(l$10.questionDotToken) | (Ze$2(l$10.name) ? Ua$1(l$10.name) : F$2(l$10.name) | 536870912), l$10.jsDoc = void 0, l$10.flowNode = void 0, l$10;
	}
	function lr$5(n$8, i$18) {
		let s$8 = I_(o$9().parenthesizeLeftSideOfAccess(n$8, !1), void 0, tt$5(i$18));
		return Cp(n$8) && (s$8.transformFlags |= 384), s$8;
	}
	function Yl$3(n$8, i$18, s$8) {
		return Yg(n$8) ? ca$4(n$8, i$18, n$8.questionDotToken, Cr$1(s$8, Ze$2)) : n$8.expression !== i$18 || n$8.name !== s$8 ? q$3(lr$5(i$18, s$8), n$8) : n$8;
	}
	function Di$3(n$8, i$18, s$8) {
		let l$10 = I_(o$9().parenthesizeLeftSideOfAccess(n$8, !0), i$18, tt$5(s$8));
		return l$10.flags |= 64, l$10.transformFlags |= 32, l$10;
	}
	function ca$4(n$8, i$18, s$8, l$10) {
		return B$2.assert(!!(n$8.flags & 64), "Cannot update a PropertyAccessExpression using updatePropertyAccessChain. Use updatePropertyAccess instead."), n$8.expression !== i$18 || n$8.questionDotToken !== s$8 || n$8.name !== l$10 ? q$3(Di$3(i$18, s$8, l$10), n$8) : n$8;
	}
	function O_(n$8, i$18, s$8) {
		let l$10 = ie$6(212);
		return l$10.expression = n$8, l$10.questionDotToken = i$18, l$10.argumentExpression = s$8, l$10.transformFlags |= F$2(l$10.expression) | F$2(l$10.questionDotToken) | F$2(l$10.argumentExpression), l$10.jsDoc = void 0, l$10.flowNode = void 0, l$10;
	}
	function Pi$5(n$8, i$18) {
		let s$8 = O_(o$9().parenthesizeLeftSideOfAccess(n$8, !1), void 0, fr$5(i$18));
		return Cp(n$8) && (s$8.transformFlags |= 384), s$8;
	}
	function Hl$3(n$8, i$18, s$8) {
		return Hg(n$8) ? ns$5(n$8, i$18, n$8.questionDotToken, s$8) : n$8.expression !== i$18 || n$8.argumentExpression !== s$8 ? q$3(Pi$5(i$18, s$8), n$8) : n$8;
	}
	function M_(n$8, i$18, s$8) {
		let l$10 = O_(o$9().parenthesizeLeftSideOfAccess(n$8, !0), i$18, fr$5(s$8));
		return l$10.flags |= 64, l$10.transformFlags |= 32, l$10;
	}
	function ns$5(n$8, i$18, s$8, l$10) {
		return B$2.assert(!!(n$8.flags & 64), "Cannot update a ElementAccessExpression using updateElementAccessChain. Use updateElementAccess instead."), n$8.expression !== i$18 || n$8.questionDotToken !== s$8 || n$8.argumentExpression !== l$10 ? q$3(M_(i$18, s$8, l$10), n$8) : n$8;
	}
	function L_(n$8, i$18, s$8, l$10) {
		let f$3 = ie$6(213);
		return f$3.expression = n$8, f$3.questionDotToken = i$18, f$3.typeArguments = s$8, f$3.arguments = l$10, f$3.transformFlags |= F$2(f$3.expression) | F$2(f$3.questionDotToken) | ke$2(f$3.typeArguments) | ke$2(f$3.arguments), f$3.typeArguments && (f$3.transformFlags |= 1), Vd(f$3.expression) && (f$3.transformFlags |= 16384), f$3;
	}
	function Ni$4(n$8, i$18, s$8) {
		let l$10 = L_(o$9().parenthesizeLeftSideOfAccess(n$8, !1), void 0, Pe$6(i$18), o$9().parenthesizeExpressionsOfCommaDelimitedList(fe$4(s$8)));
		return e6(l$10.expression) && (l$10.transformFlags |= 8388608), l$10;
	}
	function la$4(n$8, i$18, s$8, l$10) {
		return jd(n$8) ? J_(n$8, i$18, n$8.questionDotToken, s$8, l$10) : n$8.expression !== i$18 || n$8.typeArguments !== s$8 || n$8.arguments !== l$10 ? q$3(Ni$4(i$18, s$8, l$10), n$8) : n$8;
	}
	function rs$3(n$8, i$18, s$8, l$10) {
		let f$3 = L_(o$9().parenthesizeLeftSideOfAccess(n$8, !0), i$18, Pe$6(s$8), o$9().parenthesizeExpressionsOfCommaDelimitedList(fe$4(l$10)));
		return f$3.flags |= 64, f$3.transformFlags |= 32, f$3;
	}
	function J_(n$8, i$18, s$8, l$10, f$3) {
		return B$2.assert(!!(n$8.flags & 64), "Cannot update a CallExpression using updateCallChain. Use updateCall instead."), n$8.expression !== i$18 || n$8.questionDotToken !== s$8 || n$8.typeArguments !== l$10 || n$8.arguments !== f$3 ? q$3(rs$3(i$18, s$8, l$10, f$3), n$8) : n$8;
	}
	function wn$4(n$8, i$18, s$8) {
		let l$10 = ie$6(214);
		return l$10.expression = o$9().parenthesizeExpressionOfNew(n$8), l$10.typeArguments = Pe$6(i$18), l$10.arguments = s$8 ? o$9().parenthesizeExpressionsOfCommaDelimitedList(s$8) : void 0, l$10.transformFlags |= F$2(l$10.expression) | ke$2(l$10.typeArguments) | ke$2(l$10.arguments) | 32, l$10.typeArguments && (l$10.transformFlags |= 1), l$10;
	}
	function is$2(n$8, i$18, s$8, l$10) {
		return n$8.expression !== i$18 || n$8.typeArguments !== s$8 || n$8.arguments !== l$10 ? q$3(wn$4(i$18, s$8, l$10), n$8) : n$8;
	}
	function ua$3(n$8, i$18, s$8) {
		let l$10 = M$2(215);
		return l$10.tag = o$9().parenthesizeLeftSideOfAccess(n$8, !1), l$10.typeArguments = Pe$6(i$18), l$10.template = s$8, l$10.transformFlags |= F$2(l$10.tag) | ke$2(l$10.typeArguments) | F$2(l$10.template) | 1024, l$10.typeArguments && (l$10.transformFlags |= 1), K2(l$10.template) && (l$10.transformFlags |= 128), l$10;
	}
	function j_(n$8, i$18, s$8, l$10) {
		return n$8.tag !== i$18 || n$8.typeArguments !== s$8 || n$8.template !== l$10 ? q$3(ua$3(i$18, s$8, l$10), n$8) : n$8;
	}
	function R_(n$8, i$18) {
		let s$8 = M$2(216);
		return s$8.expression = o$9().parenthesizeOperandOfPrefixUnary(i$18), s$8.type = n$8, s$8.transformFlags |= F$2(s$8.expression) | F$2(s$8.type) | 1, s$8;
	}
	function U_(n$8, i$18, s$8) {
		return n$8.type !== i$18 || n$8.expression !== s$8 ? q$3(R_(i$18, s$8), n$8) : n$8;
	}
	function as$2(n$8) {
		let i$18 = M$2(217);
		return i$18.expression = n$8, i$18.transformFlags = F$2(i$18.expression), i$18.jsDoc = void 0, i$18;
	}
	function B_(n$8, i$18) {
		return n$8.expression !== i$18 ? q$3(as$2(i$18), n$8) : n$8;
	}
	function ss$3(n$8, i$18, s$8, l$10, f$3, S$4, z$5) {
		let de$6 = ie$6(218);
		de$6.modifiers = Pe$6(n$8), de$6.asteriskToken = i$18, de$6.name = tt$5(s$8), de$6.typeParameters = Pe$6(l$10), de$6.parameters = fe$4(f$3), de$6.type = S$4, de$6.body = z$5;
		let Ue$5 = Bn$1(de$6.modifiers) & 1024, en$6 = !!de$6.asteriskToken, An$5 = Ue$5 && en$6;
		return de$6.transformFlags = ke$2(de$6.modifiers) | F$2(de$6.asteriskToken) | Un$1(de$6.name) | ke$2(de$6.typeParameters) | ke$2(de$6.parameters) | F$2(de$6.type) | F$2(de$6.body) & -67108865 | (An$5 ? 128 : Ue$5 ? 256 : en$6 ? 2048 : 0) | (de$6.typeParameters || de$6.type ? 1 : 0) | 4194304, de$6.typeArguments = void 0, de$6.jsDoc = void 0, de$6.locals = void 0, de$6.nextContainer = void 0, de$6.flowNode = void 0, de$6.endFlowNode = void 0, de$6.returnFlowNode = void 0, de$6;
	}
	function q_(n$8, i$18, s$8, l$10, f$3, S$4, z$5, de$6) {
		return n$8.name !== l$10 || n$8.modifiers !== i$18 || n$8.asteriskToken !== s$8 || n$8.typeParameters !== f$3 || n$8.parameters !== S$4 || n$8.type !== z$5 || n$8.body !== de$6 ? Ce$6(ss$3(i$18, s$8, l$10, f$3, S$4, z$5, de$6), n$8) : n$8;
	}
	function _s$3(n$8, i$18, s$8, l$10, f$3, S$4) {
		let z$5 = ie$6(219);
		z$5.modifiers = Pe$6(n$8), z$5.typeParameters = Pe$6(i$18), z$5.parameters = fe$4(s$8), z$5.type = l$10, z$5.equalsGreaterThanToken = f$3 ?? ct$4(39), z$5.body = o$9().parenthesizeConciseBodyOfArrowFunction(S$4);
		let de$6 = Bn$1(z$5.modifiers) & 1024;
		return z$5.transformFlags = ke$2(z$5.modifiers) | ke$2(z$5.typeParameters) | ke$2(z$5.parameters) | F$2(z$5.type) | F$2(z$5.equalsGreaterThanToken) | F$2(z$5.body) & -67108865 | (z$5.typeParameters || z$5.type ? 1 : 0) | (de$6 ? 16640 : 0) | 1024, z$5.typeArguments = void 0, z$5.jsDoc = void 0, z$5.locals = void 0, z$5.nextContainer = void 0, z$5.flowNode = void 0, z$5.endFlowNode = void 0, z$5.returnFlowNode = void 0, z$5;
	}
	function F_(n$8, i$18, s$8, l$10, f$3, S$4, z$5) {
		return n$8.modifiers !== i$18 || n$8.typeParameters !== s$8 || n$8.parameters !== l$10 || n$8.type !== f$3 || n$8.equalsGreaterThanToken !== S$4 || n$8.body !== z$5 ? Ce$6(_s$3(i$18, s$8, l$10, f$3, S$4, z$5), n$8) : n$8;
	}
	function z_(n$8) {
		let i$18 = M$2(220);
		return i$18.expression = o$9().parenthesizeOperandOfPrefixUnary(n$8), i$18.transformFlags |= F$2(i$18.expression), i$18;
	}
	function V_(n$8, i$18) {
		return n$8.expression !== i$18 ? q$3(z_(i$18), n$8) : n$8;
	}
	function pa$3(n$8) {
		let i$18 = M$2(221);
		return i$18.expression = o$9().parenthesizeOperandOfPrefixUnary(n$8), i$18.transformFlags |= F$2(i$18.expression), i$18;
	}
	function dn$5(n$8, i$18) {
		return n$8.expression !== i$18 ? q$3(pa$3(i$18), n$8) : n$8;
	}
	function os$4(n$8) {
		let i$18 = M$2(222);
		return i$18.expression = o$9().parenthesizeOperandOfPrefixUnary(n$8), i$18.transformFlags |= F$2(i$18.expression), i$18;
	}
	function ur$6(n$8, i$18) {
		return n$8.expression !== i$18 ? q$3(os$4(i$18), n$8) : n$8;
	}
	function W_(n$8) {
		let i$18 = M$2(223);
		return i$18.expression = o$9().parenthesizeOperandOfPrefixUnary(n$8), i$18.transformFlags |= F$2(i$18.expression) | 2097536, i$18;
	}
	function Ur$5(n$8, i$18) {
		return n$8.expression !== i$18 ? q$3(W_(i$18), n$8) : n$8;
	}
	function Br$5(n$8, i$18) {
		let s$8 = M$2(224);
		return s$8.operator = n$8, s$8.operand = o$9().parenthesizeOperandOfPrefixUnary(i$18), s$8.transformFlags |= F$2(s$8.operand), (n$8 === 46 || n$8 === 47) && Ze$2(s$8.operand) && !qa$1(s$8.operand) && !tm(s$8.operand) && (s$8.transformFlags |= 268435456), s$8;
	}
	function Xl$3(n$8, i$18) {
		return n$8.operand !== i$18 ? q$3(Br$5(n$8.operator, i$18), n$8) : n$8;
	}
	function ii$6(n$8, i$18) {
		let s$8 = M$2(225);
		return s$8.operator = i$18, s$8.operand = o$9().parenthesizeOperandOfPostfixUnary(n$8), s$8.transformFlags |= F$2(s$8.operand), Ze$2(s$8.operand) && !qa$1(s$8.operand) && !tm(s$8.operand) && (s$8.transformFlags |= 268435456), s$8;
	}
	function $l$3(n$8, i$18) {
		return n$8.operand !== i$18 ? q$3(ii$6(i$18, n$8.operator), n$8) : n$8;
	}
	function fa$5(n$8, i$18, s$8) {
		let l$10 = ie$6(226), f$3 = Zc$1(i$18), S$4 = f$3.kind;
		return l$10.left = o$9().parenthesizeLeftSideOfBinary(S$4, n$8), l$10.operatorToken = f$3, l$10.right = o$9().parenthesizeRightSideOfBinary(S$4, l$10.left, s$8), l$10.transformFlags |= F$2(l$10.left) | F$2(l$10.operatorToken) | F$2(l$10.right), S$4 === 61 ? l$10.transformFlags |= 32 : S$4 === 64 ? If(l$10.left) ? l$10.transformFlags |= 5248 | G_(l$10.left) : X1(l$10.left) && (l$10.transformFlags |= 5120 | G_(l$10.left)) : S$4 === 43 || S$4 === 68 ? l$10.transformFlags |= 512 : cb(S$4) && (l$10.transformFlags |= 16), S$4 === 103 && vi$1(l$10.left) && (l$10.transformFlags |= 536870912), l$10.jsDoc = void 0, l$10;
	}
	function G_(n$8) {
		return mh(n$8) ? 65536 : 0;
	}
	function Ql$3(n$8, i$18, s$8, l$10) {
		return n$8.left !== i$18 || n$8.operatorToken !== s$8 || n$8.right !== l$10 ? q$3(fa$5(i$18, s$8, l$10), n$8) : n$8;
	}
	function Y_(n$8, i$18, s$8, l$10, f$3) {
		let S$4 = M$2(227);
		return S$4.condition = o$9().parenthesizeConditionOfConditionalExpression(n$8), S$4.questionToken = i$18 ?? ct$4(58), S$4.whenTrue = o$9().parenthesizeBranchOfConditionalExpression(s$8), S$4.colonToken = l$10 ?? ct$4(59), S$4.whenFalse = o$9().parenthesizeBranchOfConditionalExpression(f$3), S$4.transformFlags |= F$2(S$4.condition) | F$2(S$4.questionToken) | F$2(S$4.whenTrue) | F$2(S$4.colonToken) | F$2(S$4.whenFalse), S$4.flowNodeWhenFalse = void 0, S$4.flowNodeWhenTrue = void 0, S$4;
	}
	function H_(n$8, i$18, s$8, l$10, f$3, S$4) {
		return n$8.condition !== i$18 || n$8.questionToken !== s$8 || n$8.whenTrue !== l$10 || n$8.colonToken !== f$3 || n$8.whenFalse !== S$4 ? q$3(Y_(i$18, s$8, l$10, f$3, S$4), n$8) : n$8;
	}
	function X_(n$8, i$18) {
		let s$8 = M$2(228);
		return s$8.head = n$8, s$8.templateSpans = fe$4(i$18), s$8.transformFlags |= F$2(s$8.head) | ke$2(s$8.templateSpans) | 1024, s$8;
	}
	function $n$5(n$8, i$18, s$8) {
		return n$8.head !== i$18 || n$8.templateSpans !== s$8 ? q$3(X_(i$18, s$8), n$8) : n$8;
	}
	function Ii$4(n$8, i$18, s$8, l$10 = 0) {
		B$2.assert(!(l$10 & -7177), "Unsupported template flags.");
		let f$3;
		if (s$8 !== void 0 && s$8 !== i$18 && (f$3 = Wb(n$8, s$8), typeof f$3 == "object")) return B$2.fail("Invalid raw text");
		if (i$18 === void 0) {
			if (f$3 === void 0) return B$2.fail("Arguments 'text' and 'rawText' may not both be undefined.");
			i$18 = f$3;
		} else f$3 !== void 0 && B$2.assert(i$18 === f$3, "Expected argument 'text' to be the normalized (i.e. 'cooked') version of argument 'rawText'.");
		return i$18;
	}
	function $_(n$8) {
		let i$18 = 1024;
		return n$8 && (i$18 |= 128), i$18;
	}
	function Kl$3(n$8, i$18, s$8, l$10) {
		let f$3 = $t$4(n$8);
		return f$3.text = i$18, f$3.rawText = s$8, f$3.templateFlags = l$10 & 7176, f$3.transformFlags = $_(f$3.templateFlags), f$3;
	}
	function ai$5(n$8, i$18, s$8, l$10) {
		let f$3 = ie$6(n$8);
		return f$3.text = i$18, f$3.rawText = s$8, f$3.templateFlags = l$10 & 7176, f$3.transformFlags = $_(f$3.templateFlags), f$3;
	}
	function si$6(n$8, i$18, s$8, l$10) {
		return n$8 === 15 ? ai$5(n$8, i$18, s$8, l$10) : Kl$3(n$8, i$18, s$8, l$10);
	}
	function Q_(n$8, i$18, s$8) {
		return n$8 = Ii$4(16, n$8, i$18, s$8), si$6(16, n$8, i$18, s$8);
	}
	function da$4(n$8, i$18, s$8) {
		return n$8 = Ii$4(16, n$8, i$18, s$8), si$6(17, n$8, i$18, s$8);
	}
	function cs$2(n$8, i$18, s$8) {
		return n$8 = Ii$4(16, n$8, i$18, s$8), si$6(18, n$8, i$18, s$8);
	}
	function Zl$3(n$8, i$18, s$8) {
		return n$8 = Ii$4(16, n$8, i$18, s$8), ai$5(15, n$8, i$18, s$8);
	}
	function ls$3(n$8, i$18) {
		B$2.assert(!n$8 || !!i$18, "A `YieldExpression` with an asteriskToken must have an expression.");
		let s$8 = M$2(229);
		return s$8.expression = i$18 && o$9().parenthesizeExpressionForDisallowedComma(i$18), s$8.asteriskToken = n$8, s$8.transformFlags |= F$2(s$8.expression) | F$2(s$8.asteriskToken) | 1049728, s$8;
	}
	function eu$4(n$8, i$18, s$8) {
		return n$8.expression !== s$8 || n$8.asteriskToken !== i$18 ? q$3(ls$3(i$18, s$8), n$8) : n$8;
	}
	function K_(n$8) {
		let i$18 = M$2(230);
		return i$18.expression = o$9().parenthesizeExpressionForDisallowedComma(n$8), i$18.transformFlags |= F$2(i$18.expression) | 33792, i$18;
	}
	function tu$5(n$8, i$18) {
		return n$8.expression !== i$18 ? q$3(K_(i$18), n$8) : n$8;
	}
	function Z_(n$8, i$18, s$8, l$10, f$3) {
		let S$4 = ie$6(231);
		return S$4.modifiers = Pe$6(n$8), S$4.name = tt$5(i$18), S$4.typeParameters = Pe$6(s$8), S$4.heritageClauses = Pe$6(l$10), S$4.members = fe$4(f$3), S$4.transformFlags |= ke$2(S$4.modifiers) | Un$1(S$4.name) | ke$2(S$4.typeParameters) | ke$2(S$4.heritageClauses) | ke$2(S$4.members) | (S$4.typeParameters ? 1 : 0) | 1024, S$4.jsDoc = void 0, S$4;
	}
	function us$2(n$8, i$18, s$8, l$10, f$3, S$4) {
		return n$8.modifiers !== i$18 || n$8.name !== s$8 || n$8.typeParameters !== l$10 || n$8.heritageClauses !== f$3 || n$8.members !== S$4 ? q$3(Z_(i$18, s$8, l$10, f$3, S$4), n$8) : n$8;
	}
	function ps$3() {
		return M$2(232);
	}
	function eo$4(n$8, i$18) {
		let s$8 = M$2(233);
		return s$8.expression = o$9().parenthesizeLeftSideOfAccess(n$8, !1), s$8.typeArguments = i$18 && o$9().parenthesizeTypeArguments(i$18), s$8.transformFlags |= F$2(s$8.expression) | ke$2(s$8.typeArguments) | 1024, s$8;
	}
	function to$4(n$8, i$18, s$8) {
		return n$8.expression !== i$18 || n$8.typeArguments !== s$8 ? q$3(eo$4(i$18, s$8), n$8) : n$8;
	}
	function mn$5(n$8, i$18) {
		let s$8 = M$2(234);
		return s$8.expression = n$8, s$8.type = i$18, s$8.transformFlags |= F$2(s$8.expression) | F$2(s$8.type) | 1, s$8;
	}
	function ma$3(n$8, i$18, s$8) {
		return n$8.expression !== i$18 || n$8.type !== s$8 ? q$3(mn$5(i$18, s$8), n$8) : n$8;
	}
	function no$5(n$8) {
		let i$18 = M$2(235);
		return i$18.expression = o$9().parenthesizeLeftSideOfAccess(n$8, !1), i$18.transformFlags |= F$2(i$18.expression) | 1, i$18;
	}
	function ro$4(n$8, i$18) {
		return Xg(n$8) ? jn$5(n$8, i$18) : n$8.expression !== i$18 ? q$3(no$5(i$18), n$8) : n$8;
	}
	function fs$3(n$8, i$18) {
		let s$8 = M$2(238);
		return s$8.expression = n$8, s$8.type = i$18, s$8.transformFlags |= F$2(s$8.expression) | F$2(s$8.type) | 1, s$8;
	}
	function io$4(n$8, i$18, s$8) {
		return n$8.expression !== i$18 || n$8.type !== s$8 ? q$3(fs$3(i$18, s$8), n$8) : n$8;
	}
	function ds$2(n$8) {
		let i$18 = M$2(235);
		return i$18.flags |= 64, i$18.expression = o$9().parenthesizeLeftSideOfAccess(n$8, !0), i$18.transformFlags |= F$2(i$18.expression) | 1, i$18;
	}
	function jn$5(n$8, i$18) {
		return B$2.assert(!!(n$8.flags & 64), "Cannot update a NonNullExpression using updateNonNullChain. Use updateNonNullExpression instead."), n$8.expression !== i$18 ? q$3(ds$2(i$18), n$8) : n$8;
	}
	function ao$4(n$8, i$18) {
		let s$8 = M$2(236);
		switch (s$8.keywordToken = n$8, s$8.name = i$18, s$8.transformFlags |= F$2(s$8.name), n$8) {
			case 105:
				s$8.transformFlags |= 1024;
				break;
			case 102:
				s$8.transformFlags |= 32;
				break;
			default: return B$2.assertNever(n$8);
		}
		return s$8.flowNode = void 0, s$8;
	}
	function ms$2(n$8, i$18) {
		return n$8.name !== i$18 ? q$3(ao$4(n$8.keywordToken, i$18), n$8) : n$8;
	}
	function Qn$5(n$8, i$18) {
		let s$8 = M$2(239);
		return s$8.expression = n$8, s$8.literal = i$18, s$8.transformFlags |= F$2(s$8.expression) | F$2(s$8.literal) | 1024, s$8;
	}
	function ha$5(n$8, i$18, s$8) {
		return n$8.expression !== i$18 || n$8.literal !== s$8 ? q$3(Qn$5(i$18, s$8), n$8) : n$8;
	}
	function so$4() {
		let n$8 = M$2(240);
		return n$8.transformFlags |= 1024, n$8;
	}
	function qr$4(n$8, i$18) {
		let s$8 = M$2(241);
		return s$8.statements = fe$4(n$8), s$8.multiLine = i$18, s$8.transformFlags |= ke$2(s$8.statements), s$8.jsDoc = void 0, s$8.locals = void 0, s$8.nextContainer = void 0, s$8;
	}
	function nu$3(n$8, i$18) {
		return n$8.statements !== i$18 ? q$3(qr$4(i$18, n$8.multiLine), n$8) : n$8;
	}
	function hs$3(n$8, i$18) {
		let s$8 = M$2(243);
		return s$8.modifiers = Pe$6(n$8), s$8.declarationList = Qr$2(i$18) ? xs$3(i$18) : i$18, s$8.transformFlags |= ke$2(s$8.modifiers) | F$2(s$8.declarationList), Bn$1(s$8.modifiers) & 128 && (s$8.transformFlags = 1), s$8.jsDoc = void 0, s$8.flowNode = void 0, s$8;
	}
	function _o$2(n$8, i$18, s$8) {
		return n$8.modifiers !== i$18 || n$8.declarationList !== s$8 ? q$3(hs$3(i$18, s$8), n$8) : n$8;
	}
	function oo$4() {
		let n$8 = M$2(242);
		return n$8.jsDoc = void 0, n$8;
	}
	function Oi$5(n$8) {
		let i$18 = M$2(244);
		return i$18.expression = o$9().parenthesizeExpressionOfExpressionStatement(n$8), i$18.transformFlags |= F$2(i$18.expression), i$18.jsDoc = void 0, i$18.flowNode = void 0, i$18;
	}
	function co$5(n$8, i$18) {
		return n$8.expression !== i$18 ? q$3(Oi$5(i$18), n$8) : n$8;
	}
	function lo$4(n$8, i$18, s$8) {
		let l$10 = M$2(245);
		return l$10.expression = n$8, l$10.thenStatement = Ot$4(i$18), l$10.elseStatement = Ot$4(s$8), l$10.transformFlags |= F$2(l$10.expression) | F$2(l$10.thenStatement) | F$2(l$10.elseStatement), l$10.jsDoc = void 0, l$10.flowNode = void 0, l$10;
	}
	function uo$4(n$8, i$18, s$8, l$10) {
		return n$8.expression !== i$18 || n$8.thenStatement !== s$8 || n$8.elseStatement !== l$10 ? q$3(lo$4(i$18, s$8, l$10), n$8) : n$8;
	}
	function po$5(n$8, i$18) {
		let s$8 = M$2(246);
		return s$8.statement = Ot$4(n$8), s$8.expression = i$18, s$8.transformFlags |= F$2(s$8.statement) | F$2(s$8.expression), s$8.jsDoc = void 0, s$8.flowNode = void 0, s$8;
	}
	function fo$2(n$8, i$18, s$8) {
		return n$8.statement !== i$18 || n$8.expression !== s$8 ? q$3(po$5(i$18, s$8), n$8) : n$8;
	}
	function mo$3(n$8, i$18) {
		let s$8 = M$2(247);
		return s$8.expression = n$8, s$8.statement = Ot$4(i$18), s$8.transformFlags |= F$2(s$8.expression) | F$2(s$8.statement), s$8.jsDoc = void 0, s$8.flowNode = void 0, s$8;
	}
	function ru$4(n$8, i$18, s$8) {
		return n$8.expression !== i$18 || n$8.statement !== s$8 ? q$3(mo$3(i$18, s$8), n$8) : n$8;
	}
	function ho$3(n$8, i$18, s$8, l$10) {
		let f$3 = M$2(248);
		return f$3.initializer = n$8, f$3.condition = i$18, f$3.incrementor = s$8, f$3.statement = Ot$4(l$10), f$3.transformFlags |= F$2(f$3.initializer) | F$2(f$3.condition) | F$2(f$3.incrementor) | F$2(f$3.statement), f$3.jsDoc = void 0, f$3.locals = void 0, f$3.nextContainer = void 0, f$3.flowNode = void 0, f$3;
	}
	function yo$3(n$8, i$18, s$8, l$10, f$3) {
		return n$8.initializer !== i$18 || n$8.condition !== s$8 || n$8.incrementor !== l$10 || n$8.statement !== f$3 ? q$3(ho$3(i$18, s$8, l$10, f$3), n$8) : n$8;
	}
	function ys$2(n$8, i$18, s$8) {
		let l$10 = M$2(249);
		return l$10.initializer = n$8, l$10.expression = i$18, l$10.statement = Ot$4(s$8), l$10.transformFlags |= F$2(l$10.initializer) | F$2(l$10.expression) | F$2(l$10.statement), l$10.jsDoc = void 0, l$10.locals = void 0, l$10.nextContainer = void 0, l$10.flowNode = void 0, l$10;
	}
	function iu$4(n$8, i$18, s$8, l$10) {
		return n$8.initializer !== i$18 || n$8.expression !== s$8 || n$8.statement !== l$10 ? q$3(ys$2(i$18, s$8, l$10), n$8) : n$8;
	}
	function go$4(n$8, i$18, s$8, l$10) {
		let f$3 = M$2(250);
		return f$3.awaitModifier = n$8, f$3.initializer = i$18, f$3.expression = o$9().parenthesizeExpressionForDisallowedComma(s$8), f$3.statement = Ot$4(l$10), f$3.transformFlags |= F$2(f$3.awaitModifier) | F$2(f$3.initializer) | F$2(f$3.expression) | F$2(f$3.statement) | 1024, n$8 && (f$3.transformFlags |= 128), f$3.jsDoc = void 0, f$3.locals = void 0, f$3.nextContainer = void 0, f$3.flowNode = void 0, f$3;
	}
	function au$3(n$8, i$18, s$8, l$10, f$3) {
		return n$8.awaitModifier !== i$18 || n$8.initializer !== s$8 || n$8.expression !== l$10 || n$8.statement !== f$3 ? q$3(go$4(i$18, s$8, l$10, f$3), n$8) : n$8;
	}
	function bo$3(n$8) {
		let i$18 = M$2(251);
		return i$18.label = tt$5(n$8), i$18.transformFlags |= F$2(i$18.label) | 4194304, i$18.jsDoc = void 0, i$18.flowNode = void 0, i$18;
	}
	function su$3(n$8, i$18) {
		return n$8.label !== i$18 ? q$3(bo$3(i$18), n$8) : n$8;
	}
	function gs$3(n$8) {
		let i$18 = M$2(252);
		return i$18.label = tt$5(n$8), i$18.transformFlags |= F$2(i$18.label) | 4194304, i$18.jsDoc = void 0, i$18.flowNode = void 0, i$18;
	}
	function vo$4(n$8, i$18) {
		return n$8.label !== i$18 ? q$3(gs$3(i$18), n$8) : n$8;
	}
	function bs$4(n$8) {
		let i$18 = M$2(253);
		return i$18.expression = n$8, i$18.transformFlags |= F$2(i$18.expression) | 4194432, i$18.jsDoc = void 0, i$18.flowNode = void 0, i$18;
	}
	function _u$4(n$8, i$18) {
		return n$8.expression !== i$18 ? q$3(bs$4(i$18), n$8) : n$8;
	}
	function vs$2(n$8, i$18) {
		let s$8 = M$2(254);
		return s$8.expression = n$8, s$8.statement = Ot$4(i$18), s$8.transformFlags |= F$2(s$8.expression) | F$2(s$8.statement), s$8.jsDoc = void 0, s$8.flowNode = void 0, s$8;
	}
	function To$3(n$8, i$18, s$8) {
		return n$8.expression !== i$18 || n$8.statement !== s$8 ? q$3(vs$2(i$18, s$8), n$8) : n$8;
	}
	function Ts$3(n$8, i$18) {
		let s$8 = M$2(255);
		return s$8.expression = o$9().parenthesizeExpressionForDisallowedComma(n$8), s$8.caseBlock = i$18, s$8.transformFlags |= F$2(s$8.expression) | F$2(s$8.caseBlock), s$8.jsDoc = void 0, s$8.flowNode = void 0, s$8.possiblyExhaustive = !1, s$8;
	}
	function _i$5(n$8, i$18, s$8) {
		return n$8.expression !== i$18 || n$8.caseBlock !== s$8 ? q$3(Ts$3(i$18, s$8), n$8) : n$8;
	}
	function xo$2(n$8, i$18) {
		let s$8 = M$2(256);
		return s$8.label = tt$5(n$8), s$8.statement = Ot$4(i$18), s$8.transformFlags |= F$2(s$8.label) | F$2(s$8.statement), s$8.jsDoc = void 0, s$8.flowNode = void 0, s$8;
	}
	function So$4(n$8, i$18, s$8) {
		return n$8.label !== i$18 || n$8.statement !== s$8 ? q$3(xo$2(i$18, s$8), n$8) : n$8;
	}
	function wo$3(n$8) {
		let i$18 = M$2(257);
		return i$18.expression = n$8, i$18.transformFlags |= F$2(i$18.expression), i$18.jsDoc = void 0, i$18.flowNode = void 0, i$18;
	}
	function ou$2(n$8, i$18) {
		return n$8.expression !== i$18 ? q$3(wo$3(i$18), n$8) : n$8;
	}
	function ko$2(n$8, i$18, s$8) {
		let l$10 = M$2(258);
		return l$10.tryBlock = n$8, l$10.catchClause = i$18, l$10.finallyBlock = s$8, l$10.transformFlags |= F$2(l$10.tryBlock) | F$2(l$10.catchClause) | F$2(l$10.finallyBlock), l$10.jsDoc = void 0, l$10.flowNode = void 0, l$10;
	}
	function cu$3(n$8, i$18, s$8, l$10) {
		return n$8.tryBlock !== i$18 || n$8.catchClause !== s$8 || n$8.finallyBlock !== l$10 ? q$3(ko$2(i$18, s$8, l$10), n$8) : n$8;
	}
	function Eo$4() {
		let n$8 = M$2(259);
		return n$8.jsDoc = void 0, n$8.flowNode = void 0, n$8;
	}
	function ya$3(n$8, i$18, s$8, l$10) {
		let f$3 = ie$6(260);
		return f$3.name = tt$5(n$8), f$3.exclamationToken = i$18, f$3.type = s$8, f$3.initializer = Na$4(l$10), f$3.transformFlags |= Un$1(f$3.name) | F$2(f$3.initializer) | (f$3.exclamationToken ?? f$3.type ? 1 : 0), f$3.jsDoc = void 0, f$3;
	}
	function Ao$2(n$8, i$18, s$8, l$10, f$3) {
		return n$8.name !== i$18 || n$8.type !== l$10 || n$8.exclamationToken !== s$8 || n$8.initializer !== f$3 ? q$3(ya$3(i$18, s$8, l$10, f$3), n$8) : n$8;
	}
	function xs$3(n$8, i$18 = 0) {
		let s$8 = M$2(261);
		return s$8.flags |= i$18 & 7, s$8.declarations = fe$4(n$8), s$8.transformFlags |= ke$2(s$8.declarations) | 4194304, i$18 & 7 && (s$8.transformFlags |= 263168), i$18 & 4 && (s$8.transformFlags |= 4), s$8;
	}
	function lu$1(n$8, i$18) {
		return n$8.declarations !== i$18 ? q$3(xs$3(i$18, n$8.flags), n$8) : n$8;
	}
	function Co$1(n$8, i$18, s$8, l$10, f$3, S$4, z$5) {
		let de$6 = ie$6(262);
		if (de$6.modifiers = Pe$6(n$8), de$6.asteriskToken = i$18, de$6.name = tt$5(s$8), de$6.typeParameters = Pe$6(l$10), de$6.parameters = fe$4(f$3), de$6.type = S$4, de$6.body = z$5, !de$6.body || Bn$1(de$6.modifiers) & 128) de$6.transformFlags = 1;
		else {
			let Ue$5 = Bn$1(de$6.modifiers) & 1024, en$6 = !!de$6.asteriskToken, An$5 = Ue$5 && en$6;
			de$6.transformFlags = ke$2(de$6.modifiers) | F$2(de$6.asteriskToken) | Un$1(de$6.name) | ke$2(de$6.typeParameters) | ke$2(de$6.parameters) | F$2(de$6.type) | F$2(de$6.body) & -67108865 | (An$5 ? 128 : Ue$5 ? 256 : en$6 ? 2048 : 0) | (de$6.typeParameters || de$6.type ? 1 : 0) | 4194304;
		}
		return de$6.typeArguments = void 0, de$6.jsDoc = void 0, de$6.locals = void 0, de$6.nextContainer = void 0, de$6.endFlowNode = void 0, de$6.returnFlowNode = void 0, de$6;
	}
	function Ss$2(n$8, i$18, s$8, l$10, f$3, S$4, z$5, de$6) {
		return n$8.modifiers !== i$18 || n$8.asteriskToken !== s$8 || n$8.name !== l$10 || n$8.typeParameters !== f$3 || n$8.parameters !== S$4 || n$8.type !== z$5 || n$8.body !== de$6 ? uu$3(Co$1(i$18, s$8, l$10, f$3, S$4, z$5, de$6), n$8) : n$8;
	}
	function uu$3(n$8, i$18) {
		return n$8 !== i$18 && n$8.modifiers === i$18.modifiers && (n$8.modifiers = i$18.modifiers), Ce$6(n$8, i$18);
	}
	function Do$2(n$8, i$18, s$8, l$10, f$3) {
		let S$4 = ie$6(263);
		return S$4.modifiers = Pe$6(n$8), S$4.name = tt$5(i$18), S$4.typeParameters = Pe$6(s$8), S$4.heritageClauses = Pe$6(l$10), S$4.members = fe$4(f$3), Bn$1(S$4.modifiers) & 128 ? S$4.transformFlags = 1 : (S$4.transformFlags |= ke$2(S$4.modifiers) | Un$1(S$4.name) | ke$2(S$4.typeParameters) | ke$2(S$4.heritageClauses) | ke$2(S$4.members) | (S$4.typeParameters ? 1 : 0) | 1024, S$4.transformFlags & 8192 && (S$4.transformFlags |= 1)), S$4.jsDoc = void 0, S$4;
	}
	function ga$3(n$8, i$18, s$8, l$10, f$3, S$4) {
		return n$8.modifiers !== i$18 || n$8.name !== s$8 || n$8.typeParameters !== l$10 || n$8.heritageClauses !== f$3 || n$8.members !== S$4 ? q$3(Do$2(i$18, s$8, l$10, f$3, S$4), n$8) : n$8;
	}
	function Po$2(n$8, i$18, s$8, l$10, f$3) {
		let S$4 = ie$6(264);
		return S$4.modifiers = Pe$6(n$8), S$4.name = tt$5(i$18), S$4.typeParameters = Pe$6(s$8), S$4.heritageClauses = Pe$6(l$10), S$4.members = fe$4(f$3), S$4.transformFlags = 1, S$4.jsDoc = void 0, S$4;
	}
	function No$3(n$8, i$18, s$8, l$10, f$3, S$4) {
		return n$8.modifiers !== i$18 || n$8.name !== s$8 || n$8.typeParameters !== l$10 || n$8.heritageClauses !== f$3 || n$8.members !== S$4 ? q$3(Po$2(i$18, s$8, l$10, f$3, S$4), n$8) : n$8;
	}
	function _t$5(n$8, i$18, s$8, l$10) {
		let f$3 = ie$6(265);
		return f$3.modifiers = Pe$6(n$8), f$3.name = tt$5(i$18), f$3.typeParameters = Pe$6(s$8), f$3.type = l$10, f$3.transformFlags = 1, f$3.jsDoc = void 0, f$3.locals = void 0, f$3.nextContainer = void 0, f$3;
	}
	function Tr$4(n$8, i$18, s$8, l$10, f$3) {
		return n$8.modifiers !== i$18 || n$8.name !== s$8 || n$8.typeParameters !== l$10 || n$8.type !== f$3 ? q$3(_t$5(i$18, s$8, l$10, f$3), n$8) : n$8;
	}
	function ws$2(n$8, i$18, s$8) {
		let l$10 = ie$6(266);
		return l$10.modifiers = Pe$6(n$8), l$10.name = tt$5(i$18), l$10.members = fe$4(s$8), l$10.transformFlags |= ke$2(l$10.modifiers) | F$2(l$10.name) | ke$2(l$10.members) | 1, l$10.transformFlags &= -67108865, l$10.jsDoc = void 0, l$10;
	}
	function xr$4(n$8, i$18, s$8, l$10) {
		return n$8.modifiers !== i$18 || n$8.name !== s$8 || n$8.members !== l$10 ? q$3(ws$2(i$18, s$8, l$10), n$8) : n$8;
	}
	function Io$4(n$8, i$18, s$8, l$10 = 0) {
		let f$3 = ie$6(267);
		return f$3.modifiers = Pe$6(n$8), f$3.flags |= l$10 & 2088, f$3.name = i$18, f$3.body = s$8, Bn$1(f$3.modifiers) & 128 ? f$3.transformFlags = 1 : f$3.transformFlags |= ke$2(f$3.modifiers) | F$2(f$3.name) | F$2(f$3.body) | 1, f$3.transformFlags &= -67108865, f$3.jsDoc = void 0, f$3.locals = void 0, f$3.nextContainer = void 0, f$3;
	}
	function Et$5(n$8, i$18, s$8, l$10) {
		return n$8.modifiers !== i$18 || n$8.name !== s$8 || n$8.body !== l$10 ? q$3(Io$4(i$18, s$8, l$10, n$8.flags), n$8) : n$8;
	}
	function Sr$5(n$8) {
		let i$18 = M$2(268);
		return i$18.statements = fe$4(n$8), i$18.transformFlags |= ke$2(i$18.statements), i$18.jsDoc = void 0, i$18;
	}
	function Ft$4(n$8, i$18) {
		return n$8.statements !== i$18 ? q$3(Sr$5(i$18), n$8) : n$8;
	}
	function Oo$4(n$8) {
		let i$18 = M$2(269);
		return i$18.clauses = fe$4(n$8), i$18.transformFlags |= ke$2(i$18.clauses), i$18.locals = void 0, i$18.nextContainer = void 0, i$18;
	}
	function pu$2(n$8, i$18) {
		return n$8.clauses !== i$18 ? q$3(Oo$4(i$18), n$8) : n$8;
	}
	function Mo$3(n$8) {
		let i$18 = ie$6(270);
		return i$18.name = tt$5(n$8), i$18.transformFlags |= Ua$1(i$18.name) | 1, i$18.modifiers = void 0, i$18.jsDoc = void 0, i$18;
	}
	function Lo$2(n$8, i$18) {
		return n$8.name !== i$18 ? fu$3(Mo$3(i$18), n$8) : n$8;
	}
	function fu$3(n$8, i$18) {
		return n$8 !== i$18 && (n$8.modifiers = i$18.modifiers), q$3(n$8, i$18);
	}
	function Jo$3(n$8, i$18, s$8, l$10) {
		let f$3 = ie$6(271);
		return f$3.modifiers = Pe$6(n$8), f$3.name = tt$5(s$8), f$3.isTypeOnly = i$18, f$3.moduleReference = l$10, f$3.transformFlags |= ke$2(f$3.modifiers) | Ua$1(f$3.name) | F$2(f$3.moduleReference), Ff(f$3.moduleReference) || (f$3.transformFlags |= 1), f$3.transformFlags &= -67108865, f$3.jsDoc = void 0, f$3;
	}
	function jo$3(n$8, i$18, s$8, l$10, f$3) {
		return n$8.modifiers !== i$18 || n$8.isTypeOnly !== s$8 || n$8.name !== l$10 || n$8.moduleReference !== f$3 ? q$3(Jo$3(i$18, s$8, l$10, f$3), n$8) : n$8;
	}
	function Ro$5(n$8, i$18, s$8, l$10) {
		let f$3 = M$2(272);
		return f$3.modifiers = Pe$6(n$8), f$3.importClause = i$18, f$3.moduleSpecifier = s$8, f$3.attributes = f$3.assertClause = l$10, f$3.transformFlags |= F$2(f$3.importClause) | F$2(f$3.moduleSpecifier), f$3.transformFlags &= -67108865, f$3.jsDoc = void 0, f$3;
	}
	function Uo$3(n$8, i$18, s$8, l$10, f$3) {
		return n$8.modifiers !== i$18 || n$8.importClause !== s$8 || n$8.moduleSpecifier !== l$10 || n$8.attributes !== f$3 ? q$3(Ro$5(i$18, s$8, l$10, f$3), n$8) : n$8;
	}
	function Bo$3(n$8, i$18, s$8) {
		let l$10 = ie$6(273);
		return l$10.isTypeOnly = n$8, l$10.name = i$18, l$10.namedBindings = s$8, l$10.transformFlags |= F$2(l$10.name) | F$2(l$10.namedBindings), n$8 && (l$10.transformFlags |= 1), l$10.transformFlags &= -67108865, l$10;
	}
	function qo$3(n$8, i$18, s$8, l$10) {
		return n$8.isTypeOnly !== i$18 || n$8.name !== s$8 || n$8.namedBindings !== l$10 ? q$3(Bo$3(i$18, s$8, l$10), n$8) : n$8;
	}
	function ks$3(n$8, i$18) {
		let s$8 = M$2(300);
		return s$8.elements = fe$4(n$8), s$8.multiLine = i$18, s$8.token = 132, s$8.transformFlags |= 4, s$8;
	}
	function du$2(n$8, i$18, s$8) {
		return n$8.elements !== i$18 || n$8.multiLine !== s$8 ? q$3(ks$3(i$18, s$8), n$8) : n$8;
	}
	function Mi$4(n$8, i$18) {
		let s$8 = M$2(301);
		return s$8.name = n$8, s$8.value = i$18, s$8.transformFlags |= 4, s$8;
	}
	function Fo$2(n$8, i$18, s$8) {
		return n$8.name !== i$18 || n$8.value !== s$8 ? q$3(Mi$4(i$18, s$8), n$8) : n$8;
	}
	function Es$2(n$8, i$18) {
		let s$8 = M$2(302);
		return s$8.assertClause = n$8, s$8.multiLine = i$18, s$8;
	}
	function zo$4(n$8, i$18, s$8) {
		return n$8.assertClause !== i$18 || n$8.multiLine !== s$8 ? q$3(Es$2(i$18, s$8), n$8) : n$8;
	}
	function Vo$4(n$8, i$18, s$8) {
		let l$10 = M$2(300);
		return l$10.token = s$8 ?? 118, l$10.elements = fe$4(n$8), l$10.multiLine = i$18, l$10.transformFlags |= 4, l$10;
	}
	function As$2(n$8, i$18, s$8) {
		return n$8.elements !== i$18 || n$8.multiLine !== s$8 ? q$3(Vo$4(i$18, s$8, n$8.token), n$8) : n$8;
	}
	function Wo$4(n$8, i$18) {
		let s$8 = M$2(301);
		return s$8.name = n$8, s$8.value = i$18, s$8.transformFlags |= 4, s$8;
	}
	function Go$3(n$8, i$18, s$8) {
		return n$8.name !== i$18 || n$8.value !== s$8 ? q$3(Wo$4(i$18, s$8), n$8) : n$8;
	}
	function Yo$3(n$8) {
		let i$18 = ie$6(274);
		return i$18.name = n$8, i$18.transformFlags |= F$2(i$18.name), i$18.transformFlags &= -67108865, i$18;
	}
	function mu$4(n$8, i$18) {
		return n$8.name !== i$18 ? q$3(Yo$3(i$18), n$8) : n$8;
	}
	function Ho$3(n$8) {
		let i$18 = ie$6(280);
		return i$18.name = n$8, i$18.transformFlags |= F$2(i$18.name) | 32, i$18.transformFlags &= -67108865, i$18;
	}
	function hu$3(n$8, i$18) {
		return n$8.name !== i$18 ? q$3(Ho$3(i$18), n$8) : n$8;
	}
	function Xo$4(n$8) {
		let i$18 = M$2(275);
		return i$18.elements = fe$4(n$8), i$18.transformFlags |= ke$2(i$18.elements), i$18.transformFlags &= -67108865, i$18;
	}
	function $o$3(n$8, i$18) {
		return n$8.elements !== i$18 ? q$3(Xo$4(i$18), n$8) : n$8;
	}
	function wr$4(n$8, i$18, s$8) {
		let l$10 = ie$6(276);
		return l$10.isTypeOnly = n$8, l$10.propertyName = i$18, l$10.name = s$8, l$10.transformFlags |= F$2(l$10.propertyName) | F$2(l$10.name), l$10.transformFlags &= -67108865, l$10;
	}
	function yu$3(n$8, i$18, s$8, l$10) {
		return n$8.isTypeOnly !== i$18 || n$8.propertyName !== s$8 || n$8.name !== l$10 ? q$3(wr$4(i$18, s$8, l$10), n$8) : n$8;
	}
	function ba$4(n$8, i$18, s$8) {
		let l$10 = ie$6(277);
		return l$10.modifiers = Pe$6(n$8), l$10.isExportEquals = i$18, l$10.expression = i$18 ? o$9().parenthesizeRightSideOfBinary(64, void 0, s$8) : o$9().parenthesizeExpressionOfExportDefault(s$8), l$10.transformFlags |= ke$2(l$10.modifiers) | F$2(l$10.expression), l$10.transformFlags &= -67108865, l$10.jsDoc = void 0, l$10;
	}
	function Li$4(n$8, i$18, s$8) {
		return n$8.modifiers !== i$18 || n$8.expression !== s$8 ? q$3(ba$4(i$18, n$8.isExportEquals, s$8), n$8) : n$8;
	}
	function va$4(n$8, i$18, s$8, l$10, f$3) {
		let S$4 = ie$6(278);
		return S$4.modifiers = Pe$6(n$8), S$4.isTypeOnly = i$18, S$4.exportClause = s$8, S$4.moduleSpecifier = l$10, S$4.attributes = S$4.assertClause = f$3, S$4.transformFlags |= ke$2(S$4.modifiers) | F$2(S$4.exportClause) | F$2(S$4.moduleSpecifier), S$4.transformFlags &= -67108865, S$4.jsDoc = void 0, S$4;
	}
	function Qo$4(n$8, i$18, s$8, l$10, f$3, S$4) {
		return n$8.modifiers !== i$18 || n$8.isTypeOnly !== s$8 || n$8.exportClause !== l$10 || n$8.moduleSpecifier !== f$3 || n$8.attributes !== S$4 ? Ji$4(va$4(i$18, s$8, l$10, f$3, S$4), n$8) : n$8;
	}
	function Ji$4(n$8, i$18) {
		return n$8 !== i$18 && n$8.modifiers === i$18.modifiers && (n$8.modifiers = i$18.modifiers), q$3(n$8, i$18);
	}
	function Cs$2(n$8) {
		let i$18 = M$2(279);
		return i$18.elements = fe$4(n$8), i$18.transformFlags |= ke$2(i$18.elements), i$18.transformFlags &= -67108865, i$18;
	}
	function gu$3(n$8, i$18) {
		return n$8.elements !== i$18 ? q$3(Cs$2(i$18), n$8) : n$8;
	}
	function Ta$3(n$8, i$18, s$8) {
		let l$10 = M$2(281);
		return l$10.isTypeOnly = n$8, l$10.propertyName = tt$5(i$18), l$10.name = tt$5(s$8), l$10.transformFlags |= F$2(l$10.propertyName) | F$2(l$10.name), l$10.transformFlags &= -67108865, l$10.jsDoc = void 0, l$10;
	}
	function bu$2(n$8, i$18, s$8, l$10) {
		return n$8.isTypeOnly !== i$18 || n$8.propertyName !== s$8 || n$8.name !== l$10 ? q$3(Ta$3(i$18, s$8, l$10), n$8) : n$8;
	}
	function vu$3() {
		let n$8 = ie$6(282);
		return n$8.jsDoc = void 0, n$8;
	}
	function Ds$2(n$8) {
		let i$18 = M$2(283);
		return i$18.expression = n$8, i$18.transformFlags |= F$2(i$18.expression), i$18.transformFlags &= -67108865, i$18;
	}
	function Tu$3(n$8, i$18) {
		return n$8.expression !== i$18 ? q$3(Ds$2(i$18), n$8) : n$8;
	}
	function Ko$5(n$8) {
		return M$2(n$8);
	}
	function Zo$3(n$8, i$18, s$8 = !1) {
		let l$10 = Ps$4(n$8, s$8 ? i$18 && o$9().parenthesizeNonArrayTypeOfPostfixType(i$18) : i$18);
		return l$10.postfix = s$8, l$10;
	}
	function Ps$4(n$8, i$18) {
		let s$8 = M$2(n$8);
		return s$8.type = i$18, s$8;
	}
	function xu$4(n$8, i$18, s$8) {
		return i$18.type !== s$8 ? q$3(Zo$3(n$8, s$8, i$18.postfix), i$18) : i$18;
	}
	function Su$3(n$8, i$18, s$8) {
		return i$18.type !== s$8 ? q$3(Ps$4(n$8, s$8), i$18) : i$18;
	}
	function ec$4(n$8, i$18) {
		let s$8 = ie$6(317);
		return s$8.parameters = Pe$6(n$8), s$8.type = i$18, s$8.transformFlags = ke$2(s$8.parameters) | (s$8.type ? 1 : 0), s$8.jsDoc = void 0, s$8.locals = void 0, s$8.nextContainer = void 0, s$8.typeArguments = void 0, s$8;
	}
	function wu$2(n$8, i$18, s$8) {
		return n$8.parameters !== i$18 || n$8.type !== s$8 ? q$3(ec$4(i$18, s$8), n$8) : n$8;
	}
	function tc$3(n$8, i$18 = !1) {
		let s$8 = ie$6(322);
		return s$8.jsDocPropertyTags = Pe$6(n$8), s$8.isArrayType = i$18, s$8;
	}
	function ku$3(n$8, i$18, s$8) {
		return n$8.jsDocPropertyTags !== i$18 || n$8.isArrayType !== s$8 ? q$3(tc$3(i$18, s$8), n$8) : n$8;
	}
	function nc$4(n$8) {
		let i$18 = M$2(309);
		return i$18.type = n$8, i$18;
	}
	function Ns$1(n$8, i$18) {
		return n$8.type !== i$18 ? q$3(nc$4(i$18), n$8) : n$8;
	}
	function rc$3(n$8, i$18, s$8) {
		let l$10 = ie$6(323);
		return l$10.typeParameters = Pe$6(n$8), l$10.parameters = fe$4(i$18), l$10.type = s$8, l$10.jsDoc = void 0, l$10.locals = void 0, l$10.nextContainer = void 0, l$10;
	}
	function Eu$2(n$8, i$18, s$8, l$10) {
		return n$8.typeParameters !== i$18 || n$8.parameters !== s$8 || n$8.type !== l$10 ? q$3(rc$3(i$18, s$8, l$10), n$8) : n$8;
	}
	function _n$5(n$8) {
		let i$18 = _l(n$8.kind);
		return n$8.tagName.escapedText === ja$1(i$18) ? n$8.tagName : Ge$5(i$18);
	}
	function kn$4(n$8, i$18, s$8) {
		let l$10 = M$2(n$8);
		return l$10.tagName = i$18, l$10.comment = s$8, l$10;
	}
	function Fr$5(n$8, i$18, s$8) {
		let l$10 = ie$6(n$8);
		return l$10.tagName = i$18, l$10.comment = s$8, l$10;
	}
	function Is$3(n$8, i$18, s$8, l$10) {
		let f$3 = kn$4(345, n$8 ?? Ge$5("template"), l$10);
		return f$3.constraint = i$18, f$3.typeParameters = fe$4(s$8), f$3;
	}
	function ic$2(n$8, i$18 = _n$5(n$8), s$8, l$10, f$3) {
		return n$8.tagName !== i$18 || n$8.constraint !== s$8 || n$8.typeParameters !== l$10 || n$8.comment !== f$3 ? q$3(Is$3(i$18, s$8, l$10, f$3), n$8) : n$8;
	}
	function xa$5(n$8, i$18, s$8, l$10) {
		let f$3 = Fr$5(346, n$8 ?? Ge$5("typedef"), l$10);
		return f$3.typeExpression = i$18, f$3.fullName = s$8, f$3.name = nm(s$8), f$3.locals = void 0, f$3.nextContainer = void 0, f$3;
	}
	function Au$4(n$8, i$18 = _n$5(n$8), s$8, l$10, f$3) {
		return n$8.tagName !== i$18 || n$8.typeExpression !== s$8 || n$8.fullName !== l$10 || n$8.comment !== f$3 ? q$3(xa$5(i$18, s$8, l$10, f$3), n$8) : n$8;
	}
	function Os$2(n$8, i$18, s$8, l$10, f$3, S$4) {
		let z$5 = Fr$5(341, n$8 ?? Ge$5("param"), S$4);
		return z$5.typeExpression = l$10, z$5.name = i$18, z$5.isNameFirst = !!f$3, z$5.isBracketed = s$8, z$5;
	}
	function Cu$2(n$8, i$18 = _n$5(n$8), s$8, l$10, f$3, S$4, z$5) {
		return n$8.tagName !== i$18 || n$8.name !== s$8 || n$8.isBracketed !== l$10 || n$8.typeExpression !== f$3 || n$8.isNameFirst !== S$4 || n$8.comment !== z$5 ? q$3(Os$2(i$18, s$8, l$10, f$3, S$4, z$5), n$8) : n$8;
	}
	function ac$2(n$8, i$18, s$8, l$10, f$3, S$4) {
		let z$5 = Fr$5(348, n$8 ?? Ge$5("prop"), S$4);
		return z$5.typeExpression = l$10, z$5.name = i$18, z$5.isNameFirst = !!f$3, z$5.isBracketed = s$8, z$5;
	}
	function sc$3(n$8, i$18 = _n$5(n$8), s$8, l$10, f$3, S$4, z$5) {
		return n$8.tagName !== i$18 || n$8.name !== s$8 || n$8.isBracketed !== l$10 || n$8.typeExpression !== f$3 || n$8.isNameFirst !== S$4 || n$8.comment !== z$5 ? q$3(ac$2(i$18, s$8, l$10, f$3, S$4, z$5), n$8) : n$8;
	}
	function _c$2(n$8, i$18, s$8, l$10) {
		let f$3 = Fr$5(338, n$8 ?? Ge$5("callback"), l$10);
		return f$3.typeExpression = i$18, f$3.fullName = s$8, f$3.name = nm(s$8), f$3.locals = void 0, f$3.nextContainer = void 0, f$3;
	}
	function oc$2(n$8, i$18 = _n$5(n$8), s$8, l$10, f$3) {
		return n$8.tagName !== i$18 || n$8.typeExpression !== s$8 || n$8.fullName !== l$10 || n$8.comment !== f$3 ? q$3(_c$2(i$18, s$8, l$10, f$3), n$8) : n$8;
	}
	function cc$3(n$8, i$18, s$8) {
		let l$10 = kn$4(339, n$8 ?? Ge$5("overload"), s$8);
		return l$10.typeExpression = i$18, l$10;
	}
	function Ms$3(n$8, i$18 = _n$5(n$8), s$8, l$10) {
		return n$8.tagName !== i$18 || n$8.typeExpression !== s$8 || n$8.comment !== l$10 ? q$3(cc$3(i$18, s$8, l$10), n$8) : n$8;
	}
	function Ls$3(n$8, i$18, s$8) {
		let l$10 = kn$4(328, n$8 ?? Ge$5("augments"), s$8);
		return l$10.class = i$18, l$10;
	}
	function ji$5(n$8, i$18 = _n$5(n$8), s$8, l$10) {
		return n$8.tagName !== i$18 || n$8.class !== s$8 || n$8.comment !== l$10 ? q$3(Ls$3(i$18, s$8, l$10), n$8) : n$8;
	}
	function lc$2(n$8, i$18, s$8) {
		let l$10 = kn$4(329, n$8 ?? Ge$5("implements"), s$8);
		return l$10.class = i$18, l$10;
	}
	function zr$5(n$8, i$18, s$8) {
		let l$10 = kn$4(347, n$8 ?? Ge$5("see"), s$8);
		return l$10.name = i$18, l$10;
	}
	function Sa$4(n$8, i$18, s$8, l$10) {
		return n$8.tagName !== i$18 || n$8.name !== s$8 || n$8.comment !== l$10 ? q$3(zr$5(i$18, s$8, l$10), n$8) : n$8;
	}
	function uc$3(n$8) {
		let i$18 = M$2(310);
		return i$18.name = n$8, i$18;
	}
	function Du$3(n$8, i$18) {
		return n$8.name !== i$18 ? q$3(uc$3(i$18), n$8) : n$8;
	}
	function pc$3(n$8, i$18) {
		let s$8 = M$2(311);
		return s$8.left = n$8, s$8.right = i$18, s$8.transformFlags |= F$2(s$8.left) | F$2(s$8.right), s$8;
	}
	function Pu$3(n$8, i$18, s$8) {
		return n$8.left !== i$18 || n$8.right !== s$8 ? q$3(pc$3(i$18, s$8), n$8) : n$8;
	}
	function fc$2(n$8, i$18) {
		let s$8 = M$2(324);
		return s$8.name = n$8, s$8.text = i$18, s$8;
	}
	function dc$3(n$8, i$18, s$8) {
		return n$8.name !== i$18 ? q$3(fc$2(i$18, s$8), n$8) : n$8;
	}
	function mc$2(n$8, i$18) {
		let s$8 = M$2(325);
		return s$8.name = n$8, s$8.text = i$18, s$8;
	}
	function Nu$3(n$8, i$18, s$8) {
		return n$8.name !== i$18 ? q$3(mc$2(i$18, s$8), n$8) : n$8;
	}
	function hc$2(n$8, i$18) {
		let s$8 = M$2(326);
		return s$8.name = n$8, s$8.text = i$18, s$8;
	}
	function Iu$2(n$8, i$18, s$8) {
		return n$8.name !== i$18 ? q$3(hc$2(i$18, s$8), n$8) : n$8;
	}
	function Ou$4(n$8, i$18 = _n$5(n$8), s$8, l$10) {
		return n$8.tagName !== i$18 || n$8.class !== s$8 || n$8.comment !== l$10 ? q$3(lc$2(i$18, s$8, l$10), n$8) : n$8;
	}
	function yc$2(n$8, i$18, s$8) {
		return kn$4(n$8, i$18 ?? Ge$5(_l(n$8)), s$8);
	}
	function Mu$2(n$8, i$18, s$8 = _n$5(i$18), l$10) {
		return i$18.tagName !== s$8 || i$18.comment !== l$10 ? q$3(yc$2(n$8, s$8, l$10), i$18) : i$18;
	}
	function gc$2(n$8, i$18, s$8, l$10) {
		let f$3 = kn$4(n$8, i$18 ?? Ge$5(_l(n$8)), l$10);
		return f$3.typeExpression = s$8, f$3;
	}
	function Lu$2(n$8, i$18, s$8 = _n$5(i$18), l$10, f$3) {
		return i$18.tagName !== s$8 || i$18.typeExpression !== l$10 || i$18.comment !== f$3 ? q$3(gc$2(n$8, s$8, l$10, f$3), i$18) : i$18;
	}
	function bc$2(n$8, i$18) {
		return kn$4(327, n$8, i$18);
	}
	function Ju$2(n$8, i$18, s$8) {
		return n$8.tagName !== i$18 || n$8.comment !== s$8 ? q$3(bc$2(i$18, s$8), n$8) : n$8;
	}
	function vc$2(n$8, i$18, s$8) {
		let l$10 = Fr$5(340, n$8 ?? Ge$5(_l(340)), s$8);
		return l$10.typeExpression = i$18, l$10.locals = void 0, l$10.nextContainer = void 0, l$10;
	}
	function Js$3(n$8, i$18 = _n$5(n$8), s$8, l$10) {
		return n$8.tagName !== i$18 || n$8.typeExpression !== s$8 || n$8.comment !== l$10 ? q$3(vc$2(i$18, s$8, l$10), n$8) : n$8;
	}
	function Tc$2(n$8, i$18, s$8, l$10, f$3) {
		let S$4 = kn$4(351, n$8 ?? Ge$5("import"), f$3);
		return S$4.importClause = i$18, S$4.moduleSpecifier = s$8, S$4.attributes = l$10, S$4.comment = f$3, S$4;
	}
	function xc$3(n$8, i$18, s$8, l$10, f$3, S$4) {
		return n$8.tagName !== i$18 || n$8.comment !== S$4 || n$8.importClause !== s$8 || n$8.moduleSpecifier !== l$10 || n$8.attributes !== f$3 ? q$3(Tc$2(i$18, s$8, l$10, f$3, S$4), n$8) : n$8;
	}
	function js$4(n$8) {
		let i$18 = M$2(321);
		return i$18.text = n$8, i$18;
	}
	function ju$3(n$8, i$18) {
		return n$8.text !== i$18 ? q$3(js$4(i$18), n$8) : n$8;
	}
	function Ri$4(n$8, i$18) {
		let s$8 = M$2(320);
		return s$8.comment = n$8, s$8.tags = Pe$6(i$18), s$8;
	}
	function Sc$1(n$8, i$18, s$8) {
		return n$8.comment !== i$18 || n$8.tags !== s$8 ? q$3(Ri$4(i$18, s$8), n$8) : n$8;
	}
	function wc$2(n$8, i$18, s$8) {
		let l$10 = M$2(284);
		return l$10.openingElement = n$8, l$10.children = fe$4(i$18), l$10.closingElement = s$8, l$10.transformFlags |= F$2(l$10.openingElement) | ke$2(l$10.children) | F$2(l$10.closingElement) | 2, l$10;
	}
	function Ru$3(n$8, i$18, s$8, l$10) {
		return n$8.openingElement !== i$18 || n$8.children !== s$8 || n$8.closingElement !== l$10 ? q$3(wc$2(i$18, s$8, l$10), n$8) : n$8;
	}
	function kc$3(n$8, i$18, s$8) {
		let l$10 = M$2(285);
		return l$10.tagName = n$8, l$10.typeArguments = Pe$6(i$18), l$10.attributes = s$8, l$10.transformFlags |= F$2(l$10.tagName) | ke$2(l$10.typeArguments) | F$2(l$10.attributes) | 2, l$10.typeArguments && (l$10.transformFlags |= 1), l$10;
	}
	function Rs$3(n$8, i$18, s$8, l$10) {
		return n$8.tagName !== i$18 || n$8.typeArguments !== s$8 || n$8.attributes !== l$10 ? q$3(kc$3(i$18, s$8, l$10), n$8) : n$8;
	}
	function Us$6(n$8, i$18, s$8) {
		let l$10 = M$2(286);
		return l$10.tagName = n$8, l$10.typeArguments = Pe$6(i$18), l$10.attributes = s$8, l$10.transformFlags |= F$2(l$10.tagName) | ke$2(l$10.typeArguments) | F$2(l$10.attributes) | 2, i$18 && (l$10.transformFlags |= 1), l$10;
	}
	function Ec$2(n$8, i$18, s$8, l$10) {
		return n$8.tagName !== i$18 || n$8.typeArguments !== s$8 || n$8.attributes !== l$10 ? q$3(Us$6(i$18, s$8, l$10), n$8) : n$8;
	}
	function wa$3(n$8) {
		let i$18 = M$2(287);
		return i$18.tagName = n$8, i$18.transformFlags |= F$2(i$18.tagName) | 2, i$18;
	}
	function Kt$4(n$8, i$18) {
		return n$8.tagName !== i$18 ? q$3(wa$3(i$18), n$8) : n$8;
	}
	function Bs$4(n$8, i$18, s$8) {
		let l$10 = M$2(288);
		return l$10.openingFragment = n$8, l$10.children = fe$4(i$18), l$10.closingFragment = s$8, l$10.transformFlags |= F$2(l$10.openingFragment) | ke$2(l$10.children) | F$2(l$10.closingFragment) | 2, l$10;
	}
	function Ac$1(n$8, i$18, s$8, l$10) {
		return n$8.openingFragment !== i$18 || n$8.children !== s$8 || n$8.closingFragment !== l$10 ? q$3(Bs$4(i$18, s$8, l$10), n$8) : n$8;
	}
	function ka$4(n$8, i$18) {
		let s$8 = M$2(12);
		return s$8.text = n$8, s$8.containsOnlyTriviaWhiteSpaces = !!i$18, s$8.transformFlags |= 2, s$8;
	}
	function Cc$1(n$8, i$18, s$8) {
		return n$8.text !== i$18 || n$8.containsOnlyTriviaWhiteSpaces !== s$8 ? q$3(ka$4(i$18, s$8), n$8) : n$8;
	}
	function Uu$2() {
		let n$8 = M$2(289);
		return n$8.transformFlags |= 2, n$8;
	}
	function Bu$3() {
		let n$8 = M$2(290);
		return n$8.transformFlags |= 2, n$8;
	}
	function Dc$1(n$8, i$18) {
		let s$8 = ie$6(291);
		return s$8.name = n$8, s$8.initializer = i$18, s$8.transformFlags |= F$2(s$8.name) | F$2(s$8.initializer) | 2, s$8;
	}
	function Ea$4(n$8, i$18, s$8) {
		return n$8.name !== i$18 || n$8.initializer !== s$8 ? q$3(Dc$1(i$18, s$8), n$8) : n$8;
	}
	function Pc$1(n$8) {
		let i$18 = ie$6(292);
		return i$18.properties = fe$4(n$8), i$18.transformFlags |= ke$2(i$18.properties) | 2, i$18;
	}
	function qu$4(n$8, i$18) {
		return n$8.properties !== i$18 ? q$3(Pc$1(i$18), n$8) : n$8;
	}
	function Nc$2(n$8) {
		let i$18 = M$2(293);
		return i$18.expression = n$8, i$18.transformFlags |= F$2(i$18.expression) | 2, i$18;
	}
	function Fu$3(n$8, i$18) {
		return n$8.expression !== i$18 ? q$3(Nc$2(i$18), n$8) : n$8;
	}
	function Aa$4(n$8, i$18) {
		let s$8 = M$2(294);
		return s$8.dotDotDotToken = n$8, s$8.expression = i$18, s$8.transformFlags |= F$2(s$8.dotDotDotToken) | F$2(s$8.expression) | 2, s$8;
	}
	function Ui$4(n$8, i$18) {
		return n$8.expression !== i$18 ? q$3(Aa$4(n$8.dotDotDotToken, i$18), n$8) : n$8;
	}
	function Ic$1(n$8, i$18) {
		let s$8 = M$2(295);
		return s$8.namespace = n$8, s$8.name = i$18, s$8.transformFlags |= F$2(s$8.namespace) | F$2(s$8.name) | 2, s$8;
	}
	function qs$3(n$8, i$18, s$8) {
		return n$8.namespace !== i$18 || n$8.name !== s$8 ? q$3(Ic$1(i$18, s$8), n$8) : n$8;
	}
	function Fs$4(n$8, i$18) {
		let s$8 = M$2(296);
		return s$8.expression = o$9().parenthesizeExpressionForDisallowedComma(n$8), s$8.statements = fe$4(i$18), s$8.transformFlags |= F$2(s$8.expression) | ke$2(s$8.statements), s$8.jsDoc = void 0, s$8;
	}
	function zu$4(n$8, i$18, s$8) {
		return n$8.expression !== i$18 || n$8.statements !== s$8 ? q$3(Fs$4(i$18, s$8), n$8) : n$8;
	}
	function oi$5(n$8) {
		let i$18 = M$2(297);
		return i$18.statements = fe$4(n$8), i$18.transformFlags = ke$2(i$18.statements), i$18;
	}
	function Oc$2(n$8, i$18) {
		return n$8.statements !== i$18 ? q$3(oi$5(i$18), n$8) : n$8;
	}
	function Mc$1(n$8, i$18) {
		let s$8 = M$2(298);
		switch (s$8.token = n$8, s$8.types = fe$4(i$18), s$8.transformFlags |= ke$2(s$8.types), n$8) {
			case 96:
				s$8.transformFlags |= 1024;
				break;
			case 119:
				s$8.transformFlags |= 1;
				break;
			default: return B$2.assertNever(n$8);
		}
		return s$8;
	}
	function Vu$2(n$8, i$18) {
		return n$8.types !== i$18 ? q$3(Mc$1(n$8.token, i$18), n$8) : n$8;
	}
	function zs$4(n$8, i$18) {
		let s$8 = M$2(299);
		return s$8.variableDeclaration = kr$5(n$8), s$8.block = i$18, s$8.transformFlags |= F$2(s$8.variableDeclaration) | F$2(s$8.block) | (n$8 ? 0 : 64), s$8.locals = void 0, s$8.nextContainer = void 0, s$8;
	}
	function Lc$1(n$8, i$18, s$8) {
		return n$8.variableDeclaration !== i$18 || n$8.block !== s$8 ? q$3(zs$4(i$18, s$8), n$8) : n$8;
	}
	function Ca$3(n$8, i$18) {
		let s$8 = ie$6(303);
		return s$8.name = tt$5(n$8), s$8.initializer = o$9().parenthesizeExpressionForDisallowedComma(i$18), s$8.transformFlags |= Un$1(s$8.name) | F$2(s$8.initializer), s$8.modifiers = void 0, s$8.questionToken = void 0, s$8.exclamationToken = void 0, s$8.jsDoc = void 0, s$8;
	}
	function Vr$4(n$8, i$18, s$8) {
		return n$8.name !== i$18 || n$8.initializer !== s$8 ? Wu$3(Ca$3(i$18, s$8), n$8) : n$8;
	}
	function Wu$3(n$8, i$18) {
		return n$8 !== i$18 && (n$8.modifiers = i$18.modifiers, n$8.questionToken = i$18.questionToken, n$8.exclamationToken = i$18.exclamationToken), q$3(n$8, i$18);
	}
	function Jc$2(n$8, i$18) {
		let s$8 = ie$6(304);
		return s$8.name = tt$5(n$8), s$8.objectAssignmentInitializer = i$18 && o$9().parenthesizeExpressionForDisallowedComma(i$18), s$8.transformFlags |= Ua$1(s$8.name) | F$2(s$8.objectAssignmentInitializer) | 1024, s$8.equalsToken = void 0, s$8.modifiers = void 0, s$8.questionToken = void 0, s$8.exclamationToken = void 0, s$8.jsDoc = void 0, s$8;
	}
	function Gu$2(n$8, i$18, s$8) {
		return n$8.name !== i$18 || n$8.objectAssignmentInitializer !== s$8 ? Yu$3(Jc$2(i$18, s$8), n$8) : n$8;
	}
	function Yu$3(n$8, i$18) {
		return n$8 !== i$18 && (n$8.modifiers = i$18.modifiers, n$8.questionToken = i$18.questionToken, n$8.exclamationToken = i$18.exclamationToken, n$8.equalsToken = i$18.equalsToken), q$3(n$8, i$18);
	}
	function Vs$4(n$8) {
		let i$18 = ie$6(305);
		return i$18.expression = o$9().parenthesizeExpressionForDisallowedComma(n$8), i$18.transformFlags |= F$2(i$18.expression) | 65664, i$18.jsDoc = void 0, i$18;
	}
	function jc$1(n$8, i$18) {
		return n$8.expression !== i$18 ? q$3(Vs$4(i$18), n$8) : n$8;
	}
	function En$5(n$8, i$18) {
		let s$8 = ie$6(306);
		return s$8.name = tt$5(n$8), s$8.initializer = i$18 && o$9().parenthesizeExpressionForDisallowedComma(i$18), s$8.transformFlags |= F$2(s$8.name) | F$2(s$8.initializer) | 1, s$8.jsDoc = void 0, s$8;
	}
	function Rc$1(n$8, i$18, s$8) {
		return n$8.name !== i$18 || n$8.initializer !== s$8 ? q$3(En$5(i$18, s$8), n$8) : n$8;
	}
	function Hu$2(n$8, i$18, s$8) {
		let l$10 = t$13.createBaseSourceFileNode(307);
		return l$10.statements = fe$4(n$8), l$10.endOfFileToken = i$18, l$10.flags |= s$8, l$10.text = "", l$10.fileName = "", l$10.path = "", l$10.resolvedPath = "", l$10.originalFileName = "", l$10.languageVersion = 1, l$10.languageVariant = 0, l$10.scriptKind = 0, l$10.isDeclarationFile = !1, l$10.hasNoDefaultLib = !1, l$10.transformFlags |= ke$2(l$10.statements) | F$2(l$10.endOfFileToken), l$10.locals = void 0, l$10.nextContainer = void 0, l$10.endFlowNode = void 0, l$10.nodeCount = 0, l$10.identifierCount = 0, l$10.symbolCount = 0, l$10.parseDiagnostics = void 0, l$10.bindDiagnostics = void 0, l$10.bindSuggestionDiagnostics = void 0, l$10.lineMap = void 0, l$10.externalModuleIndicator = void 0, l$10.setExternalModuleIndicator = void 0, l$10.pragmas = void 0, l$10.checkJsDirective = void 0, l$10.referencedFiles = void 0, l$10.typeReferenceDirectives = void 0, l$10.libReferenceDirectives = void 0, l$10.amdDependencies = void 0, l$10.commentDirectives = void 0, l$10.identifiers = void 0, l$10.packageJsonLocations = void 0, l$10.packageJsonScope = void 0, l$10.imports = void 0, l$10.moduleAugmentations = void 0, l$10.ambientModuleNames = void 0, l$10.classifiableNames = void 0, l$10.impliedNodeFormat = void 0, l$10;
	}
	function Uc$1(n$8) {
		let i$18 = Object.create(n$8.redirectTarget);
		return Object.defineProperties(i$18, {
			id: {
				get() {
					return this.redirectInfo.redirectTarget.id;
				},
				set(s$8) {
					this.redirectInfo.redirectTarget.id = s$8;
				}
			},
			symbol: {
				get() {
					return this.redirectInfo.redirectTarget.symbol;
				},
				set(s$8) {
					this.redirectInfo.redirectTarget.symbol = s$8;
				}
			}
		}), i$18.redirectInfo = n$8, i$18;
	}
	function Xu$3(n$8) {
		let i$18 = Uc$1(n$8.redirectInfo);
		return i$18.flags |= n$8.flags & -17, i$18.fileName = n$8.fileName, i$18.path = n$8.path, i$18.resolvedPath = n$8.resolvedPath, i$18.originalFileName = n$8.originalFileName, i$18.packageJsonLocations = n$8.packageJsonLocations, i$18.packageJsonScope = n$8.packageJsonScope, i$18.emitNode = void 0, i$18;
	}
	function Bc$1(n$8) {
		let i$18 = t$13.createBaseSourceFileNode(307);
		i$18.flags |= n$8.flags & -17;
		for (let s$8 in n$8) if (!(Nr$2(i$18, s$8) || !Nr$2(n$8, s$8))) {
			if (s$8 === "emitNode") {
				i$18.emitNode = void 0;
				continue;
			}
			i$18[s$8] = n$8[s$8];
		}
		return i$18;
	}
	function Da$3(n$8) {
		let i$18 = n$8.redirectInfo ? Xu$3(n$8) : Bc$1(n$8);
		return a$13(i$18, n$8), i$18;
	}
	function $u$2(n$8, i$18, s$8, l$10, f$3, S$4, z$5) {
		let de$6 = Da$3(n$8);
		return de$6.statements = fe$4(i$18), de$6.isDeclarationFile = s$8, de$6.referencedFiles = l$10, de$6.typeReferenceDirectives = f$3, de$6.hasNoDefaultLib = S$4, de$6.libReferenceDirectives = z$5, de$6.transformFlags = ke$2(de$6.statements) | F$2(de$6.endOfFileToken), de$6;
	}
	function Qu$2(n$8, i$18, s$8 = n$8.isDeclarationFile, l$10 = n$8.referencedFiles, f$3 = n$8.typeReferenceDirectives, S$4 = n$8.hasNoDefaultLib, z$5 = n$8.libReferenceDirectives) {
		return n$8.statements !== i$18 || n$8.isDeclarationFile !== s$8 || n$8.referencedFiles !== l$10 || n$8.typeReferenceDirectives !== f$3 || n$8.hasNoDefaultLib !== S$4 || n$8.libReferenceDirectives !== z$5 ? q$3($u$2(n$8, i$18, s$8, l$10, f$3, S$4, z$5), n$8) : n$8;
	}
	function Ws$4(n$8) {
		let i$18 = M$2(308);
		return i$18.sourceFiles = n$8, i$18.syntheticFileReferences = void 0, i$18.syntheticTypeReferences = void 0, i$18.syntheticLibReferences = void 0, i$18.hasNoDefaultLib = void 0, i$18;
	}
	function Ku$2(n$8, i$18) {
		return n$8.sourceFiles !== i$18 ? q$3(Ws$4(i$18), n$8) : n$8;
	}
	function Zu$3(n$8, i$18 = !1, s$8) {
		let l$10 = M$2(237);
		return l$10.type = n$8, l$10.isSpread = i$18, l$10.tupleNameSource = s$8, l$10;
	}
	function Pa$3(n$8) {
		let i$18 = M$2(352);
		return i$18._children = n$8, i$18;
	}
	function qc$1(n$8) {
		let i$18 = M$2(353);
		return i$18.original = n$8, gn$2(i$18, n$8), i$18;
	}
	function Fc$1(n$8, i$18) {
		let s$8 = M$2(355);
		return s$8.expression = n$8, s$8.original = i$18, s$8.transformFlags |= F$2(s$8.expression) | 1, gn$2(s$8, i$18), s$8;
	}
	function zc$2(n$8, i$18) {
		return n$8.expression !== i$18 ? q$3(Fc$1(i$18, n$8.original), n$8) : n$8;
	}
	function ep$1() {
		return M$2(354);
	}
	function tp$1(n$8) {
		if (Ra(n$8) && !yl(n$8) && !n$8.original && !n$8.emitNode && !n$8.id) {
			if (d6(n$8)) return n$8.elements;
			if (ea(n$8) && Kb(n$8.operatorToken)) return [n$8.left, n$8.right];
		}
		return n$8;
	}
	function Gs$4(n$8) {
		let i$18 = M$2(356);
		return i$18.elements = fe$4(xy(n$8, tp$1)), i$18.transformFlags |= ke$2(i$18.elements), i$18;
	}
	function Vc$1(n$8, i$18) {
		return n$8.elements !== i$18 ? q$3(Gs$4(i$18), n$8) : n$8;
	}
	function Ys$3(n$8, i$18) {
		let s$8 = M$2(357);
		return s$8.expression = n$8, s$8.thisArg = i$18, s$8.transformFlags |= F$2(s$8.expression) | F$2(s$8.thisArg), s$8;
	}
	function Wc$2(n$8, i$18, s$8) {
		return n$8.expression !== i$18 || n$8.thisArg !== s$8 ? q$3(Ys$3(i$18, s$8), n$8) : n$8;
	}
	function np$1(n$8) {
		let i$18 = Tn$5(n$8.escapedText);
		return i$18.flags |= n$8.flags & -17, i$18.transformFlags = n$8.transformFlags, a$13(i$18, n$8), setIdentifierAutoGenerate(i$18, { ...n$8.emitNode.autoGenerate }), i$18;
	}
	function rp$1(n$8) {
		let i$18 = Tn$5(n$8.escapedText);
		i$18.flags |= n$8.flags & -17, i$18.jsDoc = n$8.jsDoc, i$18.flowNode = n$8.flowNode, i$18.symbol = n$8.symbol, i$18.transformFlags = n$8.transformFlags, a$13(i$18, n$8);
		let s$8 = getIdentifierTypeArguments(n$8);
		return s$8 && setIdentifierTypeArguments(i$18, s$8), i$18;
	}
	function Gc$2(n$8) {
		let i$18 = Ln$5(n$8.escapedText);
		return i$18.flags |= n$8.flags & -17, i$18.transformFlags = n$8.transformFlags, a$13(i$18, n$8), setIdentifierAutoGenerate(i$18, { ...n$8.emitNode.autoGenerate }), i$18;
	}
	function Yc$1(n$8) {
		let i$18 = Ln$5(n$8.escapedText);
		return i$18.flags |= n$8.flags & -17, i$18.transformFlags = n$8.transformFlags, a$13(i$18, n$8), i$18;
	}
	function Hs$4(n$8) {
		if (n$8 === void 0) return n$8;
		if (_h(n$8)) return Da$3(n$8);
		if (qa$1(n$8)) return np$1(n$8);
		if (Ze$2(n$8)) return rp$1(n$8);
		if (l1(n$8)) return Gc$2(n$8);
		if (vi$1(n$8)) return Yc$1(n$8);
		let i$18 = ff(n$8.kind) ? t$13.createBaseNode(n$8.kind) : t$13.createBaseTokenNode(n$8.kind);
		i$18.flags |= n$8.flags & -17, i$18.transformFlags = n$8.transformFlags, a$13(i$18, n$8);
		for (let s$8 in n$8) Nr$2(i$18, s$8) || !Nr$2(n$8, s$8) || (i$18[s$8] = n$8[s$8]);
		return i$18;
	}
	function ip$1(n$8, i$18, s$8) {
		return Ni$4(ss$3(void 0, void 0, void 0, void 0, i$18 ? [i$18] : [], void 0, qr$4(n$8, !0)), void 0, s$8 ? [s$8] : []);
	}
	function ap$1(n$8, i$18, s$8) {
		return Ni$4(_s$3(void 0, void 0, i$18 ? [i$18] : [], void 0, void 0, qr$4(n$8, !0)), void 0, s$8 ? [s$8] : []);
	}
	function ci$6() {
		return os$4(V$5("0"));
	}
	function Hc$1(n$8) {
		return ba$4(void 0, !1, n$8);
	}
	function sp$1(n$8) {
		return va$4(void 0, !1, Cs$2([Ta$3(!1, void 0, n$8)]));
	}
	function Xs$5(n$8, i$18) {
		return i$18 === "null" ? ye$4.createStrictEquality(n$8, Jt$3()) : i$18 === "undefined" ? ye$4.createStrictEquality(n$8, ci$6()) : ye$4.createStrictEquality(pa$3(n$8), dt$3(i$18));
	}
	function _p$2(n$8, i$18) {
		return i$18 === "null" ? ye$4.createStrictInequality(n$8, Jt$3()) : i$18 === "undefined" ? ye$4.createStrictInequality(n$8, ci$6()) : ye$4.createStrictInequality(pa$3(n$8), dt$3(i$18));
	}
	function Wr$6(n$8, i$18, s$8) {
		return jd(n$8) ? rs$3(Di$3(n$8, void 0, i$18), void 0, void 0, s$8) : Ni$4(lr$5(n$8, i$18), void 0, s$8);
	}
	function op$1(n$8, i$18, s$8) {
		return Wr$6(n$8, "bind", [i$18, ...s$8]);
	}
	function cp$2(n$8, i$18, s$8) {
		return Wr$6(n$8, "call", [i$18, ...s$8]);
	}
	function lp$1(n$8, i$18, s$8) {
		return Wr$6(n$8, "apply", [i$18, s$8]);
	}
	function Bi$4(n$8, i$18, s$8) {
		return Wr$6(Ge$5(n$8), i$18, s$8);
	}
	function qi$3(n$8, i$18) {
		return Wr$6(n$8, "slice", i$18 === void 0 ? [] : [fr$5(i$18)]);
	}
	function up$1(n$8, i$18) {
		return Wr$6(n$8, "concat", i$18);
	}
	function $s$2(n$8, i$18, s$8) {
		return Bi$4("Object", "defineProperty", [
			n$8,
			fr$5(i$18),
			s$8
		]);
	}
	function li$6(n$8, i$18) {
		return Bi$4("Object", "getOwnPropertyDescriptor", [n$8, fr$5(i$18)]);
	}
	function Xc$1(n$8, i$18, s$8) {
		return Bi$4("Reflect", "get", s$8 ? [
			n$8,
			i$18,
			s$8
		] : [n$8, i$18]);
	}
	function pp$1(n$8, i$18, s$8, l$10) {
		return Bi$4("Reflect", "set", l$10 ? [
			n$8,
			i$18,
			s$8,
			l$10
		] : [
			n$8,
			i$18,
			s$8
		]);
	}
	function ui$6(n$8, i$18, s$8) {
		return s$8 ? (n$8.push(Ca$3(i$18, s$8)), !0) : !1;
	}
	function $c$2(n$8, i$18) {
		let s$8 = [];
		ui$6(s$8, "enumerable", fr$5(n$8.enumerable)), ui$6(s$8, "configurable", fr$5(n$8.configurable));
		let l$10 = ui$6(s$8, "writable", fr$5(n$8.writable));
		l$10 = ui$6(s$8, "value", n$8.value) || l$10;
		let f$3 = ui$6(s$8, "get", n$8.get);
		return f$3 = ui$6(s$8, "set", n$8.set) || f$3, B$2.assert(!(l$10 && f$3), "A PropertyDescriptor may not be both an accessor descriptor and a data descriptor."), Ci$5(s$8, !i$18);
	}
	function fp$1(n$8, i$18) {
		switch (n$8.kind) {
			case 217: return B_(n$8, i$18);
			case 216: return U_(n$8, n$8.type, i$18);
			case 234: return ma$3(n$8, i$18, n$8.type);
			case 238: return io$4(n$8, i$18, n$8.type);
			case 235: return ro$4(n$8, i$18);
			case 233: return to$4(n$8, i$18, n$8.typeArguments);
			case 355: return zc$2(n$8, i$18);
		}
	}
	function dp$1(n$8) {
		return Dl(n$8) && Ra(n$8) && Ra(getSourceMapRange(n$8)) && Ra(getCommentRange(n$8)) && !nn$2(getSyntheticLeadingComments(n$8)) && !nn$2(getSyntheticTrailingComments(n$8));
	}
	function Qc$1(n$8, i$18, s$8 = 63) {
		return n$8 && dh(n$8, s$8) && !dp$1(n$8) ? fp$1(n$8, Qc$1(n$8.expression, i$18)) : i$18;
	}
	function Qs$3(n$8, i$18, s$8) {
		if (!i$18) return n$8;
		let l$10 = So$4(i$18, i$18.label, th(i$18.statement) ? Qs$3(n$8, i$18.statement) : n$8);
		return s$8 && s$8(i$18), l$10;
	}
	function Ks$5(n$8, i$18) {
		let s$8 = vf(n$8);
		switch (s$8.kind) {
			case 80: return i$18;
			case 110:
			case 9:
			case 10:
			case 11: return !1;
			case 209: return s$8.elements.length !== 0;
			case 210: return s$8.properties.length > 0;
			default: return !0;
		}
	}
	function Kc$2(n$8, i$18, s$8, l$10 = !1) {
		let f$3 = Vf(n$8, 63), S$4, z$5;
		return Vd(f$3) ? (S$4 = Ut$4(), z$5 = f$3) : Cp(f$3) ? (S$4 = Ut$4(), z$5 = s$8 !== void 0 && s$8 < 2 ? gn$2(Ge$5("_super"), f$3) : f$3) : Wa$1(f$3) & 8192 ? (S$4 = ci$6(), z$5 = o$9().parenthesizeLeftSideOfAccess(f$3, !1)) : dr$2(f$3) ? Ks$5(f$3.expression, l$10) ? (S$4 = ar$5(i$18), z$5 = lr$5(gn$2(ye$4.createAssignment(S$4, f$3.expression), f$3.expression), f$3.name), gn$2(z$5, f$3)) : (S$4 = f$3.expression, z$5 = f$3) : $a(f$3) ? Ks$5(f$3.expression, l$10) ? (S$4 = ar$5(i$18), z$5 = Pi$5(gn$2(ye$4.createAssignment(S$4, f$3.expression), f$3.expression), f$3.argumentExpression), gn$2(z$5, f$3)) : (S$4 = f$3.expression, z$5 = f$3) : (S$4 = ci$6(), z$5 = o$9().parenthesizeLeftSideOfAccess(n$8, !1)), {
			target: z$5,
			thisArg: S$4
		};
	}
	function _$2(n$8, i$18) {
		return lr$5(as$2(Ci$5([R$6(void 0, "value", [hr$4(void 0, void 0, n$8, void 0, void 0, void 0)], qr$4([Oi$5(i$18)]))])), "value");
	}
	function p$2(n$8) {
		return n$8.length > 10 ? Gs$4(n$8) : Iy(n$8, ye$4.createComma);
	}
	function d$14(n$8, i$18, s$8, l$10 = 0, f$3) {
		let S$4 = f$3 ? n$8 && lf(n$8) : r1(n$8);
		if (S$4 && Ze$2(S$4) && !qa$1(S$4)) {
			let z$5 = Sf(gn$2(Hs$4(S$4), S$4), S$4.parent);
			return l$10 |= Wa$1(S$4), s$8 || (l$10 |= 96), i$18 || (l$10 |= 3072), l$10 && setEmitFlags(z$5, l$10), z$5;
		}
		return Fn$4(n$8);
	}
	function b$7(n$8, i$18, s$8) {
		return d$14(n$8, i$18, s$8, 98304);
	}
	function w$3(n$8, i$18, s$8, l$10) {
		return d$14(n$8, i$18, s$8, 32768, l$10);
	}
	function I$2(n$8, i$18, s$8) {
		return d$14(n$8, i$18, s$8, 16384);
	}
	function $$4(n$8, i$18, s$8) {
		return d$14(n$8, i$18, s$8);
	}
	function se$3(n$8, i$18, s$8, l$10) {
		let f$3 = lr$5(n$8, Ra(i$18) ? i$18 : Hs$4(i$18));
		gn$2(f$3, i$18);
		let S$4 = 0;
		return l$10 || (S$4 |= 96), s$8 || (S$4 |= 3072), S$4 && setEmitFlags(f$3, S$4), f$3;
	}
	function Z$4(n$8, i$18, s$8, l$10) {
		return n$8 && S_(i$18, 32) ? se$3(n$8, d$14(i$18), s$8, l$10) : I$2(i$18, s$8, l$10);
	}
	function ee$4(n$8, i$18, s$8, l$10) {
		let f$3 = Re$7(n$8, i$18, 0, s$8);
		return Ae$5(n$8, i$18, f$3, l$10);
	}
	function ce$4(n$8) {
		return Si$1(n$8.expression) && n$8.expression.text === "use strict";
	}
	function je$4() {
		return L6(Oi$5(dt$3("use strict")));
	}
	function Re$7(n$8, i$18, s$8 = 0, l$10) {
		B$2.assert(i$18.length === 0, "Prologue directives should be at the first statement in the target statements array");
		let f$3 = !1, S$4 = n$8.length;
		for (; s$8 < S$4;) {
			let z$5 = n$8[s$8];
			if (ul(z$5)) ce$4(z$5) && (f$3 = !0), i$18.push(z$5);
			else break;
			s$8++;
		}
		return l$10 && !f$3 && i$18.push(je$4()), s$8;
	}
	function Ae$5(n$8, i$18, s$8, l$10, f$3 = Ry) {
		let S$4 = n$8.length;
		for (; s$8 !== void 0 && s$8 < S$4;) {
			let z$5 = n$8[s$8];
			if (Wa$1(z$5) & 2097152 && f$3(z$5)) Dn$1(i$18, l$10 ? visitNode(z$5, l$10, u2) : z$5);
			else break;
			s$8++;
		}
		return s$8;
	}
	function Yt$4(n$8) {
		return O6(n$8) ? n$8 : gn$2(fe$4([je$4(), ...n$8]), n$8);
	}
	function hn$5(n$8) {
		return B$2.assert(Yp(n$8, f2), "Cannot lift nodes to a Block."), Dy(n$8) || qr$4(n$8);
	}
	function Zt$3(n$8, i$18, s$8) {
		let l$10 = s$8;
		for (; l$10 < n$8.length && i$18(n$8[l$10]);) l$10++;
		return l$10;
	}
	function pr$4(n$8, i$18) {
		if (!nn$2(i$18)) return n$8;
		let s$8 = Zt$3(n$8, ul, 0), l$10 = Zt$3(n$8, Fd, s$8), f$3 = Zt$3(n$8, zd, l$10), S$4 = Zt$3(i$18, ul, 0), z$5 = Zt$3(i$18, Fd, S$4), de$6 = Zt$3(i$18, zd, z$5), Ue$5 = Zt$3(i$18, hf, de$6);
		B$2.assert(Ue$5 === i$18.length, "Expected declarations to be valid standard or custom prologues");
		let en$6 = yi$1(n$8) ? n$8.slice() : n$8;
		if (Ue$5 > de$6 && en$6.splice(f$3, 0, ...i$18.slice(de$6, Ue$5)), de$6 > z$5 && en$6.splice(l$10, 0, ...i$18.slice(z$5, de$6)), z$5 > S$4 && en$6.splice(s$8, 0, ...i$18.slice(S$4, z$5)), S$4 > 0) if (s$8 === 0) en$6.splice(0, 0, ...i$18.slice(0, S$4));
		else {
			let An$5 = /* @__PURE__ */ new Map();
			for (let Kn$5 = 0; Kn$5 < s$8; Kn$5++) {
				let Ia$3 = n$8[Kn$5];
				An$5.set(Ia$3.expression.text, !0);
			}
			for (let Kn$5 = S$4 - 1; Kn$5 >= 0; Kn$5--) {
				let Ia$3 = i$18[Kn$5];
				An$5.has(Ia$3.expression.text) || en$6.unshift(Ia$3);
			}
		}
		return yi$1(n$8) ? gn$2(fe$4(en$6, n$8.hasTrailingComma), n$8) : n$8;
	}
	function Rn$4(n$8, i$18) {
		let s$8;
		return typeof i$18 == "number" ? s$8 = xn$3(i$18) : s$8 = i$18, Ef(n$8) ? _r$5(n$8, s$8, n$8.name, n$8.constraint, n$8.default) : g_(n$8) ? yr$4(n$8, s$8, n$8.dotDotDotToken, n$8.name, n$8.questionToken, n$8.type, n$8.initializer) : Nf(n$8) ? Ve$5(n$8, s$8, n$8.typeParameters, n$8.parameters, n$8.type) : J1(n$8) ? Gn$6(n$8, s$8, n$8.name, n$8.questionToken, n$8.type) : Ya(n$8) ? J$4(n$8, s$8, n$8.name, n$8.questionToken ?? n$8.exclamationToken, n$8.type, n$8.initializer) : j1(n$8) ? me$5(n$8, s$8, n$8.name, n$8.questionToken, n$8.typeParameters, n$8.parameters, n$8.type) : b_(n$8) ? Xe$4(n$8, s$8, n$8.asteriskToken, n$8.name, n$8.questionToken, n$8.typeParameters, n$8.parameters, n$8.type, n$8.body) : Af(n$8) ? Lr$5(n$8, s$8, n$8.parameters, n$8.body) : vl(n$8) ? Yn$5(n$8, s$8, n$8.name, n$8.parameters, n$8.type, n$8.body) : v_(n$8) ? Q$4(n$8, s$8, n$8.name, n$8.parameters, n$8.body) : Cf(n$8) ? et$5(n$8, s$8, n$8.parameters, n$8.type) : Mf(n$8) ? q_(n$8, s$8, n$8.asteriskToken, n$8.name, n$8.typeParameters, n$8.parameters, n$8.type, n$8.body) : Lf(n$8) ? F_(n$8, s$8, n$8.typeParameters, n$8.parameters, n$8.type, n$8.equalsGreaterThanToken, n$8.body) : Tl(n$8) ? us$2(n$8, s$8, n$8.name, n$8.typeParameters, n$8.heritageClauses, n$8.members) : Qa$1(n$8) ? _o$2(n$8, s$8, n$8.declarationList) : jf(n$8) ? Ss$2(n$8, s$8, n$8.asteriskToken, n$8.name, n$8.typeParameters, n$8.parameters, n$8.type, n$8.body) : Ha$1(n$8) ? ga$3(n$8, s$8, n$8.name, n$8.typeParameters, n$8.heritageClauses, n$8.members) : w_(n$8) ? No$3(n$8, s$8, n$8.name, n$8.typeParameters, n$8.heritageClauses, n$8.members) : Nl(n$8) ? Tr$4(n$8, s$8, n$8.name, n$8.typeParameters, n$8.type) : rh(n$8) ? xr$4(n$8, s$8, n$8.name, n$8.members) : wi$1(n$8) ? Et$5(n$8, s$8, n$8.name, n$8.body) : Rf(n$8) ? jo$3(n$8, s$8, n$8.isTypeOnly, n$8.name, n$8.moduleReference) : Uf(n$8) ? Uo$3(n$8, s$8, n$8.importClause, n$8.moduleSpecifier, n$8.attributes) : Bf(n$8) ? Li$4(n$8, s$8, n$8.expression) : qf(n$8) ? Qo$4(n$8, s$8, n$8.isTypeOnly, n$8.exportClause, n$8.moduleSpecifier, n$8.attributes) : B$2.assertNever(n$8);
	}
	function Gr$6(n$8, i$18) {
		return g_(n$8) ? yr$4(n$8, i$18, n$8.dotDotDotToken, n$8.name, n$8.questionToken, n$8.type, n$8.initializer) : Ya(n$8) ? J$4(n$8, i$18, n$8.name, n$8.questionToken ?? n$8.exclamationToken, n$8.type, n$8.initializer) : b_(n$8) ? Xe$4(n$8, i$18, n$8.asteriskToken, n$8.name, n$8.questionToken, n$8.typeParameters, n$8.parameters, n$8.type, n$8.body) : vl(n$8) ? Yn$5(n$8, i$18, n$8.name, n$8.parameters, n$8.type, n$8.body) : v_(n$8) ? Q$4(n$8, i$18, n$8.name, n$8.parameters, n$8.body) : Tl(n$8) ? us$2(n$8, i$18, n$8.name, n$8.typeParameters, n$8.heritageClauses, n$8.members) : Ha$1(n$8) ? ga$3(n$8, i$18, n$8.name, n$8.typeParameters, n$8.heritageClauses, n$8.members) : B$2.assertNever(n$8);
	}
	function mp$1(n$8, i$18) {
		switch (n$8.kind) {
			case 177: return Yn$5(n$8, n$8.modifiers, i$18, n$8.parameters, n$8.type, n$8.body);
			case 178: return Q$4(n$8, n$8.modifiers, i$18, n$8.parameters, n$8.body);
			case 174: return Xe$4(n$8, n$8.modifiers, n$8.asteriskToken, i$18, n$8.questionToken, n$8.typeParameters, n$8.parameters, n$8.type, n$8.body);
			case 173: return me$5(n$8, n$8.modifiers, i$18, n$8.questionToken, n$8.typeParameters, n$8.parameters, n$8.type);
			case 172: return J$4(n$8, n$8.modifiers, i$18, n$8.questionToken ?? n$8.exclamationToken, n$8.type, n$8.initializer);
			case 171: return Gn$6(n$8, n$8.modifiers, i$18, n$8.questionToken, n$8.type);
			case 303: return Vr$4(n$8, i$18, n$8.initializer);
		}
	}
	function Pe$6(n$8) {
		return n$8 ? fe$4(n$8) : void 0;
	}
	function tt$5(n$8) {
		return typeof n$8 == "string" ? Ge$5(n$8) : n$8;
	}
	function fr$5(n$8) {
		return typeof n$8 == "string" ? dt$3(n$8) : typeof n$8 == "number" ? V$5(n$8) : typeof n$8 == "boolean" ? n$8 ? lt$3() : sr$5() : n$8;
	}
	function Na$4(n$8) {
		return n$8 && o$9().parenthesizeExpressionForDisallowedComma(n$8);
	}
	function Zc$1(n$8) {
		return typeof n$8 == "number" ? ct$4(n$8) : n$8;
	}
	function Ot$4(n$8) {
		return n$8 && m6(n$8) ? gn$2(a$13(oo$4(), n$8), n$8) : n$8;
	}
	function kr$5(n$8) {
		return typeof n$8 == "string" || n$8 && !Jf(n$8) ? ya$3(n$8, void 0, void 0, void 0) : n$8;
	}
	function q$3(n$8, i$18) {
		return n$8 !== i$18 && (a$13(n$8, i$18), gn$2(n$8, i$18)), n$8;
	}
}
function _l(e$4) {
	switch (e$4) {
		case 344: return "type";
		case 342: return "returns";
		case 343: return "this";
		case 340: return "enum";
		case 330: return "author";
		case 332: return "class";
		case 333: return "public";
		case 334: return "private";
		case 335: return "protected";
		case 336: return "readonly";
		case 337: return "override";
		case 345: return "template";
		case 346: return "typedef";
		case 341: return "param";
		case 348: return "prop";
		case 338: return "callback";
		case 339: return "overload";
		case 328: return "augments";
		case 329: return "implements";
		case 351: return "import";
		default: return B$2.fail(`Unsupported kind: ${B$2.formatSyntaxKind(e$4)}`);
	}
}
var Cn$1, $d = {};
function Wb(e$4, t$13) {
	switch (Cn$1 || (Cn$1 = _f(99, !1, 0)), e$4) {
		case 15:
			Cn$1.setText("`" + t$13 + "`");
			break;
		case 16:
			Cn$1.setText("`" + t$13 + "${");
			break;
		case 17:
			Cn$1.setText("}" + t$13 + "${");
			break;
		case 18:
			Cn$1.setText("}" + t$13 + "`");
			break;
	}
	let a$13 = Cn$1.scan();
	if (a$13 === 20 && (a$13 = Cn$1.reScanTemplateToken(!1)), Cn$1.isUnterminated()) return Cn$1.setText(void 0), $d;
	let o$9;
	switch (a$13) {
		case 15:
		case 16:
		case 17:
		case 18:
			o$9 = Cn$1.getTokenValue();
			break;
	}
	return o$9 === void 0 || Cn$1.scan() !== 1 ? (Cn$1.setText(void 0), $d) : (Cn$1.setText(void 0), o$9);
}
function Un$1(e$4) {
	return e$4 && Ze$2(e$4) ? Ua$1(e$4) : F$2(e$4);
}
function Ua$1(e$4) {
	return F$2(e$4) & -67108865;
}
function Gb(e$4, t$13) {
	return t$13 | e$4.transformFlags & 134234112;
}
function F$2(e$4) {
	if (!e$4) return 0;
	let t$13 = e$4.transformFlags & ~Yb(e$4.kind);
	return Ng(e$4) && u1(e$4.name) ? Gb(e$4.name, t$13) : t$13;
}
function ke$2(e$4) {
	return e$4 ? e$4.transformFlags : 0;
}
function Qd(e$4) {
	let t$13 = 0;
	for (let a$13 of e$4) t$13 |= F$2(a$13);
	e$4.transformFlags = t$13;
}
function Yb(e$4) {
	if (e$4 >= 182 && e$4 <= 205) return -2;
	switch (e$4) {
		case 213:
		case 214:
		case 209: return -2147450880;
		case 267: return -1941676032;
		case 169: return -2147483648;
		case 219: return -2072174592;
		case 218:
		case 262: return -1937940480;
		case 261: return -2146893824;
		case 263:
		case 231: return -2147344384;
		case 176: return -1937948672;
		case 172: return -2013249536;
		case 174:
		case 177:
		case 178: return -2005057536;
		case 133:
		case 150:
		case 163:
		case 146:
		case 154:
		case 151:
		case 136:
		case 155:
		case 116:
		case 168:
		case 171:
		case 173:
		case 179:
		case 180:
		case 181:
		case 264:
		case 265: return -2;
		case 210: return -2147278848;
		case 299: return -2147418112;
		case 206:
		case 207: return -2147450880;
		case 216:
		case 238:
		case 234:
		case 355:
		case 217:
		case 108: return -2147483648;
		case 211:
		case 212: return -2147483648;
		default: return -2147483648;
	}
}
var t_ = Fb();
function n_(e$4) {
	return e$4.flags |= 16, e$4;
}
wf(4, {
	createBaseSourceFileNode: (e$4) => n_(t_.createBaseSourceFileNode(e$4)),
	createBaseIdentifierNode: (e$4) => n_(t_.createBaseIdentifierNode(e$4)),
	createBasePrivateIdentifierNode: (e$4) => n_(t_.createBasePrivateIdentifierNode(e$4)),
	createBaseTokenNode: (e$4) => n_(t_.createBaseTokenNode(e$4)),
	createBaseNode: (e$4) => n_(t_.createBaseNode(e$4))
});
function Xb(e$4, t$13) {
	if (e$4.original !== t$13 && (e$4.original = t$13, t$13)) {
		let a$13 = t$13.emitNode;
		a$13 && (e$4.emitNode = $b(a$13, e$4.emitNode));
	}
	return e$4;
}
function $b(e$4, t$13) {
	let { flags: a$13, internalFlags: o$9, leadingComments: m$11, trailingComments: v$5, commentRange: E$3, sourceMapRange: C$3, tokenSourceMapRanges: c$3, constantValue: W$2, helpers: h$3, startsOnNewLine: y$7, snippetElement: g$2, classThis: x$3, assignedName: N$5 } = e$4;
	if (t$13 || (t$13 = {}), a$13 && (t$13.flags = a$13), o$9 && (t$13.internalFlags = o$9 & -9), m$11 && (t$13.leadingComments = Nn$2(m$11.slice(), t$13.leadingComments)), v$5 && (t$13.trailingComments = Nn$2(v$5.slice(), t$13.trailingComments)), E$3 && (t$13.commentRange = E$3), C$3 && (t$13.sourceMapRange = C$3), c$3 && (t$13.tokenSourceMapRanges = Qb(c$3, t$13.tokenSourceMapRanges)), W$2 !== void 0 && (t$13.constantValue = W$2), h$3) for (let te$5 of h$3) t$13.helpers = Ey(t$13.helpers, te$5);
	return y$7 !== void 0 && (t$13.startsOnNewLine = y$7), g$2 !== void 0 && (t$13.snippetElement = g$2), x$3 && (t$13.classThis = x$3), N$5 && (t$13.assignedName = N$5), t$13;
}
function Qb(e$4, t$13) {
	t$13 || (t$13 = []);
	for (let a$13 in e$4) t$13[a$13] = e$4[a$13];
	return t$13;
}
function na(e$4) {
	return e$4.kind === 9;
}
function O1(e$4) {
	return e$4.kind === 10;
}
function Si$1(e$4) {
	return e$4.kind === 11;
}
function M1(e$4) {
	return e$4.kind === 15;
}
function Kb(e$4) {
	return e$4.kind === 28;
}
function Kd(e$4) {
	return e$4.kind === 54;
}
function Zd(e$4) {
	return e$4.kind === 58;
}
function Ze$2(e$4) {
	return e$4.kind === 80;
}
function vi$1(e$4) {
	return e$4.kind === 81;
}
function Zb(e$4) {
	return e$4.kind === 95;
}
function ol(e$4) {
	return e$4.kind === 134;
}
function Cp(e$4) {
	return e$4.kind === 108;
}
function e6(e$4) {
	return e$4.kind === 102;
}
function L1(e$4) {
	return e$4.kind === 166;
}
function kf(e$4) {
	return e$4.kind === 167;
}
function Ef(e$4) {
	return e$4.kind === 168;
}
function g_(e$4) {
	return e$4.kind === 169;
}
function Cl(e$4) {
	return e$4.kind === 170;
}
function J1(e$4) {
	return e$4.kind === 171;
}
function Ya(e$4) {
	return e$4.kind === 172;
}
function j1(e$4) {
	return e$4.kind === 173;
}
function b_(e$4) {
	return e$4.kind === 174;
}
function Af(e$4) {
	return e$4.kind === 176;
}
function vl(e$4) {
	return e$4.kind === 177;
}
function v_(e$4) {
	return e$4.kind === 178;
}
function R1(e$4) {
	return e$4.kind === 179;
}
function U1(e$4) {
	return e$4.kind === 180;
}
function Cf(e$4) {
	return e$4.kind === 181;
}
function B1(e$4) {
	return e$4.kind === 182;
}
function Df(e$4) {
	return e$4.kind === 183;
}
function Pf(e$4) {
	return e$4.kind === 184;
}
function Nf(e$4) {
	return e$4.kind === 185;
}
function t6(e$4) {
	return e$4.kind === 186;
}
function q1(e$4) {
	return e$4.kind === 187;
}
function n6(e$4) {
	return e$4.kind === 188;
}
function r6(e$4) {
	return e$4.kind === 189;
}
function F1(e$4) {
	return e$4.kind === 202;
}
function i6(e$4) {
	return e$4.kind === 190;
}
function a6(e$4) {
	return e$4.kind === 191;
}
function z1(e$4) {
	return e$4.kind === 192;
}
function V1(e$4) {
	return e$4.kind === 193;
}
function s6(e$4) {
	return e$4.kind === 194;
}
function _6(e$4) {
	return e$4.kind === 195;
}
function W1(e$4) {
	return e$4.kind === 196;
}
function o6(e$4) {
	return e$4.kind === 197;
}
function G1(e$4) {
	return e$4.kind === 198;
}
function c6(e$4) {
	return e$4.kind === 199;
}
function Y1(e$4) {
	return e$4.kind === 200;
}
function l6(e$4) {
	return e$4.kind === 201;
}
function u6(e$4) {
	return e$4.kind === 205;
}
function H1(e$4) {
	return e$4.kind === 208;
}
function X1(e$4) {
	return e$4.kind === 209;
}
function If(e$4) {
	return e$4.kind === 210;
}
function dr$2(e$4) {
	return e$4.kind === 211;
}
function $a(e$4) {
	return e$4.kind === 212;
}
function Of(e$4) {
	return e$4.kind === 213;
}
function $1(e$4) {
	return e$4.kind === 215;
}
function Dl(e$4) {
	return e$4.kind === 217;
}
function Mf(e$4) {
	return e$4.kind === 218;
}
function Lf(e$4) {
	return e$4.kind === 219;
}
function p6(e$4) {
	return e$4.kind === 222;
}
function Q1(e$4) {
	return e$4.kind === 224;
}
function ea(e$4) {
	return e$4.kind === 226;
}
function K1(e$4) {
	return e$4.kind === 230;
}
function Tl(e$4) {
	return e$4.kind === 231;
}
function Z1(e$4) {
	return e$4.kind === 232;
}
function eh(e$4) {
	return e$4.kind === 233;
}
function pl(e$4) {
	return e$4.kind === 235;
}
function f6(e$4) {
	return e$4.kind === 236;
}
function d6(e$4) {
	return e$4.kind === 356;
}
function Qa$1(e$4) {
	return e$4.kind === 243;
}
function Pl(e$4) {
	return e$4.kind === 244;
}
function th(e$4) {
	return e$4.kind === 256;
}
function Jf(e$4) {
	return e$4.kind === 260;
}
function nh(e$4) {
	return e$4.kind === 261;
}
function jf(e$4) {
	return e$4.kind === 262;
}
function Ha$1(e$4) {
	return e$4.kind === 263;
}
function w_(e$4) {
	return e$4.kind === 264;
}
function Nl(e$4) {
	return e$4.kind === 265;
}
function rh(e$4) {
	return e$4.kind === 266;
}
function wi$1(e$4) {
	return e$4.kind === 267;
}
function Rf(e$4) {
	return e$4.kind === 271;
}
function Uf(e$4) {
	return e$4.kind === 272;
}
function Bf(e$4) {
	return e$4.kind === 277;
}
function qf(e$4) {
	return e$4.kind === 278;
}
function ih(e$4) {
	return e$4.kind === 279;
}
function m6(e$4) {
	return e$4.kind === 353;
}
function Ff(e$4) {
	return e$4.kind === 283;
}
function zp(e$4) {
	return e$4.kind === 286;
}
function h6(e$4) {
	return e$4.kind === 289;
}
function ah(e$4) {
	return e$4.kind === 295;
}
function y6(e$4) {
	return e$4.kind === 297;
}
function sh(e$4) {
	return e$4.kind === 303;
}
function _h(e$4) {
	return e$4.kind === 307;
}
function oh(e$4) {
	return e$4.kind === 309;
}
function ch(e$4) {
	return e$4.kind === 314;
}
function lh(e$4) {
	return e$4.kind === 317;
}
function uh(e$4) {
	return e$4.kind === 320;
}
function g6(e$4) {
	return e$4.kind === 322;
}
function Il(e$4) {
	return e$4.kind === 323;
}
function b6(e$4) {
	return e$4.kind === 328;
}
function v6(e$4) {
	return e$4.kind === 333;
}
function T6(e$4) {
	return e$4.kind === 334;
}
function x6(e$4) {
	return e$4.kind === 335;
}
function S6(e$4) {
	return e$4.kind === 336;
}
function w6(e$4) {
	return e$4.kind === 337;
}
function k6(e$4) {
	return e$4.kind === 339;
}
function E6(e$4) {
	return e$4.kind === 331;
}
function Vp(e$4) {
	return e$4.kind === 341;
}
function A6(e$4) {
	return e$4.kind === 342;
}
function zf(e$4) {
	return e$4.kind === 344;
}
function ph(e$4) {
	return e$4.kind === 345;
}
function C6(e$4) {
	return e$4.kind === 329;
}
function D6(e$4) {
	return e$4.kind === 350;
}
var Ki$1 = /* @__PURE__ */ new WeakMap();
function fh(e$4, t$13) {
	var a$13;
	let o$9 = e$4.kind;
	return ff(o$9) ? o$9 === 352 ? e$4._children : (a$13 = Ki$1.get(t$13)) == null ? void 0 : a$13.get(e$4) : bt$2;
}
function P6(e$4, t$13, a$13) {
	e$4.kind === 352 && B$2.fail("Should not need to re-set the children of a SyntaxList.");
	let o$9 = Ki$1.get(t$13);
	return o$9 === void 0 && (o$9 = /* @__PURE__ */ new WeakMap(), Ki$1.set(t$13, o$9)), o$9.set(e$4, a$13), a$13;
}
function em(e$4, t$13) {
	var a$13;
	e$4.kind === 352 && B$2.fail("Did not expect to unset the children of a SyntaxList."), (a$13 = Ki$1.get(t$13)) == null || a$13.delete(e$4);
}
function N6(e$4, t$13) {
	let a$13 = Ki$1.get(e$4);
	a$13 !== void 0 && (Ki$1.delete(e$4), Ki$1.set(t$13, a$13));
}
function tm(e$4) {
	return (Wa$1(e$4) & 32768) !== 0;
}
function I6(e$4) {
	return Si$1(e$4.expression) && e$4.expression.text === "use strict";
}
function O6(e$4) {
	for (let t$13 of e$4) if (ul(t$13)) {
		if (I6(t$13)) return t$13;
	} else break;
}
function M6(e$4) {
	return Dl(e$4) && ta(e$4) && !!Wg(e$4);
}
function dh(e$4, t$13 = 63) {
	switch (e$4.kind) {
		case 217: return t$13 & -2147483648 && M6(e$4) ? !1 : (t$13 & 1) !== 0;
		case 216:
		case 234: return (t$13 & 2) !== 0;
		case 238: return (t$13 & 34) !== 0;
		case 233: return (t$13 & 16) !== 0;
		case 235: return (t$13 & 4) !== 0;
		case 355: return (t$13 & 8) !== 0;
	}
	return !1;
}
function Vf(e$4, t$13 = 63) {
	for (; dh(e$4, t$13);) e$4 = e$4.expression;
	return e$4;
}
function L6(e$4) {
	return setStartsOnNewLine(e$4, !0);
}
function __(e$4) {
	if (_2(e$4)) return e$4.name;
	if (i2(e$4)) {
		switch (e$4.kind) {
			case 303: return __(e$4.initializer);
			case 304: return e$4.name;
			case 305: return __(e$4.expression);
		}
		return;
	}
	return bl(e$4, !0) ? __(e$4.left) : K1(e$4) ? __(e$4.expression) : e$4;
}
function J6(e$4) {
	switch (e$4.kind) {
		case 206:
		case 207:
		case 209: return e$4.elements;
		case 210: return e$4.properties;
	}
}
function nm(e$4) {
	if (e$4) {
		let t$13 = e$4;
		for (;;) {
			if (Ze$2(t$13) || !t$13.body) return Ze$2(t$13) ? t$13 : t$13.name;
			t$13 = t$13.body;
		}
	}
}
var rm;
((e$4) => {
	function t$13(h$3, y$7, g$2, x$3, N$5, te$5, ue$4) {
		let ye$4 = y$7 > 0 ? N$5[y$7 - 1] : void 0;
		return B$2.assertEqual(g$2[y$7], t$13), N$5[y$7] = h$3.onEnter(x$3[y$7], ye$4, ue$4), g$2[y$7] = C$3(h$3, t$13), y$7;
	}
	e$4.enter = t$13;
	function a$13(h$3, y$7, g$2, x$3, N$5, te$5, ue$4) {
		B$2.assertEqual(g$2[y$7], a$13), B$2.assertIsDefined(h$3.onLeft), g$2[y$7] = C$3(h$3, a$13);
		let ye$4 = h$3.onLeft(x$3[y$7].left, N$5[y$7], x$3[y$7]);
		return ye$4 ? (W$2(y$7, x$3, ye$4), c$3(y$7, g$2, x$3, N$5, ye$4)) : y$7;
	}
	e$4.left = a$13;
	function o$9(h$3, y$7, g$2, x$3, N$5, te$5, ue$4) {
		return B$2.assertEqual(g$2[y$7], o$9), B$2.assertIsDefined(h$3.onOperator), g$2[y$7] = C$3(h$3, o$9), h$3.onOperator(x$3[y$7].operatorToken, N$5[y$7], x$3[y$7]), y$7;
	}
	e$4.operator = o$9;
	function m$11(h$3, y$7, g$2, x$3, N$5, te$5, ue$4) {
		B$2.assertEqual(g$2[y$7], m$11), B$2.assertIsDefined(h$3.onRight), g$2[y$7] = C$3(h$3, m$11);
		let ye$4 = h$3.onRight(x$3[y$7].right, N$5[y$7], x$3[y$7]);
		return ye$4 ? (W$2(y$7, x$3, ye$4), c$3(y$7, g$2, x$3, N$5, ye$4)) : y$7;
	}
	e$4.right = m$11;
	function v$5(h$3, y$7, g$2, x$3, N$5, te$5, ue$4) {
		B$2.assertEqual(g$2[y$7], v$5), g$2[y$7] = C$3(h$3, v$5);
		let ye$4 = h$3.onExit(x$3[y$7], N$5[y$7]);
		if (y$7 > 0) {
			if (y$7--, h$3.foldState) {
				let fe$4 = g$2[y$7] === v$5 ? "right" : "left";
				N$5[y$7] = h$3.foldState(N$5[y$7], ye$4, fe$4);
			}
		} else te$5.value = ye$4;
		return y$7;
	}
	e$4.exit = v$5;
	function E$3(h$3, y$7, g$2, x$3, N$5, te$5, ue$4) {
		return B$2.assertEqual(g$2[y$7], E$3), y$7;
	}
	e$4.done = E$3;
	function C$3(h$3, y$7) {
		switch (y$7) {
			case t$13: if (h$3.onLeft) return a$13;
			case a$13: if (h$3.onOperator) return o$9;
			case o$9: if (h$3.onRight) return m$11;
			case m$11: return v$5;
			case v$5: return E$3;
			case E$3: return E$3;
			default: B$2.fail("Invalid state");
		}
	}
	e$4.nextState = C$3;
	function c$3(h$3, y$7, g$2, x$3, N$5) {
		return h$3++, y$7[h$3] = t$13, g$2[h$3] = N$5, x$3[h$3] = void 0, h$3;
	}
	function W$2(h$3, y$7, g$2) {
		if (B$2.shouldAssert(2)) for (; h$3 >= 0;) B$2.assert(y$7[h$3] !== g$2, "Circular traversal detected."), h$3--;
	}
})(rm || (rm = {}));
function im(e$4, t$13) {
	return typeof e$4 == "object" ? Wp(!1, e$4.prefix, e$4.node, e$4.suffix, t$13) : typeof e$4 == "string" ? e$4.length > 0 && e$4.charCodeAt(0) === 35 ? e$4.slice(1) : e$4 : "";
}
function j6(e$4, t$13) {
	return typeof e$4 == "string" ? e$4 : R6(e$4, B$2.checkDefined(t$13));
}
function R6(e$4, t$13) {
	return l1(e$4) ? t$13(e$4).slice(1) : qa$1(e$4) ? t$13(e$4) : vi$1(e$4) ? e$4.escapedText.slice(1) : In$1(e$4);
}
function Wp(e$4, t$13, a$13, o$9, m$11) {
	return t$13 = im(t$13, m$11), o$9 = im(o$9, m$11), a$13 = j6(a$13, m$11), `${e$4 ? "#" : ""}${t$13}${a$13}${o$9}`;
}
function mh(e$4) {
	if (e$4.transformFlags & 65536) return !0;
	if (e$4.transformFlags & 128) for (let t$13 of J6(e$4)) {
		let a$13 = __(t$13);
		if (a$13 && s2(a$13) && (a$13.transformFlags & 65536 || a$13.transformFlags & 128 && mh(a$13))) return !0;
	}
	return !1;
}
function gn$2(e$4, t$13) {
	return t$13 ? bi$1(e$4, t$13.pos, t$13.end) : e$4;
}
function Ol(e$4) {
	let t$13 = e$4.kind;
	return t$13 === 168 || t$13 === 169 || t$13 === 171 || t$13 === 172 || t$13 === 173 || t$13 === 174 || t$13 === 176 || t$13 === 177 || t$13 === 178 || t$13 === 181 || t$13 === 185 || t$13 === 218 || t$13 === 219 || t$13 === 231 || t$13 === 243 || t$13 === 262 || t$13 === 263 || t$13 === 264 || t$13 === 265 || t$13 === 266 || t$13 === 267 || t$13 === 271 || t$13 === 272 || t$13 === 277 || t$13 === 278;
}
function Wf(e$4) {
	let t$13 = e$4.kind;
	return t$13 === 169 || t$13 === 172 || t$13 === 174 || t$13 === 177 || t$13 === 178 || t$13 === 231 || t$13 === 263;
}
var am, sm, _m, om, cm;
wf(1, {
	createBaseSourceFileNode: (e$4) => new (cm || (cm = (At$2.getSourceFileConstructor())))(e$4, -1, -1),
	createBaseIdentifierNode: (e$4) => new (_m || (_m = (At$2.getIdentifierConstructor())))(e$4, -1, -1),
	createBasePrivateIdentifierNode: (e$4) => new (om || (om = (At$2.getPrivateIdentifierConstructor())))(e$4, -1, -1),
	createBaseTokenNode: (e$4) => new (sm || (sm = (At$2.getTokenConstructor())))(e$4, -1, -1),
	createBaseNode: (e$4) => new (am || (am = (At$2.getNodeConstructor())))(e$4, -1, -1)
});
function k$2(e$4, t$13) {
	return t$13 && e$4(t$13);
}
function ae$1(e$4, t$13, a$13) {
	if (a$13) {
		if (t$13) return t$13(a$13);
		for (let o$9 of a$13) {
			let m$11 = e$4(o$9);
			if (m$11) return m$11;
		}
	}
}
function B6(e$4, t$13) {
	return e$4.charCodeAt(t$13 + 1) === 42 && e$4.charCodeAt(t$13 + 2) === 42 && e$4.charCodeAt(t$13 + 3) !== 47;
}
function q6(e$4) {
	return qn$1(e$4.statements, F6) || z6(e$4);
}
function F6(e$4) {
	return Ol(e$4) && V6(e$4, 95) || Rf(e$4) && Ff(e$4.moduleReference) || Uf(e$4) || Bf(e$4) || qf(e$4) ? e$4 : void 0;
}
function z6(e$4) {
	return e$4.flags & 8388608 ? hh(e$4) : void 0;
}
function hh(e$4) {
	return W6(e$4) ? e$4 : Ht$1(e$4, hh);
}
function V6(e$4, t$13) {
	return nn$2(e$4.modifiers, (a$13) => a$13.kind === t$13);
}
function W6(e$4) {
	return f6(e$4) && e$4.keywordToken === 102 && e$4.name.escapedText === "meta";
}
var G6 = {
	166: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.left) || k$2(a$13, t$13.right);
	},
	168: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.name) || k$2(a$13, t$13.constraint) || k$2(a$13, t$13.default) || k$2(a$13, t$13.expression);
	},
	304: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.name) || k$2(a$13, t$13.questionToken) || k$2(a$13, t$13.exclamationToken) || k$2(a$13, t$13.equalsToken) || k$2(a$13, t$13.objectAssignmentInitializer);
	},
	305: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression);
	},
	169: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.dotDotDotToken) || k$2(a$13, t$13.name) || k$2(a$13, t$13.questionToken) || k$2(a$13, t$13.type) || k$2(a$13, t$13.initializer);
	},
	172: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.name) || k$2(a$13, t$13.questionToken) || k$2(a$13, t$13.exclamationToken) || k$2(a$13, t$13.type) || k$2(a$13, t$13.initializer);
	},
	171: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.name) || k$2(a$13, t$13.questionToken) || k$2(a$13, t$13.type) || k$2(a$13, t$13.initializer);
	},
	303: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.name) || k$2(a$13, t$13.questionToken) || k$2(a$13, t$13.exclamationToken) || k$2(a$13, t$13.initializer);
	},
	260: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.name) || k$2(a$13, t$13.exclamationToken) || k$2(a$13, t$13.type) || k$2(a$13, t$13.initializer);
	},
	208: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.dotDotDotToken) || k$2(a$13, t$13.propertyName) || k$2(a$13, t$13.name) || k$2(a$13, t$13.initializer);
	},
	181: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || ae$1(a$13, o$9, t$13.typeParameters) || ae$1(a$13, o$9, t$13.parameters) || k$2(a$13, t$13.type);
	},
	185: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || ae$1(a$13, o$9, t$13.typeParameters) || ae$1(a$13, o$9, t$13.parameters) || k$2(a$13, t$13.type);
	},
	184: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || ae$1(a$13, o$9, t$13.typeParameters) || ae$1(a$13, o$9, t$13.parameters) || k$2(a$13, t$13.type);
	},
	179: lm,
	180: lm,
	174: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.asteriskToken) || k$2(a$13, t$13.name) || k$2(a$13, t$13.questionToken) || k$2(a$13, t$13.exclamationToken) || ae$1(a$13, o$9, t$13.typeParameters) || ae$1(a$13, o$9, t$13.parameters) || k$2(a$13, t$13.type) || k$2(a$13, t$13.body);
	},
	173: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.name) || k$2(a$13, t$13.questionToken) || ae$1(a$13, o$9, t$13.typeParameters) || ae$1(a$13, o$9, t$13.parameters) || k$2(a$13, t$13.type);
	},
	176: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.name) || ae$1(a$13, o$9, t$13.typeParameters) || ae$1(a$13, o$9, t$13.parameters) || k$2(a$13, t$13.type) || k$2(a$13, t$13.body);
	},
	177: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.name) || ae$1(a$13, o$9, t$13.typeParameters) || ae$1(a$13, o$9, t$13.parameters) || k$2(a$13, t$13.type) || k$2(a$13, t$13.body);
	},
	178: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.name) || ae$1(a$13, o$9, t$13.typeParameters) || ae$1(a$13, o$9, t$13.parameters) || k$2(a$13, t$13.type) || k$2(a$13, t$13.body);
	},
	262: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.asteriskToken) || k$2(a$13, t$13.name) || ae$1(a$13, o$9, t$13.typeParameters) || ae$1(a$13, o$9, t$13.parameters) || k$2(a$13, t$13.type) || k$2(a$13, t$13.body);
	},
	218: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.asteriskToken) || k$2(a$13, t$13.name) || ae$1(a$13, o$9, t$13.typeParameters) || ae$1(a$13, o$9, t$13.parameters) || k$2(a$13, t$13.type) || k$2(a$13, t$13.body);
	},
	219: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || ae$1(a$13, o$9, t$13.typeParameters) || ae$1(a$13, o$9, t$13.parameters) || k$2(a$13, t$13.type) || k$2(a$13, t$13.equalsGreaterThanToken) || k$2(a$13, t$13.body);
	},
	175: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.body);
	},
	183: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.typeName) || ae$1(a$13, o$9, t$13.typeArguments);
	},
	182: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.assertsModifier) || k$2(a$13, t$13.parameterName) || k$2(a$13, t$13.type);
	},
	186: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.exprName) || ae$1(a$13, o$9, t$13.typeArguments);
	},
	187: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.members);
	},
	188: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.elementType);
	},
	189: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.elements);
	},
	192: um,
	193: um,
	194: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.checkType) || k$2(a$13, t$13.extendsType) || k$2(a$13, t$13.trueType) || k$2(a$13, t$13.falseType);
	},
	195: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.typeParameter);
	},
	205: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.argument) || k$2(a$13, t$13.attributes) || k$2(a$13, t$13.qualifier) || ae$1(a$13, o$9, t$13.typeArguments);
	},
	302: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.assertClause);
	},
	196: pm,
	198: pm,
	199: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.objectType) || k$2(a$13, t$13.indexType);
	},
	200: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.readonlyToken) || k$2(a$13, t$13.typeParameter) || k$2(a$13, t$13.nameType) || k$2(a$13, t$13.questionToken) || k$2(a$13, t$13.type) || ae$1(a$13, o$9, t$13.members);
	},
	201: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.literal);
	},
	202: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.dotDotDotToken) || k$2(a$13, t$13.name) || k$2(a$13, t$13.questionToken) || k$2(a$13, t$13.type);
	},
	206: fm,
	207: fm,
	209: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.elements);
	},
	210: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.properties);
	},
	211: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression) || k$2(a$13, t$13.questionDotToken) || k$2(a$13, t$13.name);
	},
	212: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression) || k$2(a$13, t$13.questionDotToken) || k$2(a$13, t$13.argumentExpression);
	},
	213: dm,
	214: dm,
	215: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.tag) || k$2(a$13, t$13.questionDotToken) || ae$1(a$13, o$9, t$13.typeArguments) || k$2(a$13, t$13.template);
	},
	216: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.type) || k$2(a$13, t$13.expression);
	},
	217: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression);
	},
	220: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression);
	},
	221: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression);
	},
	222: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression);
	},
	224: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.operand);
	},
	229: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.asteriskToken) || k$2(a$13, t$13.expression);
	},
	223: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression);
	},
	225: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.operand);
	},
	226: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.left) || k$2(a$13, t$13.operatorToken) || k$2(a$13, t$13.right);
	},
	234: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression) || k$2(a$13, t$13.type);
	},
	235: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression);
	},
	238: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression) || k$2(a$13, t$13.type);
	},
	236: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.name);
	},
	227: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.condition) || k$2(a$13, t$13.questionToken) || k$2(a$13, t$13.whenTrue) || k$2(a$13, t$13.colonToken) || k$2(a$13, t$13.whenFalse);
	},
	230: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression);
	},
	241: mm,
	268: mm,
	307: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.statements) || k$2(a$13, t$13.endOfFileToken);
	},
	243: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.declarationList);
	},
	261: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.declarations);
	},
	244: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression);
	},
	245: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression) || k$2(a$13, t$13.thenStatement) || k$2(a$13, t$13.elseStatement);
	},
	246: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.statement) || k$2(a$13, t$13.expression);
	},
	247: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression) || k$2(a$13, t$13.statement);
	},
	248: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.initializer) || k$2(a$13, t$13.condition) || k$2(a$13, t$13.incrementor) || k$2(a$13, t$13.statement);
	},
	249: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.initializer) || k$2(a$13, t$13.expression) || k$2(a$13, t$13.statement);
	},
	250: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.awaitModifier) || k$2(a$13, t$13.initializer) || k$2(a$13, t$13.expression) || k$2(a$13, t$13.statement);
	},
	251: hm,
	252: hm,
	253: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression);
	},
	254: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression) || k$2(a$13, t$13.statement);
	},
	255: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression) || k$2(a$13, t$13.caseBlock);
	},
	269: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.clauses);
	},
	296: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression) || ae$1(a$13, o$9, t$13.statements);
	},
	297: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.statements);
	},
	256: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.label) || k$2(a$13, t$13.statement);
	},
	257: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression);
	},
	258: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.tryBlock) || k$2(a$13, t$13.catchClause) || k$2(a$13, t$13.finallyBlock);
	},
	299: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.variableDeclaration) || k$2(a$13, t$13.block);
	},
	170: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression);
	},
	263: ym$1,
	231: ym$1,
	264: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.name) || ae$1(a$13, o$9, t$13.typeParameters) || ae$1(a$13, o$9, t$13.heritageClauses) || ae$1(a$13, o$9, t$13.members);
	},
	265: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.name) || ae$1(a$13, o$9, t$13.typeParameters) || k$2(a$13, t$13.type);
	},
	266: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.name) || ae$1(a$13, o$9, t$13.members);
	},
	306: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.name) || k$2(a$13, t$13.initializer);
	},
	267: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.name) || k$2(a$13, t$13.body);
	},
	271: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.name) || k$2(a$13, t$13.moduleReference);
	},
	272: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.importClause) || k$2(a$13, t$13.moduleSpecifier) || k$2(a$13, t$13.attributes);
	},
	273: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.name) || k$2(a$13, t$13.namedBindings);
	},
	300: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.elements);
	},
	301: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.name) || k$2(a$13, t$13.value);
	},
	270: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.name);
	},
	274: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.name);
	},
	280: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.name);
	},
	275: gm,
	279: gm,
	278: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.exportClause) || k$2(a$13, t$13.moduleSpecifier) || k$2(a$13, t$13.attributes);
	},
	276: bm,
	281: bm,
	277: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers) || k$2(a$13, t$13.expression);
	},
	228: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.head) || ae$1(a$13, o$9, t$13.templateSpans);
	},
	239: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression) || k$2(a$13, t$13.literal);
	},
	203: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.head) || ae$1(a$13, o$9, t$13.templateSpans);
	},
	204: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.type) || k$2(a$13, t$13.literal);
	},
	167: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression);
	},
	298: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.types);
	},
	233: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression) || ae$1(a$13, o$9, t$13.typeArguments);
	},
	283: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression);
	},
	282: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.modifiers);
	},
	356: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.elements);
	},
	284: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.openingElement) || ae$1(a$13, o$9, t$13.children) || k$2(a$13, t$13.closingElement);
	},
	288: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.openingFragment) || ae$1(a$13, o$9, t$13.children) || k$2(a$13, t$13.closingFragment);
	},
	285: vm,
	286: vm,
	292: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.properties);
	},
	291: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.name) || k$2(a$13, t$13.initializer);
	},
	293: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.expression);
	},
	294: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.dotDotDotToken) || k$2(a$13, t$13.expression);
	},
	287: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.tagName);
	},
	295: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.namespace) || k$2(a$13, t$13.name);
	},
	190: Gi$1,
	191: Gi$1,
	309: Gi$1,
	315: Gi$1,
	314: Gi$1,
	316: Gi$1,
	318: Gi$1,
	317: function(t$13, a$13, o$9) {
		return ae$1(a$13, o$9, t$13.parameters) || k$2(a$13, t$13.type);
	},
	320: function(t$13, a$13, o$9) {
		return (typeof t$13.comment == "string" ? void 0 : ae$1(a$13, o$9, t$13.comment)) || ae$1(a$13, o$9, t$13.tags);
	},
	347: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.tagName) || k$2(a$13, t$13.name) || (typeof t$13.comment == "string" ? void 0 : ae$1(a$13, o$9, t$13.comment));
	},
	310: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.name);
	},
	311: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.left) || k$2(a$13, t$13.right);
	},
	341: Tm,
	348: Tm,
	330: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.tagName) || (typeof t$13.comment == "string" ? void 0 : ae$1(a$13, o$9, t$13.comment));
	},
	329: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.tagName) || k$2(a$13, t$13.class) || (typeof t$13.comment == "string" ? void 0 : ae$1(a$13, o$9, t$13.comment));
	},
	328: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.tagName) || k$2(a$13, t$13.class) || (typeof t$13.comment == "string" ? void 0 : ae$1(a$13, o$9, t$13.comment));
	},
	345: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.tagName) || k$2(a$13, t$13.constraint) || ae$1(a$13, o$9, t$13.typeParameters) || (typeof t$13.comment == "string" ? void 0 : ae$1(a$13, o$9, t$13.comment));
	},
	346: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.tagName) || (t$13.typeExpression && t$13.typeExpression.kind === 309 ? k$2(a$13, t$13.typeExpression) || k$2(a$13, t$13.fullName) || (typeof t$13.comment == "string" ? void 0 : ae$1(a$13, o$9, t$13.comment)) : k$2(a$13, t$13.fullName) || k$2(a$13, t$13.typeExpression) || (typeof t$13.comment == "string" ? void 0 : ae$1(a$13, o$9, t$13.comment)));
	},
	338: function(t$13, a$13, o$9) {
		return k$2(a$13, t$13.tagName) || k$2(a$13, t$13.fullName) || k$2(a$13, t$13.typeExpression) || (typeof t$13.comment == "string" ? void 0 : ae$1(a$13, o$9, t$13.comment));
	},
	342: Yi$1,
	344: Yi$1,
	343: Yi$1,
	340: Yi$1,
	350: Yi$1,
	349: Yi$1,
	339: Yi$1,
	323: function(t$13, a$13, o$9) {
		return qn$1(t$13.typeParameters, a$13) || qn$1(t$13.parameters, a$13) || k$2(a$13, t$13.type);
	},
	324: Dp,
	325: Dp,
	326: Dp,
	322: function(t$13, a$13, o$9) {
		return qn$1(t$13.jsDocPropertyTags, a$13);
	},
	327: fi$1,
	332: fi$1,
	333: fi$1,
	334: fi$1,
	335: fi$1,
	336: fi$1,
	331: fi$1,
	337: fi$1,
	351: Y6,
	355: H6
};
function lm(e$4, t$13, a$13) {
	return ae$1(t$13, a$13, e$4.typeParameters) || ae$1(t$13, a$13, e$4.parameters) || k$2(t$13, e$4.type);
}
function um(e$4, t$13, a$13) {
	return ae$1(t$13, a$13, e$4.types);
}
function pm(e$4, t$13, a$13) {
	return k$2(t$13, e$4.type);
}
function fm(e$4, t$13, a$13) {
	return ae$1(t$13, a$13, e$4.elements);
}
function dm(e$4, t$13, a$13) {
	return k$2(t$13, e$4.expression) || k$2(t$13, e$4.questionDotToken) || ae$1(t$13, a$13, e$4.typeArguments) || ae$1(t$13, a$13, e$4.arguments);
}
function mm(e$4, t$13, a$13) {
	return ae$1(t$13, a$13, e$4.statements);
}
function hm(e$4, t$13, a$13) {
	return k$2(t$13, e$4.label);
}
function ym$1(e$4, t$13, a$13) {
	return ae$1(t$13, a$13, e$4.modifiers) || k$2(t$13, e$4.name) || ae$1(t$13, a$13, e$4.typeParameters) || ae$1(t$13, a$13, e$4.heritageClauses) || ae$1(t$13, a$13, e$4.members);
}
function gm(e$4, t$13, a$13) {
	return ae$1(t$13, a$13, e$4.elements);
}
function bm(e$4, t$13, a$13) {
	return k$2(t$13, e$4.propertyName) || k$2(t$13, e$4.name);
}
function vm(e$4, t$13, a$13) {
	return k$2(t$13, e$4.tagName) || ae$1(t$13, a$13, e$4.typeArguments) || k$2(t$13, e$4.attributes);
}
function Gi$1(e$4, t$13, a$13) {
	return k$2(t$13, e$4.type);
}
function Tm(e$4, t$13, a$13) {
	return k$2(t$13, e$4.tagName) || (e$4.isNameFirst ? k$2(t$13, e$4.name) || k$2(t$13, e$4.typeExpression) : k$2(t$13, e$4.typeExpression) || k$2(t$13, e$4.name)) || (typeof e$4.comment == "string" ? void 0 : ae$1(t$13, a$13, e$4.comment));
}
function Yi$1(e$4, t$13, a$13) {
	return k$2(t$13, e$4.tagName) || k$2(t$13, e$4.typeExpression) || (typeof e$4.comment == "string" ? void 0 : ae$1(t$13, a$13, e$4.comment));
}
function Dp(e$4, t$13, a$13) {
	return k$2(t$13, e$4.name);
}
function fi$1(e$4, t$13, a$13) {
	return k$2(t$13, e$4.tagName) || (typeof e$4.comment == "string" ? void 0 : ae$1(t$13, a$13, e$4.comment));
}
function Y6(e$4, t$13, a$13) {
	return k$2(t$13, e$4.tagName) || k$2(t$13, e$4.importClause) || k$2(t$13, e$4.moduleSpecifier) || k$2(t$13, e$4.attributes) || (typeof e$4.comment == "string" ? void 0 : ae$1(t$13, a$13, e$4.comment));
}
function H6(e$4, t$13, a$13) {
	return k$2(t$13, e$4.expression);
}
function Ht$1(e$4, t$13, a$13) {
	if (e$4 === void 0 || e$4.kind <= 165) return;
	let o$9 = G6[e$4.kind];
	return o$9 === void 0 ? void 0 : o$9(e$4, t$13, a$13);
}
function xm(e$4, t$13, a$13) {
	let o$9 = Sm(e$4), m$11 = [];
	for (; m$11.length < o$9.length;) m$11.push(e$4);
	for (; o$9.length !== 0;) {
		let v$5 = o$9.pop(), E$3 = m$11.pop();
		if (Qr$2(v$5)) {
			if (a$13) {
				let C$3 = a$13(v$5, E$3);
				if (C$3) {
					if (C$3 === "skip") continue;
					return C$3;
				}
			}
			for (let C$3 = v$5.length - 1; C$3 >= 0; --C$3) o$9.push(v$5[C$3]), m$11.push(E$3);
		} else {
			let C$3 = t$13(v$5, E$3);
			if (C$3) {
				if (C$3 === "skip") continue;
				return C$3;
			}
			if (v$5.kind >= 166) for (let c$3 of Sm(v$5)) o$9.push(c$3), m$11.push(v$5);
		}
	}
}
function Sm(e$4) {
	let t$13 = [];
	return Ht$1(e$4, a$13, a$13), t$13;
	function a$13(o$9) {
		t$13.unshift(o$9);
	}
}
function yh(e$4) {
	e$4.externalModuleIndicator = q6(e$4);
}
function gh(e$4, t$13, a$13, o$9 = !1, m$11) {
	var v$5, E$3;
	(v$5 = cl) == null || v$5.push(cl.Phase.Parse, "createSourceFile", { path: e$4 }, !0), Ad("beforeParse");
	let C$3, { languageVersion: c$3, setExternalModuleIndicator: W$2, impliedNodeFormat: h$3, jsDocParsingMode: y$7 } = typeof a$13 == "object" ? a$13 : { languageVersion: a$13 };
	if (c$3 === 100) C$3 = Zi$1.parseSourceFile(e$4, t$13, c$3, void 0, o$9, 6, Ga$1, y$7);
	else {
		let g$2 = h$3 === void 0 ? W$2 : (x$3) => (x$3.impliedNodeFormat = h$3, (W$2 || yh)(x$3));
		C$3 = Zi$1.parseSourceFile(e$4, t$13, c$3, void 0, o$9, m$11, g$2, y$7);
	}
	return Ad("afterParse"), Yy("Parse", "beforeParse", "afterParse"), (E$3 = cl) == null || E$3.pop(), C$3;
}
function bh(e$4) {
	return e$4.externalModuleIndicator !== void 0;
}
function X6(e$4, t$13, a$13, o$9 = !1) {
	let m$11 = xl.updateSourceFile(e$4, t$13, a$13, o$9);
	return m$11.flags |= e$4.flags & 12582912, m$11;
}
var Zi$1;
((e$4) => {
	var t$13 = _f(99, !0), a$13 = 40960, o$9, m$11, v$5, E$3, C$3;
	function c$3(_$2) {
		return sr$5++, _$2;
	}
	var W$2 = {
		createBaseSourceFileNode: (_$2) => c$3(new C$3(_$2, 0, 0)),
		createBaseIdentifierNode: (_$2) => c$3(new v$5(_$2, 0, 0)),
		createBasePrivateIdentifierNode: (_$2) => c$3(new E$3(_$2, 0, 0)),
		createBaseTokenNode: (_$2) => c$3(new m$11(_$2, 0, 0)),
		createBaseNode: (_$2) => c$3(new o$9(_$2, 0, 0))
	}, h$3 = wf(11, W$2), { createNodeArray: y$7, createNumericLiteral: g$2, createStringLiteral: x$3, createLiteralLikeNode: N$5, createIdentifier: te$5, createPrivateIdentifier: ue$4, createToken: ye$4, createArrayLiteralExpression: fe$4, createObjectLiteralExpression: M$2, createPropertyAccessExpression: ie$6, createPropertyAccessChain: Ce$6, createElementAccessExpression: V$5, createElementAccessChain: oe$6, createCallExpression: G$6, createCallChain: dt$3, createNewExpression: rr$5, createParenthesizedExpression: vn$4, createBlock: ir$5, createVariableStatement: Tn$5, createExpressionStatement: Mn$4, createIfStatement: Ge$5, createWhileStatement: ar$5, createForStatement: Or$5, createForOfStatement: Mt$5, createVariableDeclaration: Fn$4, createVariableDeclarationList: Ln$5 } = h$3, Lt$6, vt$6, Qe$4, zn$6, $t$4, ct$4, at$4, Ut$4, Jt$3, lt$3, sr$5, mt$5, xn$3, yt$4, ln$5, nt$4, Bt$5 = !0, an$5 = !1;
	function _r$5(_$2, p$2, d$14, b$7, w$3 = !1, I$2, $$4, se$3 = 0) {
		var Z$4;
		if (I$2 = Db(_$2, I$2), I$2 === 6) {
			let ce$4 = yr$4(_$2, p$2, d$14, b$7, w$3);
			return convertToJson(ce$4, (Z$4 = ce$4.statements[0]) == null ? void 0 : Z$4.expression, ce$4.parseDiagnostics, !1, void 0), ce$4.referencedFiles = bt$2, ce$4.typeReferenceDirectives = bt$2, ce$4.libReferenceDirectives = bt$2, ce$4.amdDependencies = bt$2, ce$4.hasNoDefaultLib = !1, ce$4.pragmas = by, ce$4;
		}
		Vn$5(_$2, p$2, d$14, b$7, I$2, se$3);
		let ee$4 = Mr$4(d$14, w$3, I$2, $$4 || yh, se$3);
		return Wn$5(), ee$4;
	}
	e$4.parseSourceFile = _r$5;
	function hr$4(_$2, p$2) {
		Vn$5("", _$2, p$2, void 0, 1, 0), U$4();
		let d$14 = Br$5(!0), b$7 = u$14() === 1 && !at$4.length;
		return Wn$5(), b$7 ? d$14 : void 0;
	}
	e$4.parseIsolatedEntityName = hr$4;
	function yr$4(_$2, p$2, d$14 = 2, b$7, w$3 = !1) {
		Vn$5(_$2, p$2, d$14, b$7, 6, 0), vt$6 = nt$4, U$4();
		let I$2 = L$4(), $$4, se$3;
		if (u$14() === 1) $$4 = Ct$7([], I$2, I$2), se$3 = Wt$4();
		else {
			let ce$4;
			for (; u$14() !== 1;) {
				let Ae$5;
				switch (u$14()) {
					case 23:
						Ae$5 = oc$2();
						break;
					case 112:
					case 97:
					case 106:
						Ae$5 = Wt$4();
						break;
					case 41:
						Y$6(() => U$4() === 9 && U$4() !== 59) ? Ae$5 = Go$3() : Ae$5 = Ms$3();
						break;
					case 9:
					case 11: if (Y$6(() => U$4() !== 59)) {
						Ae$5 = $n$5();
						break;
					}
					default:
						Ae$5 = Ms$3();
						break;
				}
				ce$4 && Qr$2(ce$4) ? ce$4.push(Ae$5) : ce$4 ? ce$4 = [ce$4, Ae$5] : (ce$4 = Ae$5, u$14() !== 1 && Ee$4(A$1.Unexpected_token));
			}
			let je$4 = Qr$2(ce$4) ? P$5(fe$4(ce$4), I$2) : B$2.checkDefined(ce$4), Re$7 = Mn$4(je$4);
			P$5(Re$7, I$2), $$4 = Ct$7([Re$7], I$2), se$3 = Xn$5(1, A$1.Unexpected_token);
		}
		let Z$4 = _e$7(_$2, 2, 6, !1, $$4, se$3, vt$6, Ga$1);
		w$3 && J$4(Z$4), Z$4.nodeCount = sr$5, Z$4.identifierCount = xn$3, Z$4.identifiers = mt$5, Z$4.parseDiagnostics = Wi$1(at$4, Z$4), Ut$4 && (Z$4.jsDocDiagnostics = Wi$1(Ut$4, Z$4));
		let ee$4 = Z$4;
		return Wn$5(), ee$4;
	}
	e$4.parseJsonText = yr$4;
	function Vn$5(_$2, p$2, d$14, b$7, w$3, I$2) {
		switch (o$9 = At$2.getNodeConstructor(), m$11 = At$2.getTokenConstructor(), v$5 = At$2.getIdentifierConstructor(), E$3 = At$2.getPrivateIdentifierConstructor(), C$3 = At$2.getSourceFileConstructor(), Lt$6 = rg(_$2), Qe$4 = p$2, zn$6 = d$14, Jt$3 = b$7, $t$4 = w$3, ct$4 = Yd(w$3), at$4 = [], yt$4 = 0, mt$5 = /* @__PURE__ */ new Map(), xn$3 = 0, sr$5 = 0, vt$6 = 0, Bt$5 = !0, $t$4) {
			case 1:
			case 2:
				nt$4 = 524288;
				break;
			case 6:
				nt$4 = 134742016;
				break;
			default:
				nt$4 = 0;
				break;
		}
		an$5 = !1, t$13.setText(Qe$4), t$13.setOnError(ti$7), t$13.setScriptTarget(zn$6), t$13.setLanguageVariant(ct$4), t$13.setScriptKind($t$4), t$13.setJSDocParsingMode(I$2);
	}
	function Wn$5() {
		t$13.clearCommentDirectives(), t$13.setText(""), t$13.setOnError(void 0), t$13.setScriptKind(0), t$13.setJSDocParsingMode(0), Qe$4 = void 0, zn$6 = void 0, Jt$3 = void 0, $t$4 = void 0, ct$4 = void 0, vt$6 = 0, at$4 = void 0, Ut$4 = void 0, yt$4 = 0, mt$5 = void 0, ln$5 = void 0, Bt$5 = !0;
	}
	function Mr$4(_$2, p$2, d$14, b$7, w$3) {
		let I$2 = K6(Lt$6);
		I$2 && (nt$4 |= 33554432), vt$6 = nt$4, U$4();
		let $$4 = wn$4(0, Kt$4);
		B$2.assert(u$14() === 1);
		let se$3 = qe$6(), Z$4 = De$7(Wt$4(), se$3), ee$4 = _e$7(Lt$6, _$2, d$14, I$2, $$4, Z$4, vt$6, b$7);
		return tv(ee$4, Qe$4), nv(ee$4, ce$4), ee$4.commentDirectives = t$13.getCommentDirectives(), ee$4.nodeCount = sr$5, ee$4.identifierCount = xn$3, ee$4.identifiers = mt$5, ee$4.parseDiagnostics = Wi$1(at$4, ee$4), ee$4.jsDocParsingMode = w$3, Ut$4 && (ee$4.jsDocDiagnostics = Wi$1(Ut$4, ee$4)), p$2 && J$4(ee$4), ee$4;
		function ce$4(je$4, Re$7, Ae$5) {
			at$4.push(La(Lt$6, Qe$4, je$4, Re$7, Ae$5));
		}
	}
	let Gn$6 = !1;
	function De$7(_$2, p$2) {
		if (!p$2) return _$2;
		B$2.assert(!_$2.jsDoc);
		let d$14 = Sy(k2(_$2, Qe$4), (b$7) => Kc$2.parseJSDocComment(_$2, b$7.pos, b$7.end - b$7.pos));
		return d$14.length && (_$2.jsDoc = d$14), Gn$6 && (Gn$6 = !1, _$2.flags |= 536870912), _$2;
	}
	function gr$4(_$2) {
		let p$2 = Jt$3, d$14 = xl.createSyntaxCursor(_$2);
		Jt$3 = { currentNode: ce$4 };
		let b$7 = [], w$3 = at$4;
		at$4 = [];
		let I$2 = 0, $$4 = Z$4(_$2.statements, 0);
		for (; $$4 !== -1;) {
			let je$4 = _$2.statements[I$2], Re$7 = _$2.statements[$$4];
			Nn$2(b$7, _$2.statements, I$2, $$4), I$2 = ee$4(_$2.statements, $$4);
			let Ae$5 = bp(w$3, (hn$5) => hn$5.start >= je$4.pos), Yt$4 = Ae$5 >= 0 ? bp(w$3, (hn$5) => hn$5.start >= Re$7.pos, Ae$5) : -1;
			Ae$5 >= 0 && Nn$2(at$4, w$3, Ae$5, Yt$4 >= 0 ? Yt$4 : void 0), pn$5(() => {
				let hn$5 = nt$4;
				for (nt$4 |= 65536, t$13.resetTokenState(Re$7.pos), U$4(); u$14() !== 1;) {
					let Zt$3 = t$13.getTokenFullStart(), pr$4 = is$2(0, Kt$4);
					if (b$7.push(pr$4), Zt$3 === t$13.getTokenFullStart() && U$4(), I$2 >= 0) {
						let Rn$4 = _$2.statements[I$2];
						if (pr$4.end === Rn$4.pos) break;
						pr$4.end > Rn$4.pos && (I$2 = ee$4(_$2.statements, I$2 + 1));
					}
				}
				nt$4 = hn$5;
			}, 2), $$4 = I$2 >= 0 ? Z$4(_$2.statements, I$2) : -1;
		}
		if (I$2 >= 0) {
			let je$4 = _$2.statements[I$2];
			Nn$2(b$7, _$2.statements, I$2);
			let Re$7 = bp(w$3, (Ae$5) => Ae$5.start >= je$4.pos);
			Re$7 >= 0 && Nn$2(at$4, w$3, Re$7);
		}
		return Jt$3 = p$2, h$3.updateSourceFile(_$2, gn$2(y$7(b$7), _$2.statements));
		function se$3(je$4) {
			return !(je$4.flags & 65536) && !!(je$4.transformFlags & 67108864);
		}
		function Z$4(je$4, Re$7) {
			for (let Ae$5 = Re$7; Ae$5 < je$4.length; Ae$5++) if (se$3(je$4[Ae$5])) return Ae$5;
			return -1;
		}
		function ee$4(je$4, Re$7) {
			for (let Ae$5 = Re$7; Ae$5 < je$4.length; Ae$5++) if (!se$3(je$4[Ae$5])) return Ae$5;
			return -1;
		}
		function ce$4(je$4) {
			let Re$7 = d$14.currentNode(je$4);
			return Bt$5 && Re$7 && se$3(Re$7) && Gp(Re$7), Re$7;
		}
	}
	function J$4(_$2) {
		jb(_$2, !0);
	}
	e$4.fixupParentReferences = J$4;
	function _e$7(_$2, p$2, d$14, b$7, w$3, I$2, $$4, se$3) {
		let Z$4 = h$3.createSourceFile(w$3, I$2, $$4);
		if (Xd(Z$4, 0, Qe$4.length), ee$4(Z$4), !b$7 && bh(Z$4) && Z$4.transformFlags & 67108864) {
			let ce$4 = Z$4;
			Z$4 = gr$4(Z$4), ce$4 !== Z$4 && ee$4(Z$4);
		}
		return Z$4;
		function ee$4(ce$4) {
			ce$4.text = Qe$4, ce$4.bindDiagnostics = [], ce$4.bindSuggestionDiagnostics = void 0, ce$4.languageVersion = p$2, ce$4.fileName = _$2, ce$4.languageVariant = Yd(d$14), ce$4.isDeclarationFile = b$7, ce$4.scriptKind = d$14, se$3(ce$4), ce$4.setExternalModuleIndicator = se$3;
		}
	}
	function me$5(_$2, p$2) {
		_$2 ? nt$4 |= p$2 : nt$4 &= ~p$2;
	}
	function Te$7(_$2) {
		me$5(_$2, 8192);
	}
	function Xe$4(_$2) {
		me$5(_$2, 16384);
	}
	function Ke$4(_$2) {
		me$5(_$2, 32768);
	}
	function st$5(_$2) {
		me$5(_$2, 65536);
	}
	function Pt$5(_$2, p$2) {
		let d$14 = _$2 & nt$4;
		if (d$14) {
			me$5(!1, d$14);
			let b$7 = p$2();
			return me$5(!0, d$14), b$7;
		}
		return p$2();
	}
	function Tt$7(_$2, p$2) {
		let d$14 = _$2 & ~nt$4;
		if (d$14) {
			me$5(!0, d$14);
			let b$7 = p$2();
			return me$5(!1, d$14), b$7;
		}
		return p$2();
	}
	function ut$4(_$2) {
		return Pt$5(8192, _$2);
	}
	function Lr$5(_$2) {
		return Tt$7(8192, _$2);
	}
	function br$4(_$2) {
		return Pt$5(131072, _$2);
	}
	function Jn$5(_$2) {
		return Tt$7(131072, _$2);
	}
	function Yn$5(_$2) {
		return Tt$7(16384, _$2);
	}
	function Ei$5(_$2) {
		return Tt$7(32768, _$2);
	}
	function R$6(_$2) {
		return Tt$7(65536, _$2);
	}
	function Q$4(_$2) {
		return Pt$5(65536, _$2);
	}
	function K$6(_$2) {
		return Tt$7(81920, _$2);
	}
	function xe$4(_$2) {
		return Pt$5(81920, _$2);
	}
	function Se$5(_$2) {
		return (nt$4 & _$2) !== 0;
	}
	function we$3() {
		return Se$5(16384);
	}
	function be$5() {
		return Se$5(8192);
	}
	function We$2() {
		return Se$5(131072);
	}
	function et$5() {
		return Se$5(32768);
	}
	function Ye$6() {
		return Se$5(65536);
	}
	function Ee$4(_$2, ...p$2) {
		return rt$5(t$13.getTokenStart(), t$13.getTokenEnd(), _$2, ...p$2);
	}
	function Sn$5(_$2, p$2, d$14, ...b$7) {
		let w$3 = Fa$1(at$4), I$2;
		return (!w$3 || _$2 !== w$3.start) && (I$2 = La(Lt$6, Qe$4, _$2, p$2, d$14, ...b$7), at$4.push(I$2)), an$5 = !0, I$2;
	}
	function rt$5(_$2, p$2, d$14, ...b$7) {
		return Sn$5(_$2, p$2 - _$2, d$14, ...b$7);
	}
	function un$5(_$2, p$2, ...d$14) {
		rt$5(_$2.pos, _$2.end, p$2, ...d$14);
	}
	function ti$7(_$2, p$2, d$14) {
		Sn$5(t$13.getTokenEnd(), p$2, _$2, d$14);
	}
	function L$4() {
		return t$13.getTokenFullStart();
	}
	function qe$6() {
		return t$13.hasPrecedingJSDocComment();
	}
	function u$14() {
		return lt$3;
	}
	function Oe$6() {
		return lt$3 = t$13.scan();
	}
	function Me$6(_$2) {
		return U$4(), _$2();
	}
	function U$4() {
		return hi$1(lt$3) && (t$13.hasUnicodeEscape() || t$13.hasExtendedUnicodeEscape()) && rt$5(t$13.getTokenStart(), t$13.getTokenEnd(), A$1.Keywords_cannot_contain_escape_characters), Oe$6();
	}
	function Fe$4() {
		return lt$3 = t$13.scanJsDocToken();
	}
	function sn$4(_$2) {
		return lt$3 = t$13.scanJSDocCommentTextToken(_$2);
	}
	function Ve$5() {
		return lt$3 = t$13.reScanGreaterToken();
	}
	function $e$5() {
		return lt$3 = t$13.reScanSlashToken();
	}
	function Nt$6(_$2) {
		return lt$3 = t$13.reScanTemplateToken(_$2);
	}
	function kt$6() {
		return lt$3 = t$13.reScanLessThanToken();
	}
	function It$7() {
		return lt$3 = t$13.reScanHashToken();
	}
	function qt$5() {
		return lt$3 = t$13.scanJsxIdentifier();
	}
	function Hn$4() {
		return lt$3 = t$13.scanJsxToken();
	}
	function Ai$5() {
		return lt$3 = t$13.scanJsxAttributeValue();
	}
	function pn$5(_$2, p$2) {
		let d$14 = lt$3, b$7 = at$4.length, w$3 = an$5, I$2 = nt$4, $$4 = p$2 !== 0 ? t$13.lookAhead(_$2) : t$13.tryScan(_$2);
		return B$2.assert(I$2 === nt$4), (!$$4 || p$2 !== 0) && (lt$3 = d$14, p$2 !== 2 && (at$4.length = b$7), an$5 = w$3), $$4;
	}
	function Y$6(_$2) {
		return pn$5(_$2, 1);
	}
	function pe$6(_$2) {
		return pn$5(_$2, 0);
	}
	function ze$6() {
		return u$14() === 80 ? !0 : u$14() > 118;
	}
	function ve$6() {
		return u$14() === 80 ? !0 : u$14() === 127 && we$3() || u$14() === 135 && Ye$6() ? !1 : u$14() > 118;
	}
	function j$7(_$2, p$2, d$14 = !0) {
		return u$14() === _$2 ? (d$14 && U$4(), !0) : (p$2 ? Ee$4(p$2) : Ee$4(A$1._0_expected, it$2(_$2)), !1);
	}
	let ht$4 = Object.keys(nf).filter((_$2) => _$2.length > 2);
	function xt$4(_$2) {
		if ($1(_$2)) {
			rt$5(Pr$2(Qe$4, _$2.template.pos), _$2.template.end, A$1.Module_declaration_names_may_only_use_or_quoted_strings);
			return;
		}
		let p$2 = Ze$2(_$2) ? In$1(_$2) : void 0;
		if (!p$2 || !Sg(p$2, zn$6)) {
			Ee$4(A$1._0_expected, it$2(27));
			return;
		}
		let d$14 = Pr$2(Qe$4, _$2.pos);
		switch (p$2) {
			case "const":
			case "let":
			case "var":
				rt$5(d$14, _$2.end, A$1.Variable_declaration_not_allowed_at_this_location);
				return;
			case "declare": return;
			case "interface":
				jt$5(A$1.Interface_name_cannot_be_0, A$1.Interface_must_be_given_a_name, 19);
				return;
			case "is":
				rt$5(d$14, t$13.getTokenStart(), A$1.A_type_predicate_is_only_allowed_in_return_type_position_for_functions_and_methods);
				return;
			case "module":
			case "namespace":
				jt$5(A$1.Namespace_name_cannot_be_0, A$1.Namespace_must_be_given_a_name, 19);
				return;
			case "type":
				jt$5(A$1.Type_alias_name_cannot_be_0, A$1.Type_alias_must_be_given_a_name, 64);
				return;
		}
		let b$7 = i_(p$2, ht$4, gt$1) ?? fn$6(p$2);
		if (b$7) {
			rt$5(d$14, _$2.end, A$1.Unknown_keyword_or_identifier_Did_you_mean_0, b$7);
			return;
		}
		u$14() !== 0 && rt$5(d$14, _$2.end, A$1.Unexpected_keyword_or_identifier);
	}
	function jt$5(_$2, p$2, d$14) {
		u$14() === d$14 ? Ee$4(p$2) : Ee$4(_$2, t$13.getTokenValue());
	}
	function fn$6(_$2) {
		for (let p$2 of ht$4) if (_$2.length > p$2.length + 2 && dl(_$2, p$2)) return `${p$2} ${_$2.slice(p$2.length)}`;
	}
	function Bl$3(_$2, p$2, d$14) {
		if (u$14() === 60 && !t$13.hasPrecedingLineBreak()) {
			Ee$4(A$1.Decorators_must_precede_the_name_and_all_keywords_of_property_declarations);
			return;
		}
		if (u$14() === 21) {
			Ee$4(A$1.Cannot_start_a_function_call_in_a_type_annotation), U$4();
			return;
		}
		if (p$2 && !or$5()) {
			d$14 ? Ee$4(A$1._0_expected, it$2(27)) : Ee$4(A$1.Expected_for_property_initializer);
			return;
		}
		if (!_a$4()) {
			if (d$14) {
				Ee$4(A$1._0_expected, it$2(27));
				return;
			}
			xt$4(_$2);
		}
	}
	function D_(_$2) {
		return u$14() === _$2 ? (Fe$4(), !0) : (B$2.assert(Sp(_$2)), Ee$4(A$1._0_expected, it$2(_$2)), !1);
	}
	function Jr$6(_$2, p$2, d$14, b$7) {
		if (u$14() === p$2) {
			U$4();
			return;
		}
		let w$3 = Ee$4(A$1._0_expected, it$2(p$2));
		d$14 && w$3 && al(w$3, La(Lt$6, Qe$4, b$7, 1, A$1.The_parser_expected_to_find_a_1_to_match_the_0_token_here, it$2(_$2), it$2(p$2)));
	}
	function Le$6(_$2) {
		return u$14() === _$2 ? (U$4(), !0) : !1;
	}
	function ft$4(_$2) {
		if (u$14() === _$2) return Wt$4();
	}
	function ql$3(_$2) {
		if (u$14() === _$2) return zl$3();
	}
	function Xn$5(_$2, p$2, d$14) {
		return ft$4(_$2) || Gt$4(_$2, !1, p$2 || A$1._0_expected, d$14 || it$2(_$2));
	}
	function Fl$3(_$2) {
		return ql$3(_$2) || (B$2.assert(Sp(_$2)), Gt$4(_$2, !1, A$1._0_expected, it$2(_$2)));
	}
	function Wt$4() {
		let _$2 = L$4(), p$2 = u$14();
		return U$4(), P$5(ye$4(p$2), _$2);
	}
	function zl$3() {
		let _$2 = L$4(), p$2 = u$14();
		return Fe$4(), P$5(ye$4(p$2), _$2);
	}
	function or$5() {
		return u$14() === 27 ? !0 : u$14() === 20 || u$14() === 1 || t$13.hasPrecedingLineBreak();
	}
	function _a$4() {
		return or$5() ? (u$14() === 27 && U$4(), !0) : !1;
	}
	function Qt$3() {
		return _a$4() || j$7(27);
	}
	function Ct$7(_$2, p$2, d$14, b$7) {
		let w$3 = y$7(_$2, b$7);
		return bi$1(w$3, p$2, d$14 ?? t$13.getTokenFullStart()), w$3;
	}
	function P$5(_$2, p$2, d$14) {
		return bi$1(_$2, p$2, d$14 ?? t$13.getTokenFullStart()), nt$4 && (_$2.flags |= nt$4), an$5 && (an$5 = !1, _$2.flags |= 262144), _$2;
	}
	function Gt$4(_$2, p$2, d$14, ...b$7) {
		p$2 ? Sn$5(t$13.getTokenFullStart(), 0, d$14, ...b$7) : d$14 && Ee$4(d$14, ...b$7);
		let w$3 = L$4(), I$2 = _$2 === 80 ? te$5("", void 0) : Rd(_$2) ? h$3.createTemplateLiteralLikeNode(_$2, "", "", void 0) : _$2 === 9 ? g$2("", void 0) : _$2 === 11 ? x$3("", void 0) : _$2 === 282 ? h$3.createMissingDeclaration() : ye$4(_$2);
		return P$5(I$2, w$3);
	}
	function jr$5(_$2) {
		let p$2 = mt$5.get(_$2);
		return p$2 === void 0 && mt$5.set(_$2, p$2 = _$2), p$2;
	}
	function cr$5(_$2, p$2, d$14) {
		if (_$2) {
			xn$3++;
			let se$3 = t$13.hasPrecedingJSDocLeadingAsterisks() ? t$13.getTokenStart() : L$4(), Z$4 = u$14(), ee$4 = jr$5(t$13.getTokenValue()), ce$4 = t$13.hasExtendedUnicodeEscape();
			return Oe$6(), P$5(te$5(ee$4, Z$4, ce$4), se$3);
		}
		if (u$14() === 81) return Ee$4(d$14 || A$1.Private_identifiers_are_not_allowed_outside_class_bodies), cr$5(!0);
		if (u$14() === 0 && t$13.tryScan(() => t$13.reScanInvalidIdentifier() === 80)) return cr$5(!0);
		xn$3++;
		let b$7 = u$14() === 1, w$3 = t$13.isReservedWord(), I$2 = t$13.getTokenText(), $$4 = w$3 ? A$1.Identifier_expected_0_is_a_reserved_word_that_cannot_be_used_here : A$1.Identifier_expected;
		return Gt$4(80, b$7, p$2 || $$4, I$2);
	}
	function es$3(_$2) {
		return cr$5(ze$6(), void 0, _$2);
	}
	function St$5(_$2, p$2) {
		return cr$5(ve$6(), _$2, p$2);
	}
	function Rt$5(_$2) {
		return cr$5(wt$2(u$14()), _$2);
	}
	function ni$7() {
		return (t$13.hasUnicodeEscape() || t$13.hasExtendedUnicodeEscape()) && Ee$4(A$1.Unicode_escape_sequence_cannot_appear_here), cr$5(wt$2(u$14()));
	}
	function vr$4() {
		return wt$2(u$14()) || u$14() === 11 || u$14() === 9 || u$14() === 10;
	}
	function P_() {
		return wt$2(u$14()) || u$14() === 11;
	}
	function Vl$2(_$2) {
		if (u$14() === 11 || u$14() === 9 || u$14() === 10) {
			let p$2 = $n$5();
			return p$2.text = jr$5(p$2.text), p$2;
		}
		return _$2 && u$14() === 23 ? Wl$3() : u$14() === 81 ? oa$4() : Rt$5();
	}
	function Rr$5() {
		return Vl$2(!0);
	}
	function Wl$3() {
		let _$2 = L$4();
		j$7(23);
		let p$2 = ut$4(Et$5);
		return j$7(24), P$5(h$3.createComputedPropertyName(p$2), _$2);
	}
	function oa$4() {
		let _$2 = L$4(), p$2 = ue$4(jr$5(t$13.getTokenValue()));
		return U$4(), P$5(p$2, _$2);
	}
	function ri$7(_$2) {
		return u$14() === _$2 && pe$6(N_);
	}
	function ts$3() {
		return U$4(), t$13.hasPrecedingLineBreak() ? !1 : lr$5();
	}
	function N_() {
		switch (u$14()) {
			case 87: return U$4() === 94;
			case 95: return U$4(), u$14() === 90 ? Y$6(Di$3) : u$14() === 156 ? Y$6(Gl$3) : Ci$5();
			case 90: return Di$3();
			case 126: return U$4(), lr$5();
			case 139:
			case 153: return U$4(), Yl$3();
			default: return ts$3();
		}
	}
	function Ci$5() {
		return u$14() === 60 || u$14() !== 42 && u$14() !== 130 && u$14() !== 19 && lr$5();
	}
	function Gl$3() {
		return U$4(), Ci$5();
	}
	function I_() {
		return Hr$2(u$14()) && pe$6(N_);
	}
	function lr$5() {
		return u$14() === 23 || u$14() === 19 || u$14() === 42 || u$14() === 26 || vr$4();
	}
	function Yl$3() {
		return u$14() === 23 || vr$4();
	}
	function Di$3() {
		return U$4(), u$14() === 86 || u$14() === 100 || u$14() === 120 || u$14() === 60 || u$14() === 128 && Y$6(Tc$2) || u$14() === 134 && Y$6(xc$3);
	}
	function ca$4(_$2, p$2) {
		if (ua$3(_$2)) return !0;
		switch (_$2) {
			case 0:
			case 1:
			case 3: return !(u$14() === 27 && p$2) && Sc$1();
			case 2: return u$14() === 84 || u$14() === 90;
			case 4: return Y$6(oo$4);
			case 5: return Y$6(Wu$3) || u$14() === 27 && !p$2;
			case 6: return u$14() === 23 || vr$4();
			case 12: switch (u$14()) {
				case 23:
				case 42:
				case 26:
				case 25: return !0;
				default: return vr$4();
			}
			case 18: return vr$4();
			case 9: return u$14() === 23 || u$14() === 26 || vr$4();
			case 24: return P_();
			case 7: return u$14() === 19 ? Y$6(O_) : p$2 ? ve$6() && !ns$5() : ws$2() && !ns$5();
			case 8: return Aa$4();
			case 10: return u$14() === 28 || u$14() === 26 || Aa$4();
			case 19: return u$14() === 103 || u$14() === 87 || ve$6();
			case 15: switch (u$14()) {
				case 28:
				case 25: return !0;
			}
			case 11: return u$14() === 26 || xr$4();
			case 16: return ma$3(!1);
			case 17: return ma$3(!0);
			case 20:
			case 21: return u$14() === 28 || _i$5();
			case 22: return qc$1();
			case 23: return u$14() === 161 && Y$6(Uu$2) ? !1 : u$14() === 11 ? !0 : wt$2(u$14());
			case 13: return wt$2(u$14()) || u$14() === 19;
			case 14: return !0;
			case 25: return !0;
			case 26: return B$2.fail("ParsingContext.Count used as a context");
			default: B$2.assertNever(_$2, "Non-exhaustive case in 'isListElement'.");
		}
	}
	function O_() {
		if (B$2.assert(u$14() === 19), U$4() === 20) {
			let _$2 = U$4();
			return _$2 === 28 || _$2 === 19 || _$2 === 96 || _$2 === 119;
		}
		return !0;
	}
	function Pi$5() {
		return U$4(), ve$6();
	}
	function Hl$3() {
		return U$4(), wt$2(u$14());
	}
	function M_() {
		return U$4(), ig(u$14());
	}
	function ns$5() {
		return u$14() === 119 || u$14() === 96 ? Y$6(L_) : !1;
	}
	function L_() {
		return U$4(), xr$4();
	}
	function Ni$4() {
		return U$4(), _i$5();
	}
	function la$4(_$2) {
		if (u$14() === 1) return !0;
		switch (_$2) {
			case 1:
			case 2:
			case 4:
			case 5:
			case 6:
			case 12:
			case 9:
			case 23:
			case 24: return u$14() === 20;
			case 3: return u$14() === 20 || u$14() === 84 || u$14() === 90;
			case 7: return u$14() === 19 || u$14() === 96 || u$14() === 119;
			case 8: return rs$3();
			case 19: return u$14() === 32 || u$14() === 21 || u$14() === 19 || u$14() === 96 || u$14() === 119;
			case 11: return u$14() === 22 || u$14() === 27;
			case 15:
			case 21:
			case 10: return u$14() === 24;
			case 17:
			case 16:
			case 18: return u$14() === 22 || u$14() === 24;
			case 20: return u$14() !== 28;
			case 22: return u$14() === 19 || u$14() === 20;
			case 13: return u$14() === 32 || u$14() === 44;
			case 14: return u$14() === 30 && Y$6(Hs$4);
			default: return !1;
		}
	}
	function rs$3() {
		return !!(or$5() || Fo$2(u$14()) || u$14() === 39);
	}
	function J_() {
		B$2.assert(yt$4, "Missing parsing context");
		for (let _$2 = 0; _$2 < 26; _$2++) if (yt$4 & 1 << _$2 && (ca$4(_$2, !0) || la$4(_$2))) return !0;
		return !1;
	}
	function wn$4(_$2, p$2) {
		let d$14 = yt$4;
		yt$4 |= 1 << _$2;
		let b$7 = [], w$3 = L$4();
		for (; !la$4(_$2);) {
			if (ca$4(_$2, !1)) {
				b$7.push(is$2(_$2, p$2));
				continue;
			}
			if (V_(_$2)) break;
		}
		return yt$4 = d$14, Ct$7(b$7, w$3);
	}
	function is$2(_$2, p$2) {
		let d$14 = ua$3(_$2);
		return d$14 ? j_(d$14) : p$2();
	}
	function ua$3(_$2, p$2) {
		var d$14;
		if (!Jt$3 || !R_(_$2) || an$5) return;
		let b$7 = Jt$3.currentNode(p$2 ?? t$13.getTokenFullStart());
		if (!(Qi$1(b$7) || Q6(b$7) || b1(b$7) || (b$7.flags & 101441536) !== nt$4) && U_(b$7, _$2)) return bf(b$7) && (d$14 = b$7.jsDoc) != null && d$14.jsDocCache && (b$7.jsDoc.jsDocCache = void 0), b$7;
	}
	function j_(_$2) {
		return t$13.resetTokenState(_$2.end), U$4(), _$2;
	}
	function R_(_$2) {
		switch (_$2) {
			case 5:
			case 2:
			case 0:
			case 1:
			case 3:
			case 6:
			case 4:
			case 8:
			case 17:
			case 16: return !0;
		}
		return !1;
	}
	function U_(_$2, p$2) {
		switch (p$2) {
			case 5: return as$2(_$2);
			case 2: return B_(_$2);
			case 0:
			case 1:
			case 3: return ss$3(_$2);
			case 6: return q_(_$2);
			case 4: return _s$3(_$2);
			case 8: return F_(_$2);
			case 17:
			case 16: return z_(_$2);
		}
		return !1;
	}
	function as$2(_$2) {
		if (_$2) switch (_$2.kind) {
			case 176:
			case 181:
			case 177:
			case 178:
			case 172:
			case 240: return !0;
			case 174:
				let p$2 = _$2;
				return !(p$2.name.kind === 80 && p$2.name.escapedText === "constructor");
		}
		return !1;
	}
	function B_(_$2) {
		if (_$2) switch (_$2.kind) {
			case 296:
			case 297: return !0;
		}
		return !1;
	}
	function ss$3(_$2) {
		if (_$2) switch (_$2.kind) {
			case 262:
			case 243:
			case 241:
			case 245:
			case 244:
			case 257:
			case 253:
			case 255:
			case 252:
			case 251:
			case 249:
			case 250:
			case 248:
			case 247:
			case 254:
			case 242:
			case 258:
			case 256:
			case 246:
			case 259:
			case 272:
			case 271:
			case 278:
			case 277:
			case 267:
			case 263:
			case 264:
			case 266:
			case 265: return !0;
		}
		return !1;
	}
	function q_(_$2) {
		return _$2.kind === 306;
	}
	function _s$3(_$2) {
		if (_$2) switch (_$2.kind) {
			case 180:
			case 173:
			case 181:
			case 171:
			case 179: return !0;
		}
		return !1;
	}
	function F_(_$2) {
		return _$2.kind !== 260 ? !1 : _$2.initializer === void 0;
	}
	function z_(_$2) {
		return _$2.kind !== 169 ? !1 : _$2.initializer === void 0;
	}
	function V_(_$2) {
		return pa$3(_$2), J_() ? !0 : (U$4(), !1);
	}
	function pa$3(_$2) {
		switch (_$2) {
			case 0: return u$14() === 90 ? Ee$4(A$1._0_expected, it$2(95)) : Ee$4(A$1.Declaration_or_statement_expected);
			case 1: return Ee$4(A$1.Declaration_or_statement_expected);
			case 2: return Ee$4(A$1.case_or_default_expected);
			case 3: return Ee$4(A$1.Statement_expected);
			case 18:
			case 4: return Ee$4(A$1.Property_or_signature_expected);
			case 5: return Ee$4(A$1.Unexpected_token_A_constructor_method_accessor_or_property_was_expected);
			case 6: return Ee$4(A$1.Enum_member_expected);
			case 7: return Ee$4(A$1.Expression_expected);
			case 8: return hi$1(u$14()) ? Ee$4(A$1._0_is_not_allowed_as_a_variable_declaration_name, it$2(u$14())) : Ee$4(A$1.Variable_declaration_expected);
			case 9: return Ee$4(A$1.Property_destructuring_pattern_expected);
			case 10: return Ee$4(A$1.Array_element_destructuring_pattern_expected);
			case 11: return Ee$4(A$1.Argument_expression_expected);
			case 12: return Ee$4(A$1.Property_assignment_expected);
			case 15: return Ee$4(A$1.Expression_or_comma_expected);
			case 17: return Ee$4(A$1.Parameter_declaration_expected);
			case 16: return hi$1(u$14()) ? Ee$4(A$1._0_is_not_allowed_as_a_parameter_name, it$2(u$14())) : Ee$4(A$1.Parameter_declaration_expected);
			case 19: return Ee$4(A$1.Type_parameter_declaration_expected);
			case 20: return Ee$4(A$1.Type_argument_expected);
			case 21: return Ee$4(A$1.Type_expected);
			case 22: return Ee$4(A$1.Unexpected_token_expected);
			case 23: return u$14() === 161 ? Ee$4(A$1._0_expected, "}") : Ee$4(A$1.Identifier_expected);
			case 13: return Ee$4(A$1.Identifier_expected);
			case 14: return Ee$4(A$1.Identifier_expected);
			case 24: return Ee$4(A$1.Identifier_or_string_literal_expected);
			case 25: return Ee$4(A$1.Identifier_expected);
			case 26: return B$2.fail("ParsingContext.Count used as a context");
			default: B$2.assertNever(_$2);
		}
	}
	function dn$5(_$2, p$2, d$14) {
		let b$7 = yt$4;
		yt$4 |= 1 << _$2;
		let w$3 = [], I$2 = L$4(), $$4 = -1;
		for (;;) {
			if (ca$4(_$2, !1)) {
				let se$3 = t$13.getTokenFullStart(), Z$4 = is$2(_$2, p$2);
				if (!Z$4) {
					yt$4 = b$7;
					return;
				}
				if (w$3.push(Z$4), $$4 = t$13.getTokenStart(), Le$6(28)) continue;
				if ($$4 = -1, la$4(_$2)) break;
				j$7(28, os$4(_$2)), d$14 && u$14() === 27 && !t$13.hasPrecedingLineBreak() && U$4(), se$3 === t$13.getTokenFullStart() && U$4();
				continue;
			}
			if (la$4(_$2) || V_(_$2)) break;
		}
		return yt$4 = b$7, Ct$7(w$3, I$2, void 0, $$4 >= 0);
	}
	function os$4(_$2) {
		return _$2 === 6 ? A$1.An_enum_member_name_must_be_followed_by_a_or : void 0;
	}
	function ur$6() {
		let _$2 = Ct$7([], L$4());
		return _$2.isMissingList = !0, _$2;
	}
	function W_(_$2) {
		return !!_$2.isMissingList;
	}
	function Ur$5(_$2, p$2, d$14, b$7) {
		if (j$7(d$14)) {
			let w$3 = dn$5(_$2, p$2);
			return j$7(b$7), w$3;
		}
		return ur$6();
	}
	function Br$5(_$2, p$2) {
		let d$14 = L$4(), b$7 = _$2 ? Rt$5(p$2) : St$5(p$2);
		for (; Le$6(25) && u$14() !== 30;) b$7 = P$5(h$3.createQualifiedName(b$7, ii$6(_$2, !1, !0)), d$14);
		return b$7;
	}
	function Xl$3(_$2, p$2) {
		return P$5(h$3.createQualifiedName(_$2, p$2), _$2.pos);
	}
	function ii$6(_$2, p$2, d$14) {
		if (t$13.hasPrecedingLineBreak() && wt$2(u$14()) && Y$6(Js$3)) return Gt$4(80, !0, A$1.Identifier_expected);
		if (u$14() === 81) {
			let b$7 = oa$4();
			return p$2 ? b$7 : Gt$4(80, !0, A$1.Identifier_expected);
		}
		return _$2 ? d$14 ? Rt$5() : ni$7() : St$5();
	}
	function $l$3(_$2) {
		let p$2 = L$4(), d$14 = [], b$7;
		do
			b$7 = X_(_$2), d$14.push(b$7);
		while (b$7.literal.kind === 17);
		return Ct$7(d$14, p$2);
	}
	function fa$5(_$2) {
		let p$2 = L$4();
		return P$5(h$3.createTemplateExpression(Ii$4(_$2), $l$3(_$2)), p$2);
	}
	function G_() {
		let _$2 = L$4();
		return P$5(h$3.createTemplateLiteralType(Ii$4(!1), Ql$3()), _$2);
	}
	function Ql$3() {
		let _$2 = L$4(), p$2 = [], d$14;
		do
			d$14 = Y_(), p$2.push(d$14);
		while (d$14.literal.kind === 17);
		return Ct$7(p$2, _$2);
	}
	function Y_() {
		let _$2 = L$4();
		return P$5(h$3.createTemplateLiteralTypeSpan(_t$5(), H_(!1)), _$2);
	}
	function H_(_$2) {
		return u$14() === 20 ? (Nt$6(_$2), $_()) : Xn$5(18, A$1._0_expected, it$2(20));
	}
	function X_(_$2) {
		let p$2 = L$4();
		return P$5(h$3.createTemplateSpan(ut$4(Et$5), H_(_$2)), p$2);
	}
	function $n$5() {
		return ai$5(u$14());
	}
	function Ii$4(_$2) {
		!_$2 && t$13.getTokenFlags() & 26656 && Nt$6(!1);
		let p$2 = ai$5(u$14());
		return B$2.assert(p$2.kind === 16, "Template head has wrong token kind"), p$2;
	}
	function $_() {
		let _$2 = ai$5(u$14());
		return B$2.assert(_$2.kind === 17 || _$2.kind === 18, "Template fragment has wrong token kind"), _$2;
	}
	function Kl$3(_$2) {
		let p$2 = _$2 === 15 || _$2 === 18, d$14 = t$13.getTokenText();
		return d$14.substring(1, d$14.length - (t$13.isUnterminated() ? 0 : p$2 ? 1 : 2));
	}
	function ai$5(_$2) {
		let p$2 = L$4(), d$14 = Rd(_$2) ? h$3.createTemplateLiteralLikeNode(_$2, t$13.getTokenValue(), Kl$3(_$2), t$13.getTokenFlags() & 7176) : _$2 === 9 ? g$2(t$13.getTokenValue(), t$13.getNumericLiteralFlags()) : _$2 === 11 ? x$3(t$13.getTokenValue(), void 0, t$13.hasExtendedUnicodeEscape()) : $g(_$2) ? N$5(_$2, t$13.getTokenValue()) : B$2.fail();
		return t$13.hasExtendedUnicodeEscape() && (d$14.hasExtendedUnicodeEscape = !0), t$13.isUnterminated() && (d$14.isUnterminated = !0), U$4(), P$5(d$14, p$2);
	}
	function si$6() {
		return Br$5(!0, A$1.Type_expected);
	}
	function Q_() {
		if (!t$13.hasPrecedingLineBreak() && kt$6() === 30) return Ur$5(20, _t$5, 30, 32);
	}
	function da$4() {
		let _$2 = L$4();
		return P$5(h$3.createTypeReferenceNode(si$6(), Q_()), _$2);
	}
	function cs$2(_$2) {
		switch (_$2.kind) {
			case 183: return Qi$1(_$2.typeName);
			case 184:
			case 185: {
				let { parameters: p$2, type: d$14 } = _$2;
				return W_(p$2) || cs$2(d$14);
			}
			case 196: return cs$2(_$2.type);
			default: return !1;
		}
	}
	function Zl$3(_$2) {
		return U$4(), P$5(h$3.createTypePredicateNode(void 0, _$2, _t$5()), _$2.pos);
	}
	function ls$3() {
		let _$2 = L$4();
		return U$4(), P$5(h$3.createThisTypeNode(), _$2);
	}
	function eu$4() {
		let _$2 = L$4();
		return U$4(), P$5(h$3.createJSDocAllType(), _$2);
	}
	function K_() {
		let _$2 = L$4();
		return U$4(), P$5(h$3.createJSDocNonNullableType(Ts$3(), !1), _$2);
	}
	function tu$5() {
		let _$2 = L$4();
		return U$4(), u$14() === 28 || u$14() === 20 || u$14() === 22 || u$14() === 32 || u$14() === 64 || u$14() === 52 ? P$5(h$3.createJSDocUnknownType(), _$2) : P$5(h$3.createJSDocNullableType(_t$5(), !1), _$2);
	}
	function Z_() {
		let _$2 = L$4(), p$2 = qe$6();
		if (pe$6(Gc$2)) {
			let d$14 = Qn$5(36), b$7 = jn$5(59, !1);
			return De$7(P$5(h$3.createJSDocFunctionType(d$14, b$7), _$2), p$2);
		}
		return P$5(h$3.createTypeReferenceNode(Rt$5(), void 0), _$2);
	}
	function us$2() {
		let _$2 = L$4(), p$2;
		return (u$14() === 110 || u$14() === 105) && (p$2 = Rt$5(), j$7(59)), P$5(h$3.createParameterDeclaration(void 0, void 0, p$2, void 0, ps$3(), void 0), _$2);
	}
	function ps$3() {
		t$13.setSkipJsDocLeadingAsterisks(!0);
		let _$2 = L$4();
		if (Le$6(144)) {
			let b$7 = h$3.createJSDocNamepathType(void 0);
			e: for (;;) switch (u$14()) {
				case 20:
				case 1:
				case 28:
				case 5: break e;
				default: Fe$4();
			}
			return t$13.setSkipJsDocLeadingAsterisks(!1), P$5(b$7, _$2);
		}
		let p$2 = Le$6(26), d$14 = ga$3();
		return t$13.setSkipJsDocLeadingAsterisks(!1), p$2 && (d$14 = P$5(h$3.createJSDocVariadicType(d$14), _$2)), u$14() === 64 ? (U$4(), P$5(h$3.createJSDocOptionalType(d$14), _$2)) : d$14;
	}
	function eo$4() {
		let _$2 = L$4();
		j$7(114);
		let p$2 = Br$5(!0), d$14 = t$13.hasPrecedingLineBreak() ? void 0 : Pa$3();
		return P$5(h$3.createTypeQueryNode(p$2, d$14), _$2);
	}
	function to$4() {
		let _$2 = L$4(), p$2 = En$5(!1, !0), d$14 = St$5(), b$7, w$3;
		Le$6(96) && (_i$5() || !xr$4() ? b$7 = _t$5() : w$3 = $o$3());
		let I$2 = Le$6(64) ? _t$5() : void 0, $$4 = h$3.createTypeParameterDeclaration(p$2, d$14, b$7, I$2);
		return $$4.expression = w$3, P$5($$4, _$2);
	}
	function mn$5() {
		if (u$14() === 30) return Ur$5(19, to$4, 30, 32);
	}
	function ma$3(_$2) {
		return u$14() === 26 || Aa$4() || Hr$2(u$14()) || u$14() === 60 || _i$5(!_$2);
	}
	function no$5(_$2) {
		let p$2 = Ui$4(A$1.Private_identifiers_cannot_be_used_as_parameters);
		return v2(p$2) === 0 && !nn$2(_$2) && Hr$2(u$14()) && U$4(), p$2;
	}
	function ro$4() {
		return ze$6() || u$14() === 23 || u$14() === 19;
	}
	function fs$3(_$2) {
		return ds$2(_$2);
	}
	function io$4(_$2) {
		return ds$2(_$2, !1);
	}
	function ds$2(_$2, p$2 = !0) {
		let d$14 = L$4(), b$7 = qe$6(), w$3 = _$2 ? R$6(() => En$5(!0)) : Q$4(() => En$5(!0));
		if (u$14() === 110) {
			let Z$4 = h$3.createParameterDeclaration(w$3, void 0, cr$5(!0), void 0, Tr$4(), void 0), ee$4 = Xp(w$3);
			return ee$4 && un$5(ee$4, A$1.Neither_decorators_nor_modifiers_may_be_applied_to_this_parameters), De$7(P$5(Z$4, d$14), b$7);
		}
		let I$2 = Bt$5;
		Bt$5 = !1;
		let $$4 = ft$4(26);
		if (!p$2 && !ro$4()) return;
		let se$3 = De$7(P$5(h$3.createParameterDeclaration(w$3, $$4, no$5(w$3), ft$4(58), Tr$4(), Sr$5()), d$14), b$7);
		return Bt$5 = I$2, se$3;
	}
	function jn$5(_$2, p$2) {
		if (ao$4(_$2, p$2)) return br$4(ga$3);
	}
	function ao$4(_$2, p$2) {
		return _$2 === 39 ? (j$7(_$2), !0) : Le$6(59) ? !0 : p$2 && u$14() === 39 ? (Ee$4(A$1._0_expected, it$2(59)), U$4(), !0) : !1;
	}
	function ms$2(_$2, p$2) {
		let d$14 = we$3(), b$7 = Ye$6();
		Xe$4(!!(_$2 & 1)), st$5(!!(_$2 & 2));
		let w$3 = _$2 & 32 ? dn$5(17, us$2) : dn$5(16, () => p$2 ? fs$3(b$7) : io$4(b$7));
		return Xe$4(d$14), st$5(b$7), w$3;
	}
	function Qn$5(_$2) {
		if (!j$7(21)) return ur$6();
		let p$2 = ms$2(_$2, !0);
		return j$7(22), p$2;
	}
	function ha$5() {
		Le$6(28) || Qt$3();
	}
	function so$4(_$2) {
		let p$2 = L$4(), d$14 = qe$6();
		_$2 === 180 && j$7(105);
		let b$7 = mn$5(), w$3 = Qn$5(4), I$2 = jn$5(59, !0);
		ha$5();
		let $$4 = _$2 === 179 ? h$3.createCallSignature(b$7, w$3, I$2) : h$3.createConstructSignature(b$7, w$3, I$2);
		return De$7(P$5($$4, p$2), d$14);
	}
	function qr$4() {
		return u$14() === 23 && Y$6(nu$3);
	}
	function nu$3() {
		if (U$4(), u$14() === 26 || u$14() === 24) return !0;
		if (Hr$2(u$14())) {
			if (U$4(), ve$6()) return !0;
		} else if (ve$6()) U$4();
		else return !1;
		return u$14() === 59 || u$14() === 28 ? !0 : u$14() !== 58 ? !1 : (U$4(), u$14() === 59 || u$14() === 28 || u$14() === 24);
	}
	function hs$3(_$2, p$2, d$14) {
		let b$7 = Ur$5(16, () => fs$3(!1), 23, 24), w$3 = Tr$4();
		ha$5();
		let I$2 = h$3.createIndexSignature(d$14, b$7, w$3);
		return De$7(P$5(I$2, _$2), p$2);
	}
	function _o$2(_$2, p$2, d$14) {
		let b$7 = Rr$5(), w$3 = ft$4(58), I$2;
		if (u$14() === 21 || u$14() === 30) {
			let $$4 = mn$5(), se$3 = Qn$5(4), Z$4 = jn$5(59, !0);
			I$2 = h$3.createMethodSignature(d$14, b$7, w$3, $$4, se$3, Z$4);
		} else {
			let $$4 = Tr$4();
			I$2 = h$3.createPropertySignature(d$14, b$7, w$3, $$4), u$14() === 64 && (I$2.initializer = Sr$5());
		}
		return ha$5(), De$7(P$5(I$2, _$2), p$2);
	}
	function oo$4() {
		if (u$14() === 21 || u$14() === 30 || u$14() === 139 || u$14() === 153) return !0;
		let _$2 = !1;
		for (; Hr$2(u$14());) _$2 = !0, U$4();
		return u$14() === 23 ? !0 : (vr$4() && (_$2 = !0, U$4()), _$2 ? u$14() === 21 || u$14() === 30 || u$14() === 58 || u$14() === 59 || u$14() === 28 || or$5() : !1);
	}
	function Oi$5() {
		if (u$14() === 21 || u$14() === 30) return so$4(179);
		if (u$14() === 105 && Y$6(co$5)) return so$4(180);
		let _$2 = L$4(), p$2 = qe$6(), d$14 = En$5(!1);
		return ri$7(139) ? Vr$4(_$2, p$2, d$14, 177, 4) : ri$7(153) ? Vr$4(_$2, p$2, d$14, 178, 4) : qr$4() ? hs$3(_$2, p$2, d$14) : _o$2(_$2, p$2, d$14);
	}
	function co$5() {
		return U$4(), u$14() === 21 || u$14() === 30;
	}
	function lo$4() {
		return U$4() === 25;
	}
	function uo$4() {
		switch (U$4()) {
			case 21:
			case 30:
			case 25: return !0;
		}
		return !1;
	}
	function po$5() {
		let _$2 = L$4();
		return P$5(h$3.createTypeLiteralNode(fo$2()), _$2);
	}
	function fo$2() {
		let _$2;
		return j$7(19) ? (_$2 = wn$4(4, Oi$5), j$7(20)) : _$2 = ur$6(), _$2;
	}
	function mo$3() {
		return U$4(), u$14() === 40 || u$14() === 41 ? U$4() === 148 : (u$14() === 148 && U$4(), u$14() === 23 && Pi$5() && U$4() === 103);
	}
	function ru$4() {
		let _$2 = L$4(), p$2 = Rt$5();
		j$7(103);
		let d$14 = _t$5();
		return P$5(h$3.createTypeParameterDeclaration(void 0, p$2, d$14, void 0), _$2);
	}
	function ho$3() {
		let _$2 = L$4();
		j$7(19);
		let p$2;
		(u$14() === 148 || u$14() === 40 || u$14() === 41) && (p$2 = Wt$4(), p$2.kind !== 148 && j$7(148)), j$7(23);
		let d$14 = ru$4(), b$7 = Le$6(130) ? _t$5() : void 0;
		j$7(24);
		let w$3;
		(u$14() === 58 || u$14() === 40 || u$14() === 41) && (w$3 = Wt$4(), w$3.kind !== 58 && j$7(58));
		let I$2 = Tr$4();
		Qt$3();
		let $$4 = wn$4(4, Oi$5);
		return j$7(20), P$5(h$3.createMappedTypeNode(p$2, d$14, b$7, w$3, I$2, $$4), _$2);
	}
	function yo$3() {
		let _$2 = L$4();
		if (Le$6(26)) return P$5(h$3.createRestTypeNode(_t$5()), _$2);
		let p$2 = _t$5();
		if (ch(p$2) && p$2.pos === p$2.type.pos) {
			let d$14 = h$3.createOptionalTypeNode(p$2.type);
			return gn$2(d$14, p$2), d$14.flags = p$2.flags, d$14;
		}
		return p$2;
	}
	function ys$2() {
		return U$4() === 59 || u$14() === 58 && U$4() === 59;
	}
	function iu$4() {
		return u$14() === 26 ? wt$2(U$4()) && ys$2() : wt$2(u$14()) && ys$2();
	}
	function go$4() {
		if (Y$6(iu$4)) {
			let _$2 = L$4(), p$2 = qe$6(), d$14 = ft$4(26), b$7 = Rt$5(), w$3 = ft$4(58);
			j$7(59);
			let I$2 = yo$3(), $$4 = h$3.createNamedTupleMember(d$14, b$7, w$3, I$2);
			return De$7(P$5($$4, _$2), p$2);
		}
		return yo$3();
	}
	function au$3() {
		let _$2 = L$4();
		return P$5(h$3.createTupleTypeNode(Ur$5(21, go$4, 23, 24)), _$2);
	}
	function bo$3() {
		let _$2 = L$4();
		j$7(21);
		let p$2 = _t$5();
		return j$7(22), P$5(h$3.createParenthesizedType(p$2), _$2);
	}
	function su$3() {
		let _$2;
		if (u$14() === 128) {
			let p$2 = L$4();
			U$4();
			let d$14 = P$5(ye$4(128), p$2);
			_$2 = Ct$7([d$14], p$2);
		}
		return _$2;
	}
	function gs$3() {
		let _$2 = L$4(), p$2 = qe$6(), d$14 = su$3(), b$7 = Le$6(105);
		B$2.assert(!d$14 || b$7, "Per isStartOfFunctionOrConstructorType, a function type cannot have modifiers.");
		let w$3 = mn$5(), I$2 = Qn$5(4), $$4 = jn$5(39, !1), se$3 = b$7 ? h$3.createConstructorTypeNode(d$14, w$3, I$2, $$4) : h$3.createFunctionTypeNode(w$3, I$2, $$4);
		return De$7(P$5(se$3, _$2), p$2);
	}
	function vo$4() {
		let _$2 = Wt$4();
		return u$14() === 25 ? void 0 : _$2;
	}
	function bs$4(_$2) {
		let p$2 = L$4();
		_$2 && U$4();
		let d$14 = u$14() === 112 || u$14() === 97 || u$14() === 106 ? Wt$4() : ai$5(u$14());
		return _$2 && (d$14 = P$5(h$3.createPrefixUnaryExpression(41, d$14), p$2)), P$5(h$3.createLiteralTypeNode(d$14), p$2);
	}
	function _u$4() {
		return U$4(), u$14() === 102;
	}
	function vs$2() {
		vt$6 |= 4194304;
		let _$2 = L$4(), p$2 = Le$6(114);
		j$7(102), j$7(21);
		let d$14 = _t$5(), b$7;
		if (Le$6(28)) {
			let $$4 = t$13.getTokenStart();
			j$7(19);
			let se$3 = u$14();
			if (se$3 === 118 || se$3 === 132 ? U$4() : Ee$4(A$1._0_expected, it$2(118)), j$7(59), b$7 = Xs$5(se$3, !0), !j$7(20)) {
				let Z$4 = Fa$1(at$4);
				Z$4 && Z$4.code === A$1._0_expected.code && al(Z$4, La(Lt$6, Qe$4, $$4, 1, A$1.The_parser_expected_to_find_a_1_to_match_the_0_token_here, "{", "}"));
			}
		}
		j$7(22);
		let w$3 = Le$6(25) ? si$6() : void 0, I$2 = Q_();
		return P$5(h$3.createImportTypeNode(d$14, b$7, w$3, I$2, p$2), _$2);
	}
	function To$3() {
		return U$4(), u$14() === 9 || u$14() === 10;
	}
	function Ts$3() {
		switch (u$14()) {
			case 133:
			case 159:
			case 154:
			case 150:
			case 163:
			case 155:
			case 136:
			case 157:
			case 146:
			case 151: return pe$6(vo$4) || da$4();
			case 67: t$13.reScanAsteriskEqualsToken();
			case 42: return eu$4();
			case 61: t$13.reScanQuestionToken();
			case 58: return tu$5();
			case 100: return Z_();
			case 54: return K_();
			case 15:
			case 11:
			case 9:
			case 10:
			case 112:
			case 97:
			case 106: return bs$4();
			case 41: return Y$6(To$3) ? bs$4(!0) : da$4();
			case 116: return Wt$4();
			case 110: {
				let _$2 = ls$3();
				return u$14() === 142 && !t$13.hasPrecedingLineBreak() ? Zl$3(_$2) : _$2;
			}
			case 114: return Y$6(_u$4) ? vs$2() : eo$4();
			case 19: return Y$6(mo$3) ? ho$3() : po$5();
			case 23: return au$3();
			case 21: return bo$3();
			case 102: return vs$2();
			case 131: return Y$6(Js$3) ? No$3() : da$4();
			case 16: return G_();
			default: return da$4();
		}
	}
	function _i$5(_$2) {
		switch (u$14()) {
			case 133:
			case 159:
			case 154:
			case 150:
			case 163:
			case 136:
			case 148:
			case 155:
			case 158:
			case 116:
			case 157:
			case 106:
			case 110:
			case 114:
			case 146:
			case 19:
			case 23:
			case 30:
			case 52:
			case 51:
			case 105:
			case 11:
			case 9:
			case 10:
			case 112:
			case 97:
			case 151:
			case 42:
			case 58:
			case 54:
			case 26:
			case 140:
			case 102:
			case 131:
			case 15:
			case 16: return !0;
			case 100: return !_$2;
			case 41: return !_$2 && Y$6(To$3);
			case 21: return !_$2 && Y$6(xo$2);
			default: return ve$6();
		}
	}
	function xo$2() {
		return U$4(), u$14() === 22 || ma$3(!1) || _i$5();
	}
	function So$4() {
		let _$2 = L$4(), p$2 = Ts$3();
		for (; !t$13.hasPrecedingLineBreak();) switch (u$14()) {
			case 54:
				U$4(), p$2 = P$5(h$3.createJSDocNonNullableType(p$2, !0), _$2);
				break;
			case 58:
				if (Y$6(Ni$4)) return p$2;
				U$4(), p$2 = P$5(h$3.createJSDocNullableType(p$2, !0), _$2);
				break;
			case 23:
				if (j$7(23), _i$5()) {
					let d$14 = _t$5();
					j$7(24), p$2 = P$5(h$3.createIndexedAccessTypeNode(p$2, d$14), _$2);
				} else j$7(24), p$2 = P$5(h$3.createArrayTypeNode(p$2), _$2);
				break;
			default: return p$2;
		}
		return p$2;
	}
	function wo$3(_$2) {
		let p$2 = L$4();
		return j$7(_$2), P$5(h$3.createTypeOperatorNode(_$2, Eo$4()), p$2);
	}
	function ou$2() {
		if (Le$6(96)) {
			let _$2 = Jn$5(_t$5);
			if (We$2() || u$14() !== 58) return _$2;
		}
	}
	function ko$2() {
		let _$2 = L$4(), p$2 = St$5(), d$14 = pe$6(ou$2), b$7 = h$3.createTypeParameterDeclaration(void 0, p$2, d$14);
		return P$5(b$7, _$2);
	}
	function cu$3() {
		let _$2 = L$4();
		return j$7(140), P$5(h$3.createInferTypeNode(ko$2()), _$2);
	}
	function Eo$4() {
		let _$2 = u$14();
		switch (_$2) {
			case 143:
			case 158:
			case 148: return wo$3(_$2);
			case 140: return cu$3();
		}
		return br$4(So$4);
	}
	function ya$3(_$2) {
		if (Ss$2()) {
			let p$2 = gs$3(), d$14;
			return Pf(p$2) ? d$14 = _$2 ? A$1.Function_type_notation_must_be_parenthesized_when_used_in_a_union_type : A$1.Function_type_notation_must_be_parenthesized_when_used_in_an_intersection_type : d$14 = _$2 ? A$1.Constructor_type_notation_must_be_parenthesized_when_used_in_a_union_type : A$1.Constructor_type_notation_must_be_parenthesized_when_used_in_an_intersection_type, un$5(p$2, d$14), p$2;
		}
	}
	function Ao$2(_$2, p$2, d$14) {
		let b$7 = L$4(), w$3 = _$2 === 52, I$2 = Le$6(_$2), $$4 = I$2 && ya$3(w$3) || p$2();
		if (u$14() === _$2 || I$2) {
			let se$3 = [$$4];
			for (; Le$6(_$2);) se$3.push(ya$3(w$3) || p$2());
			$$4 = P$5(d$14(Ct$7(se$3, b$7)), b$7);
		}
		return $$4;
	}
	function xs$3() {
		return Ao$2(51, Eo$4, h$3.createIntersectionTypeNode);
	}
	function lu$1() {
		return Ao$2(52, xs$3, h$3.createUnionTypeNode);
	}
	function Co$1() {
		return U$4(), u$14() === 105;
	}
	function Ss$2() {
		return u$14() === 30 || u$14() === 21 && Y$6(Do$2) ? !0 : u$14() === 105 || u$14() === 128 && Y$6(Co$1);
	}
	function uu$3() {
		if (Hr$2(u$14()) && En$5(!1), ve$6() || u$14() === 110) return U$4(), !0;
		if (u$14() === 23 || u$14() === 19) {
			let _$2 = at$4.length;
			return Ui$4(), _$2 === at$4.length;
		}
		return !1;
	}
	function Do$2() {
		return U$4(), !!(u$14() === 22 || u$14() === 26 || uu$3() && (u$14() === 59 || u$14() === 28 || u$14() === 58 || u$14() === 64 || u$14() === 22 && (U$4(), u$14() === 39)));
	}
	function ga$3() {
		let _$2 = L$4(), p$2 = ve$6() && pe$6(Po$2), d$14 = _t$5();
		return p$2 ? P$5(h$3.createTypePredicateNode(void 0, p$2, d$14), _$2) : d$14;
	}
	function Po$2() {
		let _$2 = St$5();
		if (u$14() === 142 && !t$13.hasPrecedingLineBreak()) return U$4(), _$2;
	}
	function No$3() {
		let _$2 = L$4(), p$2 = Xn$5(131), d$14 = u$14() === 110 ? ls$3() : St$5(), b$7 = Le$6(142) ? _t$5() : void 0;
		return P$5(h$3.createTypePredicateNode(p$2, d$14, b$7), _$2);
	}
	function _t$5() {
		if (nt$4 & 81920) return Pt$5(81920, _t$5);
		if (Ss$2()) return gs$3();
		let _$2 = L$4(), p$2 = lu$1();
		if (!We$2() && !t$13.hasPrecedingLineBreak() && Le$6(96)) {
			let d$14 = Jn$5(_t$5);
			j$7(58);
			let b$7 = br$4(_t$5);
			j$7(59);
			let w$3 = br$4(_t$5);
			return P$5(h$3.createConditionalTypeNode(p$2, d$14, b$7, w$3), _$2);
		}
		return p$2;
	}
	function Tr$4() {
		return Le$6(59) ? _t$5() : void 0;
	}
	function ws$2() {
		switch (u$14()) {
			case 110:
			case 108:
			case 106:
			case 112:
			case 97:
			case 9:
			case 10:
			case 11:
			case 15:
			case 16:
			case 21:
			case 23:
			case 19:
			case 100:
			case 86:
			case 105:
			case 44:
			case 69:
			case 80: return !0;
			case 102: return Y$6(uo$4);
			default: return ve$6();
		}
	}
	function xr$4() {
		if (ws$2()) return !0;
		switch (u$14()) {
			case 40:
			case 41:
			case 55:
			case 54:
			case 91:
			case 114:
			case 116:
			case 46:
			case 47:
			case 30:
			case 135:
			case 127:
			case 81:
			case 60: return !0;
			default: return zo$4() ? !0 : ve$6();
		}
	}
	function Io$4() {
		return u$14() !== 19 && u$14() !== 100 && u$14() !== 86 && u$14() !== 60 && xr$4();
	}
	function Et$5() {
		let _$2 = et$5();
		_$2 && Ke$4(!1);
		let p$2 = L$4(), d$14 = Ft$4(!0), b$7;
		for (; b$7 = ft$4(28);) d$14 = As$2(d$14, b$7, Ft$4(!0), p$2);
		return _$2 && Ke$4(!0), d$14;
	}
	function Sr$5() {
		return Le$6(64) ? Ft$4(!0) : void 0;
	}
	function Ft$4(_$2) {
		if (Oo$4()) return Mo$3();
		let p$2 = fu$3(_$2) || Uo$3(_$2);
		if (p$2) return p$2;
		let d$14 = L$4(), b$7 = qe$6(), w$3 = Mi$4(0);
		return w$3.kind === 80 && u$14() === 39 ? Lo$2(d$14, w$3, _$2, b$7, void 0) : Va$1(w$3) && A1(Ve$5()) ? As$2(w$3, Wt$4(), Ft$4(_$2), d$14) : du$2(w$3, d$14, _$2);
	}
	function Oo$4() {
		return u$14() === 127 ? we$3() ? !0 : Y$6(js$4) : !1;
	}
	function pu$2() {
		return U$4(), !t$13.hasPrecedingLineBreak() && ve$6();
	}
	function Mo$3() {
		let _$2 = L$4();
		return U$4(), !t$13.hasPrecedingLineBreak() && (u$14() === 42 || xr$4()) ? P$5(h$3.createYieldExpression(ft$4(42), Ft$4(!0)), _$2) : P$5(h$3.createYieldExpression(void 0, void 0), _$2);
	}
	function Lo$2(_$2, p$2, d$14, b$7, w$3) {
		B$2.assert(u$14() === 39, "parseSimpleArrowFunctionExpression should only have been called if we had a =>");
		let I$2 = h$3.createParameterDeclaration(void 0, void 0, p$2, void 0, void 0, void 0);
		P$5(I$2, p$2.pos);
		let $$4 = Ct$7([I$2], I$2.pos, I$2.end), se$3 = Xn$5(39), Z$4 = ks$3(!!w$3, d$14), ee$4 = h$3.createArrowFunction(w$3, void 0, $$4, void 0, se$3, Z$4);
		return De$7(P$5(ee$4, _$2), b$7);
	}
	function fu$3(_$2) {
		let p$2 = Jo$3();
		if (p$2 !== 0) return p$2 === 1 ? qo$3(!0, !0) : pe$6(() => Ro$5(_$2));
	}
	function Jo$3() {
		return u$14() === 21 || u$14() === 30 || u$14() === 134 ? Y$6(jo$3) : u$14() === 39 ? 1 : 0;
	}
	function jo$3() {
		if (u$14() === 134 && (U$4(), t$13.hasPrecedingLineBreak() || u$14() !== 21 && u$14() !== 30)) return 0;
		let _$2 = u$14(), p$2 = U$4();
		if (_$2 === 21) {
			if (p$2 === 22) switch (U$4()) {
				case 39:
				case 59:
				case 19: return 1;
				default: return 0;
			}
			if (p$2 === 23 || p$2 === 19) return 2;
			if (p$2 === 26) return 1;
			if (Hr$2(p$2) && p$2 !== 134 && Y$6(Pi$5)) return U$4() === 130 ? 0 : 1;
			if (!ve$6() && p$2 !== 110) return 0;
			switch (U$4()) {
				case 59: return 1;
				case 58: return U$4(), u$14() === 59 || u$14() === 28 || u$14() === 64 || u$14() === 22 ? 1 : 0;
				case 28:
				case 64:
				case 22: return 2;
			}
			return 0;
		} else return B$2.assert(_$2 === 30), !ve$6() && u$14() !== 87 ? 0 : ct$4 === 1 ? Y$6(() => {
			Le$6(87);
			let b$7 = U$4();
			if (b$7 === 96) switch (U$4()) {
				case 64:
				case 32:
				case 44: return !1;
				default: return !0;
			}
			else if (b$7 === 28 || b$7 === 64) return !0;
			return !1;
		}) ? 1 : 0 : 2;
	}
	function Ro$5(_$2) {
		let p$2 = t$13.getTokenStart();
		if (ln$5 != null && ln$5.has(p$2)) return;
		let d$14 = qo$3(!1, _$2);
		return d$14 || (ln$5 || (ln$5 = /* @__PURE__ */ new Set())).add(p$2), d$14;
	}
	function Uo$3(_$2) {
		if (u$14() === 134 && Y$6(Bo$3) === 1) {
			let p$2 = L$4(), d$14 = qe$6(), b$7 = Rc$1(), w$3 = Mi$4(0);
			return Lo$2(p$2, w$3, _$2, d$14, b$7);
		}
	}
	function Bo$3() {
		if (u$14() === 134) {
			if (U$4(), t$13.hasPrecedingLineBreak() || u$14() === 39) return 0;
			let _$2 = Mi$4(0);
			if (!t$13.hasPrecedingLineBreak() && _$2.kind === 80 && u$14() === 39) return 1;
		}
		return 0;
	}
	function qo$3(_$2, p$2) {
		let d$14 = L$4(), b$7 = qe$6(), w$3 = Rc$1(), I$2 = nn$2(w$3, ol) ? 2 : 0, $$4 = mn$5(), se$3;
		if (j$7(21)) {
			if (_$2) se$3 = ms$2(I$2, _$2);
			else {
				let Zt$3 = ms$2(I$2, _$2);
				if (!Zt$3) return;
				se$3 = Zt$3;
			}
			if (!j$7(22) && !_$2) return;
		} else {
			if (!_$2) return;
			se$3 = ur$6();
		}
		let Z$4 = u$14() === 59, ee$4 = jn$5(59, !1);
		if (ee$4 && !_$2 && cs$2(ee$4)) return;
		let ce$4 = ee$4;
		for (; (ce$4 == null ? void 0 : ce$4.kind) === 196;) ce$4 = ce$4.type;
		let je$4 = ce$4 && lh(ce$4);
		if (!_$2 && u$14() !== 39 && (je$4 || u$14() !== 19)) return;
		let Re$7 = u$14(), Ae$5 = Xn$5(39), Yt$4 = Re$7 === 39 || Re$7 === 19 ? ks$3(nn$2(w$3, ol), p$2) : St$5();
		if (!p$2 && Z$4 && u$14() !== 59) return;
		let hn$5 = h$3.createArrowFunction(w$3, $$4, se$3, ee$4, Ae$5, Yt$4);
		return De$7(P$5(hn$5, d$14), b$7);
	}
	function ks$3(_$2, p$2) {
		if (u$14() === 19) return Sa$4(_$2 ? 2 : 0);
		if (u$14() !== 27 && u$14() !== 100 && u$14() !== 86 && Sc$1() && !Io$4()) return Sa$4(16 | (_$2 ? 2 : 0));
		let d$14 = Bt$5;
		Bt$5 = !1;
		let b$7 = _$2 ? R$6(() => Ft$4(p$2)) : Q$4(() => Ft$4(p$2));
		return Bt$5 = d$14, b$7;
	}
	function du$2(_$2, p$2, d$14) {
		let b$7 = ft$4(58);
		if (!b$7) return _$2;
		let w$3;
		return P$5(h$3.createConditionalExpression(_$2, b$7, Pt$5(a$13, () => Ft$4(!1)), w$3 = Xn$5(59), Up(w$3) ? Ft$4(d$14) : Gt$4(80, !1, A$1._0_expected, it$2(59))), p$2);
	}
	function Mi$4(_$2) {
		let p$2 = L$4(), d$14 = $o$3();
		return Es$2(_$2, d$14, p$2);
	}
	function Fo$2(_$2) {
		return _$2 === 103 || _$2 === 165;
	}
	function Es$2(_$2, p$2, d$14) {
		for (;;) {
			Ve$5();
			let b$7 = wp(u$14());
			if (!(u$14() === 43 ? b$7 >= _$2 : b$7 > _$2) || u$14() === 103 && be$5()) break;
			if (u$14() === 130 || u$14() === 152) {
				if (t$13.hasPrecedingLineBreak()) break;
				{
					let I$2 = u$14();
					U$4(), p$2 = I$2 === 152 ? Vo$4(p$2, _t$5()) : Wo$4(p$2, _t$5());
				}
			} else p$2 = As$2(p$2, Wt$4(), Mi$4(b$7), d$14);
		}
		return p$2;
	}
	function zo$4() {
		return be$5() && u$14() === 103 ? !1 : wp(u$14()) > 0;
	}
	function Vo$4(_$2, p$2) {
		return P$5(h$3.createSatisfiesExpression(_$2, p$2), _$2.pos);
	}
	function As$2(_$2, p$2, d$14, b$7) {
		return P$5(h$3.createBinaryExpression(_$2, p$2, d$14), b$7);
	}
	function Wo$4(_$2, p$2) {
		return P$5(h$3.createAsExpression(_$2, p$2), _$2.pos);
	}
	function Go$3() {
		let _$2 = L$4();
		return P$5(h$3.createPrefixUnaryExpression(u$14(), Me$6(wr$4)), _$2);
	}
	function Yo$3() {
		let _$2 = L$4();
		return P$5(h$3.createDeleteExpression(Me$6(wr$4)), _$2);
	}
	function mu$4() {
		let _$2 = L$4();
		return P$5(h$3.createTypeOfExpression(Me$6(wr$4)), _$2);
	}
	function Ho$3() {
		let _$2 = L$4();
		return P$5(h$3.createVoidExpression(Me$6(wr$4)), _$2);
	}
	function hu$3() {
		return u$14() === 135 ? Ye$6() ? !0 : Y$6(js$4) : !1;
	}
	function Xo$4() {
		let _$2 = L$4();
		return P$5(h$3.createAwaitExpression(Me$6(wr$4)), _$2);
	}
	function $o$3() {
		if (yu$3()) {
			let d$14 = L$4(), b$7 = ba$4();
			return u$14() === 43 ? Es$2(wp(u$14()), b$7, d$14) : b$7;
		}
		let _$2 = u$14(), p$2 = wr$4();
		if (u$14() === 43) {
			let d$14 = Pr$2(Qe$4, p$2.pos), { end: b$7 } = p$2;
			p$2.kind === 216 ? rt$5(d$14, b$7, A$1.A_type_assertion_expression_is_not_allowed_in_the_left_hand_side_of_an_exponentiation_expression_Consider_enclosing_the_expression_in_parentheses) : (B$2.assert(Sp(_$2)), rt$5(d$14, b$7, A$1.An_unary_expression_with_the_0_operator_is_not_allowed_in_the_left_hand_side_of_an_exponentiation_expression_Consider_enclosing_the_expression_in_parentheses, it$2(_$2)));
		}
		return p$2;
	}
	function wr$4() {
		switch (u$14()) {
			case 40:
			case 41:
			case 55:
			case 54: return Go$3();
			case 91: return Yo$3();
			case 114: return mu$4();
			case 116: return Ho$3();
			case 30: return ct$4 === 1 ? Ji$4(!0, void 0, void 0, !0) : tc$3();
			case 135: if (hu$3()) return Xo$4();
			default: return ba$4();
		}
	}
	function yu$3() {
		switch (u$14()) {
			case 40:
			case 41:
			case 55:
			case 54:
			case 91:
			case 114:
			case 116:
			case 135: return !1;
			case 30: if (ct$4 !== 1) return !1;
			default: return !0;
		}
	}
	function ba$4() {
		if (u$14() === 46 || u$14() === 47) {
			let p$2 = L$4();
			return P$5(h$3.createPrefixUnaryExpression(u$14(), Me$6(Li$4)), p$2);
		} else if (ct$4 === 1 && u$14() === 30 && Y$6(M_)) return Ji$4(!0);
		let _$2 = Li$4();
		if (B$2.assert(Va$1(_$2)), (u$14() === 46 || u$14() === 47) && !t$13.hasPrecedingLineBreak()) {
			let p$2 = u$14();
			return U$4(), P$5(h$3.createPostfixUnaryExpression(_$2, p$2), _$2.pos);
		}
		return _$2;
	}
	function Li$4() {
		let _$2 = L$4(), p$2;
		return u$14() === 102 ? Y$6(co$5) ? (vt$6 |= 4194304, p$2 = Wt$4()) : Y$6(lo$4) ? (U$4(), U$4(), p$2 = P$5(h$3.createMetaProperty(102, Rt$5()), _$2), vt$6 |= 8388608) : p$2 = va$4() : p$2 = u$14() === 108 ? Qo$4() : va$4(), Is$3(_$2, p$2);
	}
	function va$4() {
		let _$2 = L$4(), p$2 = Os$2();
		return _n$5(_$2, p$2, !0);
	}
	function Qo$4() {
		let _$2 = L$4(), p$2 = Wt$4();
		if (u$14() === 30) {
			let d$14 = L$4(), b$7 = pe$6(xa$5);
			b$7 !== void 0 && (rt$5(d$14, L$4(), A$1.super_may_not_use_type_arguments), kn$4() || (p$2 = h$3.createExpressionWithTypeArguments(p$2, b$7)));
		}
		return u$14() === 21 || u$14() === 25 || u$14() === 23 ? p$2 : (Xn$5(25, A$1.super_must_be_followed_by_an_argument_list_or_member_access), P$5(ie$6(p$2, ii$6(!0, !0, !0)), _$2));
	}
	function Ji$4(_$2, p$2, d$14, b$7 = !1) {
		let w$3 = L$4(), I$2 = vu$3(_$2), $$4;
		if (I$2.kind === 286) {
			let se$3 = Ta$3(I$2), Z$4, ee$4 = se$3[se$3.length - 1];
			if ((ee$4 == null ? void 0 : ee$4.kind) === 284 && !di$1(ee$4.openingElement.tagName, ee$4.closingElement.tagName) && di$1(I$2.tagName, ee$4.closingElement.tagName)) {
				let ce$4 = ee$4.children.end, je$4 = P$5(h$3.createJsxElement(ee$4.openingElement, ee$4.children, P$5(h$3.createJsxClosingElement(P$5(te$5(""), ce$4, ce$4)), ce$4, ce$4)), ee$4.openingElement.pos, ce$4);
				se$3 = Ct$7([...se$3.slice(0, se$3.length - 1), je$4], se$3.pos, ce$4), Z$4 = ee$4.closingElement;
			} else Z$4 = ec$4(I$2, _$2), di$1(I$2.tagName, Z$4.tagName) || (d$14 && zp(d$14) && di$1(Z$4.tagName, d$14.tagName) ? un$5(I$2.tagName, A$1.JSX_element_0_has_no_corresponding_closing_tag, s_$1(Qe$4, I$2.tagName)) : un$5(Z$4.tagName, A$1.Expected_corresponding_JSX_closing_tag_for_0, s_$1(Qe$4, I$2.tagName)));
			$$4 = P$5(h$3.createJsxElement(I$2, se$3, Z$4), w$3);
		} else I$2.kind === 289 ? $$4 = P$5(h$3.createJsxFragment(I$2, Ta$3(I$2), wu$2(_$2)), w$3) : (B$2.assert(I$2.kind === 285), $$4 = I$2);
		if (!b$7 && _$2 && u$14() === 30) {
			let se$3 = typeof p$2 > "u" ? $$4.pos : p$2, Z$4 = pe$6(() => Ji$4(!0, se$3));
			if (Z$4) {
				let ee$4 = Gt$4(28, !1);
				return Xd(ee$4, Z$4.pos, 0), rt$5(Pr$2(Qe$4, se$3), Z$4.end, A$1.JSX_expressions_must_have_one_parent_element), P$5(h$3.createBinaryExpression($$4, ee$4, Z$4), w$3);
			}
		}
		return $$4;
	}
	function Cs$2() {
		let _$2 = L$4(), p$2 = h$3.createJsxText(t$13.getTokenValue(), lt$3 === 13);
		return lt$3 = t$13.scanJsxToken(), P$5(p$2, _$2);
	}
	function gu$3(_$2, p$2) {
		switch (p$2) {
			case 1:
				if (h6(_$2)) un$5(_$2, A$1.JSX_fragment_has_no_corresponding_closing_tag);
				else {
					let d$14 = _$2.tagName, b$7 = Math.min(Pr$2(Qe$4, d$14.pos), d$14.end);
					rt$5(b$7, d$14.end, A$1.JSX_element_0_has_no_corresponding_closing_tag, s_$1(Qe$4, _$2.tagName));
				}
				return;
			case 31:
			case 7: return;
			case 12:
			case 13: return Cs$2();
			case 19: return Ko$5(!1);
			case 30: return Ji$4(!1, void 0, _$2);
			default: return B$2.assertNever(p$2);
		}
	}
	function Ta$3(_$2) {
		let p$2 = [], d$14 = L$4(), b$7 = yt$4;
		for (yt$4 |= 16384;;) {
			let w$3 = gu$3(_$2, lt$3 = t$13.reScanJsxToken());
			if (!w$3 || (p$2.push(w$3), zp(_$2) && (w$3 == null ? void 0 : w$3.kind) === 284 && !di$1(w$3.openingElement.tagName, w$3.closingElement.tagName) && di$1(_$2.tagName, w$3.closingElement.tagName))) break;
		}
		return yt$4 = b$7, Ct$7(p$2, d$14);
	}
	function bu$2() {
		let _$2 = L$4();
		return P$5(h$3.createJsxAttributes(wn$4(13, Zo$3)), _$2);
	}
	function vu$3(_$2) {
		let p$2 = L$4();
		if (j$7(30), u$14() === 32) return Hn$4(), P$5(h$3.createJsxOpeningFragment(), p$2);
		let d$14 = Ds$2(), b$7 = (nt$4 & 524288) === 0 ? Pa$3() : void 0, w$3 = bu$2(), I$2;
		return u$14() === 32 ? (Hn$4(), I$2 = h$3.createJsxOpeningElement(d$14, b$7, w$3)) : (j$7(44), j$7(32, void 0, !1) && (_$2 ? U$4() : Hn$4()), I$2 = h$3.createJsxSelfClosingElement(d$14, b$7, w$3)), P$5(I$2, p$2);
	}
	function Ds$2() {
		let _$2 = L$4(), p$2 = Tu$3();
		if (ah(p$2)) return p$2;
		let d$14 = p$2;
		for (; Le$6(25);) d$14 = P$5(ie$6(d$14, ii$6(!0, !1, !1)), _$2);
		return d$14;
	}
	function Tu$3() {
		let _$2 = L$4();
		qt$5();
		let p$2 = u$14() === 110, d$14 = ni$7();
		return Le$6(59) ? (qt$5(), P$5(h$3.createJsxNamespacedName(d$14, ni$7()), _$2)) : p$2 ? P$5(h$3.createToken(110), _$2) : d$14;
	}
	function Ko$5(_$2) {
		let p$2 = L$4();
		if (!j$7(19)) return;
		let d$14, b$7;
		return u$14() !== 20 && (_$2 || (d$14 = ft$4(26)), b$7 = Et$5()), _$2 ? j$7(20) : j$7(20, void 0, !1) && Hn$4(), P$5(h$3.createJsxExpression(d$14, b$7), p$2);
	}
	function Zo$3() {
		if (u$14() === 19) return Su$3();
		let _$2 = L$4();
		return P$5(h$3.createJsxAttribute(xu$4(), Ps$4()), _$2);
	}
	function Ps$4() {
		if (u$14() === 64) {
			if (Ai$5() === 11) return $n$5();
			if (u$14() === 19) return Ko$5(!0);
			if (u$14() === 30) return Ji$4(!0);
			Ee$4(A$1.or_JSX_element_expected);
		}
	}
	function xu$4() {
		let _$2 = L$4();
		qt$5();
		let p$2 = ni$7();
		return Le$6(59) ? (qt$5(), P$5(h$3.createJsxNamespacedName(p$2, ni$7()), _$2)) : p$2;
	}
	function Su$3() {
		let _$2 = L$4();
		j$7(19), j$7(26);
		let p$2 = Et$5();
		return j$7(20), P$5(h$3.createJsxSpreadAttribute(p$2), _$2);
	}
	function ec$4(_$2, p$2) {
		let d$14 = L$4();
		j$7(31);
		let b$7 = Ds$2();
		return j$7(32, void 0, !1) && (p$2 || !di$1(_$2.tagName, b$7) ? U$4() : Hn$4()), P$5(h$3.createJsxClosingElement(b$7), d$14);
	}
	function wu$2(_$2) {
		let p$2 = L$4();
		return j$7(31), j$7(32, A$1.Expected_corresponding_closing_tag_for_JSX_fragment, !1) && (_$2 ? U$4() : Hn$4()), P$5(h$3.createJsxJsxClosingFragment(), p$2);
	}
	function tc$3() {
		B$2.assert(ct$4 !== 1, "Type assertions should never be parsed in JSX; they should be parsed as comparisons or JSX elements/fragments.");
		let _$2 = L$4();
		j$7(30);
		let p$2 = _t$5();
		j$7(32);
		let d$14 = wr$4();
		return P$5(h$3.createTypeAssertion(p$2, d$14), _$2);
	}
	function ku$3() {
		return U$4(), wt$2(u$14()) || u$14() === 23 || kn$4();
	}
	function nc$4() {
		return u$14() === 29 && Y$6(ku$3);
	}
	function Ns$1(_$2) {
		if (_$2.flags & 64) return !0;
		if (pl(_$2)) {
			let p$2 = _$2.expression;
			for (; pl(p$2) && !(p$2.flags & 64);) p$2 = p$2.expression;
			if (p$2.flags & 64) {
				for (; pl(_$2);) _$2.flags |= 64, _$2 = _$2.expression;
				return !0;
			}
		}
		return !1;
	}
	function rc$3(_$2, p$2, d$14) {
		let b$7 = ii$6(!0, !0, !0), w$3 = d$14 || Ns$1(p$2), I$2 = w$3 ? Ce$6(p$2, d$14, b$7) : ie$6(p$2, b$7);
		if (w$3 && vi$1(I$2.name) && un$5(I$2.name, A$1.An_optional_chain_cannot_contain_private_identifiers), eh(p$2) && p$2.typeArguments) {
			let $$4 = p$2.typeArguments.pos - 1, se$3 = Pr$2(Qe$4, p$2.typeArguments.end) + 1;
			rt$5($$4, se$3, A$1.An_instantiation_expression_cannot_be_followed_by_a_property_access);
		}
		return P$5(I$2, _$2);
	}
	function Eu$2(_$2, p$2, d$14) {
		let b$7;
		if (u$14() === 24) b$7 = Gt$4(80, !0, A$1.An_element_access_expression_should_take_an_argument);
		else {
			let I$2 = ut$4(Et$5);
			Al(I$2) && (I$2.text = jr$5(I$2.text)), b$7 = I$2;
		}
		j$7(24);
		let w$3 = d$14 || Ns$1(p$2) ? oe$6(p$2, d$14, b$7) : V$5(p$2, b$7);
		return P$5(w$3, _$2);
	}
	function _n$5(_$2, p$2, d$14) {
		for (;;) {
			let b$7, w$3 = !1;
			if (d$14 && nc$4() ? (b$7 = Xn$5(29), w$3 = wt$2(u$14())) : w$3 = Le$6(25), w$3) {
				p$2 = rc$3(_$2, p$2, b$7);
				continue;
			}
			if ((b$7 || !et$5()) && Le$6(23)) {
				p$2 = Eu$2(_$2, p$2, b$7);
				continue;
			}
			if (kn$4()) {
				p$2 = !b$7 && p$2.kind === 233 ? Fr$5(_$2, p$2.expression, b$7, p$2.typeArguments) : Fr$5(_$2, p$2, b$7, void 0);
				continue;
			}
			if (!b$7) {
				if (u$14() === 54 && !t$13.hasPrecedingLineBreak()) {
					U$4(), p$2 = P$5(h$3.createNonNullExpression(p$2), _$2);
					continue;
				}
				let I$2 = pe$6(xa$5);
				if (I$2) {
					p$2 = P$5(h$3.createExpressionWithTypeArguments(p$2, I$2), _$2);
					continue;
				}
			}
			return p$2;
		}
	}
	function kn$4() {
		return u$14() === 15 || u$14() === 16;
	}
	function Fr$5(_$2, p$2, d$14, b$7) {
		let w$3 = h$3.createTaggedTemplateExpression(p$2, b$7, u$14() === 15 ? (Nt$6(!0), $n$5()) : fa$5(!0));
		return (d$14 || p$2.flags & 64) && (w$3.flags |= 64), w$3.questionDotToken = d$14, P$5(w$3, _$2);
	}
	function Is$3(_$2, p$2) {
		for (;;) {
			p$2 = _n$5(_$2, p$2, !0);
			let d$14, b$7 = ft$4(29);
			if (b$7 && (d$14 = pe$6(xa$5), kn$4())) {
				p$2 = Fr$5(_$2, p$2, b$7, d$14);
				continue;
			}
			if (d$14 || u$14() === 21) {
				!b$7 && p$2.kind === 233 && (d$14 = p$2.typeArguments, p$2 = p$2.expression);
				let w$3 = ic$2(), I$2 = b$7 || Ns$1(p$2) ? dt$3(p$2, b$7, d$14, w$3) : G$6(p$2, d$14, w$3);
				p$2 = P$5(I$2, _$2);
				continue;
			}
			if (b$7) {
				let w$3 = Gt$4(80, !1, A$1.Identifier_expected);
				p$2 = P$5(Ce$6(p$2, b$7, w$3), _$2);
			}
			break;
		}
		return p$2;
	}
	function ic$2() {
		j$7(21);
		let _$2 = dn$5(11, _c$2);
		return j$7(22), _$2;
	}
	function xa$5() {
		if ((nt$4 & 524288) !== 0 || kt$6() !== 30) return;
		U$4();
		let _$2 = dn$5(20, _t$5);
		if (Ve$5() === 32) return U$4(), _$2 && Au$4() ? _$2 : void 0;
	}
	function Au$4() {
		switch (u$14()) {
			case 21:
			case 15:
			case 16: return !0;
			case 30:
			case 32:
			case 40:
			case 41: return !1;
		}
		return t$13.hasPrecedingLineBreak() || zo$4() || !xr$4();
	}
	function Os$2() {
		switch (u$14()) {
			case 15: t$13.getTokenFlags() & 26656 && Nt$6(!1);
			case 9:
			case 10:
			case 11: return $n$5();
			case 110:
			case 108:
			case 106:
			case 112:
			case 97: return Wt$4();
			case 21: return Cu$2();
			case 23: return oc$2();
			case 19: return Ms$3();
			case 134:
				if (!Y$6(xc$3)) break;
				return Ls$3();
			case 60: return Uc$1();
			case 86: return Xu$3();
			case 100: return Ls$3();
			case 105: return lc$2();
			case 44:
			case 69:
				if ($e$5() === 14) return $n$5();
				break;
			case 16: return fa$5(!1);
			case 81: return oa$4();
		}
		return St$5(A$1.Expression_expected);
	}
	function Cu$2() {
		let _$2 = L$4(), p$2 = qe$6();
		j$7(21);
		let d$14 = ut$4(Et$5);
		return j$7(22), De$7(P$5(vn$4(d$14), _$2), p$2);
	}
	function ac$2() {
		let _$2 = L$4();
		j$7(26);
		let p$2 = Ft$4(!0);
		return P$5(h$3.createSpreadElement(p$2), _$2);
	}
	function sc$3() {
		return u$14() === 26 ? ac$2() : u$14() === 28 ? P$5(h$3.createOmittedExpression(), L$4()) : Ft$4(!0);
	}
	function _c$2() {
		return Pt$5(a$13, sc$3);
	}
	function oc$2() {
		let _$2 = L$4(), p$2 = t$13.getTokenStart(), d$14 = j$7(23), b$7 = t$13.hasPrecedingLineBreak(), w$3 = dn$5(15, sc$3);
		return Jr$6(23, 24, d$14, p$2), P$5(fe$4(w$3, b$7), _$2);
	}
	function cc$3() {
		let _$2 = L$4(), p$2 = qe$6();
		if (ft$4(26)) {
			let ce$4 = Ft$4(!0);
			return De$7(P$5(h$3.createSpreadAssignment(ce$4), _$2), p$2);
		}
		let d$14 = En$5(!0);
		if (ri$7(139)) return Vr$4(_$2, p$2, d$14, 177, 0);
		if (ri$7(153)) return Vr$4(_$2, p$2, d$14, 178, 0);
		let b$7 = ft$4(42), w$3 = ve$6(), I$2 = Rr$5(), $$4 = ft$4(58), se$3 = ft$4(54);
		if (b$7 || u$14() === 21 || u$14() === 30) return zs$4(_$2, p$2, d$14, b$7, I$2, $$4, se$3);
		let Z$4;
		if (w$3 && u$14() !== 59) {
			let ce$4 = ft$4(64), je$4 = ce$4 ? ut$4(() => Ft$4(!0)) : void 0;
			Z$4 = h$3.createShorthandPropertyAssignment(I$2, je$4), Z$4.equalsToken = ce$4;
		} else {
			j$7(59);
			let ce$4 = ut$4(() => Ft$4(!0));
			Z$4 = h$3.createPropertyAssignment(I$2, ce$4);
		}
		return Z$4.modifiers = d$14, Z$4.questionToken = $$4, Z$4.exclamationToken = se$3, De$7(P$5(Z$4, _$2), p$2);
	}
	function Ms$3() {
		let _$2 = L$4(), p$2 = t$13.getTokenStart(), d$14 = j$7(19), b$7 = t$13.hasPrecedingLineBreak(), w$3 = dn$5(12, cc$3, !0);
		return Jr$6(19, 20, d$14, p$2), P$5(M$2(w$3, b$7), _$2);
	}
	function Ls$3() {
		let _$2 = et$5();
		Ke$4(!1);
		let p$2 = L$4(), d$14 = qe$6(), b$7 = En$5(!1);
		j$7(100);
		let w$3 = ft$4(42), I$2 = w$3 ? 1 : 0, $$4 = nn$2(b$7, ol) ? 2 : 0, se$3 = I$2 && $$4 ? K$6(ji$5) : I$2 ? Yn$5(ji$5) : $$4 ? R$6(ji$5) : ji$5(), Z$4 = mn$5(), ee$4 = Qn$5(I$2 | $$4), ce$4 = jn$5(59, !1), je$4 = Sa$4(I$2 | $$4);
		Ke$4(_$2);
		let Re$7 = h$3.createFunctionExpression(b$7, w$3, se$3, Z$4, ee$4, ce$4, je$4);
		return De$7(P$5(Re$7, p$2), d$14);
	}
	function ji$5() {
		return ze$6() ? es$3() : void 0;
	}
	function lc$2() {
		let _$2 = L$4();
		if (j$7(105), Le$6(25)) {
			let I$2 = Rt$5();
			return P$5(h$3.createMetaProperty(105, I$2), _$2);
		}
		let p$2 = L$4(), d$14 = _n$5(p$2, Os$2(), !1), b$7;
		d$14.kind === 233 && (b$7 = d$14.typeArguments, d$14 = d$14.expression), u$14() === 29 && Ee$4(A$1.Invalid_optional_chain_from_new_expression_Did_you_mean_to_call_0, s_$1(Qe$4, d$14));
		let w$3 = u$14() === 21 ? ic$2() : void 0;
		return P$5(rr$5(d$14, b$7, w$3), _$2);
	}
	function zr$5(_$2, p$2) {
		let d$14 = L$4(), b$7 = qe$6(), w$3 = t$13.getTokenStart(), I$2 = j$7(19, p$2);
		if (I$2 || _$2) {
			let $$4 = t$13.hasPrecedingLineBreak(), se$3 = wn$4(1, Kt$4);
			Jr$6(19, 20, I$2, w$3);
			let Z$4 = De$7(P$5(ir$5(se$3, $$4), d$14), b$7);
			return u$14() === 64 && (Ee$4(A$1.Declaration_or_statement_expected_This_follows_a_block_of_statements_so_if_you_intended_to_write_a_destructuring_assignment_you_might_need_to_wrap_the_whole_assignment_in_parentheses), U$4()), Z$4;
		} else {
			let $$4 = ur$6();
			return De$7(P$5(ir$5($$4, void 0), d$14), b$7);
		}
	}
	function Sa$4(_$2, p$2) {
		let d$14 = we$3();
		Xe$4(!!(_$2 & 1));
		let b$7 = Ye$6();
		st$5(!!(_$2 & 2));
		let w$3 = Bt$5;
		Bt$5 = !1;
		let I$2 = et$5();
		I$2 && Ke$4(!1);
		let $$4 = zr$5(!!(_$2 & 16), p$2);
		return I$2 && Ke$4(!0), Bt$5 = w$3, Xe$4(d$14), st$5(b$7), $$4;
	}
	function uc$3() {
		let _$2 = L$4(), p$2 = qe$6();
		return j$7(27), De$7(P$5(h$3.createEmptyStatement(), _$2), p$2);
	}
	function Du$3() {
		let _$2 = L$4(), p$2 = qe$6();
		j$7(101);
		let d$14 = t$13.getTokenStart(), b$7 = j$7(21), w$3 = ut$4(Et$5);
		Jr$6(21, 22, b$7, d$14);
		let I$2 = Kt$4(), $$4 = Le$6(93) ? Kt$4() : void 0;
		return De$7(P$5(Ge$5(w$3, I$2, $$4), _$2), p$2);
	}
	function pc$3() {
		let _$2 = L$4(), p$2 = qe$6();
		j$7(92);
		let d$14 = Kt$4();
		j$7(117);
		let b$7 = t$13.getTokenStart(), w$3 = j$7(21), I$2 = ut$4(Et$5);
		return Jr$6(21, 22, w$3, b$7), Le$6(27), De$7(P$5(h$3.createDoStatement(d$14, I$2), _$2), p$2);
	}
	function Pu$3() {
		let _$2 = L$4(), p$2 = qe$6();
		j$7(117);
		let d$14 = t$13.getTokenStart(), b$7 = j$7(21), w$3 = ut$4(Et$5);
		Jr$6(21, 22, b$7, d$14);
		let I$2 = Kt$4();
		return De$7(P$5(ar$5(w$3, I$2), _$2), p$2);
	}
	function fc$2() {
		let _$2 = L$4(), p$2 = qe$6();
		j$7(99);
		let d$14 = ft$4(135);
		j$7(21);
		let b$7;
		u$14() !== 27 && (u$14() === 115 || u$14() === 121 || u$14() === 87 || u$14() === 160 && Y$6(kc$3) || u$14() === 135 && Y$6(Ec$2) ? b$7 = Fs$4(!0) : b$7 = Lr$5(Et$5));
		let w$3;
		if (d$14 ? j$7(165) : Le$6(165)) {
			let I$2 = ut$4(() => Ft$4(!0));
			j$7(22), w$3 = Mt$5(d$14, b$7, I$2, Kt$4());
		} else if (Le$6(103)) {
			let I$2 = ut$4(Et$5);
			j$7(22), w$3 = h$3.createForInStatement(b$7, I$2, Kt$4());
		} else {
			j$7(27);
			let I$2 = u$14() !== 27 && u$14() !== 22 ? ut$4(Et$5) : void 0;
			j$7(27);
			let $$4 = u$14() !== 22 ? ut$4(Et$5) : void 0;
			j$7(22), w$3 = Or$5(b$7, I$2, $$4, Kt$4());
		}
		return De$7(P$5(w$3, _$2), p$2);
	}
	function dc$3(_$2) {
		let p$2 = L$4(), d$14 = qe$6();
		j$7(_$2 === 252 ? 83 : 88);
		let b$7 = or$5() ? void 0 : St$5();
		Qt$3();
		let w$3 = _$2 === 252 ? h$3.createBreakStatement(b$7) : h$3.createContinueStatement(b$7);
		return De$7(P$5(w$3, p$2), d$14);
	}
	function mc$2() {
		let _$2 = L$4(), p$2 = qe$6();
		j$7(107);
		let d$14 = or$5() ? void 0 : ut$4(Et$5);
		return Qt$3(), De$7(P$5(h$3.createReturnStatement(d$14), _$2), p$2);
	}
	function Nu$3() {
		let _$2 = L$4(), p$2 = qe$6();
		j$7(118);
		let d$14 = t$13.getTokenStart(), b$7 = j$7(21), w$3 = ut$4(Et$5);
		Jr$6(21, 22, b$7, d$14);
		let I$2 = Tt$7(67108864, Kt$4);
		return De$7(P$5(h$3.createWithStatement(w$3, I$2), _$2), p$2);
	}
	function hc$2() {
		let _$2 = L$4(), p$2 = qe$6();
		j$7(84);
		let d$14 = ut$4(Et$5);
		j$7(59);
		let b$7 = wn$4(3, Kt$4);
		return De$7(P$5(h$3.createCaseClause(d$14, b$7), _$2), p$2);
	}
	function Iu$2() {
		let _$2 = L$4();
		j$7(90), j$7(59);
		let p$2 = wn$4(3, Kt$4);
		return P$5(h$3.createDefaultClause(p$2), _$2);
	}
	function Ou$4() {
		return u$14() === 84 ? hc$2() : Iu$2();
	}
	function yc$2() {
		let _$2 = L$4();
		j$7(19);
		let p$2 = wn$4(2, Ou$4);
		return j$7(20), P$5(h$3.createCaseBlock(p$2), _$2);
	}
	function Mu$2() {
		let _$2 = L$4(), p$2 = qe$6();
		j$7(109), j$7(21);
		let d$14 = ut$4(Et$5);
		j$7(22);
		let b$7 = yc$2();
		return De$7(P$5(h$3.createSwitchStatement(d$14, b$7), _$2), p$2);
	}
	function gc$2() {
		let _$2 = L$4(), p$2 = qe$6();
		j$7(111);
		let d$14 = t$13.hasPrecedingLineBreak() ? void 0 : ut$4(Et$5);
		return d$14 === void 0 && (xn$3++, d$14 = P$5(te$5(""), L$4())), _a$4() || xt$4(d$14), De$7(P$5(h$3.createThrowStatement(d$14), _$2), p$2);
	}
	function Lu$2() {
		let _$2 = L$4(), p$2 = qe$6();
		j$7(113);
		let d$14 = zr$5(!1), b$7 = u$14() === 85 ? bc$2() : void 0, w$3;
		return (!b$7 || u$14() === 98) && (j$7(98, A$1.catch_or_finally_expected), w$3 = zr$5(!1)), De$7(P$5(h$3.createTryStatement(d$14, b$7, w$3), _$2), p$2);
	}
	function bc$2() {
		let _$2 = L$4();
		j$7(85);
		let p$2;
		Le$6(21) ? (p$2 = qs$3(), j$7(22)) : p$2 = void 0;
		let d$14 = zr$5(!1);
		return P$5(h$3.createCatchClause(p$2, d$14), _$2);
	}
	function Ju$2() {
		let _$2 = L$4(), p$2 = qe$6();
		return j$7(89), Qt$3(), De$7(P$5(h$3.createDebuggerStatement(), _$2), p$2);
	}
	function vc$2() {
		let _$2 = L$4(), p$2 = qe$6(), d$14, b$7 = u$14() === 21, w$3 = ut$4(Et$5);
		return Ze$2(w$3) && Le$6(59) ? d$14 = h$3.createLabeledStatement(w$3, Kt$4()) : (_a$4() || xt$4(w$3), d$14 = Mn$4(w$3), b$7 && (p$2 = !1)), De$7(P$5(d$14, _$2), p$2);
	}
	function Js$3() {
		return U$4(), wt$2(u$14()) && !t$13.hasPrecedingLineBreak();
	}
	function Tc$2() {
		return U$4(), u$14() === 86 && !t$13.hasPrecedingLineBreak();
	}
	function xc$3() {
		return U$4(), u$14() === 100 && !t$13.hasPrecedingLineBreak();
	}
	function js$4() {
		return U$4(), (wt$2(u$14()) || u$14() === 9 || u$14() === 10 || u$14() === 11) && !t$13.hasPrecedingLineBreak();
	}
	function ju$3() {
		for (;;) switch (u$14()) {
			case 115:
			case 121:
			case 87:
			case 100:
			case 86:
			case 94: return !0;
			case 160: return Us$6();
			case 135: return wa$3();
			case 120:
			case 156: return pu$2();
			case 144:
			case 145: return Dc$1();
			case 128:
			case 129:
			case 134:
			case 138:
			case 123:
			case 124:
			case 125:
			case 148:
				let _$2 = u$14();
				if (U$4(), t$13.hasPrecedingLineBreak()) return !1;
				if (_$2 === 138 && u$14() === 156) return !0;
				continue;
			case 162: return U$4(), u$14() === 19 || u$14() === 80 || u$14() === 95;
			case 102: return U$4(), u$14() === 11 || u$14() === 42 || u$14() === 19 || wt$2(u$14());
			case 95:
				let p$2 = U$4();
				if (p$2 === 156 && (p$2 = Y$6(U$4)), p$2 === 64 || p$2 === 42 || p$2 === 19 || p$2 === 90 || p$2 === 130 || p$2 === 60) return !0;
				continue;
			case 126:
				U$4();
				continue;
			default: return !1;
		}
	}
	function Ri$4() {
		return Y$6(ju$3);
	}
	function Sc$1() {
		switch (u$14()) {
			case 60:
			case 27:
			case 19:
			case 115:
			case 121:
			case 160:
			case 100:
			case 86:
			case 94:
			case 101:
			case 92:
			case 117:
			case 99:
			case 88:
			case 83:
			case 107:
			case 118:
			case 109:
			case 111:
			case 113:
			case 89:
			case 85:
			case 98: return !0;
			case 102: return Ri$4() || Y$6(uo$4);
			case 87:
			case 95: return Ri$4();
			case 134:
			case 138:
			case 120:
			case 144:
			case 145:
			case 156:
			case 162: return !0;
			case 129:
			case 125:
			case 123:
			case 124:
			case 126:
			case 148: return Ri$4() || !Y$6(Js$3);
			default: return xr$4();
		}
	}
	function wc$2() {
		return U$4(), ze$6() || u$14() === 19 || u$14() === 23;
	}
	function Ru$3() {
		return Y$6(wc$2);
	}
	function kc$3() {
		return Rs$3(!0);
	}
	function Rs$3(_$2) {
		return U$4(), _$2 && u$14() === 165 ? !1 : (ze$6() || u$14() === 19) && !t$13.hasPrecedingLineBreak();
	}
	function Us$6() {
		return Y$6(Rs$3);
	}
	function Ec$2(_$2) {
		return U$4() === 160 ? Rs$3(_$2) : !1;
	}
	function wa$3() {
		return Y$6(Ec$2);
	}
	function Kt$4() {
		switch (u$14()) {
			case 27: return uc$3();
			case 19: return zr$5(!1);
			case 115: return oi$5(L$4(), qe$6(), void 0);
			case 121:
				if (Ru$3()) return oi$5(L$4(), qe$6(), void 0);
				break;
			case 135:
				if (wa$3()) return oi$5(L$4(), qe$6(), void 0);
				break;
			case 160:
				if (Us$6()) return oi$5(L$4(), qe$6(), void 0);
				break;
			case 100: return Oc$2(L$4(), qe$6(), void 0);
			case 86: return Bc$1(L$4(), qe$6(), void 0);
			case 101: return Du$3();
			case 92: return pc$3();
			case 117: return Pu$3();
			case 99: return fc$2();
			case 88: return dc$3(251);
			case 83: return dc$3(252);
			case 107: return mc$2();
			case 118: return Nu$3();
			case 109: return Mu$2();
			case 111: return gc$2();
			case 113:
			case 85:
			case 98: return Lu$2();
			case 89: return Ju$2();
			case 60: return Ac$1();
			case 134:
			case 120:
			case 156:
			case 144:
			case 145:
			case 138:
			case 87:
			case 94:
			case 95:
			case 102:
			case 123:
			case 124:
			case 125:
			case 128:
			case 129:
			case 126:
			case 148:
			case 162:
				if (Ri$4()) return Ac$1();
				break;
		}
		return vc$2();
	}
	function Bs$4(_$2) {
		return _$2.kind === 138;
	}
	function Ac$1() {
		let _$2 = L$4(), p$2 = qe$6(), d$14 = En$5(!0);
		if (nn$2(d$14, Bs$4)) {
			let w$3 = ka$4(_$2);
			if (w$3) return w$3;
			for (let I$2 of d$14) I$2.flags |= 33554432;
			return Tt$7(33554432, () => Cc$1(_$2, p$2, d$14));
		} else return Cc$1(_$2, p$2, d$14);
	}
	function ka$4(_$2) {
		return Tt$7(33554432, () => {
			let p$2 = ua$3(yt$4, _$2);
			if (p$2) return j_(p$2);
		});
	}
	function Cc$1(_$2, p$2, d$14) {
		switch (u$14()) {
			case 115:
			case 121:
			case 87:
			case 160:
			case 135: return oi$5(_$2, p$2, d$14);
			case 100: return Oc$2(_$2, p$2, d$14);
			case 86: return Bc$1(_$2, p$2, d$14);
			case 120: return zc$2(_$2, p$2, d$14);
			case 156: return ep$1(_$2, p$2, d$14);
			case 94: return Gs$4(_$2, p$2, d$14);
			case 162:
			case 144:
			case 145: return np$1(_$2, p$2, d$14);
			case 102: return ap$1(_$2, p$2, d$14);
			case 95: switch (U$4(), u$14()) {
				case 90:
				case 64: return Qc$1(_$2, p$2, d$14);
				case 130: return ip$1(_$2, p$2, d$14);
				default: return dp$1(_$2, p$2, d$14);
			}
			default:
				if (d$14) {
					let b$7 = Gt$4(282, !0, A$1.Declaration_expected);
					return qp(b$7, _$2), b$7.modifiers = d$14, b$7;
				}
				return;
		}
	}
	function Uu$2() {
		return U$4() === 11;
	}
	function Bu$3() {
		return U$4(), u$14() === 161 || u$14() === 64;
	}
	function Dc$1() {
		return U$4(), !t$13.hasPrecedingLineBreak() && (ve$6() || u$14() === 11);
	}
	function Ea$4(_$2, p$2) {
		if (u$14() !== 19) {
			if (_$2 & 4) {
				ha$5();
				return;
			}
			if (or$5()) {
				Qt$3();
				return;
			}
		}
		return Sa$4(_$2, p$2);
	}
	function Pc$1() {
		let _$2 = L$4();
		if (u$14() === 28) return P$5(h$3.createOmittedExpression(), _$2);
		let p$2 = ft$4(26), d$14 = Ui$4(), b$7 = Sr$5();
		return P$5(h$3.createBindingElement(p$2, void 0, d$14, b$7), _$2);
	}
	function qu$4() {
		let _$2 = L$4(), p$2 = ft$4(26), d$14 = ze$6(), b$7 = Rr$5(), w$3;
		d$14 && u$14() !== 59 ? (w$3 = b$7, b$7 = void 0) : (j$7(59), w$3 = Ui$4());
		let I$2 = Sr$5();
		return P$5(h$3.createBindingElement(p$2, b$7, w$3, I$2), _$2);
	}
	function Nc$2() {
		let _$2 = L$4();
		j$7(19);
		let p$2 = ut$4(() => dn$5(9, qu$4));
		return j$7(20), P$5(h$3.createObjectBindingPattern(p$2), _$2);
	}
	function Fu$3() {
		let _$2 = L$4();
		j$7(23);
		let p$2 = ut$4(() => dn$5(10, Pc$1));
		return j$7(24), P$5(h$3.createArrayBindingPattern(p$2), _$2);
	}
	function Aa$4() {
		return u$14() === 19 || u$14() === 23 || u$14() === 81 || ze$6();
	}
	function Ui$4(_$2) {
		return u$14() === 23 ? Fu$3() : u$14() === 19 ? Nc$2() : es$3(_$2);
	}
	function Ic$1() {
		return qs$3(!0);
	}
	function qs$3(_$2) {
		let p$2 = L$4(), d$14 = qe$6(), b$7 = Ui$4(A$1.Private_identifiers_are_not_allowed_in_variable_declarations), w$3;
		_$2 && b$7.kind === 80 && u$14() === 54 && !t$13.hasPrecedingLineBreak() && (w$3 = Wt$4());
		let I$2 = Tr$4(), $$4 = Fo$2(u$14()) ? void 0 : Sr$5(), se$3 = Fn$4(b$7, w$3, I$2, $$4);
		return De$7(P$5(se$3, p$2), d$14);
	}
	function Fs$4(_$2) {
		let p$2 = L$4(), d$14 = 0;
		switch (u$14()) {
			case 115: break;
			case 121:
				d$14 |= 1;
				break;
			case 87:
				d$14 |= 2;
				break;
			case 160:
				d$14 |= 4;
				break;
			case 135:
				B$2.assert(wa$3()), d$14 |= 6, U$4();
				break;
			default: B$2.fail();
		}
		U$4();
		let b$7;
		if (u$14() === 165 && Y$6(zu$4)) b$7 = ur$6();
		else {
			let w$3 = be$5();
			Te$7(_$2), b$7 = dn$5(8, _$2 ? qs$3 : Ic$1), Te$7(w$3);
		}
		return P$5(Ln$5(b$7, d$14), p$2);
	}
	function zu$4() {
		return Pi$5() && U$4() === 22;
	}
	function oi$5(_$2, p$2, d$14) {
		let b$7 = Fs$4(!1);
		Qt$3();
		let w$3 = Tn$5(d$14, b$7);
		return De$7(P$5(w$3, _$2), p$2);
	}
	function Oc$2(_$2, p$2, d$14) {
		let b$7 = Ye$6(), w$3 = Bn$1(d$14);
		j$7(100);
		let I$2 = ft$4(42), $$4 = w$3 & 2048 ? ji$5() : es$3(), se$3 = I$2 ? 1 : 0, Z$4 = w$3 & 1024 ? 2 : 0, ee$4 = mn$5();
		w$3 & 32 && st$5(!0);
		let ce$4 = Qn$5(se$3 | Z$4), je$4 = jn$5(59, !1), Re$7 = Ea$4(se$3 | Z$4, A$1.or_expected);
		st$5(b$7);
		let Ae$5 = h$3.createFunctionDeclaration(d$14, I$2, $$4, ee$4, ce$4, je$4, Re$7);
		return De$7(P$5(Ae$5, _$2), p$2);
	}
	function Mc$1() {
		if (u$14() === 137) return j$7(137);
		if (u$14() === 11 && Y$6(U$4) === 21) return pe$6(() => {
			let _$2 = $n$5();
			return _$2.text === "constructor" ? _$2 : void 0;
		});
	}
	function Vu$2(_$2, p$2, d$14) {
		return pe$6(() => {
			if (Mc$1()) {
				let b$7 = mn$5(), w$3 = Qn$5(0), I$2 = jn$5(59, !1), $$4 = Ea$4(0, A$1.or_expected), se$3 = h$3.createConstructorDeclaration(d$14, w$3, $$4);
				return se$3.typeParameters = b$7, se$3.type = I$2, De$7(P$5(se$3, _$2), p$2);
			}
		});
	}
	function zs$4(_$2, p$2, d$14, b$7, w$3, I$2, $$4, se$3) {
		let Z$4 = b$7 ? 1 : 0, ee$4 = nn$2(d$14, ol) ? 2 : 0, ce$4 = mn$5(), je$4 = Qn$5(Z$4 | ee$4), Re$7 = jn$5(59, !1), Ae$5 = Ea$4(Z$4 | ee$4, se$3), Yt$4 = h$3.createMethodDeclaration(d$14, b$7, w$3, I$2, ce$4, je$4, Re$7, Ae$5);
		return Yt$4.exclamationToken = $$4, De$7(P$5(Yt$4, _$2), p$2);
	}
	function Lc$1(_$2, p$2, d$14, b$7, w$3) {
		let I$2 = !w$3 && !t$13.hasPrecedingLineBreak() ? ft$4(54) : void 0, $$4 = Tr$4(), se$3 = Pt$5(90112, Sr$5);
		Bl$3(b$7, $$4, se$3);
		let Z$4 = h$3.createPropertyDeclaration(d$14, b$7, w$3 || I$2, $$4, se$3);
		return De$7(P$5(Z$4, _$2), p$2);
	}
	function Ca$3(_$2, p$2, d$14) {
		let b$7 = ft$4(42), w$3 = Rr$5(), I$2 = ft$4(58);
		return b$7 || u$14() === 21 || u$14() === 30 ? zs$4(_$2, p$2, d$14, b$7, w$3, I$2, void 0, A$1.or_expected) : Lc$1(_$2, p$2, d$14, w$3, I$2);
	}
	function Vr$4(_$2, p$2, d$14, b$7, w$3) {
		let I$2 = Rr$5(), $$4 = mn$5(), se$3 = Qn$5(0), Z$4 = jn$5(59, !1), ee$4 = Ea$4(w$3), ce$4 = b$7 === 177 ? h$3.createGetAccessorDeclaration(d$14, I$2, se$3, Z$4, ee$4) : h$3.createSetAccessorDeclaration(d$14, I$2, se$3, ee$4);
		return ce$4.typeParameters = $$4, v_(ce$4) && (ce$4.type = Z$4), De$7(P$5(ce$4, _$2), p$2);
	}
	function Wu$3() {
		let _$2;
		if (u$14() === 60) return !0;
		for (; Hr$2(u$14());) {
			if (_$2 = u$14(), Zg(_$2)) return !0;
			U$4();
		}
		if (u$14() === 42 || (vr$4() && (_$2 = u$14(), U$4()), u$14() === 23)) return !0;
		if (_$2 !== void 0) {
			if (!hi$1(_$2) || _$2 === 153 || _$2 === 139) return !0;
			switch (u$14()) {
				case 21:
				case 30:
				case 54:
				case 59:
				case 64:
				case 58: return !0;
				default: return or$5();
			}
		}
		return !1;
	}
	function Jc$2(_$2, p$2, d$14) {
		Xn$5(126);
		let b$7 = Gu$2(), w$3 = De$7(P$5(h$3.createClassStaticBlockDeclaration(b$7), _$2), p$2);
		return w$3.modifiers = d$14, w$3;
	}
	function Gu$2() {
		let _$2 = we$3(), p$2 = Ye$6();
		Xe$4(!1), st$5(!0);
		let d$14 = zr$5(!1);
		return Xe$4(_$2), st$5(p$2), d$14;
	}
	function Yu$3() {
		if (Ye$6() && u$14() === 135) {
			let _$2 = L$4(), p$2 = St$5(A$1.Expression_expected);
			U$4();
			let d$14 = _n$5(_$2, p$2, !0);
			return Is$3(_$2, d$14);
		}
		return Li$4();
	}
	function Vs$4() {
		let _$2 = L$4();
		if (!Le$6(60)) return;
		let p$2 = Ei$5(Yu$3);
		return P$5(h$3.createDecorator(p$2), _$2);
	}
	function jc$1(_$2, p$2, d$14) {
		let b$7 = L$4(), w$3 = u$14();
		if (u$14() === 87 && p$2) {
			if (!pe$6(ts$3)) return;
		} else {
			if (d$14 && u$14() === 126 && Y$6(Yc$1)) return;
			if (_$2 && u$14() === 126) return;
			if (!I_()) return;
		}
		return P$5(ye$4(w$3), b$7);
	}
	function En$5(_$2, p$2, d$14) {
		let b$7 = L$4(), w$3, I$2, $$4, se$3 = !1, Z$4 = !1, ee$4 = !1;
		if (_$2 && u$14() === 60) for (; I$2 = Vs$4();) w$3 = Dn$1(w$3, I$2);
		for (; $$4 = jc$1(se$3, p$2, d$14);) $$4.kind === 126 && (se$3 = !0), w$3 = Dn$1(w$3, $$4), Z$4 = !0;
		if (Z$4 && _$2 && u$14() === 60) for (; I$2 = Vs$4();) w$3 = Dn$1(w$3, I$2), ee$4 = !0;
		if (ee$4) for (; $$4 = jc$1(se$3, p$2, d$14);) $$4.kind === 126 && (se$3 = !0), w$3 = Dn$1(w$3, $$4);
		return w$3 && Ct$7(w$3, b$7);
	}
	function Rc$1() {
		let _$2;
		if (u$14() === 134) {
			let p$2 = L$4();
			U$4();
			let d$14 = P$5(ye$4(134), p$2);
			_$2 = Ct$7([d$14], p$2);
		}
		return _$2;
	}
	function Hu$2() {
		let _$2 = L$4(), p$2 = qe$6();
		if (u$14() === 27) return U$4(), De$7(P$5(h$3.createSemicolonClassElement(), _$2), p$2);
		let d$14 = En$5(!0, !0, !0);
		if (u$14() === 126 && Y$6(Yc$1)) return Jc$2(_$2, p$2, d$14);
		if (ri$7(139)) return Vr$4(_$2, p$2, d$14, 177, 0);
		if (ri$7(153)) return Vr$4(_$2, p$2, d$14, 178, 0);
		if (u$14() === 137 || u$14() === 11) {
			let b$7 = Vu$2(_$2, p$2, d$14);
			if (b$7) return b$7;
		}
		if (qr$4()) return hs$3(_$2, p$2, d$14);
		if (wt$2(u$14()) || u$14() === 11 || u$14() === 9 || u$14() === 10 || u$14() === 42 || u$14() === 23) if (nn$2(d$14, Bs$4)) {
			for (let w$3 of d$14) w$3.flags |= 33554432;
			return Tt$7(33554432, () => Ca$3(_$2, p$2, d$14));
		} else return Ca$3(_$2, p$2, d$14);
		if (d$14) {
			let b$7 = Gt$4(80, !0, A$1.Declaration_expected);
			return Lc$1(_$2, p$2, d$14, b$7, void 0);
		}
		return B$2.fail("Should not have attempted to parse class member declaration.");
	}
	function Uc$1() {
		let _$2 = L$4(), p$2 = qe$6(), d$14 = En$5(!0);
		if (u$14() === 86) return Da$3(_$2, p$2, d$14, 231);
		let b$7 = Gt$4(282, !0, A$1.Expression_expected);
		return qp(b$7, _$2), b$7.modifiers = d$14, b$7;
	}
	function Xu$3() {
		return Da$3(L$4(), qe$6(), void 0, 231);
	}
	function Bc$1(_$2, p$2, d$14) {
		return Da$3(_$2, p$2, d$14, 263);
	}
	function Da$3(_$2, p$2, d$14, b$7) {
		let w$3 = Ye$6();
		j$7(86);
		let I$2 = $u$2(), $$4 = mn$5();
		nn$2(d$14, Zb) && st$5(!0);
		let se$3 = Ws$4(), Z$4;
		j$7(19) ? (Z$4 = Fc$1(), j$7(20)) : Z$4 = ur$6(), st$5(w$3);
		let ee$4 = b$7 === 263 ? h$3.createClassDeclaration(d$14, I$2, $$4, se$3, Z$4) : h$3.createClassExpression(d$14, I$2, $$4, se$3, Z$4);
		return De$7(P$5(ee$4, _$2), p$2);
	}
	function $u$2() {
		return ze$6() && !Qu$2() ? cr$5(ze$6()) : void 0;
	}
	function Qu$2() {
		return u$14() === 119 && Y$6(Hl$3);
	}
	function Ws$4() {
		if (qc$1()) return wn$4(22, Ku$2);
	}
	function Ku$2() {
		let _$2 = L$4(), p$2 = u$14();
		B$2.assert(p$2 === 96 || p$2 === 119), U$4();
		let d$14 = dn$5(7, Zu$3);
		return P$5(h$3.createHeritageClause(p$2, d$14), _$2);
	}
	function Zu$3() {
		let _$2 = L$4(), p$2 = Li$4();
		if (p$2.kind === 233) return p$2;
		let d$14 = Pa$3();
		return P$5(h$3.createExpressionWithTypeArguments(p$2, d$14), _$2);
	}
	function Pa$3() {
		return u$14() === 30 ? Ur$5(20, _t$5, 30, 32) : void 0;
	}
	function qc$1() {
		return u$14() === 96 || u$14() === 119;
	}
	function Fc$1() {
		return wn$4(5, Hu$2);
	}
	function zc$2(_$2, p$2, d$14) {
		j$7(120);
		let b$7 = St$5(), w$3 = mn$5(), I$2 = Ws$4(), $$4 = fo$2(), se$3 = h$3.createInterfaceDeclaration(d$14, b$7, w$3, I$2, $$4);
		return De$7(P$5(se$3, _$2), p$2);
	}
	function ep$1(_$2, p$2, d$14) {
		j$7(156), t$13.hasPrecedingLineBreak() && Ee$4(A$1.Line_break_not_permitted_here);
		let b$7 = St$5(), w$3 = mn$5();
		j$7(64);
		let I$2 = u$14() === 141 && pe$6(vo$4) || _t$5();
		Qt$3();
		let $$4 = h$3.createTypeAliasDeclaration(d$14, b$7, w$3, I$2);
		return De$7(P$5($$4, _$2), p$2);
	}
	function tp$1() {
		let _$2 = L$4(), p$2 = qe$6(), d$14 = Rr$5(), b$7 = ut$4(Sr$5);
		return De$7(P$5(h$3.createEnumMember(d$14, b$7), _$2), p$2);
	}
	function Gs$4(_$2, p$2, d$14) {
		j$7(94);
		let b$7 = St$5(), w$3;
		j$7(19) ? (w$3 = xe$4(() => dn$5(6, tp$1)), j$7(20)) : w$3 = ur$6();
		let I$2 = h$3.createEnumDeclaration(d$14, b$7, w$3);
		return De$7(P$5(I$2, _$2), p$2);
	}
	function Vc$1() {
		let _$2 = L$4(), p$2;
		return j$7(19) ? (p$2 = wn$4(1, Kt$4), j$7(20)) : p$2 = ur$6(), P$5(h$3.createModuleBlock(p$2), _$2);
	}
	function Ys$3(_$2, p$2, d$14, b$7) {
		let w$3 = b$7 & 32, I$2 = b$7 & 8 ? Rt$5() : St$5(), $$4 = Le$6(25) ? Ys$3(L$4(), !1, void 0, 8 | w$3) : Vc$1(), se$3 = h$3.createModuleDeclaration(d$14, I$2, $$4, b$7);
		return De$7(P$5(se$3, _$2), p$2);
	}
	function Wc$2(_$2, p$2, d$14) {
		let b$7 = 0, w$3;
		u$14() === 162 ? (w$3 = St$5(), b$7 |= 2048) : (w$3 = $n$5(), w$3.text = jr$5(w$3.text));
		let I$2;
		u$14() === 19 ? I$2 = Vc$1() : Qt$3();
		let $$4 = h$3.createModuleDeclaration(d$14, w$3, I$2, b$7);
		return De$7(P$5($$4, _$2), p$2);
	}
	function np$1(_$2, p$2, d$14) {
		let b$7 = 0;
		if (u$14() === 162) return Wc$2(_$2, p$2, d$14);
		if (Le$6(145)) b$7 |= 32;
		else if (j$7(144), u$14() === 11) return Wc$2(_$2, p$2, d$14);
		return Ys$3(_$2, p$2, d$14, b$7);
	}
	function rp$1() {
		return u$14() === 149 && Y$6(Gc$2);
	}
	function Gc$2() {
		return U$4() === 21;
	}
	function Yc$1() {
		return U$4() === 19;
	}
	function Hs$4() {
		return U$4() === 44;
	}
	function ip$1(_$2, p$2, d$14) {
		j$7(130), j$7(145);
		let b$7 = St$5();
		Qt$3();
		let w$3 = h$3.createNamespaceExportDeclaration(b$7);
		return w$3.modifiers = d$14, De$7(P$5(w$3, _$2), p$2);
	}
	function ap$1(_$2, p$2, d$14) {
		j$7(102);
		let b$7 = t$13.getTokenFullStart(), w$3;
		ve$6() && (w$3 = St$5());
		let I$2 = !1;
		if ((w$3 == null ? void 0 : w$3.escapedText) === "type" && (u$14() !== 161 || ve$6() && Y$6(Bu$3)) && (ve$6() || _p$2()) && (I$2 = !0, w$3 = ve$6() ? St$5() : void 0), w$3 && !Wr$6()) return op$1(_$2, p$2, d$14, w$3, I$2);
		let $$4 = ci$6(w$3, b$7, I$2), se$3 = qi$3(), Z$4 = Hc$1();
		Qt$3();
		let ee$4 = h$3.createImportDeclaration(d$14, $$4, se$3, Z$4);
		return De$7(P$5(ee$4, _$2), p$2);
	}
	function ci$6(_$2, p$2, d$14, b$7 = !1) {
		let w$3;
		return (_$2 || u$14() === 42 || u$14() === 19) && (w$3 = cp$2(_$2, p$2, d$14, b$7), j$7(161)), w$3;
	}
	function Hc$1() {
		let _$2 = u$14();
		if ((_$2 === 118 || _$2 === 132) && !t$13.hasPrecedingLineBreak()) return Xs$5(_$2);
	}
	function sp$1() {
		let _$2 = L$4(), p$2 = wt$2(u$14()) ? Rt$5() : ai$5(11);
		j$7(59);
		let d$14 = Ft$4(!0);
		return P$5(h$3.createImportAttribute(p$2, d$14), _$2);
	}
	function Xs$5(_$2, p$2) {
		let d$14 = L$4();
		p$2 || j$7(_$2);
		let b$7 = t$13.getTokenStart();
		if (j$7(19)) {
			let w$3 = t$13.hasPrecedingLineBreak(), I$2 = dn$5(24, sp$1, !0);
			if (!j$7(20)) {
				let $$4 = Fa$1(at$4);
				$$4 && $$4.code === A$1._0_expected.code && al($$4, La(Lt$6, Qe$4, b$7, 1, A$1.The_parser_expected_to_find_a_1_to_match_the_0_token_here, "{", "}"));
			}
			return P$5(h$3.createImportAttributes(I$2, w$3, _$2), d$14);
		} else {
			let w$3 = Ct$7([], L$4(), void 0, !1);
			return P$5(h$3.createImportAttributes(w$3, !1, _$2), d$14);
		}
	}
	function _p$2() {
		return u$14() === 42 || u$14() === 19;
	}
	function Wr$6() {
		return u$14() === 28 || u$14() === 161;
	}
	function op$1(_$2, p$2, d$14, b$7, w$3) {
		j$7(64);
		let I$2 = lp$1();
		Qt$3();
		let $$4 = h$3.createImportEqualsDeclaration(d$14, w$3, b$7, I$2);
		return De$7(P$5($$4, _$2), p$2);
	}
	function cp$2(_$2, p$2, d$14, b$7) {
		let w$3;
		return (!_$2 || Le$6(28)) && (b$7 && t$13.setSkipJsDocLeadingAsterisks(!0), w$3 = u$14() === 42 ? up$1() : Xc$1(275), b$7 && t$13.setSkipJsDocLeadingAsterisks(!1)), P$5(h$3.createImportClause(d$14, _$2, w$3), p$2);
	}
	function lp$1() {
		return rp$1() ? Bi$4() : Br$5(!1);
	}
	function Bi$4() {
		let _$2 = L$4();
		j$7(149), j$7(21);
		let p$2 = qi$3();
		return j$7(22), P$5(h$3.createExternalModuleReference(p$2), _$2);
	}
	function qi$3() {
		if (u$14() === 11) {
			let _$2 = $n$5();
			return _$2.text = jr$5(_$2.text), _$2;
		} else return Et$5();
	}
	function up$1() {
		let _$2 = L$4();
		j$7(42), j$7(130);
		let p$2 = St$5();
		return P$5(h$3.createNamespaceImport(p$2), _$2);
	}
	function $s$2() {
		return wt$2(u$14()) || u$14() === 11;
	}
	function li$6(_$2) {
		return u$14() === 11 ? $n$5() : _$2();
	}
	function Xc$1(_$2) {
		let p$2 = L$4(), d$14 = _$2 === 275 ? h$3.createNamedImports(Ur$5(23, ui$6, 19, 20)) : h$3.createNamedExports(Ur$5(23, pp$1, 19, 20));
		return P$5(d$14, p$2);
	}
	function pp$1() {
		let _$2 = qe$6();
		return De$7($c$2(281), _$2);
	}
	function ui$6() {
		return $c$2(276);
	}
	function $c$2(_$2) {
		let p$2 = L$4(), d$14 = hi$1(u$14()) && !ve$6(), b$7 = t$13.getTokenStart(), w$3 = t$13.getTokenEnd(), I$2 = !1, $$4, se$3 = !0, Z$4 = li$6(Rt$5);
		if (Z$4.kind === 80 && Z$4.escapedText === "type") if (u$14() === 130) {
			let je$4 = Rt$5();
			if (u$14() === 130) {
				let Re$7 = Rt$5();
				$s$2() ? (I$2 = !0, $$4 = je$4, Z$4 = li$6(ce$4), se$3 = !1) : ($$4 = Z$4, Z$4 = Re$7, se$3 = !1);
			} else $s$2() ? ($$4 = Z$4, se$3 = !1, Z$4 = li$6(ce$4)) : (I$2 = !0, Z$4 = je$4);
		} else $s$2() && (I$2 = !0, Z$4 = li$6(ce$4));
		se$3 && u$14() === 130 && ($$4 = Z$4, j$7(130), Z$4 = li$6(ce$4)), _$2 === 276 && (Z$4.kind !== 80 ? (rt$5(Pr$2(Qe$4, Z$4.pos), Z$4.end, A$1.Identifier_expected), Z$4 = bi$1(Gt$4(80, !1), Z$4.pos, Z$4.pos)) : d$14 && rt$5(b$7, w$3, A$1.Identifier_expected));
		let ee$4 = _$2 === 276 ? h$3.createImportSpecifier(I$2, $$4, Z$4) : h$3.createExportSpecifier(I$2, $$4, Z$4);
		return P$5(ee$4, p$2);
		function ce$4() {
			return d$14 = hi$1(u$14()) && !ve$6(), b$7 = t$13.getTokenStart(), w$3 = t$13.getTokenEnd(), Rt$5();
		}
	}
	function fp$1(_$2) {
		return P$5(h$3.createNamespaceExport(li$6(Rt$5)), _$2);
	}
	function dp$1(_$2, p$2, d$14) {
		let b$7 = Ye$6();
		st$5(!0);
		let w$3, I$2, $$4, se$3 = Le$6(156), Z$4 = L$4();
		Le$6(42) ? (Le$6(130) && (w$3 = fp$1(Z$4)), j$7(161), I$2 = qi$3()) : (w$3 = Xc$1(279), (u$14() === 161 || u$14() === 11 && !t$13.hasPrecedingLineBreak()) && (j$7(161), I$2 = qi$3()));
		let ee$4 = u$14();
		I$2 && (ee$4 === 118 || ee$4 === 132) && !t$13.hasPrecedingLineBreak() && ($$4 = Xs$5(ee$4)), Qt$3(), st$5(b$7);
		let ce$4 = h$3.createExportDeclaration(d$14, se$3, w$3, I$2, $$4);
		return De$7(P$5(ce$4, _$2), p$2);
	}
	function Qc$1(_$2, p$2, d$14) {
		let b$7 = Ye$6();
		st$5(!0);
		let w$3;
		Le$6(64) ? w$3 = !0 : j$7(90);
		let I$2 = Ft$4(!0);
		Qt$3(), st$5(b$7);
		let $$4 = h$3.createExportAssignment(d$14, w$3, I$2);
		return De$7(P$5($$4, _$2), p$2);
	}
	let Qs$3;
	((_$2) => {
		_$2[_$2.SourceElements = 0] = "SourceElements", _$2[_$2.BlockStatements = 1] = "BlockStatements", _$2[_$2.SwitchClauses = 2] = "SwitchClauses", _$2[_$2.SwitchClauseStatements = 3] = "SwitchClauseStatements", _$2[_$2.TypeMembers = 4] = "TypeMembers", _$2[_$2.ClassMembers = 5] = "ClassMembers", _$2[_$2.EnumMembers = 6] = "EnumMembers", _$2[_$2.HeritageClauseElement = 7] = "HeritageClauseElement", _$2[_$2.VariableDeclarations = 8] = "VariableDeclarations", _$2[_$2.ObjectBindingElements = 9] = "ObjectBindingElements", _$2[_$2.ArrayBindingElements = 10] = "ArrayBindingElements", _$2[_$2.ArgumentExpressions = 11] = "ArgumentExpressions", _$2[_$2.ObjectLiteralMembers = 12] = "ObjectLiteralMembers", _$2[_$2.JsxAttributes = 13] = "JsxAttributes", _$2[_$2.JsxChildren = 14] = "JsxChildren", _$2[_$2.ArrayLiteralMembers = 15] = "ArrayLiteralMembers", _$2[_$2.Parameters = 16] = "Parameters", _$2[_$2.JSDocParameters = 17] = "JSDocParameters", _$2[_$2.RestProperties = 18] = "RestProperties", _$2[_$2.TypeParameters = 19] = "TypeParameters", _$2[_$2.TypeArguments = 20] = "TypeArguments", _$2[_$2.TupleElementTypes = 21] = "TupleElementTypes", _$2[_$2.HeritageClauses = 22] = "HeritageClauses", _$2[_$2.ImportOrExportSpecifiers = 23] = "ImportOrExportSpecifiers", _$2[_$2.ImportAttributes = 24] = "ImportAttributes", _$2[_$2.JSDocComment = 25] = "JSDocComment", _$2[_$2.Count = 26] = "Count";
	})(Qs$3 || (Qs$3 = {}));
	let Ks$5;
	((_$2) => {
		_$2[_$2.False = 0] = "False", _$2[_$2.True = 1] = "True", _$2[_$2.Unknown = 2] = "Unknown";
	})(Ks$5 || (Ks$5 = {}));
	let Kc$2;
	((_$2) => {
		function p$2(ee$4, ce$4, je$4) {
			Vn$5("file.js", ee$4, 99, void 0, 1, 0), t$13.setText(ee$4, ce$4, je$4), lt$3 = t$13.scan();
			let Re$7 = d$14(), Ae$5 = _e$7("file.js", 99, 1, !1, [], ye$4(1), 0, Ga$1), Yt$4 = Wi$1(at$4, Ae$5);
			return Ut$4 && (Ae$5.jsDocDiagnostics = Wi$1(Ut$4, Ae$5)), Wn$5(), Re$7 ? {
				jsDocTypeExpression: Re$7,
				diagnostics: Yt$4
			} : void 0;
		}
		_$2.parseJSDocTypeExpressionForTests = p$2;
		function d$14(ee$4) {
			let ce$4 = L$4(), je$4 = (ee$4 ? Le$6 : j$7)(19), Re$7 = Tt$7(16777216, ps$3);
			(!ee$4 || je$4) && D_(20);
			let Ae$5 = h$3.createJSDocTypeExpression(Re$7);
			return J$4(Ae$5), P$5(Ae$5, ce$4);
		}
		_$2.parseJSDocTypeExpression = d$14;
		function b$7() {
			let ee$4 = L$4(), ce$4 = Le$6(19), je$4 = L$4(), Re$7 = Br$5(!1);
			for (; u$14() === 81;) It$7(), Fe$4(), Re$7 = P$5(h$3.createJSDocMemberName(Re$7, St$5()), je$4);
			ce$4 && D_(20);
			let Ae$5 = h$3.createJSDocNameReference(Re$7);
			return J$4(Ae$5), P$5(Ae$5, ee$4);
		}
		_$2.parseJSDocNameReference = b$7;
		function w$3(ee$4, ce$4, je$4) {
			Vn$5("", ee$4, 99, void 0, 1, 0);
			let Re$7 = Tt$7(16777216, () => Z$4(ce$4, je$4)), Yt$4 = Wi$1(at$4, {
				languageVariant: 0,
				text: ee$4
			});
			return Wn$5(), Re$7 ? {
				jsDoc: Re$7,
				diagnostics: Yt$4
			} : void 0;
		}
		_$2.parseIsolatedJSDocComment = w$3;
		function I$2(ee$4, ce$4, je$4) {
			let Re$7 = lt$3, Ae$5 = at$4.length, Yt$4 = an$5, hn$5 = Tt$7(16777216, () => Z$4(ce$4, je$4));
			return Sf(hn$5, ee$4), nt$4 & 524288 && (Ut$4 || (Ut$4 = []), Nn$2(Ut$4, at$4, Ae$5)), lt$3 = Re$7, at$4.length = Ae$5, an$5 = Yt$4, hn$5;
		}
		_$2.parseJSDocComment = I$2;
		let $$4;
		((ee$4) => {
			ee$4[ee$4.BeginningOfLine = 0] = "BeginningOfLine", ee$4[ee$4.SawAsterisk = 1] = "SawAsterisk", ee$4[ee$4.SavingComments = 2] = "SavingComments", ee$4[ee$4.SavingBackticks = 3] = "SavingBackticks";
		})($$4 || ($$4 = {}));
		let se$3;
		((ee$4) => {
			ee$4[ee$4.Property = 1] = "Property", ee$4[ee$4.Parameter = 2] = "Parameter", ee$4[ee$4.CallbackParameter = 4] = "CallbackParameter";
		})(se$3 || (se$3 = {}));
		function Z$4(ee$4 = 0, ce$4) {
			let je$4 = Qe$4, Re$7 = ce$4 === void 0 ? je$4.length : ee$4 + ce$4;
			if (ce$4 = Re$7 - ee$4, B$2.assert(ee$4 >= 0), B$2.assert(ee$4 <= Re$7), B$2.assert(Re$7 <= je$4.length), !B6(je$4, ee$4)) return;
			let Ae$5, Yt$4, hn$5, Zt$3, pr$4, Rn$4 = [], Gr$6 = [], mp$1 = yt$4;
			yt$4 |= 1 << 25;
			let Pe$6 = t$13.scanRange(ee$4 + 3, ce$4 - 5, tt$5);
			return yt$4 = mp$1, Pe$6;
			function tt$5() {
				let O$3 = 1, H$6, X$6 = ee$4 - (je$4.lastIndexOf(`
`, ee$4) + 1) + 4;
				function ne$6(Be$4) {
					H$6 || (H$6 = X$6), Rn$4.push(Be$4), X$6 += Be$4.length;
				}
				for (Fe$4(); zi$4(5););
				zi$4(4) && (O$3 = 0, X$6 = 0);
				e: for (;;) {
					switch (u$14()) {
						case 60:
							Na$4(Rn$4), pr$4 || (pr$4 = L$4()), de$6(q$3(X$6)), O$3 = 0, H$6 = void 0;
							break;
						case 4:
							Rn$4.push(t$13.getTokenText()), O$3 = 0, X$6 = 0;
							break;
						case 42:
							let Be$4 = t$13.getTokenText();
							O$3 === 1 ? (O$3 = 2, ne$6(Be$4)) : (B$2.assert(O$3 === 0), O$3 = 1, X$6 += Be$4.length);
							break;
						case 5:
							B$2.assert(O$3 !== 2, "whitespace shouldn't come from the scanner while saving top-level comment text");
							let pt$4 = t$13.getTokenText();
							H$6 !== void 0 && X$6 + pt$4.length > H$6 && Rn$4.push(pt$4.slice(H$6 - X$6)), X$6 += pt$4.length;
							break;
						case 1: break e;
						case 82:
							O$3 = 2, ne$6(t$13.getTokenValue());
							break;
						case 19:
							O$3 = 2;
							let yn$5 = t$13.getTokenFullStart(), on$6 = t$13.getTokenEnd() - 1, tn$4 = s$8(on$6);
							if (tn$4) {
								Zt$3 || fr$5(Rn$4), Gr$6.push(P$5(h$3.createJSDocText(Rn$4.join("")), Zt$3 ?? ee$4, yn$5)), Gr$6.push(tn$4), Rn$4 = [], Zt$3 = t$13.getTokenEnd();
								break;
							}
						default:
							O$3 = 2, ne$6(t$13.getTokenText());
							break;
					}
					O$3 === 2 ? sn$4(!1) : Fe$4();
				}
				let re$5 = Rn$4.join("").trimEnd();
				Gr$6.length && re$5.length && Gr$6.push(P$5(h$3.createJSDocText(re$5), Zt$3 ?? ee$4, pr$4)), Gr$6.length && Ae$5 && B$2.assertIsDefined(pr$4, "having parsed tags implies that the end of the comment span should be set");
				let Ne$5 = Ae$5 && Ct$7(Ae$5, Yt$4, hn$5);
				return P$5(h$3.createJSDocComment(Gr$6.length ? Ct$7(Gr$6, ee$4, pr$4) : re$5.length ? re$5 : void 0, Ne$5), ee$4, Re$7);
			}
			function fr$5(O$3) {
				for (; O$3.length && (O$3[0] === `
` || O$3[0] === "\r");) O$3.shift();
			}
			function Na$4(O$3) {
				for (; O$3.length;) {
					let H$6 = O$3[O$3.length - 1].trimEnd();
					if (H$6 === "") O$3.pop();
					else if (H$6.length < O$3[O$3.length - 1].length) {
						O$3[O$3.length - 1] = H$6;
						break;
					} else break;
				}
			}
			function Zc$1() {
				for (;;) {
					if (Fe$4(), u$14() === 1) return !0;
					if (!(u$14() === 5 || u$14() === 4)) return !1;
				}
			}
			function Ot$4() {
				if (!((u$14() === 5 || u$14() === 4) && Y$6(Zc$1))) for (; u$14() === 5 || u$14() === 4;) Fe$4();
			}
			function kr$5() {
				if ((u$14() === 5 || u$14() === 4) && Y$6(Zc$1)) return "";
				let O$3 = t$13.hasPrecedingLineBreak(), H$6 = !1, X$6 = "";
				for (; O$3 && u$14() === 42 || u$14() === 5 || u$14() === 4;) X$6 += t$13.getTokenText(), u$14() === 4 ? (O$3 = !0, H$6 = !0, X$6 = "") : u$14() === 42 && (O$3 = !1), Fe$4();
				return H$6 ? X$6 : "";
			}
			function q$3(O$3) {
				B$2.assert(u$14() === 60);
				let H$6 = t$13.getTokenStart();
				Fe$4();
				let X$6 = pi$6(void 0), ne$6 = kr$5(), re$5;
				switch (X$6.escapedText) {
					case "author":
						re$5 = Q0(H$6, X$6, O$3, ne$6);
						break;
					case "implements":
						re$5 = Z0(H$6, X$6, O$3, ne$6);
						break;
					case "augments":
					case "extends":
						re$5 = ey(H$6, X$6, O$3, ne$6);
						break;
					case "class":
					case "constructor":
						re$5 = Fi$4(H$6, h$3.createJSDocClassTag, X$6, O$3, ne$6);
						break;
					case "public":
						re$5 = Fi$4(H$6, h$3.createJSDocPublicTag, X$6, O$3, ne$6);
						break;
					case "private":
						re$5 = Fi$4(H$6, h$3.createJSDocPrivateTag, X$6, O$3, ne$6);
						break;
					case "protected":
						re$5 = Fi$4(H$6, h$3.createJSDocProtectedTag, X$6, O$3, ne$6);
						break;
					case "readonly":
						re$5 = Fi$4(H$6, h$3.createJSDocReadonlyTag, X$6, O$3, ne$6);
						break;
					case "override":
						re$5 = Fi$4(H$6, h$3.createJSDocOverrideTag, X$6, O$3, ne$6);
						break;
					case "deprecated":
						Gn$6 = !0, re$5 = Fi$4(H$6, h$3.createJSDocDeprecatedTag, X$6, O$3, ne$6);
						break;
					case "this":
						re$5 = bd(H$6, X$6, O$3, ne$6);
						break;
					case "enum":
						re$5 = iy(H$6, X$6, O$3, ne$6);
						break;
					case "arg":
					case "argument":
					case "param": return Kn$5(H$6, X$6, 2, O$3);
					case "return":
					case "returns":
						re$5 = H0(H$6, X$6, O$3, ne$6);
						break;
					case "template":
						re$5 = Td(H$6, X$6, O$3, ne$6);
						break;
					case "type":
						re$5 = yd(H$6, X$6, O$3, ne$6);
						break;
					case "typedef":
						re$5 = ay(H$6, X$6, O$3, ne$6);
						break;
					case "callback":
						re$5 = _y(H$6, X$6, O$3, ne$6);
						break;
					case "overload":
						re$5 = oy(H$6, X$6, O$3, ne$6);
						break;
					case "satisfies":
						re$5 = ty(H$6, X$6, O$3, ne$6);
						break;
					case "see":
						re$5 = X0(H$6, X$6, O$3, ne$6);
						break;
					case "exception":
					case "throws":
						re$5 = $0(H$6, X$6, O$3, ne$6);
						break;
					case "import":
						re$5 = ny(H$6, X$6, O$3, ne$6);
						break;
					default:
						re$5 = z$5(H$6, X$6, O$3, ne$6);
						break;
				}
				return re$5;
			}
			function n$8(O$3, H$6, X$6, ne$6) {
				return ne$6 || (X$6 += H$6 - O$3), i$18(X$6, ne$6.slice(X$6));
			}
			function i$18(O$3, H$6) {
				let X$6 = L$4(), ne$6 = [], re$5 = [], Ne$5, Be$4 = 0, pt$4;
				function yn$5(Zn$5) {
					pt$4 || (pt$4 = O$3), ne$6.push(Zn$5), O$3 += Zn$5.length;
				}
				H$6 !== void 0 && (H$6 !== "" && yn$5(H$6), Be$4 = 1);
				let on$6 = u$14();
				e: for (;;) {
					switch (on$6) {
						case 4:
							Be$4 = 0, ne$6.push(t$13.getTokenText()), O$3 = 0;
							break;
						case 60:
							t$13.resetTokenState(t$13.getTokenEnd() - 1);
							break e;
						case 1: break e;
						case 5:
							B$2.assert(Be$4 !== 2 && Be$4 !== 3, "whitespace shouldn't come from the scanner while saving comment text");
							let Zn$5 = t$13.getTokenText();
							pt$4 !== void 0 && O$3 + Zn$5.length > pt$4 && (ne$6.push(Zn$5.slice(pt$4 - O$3)), Be$4 = 2), O$3 += Zn$5.length;
							break;
						case 19:
							Be$4 = 2;
							let el$1 = t$13.getTokenFullStart(), Oa$3 = t$13.getTokenEnd() - 1, tl$1 = s$8(Oa$3);
							tl$1 ? (re$5.push(P$5(h$3.createJSDocText(ne$6.join("")), Ne$5 ?? X$6, el$1)), re$5.push(tl$1), ne$6 = [], Ne$5 = t$13.getTokenEnd()) : yn$5(t$13.getTokenText());
							break;
						case 62:
							Be$4 === 3 ? Be$4 = 2 : Be$4 = 3, yn$5(t$13.getTokenText());
							break;
						case 82:
							Be$4 !== 3 && (Be$4 = 2), yn$5(t$13.getTokenValue());
							break;
						case 42: if (Be$4 === 0) {
							Be$4 = 1, O$3 += 1;
							break;
						}
						default:
							Be$4 !== 3 && (Be$4 = 2), yn$5(t$13.getTokenText());
							break;
					}
					Be$4 === 2 || Be$4 === 3 ? on$6 = sn$4(Be$4 === 3) : on$6 = Fe$4();
				}
				fr$5(ne$6);
				let tn$4 = ne$6.join("").trimEnd();
				if (re$5.length) return tn$4.length && re$5.push(P$5(h$3.createJSDocText(tn$4), Ne$5 ?? X$6)), Ct$7(re$5, X$6, t$13.getTokenEnd());
				if (tn$4.length) return tn$4;
			}
			function s$8(O$3) {
				let H$6 = pe$6(f$3);
				if (!H$6) return;
				Fe$4(), Ot$4();
				let X$6 = l$10(), ne$6 = [];
				for (; u$14() !== 20 && u$14() !== 4 && u$14() !== 1;) ne$6.push(t$13.getTokenText()), Fe$4();
				let re$5 = H$6 === "link" ? h$3.createJSDocLink : H$6 === "linkcode" ? h$3.createJSDocLinkCode : h$3.createJSDocLinkPlain;
				return P$5(re$5(X$6, ne$6.join("")), O$3, t$13.getTokenEnd());
			}
			function l$10() {
				if (wt$2(u$14())) {
					let O$3 = L$4(), H$6 = Rt$5();
					for (; Le$6(25);) H$6 = P$5(h$3.createQualifiedName(H$6, u$14() === 81 ? Gt$4(80, !1) : Rt$5()), O$3);
					for (; u$14() === 81;) It$7(), Fe$4(), H$6 = P$5(h$3.createJSDocMemberName(H$6, St$5()), O$3);
					return H$6;
				}
			}
			function f$3() {
				if (kr$5(), u$14() === 19 && Fe$4() === 60 && wt$2(Fe$4())) {
					let O$3 = t$13.getTokenValue();
					if (S$4(O$3)) return O$3;
				}
			}
			function S$4(O$3) {
				return O$3 === "link" || O$3 === "linkcode" || O$3 === "linkplain";
			}
			function z$5(O$3, H$6, X$6, ne$6) {
				return P$5(h$3.createJSDocUnknownTag(H$6, n$8(O$3, L$4(), X$6, ne$6)), O$3);
			}
			function de$6(O$3) {
				O$3 && (Ae$5 ? Ae$5.push(O$3) : (Ae$5 = [O$3], Yt$4 = O$3.pos), hn$5 = O$3.end);
			}
			function Ue$5() {
				return kr$5(), u$14() === 19 ? d$14() : void 0;
			}
			function en$6() {
				let O$3 = zi$4(23);
				O$3 && Ot$4();
				let H$6 = zi$4(62), X$6 = dy();
				return H$6 && Fl$3(62), O$3 && (Ot$4(), ft$4(64) && Et$5(), j$7(24)), {
					name: X$6,
					isBracketed: O$3
				};
			}
			function An$5(O$3) {
				switch (O$3.kind) {
					case 151: return !0;
					case 188: return An$5(O$3.elementType);
					default: return Df(O$3) && Ze$2(O$3.typeName) && O$3.typeName.escapedText === "Object" && !O$3.typeArguments;
				}
			}
			function Kn$5(O$3, H$6, X$6, ne$6) {
				let re$5 = Ue$5(), Ne$5 = !re$5;
				kr$5();
				let { name: Be$4, isBracketed: pt$4 } = en$6(), yn$5 = kr$5();
				Ne$5 && !Y$6(f$3) && (re$5 = Ue$5());
				let on$6 = n$8(O$3, L$4(), ne$6, yn$5), tn$4 = Ia$3(re$5, Be$4, X$6, ne$6);
				tn$4 && (re$5 = tn$4, Ne$5 = !0);
				let Zn$5 = X$6 === 1 ? h$3.createJSDocPropertyTag(H$6, Be$4, pt$4, re$5, Ne$5, on$6) : h$3.createJSDocParameterTag(H$6, Be$4, pt$4, re$5, Ne$5, on$6);
				return P$5(Zn$5, O$3);
			}
			function Ia$3(O$3, H$6, X$6, ne$6) {
				if (O$3 && An$5(O$3.type)) {
					let re$5 = L$4(), Ne$5, Be$4;
					for (; Ne$5 = pe$6(() => yp$1(X$6, ne$6, H$6));) Ne$5.kind === 341 || Ne$5.kind === 348 ? Be$4 = Dn$1(Be$4, Ne$5) : Ne$5.kind === 345 && un$5(Ne$5.tagName, A$1.A_JSDoc_template_tag_may_not_follow_a_typedef_callback_or_overload_tag);
					if (Be$4) {
						let pt$4 = P$5(h$3.createJSDocTypeLiteral(Be$4, O$3.type.kind === 188), re$5);
						return P$5(h$3.createJSDocTypeExpression(pt$4), re$5);
					}
				}
			}
			function H0(O$3, H$6, X$6, ne$6) {
				nn$2(Ae$5, A6) && rt$5(H$6.pos, t$13.getTokenStart(), A$1._0_tag_already_specified, f_(H$6.escapedText));
				let re$5 = Ue$5();
				return P$5(h$3.createJSDocReturnTag(H$6, re$5, n$8(O$3, L$4(), X$6, ne$6)), O$3);
			}
			function yd(O$3, H$6, X$6, ne$6) {
				nn$2(Ae$5, zf) && rt$5(H$6.pos, t$13.getTokenStart(), A$1._0_tag_already_specified, f_(H$6.escapedText));
				let re$5 = d$14(!0), Ne$5 = X$6 !== void 0 && ne$6 !== void 0 ? n$8(O$3, L$4(), X$6, ne$6) : void 0;
				return P$5(h$3.createJSDocTypeTag(H$6, re$5, Ne$5), O$3);
			}
			function X0(O$3, H$6, X$6, ne$6) {
				let Ne$5 = u$14() === 23 || Y$6(() => Fe$4() === 60 && wt$2(Fe$4()) && S$4(t$13.getTokenValue())) ? void 0 : b$7(), Be$4 = X$6 !== void 0 && ne$6 !== void 0 ? n$8(O$3, L$4(), X$6, ne$6) : void 0;
				return P$5(h$3.createJSDocSeeTag(H$6, Ne$5, Be$4), O$3);
			}
			function $0(O$3, H$6, X$6, ne$6) {
				let re$5 = Ue$5(), Ne$5 = n$8(O$3, L$4(), X$6, ne$6);
				return P$5(h$3.createJSDocThrowsTag(H$6, re$5, Ne$5), O$3);
			}
			function Q0(O$3, H$6, X$6, ne$6) {
				let re$5 = L$4(), Ne$5 = K0(), Be$4 = t$13.getTokenFullStart(), pt$4 = n$8(O$3, Be$4, X$6, ne$6);
				pt$4 || (Be$4 = t$13.getTokenFullStart());
				let yn$5 = typeof pt$4 != "string" ? Ct$7(Hp([P$5(Ne$5, re$5, Be$4)], pt$4), re$5) : Ne$5.text + pt$4;
				return P$5(h$3.createJSDocAuthorTag(H$6, yn$5), O$3);
			}
			function K0() {
				let O$3 = [], H$6 = !1, X$6 = t$13.getToken();
				for (; X$6 !== 1 && X$6 !== 4;) {
					if (X$6 === 30) H$6 = !0;
					else {
						if (X$6 === 60 && !H$6) break;
						if (X$6 === 32 && H$6) {
							O$3.push(t$13.getTokenText()), t$13.resetTokenState(t$13.getTokenEnd());
							break;
						}
					}
					O$3.push(t$13.getTokenText()), X$6 = Fe$4();
				}
				return h$3.createJSDocText(O$3.join(""));
			}
			function Z0(O$3, H$6, X$6, ne$6) {
				let re$5 = gd();
				return P$5(h$3.createJSDocImplementsTag(H$6, re$5, n$8(O$3, L$4(), X$6, ne$6)), O$3);
			}
			function ey(O$3, H$6, X$6, ne$6) {
				let re$5 = gd();
				return P$5(h$3.createJSDocAugmentsTag(H$6, re$5, n$8(O$3, L$4(), X$6, ne$6)), O$3);
			}
			function ty(O$3, H$6, X$6, ne$6) {
				let re$5 = d$14(!1), Ne$5 = X$6 !== void 0 && ne$6 !== void 0 ? n$8(O$3, L$4(), X$6, ne$6) : void 0;
				return P$5(h$3.createJSDocSatisfiesTag(H$6, re$5, Ne$5), O$3);
			}
			function ny(O$3, H$6, X$6, ne$6) {
				let re$5 = t$13.getTokenFullStart(), Ne$5;
				ve$6() && (Ne$5 = St$5());
				let Be$4 = ci$6(Ne$5, re$5, !0, !0), pt$4 = qi$3(), yn$5 = Hc$1(), on$6 = X$6 !== void 0 && ne$6 !== void 0 ? n$8(O$3, L$4(), X$6, ne$6) : void 0;
				return P$5(h$3.createJSDocImportTag(H$6, Be$4, pt$4, yn$5, on$6), O$3);
			}
			function gd() {
				let O$3 = Le$6(19), H$6 = L$4(), X$6 = ry();
				t$13.setSkipJsDocLeadingAsterisks(!0);
				let ne$6 = Pa$3();
				t$13.setSkipJsDocLeadingAsterisks(!1);
				let re$5 = h$3.createExpressionWithTypeArguments(X$6, ne$6), Ne$5 = P$5(re$5, H$6);
				return O$3 && (Ot$4(), j$7(20)), Ne$5;
			}
			function ry() {
				let O$3 = L$4(), H$6 = pi$6();
				for (; Le$6(25);) {
					let X$6 = pi$6();
					H$6 = P$5(ie$6(H$6, X$6), O$3);
				}
				return H$6;
			}
			function Fi$4(O$3, H$6, X$6, ne$6, re$5) {
				return P$5(H$6(X$6, n$8(O$3, L$4(), ne$6, re$5)), O$3);
			}
			function bd(O$3, H$6, X$6, ne$6) {
				let re$5 = d$14(!0);
				return Ot$4(), P$5(h$3.createJSDocThisTag(H$6, re$5, n$8(O$3, L$4(), X$6, ne$6)), O$3);
			}
			function iy(O$3, H$6, X$6, ne$6) {
				let re$5 = d$14(!0);
				return Ot$4(), P$5(h$3.createJSDocEnumTag(H$6, re$5, n$8(O$3, L$4(), X$6, ne$6)), O$3);
			}
			function ay(O$3, H$6, X$6, ne$6) {
				let re$5 = Ue$5();
				kr$5();
				let Ne$5 = hp$1();
				Ot$4();
				let Be$4 = i$18(X$6), pt$4;
				if (!re$5 || An$5(re$5.type)) {
					let on$6, tn$4, Zn$5, el$1 = !1;
					for (; (on$6 = pe$6(() => ly(X$6))) && on$6.kind !== 345;) if (el$1 = !0, on$6.kind === 344) if (tn$4) {
						let Oa$3 = Ee$4(A$1.A_JSDoc_typedef_comment_may_not_contain_multiple_type_tags);
						Oa$3 && al(Oa$3, La(Lt$6, Qe$4, 0, 0, A$1.The_tag_was_first_specified_here));
						break;
					} else tn$4 = on$6;
					else Zn$5 = Dn$1(Zn$5, on$6);
					if (el$1) {
						let Oa$3 = re$5 && re$5.type.kind === 188, tl$1 = h$3.createJSDocTypeLiteral(Zn$5, Oa$3);
						re$5 = tn$4 && tn$4.typeExpression && !An$5(tn$4.typeExpression.type) ? tn$4.typeExpression : P$5(tl$1, O$3), pt$4 = re$5.end;
					}
				}
				pt$4 = pt$4 || Be$4 !== void 0 ? L$4() : (Ne$5 ?? re$5 ?? H$6).end, Be$4 || (Be$4 = n$8(O$3, pt$4, X$6, ne$6));
				let yn$5 = h$3.createJSDocTypedefTag(H$6, re$5, Ne$5, Be$4);
				return P$5(yn$5, O$3, pt$4);
			}
			function hp$1(O$3) {
				let H$6 = t$13.getTokenStart();
				if (!wt$2(u$14())) return;
				let X$6 = pi$6();
				if (Le$6(25)) {
					let ne$6 = hp$1(!0), re$5 = h$3.createModuleDeclaration(void 0, X$6, ne$6, O$3 ? 8 : void 0);
					return P$5(re$5, H$6);
				}
				return O$3 && (X$6.flags |= 4096), X$6;
			}
			function sy(O$3) {
				let H$6 = L$4(), X$6, ne$6;
				for (; X$6 = pe$6(() => yp$1(4, O$3));) {
					if (X$6.kind === 345) {
						un$5(X$6.tagName, A$1.A_JSDoc_template_tag_may_not_follow_a_typedef_callback_or_overload_tag);
						break;
					}
					ne$6 = Dn$1(ne$6, X$6);
				}
				return Ct$7(ne$6 || [], H$6);
			}
			function vd(O$3, H$6) {
				let X$6 = sy(H$6), ne$6 = pe$6(() => {
					if (zi$4(60)) {
						let re$5 = q$3(H$6);
						if (re$5 && re$5.kind === 342) return re$5;
					}
				});
				return P$5(h$3.createJSDocSignature(void 0, X$6, ne$6), O$3);
			}
			function _y(O$3, H$6, X$6, ne$6) {
				let re$5 = hp$1();
				Ot$4();
				let Ne$5 = i$18(X$6), Be$4 = vd(O$3, X$6);
				Ne$5 || (Ne$5 = n$8(O$3, L$4(), X$6, ne$6));
				let pt$4 = Ne$5 !== void 0 ? L$4() : Be$4.end;
				return P$5(h$3.createJSDocCallbackTag(H$6, Be$4, re$5, Ne$5), O$3, pt$4);
			}
			function oy(O$3, H$6, X$6, ne$6) {
				Ot$4();
				let re$5 = i$18(X$6), Ne$5 = vd(O$3, X$6);
				re$5 || (re$5 = n$8(O$3, L$4(), X$6, ne$6));
				let Be$4 = re$5 !== void 0 ? L$4() : Ne$5.end;
				return P$5(h$3.createJSDocOverloadTag(H$6, Ne$5, re$5), O$3, Be$4);
			}
			function cy(O$3, H$6) {
				for (; !Ze$2(O$3) || !Ze$2(H$6);) if (!Ze$2(O$3) && !Ze$2(H$6) && O$3.right.escapedText === H$6.right.escapedText) O$3 = O$3.left, H$6 = H$6.left;
				else return !1;
				return O$3.escapedText === H$6.escapedText;
			}
			function ly(O$3) {
				return yp$1(1, O$3);
			}
			function yp$1(O$3, H$6, X$6) {
				let ne$6 = !0, re$5 = !1;
				for (;;) switch (Fe$4()) {
					case 60:
						if (ne$6) {
							let Ne$5 = uy(O$3, H$6);
							return Ne$5 && (Ne$5.kind === 341 || Ne$5.kind === 348) && X$6 && (Ze$2(Ne$5.name) || !cy(X$6, Ne$5.name.left)) ? !1 : Ne$5;
						}
						re$5 = !1;
						break;
					case 4:
						ne$6 = !0, re$5 = !1;
						break;
					case 42:
						re$5 && (ne$6 = !1), re$5 = !0;
						break;
					case 80:
						ne$6 = !1;
						break;
					case 1: return !1;
				}
			}
			function uy(O$3, H$6) {
				B$2.assert(u$14() === 60);
				let X$6 = t$13.getTokenFullStart();
				Fe$4();
				let ne$6 = pi$6(), re$5 = kr$5(), Ne$5;
				switch (ne$6.escapedText) {
					case "type": return O$3 === 1 && yd(X$6, ne$6);
					case "prop":
					case "property":
						Ne$5 = 1;
						break;
					case "arg":
					case "argument":
					case "param":
						Ne$5 = 6;
						break;
					case "template": return Td(X$6, ne$6, H$6, re$5);
					case "this": return bd(X$6, ne$6, H$6, re$5);
					default: return !1;
				}
				return O$3 & Ne$5 ? Kn$5(X$6, ne$6, O$3, H$6) : !1;
			}
			function py() {
				let O$3 = L$4(), H$6 = zi$4(23);
				H$6 && Ot$4();
				let X$6 = En$5(!1, !0), ne$6 = pi$6(A$1.Unexpected_token_A_type_parameter_name_was_expected_without_curly_braces), re$5;
				if (H$6 && (Ot$4(), j$7(64), re$5 = Tt$7(16777216, ps$3), j$7(24)), !Qi$1(ne$6)) return P$5(h$3.createTypeParameterDeclaration(X$6, ne$6, void 0, re$5), O$3);
			}
			function fy() {
				let O$3 = L$4(), H$6 = [];
				do {
					Ot$4();
					let X$6 = py();
					X$6 !== void 0 && H$6.push(X$6), kr$5();
				} while (zi$4(28));
				return Ct$7(H$6, O$3);
			}
			function Td(O$3, H$6, X$6, ne$6) {
				let re$5 = u$14() === 19 ? d$14() : void 0, Ne$5 = fy();
				return P$5(h$3.createJSDocTemplateTag(H$6, re$5, Ne$5, n$8(O$3, L$4(), X$6, ne$6)), O$3);
			}
			function zi$4(O$3) {
				return u$14() === O$3 ? (Fe$4(), !0) : !1;
			}
			function dy() {
				let O$3 = pi$6();
				for (Le$6(23) && j$7(24); Le$6(25);) {
					let H$6 = pi$6();
					Le$6(23) && j$7(24), O$3 = Xl$3(O$3, H$6);
				}
				return O$3;
			}
			function pi$6(O$3) {
				if (!wt$2(u$14())) return Gt$4(80, !O$3, O$3 || A$1.Identifier_expected);
				xn$3++;
				let H$6 = t$13.getTokenStart(), X$6 = t$13.getTokenEnd(), ne$6 = u$14(), re$5 = jr$5(t$13.getTokenValue()), Ne$5 = P$5(te$5(re$5, ne$6), H$6, X$6);
				return Fe$4(), Ne$5;
			}
		}
	})(Kc$2 = e$4.JSDocParser || (e$4.JSDocParser = {}));
})(Zi$1 || (Zi$1 = {}));
var wm = /* @__PURE__ */ new WeakSet();
function $6(e$4) {
	wm.has(e$4) && B$2.fail("Source file has already been incrementally parsed"), wm.add(e$4);
}
var vh = /* @__PURE__ */ new WeakSet();
function Q6(e$4) {
	return vh.has(e$4);
}
function Gp(e$4) {
	vh.add(e$4);
}
var xl;
((e$4) => {
	function t$13(x$3, N$5, te$5, ue$4) {
		if (ue$4 = ue$4 || B$2.shouldAssert(2), h$3(x$3, N$5, te$5, ue$4), Cg(te$5)) return x$3;
		if (x$3.statements.length === 0) return Zi$1.parseSourceFile(x$3.fileName, N$5, x$3.languageVersion, void 0, !0, x$3.scriptKind, x$3.setExternalModuleIndicator, x$3.jsDocParsingMode);
		$6(x$3), Zi$1.fixupParentReferences(x$3);
		let ye$4 = x$3.text, fe$4 = y$7(x$3), M$2 = c$3(x$3, te$5);
		h$3(x$3, N$5, M$2, ue$4), B$2.assert(M$2.span.start <= te$5.span.start), B$2.assert(Ar$2(M$2.span) === Ar$2(te$5.span)), B$2.assert(Ar$2(e_(M$2)) === Ar$2(e_(te$5)));
		let ie$6 = e_(M$2).length - M$2.span.length;
		C$3(x$3, M$2.span.start, Ar$2(M$2.span), Ar$2(e_(M$2)), ie$6, ye$4, N$5, ue$4);
		let Ce$6 = Zi$1.parseSourceFile(x$3.fileName, N$5, x$3.languageVersion, fe$4, !0, x$3.scriptKind, x$3.setExternalModuleIndicator, x$3.jsDocParsingMode);
		return Ce$6.commentDirectives = a$13(x$3.commentDirectives, Ce$6.commentDirectives, M$2.span.start, Ar$2(M$2.span), ie$6, ye$4, N$5, ue$4), Ce$6.impliedNodeFormat = x$3.impliedNodeFormat, N6(x$3, Ce$6), Ce$6;
	}
	e$4.updateSourceFile = t$13;
	function a$13(x$3, N$5, te$5, ue$4, ye$4, fe$4, M$2, ie$6) {
		if (!x$3) return N$5;
		let Ce$6, V$5 = !1;
		for (let G$6 of x$3) {
			let { range: dt$3, type: rr$5 } = G$6;
			if (dt$3.end < te$5) Ce$6 = Dn$1(Ce$6, G$6);
			else if (dt$3.pos > ue$4) {
				oe$6();
				let vn$4 = {
					range: {
						pos: dt$3.pos + ye$4,
						end: dt$3.end + ye$4
					},
					type: rr$5
				};
				Ce$6 = Dn$1(Ce$6, vn$4), ie$6 && B$2.assert(fe$4.substring(dt$3.pos, dt$3.end) === M$2.substring(vn$4.range.pos, vn$4.range.end));
			}
		}
		return oe$6(), Ce$6;
		function oe$6() {
			V$5 || (V$5 = !0, Ce$6 ? N$5 && Ce$6.push(...N$5) : Ce$6 = N$5);
		}
	}
	function o$9(x$3, N$5, te$5, ue$4, ye$4, fe$4, M$2) {
		te$5 ? Ce$6(x$3) : ie$6(x$3);
		return;
		function ie$6(V$5) {
			let oe$6 = "";
			if (M$2 && m$11(V$5) && (oe$6 = ye$4.substring(V$5.pos, V$5.end)), em(V$5, N$5), bi$1(V$5, V$5.pos + ue$4, V$5.end + ue$4), M$2 && m$11(V$5) && B$2.assert(oe$6 === fe$4.substring(V$5.pos, V$5.end)), Ht$1(V$5, ie$6, Ce$6), $i$1(V$5)) for (let G$6 of V$5.jsDoc) ie$6(G$6);
			E$3(V$5, M$2);
		}
		function Ce$6(V$5) {
			bi$1(V$5, V$5.pos + ue$4, V$5.end + ue$4);
			for (let oe$6 of V$5) ie$6(oe$6);
		}
	}
	function m$11(x$3) {
		switch (x$3.kind) {
			case 11:
			case 9:
			case 80: return !0;
		}
		return !1;
	}
	function v$5(x$3, N$5, te$5, ue$4, ye$4) {
		B$2.assert(x$3.end >= N$5, "Adjusting an element that was entirely before the change range"), B$2.assert(x$3.pos <= te$5, "Adjusting an element that was entirely after the change range"), B$2.assert(x$3.pos <= x$3.end);
		let fe$4 = Math.min(x$3.pos, ue$4), M$2 = x$3.end >= te$5 ? x$3.end + ye$4 : Math.min(x$3.end, ue$4);
		if (B$2.assert(fe$4 <= M$2), x$3.parent) {
			let ie$6 = x$3.parent;
			B$2.assertGreaterThanOrEqual(fe$4, ie$6.pos), B$2.assertLessThanOrEqual(M$2, ie$6.end);
		}
		bi$1(x$3, fe$4, M$2);
	}
	function E$3(x$3, N$5) {
		if (N$5) {
			let te$5 = x$3.pos, ue$4 = (ye$4) => {
				B$2.assert(ye$4.pos >= te$5), te$5 = ye$4.end;
			};
			if ($i$1(x$3)) for (let ye$4 of x$3.jsDoc) ue$4(ye$4);
			Ht$1(x$3, ue$4), B$2.assert(te$5 <= x$3.end);
		}
	}
	function C$3(x$3, N$5, te$5, ue$4, ye$4, fe$4, M$2, ie$6) {
		Ce$6(x$3);
		return;
		function Ce$6(oe$6) {
			if (B$2.assert(oe$6.pos <= oe$6.end), oe$6.pos > te$5) {
				o$9(oe$6, x$3, !1, ye$4, fe$4, M$2, ie$6);
				return;
			}
			let G$6 = oe$6.end;
			if (G$6 >= N$5) {
				if (Gp(oe$6), em(oe$6, x$3), v$5(oe$6, N$5, te$5, ue$4, ye$4), Ht$1(oe$6, Ce$6, V$5), $i$1(oe$6)) for (let dt$3 of oe$6.jsDoc) Ce$6(dt$3);
				E$3(oe$6, ie$6);
				return;
			}
			B$2.assert(G$6 < N$5);
		}
		function V$5(oe$6) {
			if (B$2.assert(oe$6.pos <= oe$6.end), oe$6.pos > te$5) {
				o$9(oe$6, x$3, !0, ye$4, fe$4, M$2, ie$6);
				return;
			}
			let G$6 = oe$6.end;
			if (G$6 >= N$5) {
				Gp(oe$6), v$5(oe$6, N$5, te$5, ue$4, ye$4);
				for (let dt$3 of oe$6) Ce$6(dt$3);
				return;
			}
			B$2.assert(G$6 < N$5);
		}
	}
	function c$3(x$3, N$5) {
		let ue$4 = N$5.span.start;
		for (let M$2 = 0; ue$4 > 0 && M$2 <= 1; M$2++) {
			let ie$6 = W$2(x$3, ue$4);
			B$2.assert(ie$6.pos <= ue$4);
			let Ce$6 = ie$6.pos;
			ue$4 = Math.max(0, Ce$6 - 1);
		}
		let ye$4 = Ag(ue$4, Ar$2(N$5.span)), fe$4 = N$5.newLength + (N$5.span.start - ue$4);
		return t1(ye$4, fe$4);
	}
	function W$2(x$3, N$5) {
		let te$5 = x$3, ue$4;
		if (Ht$1(x$3, fe$4), ue$4) {
			let M$2 = ye$4(ue$4);
			M$2.pos > te$5.pos && (te$5 = M$2);
		}
		return te$5;
		function ye$4(M$2) {
			for (;;) {
				let ie$6 = pb(M$2);
				if (ie$6) M$2 = ie$6;
				else return M$2;
			}
		}
		function fe$4(M$2) {
			if (!Qi$1(M$2)) if (M$2.pos <= N$5) {
				if (M$2.pos >= te$5.pos && (te$5 = M$2), N$5 < M$2.end) return Ht$1(M$2, fe$4), !0;
				B$2.assert(M$2.end <= N$5), ue$4 = M$2;
			} else return B$2.assert(M$2.pos > N$5), !0;
		}
	}
	function h$3(x$3, N$5, te$5, ue$4) {
		let ye$4 = x$3.text;
		if (te$5 && (B$2.assert(ye$4.length - te$5.span.length + te$5.newLength === N$5.length), ue$4 || B$2.shouldAssert(3))) {
			let fe$4 = ye$4.substr(0, te$5.span.start), M$2 = N$5.substr(0, te$5.span.start);
			B$2.assert(fe$4 === M$2);
			let ie$6 = ye$4.substring(Ar$2(te$5.span), ye$4.length), Ce$6 = N$5.substring(Ar$2(e_(te$5)), N$5.length);
			B$2.assert(ie$6 === Ce$6);
		}
	}
	function y$7(x$3) {
		let N$5 = x$3.statements, te$5 = 0;
		B$2.assert(te$5 < N$5.length);
		let ue$4 = N$5[te$5], ye$4 = -1;
		return { currentNode(M$2) {
			return M$2 !== ye$4 && (ue$4 && ue$4.end === M$2 && te$5 < N$5.length - 1 && (te$5++, ue$4 = N$5[te$5]), (!ue$4 || ue$4.pos !== M$2) && fe$4(M$2)), ye$4 = M$2, B$2.assert(!ue$4 || ue$4.pos === M$2), ue$4;
		} };
		function fe$4(M$2) {
			N$5 = void 0, te$5 = -1, ue$4 = void 0, Ht$1(x$3, ie$6, Ce$6);
			return;
			function ie$6(V$5) {
				return M$2 >= V$5.pos && M$2 < V$5.end ? (Ht$1(V$5, ie$6, Ce$6), !0) : !1;
			}
			function Ce$6(V$5) {
				if (M$2 >= V$5.pos && M$2 < V$5.end) for (let oe$6 = 0; oe$6 < V$5.length; oe$6++) {
					let G$6 = V$5[oe$6];
					if (G$6) {
						if (G$6.pos === M$2) return N$5 = V$5, te$5 = oe$6, ue$4 = G$6, !0;
						if (G$6.pos < M$2 && M$2 < G$6.end) return Ht$1(G$6, ie$6, Ce$6), !0;
					}
				}
				return !1;
			}
		}
	}
	e$4.createSyntaxCursor = y$7;
	let g$2;
	((x$3) => {
		x$3[x$3.Value = -1] = "Value";
	})(g$2 || (g$2 = {}));
})(xl || (xl = {}));
function K6(e$4) {
	return Z6(e$4) !== void 0;
}
function Z6(e$4) {
	let t$13 = Bm(e$4, Ob, !1);
	if (t$13) return t$13;
	if (Qy(e$4, ".ts")) {
		let a$13 = Um(e$4), o$9 = a$13.lastIndexOf(".d.");
		if (o$9 >= 0) return a$13.substring(o$9);
	}
}
function ev(e$4, t$13, a$13, o$9) {
	if (e$4) {
		if (e$4 === "import") return 99;
		if (e$4 === "require") return 1;
		o$9(t$13, a$13 - t$13, A$1.resolution_mode_should_be_either_require_or_import);
	}
}
function tv(e$4, t$13) {
	let a$13 = [];
	for (let o$9 of Jp(t$13, 0) || bt$2) {
		let m$11 = t$13.substring(o$9.pos, o$9.end);
		sv(a$13, o$9, m$11);
	}
	e$4.pragmas = /* @__PURE__ */ new Map();
	for (let o$9 of a$13) {
		if (e$4.pragmas.has(o$9.name)) {
			let m$11 = e$4.pragmas.get(o$9.name);
			m$11 instanceof Array ? m$11.push(o$9.args) : e$4.pragmas.set(o$9.name, [m$11, o$9.args]);
			continue;
		}
		e$4.pragmas.set(o$9.name, o$9.args);
	}
}
function nv(e$4, t$13) {
	e$4.checkJsDirective = void 0, e$4.referencedFiles = [], e$4.typeReferenceDirectives = [], e$4.libReferenceDirectives = [], e$4.amdDependencies = [], e$4.hasNoDefaultLib = !1, e$4.pragmas.forEach((a$13, o$9) => {
		switch (o$9) {
			case "reference": {
				let m$11 = e$4.referencedFiles, v$5 = e$4.typeReferenceDirectives, E$3 = e$4.libReferenceDirectives;
				qn$1(vp(a$13), (C$3) => {
					let { types: c$3, lib: W$2, path: h$3, ["resolution-mode"]: y$7, preserve: g$2 } = C$3.arguments, x$3 = g$2 === "true" ? !0 : void 0;
					if (C$3.arguments["no-default-lib"] === "true") e$4.hasNoDefaultLib = !0;
					else if (c$3) {
						let N$5 = ev(y$7, c$3.pos, c$3.end, t$13);
						v$5.push({
							pos: c$3.pos,
							end: c$3.end,
							fileName: c$3.value,
							...N$5 ? { resolutionMode: N$5 } : {},
							...x$3 ? { preserve: x$3 } : {}
						});
					} else W$2 ? E$3.push({
						pos: W$2.pos,
						end: W$2.end,
						fileName: W$2.value,
						...x$3 ? { preserve: x$3 } : {}
					}) : h$3 ? m$11.push({
						pos: h$3.pos,
						end: h$3.end,
						fileName: h$3.value,
						...x$3 ? { preserve: x$3 } : {}
					}) : t$13(C$3.range.pos, C$3.range.end - C$3.range.pos, A$1.Invalid_reference_directive_syntax);
				});
				break;
			}
			case "amd-dependency":
				e$4.amdDependencies = Np(vp(a$13), (m$11) => ({
					name: m$11.arguments.name,
					path: m$11.arguments.path
				}));
				break;
			case "amd-module":
				if (a$13 instanceof Array) for (let m$11 of a$13) e$4.moduleName && t$13(m$11.range.pos, m$11.range.end - m$11.range.pos, A$1.An_AMD_module_cannot_have_multiple_name_assignments), e$4.moduleName = m$11.arguments.name;
				else e$4.moduleName = a$13.arguments.name;
				break;
			case "ts-nocheck":
			case "ts-check":
				qn$1(vp(a$13), (m$11) => {
					(!e$4.checkJsDirective || m$11.range.pos > e$4.checkJsDirective.pos) && (e$4.checkJsDirective = {
						enabled: o$9 === "ts-check",
						end: m$11.range.end,
						pos: m$11.range.pos
					});
				});
				break;
			case "jsx":
			case "jsxfrag":
			case "jsximportsource":
			case "jsxruntime": return;
			default: B$2.fail("Unhandled pragma kind");
		}
	});
}
var Pp = /* @__PURE__ */ new Map();
function rv(e$4) {
	if (Pp.has(e$4)) return Pp.get(e$4);
	let t$13 = new RegExp(`(\\s${e$4}\\s*=\\s*)(?:(?:'([^']*)')|(?:"([^"]*)"))`, "im");
	return Pp.set(e$4, t$13), t$13;
}
var iv = /^\/\/\/\s*<(\S+)\s.*?\/>/m, av = /^\/\/\/?\s*@([^\s:]+)((?:[^\S\r\n]|:).*)?$/m;
function sv(e$4, t$13, a$13) {
	let o$9 = t$13.kind === 2 && iv.exec(a$13);
	if (o$9) {
		let v$5 = o$9[1].toLowerCase(), E$3 = Rm[v$5];
		if (!E$3 || !(E$3.kind & 1)) return;
		if (E$3.args) {
			let C$3 = {};
			for (let c$3 of E$3.args) {
				let h$3 = rv(c$3.name).exec(a$13);
				if (!h$3 && !c$3.optional) return;
				if (h$3) {
					let y$7 = h$3[2] || h$3[3];
					if (c$3.captureSpan) {
						let g$2 = t$13.pos + h$3.index + h$3[1].length + 1;
						C$3[c$3.name] = {
							value: y$7,
							pos: g$2,
							end: g$2 + y$7.length
						};
					} else C$3[c$3.name] = y$7;
				}
			}
			e$4.push({
				name: v$5,
				args: {
					arguments: C$3,
					range: t$13
				}
			});
		} else e$4.push({
			name: v$5,
			args: {
				arguments: {},
				range: t$13
			}
		});
		return;
	}
	let m$11 = t$13.kind === 2 && av.exec(a$13);
	if (m$11) return km(e$4, t$13, 2, m$11);
	if (t$13.kind === 3) {
		let v$5 = /@(\S+)(\s+(?:\S.*)?)?$/gm, E$3;
		for (; E$3 = v$5.exec(a$13);) km(e$4, t$13, 4, E$3);
	}
}
function km(e$4, t$13, a$13, o$9) {
	if (!o$9) return;
	let m$11 = o$9[1].toLowerCase(), v$5 = Rm[m$11];
	if (!v$5 || !(v$5.kind & a$13)) return;
	let E$3 = o$9[2], C$3 = _v(v$5, E$3);
	C$3 !== "fail" && e$4.push({
		name: m$11,
		args: {
			arguments: C$3,
			range: t$13
		}
	});
}
function _v(e$4, t$13) {
	if (!t$13) return {};
	if (!e$4.args) return {};
	let a$13 = t$13.trim().split(/\s+/), o$9 = {};
	for (let m$11 = 0; m$11 < e$4.args.length; m$11++) {
		let v$5 = e$4.args[m$11];
		if (!a$13[m$11] && !v$5.optional) return "fail";
		if (v$5.captureSpan) return B$2.fail("Capture spans not yet implemented for non-xml pragmas");
		o$9[v$5.name] = a$13[m$11];
	}
	return o$9;
}
function di$1(e$4, t$13) {
	return e$4.kind !== t$13.kind ? !1 : e$4.kind === 80 ? e$4.escapedText === t$13.escapedText : e$4.kind === 110 ? !0 : e$4.kind === 295 ? e$4.namespace.escapedText === t$13.namespace.escapedText && e$4.name.escapedText === t$13.name.escapedText : e$4.name.escapedText === t$13.name.escapedText && di$1(e$4.expression, t$13.expression);
}
var c_ = _f(T_.Latest, !0);
function Th(e$4, t$13, a$13, o$9) {
	let m$11 = ff(e$4) ? new Gf(e$4, t$13, a$13) : e$4 === 80 ? new Sh(80, t$13, a$13) : e$4 === 81 ? new wh(81, t$13, a$13) : new xh(e$4, t$13, a$13);
	return m$11.parent = o$9, m$11.flags = o$9.flags & 101441536, m$11;
}
var Gf = class {
	constructor(e$4, t$13, a$13) {
		this.pos = t$13, this.end = a$13, this.kind = e$4, this.id = 0, this.flags = 0, this.modifierFlagsCache = 0, this.transformFlags = 0, this.parent = void 0, this.original = void 0, this.emitNode = void 0;
	}
	assertHasRealPosition(e$4) {
		B$2.assert(!y_(this.pos) && !y_(this.end), e$4 || "Node must have a real position for this operation");
	}
	getSourceFile() {
		return gi$1(this);
	}
	getStart(e$4, t$13) {
		return this.assertHasRealPosition(), gl(this, e$4, t$13);
	}
	getFullStart() {
		return this.assertHasRealPosition(), this.pos;
	}
	getEnd() {
		return this.assertHasRealPosition(), this.end;
	}
	getWidth(e$4) {
		return this.assertHasRealPosition(), this.getEnd() - this.getStart(e$4);
	}
	getFullWidth() {
		return this.assertHasRealPosition(), this.end - this.pos;
	}
	getLeadingTriviaWidth(e$4) {
		return this.assertHasRealPosition(), this.getStart(e$4) - this.pos;
	}
	getFullText(e$4) {
		return this.assertHasRealPosition(), (e$4 || this.getSourceFile()).text.substring(this.pos, this.end);
	}
	getText(e$4) {
		return this.assertHasRealPosition(), e$4 || (e$4 = this.getSourceFile()), e$4.text.substring(this.getStart(e$4), this.getEnd());
	}
	getChildCount(e$4) {
		return this.getChildren(e$4).length;
	}
	getChildAt(e$4, t$13) {
		return this.getChildren(t$13)[e$4];
	}
	getChildren(e$4 = gi$1(this)) {
		return this.assertHasRealPosition("Node without a real position cannot be scanned and thus has no token nodes - use forEachChild and collect the result if that's fine"), fh(this, e$4) ?? P6(this, e$4, ov(this, e$4));
	}
	getFirstToken(e$4) {
		this.assertHasRealPosition();
		let t$13 = this.getChildren(e$4);
		if (!t$13.length) return;
		let a$13 = Am(t$13, (o$9) => o$9.kind < 309 || o$9.kind > 351);
		return a$13.kind < 166 ? a$13 : a$13.getFirstToken(e$4);
	}
	getLastToken(e$4) {
		this.assertHasRealPosition();
		let t$13 = this.getChildren(e$4), a$13 = Fa$1(t$13);
		if (a$13) return a$13.kind < 166 ? a$13 : a$13.getLastToken(e$4);
	}
	forEachChild(e$4, t$13) {
		return Ht$1(this, e$4, t$13);
	}
};
function ov(e$4, t$13) {
	let a$13 = [];
	if (d2(e$4)) return e$4.forEachChild((E$3) => {
		a$13.push(E$3);
	}), a$13;
	c_.setText((t$13 || e$4.getSourceFile()).text);
	let o$9 = e$4.pos, m$11 = (E$3) => {
		l_(a$13, o$9, E$3.pos, e$4), a$13.push(E$3), o$9 = E$3.end;
	}, v$5 = (E$3) => {
		l_(a$13, o$9, E$3.pos, e$4), a$13.push(cv(E$3, e$4)), o$9 = E$3.end;
	};
	return qn$1(e$4.jsDoc, m$11), o$9 = e$4.pos, e$4.forEachChild(m$11, v$5), l_(a$13, o$9, e$4.end, e$4), c_.setText(void 0), a$13;
}
function l_(e$4, t$13, a$13, o$9) {
	for (c_.resetTokenState(t$13); t$13 < a$13;) {
		let m$11 = c_.scan(), v$5 = c_.getTokenEnd();
		if (v$5 <= a$13) {
			if (m$11 === 80) {
				if (Ub(o$9)) continue;
				B$2.fail(`Did not expect ${B$2.formatSyntaxKind(o$9.kind)} to have an Identifier in its trivia`);
			}
			e$4.push(Th(m$11, t$13, v$5, o$9));
		}
		if (t$13 = v$5, m$11 === 1) break;
	}
}
function cv(e$4, t$13) {
	let a$13 = Th(352, e$4.pos, e$4.end, t$13), o$9 = [], m$11 = e$4.pos;
	for (let v$5 of e$4) l_(o$9, m$11, v$5.pos, t$13), o$9.push(v$5), m$11 = v$5.end;
	return l_(o$9, m$11, e$4.end, t$13), a$13._children = o$9, a$13;
}
var Yf = class {
	constructor(e$4, t$13, a$13) {
		this.pos = t$13, this.end = a$13, this.kind = e$4, this.id = 0, this.flags = 0, this.transformFlags = 0, this.parent = void 0, this.emitNode = void 0;
	}
	getSourceFile() {
		return gi$1(this);
	}
	getStart(e$4, t$13) {
		return gl(this, e$4, t$13);
	}
	getFullStart() {
		return this.pos;
	}
	getEnd() {
		return this.end;
	}
	getWidth(e$4) {
		return this.getEnd() - this.getStart(e$4);
	}
	getFullWidth() {
		return this.end - this.pos;
	}
	getLeadingTriviaWidth(e$4) {
		return this.getStart(e$4) - this.pos;
	}
	getFullText(e$4) {
		return (e$4 || this.getSourceFile()).text.substring(this.pos, this.end);
	}
	getText(e$4) {
		return e$4 || (e$4 = this.getSourceFile()), e$4.text.substring(this.getStart(e$4), this.getEnd());
	}
	getChildCount() {
		return this.getChildren().length;
	}
	getChildAt(e$4) {
		return this.getChildren()[e$4];
	}
	getChildren() {
		return this.kind === 1 && this.jsDoc || bt$2;
	}
	getFirstToken() {}
	getLastToken() {}
	forEachChild() {}
}, lv = class {
	constructor(e$4, t$13) {
		this.flags = e$4, this.escapedName = t$13, this.declarations = void 0, this.valueDeclaration = void 0, this.id = 0, this.mergeId = 0, this.parent = void 0, this.members = void 0, this.exports = void 0, this.exportSymbol = void 0, this.constEnumOnlyModule = void 0, this.isReferenced = void 0, this.lastAssignmentPos = void 0, this.links = void 0;
	}
	getFlags() {
		return this.flags;
	}
	get name() {
		return jp(this);
	}
	getEscapedName() {
		return this.escapedName;
	}
	getName() {
		return this.name;
	}
	getDeclarations() {
		return this.declarations;
	}
	getDocumentationComment(e$4) {
		if (!this.documentationComment) if (this.documentationComment = bt$2, !this.declarations && Bd(this) && this.links.target && Bd(this.links.target) && this.links.target.links.tupleLabelDeclaration) {
			let t$13 = this.links.target.links.tupleLabelDeclaration;
			this.documentationComment = o_([t$13], e$4);
		} else this.documentationComment = o_(this.declarations, e$4);
		return this.documentationComment;
	}
	getContextualDocumentationComment(e$4, t$13) {
		if (e$4) {
			if (il(e$4) && (this.contextualGetAccessorDocumentationComment || (this.contextualGetAccessorDocumentationComment = bt$2, this.contextualGetAccessorDocumentationComment = o_(Xr$2(this.declarations, il), t$13)), r_(this.contextualGetAccessorDocumentationComment))) return this.contextualGetAccessorDocumentationComment;
			if (rl(e$4) && (this.contextualSetAccessorDocumentationComment || (this.contextualSetAccessorDocumentationComment = bt$2, this.contextualSetAccessorDocumentationComment = o_(Xr$2(this.declarations, rl), t$13)), r_(this.contextualSetAccessorDocumentationComment))) return this.contextualSetAccessorDocumentationComment;
		}
		return this.getDocumentationComment(t$13);
	}
	getJsDocTags(e$4) {
		return this.tags === void 0 && (this.tags = bt$2, this.tags = fl(this.declarations, e$4)), this.tags;
	}
	getContextualJsDocTags(e$4, t$13) {
		if (e$4) {
			if (il(e$4) && (this.contextualGetAccessorTags || (this.contextualGetAccessorTags = bt$2, this.contextualGetAccessorTags = fl(Xr$2(this.declarations, il), t$13)), r_(this.contextualGetAccessorTags))) return this.contextualGetAccessorTags;
			if (rl(e$4) && (this.contextualSetAccessorTags || (this.contextualSetAccessorTags = bt$2, this.contextualSetAccessorTags = fl(Xr$2(this.declarations, rl), t$13)), r_(this.contextualSetAccessorTags))) return this.contextualSetAccessorTags;
		}
		return this.getJsDocTags(t$13);
	}
}, xh = class extends Yf {
	constructor(e$4, t$13, a$13) {
		super(e$4, t$13, a$13);
	}
}, Sh = class extends Yf {
	constructor(e$4, t$13, a$13) {
		super(e$4, t$13, a$13);
	}
	get text() {
		return In$1(this);
	}
}, wh = class extends Yf {
	constructor(e$4, t$13, a$13) {
		super(e$4, t$13, a$13);
	}
	get text() {
		return In$1(this);
	}
}, uv = class {
	constructor(e$4, t$13) {
		this.flags = t$13, this.checker = e$4;
	}
	getFlags() {
		return this.flags;
	}
	getSymbol() {
		return this.symbol;
	}
	getProperties() {
		return this.checker.getPropertiesOfType(this);
	}
	getProperty(e$4) {
		return this.checker.getPropertyOfType(this, e$4);
	}
	getApparentProperties() {
		return this.checker.getAugmentedPropertiesOfType(this);
	}
	getCallSignatures() {
		return this.checker.getSignaturesOfType(this, 0);
	}
	getConstructSignatures() {
		return this.checker.getSignaturesOfType(this, 1);
	}
	getStringIndexType() {
		return this.checker.getIndexTypeOfType(this, 0);
	}
	getNumberIndexType() {
		return this.checker.getIndexTypeOfType(this, 1);
	}
	getBaseTypes() {
		return this.isClassOrInterface() ? this.checker.getBaseTypes(this) : void 0;
	}
	isNullableType() {
		return this.checker.isNullableType(this);
	}
	getNonNullableType() {
		return this.checker.getNonNullableType(this);
	}
	getNonOptionalType() {
		return this.checker.getNonOptionalType(this);
	}
	getConstraint() {
		return this.checker.getBaseConstraintOfType(this);
	}
	getDefault() {
		return this.checker.getDefaultFromTypeParameter(this);
	}
	isUnion() {
		return !!(this.flags & 1048576);
	}
	isIntersection() {
		return !!(this.flags & 2097152);
	}
	isUnionOrIntersection() {
		return !!(this.flags & 3145728);
	}
	isLiteral() {
		return !!(this.flags & 2432);
	}
	isStringLiteral() {
		return !!(this.flags & 128);
	}
	isNumberLiteral() {
		return !!(this.flags & 256);
	}
	isTypeParameter() {
		return !!(this.flags & 262144);
	}
	isClassOrInterface() {
		return !!(Ep(this) & 3);
	}
	isClass() {
		return !!(Ep(this) & 1);
	}
	isIndexType() {
		return !!(this.flags & 4194304);
	}
	get typeArguments() {
		if (Ep(this) & 4) return this.checker.getTypeArguments(this);
	}
}, pv = class {
	constructor(e$4, t$13) {
		this.flags = t$13, this.checker = e$4;
	}
	getDeclaration() {
		return this.declaration;
	}
	getTypeParameters() {
		return this.typeParameters;
	}
	getParameters() {
		return this.parameters;
	}
	getReturnType() {
		return this.checker.getReturnTypeOfSignature(this);
	}
	getTypeParameterAtPosition(e$4) {
		let t$13 = this.checker.getParameterType(this, e$4);
		if (t$13.isIndexType() && Rb(t$13.type)) {
			let a$13 = t$13.type.getConstraint();
			if (a$13) return this.checker.getIndexType(a$13);
		}
		return t$13;
	}
	getDocumentationComment() {
		return this.documentationComment || (this.documentationComment = o_(Op(this.declaration), this.checker));
	}
	getJsDocTags() {
		return this.jsDocTags || (this.jsDocTags = fl(Op(this.declaration), this.checker));
	}
};
function kh(e$4) {
	return _1(e$4).some((t$13) => t$13.tagName.text === "inheritDoc" || t$13.tagName.text === "inheritdoc");
}
function fl(e$4, t$13) {
	if (!e$4) return bt$2;
	let a$13 = ts_JsDoc_exports.getJsDocTagsFromDeclarations(e$4, t$13);
	if (t$13 && (a$13.length === 0 || e$4.some(kh))) {
		let o$9 = /* @__PURE__ */ new Set();
		for (let m$11 of e$4) {
			let v$5 = Eh(t$13, m$11, (E$3) => {
				var C$3;
				if (!o$9.has(E$3)) return o$9.add(E$3), m$11.kind === 177 || m$11.kind === 178 ? E$3.getContextualJsDocTags(m$11, t$13) : ((C$3 = E$3.declarations) == null ? void 0 : C$3.length) === 1 ? E$3.getJsDocTags(t$13) : void 0;
			});
			v$5 && (a$13 = [...v$5, ...a$13]);
		}
	}
	return a$13;
}
function o_(e$4, t$13) {
	if (!e$4) return bt$2;
	let a$13 = ts_JsDoc_exports.getJsDocCommentsFromDeclarations(e$4, t$13);
	if (t$13 && (a$13.length === 0 || e$4.some(kh))) {
		let o$9 = /* @__PURE__ */ new Set();
		for (let m$11 of e$4) {
			let v$5 = Eh(t$13, m$11, (E$3) => {
				if (!o$9.has(E$3)) return o$9.add(E$3), m$11.kind === 177 || m$11.kind === 178 ? E$3.getContextualDocumentationComment(m$11, t$13) : E$3.getDocumentationComment(t$13);
			});
			v$5 && (a$13 = a$13.length === 0 ? v$5.slice() : v$5.concat(lineBreakPart(), a$13));
		}
	}
	return a$13;
}
function Eh(e$4, t$13, a$13) {
	var o$9;
	let m$11 = ((o$9 = t$13.parent) == null ? void 0 : o$9.kind) === 176 ? t$13.parent.parent : t$13.parent;
	if (!m$11) return;
	let v$5 = tb(t$13);
	return vy(G2(m$11), (E$3) => {
		let C$3 = e$4.getTypeAtLocation(E$3), c$3 = v$5 && C$3.symbol ? e$4.getTypeOfSymbol(C$3.symbol) : C$3, W$2 = e$4.getPropertyOfType(c$3, t$13.symbol.name);
		return W$2 ? a$13(W$2) : void 0;
	});
}
var fv = class extends Gf {
	constructor(e$4, t$13, a$13) {
		super(e$4, t$13, a$13);
	}
	update(e$4, t$13) {
		return X6(this, e$4, t$13);
	}
	getLineAndCharacterOfPosition(e$4) {
		return Hm(this, e$4);
	}
	getLineStarts() {
		return Lp(this);
	}
	getPositionOfLineAndCharacter(e$4, t$13, a$13) {
		return yg(Lp(this), e$4, t$13, this.text, a$13);
	}
	getLineEndOfPosition(e$4) {
		let { line: t$13 } = this.getLineAndCharacterOfPosition(e$4), a$13 = this.getLineStarts(), o$9;
		t$13 + 1 >= a$13.length && (o$9 = this.getEnd()), o$9 || (o$9 = a$13[t$13 + 1] - 1);
		let m$11 = this.getFullText();
		return m$11[o$9] === `
` && m$11[o$9 - 1] === "\r" ? o$9 - 1 : o$9;
	}
	getNamedDeclarations() {
		return this.namedDeclarations || (this.namedDeclarations = this.computeNamedDeclarations()), this.namedDeclarations;
	}
	computeNamedDeclarations() {
		let e$4 = My();
		return this.forEachChild(m$11), e$4;
		function t$13(v$5) {
			let E$3 = o$9(v$5);
			E$3 && e$4.add(E$3, v$5);
		}
		function a$13(v$5) {
			let E$3 = e$4.get(v$5);
			return E$3 || e$4.set(v$5, E$3 = []), E$3;
		}
		function o$9(v$5) {
			let E$3 = lf(v$5);
			return E$3 && (kf(E$3) && dr$2(E$3.expression) ? E$3.expression.name.text : u1(E$3) ? getNameFromPropertyName(E$3) : void 0);
		}
		function m$11(v$5) {
			switch (v$5.kind) {
				case 262:
				case 218:
				case 174:
				case 173:
					let E$3 = v$5, C$3 = o$9(E$3);
					if (C$3) {
						let h$3 = a$13(C$3), y$7 = Fa$1(h$3);
						y$7 && E$3.parent === y$7.parent && E$3.symbol === y$7.symbol ? E$3.body && !y$7.body && (h$3[h$3.length - 1] = E$3) : h$3.push(E$3);
					}
					Ht$1(v$5, m$11);
					break;
				case 263:
				case 231:
				case 264:
				case 265:
				case 266:
				case 267:
				case 271:
				case 281:
				case 276:
				case 273:
				case 274:
				case 177:
				case 178:
				case 187:
					t$13(v$5), Ht$1(v$5, m$11);
					break;
				case 169: if (!S_(v$5, 31)) break;
				case 260:
				case 208: {
					let h$3 = v$5;
					if (a2(h$3.name)) {
						Ht$1(h$3.name, m$11);
						break;
					}
					h$3.initializer && m$11(h$3.initializer);
				}
				case 306:
				case 172:
				case 171:
					t$13(v$5);
					break;
				case 278:
					let c$3 = v$5;
					c$3.exportClause && (ih(c$3.exportClause) ? qn$1(c$3.exportClause.elements, m$11) : m$11(c$3.exportClause.name));
					break;
				case 272:
					let W$2 = v$5.importClause;
					W$2 && (W$2.name && t$13(W$2.name), W$2.namedBindings && (W$2.namedBindings.kind === 274 ? t$13(W$2.namedBindings) : qn$1(W$2.namedBindings.elements, m$11)));
					break;
				case 226: yf(v$5) !== 0 && t$13(v$5);
				default: Ht$1(v$5, m$11);
			}
		}
	}
}, dv = class {
	constructor(e$4, t$13, a$13) {
		this.fileName = e$4, this.text = t$13, this.skipTrivia = a$13 || ((o$9) => o$9);
	}
	getLineAndCharacterOfPosition(e$4) {
		return Hm(this, e$4);
	}
};
function mv() {
	return {
		getNodeConstructor: () => Gf,
		getTokenConstructor: () => xh,
		getIdentifierConstructor: () => Sh,
		getPrivateIdentifierConstructor: () => wh,
		getSourceFileConstructor: () => fv,
		getSymbolConstructor: () => lv,
		getTypeConstructor: () => uv,
		getSignatureConstructor: () => pv,
		getSourceMapSourceConstructor: () => dv
	};
}
Tb(mv());
var Ml = new Proxy({}, { get: () => !0 });
var Ch = Ml["4.8"];
function nr$2(e$4, t$13 = !1) {
	var a$13;
	if (e$4 != null) {
		if (Ch) {
			if (t$13 || Ol(e$4)) {
				let o$9 = i1(e$4);
				return o$9 ? [...o$9] : void 0;
			}
			return;
		}
		return (a$13 = e$4.modifiers) == null ? void 0 : a$13.filter((o$9) => !Cl(o$9));
	}
}
function ra(e$4, t$13 = !1) {
	var a$13;
	if (e$4 != null) {
		if (Ch) {
			if (t$13 || Wf(e$4)) {
				let o$9 = uf(e$4);
				return o$9 ? [...o$9] : void 0;
			}
			return;
		}
		return (a$13 = e$4.decorators) == null ? void 0 : a$13.filter(Cl);
	}
}
var Ph = {};
var Ll = new Proxy({}, { get: (e$4, t$13) => t$13 });
var Nh = Ll, Ih$1 = Ll;
var D$1 = Nh, Dt$1 = Ih$1;
var Oh = Ml["5.0"], le$1 = Ie$2, bv = new Set([
	le$1.AmpersandAmpersandToken,
	le$1.BarBarToken,
	le$1.QuestionQuestionToken
]), vv = new Set([
	Ie$2.AmpersandAmpersandEqualsToken,
	Ie$2.AmpersandEqualsToken,
	Ie$2.AsteriskAsteriskEqualsToken,
	Ie$2.AsteriskEqualsToken,
	Ie$2.BarBarEqualsToken,
	Ie$2.BarEqualsToken,
	Ie$2.CaretEqualsToken,
	Ie$2.EqualsToken,
	Ie$2.GreaterThanGreaterThanEqualsToken,
	Ie$2.GreaterThanGreaterThanGreaterThanEqualsToken,
	Ie$2.LessThanLessThanEqualsToken,
	Ie$2.MinusEqualsToken,
	Ie$2.PercentEqualsToken,
	Ie$2.PlusEqualsToken,
	Ie$2.QuestionQuestionEqualsToken,
	Ie$2.SlashEqualsToken
]), Tv = new Set([
	le$1.AmpersandAmpersandToken,
	le$1.AmpersandToken,
	le$1.AsteriskAsteriskToken,
	le$1.AsteriskToken,
	le$1.BarBarToken,
	le$1.BarToken,
	le$1.CaretToken,
	le$1.EqualsEqualsEqualsToken,
	le$1.EqualsEqualsToken,
	le$1.ExclamationEqualsEqualsToken,
	le$1.ExclamationEqualsToken,
	le$1.GreaterThanEqualsToken,
	le$1.GreaterThanGreaterThanGreaterThanToken,
	le$1.GreaterThanGreaterThanToken,
	le$1.GreaterThanToken,
	le$1.InKeyword,
	le$1.InstanceOfKeyword,
	le$1.LessThanEqualsToken,
	le$1.LessThanLessThanToken,
	le$1.LessThanToken,
	le$1.MinusToken,
	le$1.PercentToken,
	le$1.PlusToken,
	le$1.SlashToken
]);
function xv(e$4) {
	return vv.has(e$4.kind);
}
function Sv(e$4) {
	return bv.has(e$4.kind);
}
function wv(e$4) {
	return Tv.has(e$4.kind);
}
function Zr$1(e$4) {
	return it$2(e$4);
}
function Mh(e$4) {
	return e$4.kind !== le$1.SemicolonClassElement;
}
function He$2(e$4, t$13) {
	let a$13 = nr$2(t$13);
	return (a$13 == null ? void 0 : a$13.some((o$9) => o$9.kind === e$4)) === !0;
}
function Lh(e$4) {
	let t$13 = nr$2(e$4);
	return t$13 == null ? null : t$13[t$13.length - 1] ?? null;
}
function Jh(e$4) {
	return e$4.kind === le$1.CommaToken;
}
function kv(e$4) {
	return e$4.kind === le$1.SingleLineCommentTrivia || e$4.kind === le$1.MultiLineCommentTrivia;
}
function Ev(e$4) {
	return e$4.kind === le$1.JSDocComment;
}
function jh(e$4) {
	if (xv(e$4)) return {
		type: D$1.AssignmentExpression,
		operator: Zr$1(e$4.kind)
	};
	if (Sv(e$4)) return {
		type: D$1.LogicalExpression,
		operator: Zr$1(e$4.kind)
	};
	if (wv(e$4)) return {
		type: D$1.BinaryExpression,
		operator: Zr$1(e$4.kind)
	};
	throw new Error(`Unexpected binary operator ${it$2(e$4.kind)}`);
}
function k_(e$4, t$13) {
	let a$13 = t$13.getLineAndCharacterOfPosition(e$4);
	return {
		column: a$13.character,
		line: a$13.line + 1
	};
}
function ei$2(e$4, t$13) {
	let [a$13, o$9] = e$4.map((m$11) => k_(m$11, t$13));
	return {
		end: o$9,
		start: a$13
	};
}
function Rh(e$4) {
	if (e$4.kind === Ie$2.Block) switch (e$4.parent.kind) {
		case Ie$2.Constructor:
		case Ie$2.GetAccessor:
		case Ie$2.SetAccessor:
		case Ie$2.ArrowFunction:
		case Ie$2.FunctionExpression:
		case Ie$2.FunctionDeclaration:
		case Ie$2.MethodDeclaration: return !0;
		default: return !1;
	}
	return !0;
}
function ia(e$4, t$13) {
	return [e$4.getStart(t$13), e$4.getEnd()];
}
function Av(e$4) {
	return e$4.kind >= le$1.FirstToken && e$4.kind <= le$1.LastToken;
}
function Uh(e$4) {
	return e$4.kind >= le$1.JsxElement && e$4.kind <= le$1.JsxAttribute;
}
function Jl(e$4) {
	return e$4.flags & bn$2.Let ? "let" : (e$4.flags & bn$2.AwaitUsing) === bn$2.AwaitUsing ? "await using" : e$4.flags & bn$2.Const ? "const" : e$4.flags & bn$2.Using ? "using" : "var";
}
function ki$1(e$4) {
	let t$13 = nr$2(e$4);
	if (t$13 != null) for (let a$13 of t$13) switch (a$13.kind) {
		case le$1.PublicKeyword: return "public";
		case le$1.ProtectedKeyword: return "protected";
		case le$1.PrivateKeyword: return "private";
		default: break;
	}
}
function mr$2(e$4, t$13, a$13) {
	return o$9(t$13);
	function o$9(m$11) {
		return c1(m$11) && m$11.pos === e$4.end ? m$11 : Ov(m$11.getChildren(a$13), (v$5) => (v$5.pos <= e$4.pos && v$5.end > e$4.end || v$5.pos === e$4.end) && Iv(v$5, a$13) ? o$9(v$5) : void 0);
	}
}
function Cv(e$4, t$13) {
	let a$13 = e$4;
	for (; a$13;) {
		if (t$13(a$13)) return a$13;
		a$13 = a$13.parent;
	}
}
function Dv(e$4) {
	return !!Cv(e$4, Uh);
}
function Qf(e$4) {
	return Er$2(!1, e$4, /&(?:#\d+|#x[\da-fA-F]+|[0-9a-zA-Z]+);/g, (t$13) => {
		let a$13 = t$13.slice(1, -1);
		if (a$13[0] === "#") {
			let o$9 = a$13[1] === "x" ? parseInt(a$13.slice(2), 16) : parseInt(a$13.slice(1), 10);
			return o$9 > 1114111 ? t$13 : String.fromCodePoint(o$9);
		}
		return Ph[a$13] || t$13;
	});
}
function aa(e$4) {
	return e$4.kind === le$1.ComputedPropertyName;
}
function Kf(e$4) {
	return !!e$4.questionToken;
}
function Zf(e$4) {
	return e$4.type === D$1.ChainExpression;
}
function Bh(e$4, t$13) {
	return Zf(t$13) && e$4.expression.kind !== Ie$2.ParenthesizedExpression;
}
function Pv(e$4) {
	if (e$4.kind === le$1.NullKeyword) return Dt$1.Null;
	let t$13;
	if (Oh && e$4.kind === le$1.Identifier ? t$13 = kl(e$4) : "originalKeywordKind" in e$4 && (t$13 = e$4.originalKeywordKind), t$13) return t$13 === le$1.NullKeyword ? Dt$1.Null : t$13 >= le$1.FirstFutureReservedWord && t$13 <= le$1.LastKeyword ? Dt$1.Identifier : Dt$1.Keyword;
	if (e$4.kind >= le$1.FirstKeyword && e$4.kind <= le$1.LastFutureReservedWord) return e$4.kind === le$1.FalseKeyword || e$4.kind === le$1.TrueKeyword ? Dt$1.Boolean : Dt$1.Keyword;
	if (e$4.kind >= le$1.FirstPunctuation && e$4.kind <= le$1.LastPunctuation) return Dt$1.Punctuator;
	if (e$4.kind >= le$1.NoSubstitutionTemplateLiteral && e$4.kind <= le$1.TemplateTail) return Dt$1.Template;
	switch (e$4.kind) {
		case le$1.NumericLiteral:
		case le$1.BigIntLiteral: return Dt$1.Numeric;
		case le$1.PrivateIdentifier: return Dt$1.PrivateIdentifier;
		case le$1.JsxText: return Dt$1.JSXText;
		case le$1.StringLiteral: return e$4.parent.kind === le$1.JsxAttribute || e$4.parent.kind === le$1.JsxElement ? Dt$1.JSXText : Dt$1.String;
		case le$1.RegularExpressionLiteral: return Dt$1.RegularExpression;
		case le$1.Identifier:
		case le$1.ConstructorKeyword:
		case le$1.GetKeyword:
		case le$1.SetKeyword:
		default:
	}
	if (e$4.kind === le$1.Identifier) {
		if (Uh(e$4.parent)) return Dt$1.JSXIdentifier;
		if (e$4.parent.kind === le$1.PropertyAccessExpression && Dv(e$4)) return Dt$1.JSXIdentifier;
	}
	return Dt$1.Identifier;
}
function Nv(e$4, t$13) {
	let a$13 = e$4.kind === le$1.JsxText ? e$4.getFullStart() : e$4.getStart(t$13), o$9 = e$4.getEnd(), m$11 = t$13.text.slice(a$13, o$9), v$5 = Pv(e$4), E$3 = [a$13, o$9], C$3 = ei$2(E$3, t$13);
	return v$5 === Dt$1.RegularExpression ? {
		type: v$5,
		loc: C$3,
		range: E$3,
		regex: {
			flags: m$11.slice(m$11.lastIndexOf("/") + 1),
			pattern: m$11.slice(1, m$11.lastIndexOf("/"))
		},
		value: m$11
	} : v$5 === Dt$1.PrivateIdentifier ? {
		type: v$5,
		loc: C$3,
		range: E$3,
		value: m$11.slice(1)
	} : {
		type: v$5,
		loc: C$3,
		range: E$3,
		value: m$11
	};
}
function qh(e$4) {
	let t$13 = [];
	function a$13(o$9) {
		kv(o$9) || Ev(o$9) || (Av(o$9) && o$9.kind !== le$1.EndOfFileToken ? t$13.push(Nv(o$9, e$4)) : o$9.getChildren(e$4).forEach(a$13));
	}
	return a$13(e$4), t$13;
}
var $f = class extends Error {
	fileName;
	location;
	constructor(t$13, a$13, o$9) {
		super(t$13), this.fileName = a$13, this.location = o$9, Object.defineProperty(this, "name", {
			configurable: !0,
			enumerable: !1,
			value: new.target.name
		});
	}
	get index() {
		return this.location.start.offset;
	}
	get lineNumber() {
		return this.location.start.line;
	}
	get column() {
		return this.location.start.column;
	}
};
function ed(e$4, t$13, a$13, o$9 = a$13) {
	let [m$11, v$5] = [a$13, o$9].map((E$3) => {
		let { character: C$3, line: c$3 } = t$13.getLineAndCharacterOfPosition(E$3);
		return {
			column: C$3,
			line: c$3 + 1,
			offset: E$3
		};
	});
	return new $f(e$4, t$13.fileName, {
		end: v$5,
		start: m$11
	});
}
function Fh(e$4) {
	var t$13;
	return !!("illegalDecorators" in e$4 && (t$13 = e$4.illegalDecorators) != null && t$13.length);
}
function Iv(e$4, t$13) {
	return e$4.kind === le$1.EndOfFileToken ? !!e$4.jsDoc : e$4.getWidth(t$13) !== 0;
}
function Ov(e$4, t$13) {
	if (e$4 !== void 0) for (let a$13 = 0; a$13 < e$4.length; a$13++) {
		let o$9 = t$13(e$4[a$13], a$13);
		if (o$9 !== void 0) return o$9;
	}
}
function Mv(e$4) {
	return (Oh ? kl(e$4) : e$4.originalKeywordKind) === le$1.ThisKeyword;
}
function zh(e$4) {
	return !!e$4 && e$4.kind === le$1.Identifier && Mv(e$4);
}
function Vh(e$4) {
	if (!zh(e$4)) return !1;
	for (; L1(e$4.parent) && e$4.parent.left === e$4;) e$4 = e$4.parent;
	return e$4.parent.kind === le$1.TypeQuery;
}
function Lv(e$4) {
	return e$4 == null ? !0 : e$4.pos === e$4.end && e$4.pos >= 0 && e$4.kind !== le$1.EndOfFileToken;
}
function td(e$4) {
	return !Lv(e$4);
}
function Wh(e$4) {
	return cf(e$4.parent, mf);
}
function Jv(e$4) {
	return He$2(le$1.AbstractKeyword, e$4);
}
function jv(e$4) {
	if (e$4.parameters.length && !Il(e$4)) {
		let t$13 = e$4.parameters[0];
		if (Rv(t$13)) return t$13;
	}
	return null;
}
function Rv(e$4) {
	return zh(e$4.name);
}
function Gh(e$4) {
	switch (e$4.kind) {
		case le$1.ClassDeclaration: return !0;
		case le$1.ClassExpression: return !0;
		case le$1.PropertyDeclaration: {
			let { parent: t$13 } = e$4;
			return !!(Ha$1(t$13) || xi$1(t$13) && !Jv(e$4));
		}
		case le$1.GetAccessor:
		case le$1.SetAccessor:
		case le$1.MethodDeclaration: {
			let { parent: t$13 } = e$4;
			return !!e$4.body && (Ha$1(t$13) || xi$1(t$13));
		}
		case le$1.Parameter: {
			let { parent: t$13 } = e$4, a$13 = t$13.parent;
			return !!t$13 && "body" in t$13 && !!t$13.body && (t$13.kind === le$1.Constructor || t$13.kind === le$1.MethodDeclaration || t$13.kind === le$1.SetAccessor) && jv(t$13) !== e$4 && !!a$13 && a$13.kind === le$1.ClassDeclaration;
		}
	}
	return !1;
}
function jl(e$4) {
	switch (e$4.kind) {
		case le$1.Identifier: return !0;
		case le$1.PropertyAccessExpression:
		case le$1.ElementAccessExpression: return !(e$4.flags & bn$2.OptionalChain);
		case le$1.ParenthesizedExpression:
		case le$1.TypeAssertionExpression:
		case le$1.AsExpression:
		case le$1.SatisfiesExpression:
		case le$1.ExpressionWithTypeArguments:
		case le$1.NonNullExpression: return jl(e$4.expression);
		default: return !1;
	}
}
function Yh(e$4) {
	let t$13 = nr$2(e$4), a$13 = e$4;
	for (; (!t$13 || t$13.length === 0) && wi$1(a$13.parent);) {
		let o$9 = nr$2(a$13.parent);
		o$9 != null && o$9.length && (t$13 = o$9), a$13 = a$13.parent;
	}
	return t$13;
}
var T$7 = Ie$2;
function ad(e$4) {
	return ed("message" in e$4 && e$4.message || e$4.messageText, e$4.file, e$4.start);
}
function Uv(e$4) {
	return dr$2(e$4) && Ze$2(e$4.name) && Hh(e$4.expression);
}
function Hh(e$4) {
	return e$4.kind === T$7.Identifier || Uv(e$4);
}
var he$2, rd, Xh, Je$2, Vt$1, Ka$1, id, Rl = class {
	constructor(t$13, a$13) {
		gp(this, he$2);
		Vi$1(this, "allowPattern", !1);
		Vi$1(this, "ast");
		Vi$1(this, "esTreeNodeToTSNodeMap", /* @__PURE__ */ new WeakMap());
		Vi$1(this, "options");
		Vi$1(this, "tsNodeToESTreeNodeMap", /* @__PURE__ */ new WeakMap());
		this.ast = t$13, this.options = { ...a$13 };
	}
	assertModuleSpecifier(t$13, a$13) {
		var o$9;
		!a$13 && t$13.moduleSpecifier == null && ge$2(this, he$2, Vt$1).call(this, t$13, "Module specifier must be a string literal."), t$13.moduleSpecifier && ((o$9 = t$13.moduleSpecifier) == null ? void 0 : o$9.kind) !== T$7.StringLiteral && ge$2(this, he$2, Vt$1).call(this, t$13.moduleSpecifier, "Module specifier must be a string literal.");
	}
	convertBindingNameWithTypeAnnotation(t$13, a$13, o$9) {
		let m$11 = this.convertPattern(t$13);
		return a$13 && (m$11.typeAnnotation = this.convertTypeAnnotation(a$13, o$9), this.fixParentLocation(m$11, m$11.typeAnnotation.range)), m$11;
	}
	convertBodyExpressions(t$13, a$13) {
		let o$9 = Rh(a$13);
		return t$13.map((m$11) => {
			let v$5 = this.convertChild(m$11);
			if (o$9) {
				if (v$5 != null && v$5.expression && Pl(m$11) && Si$1(m$11.expression)) return v$5.directive = v$5.expression.raw.slice(1, -1), v$5;
				o$9 = !1;
			}
			return v$5;
		}).filter((m$11) => m$11);
	}
	convertChainExpression(t$13, a$13) {
		let { child: o$9, isOptional: m$11 } = t$13.type === D$1.MemberExpression ? {
			child: t$13.object,
			isOptional: t$13.optional
		} : t$13.type === D$1.CallExpression ? {
			child: t$13.callee,
			isOptional: t$13.optional
		} : {
			child: t$13.expression,
			isOptional: !1
		}, v$5 = Bh(a$13, o$9);
		if (!v$5 && !m$11) return t$13;
		if (v$5 && Zf(o$9)) {
			let E$3 = o$9.expression;
			t$13.type === D$1.MemberExpression ? t$13.object = E$3 : t$13.type === D$1.CallExpression ? t$13.callee = E$3 : t$13.expression = E$3;
		}
		return this.createNode(a$13, {
			type: D$1.ChainExpression,
			expression: t$13
		});
	}
	convertChild(t$13, a$13) {
		return this.converter(t$13, a$13, !1);
	}
	convertPattern(t$13, a$13) {
		return this.converter(t$13, a$13, !0);
	}
	convertTypeAnnotation(t$13, a$13) {
		let o$9 = (a$13 == null ? void 0 : a$13.kind) === T$7.FunctionType || (a$13 == null ? void 0 : a$13.kind) === T$7.ConstructorType ? 2 : 1, v$5 = [t$13.getFullStart() - o$9, t$13.end], E$3 = ei$2(v$5, this.ast);
		return {
			type: D$1.TSTypeAnnotation,
			loc: E$3,
			range: v$5,
			typeAnnotation: this.convertChild(t$13)
		};
	}
	convertTypeArgumentsToTypeParameterInstantiation(t$13, a$13) {
		let o$9 = mr$2(t$13, this.ast, this.ast);
		return this.createNode(a$13, {
			type: D$1.TSTypeParameterInstantiation,
			range: [t$13.pos - 1, o$9.end],
			params: t$13.map((m$11) => this.convertChild(m$11))
		});
	}
	convertTSTypeParametersToTypeParametersDeclaration(t$13) {
		let a$13 = mr$2(t$13, this.ast, this.ast), o$9 = [t$13.pos - 1, a$13.end];
		return {
			type: D$1.TSTypeParameterDeclaration,
			loc: ei$2(o$9, this.ast),
			range: o$9,
			params: t$13.map((m$11) => this.convertChild(m$11))
		};
	}
	convertParameters(t$13) {
		return t$13 != null && t$13.length ? t$13.map((a$13) => {
			var m$11;
			let o$9 = this.convertChild(a$13);
			return o$9.decorators = ((m$11 = ra(a$13)) == null ? void 0 : m$11.map((v$5) => this.convertChild(v$5))) ?? [], o$9;
		}) : [];
	}
	converter(t$13, a$13, o$9) {
		if (!t$13) return null;
		ge$2(this, he$2, Xh).call(this, t$13);
		let m$11 = this.allowPattern;
		o$9 != null && (this.allowPattern = o$9);
		let v$5 = this.convertNode(t$13, a$13 ?? t$13.parent);
		return this.registerTSNodeInNodeMap(t$13, v$5), this.allowPattern = m$11, v$5;
	}
	convertImportAttributes(t$13) {
		return t$13 == null ? [] : t$13.elements.map((a$13) => this.convertChild(a$13));
	}
	convertJSXIdentifier(t$13) {
		let a$13 = this.createNode(t$13, {
			type: D$1.JSXIdentifier,
			name: t$13.getText()
		});
		return this.registerTSNodeInNodeMap(t$13, a$13), a$13;
	}
	convertJSXNamespaceOrIdentifier(t$13) {
		if (t$13.kind === Ie$2.JsxNamespacedName) {
			let m$11 = this.createNode(t$13, {
				type: D$1.JSXNamespacedName,
				name: this.createNode(t$13.name, {
					type: D$1.JSXIdentifier,
					name: t$13.name.text
				}),
				namespace: this.createNode(t$13.namespace, {
					type: D$1.JSXIdentifier,
					name: t$13.namespace.text
				})
			});
			return this.registerTSNodeInNodeMap(t$13, m$11), m$11;
		}
		let a$13 = t$13.getText(), o$9 = a$13.indexOf(":");
		if (o$9 > 0) {
			let m$11 = ia(t$13, this.ast), v$5 = this.createNode(t$13, {
				type: D$1.JSXNamespacedName,
				range: m$11,
				name: this.createNode(t$13, {
					type: D$1.JSXIdentifier,
					range: [m$11[0] + o$9 + 1, m$11[1]],
					name: a$13.slice(o$9 + 1)
				}),
				namespace: this.createNode(t$13, {
					type: D$1.JSXIdentifier,
					range: [m$11[0], m$11[0] + o$9],
					name: a$13.slice(0, o$9)
				})
			});
			return this.registerTSNodeInNodeMap(t$13, v$5), v$5;
		}
		return this.convertJSXIdentifier(t$13);
	}
	convertJSXTagName(t$13, a$13) {
		let o$9;
		switch (t$13.kind) {
			case T$7.PropertyAccessExpression:
				t$13.name.kind === T$7.PrivateIdentifier && ge$2(this, he$2, Je$2).call(this, t$13.name, "Non-private identifier expected."), o$9 = this.createNode(t$13, {
					type: D$1.JSXMemberExpression,
					object: this.convertJSXTagName(t$13.expression, a$13),
					property: this.convertJSXIdentifier(t$13.name)
				});
				break;
			case T$7.ThisKeyword:
			case T$7.Identifier:
			default: return this.convertJSXNamespaceOrIdentifier(t$13);
		}
		return this.registerTSNodeInNodeMap(t$13, o$9), o$9;
	}
	convertMethodSignature(t$13) {
		return this.createNode(t$13, {
			type: D$1.TSMethodSignature,
			accessibility: ki$1(t$13),
			computed: aa(t$13.name),
			key: this.convertChild(t$13.name),
			kind: (() => {
				switch (t$13.kind) {
					case T$7.GetAccessor: return "get";
					case T$7.SetAccessor: return "set";
					case T$7.MethodSignature: return "method";
				}
			})(),
			optional: Kf(t$13),
			params: this.convertParameters(t$13.parameters),
			readonly: He$2(T$7.ReadonlyKeyword, t$13),
			returnType: t$13.type && this.convertTypeAnnotation(t$13.type, t$13),
			static: He$2(T$7.StaticKeyword, t$13),
			typeParameters: t$13.typeParameters && this.convertTSTypeParametersToTypeParametersDeclaration(t$13.typeParameters)
		});
	}
	fixParentLocation(t$13, a$13) {
		a$13[0] < t$13.range[0] && (t$13.range[0] = a$13[0], t$13.loc.start = k_(t$13.range[0], this.ast)), a$13[1] > t$13.range[1] && (t$13.range[1] = a$13[1], t$13.loc.end = k_(t$13.range[1], this.ast));
	}
	convertNode(t$13, a$13) {
		var o$9, m$11, v$5, E$3, C$3, c$3, W$2, h$3;
		switch (t$13.kind) {
			case T$7.SourceFile: return this.createNode(t$13, {
				type: D$1.Program,
				range: [t$13.getStart(this.ast), t$13.endOfFileToken.end],
				body: this.convertBodyExpressions(t$13.statements, t$13),
				comments: void 0,
				sourceType: t$13.externalModuleIndicator ? "module" : "script",
				tokens: void 0
			});
			case T$7.Block: return this.createNode(t$13, {
				type: D$1.BlockStatement,
				body: this.convertBodyExpressions(t$13.statements, t$13)
			});
			case T$7.Identifier: return Vh(t$13) ? this.createNode(t$13, { type: D$1.ThisExpression }) : this.createNode(t$13, {
				type: D$1.Identifier,
				decorators: [],
				name: t$13.text,
				optional: !1,
				typeAnnotation: void 0
			});
			case T$7.PrivateIdentifier: return this.createNode(t$13, {
				type: D$1.PrivateIdentifier,
				name: t$13.text.slice(1)
			});
			case T$7.WithStatement: return this.createNode(t$13, {
				type: D$1.WithStatement,
				body: this.convertChild(t$13.statement),
				object: this.convertChild(t$13.expression)
			});
			case T$7.ReturnStatement: return this.createNode(t$13, {
				type: D$1.ReturnStatement,
				argument: this.convertChild(t$13.expression)
			});
			case T$7.LabeledStatement: return this.createNode(t$13, {
				type: D$1.LabeledStatement,
				body: this.convertChild(t$13.statement),
				label: this.convertChild(t$13.label)
			});
			case T$7.ContinueStatement: return this.createNode(t$13, {
				type: D$1.ContinueStatement,
				label: this.convertChild(t$13.label)
			});
			case T$7.BreakStatement: return this.createNode(t$13, {
				type: D$1.BreakStatement,
				label: this.convertChild(t$13.label)
			});
			case T$7.IfStatement: return this.createNode(t$13, {
				type: D$1.IfStatement,
				alternate: this.convertChild(t$13.elseStatement),
				consequent: this.convertChild(t$13.thenStatement),
				test: this.convertChild(t$13.expression)
			});
			case T$7.SwitchStatement: return t$13.caseBlock.clauses.filter((y$7) => y$7.kind === T$7.DefaultClause).length > 1 && ge$2(this, he$2, Je$2).call(this, t$13, "A 'default' clause cannot appear more than once in a 'switch' statement."), this.createNode(t$13, {
				type: D$1.SwitchStatement,
				cases: t$13.caseBlock.clauses.map((y$7) => this.convertChild(y$7)),
				discriminant: this.convertChild(t$13.expression)
			});
			case T$7.CaseClause:
			case T$7.DefaultClause: return this.createNode(t$13, {
				type: D$1.SwitchCase,
				consequent: t$13.statements.map((y$7) => this.convertChild(y$7)),
				test: t$13.kind === T$7.CaseClause ? this.convertChild(t$13.expression) : null
			});
			case T$7.ThrowStatement: return t$13.expression.end === t$13.expression.pos && ge$2(this, he$2, Vt$1).call(this, t$13, "A throw statement must throw an expression."), this.createNode(t$13, {
				type: D$1.ThrowStatement,
				argument: this.convertChild(t$13.expression)
			});
			case T$7.TryStatement: return this.createNode(t$13, {
				type: D$1.TryStatement,
				block: this.convertChild(t$13.tryBlock),
				finalizer: this.convertChild(t$13.finallyBlock),
				handler: this.convertChild(t$13.catchClause)
			});
			case T$7.CatchClause: return (o$9 = t$13.variableDeclaration) != null && o$9.initializer && ge$2(this, he$2, Je$2).call(this, t$13.variableDeclaration.initializer, "Catch clause variable cannot have an initializer."), this.createNode(t$13, {
				type: D$1.CatchClause,
				body: this.convertChild(t$13.block),
				param: t$13.variableDeclaration ? this.convertBindingNameWithTypeAnnotation(t$13.variableDeclaration.name, t$13.variableDeclaration.type) : null
			});
			case T$7.WhileStatement: return this.createNode(t$13, {
				type: D$1.WhileStatement,
				body: this.convertChild(t$13.statement),
				test: this.convertChild(t$13.expression)
			});
			case T$7.DoStatement: return this.createNode(t$13, {
				type: D$1.DoWhileStatement,
				body: this.convertChild(t$13.statement),
				test: this.convertChild(t$13.expression)
			});
			case T$7.ForStatement: return this.createNode(t$13, {
				type: D$1.ForStatement,
				body: this.convertChild(t$13.statement),
				init: this.convertChild(t$13.initializer),
				test: this.convertChild(t$13.condition),
				update: this.convertChild(t$13.incrementor)
			});
			case T$7.ForInStatement: return ge$2(this, he$2, rd).call(this, t$13.initializer, t$13.kind), this.createNode(t$13, {
				type: D$1.ForInStatement,
				body: this.convertChild(t$13.statement),
				left: this.convertPattern(t$13.initializer),
				right: this.convertChild(t$13.expression)
			});
			case T$7.ForOfStatement: return ge$2(this, he$2, rd).call(this, t$13.initializer, t$13.kind), this.createNode(t$13, {
				type: D$1.ForOfStatement,
				await: !!(t$13.awaitModifier && t$13.awaitModifier.kind === T$7.AwaitKeyword),
				body: this.convertChild(t$13.statement),
				left: this.convertPattern(t$13.initializer),
				right: this.convertChild(t$13.expression)
			});
			case T$7.FunctionDeclaration: {
				let y$7 = He$2(T$7.DeclareKeyword, t$13), g$2 = He$2(T$7.AsyncKeyword, t$13), x$3 = !!t$13.asteriskToken;
				y$7 ? t$13.body ? ge$2(this, he$2, Je$2).call(this, t$13, "An implementation cannot be declared in ambient contexts.") : g$2 ? ge$2(this, he$2, Je$2).call(this, t$13, "'async' modifier cannot be used in an ambient context.") : x$3 && ge$2(this, he$2, Je$2).call(this, t$13, "Generators are not allowed in an ambient context.") : !t$13.body && x$3 && ge$2(this, he$2, Je$2).call(this, t$13, "A function signature cannot be declared as a generator.");
				let N$5 = this.createNode(t$13, {
					type: t$13.body ? D$1.FunctionDeclaration : D$1.TSDeclareFunction,
					async: g$2,
					body: this.convertChild(t$13.body) || void 0,
					declare: y$7,
					expression: !1,
					generator: x$3,
					id: this.convertChild(t$13.name),
					params: this.convertParameters(t$13.parameters),
					returnType: t$13.type && this.convertTypeAnnotation(t$13.type, t$13),
					typeParameters: t$13.typeParameters && this.convertTSTypeParametersToTypeParametersDeclaration(t$13.typeParameters)
				});
				return this.fixExports(t$13, N$5);
			}
			case T$7.VariableDeclaration: {
				let y$7 = !!t$13.exclamationToken, g$2 = this.convertChild(t$13.initializer), x$3 = this.convertBindingNameWithTypeAnnotation(t$13.name, t$13.type, t$13);
				return y$7 && (g$2 ? ge$2(this, he$2, Je$2).call(this, t$13, "Declarations with initializers cannot also have definite assignment assertions.") : (x$3.type !== D$1.Identifier || !x$3.typeAnnotation) && ge$2(this, he$2, Je$2).call(this, t$13, "Declarations with definite assignment assertions must also have type annotations.")), this.createNode(t$13, {
					type: D$1.VariableDeclarator,
					definite: y$7,
					id: x$3,
					init: g$2
				});
			}
			case T$7.VariableStatement: {
				let y$7 = this.createNode(t$13, {
					type: D$1.VariableDeclaration,
					declarations: t$13.declarationList.declarations.map((g$2) => this.convertChild(g$2)),
					declare: He$2(T$7.DeclareKeyword, t$13),
					kind: Jl(t$13.declarationList)
				});
				return y$7.declarations.length || ge$2(this, he$2, Vt$1).call(this, t$13, "A variable declaration list must have at least one variable declarator."), (y$7.kind === "using" || y$7.kind === "await using") && t$13.declarationList.declarations.forEach((g$2, x$3) => {
					y$7.declarations[x$3].init ?? ge$2(this, he$2, Je$2).call(this, g$2, `'${y$7.kind}' declarations must be initialized.`), y$7.declarations[x$3].id.type !== D$1.Identifier && ge$2(this, he$2, Je$2).call(this, g$2.name, `'${y$7.kind}' declarations may not have binding patterns.`);
				}), (y$7.declare || [
					"await using",
					"const",
					"using"
				].includes(y$7.kind)) && t$13.declarationList.declarations.forEach((g$2, x$3) => {
					y$7.declarations[x$3].definite && ge$2(this, he$2, Je$2).call(this, g$2, "A definite assignment assertion '!' is not permitted in this context.");
				}), y$7.declare && t$13.declarationList.declarations.forEach((g$2, x$3) => {
					y$7.declarations[x$3].init && (["let", "var"].includes(y$7.kind) || y$7.declarations[x$3].id.typeAnnotation) && ge$2(this, he$2, Je$2).call(this, g$2, "Initializers are not permitted in ambient contexts.");
				}), this.fixExports(t$13, y$7);
			}
			case T$7.VariableDeclarationList: {
				let y$7 = this.createNode(t$13, {
					type: D$1.VariableDeclaration,
					declarations: t$13.declarations.map((g$2) => this.convertChild(g$2)),
					declare: !1,
					kind: Jl(t$13)
				});
				return (y$7.kind === "using" || y$7.kind === "await using") && t$13.declarations.forEach((g$2, x$3) => {
					y$7.declarations[x$3].init != null && ge$2(this, he$2, Je$2).call(this, g$2, `'${y$7.kind}' declarations may not be initialized in for statement.`), y$7.declarations[x$3].id.type !== D$1.Identifier && ge$2(this, he$2, Je$2).call(this, g$2.name, `'${y$7.kind}' declarations may not have binding patterns.`);
				}), y$7;
			}
			case T$7.ExpressionStatement: return this.createNode(t$13, {
				type: D$1.ExpressionStatement,
				directive: void 0,
				expression: this.convertChild(t$13.expression)
			});
			case T$7.ThisKeyword: return this.createNode(t$13, { type: D$1.ThisExpression });
			case T$7.ArrayLiteralExpression: return this.allowPattern ? this.createNode(t$13, {
				type: D$1.ArrayPattern,
				decorators: [],
				elements: t$13.elements.map((y$7) => this.convertPattern(y$7)),
				optional: !1,
				typeAnnotation: void 0
			}) : this.createNode(t$13, {
				type: D$1.ArrayExpression,
				elements: t$13.elements.map((y$7) => this.convertChild(y$7))
			});
			case T$7.ObjectLiteralExpression: {
				if (this.allowPattern) return this.createNode(t$13, {
					type: D$1.ObjectPattern,
					decorators: [],
					optional: !1,
					properties: t$13.properties.map((g$2) => this.convertPattern(g$2)),
					typeAnnotation: void 0
				});
				let y$7 = [];
				for (let g$2 of t$13.properties) (g$2.kind === T$7.GetAccessor || g$2.kind === T$7.SetAccessor || g$2.kind === T$7.MethodDeclaration) && !g$2.body && ge$2(this, he$2, Vt$1).call(this, g$2.end - 1, "'{' expected."), y$7.push(this.convertChild(g$2));
				return this.createNode(t$13, {
					type: D$1.ObjectExpression,
					properties: y$7
				});
			}
			case T$7.PropertyAssignment: {
				let { exclamationToken: y$7, questionToken: g$2 } = t$13;
				return g$2 && ge$2(this, he$2, Je$2).call(this, g$2, "A property assignment cannot have a question token."), y$7 && ge$2(this, he$2, Je$2).call(this, y$7, "A property assignment cannot have an exclamation token."), this.createNode(t$13, {
					type: D$1.Property,
					computed: aa(t$13.name),
					key: this.convertChild(t$13.name),
					kind: "init",
					method: !1,
					optional: !1,
					shorthand: !1,
					value: this.converter(t$13.initializer, t$13, this.allowPattern)
				});
			}
			case T$7.ShorthandPropertyAssignment: {
				let { exclamationToken: y$7, modifiers: g$2, questionToken: x$3 } = t$13;
				return g$2 && ge$2(this, he$2, Je$2).call(this, g$2[0], "A shorthand property assignment cannot have modifiers."), x$3 && ge$2(this, he$2, Je$2).call(this, x$3, "A shorthand property assignment cannot have a question token."), y$7 && ge$2(this, he$2, Je$2).call(this, y$7, "A shorthand property assignment cannot have an exclamation token."), t$13.objectAssignmentInitializer ? this.createNode(t$13, {
					type: D$1.Property,
					computed: !1,
					key: this.convertChild(t$13.name),
					kind: "init",
					method: !1,
					optional: !1,
					shorthand: !0,
					value: this.createNode(t$13, {
						type: D$1.AssignmentPattern,
						decorators: [],
						left: this.convertPattern(t$13.name),
						optional: !1,
						right: this.convertChild(t$13.objectAssignmentInitializer),
						typeAnnotation: void 0
					})
				}) : this.createNode(t$13, {
					type: D$1.Property,
					computed: !1,
					key: this.convertChild(t$13.name),
					kind: "init",
					method: !1,
					optional: !1,
					shorthand: !0,
					value: this.convertChild(t$13.name)
				});
			}
			case T$7.ComputedPropertyName: return this.convertChild(t$13.expression);
			case T$7.PropertyDeclaration: {
				let y$7 = He$2(T$7.AbstractKeyword, t$13);
				y$7 && t$13.initializer && ge$2(this, he$2, Je$2).call(this, t$13.initializer, "Abstract property cannot have an initializer.");
				let g$2 = He$2(T$7.AccessorKeyword, t$13), x$3 = g$2 ? y$7 ? D$1.TSAbstractAccessorProperty : D$1.AccessorProperty : y$7 ? D$1.TSAbstractPropertyDefinition : D$1.PropertyDefinition, N$5 = this.convertChild(t$13.name);
				return this.createNode(t$13, {
					type: x$3,
					accessibility: ki$1(t$13),
					computed: aa(t$13.name),
					declare: He$2(T$7.DeclareKeyword, t$13),
					decorators: ((m$11 = ra(t$13)) == null ? void 0 : m$11.map((te$5) => this.convertChild(te$5))) ?? [],
					definite: !!t$13.exclamationToken,
					key: N$5,
					optional: (N$5.type === D$1.Literal || t$13.name.kind === T$7.Identifier || t$13.name.kind === T$7.ComputedPropertyName || t$13.name.kind === T$7.PrivateIdentifier) && !!t$13.questionToken,
					override: He$2(T$7.OverrideKeyword, t$13),
					readonly: He$2(T$7.ReadonlyKeyword, t$13),
					static: He$2(T$7.StaticKeyword, t$13),
					typeAnnotation: t$13.type && this.convertTypeAnnotation(t$13.type, t$13),
					value: y$7 ? null : this.convertChild(t$13.initializer)
				});
			}
			case T$7.GetAccessor:
			case T$7.SetAccessor: if (t$13.parent.kind === T$7.InterfaceDeclaration || t$13.parent.kind === T$7.TypeLiteral) return this.convertMethodSignature(t$13);
			case T$7.MethodDeclaration: {
				let y$7 = this.createNode(t$13, {
					type: t$13.body ? D$1.FunctionExpression : D$1.TSEmptyBodyFunctionExpression,
					range: [t$13.parameters.pos - 1, t$13.end],
					async: He$2(T$7.AsyncKeyword, t$13),
					body: this.convertChild(t$13.body),
					declare: !1,
					expression: !1,
					generator: !!t$13.asteriskToken,
					id: null,
					params: [],
					returnType: t$13.type && this.convertTypeAnnotation(t$13.type, t$13),
					typeParameters: t$13.typeParameters && this.convertTSTypeParametersToTypeParametersDeclaration(t$13.typeParameters)
				});
				y$7.typeParameters && this.fixParentLocation(y$7, y$7.typeParameters.range);
				let g$2;
				if (a$13.kind === T$7.ObjectLiteralExpression) y$7.params = t$13.parameters.map((x$3) => this.convertChild(x$3)), g$2 = this.createNode(t$13, {
					type: D$1.Property,
					computed: aa(t$13.name),
					key: this.convertChild(t$13.name),
					kind: "init",
					method: t$13.kind === T$7.MethodDeclaration,
					optional: !!t$13.questionToken,
					shorthand: !1,
					value: y$7
				});
				else {
					y$7.params = this.convertParameters(t$13.parameters);
					let x$3 = He$2(T$7.AbstractKeyword, t$13) ? D$1.TSAbstractMethodDefinition : D$1.MethodDefinition;
					g$2 = this.createNode(t$13, {
						type: x$3,
						accessibility: ki$1(t$13),
						computed: aa(t$13.name),
						decorators: ((v$5 = ra(t$13)) == null ? void 0 : v$5.map((N$5) => this.convertChild(N$5))) ?? [],
						key: this.convertChild(t$13.name),
						kind: "method",
						optional: !!t$13.questionToken,
						override: He$2(T$7.OverrideKeyword, t$13),
						static: He$2(T$7.StaticKeyword, t$13),
						value: y$7
					});
				}
				return t$13.kind === T$7.GetAccessor ? g$2.kind = "get" : t$13.kind === T$7.SetAccessor ? g$2.kind = "set" : !g$2.static && t$13.name.kind === T$7.StringLiteral && t$13.name.text === "constructor" && g$2.type !== D$1.Property && (g$2.kind = "constructor"), g$2;
			}
			case T$7.Constructor: {
				let y$7 = Lh(t$13), g$2 = (y$7 && mr$2(y$7, t$13, this.ast)) ?? t$13.getFirstToken(), x$3 = this.createNode(t$13, {
					type: t$13.body ? D$1.FunctionExpression : D$1.TSEmptyBodyFunctionExpression,
					range: [t$13.parameters.pos - 1, t$13.end],
					async: !1,
					body: this.convertChild(t$13.body),
					declare: !1,
					expression: !1,
					generator: !1,
					id: null,
					params: this.convertParameters(t$13.parameters),
					returnType: t$13.type && this.convertTypeAnnotation(t$13.type, t$13),
					typeParameters: t$13.typeParameters && this.convertTSTypeParametersToTypeParametersDeclaration(t$13.typeParameters)
				});
				x$3.typeParameters && this.fixParentLocation(x$3, x$3.typeParameters.range);
				let N$5 = g$2.kind === T$7.StringLiteral ? this.createNode(g$2, {
					type: D$1.Literal,
					raw: g$2.getText(),
					value: "constructor"
				}) : this.createNode(t$13, {
					type: D$1.Identifier,
					range: [g$2.getStart(this.ast), g$2.end],
					decorators: [],
					name: "constructor",
					optional: !1,
					typeAnnotation: void 0
				}), te$5 = He$2(T$7.StaticKeyword, t$13);
				return this.createNode(t$13, {
					type: He$2(T$7.AbstractKeyword, t$13) ? D$1.TSAbstractMethodDefinition : D$1.MethodDefinition,
					accessibility: ki$1(t$13),
					computed: !1,
					decorators: [],
					key: N$5,
					kind: te$5 ? "method" : "constructor",
					optional: !1,
					override: !1,
					static: te$5,
					value: x$3
				});
			}
			case T$7.FunctionExpression: return this.createNode(t$13, {
				type: D$1.FunctionExpression,
				async: He$2(T$7.AsyncKeyword, t$13),
				body: this.convertChild(t$13.body),
				declare: !1,
				expression: !1,
				generator: !!t$13.asteriskToken,
				id: this.convertChild(t$13.name),
				params: this.convertParameters(t$13.parameters),
				returnType: t$13.type && this.convertTypeAnnotation(t$13.type, t$13),
				typeParameters: t$13.typeParameters && this.convertTSTypeParametersToTypeParametersDeclaration(t$13.typeParameters)
			});
			case T$7.SuperKeyword: return this.createNode(t$13, { type: D$1.Super });
			case T$7.ArrayBindingPattern: return this.createNode(t$13, {
				type: D$1.ArrayPattern,
				decorators: [],
				elements: t$13.elements.map((y$7) => this.convertPattern(y$7)),
				optional: !1,
				typeAnnotation: void 0
			});
			case T$7.OmittedExpression: return null;
			case T$7.ObjectBindingPattern: return this.createNode(t$13, {
				type: D$1.ObjectPattern,
				decorators: [],
				optional: !1,
				properties: t$13.elements.map((y$7) => this.convertPattern(y$7)),
				typeAnnotation: void 0
			});
			case T$7.BindingElement: {
				if (a$13.kind === T$7.ArrayBindingPattern) {
					let g$2 = this.convertChild(t$13.name, a$13);
					return t$13.initializer ? this.createNode(t$13, {
						type: D$1.AssignmentPattern,
						decorators: [],
						left: g$2,
						optional: !1,
						right: this.convertChild(t$13.initializer),
						typeAnnotation: void 0
					}) : t$13.dotDotDotToken ? this.createNode(t$13, {
						type: D$1.RestElement,
						argument: g$2,
						decorators: [],
						optional: !1,
						typeAnnotation: void 0,
						value: void 0
					}) : g$2;
				}
				let y$7;
				return t$13.dotDotDotToken ? y$7 = this.createNode(t$13, {
					type: D$1.RestElement,
					argument: this.convertChild(t$13.propertyName ?? t$13.name),
					decorators: [],
					optional: !1,
					typeAnnotation: void 0,
					value: void 0
				}) : y$7 = this.createNode(t$13, {
					type: D$1.Property,
					computed: !!(t$13.propertyName && t$13.propertyName.kind === T$7.ComputedPropertyName),
					key: this.convertChild(t$13.propertyName ?? t$13.name),
					kind: "init",
					method: !1,
					optional: !1,
					shorthand: !t$13.propertyName,
					value: this.convertChild(t$13.name)
				}), t$13.initializer && (y$7.value = this.createNode(t$13, {
					type: D$1.AssignmentPattern,
					range: [t$13.name.getStart(this.ast), t$13.initializer.end],
					decorators: [],
					left: this.convertChild(t$13.name),
					optional: !1,
					right: this.convertChild(t$13.initializer),
					typeAnnotation: void 0
				})), y$7;
			}
			case T$7.ArrowFunction: return this.createNode(t$13, {
				type: D$1.ArrowFunctionExpression,
				async: He$2(T$7.AsyncKeyword, t$13),
				body: this.convertChild(t$13.body),
				expression: t$13.body.kind !== T$7.Block,
				generator: !1,
				id: null,
				params: this.convertParameters(t$13.parameters),
				returnType: t$13.type && this.convertTypeAnnotation(t$13.type, t$13),
				typeParameters: t$13.typeParameters && this.convertTSTypeParametersToTypeParametersDeclaration(t$13.typeParameters)
			});
			case T$7.YieldExpression: return this.createNode(t$13, {
				type: D$1.YieldExpression,
				argument: this.convertChild(t$13.expression),
				delegate: !!t$13.asteriskToken
			});
			case T$7.AwaitExpression: return this.createNode(t$13, {
				type: D$1.AwaitExpression,
				argument: this.convertChild(t$13.expression)
			});
			case T$7.NoSubstitutionTemplateLiteral: return this.createNode(t$13, {
				type: D$1.TemplateLiteral,
				expressions: [],
				quasis: [this.createNode(t$13, {
					type: D$1.TemplateElement,
					tail: !0,
					value: {
						cooked: t$13.text,
						raw: this.ast.text.slice(t$13.getStart(this.ast) + 1, t$13.end - 1)
					}
				})]
			});
			case T$7.TemplateExpression: {
				let y$7 = this.createNode(t$13, {
					type: D$1.TemplateLiteral,
					expressions: [],
					quasis: [this.convertChild(t$13.head)]
				});
				return t$13.templateSpans.forEach((g$2) => {
					y$7.expressions.push(this.convertChild(g$2.expression)), y$7.quasis.push(this.convertChild(g$2.literal));
				}), y$7;
			}
			case T$7.TaggedTemplateExpression: return this.createNode(t$13, {
				type: D$1.TaggedTemplateExpression,
				quasi: this.convertChild(t$13.template),
				tag: this.convertChild(t$13.tag),
				typeArguments: t$13.typeArguments && this.convertTypeArgumentsToTypeParameterInstantiation(t$13.typeArguments, t$13)
			});
			case T$7.TemplateHead:
			case T$7.TemplateMiddle:
			case T$7.TemplateTail: {
				let y$7 = t$13.kind === T$7.TemplateTail;
				return this.createNode(t$13, {
					type: D$1.TemplateElement,
					tail: y$7,
					value: {
						cooked: t$13.text,
						raw: this.ast.text.slice(t$13.getStart(this.ast) + 1, t$13.end - (y$7 ? 1 : 2))
					}
				});
			}
			case T$7.SpreadAssignment:
			case T$7.SpreadElement: return this.allowPattern ? this.createNode(t$13, {
				type: D$1.RestElement,
				argument: this.convertPattern(t$13.expression),
				decorators: [],
				optional: !1,
				typeAnnotation: void 0,
				value: void 0
			}) : this.createNode(t$13, {
				type: D$1.SpreadElement,
				argument: this.convertChild(t$13.expression)
			});
			case T$7.Parameter: {
				let y$7, g$2;
				return t$13.dotDotDotToken ? y$7 = g$2 = this.createNode(t$13, {
					type: D$1.RestElement,
					argument: this.convertChild(t$13.name),
					decorators: [],
					optional: !1,
					typeAnnotation: void 0,
					value: void 0
				}) : t$13.initializer ? (y$7 = this.convertChild(t$13.name), g$2 = this.createNode(t$13, {
					type: D$1.AssignmentPattern,
					range: [t$13.name.getStart(this.ast), t$13.initializer.end],
					decorators: [],
					left: y$7,
					optional: !1,
					right: this.convertChild(t$13.initializer),
					typeAnnotation: void 0
				}), nr$2(t$13) && (g$2.range[0] = y$7.range[0], g$2.loc = ei$2(g$2.range, this.ast))) : y$7 = g$2 = this.convertChild(t$13.name, a$13), t$13.type && (y$7.typeAnnotation = this.convertTypeAnnotation(t$13.type, t$13), this.fixParentLocation(y$7, y$7.typeAnnotation.range)), t$13.questionToken && (t$13.questionToken.end > y$7.range[1] && (y$7.range[1] = t$13.questionToken.end, y$7.loc.end = k_(y$7.range[1], this.ast)), y$7.optional = !0), nr$2(t$13) ? this.createNode(t$13, {
					type: D$1.TSParameterProperty,
					accessibility: ki$1(t$13),
					decorators: [],
					override: He$2(T$7.OverrideKeyword, t$13),
					parameter: g$2,
					readonly: He$2(T$7.ReadonlyKeyword, t$13),
					static: He$2(T$7.StaticKeyword, t$13)
				}) : g$2;
			}
			case T$7.ClassDeclaration: !t$13.name && (!He$2(Ie$2.ExportKeyword, t$13) || !He$2(Ie$2.DefaultKeyword, t$13)) && ge$2(this, he$2, Vt$1).call(this, t$13, "A class declaration without the 'default' modifier must have a name.");
			case T$7.ClassExpression: {
				let y$7 = t$13.heritageClauses ?? [], g$2 = t$13.kind === T$7.ClassDeclaration ? D$1.ClassDeclaration : D$1.ClassExpression, x$3, N$5;
				for (let ue$4 of y$7) {
					let { token: ye$4, types: fe$4 } = ue$4;
					fe$4.length === 0 && ge$2(this, he$2, Vt$1).call(this, ue$4, `'${it$2(ye$4)}' list cannot be empty.`), ye$4 === T$7.ExtendsKeyword ? (x$3 && ge$2(this, he$2, Vt$1).call(this, ue$4, "'extends' clause already seen."), N$5 && ge$2(this, he$2, Vt$1).call(this, ue$4, "'extends' clause must precede 'implements' clause."), fe$4.length > 1 && ge$2(this, he$2, Vt$1).call(this, fe$4[1], "Classes can only extend a single class."), x$3 ?? (x$3 = ue$4)) : ye$4 === T$7.ImplementsKeyword && (N$5 && ge$2(this, he$2, Vt$1).call(this, ue$4, "'implements' clause already seen."), N$5 ?? (N$5 = ue$4));
				}
				let te$5 = this.createNode(t$13, {
					type: g$2,
					abstract: He$2(T$7.AbstractKeyword, t$13),
					body: this.createNode(t$13, {
						type: D$1.ClassBody,
						range: [t$13.members.pos - 1, t$13.end],
						body: t$13.members.filter(Mh).map((ue$4) => this.convertChild(ue$4))
					}),
					declare: He$2(T$7.DeclareKeyword, t$13),
					decorators: ((E$3 = ra(t$13)) == null ? void 0 : E$3.map((ue$4) => this.convertChild(ue$4))) ?? [],
					id: this.convertChild(t$13.name),
					implements: (N$5 == null ? void 0 : N$5.types.map((ue$4) => this.convertChild(ue$4))) ?? [],
					superClass: x$3 != null && x$3.types[0] ? this.convertChild(x$3.types[0].expression) : null,
					superTypeArguments: void 0,
					typeParameters: t$13.typeParameters && this.convertTSTypeParametersToTypeParametersDeclaration(t$13.typeParameters)
				});
				return (C$3 = x$3 == null ? void 0 : x$3.types[0]) != null && C$3.typeArguments && (te$5.superTypeArguments = this.convertTypeArgumentsToTypeParameterInstantiation(x$3.types[0].typeArguments, x$3.types[0])), this.fixExports(t$13, te$5);
			}
			case T$7.ModuleBlock: return this.createNode(t$13, {
				type: D$1.TSModuleBlock,
				body: this.convertBodyExpressions(t$13.statements, t$13)
			});
			case T$7.ImportDeclaration: {
				this.assertModuleSpecifier(t$13, !1);
				let y$7 = this.createNode(t$13, ge$2(this, he$2, Ka$1).call(this, {
					type: D$1.ImportDeclaration,
					attributes: this.convertImportAttributes(t$13.attributes ?? t$13.assertClause),
					importKind: "value",
					source: this.convertChild(t$13.moduleSpecifier),
					specifiers: []
				}, "assertions", "attributes", !0));
				if (t$13.importClause && (t$13.importClause.isTypeOnly && (y$7.importKind = "type"), t$13.importClause.name && y$7.specifiers.push(this.convertChild(t$13.importClause)), t$13.importClause.namedBindings)) switch (t$13.importClause.namedBindings.kind) {
					case T$7.NamespaceImport:
						y$7.specifiers.push(this.convertChild(t$13.importClause.namedBindings));
						break;
					case T$7.NamedImports:
						y$7.specifiers.push(...t$13.importClause.namedBindings.elements.map((g$2) => this.convertChild(g$2)));
						break;
				}
				return y$7;
			}
			case T$7.NamespaceImport: return this.createNode(t$13, {
				type: D$1.ImportNamespaceSpecifier,
				local: this.convertChild(t$13.name)
			});
			case T$7.ImportSpecifier: return this.createNode(t$13, {
				type: D$1.ImportSpecifier,
				imported: this.convertChild(t$13.propertyName ?? t$13.name),
				importKind: t$13.isTypeOnly ? "type" : "value",
				local: this.convertChild(t$13.name)
			});
			case T$7.ImportClause: {
				let y$7 = this.convertChild(t$13.name);
				return this.createNode(t$13, {
					type: D$1.ImportDefaultSpecifier,
					range: y$7.range,
					local: y$7
				});
			}
			case T$7.ExportDeclaration: return ((c$3 = t$13.exportClause) == null ? void 0 : c$3.kind) === T$7.NamedExports ? (this.assertModuleSpecifier(t$13, !0), this.createNode(t$13, ge$2(this, he$2, Ka$1).call(this, {
				type: D$1.ExportNamedDeclaration,
				attributes: this.convertImportAttributes(t$13.attributes ?? t$13.assertClause),
				declaration: null,
				exportKind: t$13.isTypeOnly ? "type" : "value",
				source: this.convertChild(t$13.moduleSpecifier),
				specifiers: t$13.exportClause.elements.map((y$7) => this.convertChild(y$7, t$13))
			}, "assertions", "attributes", !0))) : (this.assertModuleSpecifier(t$13, !1), this.createNode(t$13, ge$2(this, he$2, Ka$1).call(this, {
				type: D$1.ExportAllDeclaration,
				attributes: this.convertImportAttributes(t$13.attributes ?? t$13.assertClause),
				exported: ((W$2 = t$13.exportClause) == null ? void 0 : W$2.kind) === T$7.NamespaceExport ? this.convertChild(t$13.exportClause.name) : null,
				exportKind: t$13.isTypeOnly ? "type" : "value",
				source: this.convertChild(t$13.moduleSpecifier)
			}, "assertions", "attributes", !0)));
			case T$7.ExportSpecifier: {
				let y$7 = t$13.propertyName ?? t$13.name;
				return y$7.kind === T$7.StringLiteral && a$13.kind === T$7.ExportDeclaration && ((h$3 = a$13.moduleSpecifier) == null ? void 0 : h$3.kind) !== T$7.StringLiteral && ge$2(this, he$2, Je$2).call(this, y$7, "A string literal cannot be used as a local exported binding without `from`."), this.createNode(t$13, {
					type: D$1.ExportSpecifier,
					exported: this.convertChild(t$13.name),
					exportKind: t$13.isTypeOnly ? "type" : "value",
					local: this.convertChild(y$7)
				});
			}
			case T$7.ExportAssignment: return t$13.isExportEquals ? this.createNode(t$13, {
				type: D$1.TSExportAssignment,
				expression: this.convertChild(t$13.expression)
			}) : this.createNode(t$13, {
				type: D$1.ExportDefaultDeclaration,
				declaration: this.convertChild(t$13.expression),
				exportKind: "value"
			});
			case T$7.PrefixUnaryExpression:
			case T$7.PostfixUnaryExpression: {
				let y$7 = Zr$1(t$13.operator);
				return y$7 === "++" || y$7 === "--" ? (jl(t$13.operand) || ge$2(this, he$2, Vt$1).call(this, t$13.operand, "Invalid left-hand side expression in unary operation"), this.createNode(t$13, {
					type: D$1.UpdateExpression,
					argument: this.convertChild(t$13.operand),
					operator: y$7,
					prefix: t$13.kind === T$7.PrefixUnaryExpression
				})) : this.createNode(t$13, {
					type: D$1.UnaryExpression,
					argument: this.convertChild(t$13.operand),
					operator: y$7,
					prefix: t$13.kind === T$7.PrefixUnaryExpression
				});
			}
			case T$7.DeleteExpression: return this.createNode(t$13, {
				type: D$1.UnaryExpression,
				argument: this.convertChild(t$13.expression),
				operator: "delete",
				prefix: !0
			});
			case T$7.VoidExpression: return this.createNode(t$13, {
				type: D$1.UnaryExpression,
				argument: this.convertChild(t$13.expression),
				operator: "void",
				prefix: !0
			});
			case T$7.TypeOfExpression: return this.createNode(t$13, {
				type: D$1.UnaryExpression,
				argument: this.convertChild(t$13.expression),
				operator: "typeof",
				prefix: !0
			});
			case T$7.TypeOperator: return this.createNode(t$13, {
				type: D$1.TSTypeOperator,
				operator: Zr$1(t$13.operator),
				typeAnnotation: this.convertChild(t$13.type)
			});
			case T$7.BinaryExpression: {
				if (Jh(t$13.operatorToken)) {
					let g$2 = this.createNode(t$13, {
						type: D$1.SequenceExpression,
						expressions: []
					}), x$3 = this.convertChild(t$13.left);
					return x$3.type === D$1.SequenceExpression && t$13.left.kind !== T$7.ParenthesizedExpression ? g$2.expressions.push(...x$3.expressions) : g$2.expressions.push(x$3), g$2.expressions.push(this.convertChild(t$13.right)), g$2;
				}
				let y$7 = jh(t$13.operatorToken);
				return this.allowPattern && y$7.type === D$1.AssignmentExpression ? this.createNode(t$13, {
					type: D$1.AssignmentPattern,
					decorators: [],
					left: this.convertPattern(t$13.left, t$13),
					optional: !1,
					right: this.convertChild(t$13.right),
					typeAnnotation: void 0
				}) : this.createNode(t$13, {
					...y$7,
					left: this.converter(t$13.left, t$13, y$7.type === D$1.AssignmentExpression),
					right: this.convertChild(t$13.right)
				});
			}
			case T$7.PropertyAccessExpression: {
				let y$7 = this.convertChild(t$13.expression), g$2 = this.convertChild(t$13.name), N$5 = this.createNode(t$13, {
					type: D$1.MemberExpression,
					computed: !1,
					object: y$7,
					optional: t$13.questionDotToken != null,
					property: g$2
				});
				return this.convertChainExpression(N$5, t$13);
			}
			case T$7.ElementAccessExpression: {
				let y$7 = this.convertChild(t$13.expression), g$2 = this.convertChild(t$13.argumentExpression), N$5 = this.createNode(t$13, {
					type: D$1.MemberExpression,
					computed: !0,
					object: y$7,
					optional: t$13.questionDotToken != null,
					property: g$2
				});
				return this.convertChainExpression(N$5, t$13);
			}
			case T$7.CallExpression: {
				if (t$13.expression.kind === T$7.ImportKeyword) return t$13.arguments.length !== 1 && t$13.arguments.length !== 2 && ge$2(this, he$2, Vt$1).call(this, t$13.arguments[2] ?? t$13, "Dynamic import requires exactly one or two arguments."), this.createNode(t$13, ge$2(this, he$2, Ka$1).call(this, {
					type: D$1.ImportExpression,
					options: t$13.arguments[1] ? this.convertChild(t$13.arguments[1]) : null,
					source: this.convertChild(t$13.arguments[0])
				}, "attributes", "options", !0));
				let y$7 = this.convertChild(t$13.expression), g$2 = t$13.arguments.map((te$5) => this.convertChild(te$5)), x$3 = t$13.typeArguments && this.convertTypeArgumentsToTypeParameterInstantiation(t$13.typeArguments, t$13), N$5 = this.createNode(t$13, {
					type: D$1.CallExpression,
					arguments: g$2,
					callee: y$7,
					optional: t$13.questionDotToken != null,
					typeArguments: x$3
				});
				return this.convertChainExpression(N$5, t$13);
			}
			case T$7.NewExpression: {
				let y$7 = t$13.typeArguments && this.convertTypeArgumentsToTypeParameterInstantiation(t$13.typeArguments, t$13);
				return this.createNode(t$13, {
					type: D$1.NewExpression,
					arguments: t$13.arguments ? t$13.arguments.map((g$2) => this.convertChild(g$2)) : [],
					callee: this.convertChild(t$13.expression),
					typeArguments: y$7
				});
			}
			case T$7.ConditionalExpression: return this.createNode(t$13, {
				type: D$1.ConditionalExpression,
				alternate: this.convertChild(t$13.whenFalse),
				consequent: this.convertChild(t$13.whenTrue),
				test: this.convertChild(t$13.condition)
			});
			case T$7.MetaProperty: return this.createNode(t$13, {
				type: D$1.MetaProperty,
				meta: this.createNode(t$13.getFirstToken(), {
					type: D$1.Identifier,
					decorators: [],
					name: Zr$1(t$13.keywordToken),
					optional: !1,
					typeAnnotation: void 0
				}),
				property: this.convertChild(t$13.name)
			});
			case T$7.Decorator: return this.createNode(t$13, {
				type: D$1.Decorator,
				expression: this.convertChild(t$13.expression)
			});
			case T$7.StringLiteral: return this.createNode(t$13, {
				type: D$1.Literal,
				raw: t$13.getText(),
				value: a$13.kind === T$7.JsxAttribute ? Qf(t$13.text) : t$13.text
			});
			case T$7.NumericLiteral: return this.createNode(t$13, {
				type: D$1.Literal,
				raw: t$13.getText(),
				value: Number(t$13.text)
			});
			case T$7.BigIntLiteral: {
				let y$7 = ia(t$13, this.ast), g$2 = this.ast.text.slice(y$7[0], y$7[1]), x$3 = Er$2(!1, g$2.slice(0, -1), "_", ""), N$5 = typeof BigInt < "u" ? BigInt(x$3) : null;
				return this.createNode(t$13, {
					type: D$1.Literal,
					range: y$7,
					bigint: N$5 == null ? x$3 : String(N$5),
					raw: g$2,
					value: N$5
				});
			}
			case T$7.RegularExpressionLiteral: {
				let y$7 = t$13.text.slice(1, t$13.text.lastIndexOf("/")), g$2 = t$13.text.slice(t$13.text.lastIndexOf("/") + 1), x$3 = null;
				try {
					x$3 = new RegExp(y$7, g$2);
				} catch {}
				return this.createNode(t$13, {
					type: D$1.Literal,
					raw: t$13.text,
					regex: {
						flags: g$2,
						pattern: y$7
					},
					value: x$3
				});
			}
			case T$7.TrueKeyword: return this.createNode(t$13, {
				type: D$1.Literal,
				raw: "true",
				value: !0
			});
			case T$7.FalseKeyword: return this.createNode(t$13, {
				type: D$1.Literal,
				raw: "false",
				value: !1
			});
			case T$7.NullKeyword: return this.createNode(t$13, {
				type: D$1.Literal,
				raw: "null",
				value: null
			});
			case T$7.EmptyStatement: return this.createNode(t$13, { type: D$1.EmptyStatement });
			case T$7.DebuggerStatement: return this.createNode(t$13, { type: D$1.DebuggerStatement });
			case T$7.JsxElement: return this.createNode(t$13, {
				type: D$1.JSXElement,
				children: t$13.children.map((y$7) => this.convertChild(y$7)),
				closingElement: this.convertChild(t$13.closingElement),
				openingElement: this.convertChild(t$13.openingElement)
			});
			case T$7.JsxFragment: return this.createNode(t$13, {
				type: D$1.JSXFragment,
				children: t$13.children.map((y$7) => this.convertChild(y$7)),
				closingFragment: this.convertChild(t$13.closingFragment),
				openingFragment: this.convertChild(t$13.openingFragment)
			});
			case T$7.JsxSelfClosingElement: return this.createNode(t$13, {
				type: D$1.JSXElement,
				children: [],
				closingElement: null,
				openingElement: this.createNode(t$13, {
					type: D$1.JSXOpeningElement,
					range: ia(t$13, this.ast),
					attributes: t$13.attributes.properties.map((y$7) => this.convertChild(y$7)),
					name: this.convertJSXTagName(t$13.tagName, t$13),
					selfClosing: !0,
					typeArguments: t$13.typeArguments ? this.convertTypeArgumentsToTypeParameterInstantiation(t$13.typeArguments, t$13) : void 0
				})
			});
			case T$7.JsxOpeningElement: return this.createNode(t$13, {
				type: D$1.JSXOpeningElement,
				attributes: t$13.attributes.properties.map((y$7) => this.convertChild(y$7)),
				name: this.convertJSXTagName(t$13.tagName, t$13),
				selfClosing: !1,
				typeArguments: t$13.typeArguments && this.convertTypeArgumentsToTypeParameterInstantiation(t$13.typeArguments, t$13)
			});
			case T$7.JsxClosingElement: return this.createNode(t$13, {
				type: D$1.JSXClosingElement,
				name: this.convertJSXTagName(t$13.tagName, t$13)
			});
			case T$7.JsxOpeningFragment: return this.createNode(t$13, { type: D$1.JSXOpeningFragment });
			case T$7.JsxClosingFragment: return this.createNode(t$13, { type: D$1.JSXClosingFragment });
			case T$7.JsxExpression: {
				let y$7 = t$13.expression ? this.convertChild(t$13.expression) : this.createNode(t$13, {
					type: D$1.JSXEmptyExpression,
					range: [t$13.getStart(this.ast) + 1, t$13.getEnd() - 1]
				});
				return t$13.dotDotDotToken ? this.createNode(t$13, {
					type: D$1.JSXSpreadChild,
					expression: y$7
				}) : this.createNode(t$13, {
					type: D$1.JSXExpressionContainer,
					expression: y$7
				});
			}
			case T$7.JsxAttribute: return this.createNode(t$13, {
				type: D$1.JSXAttribute,
				name: this.convertJSXNamespaceOrIdentifier(t$13.name),
				value: this.convertChild(t$13.initializer)
			});
			case T$7.JsxText: {
				let y$7 = t$13.getFullStart(), g$2 = t$13.getEnd(), x$3 = this.ast.text.slice(y$7, g$2);
				return this.createNode(t$13, {
					type: D$1.JSXText,
					range: [y$7, g$2],
					raw: x$3,
					value: Qf(x$3)
				});
			}
			case T$7.JsxSpreadAttribute: return this.createNode(t$13, {
				type: D$1.JSXSpreadAttribute,
				argument: this.convertChild(t$13.expression)
			});
			case T$7.QualifiedName: return this.createNode(t$13, {
				type: D$1.TSQualifiedName,
				left: this.convertChild(t$13.left),
				right: this.convertChild(t$13.right)
			});
			case T$7.TypeReference: return this.createNode(t$13, {
				type: D$1.TSTypeReference,
				typeArguments: t$13.typeArguments && this.convertTypeArgumentsToTypeParameterInstantiation(t$13.typeArguments, t$13),
				typeName: this.convertChild(t$13.typeName)
			});
			case T$7.TypeParameter: return this.createNode(t$13, {
				type: D$1.TSTypeParameter,
				const: He$2(T$7.ConstKeyword, t$13),
				constraint: t$13.constraint && this.convertChild(t$13.constraint),
				default: t$13.default ? this.convertChild(t$13.default) : void 0,
				in: He$2(T$7.InKeyword, t$13),
				name: this.convertChild(t$13.name),
				out: He$2(T$7.OutKeyword, t$13)
			});
			case T$7.ThisType: return this.createNode(t$13, { type: D$1.TSThisType });
			case T$7.AnyKeyword:
			case T$7.BigIntKeyword:
			case T$7.BooleanKeyword:
			case T$7.NeverKeyword:
			case T$7.NumberKeyword:
			case T$7.ObjectKeyword:
			case T$7.StringKeyword:
			case T$7.SymbolKeyword:
			case T$7.UnknownKeyword:
			case T$7.VoidKeyword:
			case T$7.UndefinedKeyword:
			case T$7.IntrinsicKeyword: return this.createNode(t$13, { type: D$1[`TS${T$7[t$13.kind]}`] });
			case T$7.NonNullExpression: {
				let y$7 = this.createNode(t$13, {
					type: D$1.TSNonNullExpression,
					expression: this.convertChild(t$13.expression)
				});
				return this.convertChainExpression(y$7, t$13);
			}
			case T$7.TypeLiteral: return this.createNode(t$13, {
				type: D$1.TSTypeLiteral,
				members: t$13.members.map((y$7) => this.convertChild(y$7))
			});
			case T$7.ArrayType: return this.createNode(t$13, {
				type: D$1.TSArrayType,
				elementType: this.convertChild(t$13.elementType)
			});
			case T$7.IndexedAccessType: return this.createNode(t$13, {
				type: D$1.TSIndexedAccessType,
				indexType: this.convertChild(t$13.indexType),
				objectType: this.convertChild(t$13.objectType)
			});
			case T$7.ConditionalType: return this.createNode(t$13, {
				type: D$1.TSConditionalType,
				checkType: this.convertChild(t$13.checkType),
				extendsType: this.convertChild(t$13.extendsType),
				falseType: this.convertChild(t$13.falseType),
				trueType: this.convertChild(t$13.trueType)
			});
			case T$7.TypeQuery: return this.createNode(t$13, {
				type: D$1.TSTypeQuery,
				exprName: this.convertChild(t$13.exprName),
				typeArguments: t$13.typeArguments && this.convertTypeArgumentsToTypeParameterInstantiation(t$13.typeArguments, t$13)
			});
			case T$7.MappedType: return t$13.members && t$13.members.length > 0 && ge$2(this, he$2, Vt$1).call(this, t$13.members[0], "A mapped type may not declare properties or methods."), this.createNode(t$13, ge$2(this, he$2, id).call(this, {
				type: D$1.TSMappedType,
				constraint: this.convertChild(t$13.typeParameter.constraint),
				key: this.convertChild(t$13.typeParameter.name),
				nameType: this.convertChild(t$13.nameType) ?? null,
				optional: t$13.questionToken ? t$13.questionToken.kind === T$7.QuestionToken || Zr$1(t$13.questionToken.kind) : !1,
				readonly: t$13.readonlyToken ? t$13.readonlyToken.kind === T$7.ReadonlyKeyword || Zr$1(t$13.readonlyToken.kind) : void 0,
				typeAnnotation: t$13.type && this.convertChild(t$13.type)
			}, "typeParameter", "'constraint' and 'key'", this.convertChild(t$13.typeParameter)));
			case T$7.ParenthesizedExpression: return this.convertChild(t$13.expression, a$13);
			case T$7.TypeAliasDeclaration: {
				let y$7 = this.createNode(t$13, {
					type: D$1.TSTypeAliasDeclaration,
					declare: He$2(T$7.DeclareKeyword, t$13),
					id: this.convertChild(t$13.name),
					typeAnnotation: this.convertChild(t$13.type),
					typeParameters: t$13.typeParameters && this.convertTSTypeParametersToTypeParametersDeclaration(t$13.typeParameters)
				});
				return this.fixExports(t$13, y$7);
			}
			case T$7.MethodSignature: return this.convertMethodSignature(t$13);
			case T$7.PropertySignature: {
				let { initializer: y$7 } = t$13;
				return y$7 && ge$2(this, he$2, Je$2).call(this, y$7, "A property signature cannot have an initializer."), this.createNode(t$13, {
					type: D$1.TSPropertySignature,
					accessibility: ki$1(t$13),
					computed: aa(t$13.name),
					key: this.convertChild(t$13.name),
					optional: Kf(t$13),
					readonly: He$2(T$7.ReadonlyKeyword, t$13),
					static: He$2(T$7.StaticKeyword, t$13),
					typeAnnotation: t$13.type && this.convertTypeAnnotation(t$13.type, t$13)
				});
			}
			case T$7.IndexSignature: return this.createNode(t$13, {
				type: D$1.TSIndexSignature,
				accessibility: ki$1(t$13),
				parameters: t$13.parameters.map((y$7) => this.convertChild(y$7)),
				readonly: He$2(T$7.ReadonlyKeyword, t$13),
				static: He$2(T$7.StaticKeyword, t$13),
				typeAnnotation: t$13.type && this.convertTypeAnnotation(t$13.type, t$13)
			});
			case T$7.ConstructorType: return this.createNode(t$13, {
				type: D$1.TSConstructorType,
				abstract: He$2(T$7.AbstractKeyword, t$13),
				params: this.convertParameters(t$13.parameters),
				returnType: t$13.type && this.convertTypeAnnotation(t$13.type, t$13),
				typeParameters: t$13.typeParameters && this.convertTSTypeParametersToTypeParametersDeclaration(t$13.typeParameters)
			});
			case T$7.FunctionType: {
				let { modifiers: y$7 } = t$13;
				y$7 && ge$2(this, he$2, Je$2).call(this, y$7[0], "A function type cannot have modifiers.");
			}
			case T$7.ConstructSignature:
			case T$7.CallSignature: {
				let y$7 = t$13.kind === T$7.ConstructSignature ? D$1.TSConstructSignatureDeclaration : t$13.kind === T$7.CallSignature ? D$1.TSCallSignatureDeclaration : D$1.TSFunctionType;
				return this.createNode(t$13, {
					type: y$7,
					params: this.convertParameters(t$13.parameters),
					returnType: t$13.type && this.convertTypeAnnotation(t$13.type, t$13),
					typeParameters: t$13.typeParameters && this.convertTSTypeParametersToTypeParametersDeclaration(t$13.typeParameters)
				});
			}
			case T$7.ExpressionWithTypeArguments: {
				let y$7 = a$13.kind, g$2 = y$7 === T$7.InterfaceDeclaration ? D$1.TSInterfaceHeritage : y$7 === T$7.HeritageClause ? D$1.TSClassImplements : D$1.TSInstantiationExpression;
				return this.createNode(t$13, {
					type: g$2,
					expression: this.convertChild(t$13.expression),
					typeArguments: t$13.typeArguments && this.convertTypeArgumentsToTypeParameterInstantiation(t$13.typeArguments, t$13)
				});
			}
			case T$7.InterfaceDeclaration: {
				let y$7 = t$13.heritageClauses ?? [], g$2 = [], x$3 = !1;
				for (let te$5 of y$7) {
					te$5.token !== T$7.ExtendsKeyword && ge$2(this, he$2, Je$2).call(this, te$5, te$5.token === T$7.ImplementsKeyword ? "Interface declaration cannot have 'implements' clause." : "Unexpected token."), x$3 && ge$2(this, he$2, Je$2).call(this, te$5, "'extends' clause already seen."), x$3 = !0;
					for (let ue$4 of te$5.types) (!Hh(ue$4.expression) || o1(ue$4.expression)) && ge$2(this, he$2, Je$2).call(this, ue$4, "Interface declaration can only extend an identifier/qualified name with optional type arguments."), g$2.push(this.convertChild(ue$4, t$13));
				}
				let N$5 = this.createNode(t$13, {
					type: D$1.TSInterfaceDeclaration,
					body: this.createNode(t$13, {
						type: D$1.TSInterfaceBody,
						range: [t$13.members.pos - 1, t$13.end],
						body: t$13.members.map((te$5) => this.convertChild(te$5))
					}),
					declare: He$2(T$7.DeclareKeyword, t$13),
					extends: g$2,
					id: this.convertChild(t$13.name),
					typeParameters: t$13.typeParameters && this.convertTSTypeParametersToTypeParametersDeclaration(t$13.typeParameters)
				});
				return this.fixExports(t$13, N$5);
			}
			case T$7.TypePredicate: {
				let y$7 = this.createNode(t$13, {
					type: D$1.TSTypePredicate,
					asserts: t$13.assertsModifier != null,
					parameterName: this.convertChild(t$13.parameterName),
					typeAnnotation: null
				});
				return t$13.type && (y$7.typeAnnotation = this.convertTypeAnnotation(t$13.type, t$13), y$7.typeAnnotation.loc = y$7.typeAnnotation.typeAnnotation.loc, y$7.typeAnnotation.range = y$7.typeAnnotation.typeAnnotation.range), y$7;
			}
			case T$7.ImportType: {
				let y$7 = ia(t$13, this.ast);
				if (t$13.isTypeOf) y$7[0] = mr$2(t$13.getFirstToken(), t$13, this.ast).getStart(this.ast);
				let g$2 = null;
				if (t$13.attributes) {
					let N$5 = this.createNode(t$13.attributes, {
						type: D$1.ObjectExpression,
						properties: t$13.attributes.elements.map((Ce$6) => this.createNode(Ce$6, {
							type: D$1.Property,
							computed: !1,
							key: this.convertChild(Ce$6.name),
							kind: "init",
							method: !1,
							optional: !1,
							shorthand: !1,
							value: this.convertChild(Ce$6.value)
						}))
					}), te$5 = mr$2(t$13.argument, t$13, this.ast), ue$4 = mr$2(te$5, t$13, this.ast), ye$4 = mr$2(t$13.attributes, t$13, this.ast), fe$4 = mr$2(ue$4, t$13, this.ast), M$2 = ia(fe$4, this.ast), ie$6 = fe$4.kind === Ie$2.AssertKeyword ? "assert" : "with";
					g$2 = this.createNode(t$13, {
						type: D$1.ObjectExpression,
						range: [ue$4.getStart(this.ast), ye$4.end],
						properties: [this.createNode(t$13, {
							type: D$1.Property,
							range: [M$2[0], t$13.attributes.end],
							computed: !1,
							key: this.createNode(t$13, {
								type: D$1.Identifier,
								range: M$2,
								decorators: [],
								name: ie$6,
								optional: !1,
								typeAnnotation: void 0
							}),
							kind: "init",
							method: !1,
							optional: !1,
							shorthand: !1,
							value: N$5
						})]
					});
				}
				let x$3 = this.createNode(t$13, {
					type: D$1.TSImportType,
					range: y$7,
					argument: this.convertChild(t$13.argument),
					options: g$2,
					qualifier: this.convertChild(t$13.qualifier),
					typeArguments: t$13.typeArguments ? this.convertTypeArgumentsToTypeParameterInstantiation(t$13.typeArguments, t$13) : null
				});
				return t$13.isTypeOf ? this.createNode(t$13, {
					type: D$1.TSTypeQuery,
					exprName: x$3,
					typeArguments: void 0
				}) : x$3;
			}
			case T$7.EnumDeclaration: {
				let y$7 = t$13.members.map((x$3) => this.convertChild(x$3)), g$2 = this.createNode(t$13, ge$2(this, he$2, id).call(this, {
					type: D$1.TSEnumDeclaration,
					body: this.createNode(t$13, {
						type: D$1.TSEnumBody,
						range: [t$13.members.pos - 1, t$13.end],
						members: y$7
					}),
					const: He$2(T$7.ConstKeyword, t$13),
					declare: He$2(T$7.DeclareKeyword, t$13),
					id: this.convertChild(t$13.name)
				}, "members", "'body.members'", t$13.members.map((x$3) => this.convertChild(x$3))));
				return this.fixExports(t$13, g$2);
			}
			case T$7.EnumMember: return this.createNode(t$13, {
				type: D$1.TSEnumMember,
				computed: t$13.name.kind === Ie$2.ComputedPropertyName,
				id: this.convertChild(t$13.name),
				initializer: t$13.initializer && this.convertChild(t$13.initializer)
			});
			case T$7.ModuleDeclaration: {
				let y$7 = He$2(T$7.DeclareKeyword, t$13), g$2 = this.createNode(t$13, {
					type: D$1.TSModuleDeclaration,
					...(() => {
						if (t$13.flags & bn$2.GlobalAugmentation) {
							let N$5 = this.convertChild(t$13.name), te$5 = this.convertChild(t$13.body);
							return (te$5 == null || te$5.type === D$1.TSModuleDeclaration) && ge$2(this, he$2, Vt$1).call(this, t$13.body ?? t$13, "Expected a valid module body"), N$5.type !== D$1.Identifier && ge$2(this, he$2, Vt$1).call(this, t$13.name, "global module augmentation must have an Identifier id"), {
								body: te$5,
								declare: !1,
								global: !1,
								id: N$5,
								kind: "global"
							};
						}
						if (Si$1(t$13.name)) {
							let N$5 = this.convertChild(t$13.body);
							return {
								kind: "module",
								...N$5 != null ? { body: N$5 } : {},
								declare: !1,
								global: !1,
								id: this.convertChild(t$13.name)
							};
						}
						t$13.body ?? ge$2(this, he$2, Vt$1).call(this, t$13, "Expected a module body"), t$13.name.kind !== Ie$2.Identifier && ge$2(this, he$2, Vt$1).call(this, t$13.name, "`namespace`s must have an Identifier id");
						let x$3 = this.createNode(t$13.name, {
							type: D$1.Identifier,
							range: [t$13.name.getStart(this.ast), t$13.name.getEnd()],
							decorators: [],
							name: t$13.name.text,
							optional: !1,
							typeAnnotation: void 0
						});
						for (; t$13.body && wi$1(t$13.body) && t$13.body.name;) {
							t$13 = t$13.body, y$7 || (y$7 = He$2(T$7.DeclareKeyword, t$13));
							let N$5 = t$13.name, te$5 = this.createNode(N$5, {
								type: D$1.Identifier,
								range: [N$5.getStart(this.ast), N$5.getEnd()],
								decorators: [],
								name: N$5.text,
								optional: !1,
								typeAnnotation: void 0
							});
							x$3 = this.createNode(N$5, {
								type: D$1.TSQualifiedName,
								range: [x$3.range[0], te$5.range[1]],
								left: x$3,
								right: te$5
							});
						}
						return {
							body: this.convertChild(t$13.body),
							declare: !1,
							global: !1,
							id: x$3,
							kind: t$13.flags & bn$2.Namespace ? "namespace" : "module"
						};
					})()
				});
				return g$2.declare = y$7, t$13.flags & bn$2.GlobalAugmentation && (g$2.global = !0), this.fixExports(t$13, g$2);
			}
			case T$7.ParenthesizedType: return this.convertChild(t$13.type);
			case T$7.UnionType: return this.createNode(t$13, {
				type: D$1.TSUnionType,
				types: t$13.types.map((y$7) => this.convertChild(y$7))
			});
			case T$7.IntersectionType: return this.createNode(t$13, {
				type: D$1.TSIntersectionType,
				types: t$13.types.map((y$7) => this.convertChild(y$7))
			});
			case T$7.AsExpression: return this.createNode(t$13, {
				type: D$1.TSAsExpression,
				expression: this.convertChild(t$13.expression),
				typeAnnotation: this.convertChild(t$13.type)
			});
			case T$7.InferType: return this.createNode(t$13, {
				type: D$1.TSInferType,
				typeParameter: this.convertChild(t$13.typeParameter)
			});
			case T$7.LiteralType: return t$13.literal.kind === T$7.NullKeyword ? this.createNode(t$13.literal, { type: D$1.TSNullKeyword }) : this.createNode(t$13, {
				type: D$1.TSLiteralType,
				literal: this.convertChild(t$13.literal)
			});
			case T$7.TypeAssertionExpression: return this.createNode(t$13, {
				type: D$1.TSTypeAssertion,
				expression: this.convertChild(t$13.expression),
				typeAnnotation: this.convertChild(t$13.type)
			});
			case T$7.ImportEqualsDeclaration: return this.fixExports(t$13, this.createNode(t$13, {
				type: D$1.TSImportEqualsDeclaration,
				id: this.convertChild(t$13.name),
				importKind: t$13.isTypeOnly ? "type" : "value",
				moduleReference: this.convertChild(t$13.moduleReference)
			}));
			case T$7.ExternalModuleReference: return t$13.expression.kind !== T$7.StringLiteral && ge$2(this, he$2, Je$2).call(this, t$13.expression, "String literal expected."), this.createNode(t$13, {
				type: D$1.TSExternalModuleReference,
				expression: this.convertChild(t$13.expression)
			});
			case T$7.NamespaceExportDeclaration: return this.createNode(t$13, {
				type: D$1.TSNamespaceExportDeclaration,
				id: this.convertChild(t$13.name)
			});
			case T$7.AbstractKeyword: return this.createNode(t$13, { type: D$1.TSAbstractKeyword });
			case T$7.TupleType: {
				let y$7 = t$13.elements.map((g$2) => this.convertChild(g$2));
				return this.createNode(t$13, {
					type: D$1.TSTupleType,
					elementTypes: y$7
				});
			}
			case T$7.NamedTupleMember: {
				let y$7 = this.createNode(t$13, {
					type: D$1.TSNamedTupleMember,
					elementType: this.convertChild(t$13.type, t$13),
					label: this.convertChild(t$13.name, t$13),
					optional: t$13.questionToken != null
				});
				return t$13.dotDotDotToken ? (y$7.range[0] = y$7.label.range[0], y$7.loc.start = y$7.label.loc.start, this.createNode(t$13, {
					type: D$1.TSRestType,
					typeAnnotation: y$7
				})) : y$7;
			}
			case T$7.OptionalType: return this.createNode(t$13, {
				type: D$1.TSOptionalType,
				typeAnnotation: this.convertChild(t$13.type)
			});
			case T$7.RestType: return this.createNode(t$13, {
				type: D$1.TSRestType,
				typeAnnotation: this.convertChild(t$13.type)
			});
			case T$7.TemplateLiteralType: {
				let y$7 = this.createNode(t$13, {
					type: D$1.TSTemplateLiteralType,
					quasis: [this.convertChild(t$13.head)],
					types: []
				});
				return t$13.templateSpans.forEach((g$2) => {
					y$7.types.push(this.convertChild(g$2.type)), y$7.quasis.push(this.convertChild(g$2.literal));
				}), y$7;
			}
			case T$7.ClassStaticBlockDeclaration: return this.createNode(t$13, {
				type: D$1.StaticBlock,
				body: this.convertBodyExpressions(t$13.body.statements, t$13)
			});
			case T$7.AssertEntry:
			case T$7.ImportAttribute: return this.createNode(t$13, {
				type: D$1.ImportAttribute,
				key: this.convertChild(t$13.name),
				value: this.convertChild(t$13.value)
			});
			case T$7.SatisfiesExpression: return this.createNode(t$13, {
				type: D$1.TSSatisfiesExpression,
				expression: this.convertChild(t$13.expression),
				typeAnnotation: this.convertChild(t$13.type)
			});
			default: return this.deeplyCopy(t$13);
		}
	}
	createNode(t$13, a$13) {
		let o$9 = a$13;
		return o$9.range ?? (o$9.range = ia(t$13, this.ast)), o$9.loc ?? (o$9.loc = ei$2(o$9.range, this.ast)), o$9 && this.options.shouldPreserveNodeMaps && this.esTreeNodeToTSNodeMap.set(o$9, t$13), o$9;
	}
	convertProgram() {
		return this.converter(this.ast);
	}
	deeplyCopy(t$13) {
		t$13.kind === Ie$2.JSDocFunctionType && ge$2(this, he$2, Je$2).call(this, t$13, "JSDoc types can only be used inside documentation comments.");
		let a$13 = `TS${T$7[t$13.kind]}`;
		if (this.options.errorOnUnknownASTType && !D$1[a$13]) throw new Error(`Unknown AST_NODE_TYPE: "${a$13}"`);
		let o$9 = this.createNode(t$13, { type: a$13 });
		"type" in t$13 && (o$9.typeAnnotation = t$13.type && "kind" in t$13.type && p1(t$13.type) ? this.convertTypeAnnotation(t$13.type, t$13) : null), "typeArguments" in t$13 && (o$9.typeArguments = t$13.typeArguments && "pos" in t$13.typeArguments ? this.convertTypeArgumentsToTypeParameterInstantiation(t$13.typeArguments, t$13) : null), "typeParameters" in t$13 && (o$9.typeParameters = t$13.typeParameters && "pos" in t$13.typeParameters ? this.convertTSTypeParametersToTypeParametersDeclaration(t$13.typeParameters) : null);
		let m$11 = ra(t$13);
		m$11 != null && m$11.length && (o$9.decorators = m$11.map((E$3) => this.convertChild(E$3)));
		let v$5 = new Set([
			"_children",
			"decorators",
			"end",
			"flags",
			"heritageClauses",
			"illegalDecorators",
			"jsDoc",
			"kind",
			"locals",
			"localSymbol",
			"modifierFlagsCache",
			"modifiers",
			"nextContainer",
			"parent",
			"pos",
			"symbol",
			"transformFlags",
			"type",
			"typeArguments",
			"typeParameters"
		]);
		return Object.entries(t$13).filter(([E$3]) => !v$5.has(E$3)).forEach(([E$3, C$3]) => {
			Array.isArray(C$3) ? o$9[E$3] = C$3.map((c$3) => this.convertChild(c$3)) : C$3 && typeof C$3 == "object" && C$3.kind ? o$9[E$3] = this.convertChild(C$3) : o$9[E$3] = C$3;
		}), o$9;
	}
	fixExports(t$13, a$13) {
		let m$11 = wi$1(t$13) && !Si$1(t$13.name) ? Yh(t$13) : nr$2(t$13);
		if ((m$11 == null ? void 0 : m$11[0].kind) === T$7.ExportKeyword) {
			this.registerTSNodeInNodeMap(t$13, a$13);
			let v$5 = m$11[0], E$3 = m$11[1], C$3 = (E$3 == null ? void 0 : E$3.kind) === T$7.DefaultKeyword, c$3 = C$3 ? mr$2(E$3, this.ast, this.ast) : mr$2(v$5, this.ast, this.ast);
			if (a$13.range[0] = c$3.getStart(this.ast), a$13.loc = ei$2(a$13.range, this.ast), C$3) return this.createNode(t$13, {
				type: D$1.ExportDefaultDeclaration,
				range: [v$5.getStart(this.ast), a$13.range[1]],
				declaration: a$13,
				exportKind: "value"
			});
			let W$2 = a$13.type === D$1.TSInterfaceDeclaration || a$13.type === D$1.TSTypeAliasDeclaration, h$3 = "declare" in a$13 && a$13.declare;
			return this.createNode(t$13, ge$2(this, he$2, Ka$1).call(this, {
				type: D$1.ExportNamedDeclaration,
				range: [v$5.getStart(this.ast), a$13.range[1]],
				attributes: [],
				declaration: a$13,
				exportKind: W$2 || h$3 ? "type" : "value",
				source: null,
				specifiers: []
			}, "assertions", "attributes", !0));
		}
		return a$13;
	}
	getASTMaps() {
		return {
			esTreeNodeToTSNodeMap: this.esTreeNodeToTSNodeMap,
			tsNodeToESTreeNodeMap: this.tsNodeToESTreeNodeMap
		};
	}
	registerTSNodeInNodeMap(t$13, a$13) {
		a$13 && this.options.shouldPreserveNodeMaps && !this.tsNodeToESTreeNodeMap.has(t$13) && this.tsNodeToESTreeNodeMap.set(t$13, a$13);
	}
};
he$2 = /* @__PURE__ */ new WeakSet(), rd = function(t$13, a$13) {
	let o$9 = a$13 === Ie$2.ForInStatement ? "for...in" : "for...of";
	if (nh(t$13)) {
		t$13.declarations.length !== 1 && ge$2(this, he$2, Je$2).call(this, t$13, `Only a single variable declaration is allowed in a '${o$9}' statement.`);
		let m$11 = t$13.declarations[0];
		m$11.initializer ? ge$2(this, he$2, Je$2).call(this, m$11, `The variable declaration of a '${o$9}' statement cannot have an initializer.`) : m$11.type && ge$2(this, he$2, Je$2).call(this, m$11, `The variable declaration of a '${o$9}' statement cannot have a type annotation.`), a$13 === Ie$2.ForInStatement && t$13.flags & bn$2.Using && ge$2(this, he$2, Je$2).call(this, t$13, "The left-hand side of a 'for...in' statement cannot be a 'using' declaration.");
	} else !jl(t$13) && t$13.kind !== Ie$2.ObjectLiteralExpression && t$13.kind !== Ie$2.ArrayLiteralExpression && ge$2(this, he$2, Je$2).call(this, t$13, `The left-hand side of a '${o$9}' statement must be a variable or a property access.`);
}, Xh = function(t$13) {
	if (!this.options.allowInvalidAST) {
		Fh(t$13) && ge$2(this, he$2, Je$2).call(this, t$13.illegalDecorators[0], "Decorators are not valid here.");
		for (let a$13 of ra(t$13, !0) ?? []) Gh(t$13) || (b_(t$13) && !td(t$13.body) ? ge$2(this, he$2, Je$2).call(this, a$13, "A decorator can only decorate a method implementation, not an overload.") : ge$2(this, he$2, Je$2).call(this, a$13, "Decorators are not valid here."));
		for (let a$13 of nr$2(t$13, !0) ?? []) {
			if (a$13.kind !== T$7.ReadonlyKeyword && ((t$13.kind === T$7.PropertySignature || t$13.kind === T$7.MethodSignature) && ge$2(this, he$2, Je$2).call(this, a$13, `'${it$2(a$13.kind)}' modifier cannot appear on a type member`), t$13.kind === T$7.IndexSignature && (a$13.kind !== T$7.StaticKeyword || !xi$1(t$13.parent)) && ge$2(this, he$2, Je$2).call(this, a$13, `'${it$2(a$13.kind)}' modifier cannot appear on an index signature`)), a$13.kind !== T$7.InKeyword && a$13.kind !== T$7.OutKeyword && a$13.kind !== T$7.ConstKeyword && t$13.kind === T$7.TypeParameter && ge$2(this, he$2, Je$2).call(this, a$13, `'${it$2(a$13.kind)}' modifier cannot appear on a type parameter`), (a$13.kind === T$7.InKeyword || a$13.kind === T$7.OutKeyword) && (t$13.kind !== T$7.TypeParameter || !(w_(t$13.parent) || xi$1(t$13.parent) || Nl(t$13.parent))) && ge$2(this, he$2, Je$2).call(this, a$13, `'${it$2(a$13.kind)}' modifier can only appear on a type parameter of a class, interface or type alias`), a$13.kind === T$7.ReadonlyKeyword && t$13.kind !== T$7.PropertyDeclaration && t$13.kind !== T$7.PropertySignature && t$13.kind !== T$7.IndexSignature && t$13.kind !== T$7.Parameter && ge$2(this, he$2, Je$2).call(this, a$13, "'readonly' modifier can only appear on a property declaration or index signature."), a$13.kind === T$7.DeclareKeyword && xi$1(t$13.parent) && !Ya(t$13) && ge$2(this, he$2, Je$2).call(this, a$13, `'${it$2(a$13.kind)}' modifier cannot appear on class elements of this kind.`), a$13.kind === T$7.DeclareKeyword && Qa$1(t$13)) {
				let o$9 = Jl(t$13.declarationList);
				(o$9 === "using" || o$9 === "await using") && ge$2(this, he$2, Je$2).call(this, a$13, `'declare' modifier cannot appear on a '${o$9}' declaration.`);
			}
			if (a$13.kind === T$7.AbstractKeyword && t$13.kind !== T$7.ClassDeclaration && t$13.kind !== T$7.ConstructorType && t$13.kind !== T$7.MethodDeclaration && t$13.kind !== T$7.PropertyDeclaration && t$13.kind !== T$7.GetAccessor && t$13.kind !== T$7.SetAccessor && ge$2(this, he$2, Je$2).call(this, a$13, `'${it$2(a$13.kind)}' modifier can only appear on a class, method, or property declaration.`), (a$13.kind === T$7.StaticKeyword || a$13.kind === T$7.PublicKeyword || a$13.kind === T$7.ProtectedKeyword || a$13.kind === T$7.PrivateKeyword) && (t$13.parent.kind === T$7.ModuleBlock || t$13.parent.kind === T$7.SourceFile) && ge$2(this, he$2, Je$2).call(this, a$13, `'${it$2(a$13.kind)}' modifier cannot appear on a module or namespace element.`), a$13.kind === T$7.AccessorKeyword && t$13.kind !== T$7.PropertyDeclaration && ge$2(this, he$2, Je$2).call(this, a$13, "'accessor' modifier can only appear on a property declaration."), a$13.kind === T$7.AsyncKeyword && t$13.kind !== T$7.MethodDeclaration && t$13.kind !== T$7.FunctionDeclaration && t$13.kind !== T$7.FunctionExpression && t$13.kind !== T$7.ArrowFunction && ge$2(this, he$2, Je$2).call(this, a$13, "'async' modifier cannot be used here."), t$13.kind === T$7.Parameter && (a$13.kind === T$7.StaticKeyword || a$13.kind === T$7.ExportKeyword || a$13.kind === T$7.DeclareKeyword || a$13.kind === T$7.AsyncKeyword) && ge$2(this, he$2, Je$2).call(this, a$13, `'${it$2(a$13.kind)}' modifier cannot appear on a parameter.`), a$13.kind === T$7.PublicKeyword || a$13.kind === T$7.ProtectedKeyword || a$13.kind === T$7.PrivateKeyword) for (let o$9 of nr$2(t$13) ?? []) o$9 !== a$13 && (o$9.kind === T$7.PublicKeyword || o$9.kind === T$7.ProtectedKeyword || o$9.kind === T$7.PrivateKeyword) && ge$2(this, he$2, Je$2).call(this, o$9, "Accessibility modifier already seen.");
			if (t$13.kind === T$7.Parameter && (a$13.kind === T$7.PublicKeyword || a$13.kind === T$7.PrivateKeyword || a$13.kind === T$7.ProtectedKeyword || a$13.kind === T$7.ReadonlyKeyword || a$13.kind === T$7.OverrideKeyword)) {
				let o$9 = Wh(t$13);
				o$9.kind === T$7.Constructor && td(o$9.body) || ge$2(this, he$2, Je$2).call(this, a$13, "A parameter property is only allowed in a constructor implementation.");
			}
		}
	}
}, Je$2 = function(t$13, a$13) {
	let o$9, m$11;
	throw typeof t$13 == "number" ? o$9 = m$11 = t$13 : (o$9 = t$13.getStart(this.ast), m$11 = t$13.getEnd()), ed(a$13, this.ast, o$9, m$11);
}, Vt$1 = function(t$13, a$13) {
	this.options.allowInvalidAST || ge$2(this, he$2, Je$2).call(this, t$13, a$13);
}, Ka$1 = function(t$13, a$13, o$9, m$11 = !1) {
	let v$5 = m$11;
	return Object.defineProperty(t$13, a$13, {
		configurable: !0,
		get: this.options.suppressDeprecatedPropertyWarnings ? () => t$13[o$9] : () => (v$5 || ((void 0)(`The '${a$13}' property is deprecated on ${t$13.type} nodes. Use '${o$9}' instead. See https://typescript-eslint.io/troubleshooting/faqs/general#the-key-property-is-deprecated-on-type-nodes-use-key-instead-warnings.`, "DeprecationWarning"), v$5 = !0), t$13[o$9]),
		set(E$3) {
			Object.defineProperty(t$13, a$13, {
				enumerable: !0,
				value: E$3,
				writable: !0
			});
		}
	}), t$13;
}, id = function(t$13, a$13, o$9, m$11) {
	let v$5 = !1;
	return Object.defineProperty(t$13, a$13, {
		configurable: !0,
		get: this.options.suppressDeprecatedPropertyWarnings ? () => m$11 : () => (v$5 || ((void 0)(`The '${a$13}' property is deprecated on ${t$13.type} nodes. Use ${o$9} instead. See https://typescript-eslint.io/troubleshooting/faqs/general#the-key-property-is-deprecated-on-type-nodes-use-key-instead-warnings.`, "DeprecationWarning"), v$5 = !0), m$11),
		set(E$3) {
			Object.defineProperty(t$13, a$13, {
				enumerable: !0,
				value: E$3,
				writable: !0
			});
		}
	}), t$13;
};
function Bv(e$4, t$13, a$13 = e$4.getSourceFile()) {
	let o$9 = [];
	for (;;) {
		if (df(e$4.kind)) t$13(e$4);
		else {
			let m$11 = e$4.getChildren(a$13);
			if (m$11.length === 1) {
				e$4 = m$11[0];
				continue;
			}
			for (let v$5 = m$11.length - 1; v$5 >= 0; --v$5) o$9.push(m$11[v$5]);
		}
		if (o$9.length === 0) break;
		e$4 = o$9.pop();
	}
}
function Qh(e$4, t$13, a$13 = e$4.getSourceFile()) {
	let o$9 = a$13.text, m$11 = a$13.languageVariant !== Sl.JSX;
	return Bv(e$4, (E$3) => {
		if (E$3.pos !== E$3.end && (E$3.kind !== Ie$2.JsxText && Km(o$9, E$3.pos === 0 ? (sf(o$9) ?? "").length : E$3.pos, v$5), m$11 || qv(E$3))) return Zm(o$9, E$3.end, v$5);
	}, a$13);
	function v$5(E$3, C$3, c$3) {
		t$13(o$9, {
			end: C$3,
			kind: c$3,
			pos: E$3
		});
	}
}
function qv(e$4) {
	switch (e$4.kind) {
		case Ie$2.CloseBraceToken: return e$4.parent.kind !== Ie$2.JsxExpression || !sd(e$4.parent.parent);
		case Ie$2.GreaterThanToken: switch (e$4.parent.kind) {
			case Ie$2.JsxClosingElement:
			case Ie$2.JsxClosingFragment: return !sd(e$4.parent.parent.parent);
			case Ie$2.JsxOpeningElement: return e$4.end !== e$4.parent.end;
			case Ie$2.JsxOpeningFragment: return !1;
			case Ie$2.JsxSelfClosingElement: return e$4.end !== e$4.parent.end || !sd(e$4.parent.parent);
		}
	}
	return !0;
}
function sd(e$4) {
	return e$4.kind === Ie$2.JsxElement || e$4.kind === Ie$2.JsxFragment;
}
var [px, fx] = Em.split(".").map((e$4) => Number.parseInt(e$4, 10));
rn$2.Intrinsic ?? rn$2.Any | rn$2.Unknown | rn$2.String | rn$2.Number | rn$2.BigInt | rn$2.Boolean | rn$2.BooleanLiteral | rn$2.ESSymbol | rn$2.Void | rn$2.Undefined | rn$2.Null | rn$2.Never | rn$2.NonPrimitive;
function Kh(e$4, t$13) {
	let a$13 = [];
	return Qh(e$4, (o$9, m$11) => {
		let v$5 = m$11.kind === Ie$2.SingleLineCommentTrivia ? Dt$1.Line : Dt$1.Block, E$3 = [m$11.pos, m$11.end], C$3 = ei$2(E$3, e$4), c$3 = E$3[0] + 2, W$2 = m$11.kind === Ie$2.SingleLineCommentTrivia ? E$3[1] - c$3 : E$3[1] - c$3 - 2;
		a$13.push({
			type: v$5,
			loc: C$3,
			range: E$3,
			value: t$13.slice(c$3, c$3 + W$2)
		});
	}, e$4), a$13;
}
var Zh = () => {};
function e0(e$4, t$13, a$13) {
	let { parseDiagnostics: o$9 } = e$4;
	if (o$9.length) throw ad(o$9[0]);
	let m$11 = new Rl(e$4, {
		allowInvalidAST: t$13.allowInvalidAST,
		errorOnUnknownASTType: t$13.errorOnUnknownASTType,
		shouldPreserveNodeMaps: a$13,
		suppressDeprecatedPropertyWarnings: t$13.suppressDeprecatedPropertyWarnings
	}), v$5 = m$11.convertProgram();
	return (!t$13.range || !t$13.loc) && Zh(v$5, { enter: (C$3) => {
		t$13.range || delete C$3.range, t$13.loc || delete C$3.loc;
	} }), t$13.tokens && (v$5.tokens = qh(e$4)), t$13.comment && (v$5.comments = Kh(e$4, t$13.codeFullText)), {
		astMaps: m$11.getASTMaps(),
		estree: v$5
	};
}
function Ul(e$4) {
	if (typeof e$4 != "object" || e$4 == null) return !1;
	let t$13 = e$4;
	return t$13.kind === Ie$2.SourceFile && typeof t$13.getFullText == "function";
}
var Hv = function(e$4) {
	return e$4 && e$4.__esModule ? e$4 : { default: e$4 };
};
var Xv = Hv({ extname: (e$4) => "." + e$4.split(".").pop() });
function n0(e$4, t$13) {
	switch (Xv.default.extname(e$4).toLowerCase()) {
		case On$1.Cjs:
		case On$1.Js:
		case On$1.Mjs: return Ir$2.JS;
		case On$1.Cts:
		case On$1.Mts:
		case On$1.Ts: return Ir$2.TS;
		case On$1.Json: return Ir$2.JSON;
		case On$1.Jsx: return Ir$2.JSX;
		case On$1.Tsx: return Ir$2.TSX;
		default: return t$13 ? Ir$2.TSX : Ir$2.TS;
	}
}
var Qv = { default: Ma }, Kv = (0, Qv.default)("typescript-eslint:typescript-estree:create-program:createSourceFile");
function r0(e$4) {
	return Kv("Getting AST without type information in %s mode for: %s", e$4.jsx ? "TSX" : "TS", e$4.filePath), Ul(e$4.code) ? e$4.code : gh(e$4.filePath, e$4.codeFullText, {
		jsDocParsingMode: e$4.jsDocParsingMode,
		languageVersion: T_.Latest,
		setExternalModuleIndicator: e$4.setExternalModuleIndicator
	}, !0, n0(e$4.filePath, e$4.jsx));
}
var i0 = (e$4) => e$4;
var a0 = () => {};
var s0 = class {};
var o0 = () => !1;
var c0 = () => {};
var l4 = function(e$4) {
	return e$4 && e$4.__esModule ? e$4 : { default: e$4 };
};
var u4 = {}, _d = { default: Ma }, p4 = l4({ extname: (e$4) => "." + e$4.split(".").pop() }), f4 = (0, _d.default)("typescript-eslint:typescript-estree:parseSettings:createParseSettings"), d4, l0 = null, u0, p0, f0, d0, E_ = {
	ParseAll: (u0 = Xa$1) == null ? void 0 : u0.ParseAll,
	ParseForTypeErrors: (p0 = Xa$1) == null ? void 0 : p0.ParseForTypeErrors,
	ParseForTypeInfo: (f0 = Xa$1) == null ? void 0 : f0.ParseForTypeInfo,
	ParseNone: (d0 = Xa$1) == null ? void 0 : d0.ParseNone
};
function m0(e$4, t$13 = {}) {
	var h$3;
	let a$13 = m4(e$4), o$9 = o0(t$13), m$11 = typeof t$13.tsconfigRootDir == "string" ? t$13.tsconfigRootDir : "/prettier-security-dirname-placeholder", v$5 = typeof t$13.loggerFn == "function", E$3 = i0(typeof t$13.filePath == "string" && t$13.filePath !== "<input>" ? t$13.filePath : h4(t$13.jsx), m$11), C$3 = p4.default.extname(E$3).toLowerCase(), c$3 = (() => {
		switch (t$13.jsDocParsingMode) {
			case "all": return E_.ParseAll;
			case "none": return E_.ParseNone;
			case "type-info": return E_.ParseForTypeInfo;
			default: return E_.ParseAll;
		}
	})(), W$2 = {
		loc: t$13.loc === !0,
		range: t$13.range === !0,
		allowInvalidAST: t$13.allowInvalidAST === !0,
		code: e$4,
		codeFullText: a$13,
		comment: t$13.comment === !0,
		comments: [],
		debugLevel: t$13.debugLevel === !0 ? new Set(["typescript-eslint"]) : Array.isArray(t$13.debugLevel) ? new Set(t$13.debugLevel) : /* @__PURE__ */ new Set(),
		errorOnTypeScriptSyntacticAndSemanticIssues: !1,
		errorOnUnknownASTType: t$13.errorOnUnknownASTType === !0,
		extraFileExtensions: Array.isArray(t$13.extraFileExtensions) && t$13.extraFileExtensions.every((y$7) => typeof y$7 == "string") ? t$13.extraFileExtensions : [],
		filePath: E$3,
		jsDocParsingMode: c$3,
		jsx: t$13.jsx === !0,
		log: typeof t$13.loggerFn == "function" ? t$13.loggerFn : t$13.loggerFn === !1 ? () => {} : console.log,
		preserveNodeMaps: t$13.preserveNodeMaps !== !1,
		programs: Array.isArray(t$13.programs) ? t$13.programs : null,
		projects: /* @__PURE__ */ new Map(),
		projectService: t$13.projectService || t$13.project && t$13.projectService !== !1 && (void 0).env.TYPESCRIPT_ESLINT_PROJECT_SERVICE === "true" ? y4(t$13.projectService, {
			jsDocParsingMode: c$3,
			tsconfigRootDir: m$11
		}) : void 0,
		setExternalModuleIndicator: t$13.sourceType === "module" || t$13.sourceType == null && C$3 === On$1.Mjs || t$13.sourceType == null && C$3 === On$1.Mts ? (y$7) => {
			y$7.externalModuleIndicator = !0;
		} : void 0,
		singleRun: o$9,
		suppressDeprecatedPropertyWarnings: t$13.suppressDeprecatedPropertyWarnings ?? !0,
		tokens: t$13.tokens === !0 ? [] : null,
		tsconfigMatchCache: d4 ?? (d4 = new s0(o$9 ? "Infinity" : ((h$3 = t$13.cacheLifetime) == null ? void 0 : h$3.glob) ?? void 0)),
		tsconfigRootDir: m$11
	};
	if (W$2.debugLevel.size > 0) {
		let y$7 = [];
		W$2.debugLevel.has("typescript-eslint") && y$7.push("typescript-eslint:*"), (W$2.debugLevel.has("eslint") || _d.default.enabled("eslint:*,-eslint:code-path")) && y$7.push("eslint:*,-eslint:code-path"), _d.default.enable(y$7.join(","));
	}
	if (Array.isArray(t$13.programs)) {
		if (!t$13.programs.length) throw new Error("You have set parserOptions.programs to an empty array. This will cause all files to not be found in existing programs. Either provide one or more existing TypeScript Program instances in the array, or remove the parserOptions.programs setting.");
		f4("parserOptions.programs was provided, so parserOptions.project will be ignored.");
	}
	return !W$2.programs && !W$2.projectService && (W$2.projects = /* @__PURE__ */ new Map()), t$13.jsDocParsingMode == null && W$2.projects.size === 0 && W$2.programs == null && W$2.projectService == null && (W$2.jsDocParsingMode = E_.ParseNone), c0(W$2, v$5), W$2;
}
function m4(e$4) {
	return Ul(e$4) ? e$4.getFullText(e$4) : typeof e$4 == "string" ? e$4 : String(e$4);
}
function h4(e$4) {
	return e$4 ? "estree.tsx" : "estree.ts";
}
function y4(e$4, t$13) {
	let a$13 = typeof e$4 == "object" ? e$4 : {};
	return a0(a$13.allowDefaultProject), l0 ?? (l0 = (0, u4.createProjectService)({
		options: a$13,
		...t$13
	})), l0;
}
(0, { default: Ma }.default)("typescript-eslint:typescript-estree:parser");
function h0(e$4, t$13) {
	let { ast: a$13 } = x4(e$4, t$13, !1);
	return a$13;
}
function x4(e$4, t$13, a$13) {
	let o$9 = m0(e$4, t$13);
	if (t$13 != null && t$13.errorOnTypeScriptSyntacticAndSemanticIssues) throw new Error("\"errorOnTypeScriptSyntacticAndSemanticIssues\" is only supported for parseAndGenerateServices()");
	let m$11 = r0(o$9), { astMaps: v$5, estree: E$3 } = e0(m$11, o$9, a$13);
	return {
		ast: E$3,
		esTreeNodeToTSNodeMap: v$5.esTreeNodeToTSNodeMap,
		tsNodeToESTreeNodeMap: v$5.tsNodeToESTreeNodeMap
	};
}
function S4(e$4, t$13) {
	let a$13 = /* @__PURE__ */ new SyntaxError(e$4 + " (" + t$13.loc.start.line + ":" + t$13.loc.start.column + ")");
	return Object.assign(a$13, t$13);
}
var y0 = S4;
function w4(e$4) {
	let t$13 = [];
	for (let a$13 of e$4) try {
		return a$13();
	} catch (o$9) {
		t$13.push(o$9);
	}
	throw Object.assign(/* @__PURE__ */ new Error("All combinations failed"), { errors: t$13 });
}
var g0 = w4;
var k4 = (e$4, t$13, a$13) => {
	if (!(e$4 && t$13 == null)) {
		if (t$13.findLast) return t$13.findLast(a$13);
		for (let o$9 = t$13.length - 1; o$9 >= 0; o$9--) {
			let m$11 = t$13[o$9];
			if (a$13(m$11, o$9, t$13)) return m$11;
		}
	}
}, b0 = k4;
var E4 = (e$4, t$13, a$13) => {
	if (!(e$4 && t$13 == null)) return Array.isArray(t$13) || typeof t$13 == "string" ? t$13[a$13 < 0 ? t$13.length + a$13 : a$13] : t$13.at(a$13);
}, v0 = E4;
var A4 = new Proxy(() => {}, { get: () => A4 });
function cn$2(e$4) {
	var o$9, m$11, v$5;
	let t$13 = ((o$9 = e$4.range) == null ? void 0 : o$9[0]) ?? e$4.start, a$13 = (v$5 = ((m$11 = e$4.declaration) == null ? void 0 : m$11.decorators) ?? e$4.decorators) == null ? void 0 : v$5[0];
	return a$13 ? Math.min(cn$2(a$13), t$13) : t$13;
}
function Xt$1(e$4) {
	var a$13;
	return ((a$13 = e$4.range) == null ? void 0 : a$13[1]) ?? e$4.end;
}
function C4(e$4) {
	let t$13 = new Set(e$4);
	return (a$13) => t$13.has(a$13 == null ? void 0 : a$13.type);
}
var Za$1 = C4;
function D4(e$4, t$13, a$13) {
	let o$9 = e$4.originalText.slice(t$13, a$13);
	for (let m$11 of e$4[Symbol.for("comments")]) {
		let v$5 = cn$2(m$11);
		if (v$5 > a$13) break;
		let E$3 = Xt$1(m$11);
		if (E$3 < t$13) continue;
		let C$3 = E$3 - v$5;
		o$9 = o$9.slice(0, v$5 - t$13) + " ".repeat(C$3) + o$9.slice(E$3 - t$13);
	}
	return o$9;
}
var T0 = D4;
var P4 = Za$1([
	"Block",
	"CommentBlock",
	"MultiLine"
]), sa = P4;
var N4 = Za$1([
	"Line",
	"CommentLine",
	"SingleLine",
	"HashbangComment",
	"HTMLOpen",
	"HTMLClose",
	"Hashbang",
	"InterpreterDirective"
]), od = N4;
var cd = /* @__PURE__ */ new WeakMap();
function I4(e$4) {
	return cd.has(e$4) || cd.set(e$4, sa(e$4) && e$4.value[0] === "*" && /@(?:type|satisfies)\b/u.test(e$4.value)), cd.get(e$4);
}
var x0 = I4;
function O4(e$4) {
	if (!sa(e$4)) return !1;
	let t$13 = `*${e$4.value}*`.split(`
`);
	return t$13.length > 1 && t$13.every((a$13) => a$13.trimStart()[0] === "*");
}
var ld = /* @__PURE__ */ new WeakMap();
function M4(e$4) {
	return ld.has(e$4) || ld.set(e$4, O4(e$4)), ld.get(e$4);
}
var ud = M4;
function L4(e$4) {
	if (e$4.length < 2) return;
	let t$13;
	for (let a$13 = e$4.length - 1; a$13 >= 0; a$13--) {
		let o$9 = e$4[a$13];
		if (t$13 && Xt$1(o$9) === cn$2(t$13) && ud(o$9) && ud(t$13) && (e$4.splice(a$13 + 1, 1), o$9.value += "*//*" + t$13.value, o$9.range = [cn$2(o$9), Xt$1(t$13)]), !od(o$9) && !sa(o$9)) throw new TypeError(`Unknown comment type: "${o$9.type}".`);
		t$13 = o$9;
	}
}
var S0 = L4;
var A_ = null;
function C_(e$4) {
	if (A_ !== null && typeof A_.property) {
		let t$13 = A_;
		return A_ = C_.prototype = null, t$13;
	}
	return A_ = C_.prototype = e$4 ?? Object.create(null), new C_();
}
var J4 = 10;
for (let e$4 = 0; e$4 <= J4; e$4++) C_();
function pd(e$4) {
	return C_(e$4);
}
function j4(e$4, t$13 = "type") {
	pd(e$4);
	function a$13(o$9) {
		let m$11 = o$9[t$13], v$5 = e$4[m$11];
		if (!Array.isArray(v$5)) throw Object.assign(/* @__PURE__ */ new Error(`Missing visitor keys for '${m$11}'.`), { node: o$9 });
		return v$5;
	}
	return a$13;
}
var R4 = j4({
	ArrayExpression: ["elements"],
	AssignmentExpression: ["left", "right"],
	BinaryExpression: ["left", "right"],
	InterpreterDirective: [],
	Directive: ["value"],
	DirectiveLiteral: [],
	BlockStatement: ["directives", "body"],
	BreakStatement: ["label"],
	CallExpression: [
		"callee",
		"typeParameters",
		"typeArguments",
		"arguments"
	],
	CatchClause: ["param", "body"],
	ConditionalExpression: [
		"test",
		"consequent",
		"alternate"
	],
	ContinueStatement: ["label"],
	DebuggerStatement: [],
	DoWhileStatement: ["body", "test"],
	EmptyStatement: [],
	ExpressionStatement: ["expression"],
	File: ["program"],
	ForInStatement: [
		"left",
		"right",
		"body"
	],
	ForStatement: [
		"init",
		"test",
		"update",
		"body"
	],
	FunctionDeclaration: [
		"id",
		"typeParameters",
		"params",
		"predicate",
		"returnType",
		"body"
	],
	FunctionExpression: [
		"id",
		"typeParameters",
		"params",
		"returnType",
		"body"
	],
	Identifier: ["typeAnnotation", "decorators"],
	IfStatement: [
		"test",
		"consequent",
		"alternate"
	],
	LabeledStatement: ["label", "body"],
	StringLiteral: [],
	NumericLiteral: [],
	NullLiteral: [],
	BooleanLiteral: [],
	RegExpLiteral: [],
	LogicalExpression: ["left", "right"],
	MemberExpression: ["object", "property"],
	NewExpression: [
		"callee",
		"typeParameters",
		"typeArguments",
		"arguments"
	],
	Program: ["directives", "body"],
	ObjectExpression: ["properties"],
	ObjectMethod: [
		"decorators",
		"key",
		"typeParameters",
		"params",
		"returnType",
		"body"
	],
	ObjectProperty: [
		"decorators",
		"key",
		"value"
	],
	RestElement: [
		"argument",
		"typeAnnotation",
		"decorators"
	],
	ReturnStatement: ["argument"],
	SequenceExpression: ["expressions"],
	ParenthesizedExpression: ["expression"],
	SwitchCase: ["test", "consequent"],
	SwitchStatement: ["discriminant", "cases"],
	ThisExpression: [],
	ThrowStatement: ["argument"],
	TryStatement: [
		"block",
		"handler",
		"finalizer"
	],
	UnaryExpression: ["argument"],
	UpdateExpression: ["argument"],
	VariableDeclaration: ["declarations"],
	VariableDeclarator: ["id", "init"],
	WhileStatement: ["test", "body"],
	WithStatement: ["object", "body"],
	AssignmentPattern: [
		"left",
		"right",
		"decorators",
		"typeAnnotation"
	],
	ArrayPattern: [
		"elements",
		"typeAnnotation",
		"decorators"
	],
	ArrowFunctionExpression: [
		"typeParameters",
		"params",
		"predicate",
		"returnType",
		"body"
	],
	ClassBody: ["body"],
	ClassExpression: [
		"decorators",
		"id",
		"typeParameters",
		"superClass",
		"superTypeParameters",
		"mixins",
		"implements",
		"body",
		"superTypeArguments"
	],
	ClassDeclaration: [
		"decorators",
		"id",
		"typeParameters",
		"superClass",
		"superTypeParameters",
		"mixins",
		"implements",
		"body",
		"superTypeArguments"
	],
	ExportAllDeclaration: [
		"source",
		"attributes",
		"exported"
	],
	ExportDefaultDeclaration: ["declaration"],
	ExportNamedDeclaration: [
		"declaration",
		"specifiers",
		"source",
		"attributes"
	],
	ExportSpecifier: ["local", "exported"],
	ForOfStatement: [
		"left",
		"right",
		"body"
	],
	ImportDeclaration: [
		"specifiers",
		"source",
		"attributes"
	],
	ImportDefaultSpecifier: ["local"],
	ImportNamespaceSpecifier: ["local"],
	ImportSpecifier: ["imported", "local"],
	ImportExpression: ["source", "options"],
	MetaProperty: ["meta", "property"],
	ClassMethod: [
		"decorators",
		"key",
		"typeParameters",
		"params",
		"returnType",
		"body"
	],
	ObjectPattern: [
		"decorators",
		"properties",
		"typeAnnotation"
	],
	SpreadElement: ["argument"],
	Super: [],
	TaggedTemplateExpression: [
		"tag",
		"typeParameters",
		"quasi",
		"typeArguments"
	],
	TemplateElement: [],
	TemplateLiteral: ["quasis", "expressions"],
	YieldExpression: ["argument"],
	AwaitExpression: ["argument"],
	BigIntLiteral: [],
	ExportNamespaceSpecifier: ["exported"],
	OptionalMemberExpression: ["object", "property"],
	OptionalCallExpression: [
		"callee",
		"typeParameters",
		"typeArguments",
		"arguments"
	],
	ClassProperty: [
		"decorators",
		"variance",
		"key",
		"typeAnnotation",
		"value"
	],
	ClassAccessorProperty: [
		"decorators",
		"key",
		"typeAnnotation",
		"value"
	],
	ClassPrivateProperty: [
		"decorators",
		"variance",
		"key",
		"typeAnnotation",
		"value"
	],
	ClassPrivateMethod: [
		"decorators",
		"key",
		"typeParameters",
		"params",
		"returnType",
		"body"
	],
	PrivateName: ["id"],
	StaticBlock: ["body"],
	ImportAttribute: ["key", "value"],
	AnyTypeAnnotation: [],
	ArrayTypeAnnotation: ["elementType"],
	BooleanTypeAnnotation: [],
	BooleanLiteralTypeAnnotation: [],
	NullLiteralTypeAnnotation: [],
	ClassImplements: ["id", "typeParameters"],
	DeclareClass: [
		"id",
		"typeParameters",
		"extends",
		"mixins",
		"implements",
		"body"
	],
	DeclareFunction: ["id", "predicate"],
	DeclareInterface: [
		"id",
		"typeParameters",
		"extends",
		"body"
	],
	DeclareModule: ["id", "body"],
	DeclareModuleExports: ["typeAnnotation"],
	DeclareTypeAlias: [
		"id",
		"typeParameters",
		"right"
	],
	DeclareOpaqueType: [
		"id",
		"typeParameters",
		"supertype"
	],
	DeclareVariable: ["id"],
	DeclareExportDeclaration: [
		"declaration",
		"specifiers",
		"source",
		"attributes"
	],
	DeclareExportAllDeclaration: ["source", "attributes"],
	DeclaredPredicate: ["value"],
	ExistsTypeAnnotation: [],
	FunctionTypeAnnotation: [
		"typeParameters",
		"this",
		"params",
		"rest",
		"returnType"
	],
	FunctionTypeParam: ["name", "typeAnnotation"],
	GenericTypeAnnotation: ["id", "typeParameters"],
	InferredPredicate: [],
	InterfaceExtends: ["id", "typeParameters"],
	InterfaceDeclaration: [
		"id",
		"typeParameters",
		"extends",
		"body"
	],
	InterfaceTypeAnnotation: ["extends", "body"],
	IntersectionTypeAnnotation: ["types"],
	MixedTypeAnnotation: [],
	EmptyTypeAnnotation: [],
	NullableTypeAnnotation: ["typeAnnotation"],
	NumberLiteralTypeAnnotation: [],
	NumberTypeAnnotation: [],
	ObjectTypeAnnotation: [
		"properties",
		"indexers",
		"callProperties",
		"internalSlots"
	],
	ObjectTypeInternalSlot: ["id", "value"],
	ObjectTypeCallProperty: ["value"],
	ObjectTypeIndexer: [
		"variance",
		"id",
		"key",
		"value"
	],
	ObjectTypeProperty: [
		"key",
		"value",
		"variance"
	],
	ObjectTypeSpreadProperty: ["argument"],
	OpaqueType: [
		"id",
		"typeParameters",
		"supertype",
		"impltype"
	],
	QualifiedTypeIdentifier: ["qualification", "id"],
	StringLiteralTypeAnnotation: [],
	StringTypeAnnotation: [],
	SymbolTypeAnnotation: [],
	ThisTypeAnnotation: [],
	TupleTypeAnnotation: ["types", "elementTypes"],
	TypeofTypeAnnotation: ["argument", "typeArguments"],
	TypeAlias: [
		"id",
		"typeParameters",
		"right"
	],
	TypeAnnotation: ["typeAnnotation"],
	TypeCastExpression: ["expression", "typeAnnotation"],
	TypeParameter: [
		"bound",
		"default",
		"variance"
	],
	TypeParameterDeclaration: ["params"],
	TypeParameterInstantiation: ["params"],
	UnionTypeAnnotation: ["types"],
	Variance: [],
	VoidTypeAnnotation: [],
	EnumDeclaration: ["id", "body"],
	EnumBooleanBody: ["members"],
	EnumNumberBody: ["members"],
	EnumStringBody: ["members"],
	EnumSymbolBody: ["members"],
	EnumBooleanMember: ["id", "init"],
	EnumNumberMember: ["id", "init"],
	EnumStringMember: ["id", "init"],
	EnumDefaultedMember: ["id"],
	IndexedAccessType: ["objectType", "indexType"],
	OptionalIndexedAccessType: ["objectType", "indexType"],
	JSXAttribute: ["name", "value"],
	JSXClosingElement: ["name"],
	JSXElement: [
		"openingElement",
		"children",
		"closingElement"
	],
	JSXEmptyExpression: [],
	JSXExpressionContainer: ["expression"],
	JSXSpreadChild: ["expression"],
	JSXIdentifier: [],
	JSXMemberExpression: ["object", "property"],
	JSXNamespacedName: ["namespace", "name"],
	JSXOpeningElement: [
		"name",
		"typeParameters",
		"typeArguments",
		"attributes"
	],
	JSXSpreadAttribute: ["argument"],
	JSXText: [],
	JSXFragment: [
		"openingFragment",
		"children",
		"closingFragment"
	],
	JSXOpeningFragment: [],
	JSXClosingFragment: [],
	Noop: [],
	Placeholder: [],
	V8IntrinsicIdentifier: [],
	ArgumentPlaceholder: [],
	BindExpression: ["object", "callee"],
	Decorator: ["expression"],
	DoExpression: ["body"],
	ExportDefaultSpecifier: ["exported"],
	ModuleExpression: ["body"],
	TopicReference: [],
	PipelineTopicExpression: ["expression"],
	PipelineBareFunction: ["callee"],
	PipelinePrimaryTopicReference: [],
	TSParameterProperty: ["parameter", "decorators"],
	TSDeclareFunction: [
		"id",
		"typeParameters",
		"params",
		"returnType",
		"body"
	],
	TSDeclareMethod: [
		"decorators",
		"key",
		"typeParameters",
		"params",
		"returnType"
	],
	TSQualifiedName: ["left", "right"],
	TSCallSignatureDeclaration: [
		"typeParameters",
		"parameters",
		"typeAnnotation",
		"params",
		"returnType"
	],
	TSConstructSignatureDeclaration: [
		"typeParameters",
		"parameters",
		"typeAnnotation",
		"params",
		"returnType"
	],
	TSPropertySignature: ["key", "typeAnnotation"],
	TSMethodSignature: [
		"key",
		"typeParameters",
		"parameters",
		"typeAnnotation",
		"params",
		"returnType"
	],
	TSIndexSignature: ["parameters", "typeAnnotation"],
	TSAnyKeyword: [],
	TSBooleanKeyword: [],
	TSBigIntKeyword: [],
	TSIntrinsicKeyword: [],
	TSNeverKeyword: [],
	TSNullKeyword: [],
	TSNumberKeyword: [],
	TSObjectKeyword: [],
	TSStringKeyword: [],
	TSSymbolKeyword: [],
	TSUndefinedKeyword: [],
	TSUnknownKeyword: [],
	TSVoidKeyword: [],
	TSThisType: [],
	TSFunctionType: [
		"typeParameters",
		"parameters",
		"typeAnnotation",
		"params",
		"returnType"
	],
	TSConstructorType: [
		"typeParameters",
		"parameters",
		"typeAnnotation",
		"params",
		"returnType"
	],
	TSTypeReference: [
		"typeName",
		"typeParameters",
		"typeArguments"
	],
	TSTypePredicate: ["parameterName", "typeAnnotation"],
	TSTypeQuery: [
		"exprName",
		"typeParameters",
		"typeArguments"
	],
	TSTypeLiteral: ["members"],
	TSArrayType: ["elementType"],
	TSTupleType: ["elementTypes"],
	TSOptionalType: ["typeAnnotation"],
	TSRestType: ["typeAnnotation"],
	TSNamedTupleMember: ["label", "elementType"],
	TSUnionType: ["types"],
	TSIntersectionType: ["types"],
	TSConditionalType: [
		"checkType",
		"extendsType",
		"trueType",
		"falseType"
	],
	TSInferType: ["typeParameter"],
	TSParenthesizedType: ["typeAnnotation"],
	TSTypeOperator: ["typeAnnotation"],
	TSIndexedAccessType: ["objectType", "indexType"],
	TSMappedType: [
		"nameType",
		"typeAnnotation",
		"key",
		"constraint"
	],
	TSTemplateLiteralType: ["quasis", "types"],
	TSLiteralType: ["literal"],
	TSExpressionWithTypeArguments: ["expression", "typeParameters"],
	TSInterfaceDeclaration: [
		"id",
		"typeParameters",
		"extends",
		"body"
	],
	TSInterfaceBody: ["body"],
	TSTypeAliasDeclaration: [
		"id",
		"typeParameters",
		"typeAnnotation"
	],
	TSInstantiationExpression: [
		"expression",
		"typeParameters",
		"typeArguments"
	],
	TSAsExpression: ["expression", "typeAnnotation"],
	TSSatisfiesExpression: ["expression", "typeAnnotation"],
	TSTypeAssertion: ["typeAnnotation", "expression"],
	TSEnumBody: ["members"],
	TSEnumDeclaration: ["id", "body"],
	TSEnumMember: ["id", "initializer"],
	TSModuleDeclaration: ["id", "body"],
	TSModuleBlock: ["body"],
	TSImportType: [
		"argument",
		"options",
		"qualifier",
		"typeParameters",
		"typeArguments"
	],
	TSImportEqualsDeclaration: ["id", "moduleReference"],
	TSExternalModuleReference: ["expression"],
	TSNonNullExpression: ["expression"],
	TSExportAssignment: ["expression"],
	TSNamespaceExportDeclaration: ["id"],
	TSTypeAnnotation: ["typeAnnotation"],
	TSTypeParameterInstantiation: ["params"],
	TSTypeParameterDeclaration: ["params"],
	TSTypeParameter: [
		"constraint",
		"default",
		"name"
	],
	ChainExpression: ["expression"],
	ExperimentalRestProperty: ["argument"],
	ExperimentalSpreadProperty: ["argument"],
	Literal: [],
	MethodDefinition: [
		"decorators",
		"key",
		"value"
	],
	PrivateIdentifier: [],
	Property: ["key", "value"],
	PropertyDefinition: [
		"decorators",
		"key",
		"typeAnnotation",
		"value",
		"variance"
	],
	AccessorProperty: [
		"decorators",
		"key",
		"typeAnnotation",
		"value"
	],
	TSAbstractAccessorProperty: [
		"decorators",
		"key",
		"typeAnnotation"
	],
	TSAbstractKeyword: [],
	TSAbstractMethodDefinition: ["key", "value"],
	TSAbstractPropertyDefinition: [
		"decorators",
		"key",
		"typeAnnotation"
	],
	TSAsyncKeyword: [],
	TSClassImplements: [
		"expression",
		"typeArguments",
		"typeParameters"
	],
	TSDeclareKeyword: [],
	TSEmptyBodyFunctionExpression: [
		"id",
		"typeParameters",
		"params",
		"returnType"
	],
	TSExportKeyword: [],
	TSInterfaceHeritage: [
		"expression",
		"typeArguments",
		"typeParameters"
	],
	TSPrivateKeyword: [],
	TSProtectedKeyword: [],
	TSPublicKeyword: [],
	TSReadonlyKeyword: [],
	TSStaticKeyword: [],
	AsConstExpression: ["expression"],
	AsExpression: ["expression", "typeAnnotation"],
	BigIntLiteralTypeAnnotation: [],
	BigIntTypeAnnotation: [],
	ComponentDeclaration: [
		"id",
		"params",
		"body",
		"typeParameters",
		"rendersType"
	],
	ComponentParameter: ["name", "local"],
	ComponentTypeAnnotation: [
		"params",
		"rest",
		"typeParameters",
		"rendersType"
	],
	ComponentTypeParameter: ["name", "typeAnnotation"],
	ConditionalTypeAnnotation: [
		"checkType",
		"extendsType",
		"trueType",
		"falseType"
	],
	DeclareComponent: [
		"id",
		"params",
		"rest",
		"typeParameters",
		"rendersType"
	],
	DeclareEnum: ["id", "body"],
	DeclareHook: ["id"],
	DeclareNamespace: ["id", "body"],
	EnumBigIntBody: ["members"],
	EnumBigIntMember: ["id", "init"],
	HookDeclaration: [
		"id",
		"params",
		"body",
		"typeParameters",
		"returnType"
	],
	HookTypeAnnotation: [
		"params",
		"returnType",
		"rest",
		"typeParameters"
	],
	InferTypeAnnotation: ["typeParameter"],
	KeyofTypeAnnotation: ["argument"],
	ObjectTypeMappedTypeProperty: [
		"keyTparam",
		"propType",
		"sourceType",
		"variance"
	],
	QualifiedTypeofIdentifier: ["qualification", "id"],
	TupleTypeLabeledElement: [
		"label",
		"elementType",
		"variance"
	],
	TupleTypeSpreadElement: ["label", "typeAnnotation"],
	TypeOperator: ["typeAnnotation"],
	TypePredicate: [
		"parameterName",
		"typeAnnotation",
		"asserts"
	],
	NGChainedExpression: ["expressions"],
	NGEmptyExpression: [],
	NGPipeExpression: [
		"left",
		"right",
		"arguments"
	],
	NGMicrosyntax: ["body"],
	NGMicrosyntaxAs: ["key", "alias"],
	NGMicrosyntaxExpression: ["expression", "alias"],
	NGMicrosyntaxKey: [],
	NGMicrosyntaxKeyedExpression: ["key", "expression"],
	NGMicrosyntaxLet: ["key", "value"],
	NGRoot: ["node"],
	JsExpressionRoot: ["node"],
	JsonRoot: ["node"],
	TSJSDocAllType: [],
	TSJSDocUnknownType: [],
	TSJSDocNullableType: ["typeAnnotation"],
	TSJSDocNonNullableType: ["typeAnnotation"],
	NeverTypeAnnotation: [],
	SatisfiesExpression: ["expression", "typeAnnotation"],
	UndefinedTypeAnnotation: [],
	UnknownTypeAnnotation: []
}), E0 = R4;
function fd(e$4, t$13) {
	if (!(e$4 !== null && typeof e$4 == "object")) return e$4;
	if (Array.isArray(e$4)) {
		for (let o$9 = 0; o$9 < e$4.length; o$9++) e$4[o$9] = fd(e$4[o$9], t$13);
		return e$4;
	}
	let a$13 = E0(e$4);
	for (let o$9 = 0; o$9 < a$13.length; o$9++) e$4[a$13[o$9]] = fd(e$4[a$13[o$9]], t$13);
	return t$13(e$4) || e$4;
}
var A0 = fd;
Za$1([
	"RegExpLiteral",
	"BigIntLiteral",
	"NumericLiteral",
	"StringLiteral",
	"DirectiveLiteral",
	"Literal",
	"JSXText",
	"TemplateElement",
	"StringLiteralTypeAnnotation",
	"NumberLiteralTypeAnnotation",
	"BigIntLiteralTypeAnnotation"
]);
function U4(e$4, t$13) {
	let { parser: a$13, text: o$9 } = t$13, { comments: m$11 } = e$4, v$5 = a$13 === "oxc" && t$13.oxcAstType === "ts";
	S0(m$11);
	let E$3;
	e$4 = A0(e$4, (c$3) => {
		switch (c$3.type) {
			case "ParenthesizedExpression": {
				let { expression: W$2 } = c$3, h$3 = cn$2(c$3);
				if (W$2.type === "TypeCastExpression") return W$2.range = [h$3, Xt$1(c$3)], W$2;
				let y$7 = !1;
				if (!v$5) {
					if (!E$3) {
						E$3 = [];
						for (let x$3 of m$11) x0(x$3) && E$3.push(Xt$1(x$3));
					}
					let g$2 = b0(!1, E$3, (x$3) => x$3 <= h$3);
					y$7 = g$2 && o$9.slice(g$2, h$3).trim().length === 0;
				}
				if (!y$7) return W$2.extra = {
					...W$2.extra,
					parenthesized: !0
				}, W$2;
				break;
			}
			case "LogicalExpression":
				if (D0(c$3)) return dd(c$3);
				break;
			case "TemplateLiteral":
				if (c$3.expressions.length !== c$3.quasis.length - 1) throw new Error("Malformed template literal.");
				break;
			case "TemplateElement":
				if (a$13 === "flow" || a$13 === "hermes" || a$13 === "espree" || a$13 === "typescript" || v$5) {
					let W$2 = cn$2(c$3) + 1, h$3 = Xt$1(c$3) - (c$3.tail ? 1 : 2);
					c$3.range = [W$2, h$3];
				}
				break;
			case "VariableDeclaration": {
				let W$2 = v0(!1, c$3.declarations, -1);
				W$2 != null && W$2.init && o$9[Xt$1(W$2)] !== ";" && (c$3.range = [cn$2(c$3), Xt$1(W$2)]);
				break;
			}
			case "TSParenthesizedType": return c$3.typeAnnotation;
			case "TSTypeParameter":
				C0(c$3);
				break;
			case "TopicReference":
				e$4.extra = {
					...e$4.extra,
					__isUsingHackPipeline: !0
				};
				break;
			case "TSUnionType":
			case "TSIntersectionType":
				if (c$3.types.length === 1) return c$3.types[0];
				break;
			case "TSMappedType":
				if (!c$3.constraint && !c$3.key) {
					let { name: W$2, constraint: h$3 } = C0(c$3.typeParameter);
					c$3.constraint = h$3, c$3.key = W$2, delete c$3.typeParameter;
				}
				break;
			case "TSEnumDeclaration":
				if (!c$3.body) {
					let W$2 = Xt$1(c$3.id), { members: h$3 } = c$3, y$7 = T0({
						originalText: o$9,
						[Symbol.for("comments")]: m$11
					}, W$2, h$3[0] ? cn$2(h$3[0]) : Xt$1(c$3)), g$2 = W$2 + y$7.indexOf("{");
					c$3.body = {
						type: "TSEnumBody",
						members: h$3,
						range: [g$2, Xt$1(c$3)]
					}, delete c$3.members;
				}
				break;
			case "ImportExpression":
				a$13 === "hermes" && c$3.attributes && !c$3.options && (c$3.options = c$3.attributes);
				break;
		}
	});
	let C$3 = e$4.type === "File" ? e$4.program : e$4;
	return C$3.interpreter && (m$11.unshift(C$3.interpreter), delete C$3.interpreter), v$5 && e$4.hashbang && (m$11.unshift(e$4.hashbang), delete e$4.hashbang), e$4.type === "Program" && (e$4.range = [0, o$9.length]), e$4;
}
function C0(e$4) {
	if (e$4.type === "TSTypeParameter" && typeof e$4.name == "string") {
		let t$13 = cn$2(e$4);
		e$4.name = {
			type: "Identifier",
			name: e$4.name,
			range: [t$13, t$13 + e$4.name.length]
		};
	}
	return e$4;
}
function D0(e$4) {
	return e$4.type === "LogicalExpression" && e$4.right.type === "LogicalExpression" && e$4.operator === e$4.right.operator;
}
function dd(e$4) {
	return D0(e$4) ? dd({
		type: "LogicalExpression",
		operator: e$4.operator,
		left: dd({
			type: "LogicalExpression",
			operator: e$4.operator,
			left: e$4.left,
			right: e$4.right.left,
			range: [cn$2(e$4.left), Xt$1(e$4.right.left)]
		}),
		right: e$4.right.right,
		range: [cn$2(e$4), Xt$1(e$4)]
	}) : e$4;
}
var P0 = U4;
var B4 = /\*\/$/, q4 = /^\/\*\*?/, F4 = /^\s*(\/\*\*?(.|\r?\n)*?\*\/)/, z4 = /(^|\s+)\/\/([^\n\r]*)/g, N0 = /^(\r?\n)+/, V4 = /(?:^|\r?\n) *(@[^\n\r]*?) *\r?\n *(?![^\n\r@]*\/\/[^]*)([^\s@][^\n\r@]+?) *\r?\n/g, I0 = /(?:^|\r?\n) *@(\S+) *([^\n\r]*)/g, W4 = /(\r?\n|^) *\* ?/g, G4 = [];
function O0(e$4) {
	let t$13 = e$4.match(F4);
	return t$13 ? t$13[0].trimStart() : "";
}
function M0(e$4) {
	let t$13 = `
`;
	e$4 = Er$2(!1, e$4.replace(q4, "").replace(B4, ""), W4, "$1");
	let a$13 = "";
	for (; a$13 !== e$4;) a$13 = e$4, e$4 = Er$2(!1, e$4, V4, `${t$13}$1 $2${t$13}`);
	e$4 = e$4.replace(N0, "").trimEnd();
	let o$9 = Object.create(null), m$11 = Er$2(!1, e$4, I0, "").replace(N0, "").trimEnd(), v$5;
	for (; v$5 = I0.exec(e$4);) {
		let E$3 = Er$2(!1, v$5[2], z4, "");
		if (typeof o$9[v$5[1]] == "string" || Array.isArray(o$9[v$5[1]])) {
			let C$3 = o$9[v$5[1]];
			o$9[v$5[1]] = [
				...G4,
				...Array.isArray(C$3) ? C$3 : [C$3],
				E$3
			];
		} else o$9[v$5[1]] = E$3;
	}
	return {
		comments: m$11,
		pragmas: o$9
	};
}
var L0 = ["noformat", "noprettier"], J0 = ["format", "prettier"];
function Y4(e$4) {
	if (!e$4.startsWith("#!")) return "";
	let t$13 = e$4.indexOf(`
`);
	return t$13 === -1 ? e$4 : e$4.slice(0, t$13);
}
var j0 = Y4;
function R0(e$4) {
	let t$13 = j0(e$4);
	t$13 && (e$4 = e$4.slice(t$13.length + 1));
	let a$13 = O0(e$4), { pragmas: o$9, comments: m$11 } = M0(a$13);
	return {
		shebang: t$13,
		text: e$4,
		pragmas: o$9,
		comments: m$11
	};
}
function U0(e$4) {
	let { pragmas: t$13 } = R0(e$4);
	return J0.some((a$13) => Object.prototype.hasOwnProperty.call(t$13, a$13));
}
function B0(e$4) {
	let { pragmas: t$13 } = R0(e$4);
	return L0.some((a$13) => Object.prototype.hasOwnProperty.call(t$13, a$13));
}
function H4(e$4) {
	return e$4 = typeof e$4 == "function" ? { parse: e$4 } : e$4, {
		astFormat: "estree",
		hasPragma: U0,
		hasIgnorePragma: B0,
		locStart: cn$2,
		locEnd: Xt$1,
		...e$4
	};
}
var q0 = H4;
var F0 = /^[^"'`]*<\/|^[^/]{2}.*\/>/mu;
function X4(e$4) {
	return e$4.charAt(0) === "#" && e$4.charAt(1) === "!" ? "//" + e$4.slice(2) : e$4;
}
var z0 = X4;
var V0 = "module", W0 = "script", G0 = [V0, W0];
function Y0(e$4) {
	if (typeof e$4 == "string") {
		if (e$4 = e$4.toLowerCase(), /\.(?:mjs|mts)$/iu.test(e$4)) return V0;
		if (/\.(?:cjs|cts)$/iu.test(e$4)) return W0;
	}
}
var $4 = {
	loc: !0,
	range: !0,
	comment: !0,
	tokens: !1,
	loggerFn: !1,
	project: !1,
	jsDocParsingMode: "none",
	suppressDeprecatedPropertyWarnings: !0
};
function Q4(e$4) {
	let { message: t$13, location: a$13 } = e$4;
	if (!a$13) return e$4;
	let { start: o$9, end: m$11 } = a$13;
	return y0(t$13, {
		loc: {
			start: {
				line: o$9.line,
				column: o$9.column + 1
			},
			end: {
				line: m$11.line,
				column: m$11.column + 1
			}
		},
		cause: e$4
	});
}
var K4 = (e$4) => e$4 && /\.(?:js|mjs|cjs|jsx|ts|mts|cts|tsx)$/iu.test(e$4);
function Z4(e$4, t$13) {
	let a$13 = [{
		...$4,
		filePath: t$13
	}], o$9 = Y0(t$13);
	if (o$9 ? a$13 = a$13.map((v$5) => ({
		...v$5,
		sourceType: o$9
	})) : a$13 = G0.flatMap((v$5) => a$13.map((E$3) => ({
		...E$3,
		sourceType: v$5
	}))), K4(t$13)) return a$13;
	let m$11 = F0.test(e$4);
	return [m$11, !m$11].flatMap((v$5) => a$13.map((E$3) => ({
		...E$3,
		jsx: v$5
	})));
}
function e3(e$4, t$13) {
	let a$13 = t$13 == null ? void 0 : t$13.filepath;
	typeof a$13 != "string" && (a$13 = void 0);
	let o$9 = z0(e$4), m$11 = Z4(e$4, a$13), v$5;
	try {
		v$5 = g0(m$11.map((E$3) => () => h0(o$9, E$3)));
	} catch ({ errors: [E$3] }) {
		throw Q4(E$3);
	}
	return P0(v$5, {
		parser: "typescript",
		text: e$4
	});
}
var t3 = q0(e3);
var r9 = hd;

//#endregion
//#region node_modules/.pnpm/prettier@3.6.2_patch_hash=2c5fac0fd268a2b2ab314d9e790cb805e3eb5e35106fc2644635eb6950a6ec1f/node_modules/prettier/plugins/yaml.mjs
var Yi = Object.create;
var Nt$1 = Object.defineProperty;
var $i = Object.getOwnPropertyDescriptor;
var Bi = Object.getOwnPropertyNames;
var Fi = Object.getPrototypeOf, qi = Object.prototype.hasOwnProperty;
var dr$1 = (t$13) => {
	throw TypeError(t$13);
};
var Ui = (t$13, e$4, n$8) => e$4 in t$13 ? Nt$1(t$13, e$4, {
	enumerable: !0,
	configurable: !0,
	writable: !0,
	value: n$8
}) : t$13[e$4] = n$8;
var te$1 = (t$13, e$4) => () => (e$4 || t$13((e$4 = { exports: {} }).exports, e$4), e$4.exports), yr$1 = (t$13, e$4) => {
	for (var n$8 in e$4) Nt$1(t$13, n$8, {
		get: e$4[n$8],
		enumerable: !0
	});
}, Ki = (t$13, e$4, n$8, r$12) => {
	if (e$4 && typeof e$4 == "object" || typeof e$4 == "function") for (let s$8 of Bi(e$4)) !qi.call(t$13, s$8) && s$8 !== n$8 && Nt$1(t$13, s$8, {
		get: () => e$4[s$8],
		enumerable: !(r$12 = $i(e$4, s$8)) || r$12.enumerable
	});
	return t$13;
};
var cn$1 = (t$13, e$4, n$8) => (n$8 = t$13 != null ? Yi(Fi(t$13)) : {}, Ki(e$4 || !t$13 || !t$13.__esModule ? Nt$1(n$8, "default", {
	value: t$13,
	enumerable: !0
}) : n$8, t$13));
var ln$1 = (t$13, e$4, n$8) => Ui(t$13, typeof e$4 != "symbol" ? e$4 + "" : e$4, n$8), fn$1 = (t$13, e$4, n$8) => e$4.has(t$13) || dr$1("Cannot " + n$8);
var Te$1 = (t$13, e$4, n$8) => (fn$1(t$13, e$4, "read from private field"), n$8 ? n$8.call(t$13) : e$4.get(t$13)), Ot$1 = (t$13, e$4, n$8) => e$4.has(t$13) ? dr$1("Cannot add the same private member more than once") : e$4 instanceof WeakSet ? e$4.add(t$13) : e$4.set(t$13, n$8), un$1 = (t$13, e$4, n$8, r$12) => (fn$1(t$13, e$4, "write to private field"), r$12 ? r$12.call(t$13, n$8) : e$4.set(t$13, n$8), n$8), Xe$1 = (t$13, e$4, n$8) => (fn$1(t$13, e$4, "access private method"), n$8);
var oe$1 = te$1(($$4) => {
	var re$5 = {
		ANCHOR: "&",
		COMMENT: "#",
		TAG: "!",
		DIRECTIVES_END: "-",
		DOCUMENT_END: "."
	}, pt$4 = {
		ALIAS: "ALIAS",
		BLANK_LINE: "BLANK_LINE",
		BLOCK_FOLDED: "BLOCK_FOLDED",
		BLOCK_LITERAL: "BLOCK_LITERAL",
		COMMENT: "COMMENT",
		DIRECTIVE: "DIRECTIVE",
		DOCUMENT: "DOCUMENT",
		FLOW_MAP: "FLOW_MAP",
		FLOW_SEQ: "FLOW_SEQ",
		MAP: "MAP",
		MAP_KEY: "MAP_KEY",
		MAP_VALUE: "MAP_VALUE",
		PLAIN: "PLAIN",
		QUOTE_DOUBLE: "QUOTE_DOUBLE",
		QUOTE_SINGLE: "QUOTE_SINGLE",
		SEQ: "SEQ",
		SEQ_ITEM: "SEQ_ITEM"
	}, bo$3 = "tag:yaml.org,2002:", No$3 = {
		MAP: "tag:yaml.org,2002:map",
		SEQ: "tag:yaml.org,2002:seq",
		STR: "tag:yaml.org,2002:str"
	};
	function Zr$6(t$13) {
		let e$4 = [0], n$8 = t$13.indexOf(`
`);
		for (; n$8 !== -1;) n$8 += 1, e$4.push(n$8), n$8 = t$13.indexOf(`
`, n$8);
		return e$4;
	}
	function es$3(t$13) {
		let e$4, n$8;
		return typeof t$13 == "string" ? (e$4 = Zr$6(t$13), n$8 = t$13) : (Array.isArray(t$13) && (t$13 = t$13[0]), t$13 && t$13.context && (t$13.lineStarts || (t$13.lineStarts = Zr$6(t$13.context.src)), e$4 = t$13.lineStarts, n$8 = t$13.context.src)), {
			lineStarts: e$4,
			src: n$8
		};
	}
	function Mn$4(t$13, e$4) {
		if (typeof t$13 != "number" || t$13 < 0) return null;
		let { lineStarts: n$8, src: r$12 } = es$3(e$4);
		if (!n$8 || !r$12 || t$13 > r$12.length) return null;
		for (let i$18 = 0; i$18 < n$8.length; ++i$18) {
			let o$9 = n$8[i$18];
			if (t$13 < o$9) return {
				line: i$18,
				col: t$13 - n$8[i$18 - 1] + 1
			};
			if (t$13 === o$9) return {
				line: i$18 + 1,
				col: 1
			};
		}
		let s$8 = n$8.length;
		return {
			line: s$8,
			col: t$13 - n$8[s$8 - 1] + 1
		};
	}
	function Oo$4(t$13, e$4) {
		let { lineStarts: n$8, src: r$12 } = es$3(e$4);
		if (!n$8 || !(t$13 >= 1) || t$13 > n$8.length) return null;
		let s$8 = n$8[t$13 - 1], i$18 = n$8[t$13];
		for (; i$18 && i$18 > s$8 && r$12[i$18 - 1] === `
`;) --i$18;
		return r$12.slice(s$8, i$18);
	}
	function Ao$2({ start: t$13, end: e$4 }, n$8, r$12 = 80) {
		let s$8 = Oo$4(t$13.line, n$8);
		if (!s$8) return null;
		let { col: i$18 } = t$13;
		if (s$8.length > r$12) if (i$18 <= r$12 - 10) s$8 = s$8.substr(0, r$12 - 1) + "…";
		else {
			let f$3 = Math.round(r$12 / 2);
			s$8.length > i$18 + f$3 && (s$8 = s$8.substr(0, i$18 + f$3 - 1) + "…"), i$18 -= s$8.length - r$12, s$8 = "…" + s$8.substr(1 - r$12);
		}
		let o$9 = 1, a$13 = "";
		e$4 && (e$4.line === t$13.line && i$18 + (e$4.col - t$13.col) <= r$12 + 1 ? o$9 = e$4.col - t$13.col : (o$9 = Math.min(s$8.length + 1, r$12) - i$18, a$13 = "…"));
		let c$3 = i$18 > 1 ? " ".repeat(i$18 - 1) : "", l$10 = "^".repeat(o$9);
		return `${s$8}
${c$3}${l$10}${a$13}`;
	}
	var Be$4 = class t$13 {
		static copy(e$4) {
			return new t$13(e$4.start, e$4.end);
		}
		constructor(e$4, n$8) {
			this.start = e$4, this.end = n$8 || e$4;
		}
		isEmpty() {
			return typeof this.start != "number" || !this.end || this.end <= this.start;
		}
		setOrigRange(e$4, n$8) {
			let { start: r$12, end: s$8 } = this;
			if (e$4.length === 0 || s$8 <= e$4[0]) return this.origStart = r$12, this.origEnd = s$8, n$8;
			let i$18 = n$8;
			for (; i$18 < e$4.length && !(e$4[i$18] > r$12);) ++i$18;
			this.origStart = r$12 + i$18;
			let o$9 = i$18;
			for (; i$18 < e$4.length && !(e$4[i$18] >= s$8);) ++i$18;
			return this.origEnd = s$8 + i$18, o$9;
		}
	}, se$3 = class t$13 {
		static addStringTerminator(e$4, n$8, r$12) {
			if (r$12[r$12.length - 1] === `
`) return r$12;
			let s$8 = t$13.endOfWhiteSpace(e$4, n$8);
			return s$8 >= e$4.length || e$4[s$8] === `
` ? r$12 + `
` : r$12;
		}
		static atDocumentBoundary(e$4, n$8, r$12) {
			let s$8 = e$4[n$8];
			if (!s$8) return !0;
			let i$18 = e$4[n$8 - 1];
			if (i$18 && i$18 !== `
`) return !1;
			if (r$12) {
				if (s$8 !== r$12) return !1;
			} else if (s$8 !== re$5.DIRECTIVES_END && s$8 !== re$5.DOCUMENT_END) return !1;
			let o$9 = e$4[n$8 + 1], a$13 = e$4[n$8 + 2];
			if (o$9 !== s$8 || a$13 !== s$8) return !1;
			let c$3 = e$4[n$8 + 3];
			return !c$3 || c$3 === `
` || c$3 === "	" || c$3 === " ";
		}
		static endOfIdentifier(e$4, n$8) {
			let r$12 = e$4[n$8], s$8 = r$12 === "<", i$18 = s$8 ? [
				`
`,
				"	",
				" ",
				">"
			] : [
				`
`,
				"	",
				" ",
				"[",
				"]",
				"{",
				"}",
				","
			];
			for (; r$12 && i$18.indexOf(r$12) === -1;) r$12 = e$4[n$8 += 1];
			return s$8 && r$12 === ">" && (n$8 += 1), n$8;
		}
		static endOfIndent(e$4, n$8) {
			let r$12 = e$4[n$8];
			for (; r$12 === " ";) r$12 = e$4[n$8 += 1];
			return n$8;
		}
		static endOfLine(e$4, n$8) {
			let r$12 = e$4[n$8];
			for (; r$12 && r$12 !== `
`;) r$12 = e$4[n$8 += 1];
			return n$8;
		}
		static endOfWhiteSpace(e$4, n$8) {
			let r$12 = e$4[n$8];
			for (; r$12 === "	" || r$12 === " ";) r$12 = e$4[n$8 += 1];
			return n$8;
		}
		static startOfLine(e$4, n$8) {
			let r$12 = e$4[n$8 - 1];
			if (r$12 === `
`) return n$8;
			for (; r$12 && r$12 !== `
`;) r$12 = e$4[n$8 -= 1];
			return n$8 + 1;
		}
		static endOfBlockIndent(e$4, n$8, r$12) {
			let s$8 = t$13.endOfIndent(e$4, r$12);
			if (s$8 > r$12 + n$8) return s$8;
			{
				let i$18 = t$13.endOfWhiteSpace(e$4, s$8), o$9 = e$4[i$18];
				if (!o$9 || o$9 === `
`) return i$18;
			}
			return null;
		}
		static atBlank(e$4, n$8, r$12) {
			let s$8 = e$4[n$8];
			return s$8 === `
` || s$8 === "	" || s$8 === " " || r$12 && !s$8;
		}
		static nextNodeIsIndented(e$4, n$8, r$12) {
			return !e$4 || n$8 < 0 ? !1 : n$8 > 0 ? !0 : r$12 && e$4 === "-";
		}
		static normalizeOffset(e$4, n$8) {
			let r$12 = e$4[n$8];
			return r$12 ? r$12 !== `
` && e$4[n$8 - 1] === `
` ? n$8 - 1 : t$13.endOfWhiteSpace(e$4, n$8) : n$8;
		}
		static foldNewline(e$4, n$8, r$12) {
			let s$8 = 0, i$18 = !1, o$9 = "", a$13 = e$4[n$8 + 1];
			for (; a$13 === " " || a$13 === "	" || a$13 === `
`;) {
				switch (a$13) {
					case `
`:
						s$8 = 0, n$8 += 1, o$9 += `
`;
						break;
					case "	":
						s$8 <= r$12 && (i$18 = !0), n$8 = t$13.endOfWhiteSpace(e$4, n$8 + 2) - 1;
						break;
					case " ":
						s$8 += 1, n$8 += 1;
						break;
				}
				a$13 = e$4[n$8 + 1];
			}
			return o$9 || (o$9 = " "), a$13 && s$8 <= r$12 && (i$18 = !0), {
				fold: o$9,
				offset: n$8,
				error: i$18
			};
		}
		constructor(e$4, n$8, r$12) {
			Object.defineProperty(this, "context", {
				value: r$12 || null,
				writable: !0
			}), this.error = null, this.range = null, this.valueRange = null, this.props = n$8 || [], this.type = e$4, this.value = null;
		}
		getPropValue(e$4, n$8, r$12) {
			if (!this.context) return null;
			let { src: s$8 } = this.context, i$18 = this.props[e$4];
			return i$18 && s$8[i$18.start] === n$8 ? s$8.slice(i$18.start + (r$12 ? 1 : 0), i$18.end) : null;
		}
		get anchor() {
			for (let e$4 = 0; e$4 < this.props.length; ++e$4) {
				let n$8 = this.getPropValue(e$4, re$5.ANCHOR, !0);
				if (n$8 != null) return n$8;
			}
			return null;
		}
		get comment() {
			let e$4 = [];
			for (let n$8 = 0; n$8 < this.props.length; ++n$8) {
				let r$12 = this.getPropValue(n$8, re$5.COMMENT, !0);
				r$12 != null && e$4.push(r$12);
			}
			return e$4.length > 0 ? e$4.join(`
`) : null;
		}
		commentHasRequiredWhitespace(e$4) {
			let { src: n$8 } = this.context;
			if (this.header && e$4 === this.header.end || !this.valueRange) return !1;
			let { end: r$12 } = this.valueRange;
			return e$4 !== r$12 || t$13.atBlank(n$8, r$12 - 1);
		}
		get hasComment() {
			if (this.context) {
				let { src: e$4 } = this.context;
				for (let n$8 = 0; n$8 < this.props.length; ++n$8) if (e$4[this.props[n$8].start] === re$5.COMMENT) return !0;
			}
			return !1;
		}
		get hasProps() {
			if (this.context) {
				let { src: e$4 } = this.context;
				for (let n$8 = 0; n$8 < this.props.length; ++n$8) if (e$4[this.props[n$8].start] !== re$5.COMMENT) return !0;
			}
			return !1;
		}
		get includesTrailingLines() {
			return !1;
		}
		get jsonLike() {
			return [
				pt$4.FLOW_MAP,
				pt$4.FLOW_SEQ,
				pt$4.QUOTE_DOUBLE,
				pt$4.QUOTE_SINGLE
			].indexOf(this.type) !== -1;
		}
		get rangeAsLinePos() {
			if (!this.range || !this.context) return;
			let e$4 = Mn$4(this.range.start, this.context.root);
			if (!e$4) return;
			let n$8 = Mn$4(this.range.end, this.context.root);
			return {
				start: e$4,
				end: n$8
			};
		}
		get rawValue() {
			if (!this.valueRange || !this.context) return null;
			let { start: e$4, end: n$8 } = this.valueRange;
			return this.context.src.slice(e$4, n$8);
		}
		get tag() {
			for (let e$4 = 0; e$4 < this.props.length; ++e$4) {
				let n$8 = this.getPropValue(e$4, re$5.TAG, !1);
				if (n$8 != null) {
					if (n$8[1] === "<") return { verbatim: n$8.slice(2, -1) };
					{
						let [r$12, s$8, i$18] = n$8.match(/^(.*!)([^!]*)$/);
						return {
							handle: s$8,
							suffix: i$18
						};
					}
				}
			}
			return null;
		}
		get valueRangeContainsNewline() {
			if (!this.valueRange || !this.context) return !1;
			let { start: e$4, end: n$8 } = this.valueRange, { src: r$12 } = this.context;
			for (let s$8 = e$4; s$8 < n$8; ++s$8) if (r$12[s$8] === `
`) return !0;
			return !1;
		}
		parseComment(e$4) {
			let { src: n$8 } = this.context;
			if (n$8[e$4] === re$5.COMMENT) {
				let r$12 = t$13.endOfLine(n$8, e$4 + 1), s$8 = new Be$4(e$4, r$12);
				return this.props.push(s$8), r$12;
			}
			return e$4;
		}
		setOrigRanges(e$4, n$8) {
			return this.range && (n$8 = this.range.setOrigRange(e$4, n$8)), this.valueRange && this.valueRange.setOrigRange(e$4, n$8), this.props.forEach((r$12) => r$12.setOrigRange(e$4, n$8)), n$8;
		}
		toString() {
			let { context: { src: e$4 }, range: n$8, value: r$12 } = this;
			if (r$12 != null) return r$12;
			let s$8 = e$4.slice(n$8.start, n$8.end);
			return t$13.addStringTerminator(e$4, n$8.end, s$8);
		}
	}, ye$4 = class extends Error {
		constructor(e$4, n$8, r$12) {
			if (!r$12 || !(n$8 instanceof se$3)) throw new Error(`Invalid arguments for new ${e$4}`);
			super(), this.name = e$4, this.message = r$12, this.source = n$8;
		}
		makePretty() {
			if (!this.source) return;
			this.nodeType = this.source.type;
			let e$4 = this.source.context && this.source.context.root;
			if (typeof this.offset == "number") {
				this.range = new Be$4(this.offset, this.offset + 1);
				let n$8 = e$4 && Mn$4(this.offset, e$4);
				if (n$8) {
					let r$12 = {
						line: n$8.line,
						col: n$8.col + 1
					};
					this.linePos = {
						start: n$8,
						end: r$12
					};
				}
				delete this.offset;
			} else this.range = this.source.range, this.linePos = this.source.rangeAsLinePos;
			if (this.linePos) {
				let { line: n$8, col: r$12 } = this.linePos.start;
				this.message += ` at line ${n$8}, column ${r$12}`;
				let s$8 = e$4 && Ao$2(this.linePos, e$4);
				s$8 && (this.message += `:

${s$8}
`);
			}
			delete this.source;
		}
	}, Cn$5 = class extends ye$4 {
		constructor(e$4, n$8) {
			super("YAMLReferenceError", e$4, n$8);
		}
	}, mt$5 = class extends ye$4 {
		constructor(e$4, n$8) {
			super("YAMLSemanticError", e$4, n$8);
		}
	}, kn$4 = class extends ye$4 {
		constructor(e$4, n$8) {
			super("YAMLSyntaxError", e$4, n$8);
		}
	}, Pn$5 = class extends ye$4 {
		constructor(e$4, n$8) {
			super("YAMLWarning", e$4, n$8);
		}
	};
	function Lo$2(t$13, e$4, n$8) {
		return e$4 in t$13 ? Object.defineProperty(t$13, e$4, {
			value: n$8,
			enumerable: !0,
			configurable: !0,
			writable: !0
		}) : t$13[e$4] = n$8, t$13;
	}
	var In$5 = class t$13 extends se$3 {
		static endOfLine(e$4, n$8, r$12) {
			let s$8 = e$4[n$8], i$18 = n$8;
			for (; s$8 && s$8 !== `
` && !(r$12 && (s$8 === "[" || s$8 === "]" || s$8 === "{" || s$8 === "}" || s$8 === ","));) {
				let o$9 = e$4[i$18 + 1];
				if (s$8 === ":" && (!o$9 || o$9 === `
` || o$9 === "	" || o$9 === " " || r$12 && o$9 === ",") || (s$8 === " " || s$8 === "	") && o$9 === "#") break;
				i$18 += 1, s$8 = o$9;
			}
			return i$18;
		}
		get strValue() {
			if (!this.valueRange || !this.context) return null;
			let { start: e$4, end: n$8 } = this.valueRange, { src: r$12 } = this.context, s$8 = r$12[n$8 - 1];
			for (; e$4 < n$8 && (s$8 === `
` || s$8 === "	" || s$8 === " ");) s$8 = r$12[--n$8 - 1];
			let i$18 = "";
			for (let a$13 = e$4; a$13 < n$8; ++a$13) {
				let c$3 = r$12[a$13];
				if (c$3 === `
`) {
					let { fold: l$10, offset: f$3 } = se$3.foldNewline(r$12, a$13, -1);
					i$18 += l$10, a$13 = f$3;
				} else if (c$3 === " " || c$3 === "	") {
					let l$10 = a$13, f$3 = r$12[a$13 + 1];
					for (; a$13 < n$8 && (f$3 === " " || f$3 === "	");) a$13 += 1, f$3 = r$12[a$13 + 1];
					f$3 !== `
` && (i$18 += a$13 > l$10 ? r$12.slice(l$10, a$13 + 1) : c$3);
				} else i$18 += c$3;
			}
			let o$9 = r$12[e$4];
			switch (o$9) {
				case "	": return {
					errors: [new mt$5(this, "Plain value cannot start with a tab character")],
					str: i$18
				};
				case "@":
				case "`": {
					let a$13 = `Plain value cannot start with reserved character ${o$9}`;
					return {
						errors: [new mt$5(this, a$13)],
						str: i$18
					};
				}
				default: return i$18;
			}
		}
		parseBlockValue(e$4) {
			let { indent: n$8, inFlow: r$12, src: s$8 } = this.context, i$18 = e$4, o$9 = e$4;
			for (let a$13 = s$8[i$18]; a$13 === `
` && !se$3.atDocumentBoundary(s$8, i$18 + 1); a$13 = s$8[i$18]) {
				let c$3 = se$3.endOfBlockIndent(s$8, n$8, i$18 + 1);
				if (c$3 === null || s$8[c$3] === "#") break;
				s$8[c$3] === `
` ? i$18 = c$3 : (o$9 = t$13.endOfLine(s$8, c$3, r$12), i$18 = o$9);
			}
			return this.valueRange.isEmpty() && (this.valueRange.start = e$4), this.valueRange.end = o$9, o$9;
		}
		parse(e$4, n$8) {
			this.context = e$4;
			let { inFlow: r$12, src: s$8 } = e$4, i$18 = n$8, o$9 = s$8[i$18];
			return o$9 && o$9 !== "#" && o$9 !== `
` && (i$18 = t$13.endOfLine(s$8, n$8, r$12)), this.valueRange = new Be$4(n$8, i$18), i$18 = se$3.endOfWhiteSpace(s$8, i$18), i$18 = this.parseComment(i$18), (!this.hasComment || this.valueRange.isEmpty()) && (i$18 = this.parseBlockValue(i$18)), i$18;
		}
	};
	$$4.Char = re$5;
	$$4.Node = se$3;
	$$4.PlainValue = In$5;
	$$4.Range = Be$4;
	$$4.Type = pt$4;
	$$4.YAMLError = ye$4;
	$$4.YAMLReferenceError = Cn$5;
	$$4.YAMLSemanticError = mt$5;
	$$4.YAMLSyntaxError = kn$4;
	$$4.YAMLWarning = Pn$5;
	$$4._defineProperty = Lo$2;
	$$4.defaultTagPrefix = bo$3;
	$$4.defaultTags = No$3;
});
var ns = te$1((ts$3) => {
	var u$14 = oe$1(), Se$5 = class extends u$14.Node {
		constructor() {
			super(u$14.Type.BLANK_LINE);
		}
		get includesTrailingLines() {
			return !0;
		}
		parse(e$4, n$8) {
			return this.context = e$4, this.range = new u$14.Range(n$8, n$8 + 1), n$8 + 1;
		}
	}, ht$4 = class extends u$14.Node {
		constructor(e$4, n$8) {
			super(e$4, n$8), this.node = null;
		}
		get includesTrailingLines() {
			return !!this.node && this.node.includesTrailingLines;
		}
		parse(e$4, n$8) {
			this.context = e$4;
			let { parseNode: r$12, src: s$8 } = e$4, { atLineStart: i$18, lineStart: o$9 } = e$4;
			!i$18 && this.type === u$14.Type.SEQ_ITEM && (this.error = new u$14.YAMLSemanticError(this, "Sequence items must not have preceding content on the same line"));
			let a$13 = i$18 ? n$8 - o$9 : e$4.indent, c$3 = u$14.Node.endOfWhiteSpace(s$8, n$8 + 1), l$10 = s$8[c$3], f$3 = l$10 === "#", m$11 = [], d$14 = null;
			for (; l$10 === `
` || l$10 === "#";) {
				if (l$10 === "#") {
					let h$3 = u$14.Node.endOfLine(s$8, c$3 + 1);
					m$11.push(new u$14.Range(c$3, h$3)), c$3 = h$3;
				} else {
					i$18 = !0, o$9 = c$3 + 1;
					let h$3 = u$14.Node.endOfWhiteSpace(s$8, o$9);
					s$8[h$3] === `
` && m$11.length === 0 && (d$14 = new Se$5(), o$9 = d$14.parse({ src: s$8 }, o$9)), c$3 = u$14.Node.endOfIndent(s$8, o$9);
				}
				l$10 = s$8[c$3];
			}
			if (u$14.Node.nextNodeIsIndented(l$10, c$3 - (o$9 + a$13), this.type !== u$14.Type.SEQ_ITEM) ? this.node = r$12({
				atLineStart: i$18,
				inCollection: !1,
				indent: a$13,
				lineStart: o$9,
				parent: this
			}, c$3) : l$10 && o$9 > n$8 + 1 && (c$3 = o$9 - 1), this.node) {
				if (d$14) {
					let h$3 = e$4.parent.items || e$4.parent.contents;
					h$3 && h$3.push(d$14);
				}
				m$11.length && Array.prototype.push.apply(this.props, m$11), c$3 = this.node.range.end;
			} else if (f$3) {
				let h$3 = m$11[0];
				this.props.push(h$3), c$3 = h$3.end;
			} else c$3 = u$14.Node.endOfLine(s$8, n$8 + 1);
			let y$7 = this.node ? this.node.valueRange.end : c$3;
			return this.valueRange = new u$14.Range(n$8, y$7), c$3;
		}
		setOrigRanges(e$4, n$8) {
			return n$8 = super.setOrigRanges(e$4, n$8), this.node ? this.node.setOrigRanges(e$4, n$8) : n$8;
		}
		toString() {
			let { context: { src: e$4 }, node: n$8, range: r$12, value: s$8 } = this;
			if (s$8 != null) return s$8;
			let i$18 = n$8 ? e$4.slice(r$12.start, n$8.range.start) + String(n$8) : e$4.slice(r$12.start, r$12.end);
			return u$14.Node.addStringTerminator(e$4, r$12.end, i$18);
		}
	}, Ee$4 = class extends u$14.Node {
		constructor() {
			super(u$14.Type.COMMENT);
		}
		parse(e$4, n$8) {
			this.context = e$4;
			let r$12 = this.parseComment(n$8);
			return this.range = new u$14.Range(n$8, r$12), r$12;
		}
	};
	function vn$4(t$13) {
		let e$4 = t$13;
		for (; e$4 instanceof ht$4;) e$4 = e$4.node;
		if (!(e$4 instanceof xt$4)) return null;
		let n$8 = e$4.items.length, r$12 = -1;
		for (let o$9 = n$8 - 1; o$9 >= 0; --o$9) {
			let a$13 = e$4.items[o$9];
			if (a$13.type === u$14.Type.COMMENT) {
				let { indent: c$3, lineStart: l$10 } = a$13.context;
				if (c$3 > 0 && a$13.range.start >= l$10 + c$3) break;
				r$12 = o$9;
			} else if (a$13.type === u$14.Type.BLANK_LINE) r$12 = o$9;
			else break;
		}
		if (r$12 === -1) return null;
		let s$8 = e$4.items.splice(r$12, n$8 - r$12), i$18 = s$8[0].range.start;
		for (; e$4.range.end = i$18, e$4.valueRange && e$4.valueRange.end > i$18 && (e$4.valueRange.end = i$18), e$4 !== t$13;) e$4 = e$4.context.parent;
		return s$8;
	}
	var xt$4 = class t$13 extends u$14.Node {
		static nextContentHasIndent(e$4, n$8, r$12) {
			let s$8 = u$14.Node.endOfLine(e$4, n$8) + 1;
			n$8 = u$14.Node.endOfWhiteSpace(e$4, s$8);
			let i$18 = e$4[n$8];
			return i$18 ? n$8 >= s$8 + r$12 ? !0 : i$18 !== "#" && i$18 !== `
` ? !1 : t$13.nextContentHasIndent(e$4, n$8, r$12) : !1;
		}
		constructor(e$4) {
			super(e$4.type === u$14.Type.SEQ_ITEM ? u$14.Type.SEQ : u$14.Type.MAP);
			for (let r$12 = e$4.props.length - 1; r$12 >= 0; --r$12) if (e$4.props[r$12].start < e$4.context.lineStart) {
				this.props = e$4.props.slice(0, r$12 + 1), e$4.props = e$4.props.slice(r$12 + 1);
				let s$8 = e$4.props[0] || e$4.valueRange;
				e$4.range.start = s$8.start;
				break;
			}
			this.items = [e$4];
			let n$8 = vn$4(e$4);
			n$8 && Array.prototype.push.apply(this.items, n$8);
		}
		get includesTrailingLines() {
			return this.items.length > 0;
		}
		parse(e$4, n$8) {
			this.context = e$4;
			let { parseNode: r$12, src: s$8 } = e$4, i$18 = u$14.Node.startOfLine(s$8, n$8), o$9 = this.items[0];
			o$9.context.parent = this, this.valueRange = u$14.Range.copy(o$9.valueRange);
			let a$13 = o$9.range.start - o$9.context.lineStart, c$3 = n$8;
			c$3 = u$14.Node.normalizeOffset(s$8, c$3);
			let l$10 = s$8[c$3], f$3 = u$14.Node.endOfWhiteSpace(s$8, i$18) === c$3, m$11 = !1;
			for (; l$10;) {
				for (; l$10 === `
` || l$10 === "#";) {
					if (f$3 && l$10 === `
` && !m$11) {
						let h$3 = new Se$5();
						if (c$3 = h$3.parse({ src: s$8 }, c$3), this.valueRange.end = c$3, c$3 >= s$8.length) {
							l$10 = null;
							break;
						}
						this.items.push(h$3), c$3 -= 1;
					} else if (l$10 === "#") {
						if (c$3 < i$18 + a$13 && !t$13.nextContentHasIndent(s$8, c$3, a$13)) return c$3;
						let h$3 = new Ee$4();
						if (c$3 = h$3.parse({
							indent: a$13,
							lineStart: i$18,
							src: s$8
						}, c$3), this.items.push(h$3), this.valueRange.end = c$3, c$3 >= s$8.length) {
							l$10 = null;
							break;
						}
					}
					if (i$18 = c$3 + 1, c$3 = u$14.Node.endOfIndent(s$8, i$18), u$14.Node.atBlank(s$8, c$3)) {
						let h$3 = u$14.Node.endOfWhiteSpace(s$8, c$3), g$2 = s$8[h$3];
						(!g$2 || g$2 === `
` || g$2 === "#") && (c$3 = h$3);
					}
					l$10 = s$8[c$3], f$3 = !0;
				}
				if (!l$10) break;
				if (c$3 !== i$18 + a$13 && (f$3 || l$10 !== ":")) {
					if (c$3 < i$18 + a$13) {
						i$18 > n$8 && (c$3 = i$18);
						break;
					} else if (!this.error) this.error = new u$14.YAMLSyntaxError(this, "All collection items must start at the same column");
				}
				if (o$9.type === u$14.Type.SEQ_ITEM) {
					if (l$10 !== "-") {
						i$18 > n$8 && (c$3 = i$18);
						break;
					}
				} else if (l$10 === "-" && !this.error) {
					let h$3 = s$8[c$3 + 1];
					if (!h$3 || h$3 === `
` || h$3 === "	" || h$3 === " ") this.error = new u$14.YAMLSyntaxError(this, "A collection cannot be both a mapping and a sequence");
				}
				let d$14 = r$12({
					atLineStart: f$3,
					inCollection: !0,
					indent: a$13,
					lineStart: i$18,
					parent: this
				}, c$3);
				if (!d$14) return c$3;
				if (this.items.push(d$14), this.valueRange.end = d$14.valueRange.end, c$3 = u$14.Node.normalizeOffset(s$8, d$14.range.end), l$10 = s$8[c$3], f$3 = !1, m$11 = d$14.includesTrailingLines, l$10) {
					let h$3 = c$3 - 1, g$2 = s$8[h$3];
					for (; g$2 === " " || g$2 === "	";) g$2 = s$8[--h$3];
					g$2 === `
` && (i$18 = h$3 + 1, f$3 = !0);
				}
				let y$7 = vn$4(d$14);
				y$7 && Array.prototype.push.apply(this.items, y$7);
			}
			return c$3;
		}
		setOrigRanges(e$4, n$8) {
			return n$8 = super.setOrigRanges(e$4, n$8), this.items.forEach((r$12) => {
				n$8 = r$12.setOrigRanges(e$4, n$8);
			}), n$8;
		}
		toString() {
			let { context: { src: e$4 }, items: n$8, range: r$12, value: s$8 } = this;
			if (s$8 != null) return s$8;
			let i$18 = e$4.slice(r$12.start, n$8[0].range.start) + String(n$8[0]);
			for (let o$9 = 1; o$9 < n$8.length; ++o$9) {
				let a$13 = n$8[o$9], { atLineStart: c$3, indent: l$10 } = a$13.context;
				if (c$3) for (let f$3 = 0; f$3 < l$10; ++f$3) i$18 += " ";
				i$18 += String(a$13);
			}
			return u$14.Node.addStringTerminator(e$4, r$12.end, i$18);
		}
	}, _n$5 = class extends u$14.Node {
		constructor() {
			super(u$14.Type.DIRECTIVE), this.name = null;
		}
		get parameters() {
			let e$4 = this.rawValue;
			return e$4 ? e$4.trim().split(/[ \t]+/) : [];
		}
		parseName(e$4) {
			let { src: n$8 } = this.context, r$12 = e$4, s$8 = n$8[r$12];
			for (; s$8 && s$8 !== `
` && s$8 !== "	" && s$8 !== " ";) s$8 = n$8[r$12 += 1];
			return this.name = n$8.slice(e$4, r$12), r$12;
		}
		parseParameters(e$4) {
			let { src: n$8 } = this.context, r$12 = e$4, s$8 = n$8[r$12];
			for (; s$8 && s$8 !== `
` && s$8 !== "#";) s$8 = n$8[r$12 += 1];
			return this.valueRange = new u$14.Range(e$4, r$12), r$12;
		}
		parse(e$4, n$8) {
			this.context = e$4;
			let r$12 = this.parseName(n$8 + 1);
			return r$12 = this.parseParameters(r$12), r$12 = this.parseComment(r$12), this.range = new u$14.Range(n$8, r$12), r$12;
		}
	}, Rn$4 = class t$13 extends u$14.Node {
		static startCommentOrEndBlankLine(e$4, n$8) {
			let r$12 = u$14.Node.endOfWhiteSpace(e$4, n$8), s$8 = e$4[r$12];
			return s$8 === "#" || s$8 === `
` ? r$12 : n$8;
		}
		constructor() {
			super(u$14.Type.DOCUMENT), this.directives = null, this.contents = null, this.directivesEndMarker = null, this.documentEndMarker = null;
		}
		parseDirectives(e$4) {
			let { src: n$8 } = this.context;
			this.directives = [];
			let r$12 = !0, s$8 = !1, i$18 = e$4;
			for (; !u$14.Node.atDocumentBoundary(n$8, i$18, u$14.Char.DIRECTIVES_END);) switch (i$18 = t$13.startCommentOrEndBlankLine(n$8, i$18), n$8[i$18]) {
				case `
`:
					if (r$12) {
						let o$9 = new Se$5();
						i$18 = o$9.parse({ src: n$8 }, i$18), i$18 < n$8.length && this.directives.push(o$9);
					} else i$18 += 1, r$12 = !0;
					break;
				case "#":
					{
						let o$9 = new Ee$4();
						i$18 = o$9.parse({ src: n$8 }, i$18), this.directives.push(o$9), r$12 = !1;
					}
					break;
				case "%":
					{
						let o$9 = new _n$5();
						i$18 = o$9.parse({
							parent: this,
							src: n$8
						}, i$18), this.directives.push(o$9), s$8 = !0, r$12 = !1;
					}
					break;
				default: return s$8 ? this.error = new u$14.YAMLSemanticError(this, "Missing directives-end indicator line") : this.directives.length > 0 && (this.contents = this.directives, this.directives = []), i$18;
			}
			return n$8[i$18] ? (this.directivesEndMarker = new u$14.Range(i$18, i$18 + 3), i$18 + 3) : (s$8 ? this.error = new u$14.YAMLSemanticError(this, "Missing directives-end indicator line") : this.directives.length > 0 && (this.contents = this.directives, this.directives = []), i$18);
		}
		parseContents(e$4) {
			let { parseNode: n$8, src: r$12 } = this.context;
			this.contents || (this.contents = []);
			let s$8 = e$4;
			for (; r$12[s$8 - 1] === "-";) s$8 -= 1;
			let i$18 = u$14.Node.endOfWhiteSpace(r$12, e$4), o$9 = s$8 === e$4;
			for (this.valueRange = new u$14.Range(i$18); !u$14.Node.atDocumentBoundary(r$12, i$18, u$14.Char.DOCUMENT_END);) {
				switch (r$12[i$18]) {
					case `
`:
						if (o$9) {
							let a$13 = new Se$5();
							i$18 = a$13.parse({ src: r$12 }, i$18), i$18 < r$12.length && this.contents.push(a$13);
						} else i$18 += 1, o$9 = !0;
						s$8 = i$18;
						break;
					case "#":
						{
							let a$13 = new Ee$4();
							i$18 = a$13.parse({ src: r$12 }, i$18), this.contents.push(a$13), o$9 = !1;
						}
						break;
					default: {
						let a$13 = u$14.Node.endOfIndent(r$12, i$18), l$10 = n$8({
							atLineStart: o$9,
							indent: -1,
							inFlow: !1,
							inCollection: !1,
							lineStart: s$8,
							parent: this
						}, a$13);
						if (!l$10) return this.valueRange.end = a$13;
						this.contents.push(l$10), i$18 = l$10.range.end, o$9 = !1;
						let f$3 = vn$4(l$10);
						f$3 && Array.prototype.push.apply(this.contents, f$3);
					}
				}
				i$18 = t$13.startCommentOrEndBlankLine(r$12, i$18);
			}
			if (this.valueRange.end = i$18, r$12[i$18] && (this.documentEndMarker = new u$14.Range(i$18, i$18 + 3), i$18 += 3, r$12[i$18])) {
				if (i$18 = u$14.Node.endOfWhiteSpace(r$12, i$18), r$12[i$18] === "#") {
					let a$13 = new Ee$4();
					i$18 = a$13.parse({ src: r$12 }, i$18), this.contents.push(a$13);
				}
				switch (r$12[i$18]) {
					case `
`:
						i$18 += 1;
						break;
					case void 0: break;
					default: this.error = new u$14.YAMLSyntaxError(this, "Document end marker line cannot have a non-comment suffix");
				}
			}
			return i$18;
		}
		parse(e$4, n$8) {
			e$4.root = this, this.context = e$4;
			let { src: r$12 } = e$4, s$8 = r$12.charCodeAt(n$8) === 65279 ? n$8 + 1 : n$8;
			return s$8 = this.parseDirectives(s$8), s$8 = this.parseContents(s$8), s$8;
		}
		setOrigRanges(e$4, n$8) {
			return n$8 = super.setOrigRanges(e$4, n$8), this.directives.forEach((r$12) => {
				n$8 = r$12.setOrigRanges(e$4, n$8);
			}), this.directivesEndMarker && (n$8 = this.directivesEndMarker.setOrigRange(e$4, n$8)), this.contents.forEach((r$12) => {
				n$8 = r$12.setOrigRanges(e$4, n$8);
			}), this.documentEndMarker && (n$8 = this.documentEndMarker.setOrigRange(e$4, n$8)), n$8;
		}
		toString() {
			let { contents: e$4, directives: n$8, value: r$12 } = this;
			if (r$12 != null) return r$12;
			let s$8 = n$8.join("");
			return e$4.length > 0 && ((n$8.length > 0 || e$4[0].type === u$14.Type.COMMENT) && (s$8 += `---
`), s$8 += e$4.join("")), s$8[s$8.length - 1] !== `
` && (s$8 += `
`), s$8;
		}
	}, xn$3 = class extends u$14.Node {
		parse(e$4, n$8) {
			this.context = e$4;
			let { src: r$12 } = e$4, s$8 = u$14.Node.endOfIdentifier(r$12, n$8 + 1);
			return this.valueRange = new u$14.Range(n$8 + 1, s$8), s$8 = u$14.Node.endOfWhiteSpace(r$12, s$8), s$8 = this.parseComment(s$8), s$8;
		}
	}, ae$6 = {
		CLIP: "CLIP",
		KEEP: "KEEP",
		STRIP: "STRIP"
	}, Dn$5 = class extends u$14.Node {
		constructor(e$4, n$8) {
			super(e$4, n$8), this.blockIndent = null, this.chomping = ae$6.CLIP, this.header = null;
		}
		get includesTrailingLines() {
			return this.chomping === ae$6.KEEP;
		}
		get strValue() {
			if (!this.valueRange || !this.context) return null;
			let { start: e$4, end: n$8 } = this.valueRange, { indent: r$12, src: s$8 } = this.context;
			if (this.valueRange.isEmpty()) return "";
			let i$18 = null, o$9 = s$8[n$8 - 1];
			for (; o$9 === `
` || o$9 === "	" || o$9 === " ";) {
				if (n$8 -= 1, n$8 <= e$4) {
					if (this.chomping === ae$6.KEEP) break;
					return "";
				}
				o$9 === `
` && (i$18 = n$8), o$9 = s$8[n$8 - 1];
			}
			let a$13 = n$8 + 1;
			i$18 && (this.chomping === ae$6.KEEP ? (a$13 = i$18, n$8 = this.valueRange.end) : n$8 = i$18);
			let c$3 = r$12 + this.blockIndent, l$10 = this.type === u$14.Type.BLOCK_FOLDED, f$3 = !0, m$11 = "", d$14 = "", y$7 = !1;
			for (let h$3 = e$4; h$3 < n$8; ++h$3) {
				for (let w$3 = 0; w$3 < c$3 && s$8[h$3] === " "; ++w$3) h$3 += 1;
				let g$2 = s$8[h$3];
				if (g$2 === `
`) d$14 === `
` ? m$11 += `
` : d$14 = `
`;
				else {
					let w$3 = u$14.Node.endOfLine(s$8, h$3), M$2 = s$8.slice(h$3, w$3);
					h$3 = w$3, l$10 && (g$2 === " " || g$2 === "	") && h$3 < a$13 ? (d$14 === " " ? d$14 = `
` : !y$7 && !f$3 && d$14 === `
` && (d$14 = `

`), m$11 += d$14 + M$2, d$14 = w$3 < n$8 && s$8[w$3] || "", y$7 = !0) : (m$11 += d$14 + M$2, d$14 = l$10 && h$3 < a$13 ? " " : `
`, y$7 = !1), f$3 && M$2 !== "" && (f$3 = !1);
				}
			}
			return this.chomping === ae$6.STRIP ? m$11 : m$11 + `
`;
		}
		parseBlockHeader(e$4) {
			let { src: n$8 } = this.context, r$12 = e$4 + 1, s$8 = "";
			for (;;) {
				let i$18 = n$8[r$12];
				switch (i$18) {
					case "-":
						this.chomping = ae$6.STRIP;
						break;
					case "+":
						this.chomping = ae$6.KEEP;
						break;
					case "0":
					case "1":
					case "2":
					case "3":
					case "4":
					case "5":
					case "6":
					case "7":
					case "8":
					case "9":
						s$8 += i$18;
						break;
					default: return this.blockIndent = Number(s$8) || null, this.header = new u$14.Range(e$4, r$12), r$12;
				}
				r$12 += 1;
			}
		}
		parseBlockValue(e$4) {
			let { indent: n$8, src: r$12 } = this.context, s$8 = !!this.blockIndent, i$18 = e$4, o$9 = e$4, a$13 = 1;
			for (let c$3 = r$12[i$18]; c$3 === `
` && (i$18 += 1, !u$14.Node.atDocumentBoundary(r$12, i$18)); c$3 = r$12[i$18]) {
				let l$10 = u$14.Node.endOfBlockIndent(r$12, n$8, i$18);
				if (l$10 === null) break;
				let f$3 = r$12[l$10], m$11 = l$10 - (i$18 + n$8);
				if (this.blockIndent) {
					if (f$3 && f$3 !== `
` && m$11 < this.blockIndent) {
						if (r$12[l$10] === "#") break;
						if (!this.error) {
							let y$7 = `Block scalars must not be less indented than their ${s$8 ? "explicit indentation indicator" : "first line"}`;
							this.error = new u$14.YAMLSemanticError(this, y$7);
						}
					}
				} else if (r$12[l$10] !== `
`) {
					if (m$11 < a$13) this.error = new u$14.YAMLSemanticError(this, "Block scalars with more-indented leading empty lines must use an explicit indentation indicator");
					this.blockIndent = m$11;
				} else m$11 > a$13 && (a$13 = m$11);
				r$12[l$10] === `
` ? i$18 = l$10 : i$18 = o$9 = u$14.Node.endOfLine(r$12, l$10);
			}
			return this.chomping !== ae$6.KEEP && (i$18 = r$12[o$9] ? o$9 + 1 : o$9), this.valueRange = new u$14.Range(e$4 + 1, i$18), i$18;
		}
		parse(e$4, n$8) {
			this.context = e$4;
			let { src: r$12 } = e$4, s$8 = this.parseBlockHeader(n$8);
			return s$8 = u$14.Node.endOfWhiteSpace(r$12, s$8), s$8 = this.parseComment(s$8), s$8 = this.parseBlockValue(s$8), s$8;
		}
		setOrigRanges(e$4, n$8) {
			return n$8 = super.setOrigRanges(e$4, n$8), this.header ? this.header.setOrigRange(e$4, n$8) : n$8;
		}
	}, Yn$5 = class extends u$14.Node {
		constructor(e$4, n$8) {
			super(e$4, n$8), this.items = null;
		}
		prevNodeIsJsonLike(e$4 = this.items.length) {
			let n$8 = this.items[e$4 - 1];
			return !!n$8 && (n$8.jsonLike || n$8.type === u$14.Type.COMMENT && this.prevNodeIsJsonLike(e$4 - 1));
		}
		parse(e$4, n$8) {
			this.context = e$4;
			let { parseNode: r$12, src: s$8 } = e$4, { indent: i$18, lineStart: o$9 } = e$4, a$13 = s$8[n$8];
			this.items = [{
				char: a$13,
				offset: n$8
			}];
			let c$3 = u$14.Node.endOfWhiteSpace(s$8, n$8 + 1);
			for (a$13 = s$8[c$3]; a$13 && a$13 !== "]" && a$13 !== "}";) {
				switch (a$13) {
					case `
`:
						{
							o$9 = c$3 + 1;
							let l$10 = u$14.Node.endOfWhiteSpace(s$8, o$9);
							if (s$8[l$10] === `
`) {
								let f$3 = new Se$5();
								o$9 = f$3.parse({ src: s$8 }, o$9), this.items.push(f$3);
							}
							if (c$3 = u$14.Node.endOfIndent(s$8, o$9), c$3 <= o$9 + i$18 && (a$13 = s$8[c$3], c$3 < o$9 + i$18 || a$13 !== "]" && a$13 !== "}")) this.error = new u$14.YAMLSemanticError(this, "Insufficient indentation in flow collection");
						}
						break;
					case ",":
						this.items.push({
							char: a$13,
							offset: c$3
						}), c$3 += 1;
						break;
					case "#":
						{
							let l$10 = new Ee$4();
							c$3 = l$10.parse({ src: s$8 }, c$3), this.items.push(l$10);
						}
						break;
					case "?":
					case ":": {
						let l$10 = s$8[c$3 + 1];
						if (l$10 === `
` || l$10 === "	" || l$10 === " " || l$10 === "," || a$13 === ":" && this.prevNodeIsJsonLike()) {
							this.items.push({
								char: a$13,
								offset: c$3
							}), c$3 += 1;
							break;
						}
					}
					default: {
						let l$10 = r$12({
							atLineStart: !1,
							inCollection: !1,
							inFlow: !0,
							indent: -1,
							lineStart: o$9,
							parent: this
						}, c$3);
						if (!l$10) return this.valueRange = new u$14.Range(n$8, c$3), c$3;
						this.items.push(l$10), c$3 = u$14.Node.normalizeOffset(s$8, l$10.range.end);
					}
				}
				c$3 = u$14.Node.endOfWhiteSpace(s$8, c$3), a$13 = s$8[c$3];
			}
			return this.valueRange = new u$14.Range(n$8, c$3 + 1), a$13 && (this.items.push({
				char: a$13,
				offset: c$3
			}), c$3 = u$14.Node.endOfWhiteSpace(s$8, c$3 + 1), c$3 = this.parseComment(c$3)), c$3;
		}
		setOrigRanges(e$4, n$8) {
			return n$8 = super.setOrigRanges(e$4, n$8), this.items.forEach((r$12) => {
				if (r$12 instanceof u$14.Node) n$8 = r$12.setOrigRanges(e$4, n$8);
				else if (e$4.length === 0) r$12.origOffset = r$12.offset;
				else {
					let s$8 = n$8;
					for (; s$8 < e$4.length && !(e$4[s$8] > r$12.offset);) ++s$8;
					r$12.origOffset = r$12.offset + s$8, n$8 = s$8;
				}
			}), n$8;
		}
		toString() {
			let { context: { src: e$4 }, items: n$8, range: r$12, value: s$8 } = this;
			if (s$8 != null) return s$8;
			let i$18 = n$8.filter((c$3) => c$3 instanceof u$14.Node), o$9 = "", a$13 = r$12.start;
			return i$18.forEach((c$3) => {
				let l$10 = e$4.slice(a$13, c$3.range.start);
				a$13 = c$3.range.end, o$9 += l$10 + String(c$3), o$9[o$9.length - 1] === `
` && e$4[a$13 - 1] !== `
` && e$4[a$13] === `
` && (a$13 += 1);
			}), o$9 += e$4.slice(a$13, r$12.end), u$14.Node.addStringTerminator(e$4, r$12.end, o$9);
		}
	}, $n$5 = class t$13 extends u$14.Node {
		static endOfQuote(e$4, n$8) {
			let r$12 = e$4[n$8];
			for (; r$12 && r$12 !== "\"";) n$8 += r$12 === "\\" ? 2 : 1, r$12 = e$4[n$8];
			return n$8 + 1;
		}
		get strValue() {
			if (!this.valueRange || !this.context) return null;
			let e$4 = [], { start: n$8, end: r$12 } = this.valueRange, { indent: s$8, src: i$18 } = this.context;
			i$18[r$12 - 1] !== "\"" && e$4.push(new u$14.YAMLSyntaxError(this, "Missing closing \"quote"));
			let o$9 = "";
			for (let a$13 = n$8 + 1; a$13 < r$12 - 1; ++a$13) {
				let c$3 = i$18[a$13];
				if (c$3 === `
`) {
					u$14.Node.atDocumentBoundary(i$18, a$13 + 1) && e$4.push(new u$14.YAMLSemanticError(this, "Document boundary indicators are not allowed within string values"));
					let { fold: l$10, offset: f$3, error: m$11 } = u$14.Node.foldNewline(i$18, a$13, s$8);
					o$9 += l$10, a$13 = f$3, m$11 && e$4.push(new u$14.YAMLSemanticError(this, "Multi-line double-quoted string needs to be sufficiently indented"));
				} else if (c$3 === "\\") switch (a$13 += 1, i$18[a$13]) {
					case "0":
						o$9 += "\0";
						break;
					case "a":
						o$9 += "\x07";
						break;
					case "b":
						o$9 += "\b";
						break;
					case "e":
						o$9 += "\x1B";
						break;
					case "f":
						o$9 += "\f";
						break;
					case "n":
						o$9 += `
`;
						break;
					case "r":
						o$9 += "\r";
						break;
					case "t":
						o$9 += "	";
						break;
					case "v":
						o$9 += "\v";
						break;
					case "N":
						o$9 += "";
						break;
					case "_":
						o$9 += "\xA0";
						break;
					case "L":
						o$9 += "\u2028";
						break;
					case "P":
						o$9 += "\u2029";
						break;
					case " ":
						o$9 += " ";
						break;
					case "\"":
						o$9 += "\"";
						break;
					case "/":
						o$9 += "/";
						break;
					case "\\":
						o$9 += "\\";
						break;
					case "	":
						o$9 += "	";
						break;
					case "x":
						o$9 += this.parseCharCode(a$13 + 1, 2, e$4), a$13 += 2;
						break;
					case "u":
						o$9 += this.parseCharCode(a$13 + 1, 4, e$4), a$13 += 4;
						break;
					case "U":
						o$9 += this.parseCharCode(a$13 + 1, 8, e$4), a$13 += 8;
						break;
					case `
`:
						for (; i$18[a$13 + 1] === " " || i$18[a$13 + 1] === "	";) a$13 += 1;
						break;
					default: e$4.push(new u$14.YAMLSyntaxError(this, `Invalid escape sequence ${i$18.substr(a$13 - 1, 2)}`)), o$9 += "\\" + i$18[a$13];
				}
				else if (c$3 === " " || c$3 === "	") {
					let l$10 = a$13, f$3 = i$18[a$13 + 1];
					for (; f$3 === " " || f$3 === "	";) a$13 += 1, f$3 = i$18[a$13 + 1];
					f$3 !== `
` && (o$9 += a$13 > l$10 ? i$18.slice(l$10, a$13 + 1) : c$3);
				} else o$9 += c$3;
			}
			return e$4.length > 0 ? {
				errors: e$4,
				str: o$9
			} : o$9;
		}
		parseCharCode(e$4, n$8, r$12) {
			let { src: s$8 } = this.context, i$18 = s$8.substr(e$4, n$8), a$13 = i$18.length === n$8 && /^[0-9a-fA-F]+$/.test(i$18) ? parseInt(i$18, 16) : NaN;
			return isNaN(a$13) ? (r$12.push(new u$14.YAMLSyntaxError(this, `Invalid escape sequence ${s$8.substr(e$4 - 2, n$8 + 2)}`)), s$8.substr(e$4 - 2, n$8 + 2)) : String.fromCodePoint(a$13);
		}
		parse(e$4, n$8) {
			this.context = e$4;
			let { src: r$12 } = e$4, s$8 = t$13.endOfQuote(r$12, n$8 + 1);
			return this.valueRange = new u$14.Range(n$8, s$8), s$8 = u$14.Node.endOfWhiteSpace(r$12, s$8), s$8 = this.parseComment(s$8), s$8;
		}
	}, Bn$5 = class t$13 extends u$14.Node {
		static endOfQuote(e$4, n$8) {
			let r$12 = e$4[n$8];
			for (; r$12;) if (r$12 === "'") {
				if (e$4[n$8 + 1] !== "'") break;
				r$12 = e$4[n$8 += 2];
			} else r$12 = e$4[n$8 += 1];
			return n$8 + 1;
		}
		get strValue() {
			if (!this.valueRange || !this.context) return null;
			let e$4 = [], { start: n$8, end: r$12 } = this.valueRange, { indent: s$8, src: i$18 } = this.context;
			i$18[r$12 - 1] !== "'" && e$4.push(new u$14.YAMLSyntaxError(this, "Missing closing 'quote"));
			let o$9 = "";
			for (let a$13 = n$8 + 1; a$13 < r$12 - 1; ++a$13) {
				let c$3 = i$18[a$13];
				if (c$3 === `
`) {
					u$14.Node.atDocumentBoundary(i$18, a$13 + 1) && e$4.push(new u$14.YAMLSemanticError(this, "Document boundary indicators are not allowed within string values"));
					let { fold: l$10, offset: f$3, error: m$11 } = u$14.Node.foldNewline(i$18, a$13, s$8);
					o$9 += l$10, a$13 = f$3, m$11 && e$4.push(new u$14.YAMLSemanticError(this, "Multi-line single-quoted string needs to be sufficiently indented"));
				} else if (c$3 === "'") o$9 += c$3, a$13 += 1, i$18[a$13] !== "'" && e$4.push(new u$14.YAMLSyntaxError(this, "Unescaped single quote? This should not happen."));
				else if (c$3 === " " || c$3 === "	") {
					let l$10 = a$13, f$3 = i$18[a$13 + 1];
					for (; f$3 === " " || f$3 === "	";) a$13 += 1, f$3 = i$18[a$13 + 1];
					f$3 !== `
` && (o$9 += a$13 > l$10 ? i$18.slice(l$10, a$13 + 1) : c$3);
				} else o$9 += c$3;
			}
			return e$4.length > 0 ? {
				errors: e$4,
				str: o$9
			} : o$9;
		}
		parse(e$4, n$8) {
			this.context = e$4;
			let { src: r$12 } = e$4, s$8 = t$13.endOfQuote(r$12, n$8 + 1);
			return this.valueRange = new u$14.Range(n$8, s$8), s$8 = u$14.Node.endOfWhiteSpace(r$12, s$8), s$8 = this.parseComment(s$8), s$8;
		}
	};
	function To$3(t$13, e$4) {
		switch (t$13) {
			case u$14.Type.ALIAS: return new xn$3(t$13, e$4);
			case u$14.Type.BLOCK_FOLDED:
			case u$14.Type.BLOCK_LITERAL: return new Dn$5(t$13, e$4);
			case u$14.Type.FLOW_MAP:
			case u$14.Type.FLOW_SEQ: return new Yn$5(t$13, e$4);
			case u$14.Type.MAP_KEY:
			case u$14.Type.MAP_VALUE:
			case u$14.Type.SEQ_ITEM: return new ht$4(t$13, e$4);
			case u$14.Type.COMMENT:
			case u$14.Type.PLAIN: return new u$14.PlainValue(t$13, e$4);
			case u$14.Type.QUOTE_DOUBLE: return new $n$5(t$13, e$4);
			case u$14.Type.QUOTE_SINGLE: return new Bn$5(t$13, e$4);
			default: return null;
		}
	}
	var Fn$4 = class t$13 {
		static parseType(e$4, n$8, r$12) {
			switch (e$4[n$8]) {
				case "*": return u$14.Type.ALIAS;
				case ">": return u$14.Type.BLOCK_FOLDED;
				case "|": return u$14.Type.BLOCK_LITERAL;
				case "{": return u$14.Type.FLOW_MAP;
				case "[": return u$14.Type.FLOW_SEQ;
				case "?": return !r$12 && u$14.Node.atBlank(e$4, n$8 + 1, !0) ? u$14.Type.MAP_KEY : u$14.Type.PLAIN;
				case ":": return !r$12 && u$14.Node.atBlank(e$4, n$8 + 1, !0) ? u$14.Type.MAP_VALUE : u$14.Type.PLAIN;
				case "-": return !r$12 && u$14.Node.atBlank(e$4, n$8 + 1, !0) ? u$14.Type.SEQ_ITEM : u$14.Type.PLAIN;
				case "\"": return u$14.Type.QUOTE_DOUBLE;
				case "'": return u$14.Type.QUOTE_SINGLE;
				default: return u$14.Type.PLAIN;
			}
		}
		constructor(e$4 = {}, { atLineStart: n$8, inCollection: r$12, inFlow: s$8, indent: i$18, lineStart: o$9, parent: a$13 } = {}) {
			u$14._defineProperty(this, "parseNode", (c$3, l$10) => {
				if (u$14.Node.atDocumentBoundary(this.src, l$10)) return null;
				let f$3 = new t$13(this, c$3), { props: m$11, type: d$14, valueStart: y$7 } = f$3.parseProps(l$10), h$3 = To$3(d$14, m$11), g$2 = h$3.parse(f$3, y$7);
				if (h$3.range = new u$14.Range(l$10, g$2), g$2 <= l$10 && (h$3.error = /* @__PURE__ */ new Error("Node#parse consumed no characters"), h$3.error.parseEnd = g$2, h$3.error.source = h$3, h$3.range.end = l$10 + 1), f$3.nodeStartsCollection(h$3)) {
					!h$3.error && !f$3.atLineStart && f$3.parent.type === u$14.Type.DOCUMENT && (h$3.error = new u$14.YAMLSyntaxError(h$3, "Block collection must not have preceding content here (e.g. directives-end indicator)"));
					let w$3 = new xt$4(h$3);
					return g$2 = w$3.parse(new t$13(f$3), g$2), w$3.range = new u$14.Range(l$10, g$2), w$3;
				}
				return h$3;
			}), this.atLineStart = n$8 ?? (e$4.atLineStart || !1), this.inCollection = r$12 ?? (e$4.inCollection || !1), this.inFlow = s$8 ?? (e$4.inFlow || !1), this.indent = i$18 ?? e$4.indent, this.lineStart = o$9 ?? e$4.lineStart, this.parent = a$13 ?? (e$4.parent || {}), this.root = e$4.root, this.src = e$4.src;
		}
		nodeStartsCollection(e$4) {
			let { inCollection: n$8, inFlow: r$12, src: s$8 } = this;
			if (n$8 || r$12) return !1;
			if (e$4 instanceof ht$4) return !0;
			let i$18 = e$4.range.end;
			return s$8[i$18] === `
` || s$8[i$18 - 1] === `
` ? !1 : (i$18 = u$14.Node.endOfWhiteSpace(s$8, i$18), s$8[i$18] === ":");
		}
		parseProps(e$4) {
			let { inFlow: n$8, parent: r$12, src: s$8 } = this, i$18 = [], o$9 = !1;
			e$4 = this.atLineStart ? u$14.Node.endOfIndent(s$8, e$4) : u$14.Node.endOfWhiteSpace(s$8, e$4);
			let a$13 = s$8[e$4];
			for (; a$13 === u$14.Char.ANCHOR || a$13 === u$14.Char.COMMENT || a$13 === u$14.Char.TAG || a$13 === `
`;) {
				if (a$13 === `
`) {
					let l$10 = e$4, f$3;
					do
						f$3 = l$10 + 1, l$10 = u$14.Node.endOfIndent(s$8, f$3);
					while (s$8[l$10] === `
`);
					let m$11 = l$10 - (f$3 + this.indent), d$14 = r$12.type === u$14.Type.SEQ_ITEM && r$12.context.atLineStart;
					if (s$8[l$10] !== "#" && !u$14.Node.nextNodeIsIndented(s$8[l$10], m$11, !d$14)) break;
					this.atLineStart = !0, this.lineStart = f$3, o$9 = !1, e$4 = l$10;
				} else if (a$13 === u$14.Char.COMMENT) {
					let l$10 = u$14.Node.endOfLine(s$8, e$4 + 1);
					i$18.push(new u$14.Range(e$4, l$10)), e$4 = l$10;
				} else {
					let l$10 = u$14.Node.endOfIdentifier(s$8, e$4 + 1);
					a$13 === u$14.Char.TAG && s$8[l$10] === "," && /^[a-zA-Z0-9-]+\.[a-zA-Z0-9-]+,\d\d\d\d(-\d\d){0,2}\/\S/.test(s$8.slice(e$4 + 1, l$10 + 13)) && (l$10 = u$14.Node.endOfIdentifier(s$8, l$10 + 5)), i$18.push(new u$14.Range(e$4, l$10)), o$9 = !0, e$4 = u$14.Node.endOfWhiteSpace(s$8, l$10);
				}
				a$13 = s$8[e$4];
			}
			o$9 && a$13 === ":" && u$14.Node.atBlank(s$8, e$4 + 1, !0) && (e$4 -= 1);
			let c$3 = t$13.parseType(s$8, e$4, n$8);
			return {
				props: i$18,
				type: c$3,
				valueStart: e$4
			};
		}
	};
	function Mo$3(t$13) {
		let e$4 = [];
		t$13.indexOf("\r") !== -1 && (t$13 = t$13.replace(/\r\n?/g, (s$8, i$18) => (s$8.length > 1 && e$4.push(i$18), `
`)));
		let n$8 = [], r$12 = 0;
		do {
			let s$8 = new Rn$4(), i$18 = new Fn$4({ src: t$13 });
			r$12 = s$8.parse(i$18, r$12), n$8.push(s$8);
		} while (r$12 < t$13.length);
		return n$8.setOrigRanges = () => {
			if (e$4.length === 0) return !1;
			for (let i$18 = 1; i$18 < e$4.length; ++i$18) e$4[i$18] -= i$18;
			let s$8 = 0;
			for (let i$18 = 0; i$18 < n$8.length; ++i$18) s$8 = n$8[i$18].setOrigRanges(e$4, s$8);
			return e$4.splice(0, e$4.length), !0;
		}, n$8.toString = () => n$8.join(`...
`), n$8;
	}
	ts$3.parse = Mo$3;
});
var qe$1 = te$1((k$5) => {
	var p$2 = oe$1();
	function Co$1(t$13, e$4, n$8) {
		return n$8 ? `#${n$8.replace(/[\s\S]^/gm, `$&${e$4}#`)}
${e$4}${t$13}` : t$13;
	}
	function Fe$4(t$13, e$4, n$8) {
		return n$8 ? n$8.indexOf(`
`) === -1 ? `${t$13} #${n$8}` : `${t$13}
` + n$8.replace(/^/gm, `${e$4 || ""}#`) : t$13;
	}
	var j$7 = class {};
	function ce$4(t$13, e$4, n$8) {
		if (Array.isArray(t$13)) return t$13.map((r$12, s$8) => ce$4(r$12, String(s$8), n$8));
		if (t$13 && typeof t$13.toJSON == "function") {
			let r$12 = n$8 && n$8.anchors && n$8.anchors.get(t$13);
			r$12 && (n$8.onCreate = (i$18) => {
				r$12.res = i$18, delete n$8.onCreate;
			});
			let s$8 = t$13.toJSON(e$4, n$8);
			return r$12 && n$8.onCreate && n$8.onCreate(s$8), s$8;
		}
		return (!n$8 || !n$8.keep) && typeof t$13 == "bigint" ? Number(t$13) : t$13;
	}
	var _$2 = class extends j$7 {
		constructor(e$4) {
			super(), this.value = e$4;
		}
		toJSON(e$4, n$8) {
			return n$8 && n$8.keep ? this.value : ce$4(this.value, e$4, n$8);
		}
		toString() {
			return String(this.value);
		}
	};
	function rs$3(t$13, e$4, n$8) {
		let r$12 = n$8;
		for (let s$8 = e$4.length - 1; s$8 >= 0; --s$8) {
			let i$18 = e$4[s$8];
			if (Number.isInteger(i$18) && i$18 >= 0) {
				let o$9 = [];
				o$9[i$18] = r$12, r$12 = o$9;
			} else {
				let o$9 = {};
				Object.defineProperty(o$9, i$18, {
					value: r$12,
					writable: !0,
					enumerable: !0,
					configurable: !0
				}), r$12 = o$9;
			}
		}
		return t$13.createNode(r$12, !1);
	}
	var os$4 = (t$13) => t$13 == null || typeof t$13 == "object" && t$13[Symbol.iterator]().next().done, W$2 = class t$13 extends j$7 {
		constructor(e$4) {
			super(), p$2._defineProperty(this, "items", []), this.schema = e$4;
		}
		addIn(e$4, n$8) {
			if (os$4(e$4)) this.add(n$8);
			else {
				let [r$12, ...s$8] = e$4, i$18 = this.get(r$12, !0);
				if (i$18 instanceof t$13) i$18.addIn(s$8, n$8);
				else if (i$18 === void 0 && this.schema) this.set(r$12, rs$3(this.schema, s$8, n$8));
				else throw new Error(`Expected YAML collection at ${r$12}. Remaining path: ${s$8}`);
			}
		}
		deleteIn([e$4, ...n$8]) {
			if (n$8.length === 0) return this.delete(e$4);
			let r$12 = this.get(e$4, !0);
			if (r$12 instanceof t$13) return r$12.deleteIn(n$8);
			throw new Error(`Expected YAML collection at ${e$4}. Remaining path: ${n$8}`);
		}
		getIn([e$4, ...n$8], r$12) {
			let s$8 = this.get(e$4, !0);
			return n$8.length === 0 ? !r$12 && s$8 instanceof _$2 ? s$8.value : s$8 : s$8 instanceof t$13 ? s$8.getIn(n$8, r$12) : void 0;
		}
		hasAllNullValues() {
			return this.items.every((e$4) => {
				if (!e$4 || e$4.type !== "PAIR") return !1;
				let n$8 = e$4.value;
				return n$8 == null || n$8 instanceof _$2 && n$8.value == null && !n$8.commentBefore && !n$8.comment && !n$8.tag;
			});
		}
		hasIn([e$4, ...n$8]) {
			if (n$8.length === 0) return this.has(e$4);
			let r$12 = this.get(e$4, !0);
			return r$12 instanceof t$13 ? r$12.hasIn(n$8) : !1;
		}
		setIn([e$4, ...n$8], r$12) {
			if (n$8.length === 0) this.set(e$4, r$12);
			else {
				let s$8 = this.get(e$4, !0);
				if (s$8 instanceof t$13) s$8.setIn(n$8, r$12);
				else if (s$8 === void 0 && this.schema) this.set(e$4, rs$3(this.schema, n$8, r$12));
				else throw new Error(`Expected YAML collection at ${e$4}. Remaining path: ${n$8}`);
			}
		}
		toJSON() {
			return null;
		}
		toString(e$4, { blockItem: n$8, flowChars: r$12, isMap: s$8, itemIndent: i$18 }, o$9, a$13) {
			let { indent: c$3, indentStep: l$10, stringify: f$3 } = e$4, m$11 = this.type === p$2.Type.FLOW_MAP || this.type === p$2.Type.FLOW_SEQ || e$4.inFlow;
			m$11 && (i$18 += l$10);
			let d$14 = s$8 && this.hasAllNullValues();
			e$4 = Object.assign({}, e$4, {
				allNullValues: d$14,
				indent: i$18,
				inFlow: m$11,
				type: null
			});
			let y$7 = !1, h$3 = !1, g$2 = this.items.reduce((M$2, A$3, C$3) => {
				let L$4;
				A$3 && (!y$7 && A$3.spaceBefore && M$2.push({
					type: "comment",
					str: ""
				}), A$3.commentBefore && A$3.commentBefore.match(/^.*$/gm).forEach((Di$3) => {
					M$2.push({
						type: "comment",
						str: `#${Di$3}`
					});
				}), A$3.comment && (L$4 = A$3.comment), m$11 && (!y$7 && A$3.spaceBefore || A$3.commentBefore || A$3.comment || A$3.key && (A$3.key.commentBefore || A$3.key.comment) || A$3.value && (A$3.value.commentBefore || A$3.value.comment)) && (h$3 = !0)), y$7 = !1;
				let R$6 = f$3(A$3, e$4, () => L$4 = null, () => y$7 = !0);
				return m$11 && !h$3 && R$6.includes(`
`) && (h$3 = !0), m$11 && C$3 < this.items.length - 1 && (R$6 += ","), R$6 = Fe$4(R$6, i$18, L$4), y$7 && (L$4 || m$11) && (y$7 = !1), M$2.push({
					type: "item",
					str: R$6
				}), M$2;
			}, []), w$3;
			if (g$2.length === 0) w$3 = r$12.start + r$12.end;
			else if (m$11) {
				let { start: M$2, end: A$3 } = r$12, C$3 = g$2.map((L$4) => L$4.str);
				if (h$3 || C$3.reduce((L$4, R$6) => L$4 + R$6.length + 2, 2) > t$13.maxFlowStringSingleLineLength) {
					w$3 = M$2;
					for (let L$4 of C$3) w$3 += L$4 ? `
${l$10}${c$3}${L$4}` : `
`;
					w$3 += `
${c$3}${A$3}`;
				} else w$3 = `${M$2} ${C$3.join(" ")} ${A$3}`;
			} else {
				let M$2 = g$2.map(n$8);
				w$3 = M$2.shift();
				for (let A$3 of M$2) w$3 += A$3 ? `
${c$3}${A$3}` : `
`;
			}
			return this.comment ? (w$3 += `
` + this.comment.replace(/^/gm, `${c$3}#`), o$9 && o$9()) : y$7 && a$13 && a$13(), w$3;
		}
	};
	p$2._defineProperty(W$2, "maxFlowStringSingleLineLength", 60);
	function Dt$6(t$13) {
		let e$4 = t$13 instanceof _$2 ? t$13.value : t$13;
		return e$4 && typeof e$4 == "string" && (e$4 = Number(e$4)), Number.isInteger(e$4) && e$4 >= 0 ? e$4 : null;
	}
	var le$7 = class extends W$2 {
		add(e$4) {
			this.items.push(e$4);
		}
		delete(e$4) {
			let n$8 = Dt$6(e$4);
			return typeof n$8 != "number" ? !1 : this.items.splice(n$8, 1).length > 0;
		}
		get(e$4, n$8) {
			let r$12 = Dt$6(e$4);
			if (typeof r$12 != "number") return;
			let s$8 = this.items[r$12];
			return !n$8 && s$8 instanceof _$2 ? s$8.value : s$8;
		}
		has(e$4) {
			let n$8 = Dt$6(e$4);
			return typeof n$8 == "number" && n$8 < this.items.length;
		}
		set(e$4, n$8) {
			let r$12 = Dt$6(e$4);
			if (typeof r$12 != "number") throw new Error(`Expected a valid index, not ${e$4}.`);
			this.items[r$12] = n$8;
		}
		toJSON(e$4, n$8) {
			let r$12 = [];
			n$8 && n$8.onCreate && n$8.onCreate(r$12);
			let s$8 = 0;
			for (let i$18 of this.items) r$12.push(ce$4(i$18, String(s$8++), n$8));
			return r$12;
		}
		toString(e$4, n$8, r$12) {
			return e$4 ? super.toString(e$4, {
				blockItem: (s$8) => s$8.type === "comment" ? s$8.str : `- ${s$8.str}`,
				flowChars: {
					start: "[",
					end: "]"
				},
				isMap: !1,
				itemIndent: (e$4.indent || "") + "  "
			}, n$8, r$12) : JSON.stringify(this);
		}
	}, ko$2 = (t$13, e$4, n$8) => e$4 === null ? "" : typeof e$4 != "object" ? String(e$4) : t$13 instanceof j$7 && n$8 && n$8.doc ? t$13.toString({
		anchors: Object.create(null),
		doc: n$8.doc,
		indent: "",
		indentStep: n$8.indentStep,
		inFlow: !0,
		inStringifyKey: !0,
		stringify: n$8.stringify
	}) : JSON.stringify(e$4), T$9 = class t$13 extends j$7 {
		constructor(e$4, n$8 = null) {
			super(), this.key = e$4, this.value = n$8, this.type = t$13.Type.PAIR;
		}
		get commentBefore() {
			return this.key instanceof j$7 ? this.key.commentBefore : void 0;
		}
		set commentBefore(e$4) {
			if (this.key ??= new _$2(null), this.key instanceof j$7) this.key.commentBefore = e$4;
			else throw new Error("Pair.commentBefore is an alias for Pair.key.commentBefore. To set it, the key must be a Node.");
		}
		addToJSMap(e$4, n$8) {
			let r$12 = ce$4(this.key, "", e$4);
			if (n$8 instanceof Map) {
				let s$8 = ce$4(this.value, r$12, e$4);
				n$8.set(r$12, s$8);
			} else if (n$8 instanceof Set) n$8.add(r$12);
			else {
				let s$8 = ko$2(this.key, r$12, e$4), i$18 = ce$4(this.value, s$8, e$4);
				s$8 in n$8 ? Object.defineProperty(n$8, s$8, {
					value: i$18,
					writable: !0,
					enumerable: !0,
					configurable: !0
				}) : n$8[s$8] = i$18;
			}
			return n$8;
		}
		toJSON(e$4, n$8) {
			let r$12 = n$8 && n$8.mapAsMap ? /* @__PURE__ */ new Map() : {};
			return this.addToJSMap(n$8, r$12);
		}
		toString(e$4, n$8, r$12) {
			if (!e$4 || !e$4.doc) return JSON.stringify(this);
			let { indent: s$8, indentSeq: i$18, simpleKeys: o$9 } = e$4.doc.options, { key: a$13, value: c$3 } = this, l$10 = a$13 instanceof j$7 && a$13.comment;
			if (o$9) {
				if (l$10) throw new Error("With simple keys, key nodes cannot have comments");
				if (a$13 instanceof W$2) throw new Error("With simple keys, collection cannot be used as a key value");
			}
			let f$3 = !o$9 && (!a$13 || l$10 || (a$13 instanceof j$7 ? a$13 instanceof W$2 || a$13.type === p$2.Type.BLOCK_FOLDED || a$13.type === p$2.Type.BLOCK_LITERAL : typeof a$13 == "object")), { doc: m$11, indent: d$14, indentStep: y$7, stringify: h$3 } = e$4;
			e$4 = Object.assign({}, e$4, {
				implicitKey: !f$3,
				indent: d$14 + y$7
			});
			let g$2 = !1, w$3 = h$3(a$13, e$4, () => l$10 = null, () => g$2 = !0);
			if (w$3 = Fe$4(w$3, e$4.indent, l$10), !f$3 && w$3.length > 1024) {
				if (o$9) throw new Error("With simple keys, single line scalar must not span more than 1024 characters");
				f$3 = !0;
			}
			if (e$4.allNullValues && !o$9) return this.comment ? (w$3 = Fe$4(w$3, e$4.indent, this.comment), n$8 && n$8()) : g$2 && !l$10 && r$12 && r$12(), e$4.inFlow && !f$3 ? w$3 : `? ${w$3}`;
			w$3 = f$3 ? `? ${w$3}
${d$14}:` : `${w$3}:`, this.comment && (w$3 = Fe$4(w$3, e$4.indent, this.comment), n$8 && n$8());
			let M$2 = "", A$3 = null;
			if (c$3 instanceof j$7) {
				if (c$3.spaceBefore && (M$2 = `
`), c$3.commentBefore) {
					let R$6 = c$3.commentBefore.replace(/^/gm, `${e$4.indent}#`);
					M$2 += `
${R$6}`;
				}
				A$3 = c$3.comment;
			} else c$3 && typeof c$3 == "object" && (c$3 = m$11.schema.createNode(c$3, !0));
			e$4.implicitKey = !1, !f$3 && !this.comment && c$3 instanceof _$2 && (e$4.indentAtStart = w$3.length + 1), g$2 = !1, !i$18 && s$8 >= 2 && !e$4.inFlow && !f$3 && c$3 instanceof le$7 && c$3.type !== p$2.Type.FLOW_SEQ && !c$3.tag && !m$11.anchors.getName(c$3) && (e$4.indent = e$4.indent.substr(2));
			let C$3 = h$3(c$3, e$4, () => A$3 = null, () => g$2 = !0), L$4 = " ";
			return M$2 || this.comment ? L$4 = `${M$2}
${e$4.indent}` : !f$3 && c$3 instanceof W$2 ? (!(C$3[0] === "[" || C$3[0] === "{") || C$3.includes(`
`)) && (L$4 = `
${e$4.indent}`) : C$3[0] === `
` && (L$4 = ""), g$2 && !A$3 && r$12 && r$12(), Fe$4(w$3 + L$4 + C$3, e$4.indent, A$3);
		}
	};
	p$2._defineProperty(T$9, "Type", {
		PAIR: "PAIR",
		MERGE_PAIR: "MERGE_PAIR"
	});
	var Yt$4 = (t$13, e$4) => {
		if (t$13 instanceof be$5) {
			let n$8 = e$4.get(t$13.source);
			return n$8.count * n$8.aliasCount;
		} else if (t$13 instanceof W$2) {
			let n$8 = 0;
			for (let r$12 of t$13.items) {
				let s$8 = Yt$4(r$12, e$4);
				s$8 > n$8 && (n$8 = s$8);
			}
			return n$8;
		} else if (t$13 instanceof T$9) {
			let n$8 = Yt$4(t$13.key, e$4), r$12 = Yt$4(t$13.value, e$4);
			return Math.max(n$8, r$12);
		}
		return 1;
	}, be$5 = class t$13 extends j$7 {
		static stringify({ range: e$4, source: n$8 }, { anchors: r$12, doc: s$8, implicitKey: i$18, inStringifyKey: o$9 }) {
			let a$13 = Object.keys(r$12).find((l$10) => r$12[l$10] === n$8);
			if (!a$13 && o$9 && (a$13 = s$8.anchors.getName(n$8) || s$8.anchors.newName()), a$13) return `*${a$13}${i$18 ? " " : ""}`;
			let c$3 = s$8.anchors.getName(n$8) ? "Alias node must be after source node" : "Source node not found for alias node";
			throw new Error(`${c$3} [${e$4}]`);
		}
		constructor(e$4) {
			super(), this.source = e$4, this.type = p$2.Type.ALIAS;
		}
		set tag(e$4) {
			throw new Error("Alias nodes cannot have tags");
		}
		toJSON(e$4, n$8) {
			if (!n$8) return ce$4(this.source, e$4, n$8);
			let { anchors: r$12, maxAliasCount: s$8 } = n$8, i$18 = r$12.get(this.source);
			if (!i$18 || i$18.res === void 0) {
				let o$9 = "This should not happen: Alias anchor was not resolved?";
				throw this.cstNode ? new p$2.YAMLReferenceError(this.cstNode, o$9) : new ReferenceError(o$9);
			}
			if (s$8 >= 0 && (i$18.count += 1, i$18.aliasCount === 0 && (i$18.aliasCount = Yt$4(this.source, r$12)), i$18.count * i$18.aliasCount > s$8)) {
				let o$9 = "Excessive alias count indicates a resource exhaustion attack";
				throw this.cstNode ? new p$2.YAMLReferenceError(this.cstNode, o$9) : new ReferenceError(o$9);
			}
			return i$18.res;
		}
		toString(e$4) {
			return t$13.stringify(this, e$4);
		}
	};
	p$2._defineProperty(be$5, "default", !0);
	function gt$6(t$13, e$4) {
		let n$8 = e$4 instanceof _$2 ? e$4.value : e$4;
		for (let r$12 of t$13) if (r$12 instanceof T$9 && (r$12.key === e$4 || r$12.key === n$8 || r$12.key && r$12.key.value === n$8)) return r$12;
	}
	var dt$3 = class extends W$2 {
		add(e$4, n$8) {
			e$4 ? e$4 instanceof T$9 || (e$4 = new T$9(e$4.key || e$4, e$4.value)) : e$4 = new T$9(e$4);
			let r$12 = gt$6(this.items, e$4.key), s$8 = this.schema && this.schema.sortMapEntries;
			if (r$12) if (n$8) r$12.value = e$4.value;
			else throw new Error(`Key ${e$4.key} already set`);
			else if (s$8) {
				let i$18 = this.items.findIndex((o$9) => s$8(e$4, o$9) < 0);
				i$18 === -1 ? this.items.push(e$4) : this.items.splice(i$18, 0, e$4);
			} else this.items.push(e$4);
		}
		delete(e$4) {
			let n$8 = gt$6(this.items, e$4);
			return n$8 ? this.items.splice(this.items.indexOf(n$8), 1).length > 0 : !1;
		}
		get(e$4, n$8) {
			let r$12 = gt$6(this.items, e$4), s$8 = r$12 && r$12.value;
			return !n$8 && s$8 instanceof _$2 ? s$8.value : s$8;
		}
		has(e$4) {
			return !!gt$6(this.items, e$4);
		}
		set(e$4, n$8) {
			this.add(new T$9(e$4, n$8), !0);
		}
		toJSON(e$4, n$8, r$12) {
			let s$8 = r$12 ? new r$12() : n$8 && n$8.mapAsMap ? /* @__PURE__ */ new Map() : {};
			n$8 && n$8.onCreate && n$8.onCreate(s$8);
			for (let i$18 of this.items) i$18.addToJSMap(n$8, s$8);
			return s$8;
		}
		toString(e$4, n$8, r$12) {
			if (!e$4) return JSON.stringify(this);
			for (let s$8 of this.items) if (!(s$8 instanceof T$9)) throw new Error(`Map items must all be pairs; found ${JSON.stringify(s$8)} instead`);
			return super.toString(e$4, {
				blockItem: (s$8) => s$8.str,
				flowChars: {
					start: "{",
					end: "}"
				},
				isMap: !0,
				itemIndent: e$4.indent || ""
			}, n$8, r$12);
		}
	}, as$2 = "<<", Ft$4 = class extends T$9 {
		constructor(e$4) {
			if (e$4 instanceof T$9) {
				let n$8 = e$4.value;
				n$8 instanceof le$7 || (n$8 = new le$7(), n$8.items.push(e$4.value), n$8.range = e$4.value.range), super(e$4.key, n$8), this.range = e$4.range;
			} else super(new _$2(as$2), new le$7());
			this.type = T$9.Type.MERGE_PAIR;
		}
		addToJSMap(e$4, n$8) {
			for (let { source: r$12 } of this.value.items) {
				if (!(r$12 instanceof dt$3)) throw new Error("Merge sources must be maps");
				let s$8 = r$12.toJSON(null, e$4, Map);
				for (let [i$18, o$9] of s$8) n$8 instanceof Map ? n$8.has(i$18) || n$8.set(i$18, o$9) : n$8 instanceof Set ? n$8.add(i$18) : Object.prototype.hasOwnProperty.call(n$8, i$18) || Object.defineProperty(n$8, i$18, {
					value: o$9,
					writable: !0,
					enumerable: !0,
					configurable: !0
				});
			}
			return n$8;
		}
		toString(e$4, n$8) {
			let r$12 = this.value;
			if (r$12.items.length > 1) return super.toString(e$4, n$8);
			this.value = r$12.items[0];
			let s$8 = super.toString(e$4, n$8);
			return this.value = r$12, s$8;
		}
	}, Po$2 = {
		defaultType: p$2.Type.BLOCK_LITERAL,
		lineWidth: 76
	}, Io$4 = {
		trueStr: "true",
		falseStr: "false"
	}, vo$4 = { asBigInt: !1 }, _o$2 = { nullStr: "null" }, Ne$5 = {
		defaultType: p$2.Type.PLAIN,
		doubleQuoted: {
			jsonEncoding: !1,
			minMultiLineLength: 40
		},
		fold: {
			lineWidth: 80,
			minContentWidth: 20
		}
	};
	function Un$6(t$13, e$4, n$8) {
		for (let { format: r$12, test: s$8, resolve: i$18 } of e$4) if (s$8) {
			let o$9 = t$13.match(s$8);
			if (o$9) {
				let a$13 = i$18.apply(null, o$9);
				return a$13 instanceof _$2 || (a$13 = new _$2(a$13)), r$12 && (a$13.format = r$12), a$13;
			}
		}
		return n$8 && (t$13 = n$8(t$13)), new _$2(t$13);
	}
	var cs$2 = "flow", qn$5 = "block", $t$4 = "quoted", ss$3 = (t$13, e$4) => {
		let n$8 = t$13[e$4 + 1];
		for (; n$8 === " " || n$8 === "	";) {
			do
				n$8 = t$13[e$4 += 1];
			while (n$8 && n$8 !== `
`);
			n$8 = t$13[e$4 + 1];
		}
		return e$4;
	};
	function qt$5(t$13, e$4, n$8, { indentAtStart: r$12, lineWidth: s$8 = 80, minContentWidth: i$18 = 20, onFold: o$9, onOverflow: a$13 }) {
		if (!s$8 || s$8 < 0) return t$13;
		let c$3 = Math.max(1 + i$18, 1 + s$8 - e$4.length);
		if (t$13.length <= c$3) return t$13;
		let l$10 = [], f$3 = {}, m$11 = s$8 - e$4.length;
		typeof r$12 == "number" && (r$12 > s$8 - Math.max(2, i$18) ? l$10.push(0) : m$11 = s$8 - r$12);
		let d$14, y$7, h$3 = !1, g$2 = -1, w$3 = -1, M$2 = -1;
		n$8 === qn$5 && (g$2 = ss$3(t$13, g$2), g$2 !== -1 && (m$11 = g$2 + c$3));
		for (let C$3; C$3 = t$13[g$2 += 1];) {
			if (n$8 === $t$4 && C$3 === "\\") {
				switch (w$3 = g$2, t$13[g$2 + 1]) {
					case "x":
						g$2 += 3;
						break;
					case "u":
						g$2 += 5;
						break;
					case "U":
						g$2 += 9;
						break;
					default: g$2 += 1;
				}
				M$2 = g$2;
			}
			if (C$3 === `
`) n$8 === qn$5 && (g$2 = ss$3(t$13, g$2)), m$11 = g$2 + c$3, d$14 = void 0;
			else {
				if (C$3 === " " && y$7 && y$7 !== " " && y$7 !== `
` && y$7 !== "	") {
					let L$4 = t$13[g$2 + 1];
					L$4 && L$4 !== " " && L$4 !== `
` && L$4 !== "	" && (d$14 = g$2);
				}
				if (g$2 >= m$11) if (d$14) l$10.push(d$14), m$11 = d$14 + c$3, d$14 = void 0;
				else if (n$8 === $t$4) {
					for (; y$7 === " " || y$7 === "	";) y$7 = C$3, C$3 = t$13[g$2 += 1], h$3 = !0;
					let L$4 = g$2 > M$2 + 1 ? g$2 - 2 : w$3 - 1;
					if (f$3[L$4]) return t$13;
					l$10.push(L$4), f$3[L$4] = !0, m$11 = L$4 + c$3, d$14 = void 0;
				} else h$3 = !0;
			}
			y$7 = C$3;
		}
		if (h$3 && a$13 && a$13(), l$10.length === 0) return t$13;
		o$9 && o$9();
		let A$3 = t$13.slice(0, l$10[0]);
		for (let C$3 = 0; C$3 < l$10.length; ++C$3) {
			let L$4 = l$10[C$3], R$6 = l$10[C$3 + 1] || t$13.length;
			L$4 === 0 ? A$3 = `
${e$4}${t$13.slice(0, R$6)}` : (n$8 === $t$4 && f$3[L$4] && (A$3 += `${t$13[L$4]}\\`), A$3 += `
${e$4}${t$13.slice(L$4 + 1, R$6)}`);
		}
		return A$3;
	}
	var Kn$5 = ({ indentAtStart: t$13 }) => t$13 ? Object.assign({ indentAtStart: t$13 }, Ne$5.fold) : Ne$5.fold, Ut$4 = (t$13) => /^(%|---|\.\.\.)/m.test(t$13);
	function Ro$5(t$13, e$4, n$8) {
		if (!e$4 || e$4 < 0) return !1;
		let r$12 = e$4 - n$8, s$8 = t$13.length;
		if (s$8 <= r$12) return !1;
		for (let i$18 = 0, o$9 = 0; i$18 < s$8; ++i$18) if (t$13[i$18] === `
`) {
			if (i$18 - o$9 > r$12) return !0;
			if (o$9 = i$18 + 1, s$8 - o$9 <= r$12) return !1;
		}
		return !0;
	}
	function we$3(t$13, e$4) {
		let { implicitKey: n$8 } = e$4, { jsonEncoding: r$12, minMultiLineLength: s$8 } = Ne$5.doubleQuoted, i$18 = JSON.stringify(t$13);
		if (r$12) return i$18;
		let o$9 = e$4.indent || (Ut$4(t$13) ? "  " : ""), a$13 = "", c$3 = 0;
		for (let l$10 = 0, f$3 = i$18[l$10]; f$3; f$3 = i$18[++l$10]) if (f$3 === " " && i$18[l$10 + 1] === "\\" && i$18[l$10 + 2] === "n" && (a$13 += i$18.slice(c$3, l$10) + "\\ ", l$10 += 1, c$3 = l$10, f$3 = "\\"), f$3 === "\\") switch (i$18[l$10 + 1]) {
			case "u":
				{
					a$13 += i$18.slice(c$3, l$10);
					let m$11 = i$18.substr(l$10 + 2, 4);
					switch (m$11) {
						case "0000":
							a$13 += "\\0";
							break;
						case "0007":
							a$13 += "\\a";
							break;
						case "000b":
							a$13 += "\\v";
							break;
						case "001b":
							a$13 += "\\e";
							break;
						case "0085":
							a$13 += "\\N";
							break;
						case "00a0":
							a$13 += "\\_";
							break;
						case "2028":
							a$13 += "\\L";
							break;
						case "2029":
							a$13 += "\\P";
							break;
						default: m$11.substr(0, 2) === "00" ? a$13 += "\\x" + m$11.substr(2) : a$13 += i$18.substr(l$10, 6);
					}
					l$10 += 5, c$3 = l$10 + 1;
				}
				break;
			case "n":
				if (n$8 || i$18[l$10 + 2] === "\"" || i$18.length < s$8) l$10 += 1;
				else {
					for (a$13 += i$18.slice(c$3, l$10) + `

`; i$18[l$10 + 2] === "\\" && i$18[l$10 + 3] === "n" && i$18[l$10 + 4] !== "\"";) a$13 += `
`, l$10 += 2;
					a$13 += o$9, i$18[l$10 + 2] === " " && (a$13 += "\\"), l$10 += 1, c$3 = l$10 + 1;
				}
				break;
			default: l$10 += 1;
		}
		return a$13 = c$3 ? a$13 + i$18.slice(c$3) : i$18, n$8 ? a$13 : qt$5(a$13, o$9, $t$4, Kn$5(e$4));
	}
	function ls$3(t$13, e$4) {
		if (e$4.implicitKey) {
			if (/\n/.test(t$13)) return we$3(t$13, e$4);
		} else if (/[ \t]\n|\n[ \t]/.test(t$13)) return we$3(t$13, e$4);
		let n$8 = e$4.indent || (Ut$4(t$13) ? "  " : ""), r$12 = "'" + t$13.replace(/'/g, "''").replace(/\n+/g, `$&
${n$8}`) + "'";
		return e$4.implicitKey ? r$12 : qt$5(r$12, n$8, cs$2, Kn$5(e$4));
	}
	function Bt$5({ comment: t$13, type: e$4, value: n$8 }, r$12, s$8, i$18) {
		if (/\n[\t ]+$/.test(n$8) || /^\s*$/.test(n$8)) return we$3(n$8, r$12);
		let o$9 = r$12.indent || (r$12.forceBlockIndent || Ut$4(n$8) ? "  " : ""), a$13 = o$9 ? "2" : "1", c$3 = e$4 === p$2.Type.BLOCK_FOLDED ? !1 : e$4 === p$2.Type.BLOCK_LITERAL ? !0 : !Ro$5(n$8, Ne$5.fold.lineWidth, o$9.length), l$10 = c$3 ? "|" : ">";
		if (!n$8) return l$10 + `
`;
		let f$3 = "", m$11 = "";
		if (n$8 = n$8.replace(/[\n\t ]*$/, (y$7) => {
			let h$3 = y$7.indexOf(`
`);
			return h$3 === -1 ? l$10 += "-" : (n$8 === y$7 || h$3 !== y$7.length - 1) && (l$10 += "+", i$18 && i$18()), m$11 = y$7.replace(/\n$/, ""), "";
		}).replace(/^[\n ]*/, (y$7) => {
			y$7.indexOf(" ") !== -1 && (l$10 += a$13);
			let h$3 = y$7.match(/ +$/);
			return h$3 ? (f$3 = y$7.slice(0, -h$3[0].length), h$3[0]) : (f$3 = y$7, "");
		}), m$11 && (m$11 = m$11.replace(/\n+(?!\n|$)/g, `$&${o$9}`)), f$3 && (f$3 = f$3.replace(/\n+/g, `$&${o$9}`)), t$13 && (l$10 += " #" + t$13.replace(/ ?[\r\n]+/g, " "), s$8 && s$8()), !n$8) return `${l$10}${a$13}
${o$9}${m$11}`;
		if (c$3) return n$8 = n$8.replace(/\n+/g, `$&${o$9}`), `${l$10}
${o$9}${f$3}${n$8}${m$11}`;
		n$8 = n$8.replace(/\n+/g, `
$&`).replace(/(?:^|\n)([\t ].*)(?:([\n\t ]*)\n(?![\n\t ]))?/g, "$1$2").replace(/\n+/g, `$&${o$9}`);
		let d$14 = qt$5(`${f$3}${n$8}${m$11}`, o$9, qn$5, Ne$5.fold);
		return `${l$10}
${o$9}${d$14}`;
	}
	function xo$2(t$13, e$4, n$8, r$12) {
		let { comment: s$8, type: i$18, value: o$9 } = t$13, { actualString: a$13, implicitKey: c$3, indent: l$10, inFlow: f$3 } = e$4;
		if (c$3 && /[\n[\]{},]/.test(o$9) || f$3 && /[[\]{},]/.test(o$9)) return we$3(o$9, e$4);
		if (!o$9 || /^[\n\t ,[\]{}#&*!|>'"%@`]|^[?-]$|^[?-][ \t]|[\n:][ \t]|[ \t]\n|[\n\t ]#|[\n\t :]$/.test(o$9)) return c$3 || f$3 || o$9.indexOf(`
`) === -1 ? o$9.indexOf("\"") !== -1 && o$9.indexOf("'") === -1 ? ls$3(o$9, e$4) : we$3(o$9, e$4) : Bt$5(t$13, e$4, n$8, r$12);
		if (!c$3 && !f$3 && i$18 !== p$2.Type.PLAIN && o$9.indexOf(`
`) !== -1) return Bt$5(t$13, e$4, n$8, r$12);
		if (l$10 === "" && Ut$4(o$9)) return e$4.forceBlockIndent = !0, Bt$5(t$13, e$4, n$8, r$12);
		let m$11 = o$9.replace(/\n+/g, `$&
${l$10}`);
		if (a$13) {
			let { tags: y$7 } = e$4.doc.schema;
			if (typeof Un$6(m$11, y$7, y$7.scalarFallback).value != "string") return we$3(o$9, e$4);
		}
		let d$14 = c$3 ? m$11 : qt$5(m$11, l$10, cs$2, Kn$5(e$4));
		return s$8 && !f$3 && (d$14.indexOf(`
`) !== -1 || s$8.indexOf(`
`) !== -1) ? (n$8 && n$8(), Co$1(d$14, l$10, s$8)) : d$14;
	}
	function Do$2(t$13, e$4, n$8, r$12) {
		let { defaultType: s$8 } = Ne$5, { implicitKey: i$18, inFlow: o$9 } = e$4, { type: a$13, value: c$3 } = t$13;
		typeof c$3 != "string" && (c$3 = String(c$3), t$13 = Object.assign({}, t$13, { value: c$3 }));
		let l$10 = (m$11) => {
			switch (m$11) {
				case p$2.Type.BLOCK_FOLDED:
				case p$2.Type.BLOCK_LITERAL: return Bt$5(t$13, e$4, n$8, r$12);
				case p$2.Type.QUOTE_DOUBLE: return we$3(c$3, e$4);
				case p$2.Type.QUOTE_SINGLE: return ls$3(c$3, e$4);
				case p$2.Type.PLAIN: return xo$2(t$13, e$4, n$8, r$12);
				default: return null;
			}
		};
		(a$13 !== p$2.Type.QUOTE_DOUBLE && /[\x00-\x08\x0b-\x1f\x7f-\x9f]/.test(c$3) || (i$18 || o$9) && (a$13 === p$2.Type.BLOCK_FOLDED || a$13 === p$2.Type.BLOCK_LITERAL)) && (a$13 = p$2.Type.QUOTE_DOUBLE);
		let f$3 = l$10(a$13);
		if (f$3 === null && (f$3 = l$10(s$8), f$3 === null)) throw new Error(`Unsupported default string type ${s$8}`);
		return f$3;
	}
	function Yo$3({ format: t$13, minFractionDigits: e$4, tag: n$8, value: r$12 }) {
		if (typeof r$12 == "bigint") return String(r$12);
		if (!isFinite(r$12)) return isNaN(r$12) ? ".nan" : r$12 < 0 ? "-.inf" : ".inf";
		let s$8 = JSON.stringify(r$12);
		if (!t$13 && e$4 && (!n$8 || n$8 === "tag:yaml.org,2002:float") && /^\d/.test(s$8)) {
			let i$18 = s$8.indexOf(".");
			i$18 < 0 && (i$18 = s$8.length, s$8 += ".");
			let o$9 = e$4 - (s$8.length - i$18 - 1);
			for (; o$9-- > 0;) s$8 += "0";
		}
		return s$8;
	}
	function fs$3(t$13, e$4) {
		let n$8, r$12;
		switch (e$4.type) {
			case p$2.Type.FLOW_MAP:
				n$8 = "}", r$12 = "flow map";
				break;
			case p$2.Type.FLOW_SEQ:
				n$8 = "]", r$12 = "flow sequence";
				break;
			default:
				t$13.push(new p$2.YAMLSemanticError(e$4, "Not a flow collection!?"));
				return;
		}
		let s$8;
		for (let i$18 = e$4.items.length - 1; i$18 >= 0; --i$18) {
			let o$9 = e$4.items[i$18];
			if (!o$9 || o$9.type !== p$2.Type.COMMENT) {
				s$8 = o$9;
				break;
			}
		}
		if (s$8 && s$8.char !== n$8) {
			let i$18 = `Expected ${r$12} to end with ${n$8}`, o$9;
			typeof s$8.offset == "number" ? (o$9 = new p$2.YAMLSemanticError(e$4, i$18), o$9.offset = s$8.offset + 1) : (o$9 = new p$2.YAMLSemanticError(s$8, i$18), s$8.range && s$8.range.end && (o$9.offset = s$8.range.end - s$8.range.start)), t$13.push(o$9);
		}
	}
	function us$2(t$13, e$4) {
		let n$8 = e$4.context.src[e$4.range.start - 1];
		if (n$8 !== `
` && n$8 !== "	" && n$8 !== " ") t$13.push(new p$2.YAMLSemanticError(e$4, "Comments must be separated from other tokens by white space characters"));
	}
	function ps$3(t$13, e$4) {
		let n$8 = String(e$4), r$12 = n$8.substr(0, 8) + "..." + n$8.substr(-8);
		return new p$2.YAMLSemanticError(t$13, `The "${r$12}" key is too long`);
	}
	function ms$2(t$13, e$4) {
		for (let { afterKey: n$8, before: r$12, comment: s$8 } of e$4) {
			let i$18 = t$13.items[r$12];
			i$18 ? (n$8 && i$18.value && (i$18 = i$18.value), s$8 === void 0 ? (n$8 || !i$18.commentBefore) && (i$18.spaceBefore = !0) : i$18.commentBefore ? i$18.commentBefore += `
` + s$8 : i$18.commentBefore = s$8) : s$8 !== void 0 && (t$13.comment ? t$13.comment += `
` + s$8 : t$13.comment = s$8);
		}
	}
	function Vn$5(t$13, e$4) {
		let n$8 = e$4.strValue;
		return n$8 ? typeof n$8 == "string" ? n$8 : (n$8.errors.forEach((r$12) => {
			r$12.source || (r$12.source = e$4), t$13.errors.push(r$12);
		}), n$8.str) : "";
	}
	function $o$3(t$13, e$4) {
		let { handle: n$8, suffix: r$12 } = e$4.tag, s$8 = t$13.tagPrefixes.find((i$18) => i$18.handle === n$8);
		if (!s$8) {
			let i$18 = t$13.getDefaults().tagPrefixes;
			if (i$18 && (s$8 = i$18.find((o$9) => o$9.handle === n$8)), !s$8) throw new p$2.YAMLSemanticError(e$4, `The ${n$8} tag handle is non-default and was not declared.`);
		}
		if (!r$12) throw new p$2.YAMLSemanticError(e$4, `The ${n$8} tag has no suffix.`);
		if (n$8 === "!" && (t$13.version || t$13.options.version) === "1.0") {
			if (r$12[0] === "^") return t$13.warnings.push(new p$2.YAMLWarning(e$4, "YAML 1.0 ^ tag expansion is not supported")), r$12;
			if (/[:/]/.test(r$12)) {
				let i$18 = r$12.match(/^([a-z0-9-]+)\/(.*)/i);
				return i$18 ? `tag:${i$18[1]}.yaml.org,2002:${i$18[2]}` : `tag:${r$12}`;
			}
		}
		return s$8.prefix + decodeURIComponent(r$12);
	}
	function Bo$3(t$13, e$4) {
		let { tag: n$8, type: r$12 } = e$4, s$8 = !1;
		if (n$8) {
			let { handle: i$18, suffix: o$9, verbatim: a$13 } = n$8;
			if (a$13) {
				if (a$13 !== "!" && a$13 !== "!!") return a$13;
				let c$3 = `Verbatim tags aren't resolved, so ${a$13} is invalid.`;
				t$13.errors.push(new p$2.YAMLSemanticError(e$4, c$3));
			} else if (i$18 === "!" && !o$9) s$8 = !0;
			else try {
				return $o$3(t$13, e$4);
			} catch (c$3) {
				t$13.errors.push(c$3);
			}
		}
		switch (r$12) {
			case p$2.Type.BLOCK_FOLDED:
			case p$2.Type.BLOCK_LITERAL:
			case p$2.Type.QUOTE_DOUBLE:
			case p$2.Type.QUOTE_SINGLE: return p$2.defaultTags.STR;
			case p$2.Type.FLOW_MAP:
			case p$2.Type.MAP: return p$2.defaultTags.MAP;
			case p$2.Type.FLOW_SEQ:
			case p$2.Type.SEQ: return p$2.defaultTags.SEQ;
			case p$2.Type.PLAIN: return s$8 ? p$2.defaultTags.STR : null;
			default: return null;
		}
	}
	function is$2(t$13, e$4, n$8) {
		let { tags: r$12 } = t$13.schema, s$8 = [];
		for (let o$9 of r$12) if (o$9.tag === n$8) if (o$9.test) s$8.push(o$9);
		else {
			let a$13 = o$9.resolve(t$13, e$4);
			return a$13 instanceof W$2 ? a$13 : new _$2(a$13);
		}
		let i$18 = Vn$5(t$13, e$4);
		return typeof i$18 == "string" && s$8.length > 0 ? Un$6(i$18, s$8, r$12.scalarFallback) : null;
	}
	function Fo$2({ type: t$13 }) {
		switch (t$13) {
			case p$2.Type.FLOW_MAP:
			case p$2.Type.MAP: return p$2.defaultTags.MAP;
			case p$2.Type.FLOW_SEQ:
			case p$2.Type.SEQ: return p$2.defaultTags.SEQ;
			default: return p$2.defaultTags.STR;
		}
	}
	function qo$3(t$13, e$4, n$8) {
		try {
			let r$12 = is$2(t$13, e$4, n$8);
			if (r$12) return n$8 && e$4.tag && (r$12.tag = n$8), r$12;
		} catch (r$12) {
			return r$12.source || (r$12.source = e$4), t$13.errors.push(r$12), null;
		}
		try {
			let r$12 = Fo$2(e$4);
			if (!r$12) throw new Error(`The tag ${n$8} is unavailable`);
			let s$8 = `The tag ${n$8} is unavailable, falling back to ${r$12}`;
			t$13.warnings.push(new p$2.YAMLWarning(e$4, s$8));
			let i$18 = is$2(t$13, e$4, r$12);
			return i$18.tag = n$8, i$18;
		} catch (r$12) {
			let s$8 = new p$2.YAMLReferenceError(e$4, r$12.message);
			return s$8.stack = r$12.stack, t$13.errors.push(s$8), null;
		}
	}
	var Uo$3 = (t$13) => {
		if (!t$13) return !1;
		let { type: e$4 } = t$13;
		return e$4 === p$2.Type.MAP_KEY || e$4 === p$2.Type.MAP_VALUE || e$4 === p$2.Type.SEQ_ITEM;
	};
	function Ko$5(t$13, e$4) {
		let n$8 = {
			before: [],
			after: []
		}, r$12 = !1, s$8 = !1, i$18 = Uo$3(e$4.context.parent) ? e$4.context.parent.props.concat(e$4.props) : e$4.props;
		for (let { start: o$9, end: a$13 } of i$18) switch (e$4.context.src[o$9]) {
			case p$2.Char.COMMENT: {
				if (!e$4.commentHasRequiredWhitespace(o$9)) t$13.push(new p$2.YAMLSemanticError(e$4, "Comments must be separated from other tokens by white space characters"));
				let { header: c$3, valueRange: l$10 } = e$4;
				(l$10 && (o$9 > l$10.start || c$3 && o$9 > c$3.start) ? n$8.after : n$8.before).push(e$4.context.src.slice(o$9 + 1, a$13));
				break;
			}
			case p$2.Char.ANCHOR:
				if (r$12) t$13.push(new p$2.YAMLSemanticError(e$4, "A node can have at most one anchor"));
				r$12 = !0;
				break;
			case p$2.Char.TAG:
				if (s$8) t$13.push(new p$2.YAMLSemanticError(e$4, "A node can have at most one tag"));
				s$8 = !0;
				break;
		}
		return {
			comments: n$8,
			hasAnchor: r$12,
			hasTag: s$8
		};
	}
	function Vo$4(t$13, e$4) {
		let { anchors: n$8, errors: r$12, schema: s$8 } = t$13;
		if (e$4.type === p$2.Type.ALIAS) {
			let o$9 = e$4.rawValue, a$13 = n$8.getNode(o$9);
			if (!a$13) {
				let l$10 = `Aliased anchor not found: ${o$9}`;
				return r$12.push(new p$2.YAMLReferenceError(e$4, l$10)), null;
			}
			let c$3 = new be$5(a$13);
			return n$8._cstAliases.push(c$3), c$3;
		}
		let i$18 = Bo$3(t$13, e$4);
		if (i$18) return qo$3(t$13, e$4, i$18);
		if (e$4.type !== p$2.Type.PLAIN) {
			let o$9 = `Failed to resolve ${e$4.type} node here`;
			return r$12.push(new p$2.YAMLSyntaxError(e$4, o$9)), null;
		}
		try {
			let o$9 = Vn$5(t$13, e$4);
			return Un$6(o$9, s$8.tags, s$8.tags.scalarFallback);
		} catch (o$9) {
			return o$9.source || (o$9.source = e$4), r$12.push(o$9), null;
		}
	}
	function fe$4(t$13, e$4) {
		if (!e$4) return null;
		e$4.error && t$13.errors.push(e$4.error);
		let { comments: n$8, hasAnchor: r$12, hasTag: s$8 } = Ko$5(t$13.errors, e$4);
		if (r$12) {
			let { anchors: o$9 } = t$13, a$13 = e$4.anchor, c$3 = o$9.getNode(a$13);
			c$3 && (o$9.map[o$9.newName(a$13)] = c$3), o$9.map[a$13] = e$4;
		}
		if (e$4.type === p$2.Type.ALIAS && (r$12 || s$8)) t$13.errors.push(new p$2.YAMLSemanticError(e$4, "An alias node must not specify any properties"));
		let i$18 = Vo$4(t$13, e$4);
		if (i$18) {
			i$18.range = [e$4.range.start, e$4.range.end], t$13.options.keepCstNodes && (i$18.cstNode = e$4), t$13.options.keepNodeTypes && (i$18.type = e$4.type);
			let o$9 = n$8.before.join(`
`);
			o$9 && (i$18.commentBefore = i$18.commentBefore ? `${i$18.commentBefore}
${o$9}` : o$9);
			let a$13 = n$8.after.join(`
`);
			a$13 && (i$18.comment = i$18.comment ? `${i$18.comment}
${a$13}` : a$13);
		}
		return e$4.resolved = i$18;
	}
	function jo$3(t$13, e$4) {
		if (e$4.type !== p$2.Type.MAP && e$4.type !== p$2.Type.FLOW_MAP) {
			let o$9 = `A ${e$4.type} node cannot be resolved as a mapping`;
			return t$13.errors.push(new p$2.YAMLSyntaxError(e$4, o$9)), null;
		}
		let { comments: n$8, items: r$12 } = e$4.type === p$2.Type.FLOW_MAP ? Ho$3(t$13, e$4) : Go$3(t$13, e$4), s$8 = new dt$3();
		s$8.items = r$12, ms$2(s$8, n$8);
		let i$18 = !1;
		for (let o$9 = 0; o$9 < r$12.length; ++o$9) {
			let { key: a$13 } = r$12[o$9];
			if (a$13 instanceof W$2 && (i$18 = !0), t$13.schema.merge && a$13 && a$13.value === as$2) {
				r$12[o$9] = new Ft$4(r$12[o$9]);
				let c$3 = r$12[o$9].value.items, l$10 = null;
				c$3.some((f$3) => {
					if (f$3 instanceof be$5) {
						let { type: m$11 } = f$3.source;
						return m$11 === p$2.Type.MAP || m$11 === p$2.Type.FLOW_MAP ? !1 : l$10 = "Merge nodes aliases can only point to maps";
					}
					return l$10 = "Merge nodes can only have Alias nodes as values";
				}), l$10 && t$13.errors.push(new p$2.YAMLSemanticError(e$4, l$10));
			} else for (let c$3 = o$9 + 1; c$3 < r$12.length; ++c$3) {
				let { key: l$10 } = r$12[c$3];
				if (a$13 === l$10 || a$13 && l$10 && Object.prototype.hasOwnProperty.call(a$13, "value") && a$13.value === l$10.value) {
					let f$3 = `Map keys must be unique; "${a$13}" is repeated`;
					t$13.errors.push(new p$2.YAMLSemanticError(e$4, f$3));
					break;
				}
			}
		}
		if (i$18 && !t$13.options.mapAsMap) t$13.warnings.push(new p$2.YAMLWarning(e$4, "Keys with collection values will be stringified as YAML due to JS Object restrictions. Use mapAsMap: true to avoid this."));
		return e$4.resolved = s$8, s$8;
	}
	var Wo$4 = ({ context: { lineStart: t$13, node: e$4, src: n$8 }, props: r$12 }) => {
		if (r$12.length === 0) return !1;
		let { start: s$8 } = r$12[0];
		if (e$4 && s$8 > e$4.valueRange.start || n$8[s$8] !== p$2.Char.COMMENT) return !1;
		for (let i$18 = t$13; i$18 < s$8; ++i$18) if (n$8[i$18] === `
`) return !1;
		return !0;
	};
	function Qo$4(t$13, e$4) {
		if (!Wo$4(t$13)) return;
		let n$8 = t$13.getPropValue(0, p$2.Char.COMMENT, !0), r$12 = !1, s$8 = e$4.value.commentBefore;
		if (s$8 && s$8.startsWith(n$8)) e$4.value.commentBefore = s$8.substr(n$8.length + 1), r$12 = !0;
		else {
			let i$18 = e$4.value.comment;
			!t$13.node && i$18 && i$18.startsWith(n$8) && (e$4.value.comment = i$18.substr(n$8.length + 1), r$12 = !0);
		}
		r$12 && (e$4.comment = n$8);
	}
	function Go$3(t$13, e$4) {
		let n$8 = [], r$12 = [], s$8, i$18 = null;
		for (let o$9 = 0; o$9 < e$4.items.length; ++o$9) {
			let a$13 = e$4.items[o$9];
			switch (a$13.type) {
				case p$2.Type.BLANK_LINE:
					n$8.push({
						afterKey: !!s$8,
						before: r$12.length
					});
					break;
				case p$2.Type.COMMENT:
					n$8.push({
						afterKey: !!s$8,
						before: r$12.length,
						comment: a$13.comment
					});
					break;
				case p$2.Type.MAP_KEY:
					s$8 !== void 0 && r$12.push(new T$9(s$8)), a$13.error && t$13.errors.push(a$13.error), s$8 = fe$4(t$13, a$13.node), i$18 = null;
					break;
				case p$2.Type.MAP_VALUE:
					{
						if (s$8 === void 0 && (s$8 = null), a$13.error && t$13.errors.push(a$13.error), !a$13.context.atLineStart && a$13.node && a$13.node.type === p$2.Type.MAP && !a$13.node.context.atLineStart) t$13.errors.push(new p$2.YAMLSemanticError(a$13.node, "Nested mappings are not allowed in compact mappings"));
						let c$3 = a$13.node;
						if (!c$3 && a$13.props.length > 0) {
							c$3 = new p$2.PlainValue(p$2.Type.PLAIN, []), c$3.context = {
								parent: a$13,
								src: a$13.context.src
							};
							let f$3 = a$13.range.start + 1;
							if (c$3.range = {
								start: f$3,
								end: f$3
							}, c$3.valueRange = {
								start: f$3,
								end: f$3
							}, typeof a$13.range.origStart == "number") {
								let m$11 = a$13.range.origStart + 1;
								c$3.range.origStart = c$3.range.origEnd = m$11, c$3.valueRange.origStart = c$3.valueRange.origEnd = m$11;
							}
						}
						let l$10 = new T$9(s$8, fe$4(t$13, c$3));
						Qo$4(a$13, l$10), r$12.push(l$10), s$8 && typeof i$18 == "number" && a$13.range.start > i$18 + 1024 && t$13.errors.push(ps$3(e$4, s$8)), s$8 = void 0, i$18 = null;
					}
					break;
				default:
					s$8 !== void 0 && r$12.push(new T$9(s$8)), s$8 = fe$4(t$13, a$13), i$18 = a$13.range.start, a$13.error && t$13.errors.push(a$13.error);
					e: for (let c$3 = o$9 + 1;; ++c$3) {
						let l$10 = e$4.items[c$3];
						switch (l$10 && l$10.type) {
							case p$2.Type.BLANK_LINE:
							case p$2.Type.COMMENT: continue e;
							case p$2.Type.MAP_VALUE: break e;
							default:
								t$13.errors.push(new p$2.YAMLSemanticError(a$13, "Implicit map keys need to be followed by map values"));
								break e;
						}
					}
					if (a$13.valueRangeContainsNewline) t$13.errors.push(new p$2.YAMLSemanticError(a$13, "Implicit map keys need to be on a single line"));
			}
		}
		return s$8 !== void 0 && r$12.push(new T$9(s$8)), {
			comments: n$8,
			items: r$12
		};
	}
	function Ho$3(t$13, e$4) {
		let n$8 = [], r$12 = [], s$8, i$18 = !1, o$9 = "{";
		for (let a$13 = 0; a$13 < e$4.items.length; ++a$13) {
			let c$3 = e$4.items[a$13];
			if (typeof c$3.char == "string") {
				let { char: l$10, offset: f$3 } = c$3;
				if (l$10 === "?" && s$8 === void 0 && !i$18) {
					i$18 = !0, o$9 = ":";
					continue;
				}
				if (l$10 === ":") {
					if (s$8 === void 0 && (s$8 = null), o$9 === ":") {
						o$9 = ",";
						continue;
					}
				} else if (i$18 && (s$8 === void 0 && l$10 !== "," && (s$8 = null), i$18 = !1), s$8 !== void 0 && (r$12.push(new T$9(s$8)), s$8 = void 0, l$10 === ",")) {
					o$9 = ":";
					continue;
				}
				if (l$10 === "}") {
					if (a$13 === e$4.items.length - 1) continue;
				} else if (l$10 === o$9) {
					o$9 = ":";
					continue;
				}
				let m$11 = `Flow map contains an unexpected ${l$10}`, d$14 = new p$2.YAMLSyntaxError(e$4, m$11);
				d$14.offset = f$3, t$13.errors.push(d$14);
			} else c$3.type === p$2.Type.BLANK_LINE ? n$8.push({
				afterKey: !!s$8,
				before: r$12.length
			}) : c$3.type === p$2.Type.COMMENT ? (us$2(t$13.errors, c$3), n$8.push({
				afterKey: !!s$8,
				before: r$12.length,
				comment: c$3.comment
			})) : s$8 === void 0 ? (o$9 === "," && t$13.errors.push(new p$2.YAMLSemanticError(c$3, "Separator , missing in flow map")), s$8 = fe$4(t$13, c$3)) : (o$9 !== "," && t$13.errors.push(new p$2.YAMLSemanticError(c$3, "Indicator : missing in flow map entry")), r$12.push(new T$9(s$8, fe$4(t$13, c$3))), s$8 = void 0, i$18 = !1);
		}
		return fs$3(t$13.errors, e$4), s$8 !== void 0 && r$12.push(new T$9(s$8)), {
			comments: n$8,
			items: r$12
		};
	}
	function Jo$3(t$13, e$4) {
		if (e$4.type !== p$2.Type.SEQ && e$4.type !== p$2.Type.FLOW_SEQ) {
			let i$18 = `A ${e$4.type} node cannot be resolved as a sequence`;
			return t$13.errors.push(new p$2.YAMLSyntaxError(e$4, i$18)), null;
		}
		let { comments: n$8, items: r$12 } = e$4.type === p$2.Type.FLOW_SEQ ? zo$4(t$13, e$4) : Xo$4(t$13, e$4), s$8 = new le$7();
		if (s$8.items = r$12, ms$2(s$8, n$8), !t$13.options.mapAsMap && r$12.some((i$18) => i$18 instanceof T$9 && i$18.key instanceof W$2)) t$13.warnings.push(new p$2.YAMLWarning(e$4, "Keys with collection values will be stringified as YAML due to JS Object restrictions. Use mapAsMap: true to avoid this."));
		return e$4.resolved = s$8, s$8;
	}
	function Xo$4(t$13, e$4) {
		let n$8 = [], r$12 = [];
		for (let s$8 = 0; s$8 < e$4.items.length; ++s$8) {
			let i$18 = e$4.items[s$8];
			switch (i$18.type) {
				case p$2.Type.BLANK_LINE:
					n$8.push({ before: r$12.length });
					break;
				case p$2.Type.COMMENT:
					n$8.push({
						comment: i$18.comment,
						before: r$12.length
					});
					break;
				case p$2.Type.SEQ_ITEM:
					if (i$18.error && t$13.errors.push(i$18.error), r$12.push(fe$4(t$13, i$18.node)), i$18.hasProps) t$13.errors.push(new p$2.YAMLSemanticError(i$18, "Sequence items cannot have tags or anchors before the - indicator"));
					break;
				default: i$18.error && t$13.errors.push(i$18.error), t$13.errors.push(new p$2.YAMLSyntaxError(i$18, `Unexpected ${i$18.type} node in sequence`));
			}
		}
		return {
			comments: n$8,
			items: r$12
		};
	}
	function zo$4(t$13, e$4) {
		let n$8 = [], r$12 = [], s$8 = !1, i$18, o$9 = null, a$13 = "[", c$3 = null;
		for (let l$10 = 0; l$10 < e$4.items.length; ++l$10) {
			let f$3 = e$4.items[l$10];
			if (typeof f$3.char == "string") {
				let { char: m$11, offset: d$14 } = f$3;
				if (m$11 !== ":" && (s$8 || i$18 !== void 0) && (s$8 && i$18 === void 0 && (i$18 = a$13 ? r$12.pop() : null), r$12.push(new T$9(i$18)), s$8 = !1, i$18 = void 0, o$9 = null), m$11 === a$13) a$13 = null;
				else if (!a$13 && m$11 === "?") s$8 = !0;
				else if (a$13 !== "[" && m$11 === ":" && i$18 === void 0) {
					if (a$13 === ",") {
						if (i$18 = r$12.pop(), i$18 instanceof T$9) {
							let y$7 = "Chaining flow sequence pairs is invalid", h$3 = new p$2.YAMLSemanticError(e$4, y$7);
							h$3.offset = d$14, t$13.errors.push(h$3);
						}
						if (!s$8 && typeof o$9 == "number") {
							let y$7 = f$3.range ? f$3.range.start : f$3.offset;
							y$7 > o$9 + 1024 && t$13.errors.push(ps$3(e$4, i$18));
							let { src: h$3 } = c$3.context;
							for (let g$2 = o$9; g$2 < y$7; ++g$2) if (h$3[g$2] === `
`) {
								t$13.errors.push(new p$2.YAMLSemanticError(c$3, "Implicit keys of flow sequence pairs need to be on a single line"));
								break;
							}
						}
					} else i$18 = null;
					o$9 = null, s$8 = !1, a$13 = null;
				} else if (a$13 === "[" || m$11 !== "]" || l$10 < e$4.items.length - 1) {
					let y$7 = `Flow sequence contains an unexpected ${m$11}`, h$3 = new p$2.YAMLSyntaxError(e$4, y$7);
					h$3.offset = d$14, t$13.errors.push(h$3);
				}
			} else if (f$3.type === p$2.Type.BLANK_LINE) n$8.push({ before: r$12.length });
			else if (f$3.type === p$2.Type.COMMENT) us$2(t$13.errors, f$3), n$8.push({
				comment: f$3.comment,
				before: r$12.length
			});
			else {
				if (a$13) {
					let d$14 = `Expected a ${a$13} in flow sequence`;
					t$13.errors.push(new p$2.YAMLSemanticError(f$3, d$14));
				}
				let m$11 = fe$4(t$13, f$3);
				i$18 === void 0 ? (r$12.push(m$11), c$3 = f$3) : (r$12.push(new T$9(i$18, m$11)), i$18 = void 0), o$9 = f$3.range.start, a$13 = ",";
			}
		}
		return fs$3(t$13.errors, e$4), i$18 !== void 0 && r$12.push(new T$9(i$18)), {
			comments: n$8,
			items: r$12
		};
	}
	k$5.Alias = be$5;
	k$5.Collection = W$2;
	k$5.Merge = Ft$4;
	k$5.Node = j$7;
	k$5.Pair = T$9;
	k$5.Scalar = _$2;
	k$5.YAMLMap = dt$3;
	k$5.YAMLSeq = le$7;
	k$5.addComment = Fe$4;
	k$5.binaryOptions = Po$2;
	k$5.boolOptions = Io$4;
	k$5.findPair = gt$6;
	k$5.intOptions = vo$4;
	k$5.isEmptyPath = os$4;
	k$5.nullOptions = _o$2;
	k$5.resolveMap = jo$3;
	k$5.resolveNode = fe$4;
	k$5.resolveSeq = Jo$3;
	k$5.resolveString = Vn$5;
	k$5.strOptions = Ne$5;
	k$5.stringifyNumber = Yo$3;
	k$5.stringifyString = Do$2;
	k$5.toJSON = ce$4;
});
var Gn$1 = te$1((z$5) => {
	var Q$4 = oe$1(), O$3 = qe$1(), Zo$3 = {
		identify: (t$13) => t$13 instanceof Uint8Array,
		default: !1,
		tag: "tag:yaml.org,2002:binary",
		resolve: (t$13, e$4) => {
			let n$8 = O$3.resolveString(t$13, e$4);
			if (typeof Buffer == "function") return Buffer.from(n$8, "base64");
			if (typeof atob == "function") {
				let r$12 = atob(n$8.replace(/[\n\r]/g, "")), s$8 = new Uint8Array(r$12.length);
				for (let i$18 = 0; i$18 < r$12.length; ++i$18) s$8[i$18] = r$12.charCodeAt(i$18);
				return s$8;
			} else return t$13.errors.push(new Q$4.YAMLReferenceError(e$4, "This environment does not support reading binary tags; either Buffer or atob is required")), null;
		},
		options: O$3.binaryOptions,
		stringify: ({ comment: t$13, type: e$4, value: n$8 }, r$12, s$8, i$18) => {
			let o$9;
			if (typeof Buffer == "function") o$9 = n$8 instanceof Buffer ? n$8.toString("base64") : Buffer.from(n$8.buffer).toString("base64");
			else if (typeof btoa == "function") {
				let a$13 = "";
				for (let c$3 = 0; c$3 < n$8.length; ++c$3) a$13 += String.fromCharCode(n$8[c$3]);
				o$9 = btoa(a$13);
			} else throw new Error("This environment does not support writing binary tags; either Buffer or btoa is required");
			if (e$4 || (e$4 = O$3.binaryOptions.defaultType), e$4 === Q$4.Type.QUOTE_DOUBLE) n$8 = o$9;
			else {
				let { lineWidth: a$13 } = O$3.binaryOptions, c$3 = Math.ceil(o$9.length / a$13), l$10 = new Array(c$3);
				for (let f$3 = 0, m$11 = 0; f$3 < c$3; ++f$3, m$11 += a$13) l$10[f$3] = o$9.substr(m$11, a$13);
				n$8 = l$10.join(e$4 === Q$4.Type.BLOCK_LITERAL ? `
` : " ");
			}
			return O$3.stringifyString({
				comment: t$13,
				type: e$4,
				value: n$8
			}, r$12, s$8, i$18);
		}
	};
	function gs$3(t$13, e$4) {
		let n$8 = O$3.resolveSeq(t$13, e$4);
		for (let r$12 = 0; r$12 < n$8.items.length; ++r$12) {
			let s$8 = n$8.items[r$12];
			if (!(s$8 instanceof O$3.Pair)) {
				if (s$8 instanceof O$3.YAMLMap) {
					if (s$8.items.length > 1) throw new Q$4.YAMLSemanticError(e$4, "Each pair must have its own sequence indicator");
					let i$18 = s$8.items[0] || new O$3.Pair();
					s$8.commentBefore && (i$18.commentBefore = i$18.commentBefore ? `${s$8.commentBefore}
${i$18.commentBefore}` : s$8.commentBefore), s$8.comment && (i$18.comment = i$18.comment ? `${s$8.comment}
${i$18.comment}` : s$8.comment), s$8 = i$18;
				}
				n$8.items[r$12] = s$8 instanceof O$3.Pair ? s$8 : new O$3.Pair(s$8);
			}
		}
		return n$8;
	}
	function ds$2(t$13, e$4, n$8) {
		let r$12 = new O$3.YAMLSeq(t$13);
		r$12.tag = "tag:yaml.org,2002:pairs";
		for (let s$8 of e$4) {
			let i$18, o$9;
			if (Array.isArray(s$8)) if (s$8.length === 2) i$18 = s$8[0], o$9 = s$8[1];
			else throw new TypeError(`Expected [key, value] tuple: ${s$8}`);
			else if (s$8 && s$8 instanceof Object) {
				let c$3 = Object.keys(s$8);
				if (c$3.length === 1) i$18 = c$3[0], o$9 = s$8[i$18];
				else throw new TypeError(`Expected { key: value } tuple: ${s$8}`);
			} else i$18 = s$8;
			let a$13 = t$13.createPair(i$18, o$9, n$8);
			r$12.items.push(a$13);
		}
		return r$12;
	}
	var ea$4 = {
		default: !1,
		tag: "tag:yaml.org,2002:pairs",
		resolve: gs$3,
		createNode: ds$2
	}, Ue$5 = class t$13 extends O$3.YAMLSeq {
		constructor() {
			super(), Q$4._defineProperty(this, "add", O$3.YAMLMap.prototype.add.bind(this)), Q$4._defineProperty(this, "delete", O$3.YAMLMap.prototype.delete.bind(this)), Q$4._defineProperty(this, "get", O$3.YAMLMap.prototype.get.bind(this)), Q$4._defineProperty(this, "has", O$3.YAMLMap.prototype.has.bind(this)), Q$4._defineProperty(this, "set", O$3.YAMLMap.prototype.set.bind(this)), this.tag = t$13.tag;
		}
		toJSON(e$4, n$8) {
			let r$12 = /* @__PURE__ */ new Map();
			n$8 && n$8.onCreate && n$8.onCreate(r$12);
			for (let s$8 of this.items) {
				let i$18, o$9;
				if (s$8 instanceof O$3.Pair ? (i$18 = O$3.toJSON(s$8.key, "", n$8), o$9 = O$3.toJSON(s$8.value, i$18, n$8)) : i$18 = O$3.toJSON(s$8, "", n$8), r$12.has(i$18)) throw new Error("Ordered maps must not include duplicate keys");
				r$12.set(i$18, o$9);
			}
			return r$12;
		}
	};
	Q$4._defineProperty(Ue$5, "tag", "tag:yaml.org,2002:omap");
	function ta$4(t$13, e$4) {
		let n$8 = gs$3(t$13, e$4), r$12 = [];
		for (let { key: s$8 } of n$8.items) if (s$8 instanceof O$3.Scalar) if (r$12.includes(s$8.value)) throw new Q$4.YAMLSemanticError(e$4, "Ordered maps must not include duplicate keys");
		else r$12.push(s$8.value);
		return Object.assign(new Ue$5(), n$8);
	}
	function na$5(t$13, e$4, n$8) {
		let r$12 = ds$2(t$13, e$4, n$8), s$8 = new Ue$5();
		return s$8.items = r$12.items, s$8;
	}
	var ra$4 = {
		identify: (t$13) => t$13 instanceof Map,
		nodeClass: Ue$5,
		default: !1,
		tag: "tag:yaml.org,2002:omap",
		resolve: ta$4,
		createNode: na$5
	}, Ke$4 = class t$13 extends O$3.YAMLMap {
		constructor() {
			super(), this.tag = t$13.tag;
		}
		add(e$4) {
			let n$8 = e$4 instanceof O$3.Pair ? e$4 : new O$3.Pair(e$4);
			O$3.findPair(this.items, n$8.key) || this.items.push(n$8);
		}
		get(e$4, n$8) {
			let r$12 = O$3.findPair(this.items, e$4);
			return !n$8 && r$12 instanceof O$3.Pair ? r$12.key instanceof O$3.Scalar ? r$12.key.value : r$12.key : r$12;
		}
		set(e$4, n$8) {
			if (typeof n$8 != "boolean") throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof n$8}`);
			let r$12 = O$3.findPair(this.items, e$4);
			r$12 && !n$8 ? this.items.splice(this.items.indexOf(r$12), 1) : !r$12 && n$8 && this.items.push(new O$3.Pair(e$4));
		}
		toJSON(e$4, n$8) {
			return super.toJSON(e$4, n$8, Set);
		}
		toString(e$4, n$8, r$12) {
			if (!e$4) return JSON.stringify(this);
			if (this.hasAllNullValues()) return super.toString(e$4, n$8, r$12);
			throw new Error("Set items must all have null values");
		}
	};
	Q$4._defineProperty(Ke$4, "tag", "tag:yaml.org,2002:set");
	function sa$4(t$13, e$4) {
		let n$8 = O$3.resolveMap(t$13, e$4);
		if (!n$8.hasAllNullValues()) throw new Q$4.YAMLSemanticError(e$4, "Set items must all have null values");
		return Object.assign(new Ke$4(), n$8);
	}
	function ia$4(t$13, e$4, n$8) {
		let r$12 = new Ke$4();
		for (let s$8 of e$4) r$12.items.push(t$13.createPair(s$8, null, n$8));
		return r$12;
	}
	var oa$4 = {
		identify: (t$13) => t$13 instanceof Set,
		nodeClass: Ke$4,
		default: !1,
		tag: "tag:yaml.org,2002:set",
		resolve: sa$4,
		createNode: ia$4
	}, jn$5 = (t$13, e$4) => {
		let n$8 = e$4.split(":").reduce((r$12, s$8) => r$12 * 60 + Number(s$8), 0);
		return t$13 === "-" ? -n$8 : n$8;
	}, ys$2 = ({ value: t$13 }) => {
		if (isNaN(t$13) || !isFinite(t$13)) return O$3.stringifyNumber(t$13);
		let e$4 = "";
		t$13 < 0 && (e$4 = "-", t$13 = Math.abs(t$13));
		let n$8 = [t$13 % 60];
		return t$13 < 60 ? n$8.unshift(0) : (t$13 = Math.round((t$13 - n$8[0]) / 60), n$8.unshift(t$13 % 60), t$13 >= 60 && (t$13 = Math.round((t$13 - n$8[0]) / 60), n$8.unshift(t$13))), e$4 + n$8.map((r$12) => r$12 < 10 ? "0" + String(r$12) : String(r$12)).join(":").replace(/000000\d*$/, "");
	}, aa$5 = {
		identify: (t$13) => typeof t$13 == "number",
		default: !0,
		tag: "tag:yaml.org,2002:int",
		format: "TIME",
		test: /^([-+]?)([0-9][0-9_]*(?::[0-5]?[0-9])+)$/,
		resolve: (t$13, e$4, n$8) => jn$5(e$4, n$8.replace(/_/g, "")),
		stringify: ys$2
	}, ca$4 = {
		identify: (t$13) => typeof t$13 == "number",
		default: !0,
		tag: "tag:yaml.org,2002:float",
		format: "TIME",
		test: /^([-+]?)([0-9][0-9_]*(?::[0-5]?[0-9])+\.[0-9_]*)$/,
		resolve: (t$13, e$4, n$8) => jn$5(e$4, n$8.replace(/_/g, "")),
		stringify: ys$2
	}, la$4 = {
		identify: (t$13) => t$13 instanceof Date,
		default: !0,
		tag: "tag:yaml.org,2002:timestamp",
		test: RegExp("^(?:([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})(?:(?:t|T|[ \\t]+)([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\.[0-9]+)?)(?:[ \\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?)?)$"),
		resolve: (t$13, e$4, n$8, r$12, s$8, i$18, o$9, a$13, c$3) => {
			a$13 && (a$13 = (a$13 + "00").substr(1, 3));
			let l$10 = Date.UTC(e$4, n$8 - 1, r$12, s$8 || 0, i$18 || 0, o$9 || 0, a$13 || 0);
			if (c$3 && c$3 !== "Z") {
				let f$3 = jn$5(c$3[0], c$3.slice(1));
				Math.abs(f$3) < 30 && (f$3 *= 60), l$10 -= 6e4 * f$3;
			}
			return new Date(l$10);
		},
		stringify: ({ value: t$13 }) => t$13.toISOString().replace(/((T00:00)?:00)?\.000Z$/, "")
	};
	function Wn$5(t$13) {
		let e$4 = {};
		return t$13 ? typeof YAML_SILENCE_DEPRECATION_WARNINGS < "u" ? !YAML_SILENCE_DEPRECATION_WARNINGS : !e$4.YAML_SILENCE_DEPRECATION_WARNINGS : typeof YAML_SILENCE_WARNINGS < "u" ? !YAML_SILENCE_WARNINGS : !e$4.YAML_SILENCE_WARNINGS;
	}
	function Qn$5(t$13, e$4) {
		Wn$5(!1) && console.warn(e$4 ? `${e$4}: ${t$13}` : t$13);
	}
	function fa$5(t$13) {
		if (Wn$5(!0)) {
			let e$4 = t$13.replace(/.*yaml[/\\]/i, "").replace(/\.js$/, "").replace(/\\/g, "/");
			Qn$5(`The endpoint 'yaml/${e$4}' will be removed in a future release.`, "DeprecationWarning");
		}
	}
	var hs$3 = {};
	function ua$3(t$13, e$4) {
		if (!hs$3[t$13] && Wn$5(!0)) {
			hs$3[t$13] = !0;
			let n$8 = `The option '${t$13}' will be removed in a future release`;
			n$8 += e$4 ? `, use '${e$4}' instead.` : ".", Qn$5(n$8, "DeprecationWarning");
		}
	}
	z$5.binary = Zo$3;
	z$5.floatTime = ca$4;
	z$5.intTime = aa$5;
	z$5.omap = ra$4;
	z$5.pairs = ea$4;
	z$5.set = oa$4;
	z$5.timestamp = la$4;
	z$5.warn = Qn$5;
	z$5.warnFileDeprecation = fa$5;
	z$5.warnOptionDeprecation = ua$3;
});
var zn$1 = te$1((Ps$4) => {
	var jt$5 = oe$1(), E$3 = qe$1(), D$4 = Gn$1();
	function pa$3(t$13, e$4, n$8) {
		let r$12 = new E$3.YAMLMap(t$13);
		if (e$4 instanceof Map) for (let [s$8, i$18] of e$4) r$12.items.push(t$13.createPair(s$8, i$18, n$8));
		else if (e$4 && typeof e$4 == "object") for (let s$8 of Object.keys(e$4)) r$12.items.push(t$13.createPair(s$8, e$4[s$8], n$8));
		return typeof t$13.sortMapEntries == "function" && r$12.items.sort(t$13.sortMapEntries), r$12;
	}
	var Et$5 = {
		createNode: pa$3,
		default: !0,
		nodeClass: E$3.YAMLMap,
		tag: "tag:yaml.org,2002:map",
		resolve: E$3.resolveMap
	};
	function ma$3(t$13, e$4, n$8) {
		let r$12 = new E$3.YAMLSeq(t$13);
		if (e$4 && e$4[Symbol.iterator]) for (let s$8 of e$4) {
			let i$18 = t$13.createNode(s$8, n$8.wrapScalars, null, n$8);
			r$12.items.push(i$18);
		}
		return r$12;
	}
	var Wt$4 = {
		createNode: ma$3,
		default: !0,
		nodeClass: E$3.YAMLSeq,
		tag: "tag:yaml.org,2002:seq",
		resolve: E$3.resolveSeq
	}, ha$5 = {
		identify: (t$13) => typeof t$13 == "string",
		default: !0,
		tag: "tag:yaml.org,2002:str",
		resolve: E$3.resolveString,
		stringify(t$13, e$4, n$8, r$12) {
			return e$4 = Object.assign({ actualString: !0 }, e$4), E$3.stringifyString(t$13, e$4, n$8, r$12);
		},
		options: E$3.strOptions
	}, Jn$5 = [
		Et$5,
		Wt$4,
		ha$5
	], Qt$3 = (t$13) => typeof t$13 == "bigint" || Number.isInteger(t$13), Xn$5 = (t$13, e$4, n$8) => E$3.intOptions.asBigInt ? BigInt(t$13) : parseInt(e$4, n$8);
	function ws$2(t$13, e$4, n$8) {
		let { value: r$12 } = t$13;
		return Qt$3(r$12) && r$12 >= 0 ? n$8 + r$12.toString(e$4) : E$3.stringifyNumber(t$13);
	}
	var bs$4 = {
		identify: (t$13) => t$13 == null,
		createNode: (t$13, e$4, n$8) => n$8.wrapScalars ? new E$3.Scalar(null) : null,
		default: !0,
		tag: "tag:yaml.org,2002:null",
		test: /^(?:~|[Nn]ull|NULL)?$/,
		resolve: () => null,
		options: E$3.nullOptions,
		stringify: () => E$3.nullOptions.nullStr
	}, Ns$1 = {
		identify: (t$13) => typeof t$13 == "boolean",
		default: !0,
		tag: "tag:yaml.org,2002:bool",
		test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,
		resolve: (t$13) => t$13[0] === "t" || t$13[0] === "T",
		options: E$3.boolOptions,
		stringify: ({ value: t$13 }) => t$13 ? E$3.boolOptions.trueStr : E$3.boolOptions.falseStr
	}, Os$2 = {
		identify: (t$13) => Qt$3(t$13) && t$13 >= 0,
		default: !0,
		tag: "tag:yaml.org,2002:int",
		format: "OCT",
		test: /^0o([0-7]+)$/,
		resolve: (t$13, e$4) => Xn$5(t$13, e$4, 8),
		options: E$3.intOptions,
		stringify: (t$13) => ws$2(t$13, 8, "0o")
	}, As$2 = {
		identify: Qt$3,
		default: !0,
		tag: "tag:yaml.org,2002:int",
		test: /^[-+]?[0-9]+$/,
		resolve: (t$13) => Xn$5(t$13, t$13, 10),
		options: E$3.intOptions,
		stringify: E$3.stringifyNumber
	}, Ls$3 = {
		identify: (t$13) => Qt$3(t$13) && t$13 >= 0,
		default: !0,
		tag: "tag:yaml.org,2002:int",
		format: "HEX",
		test: /^0x([0-9a-fA-F]+)$/,
		resolve: (t$13, e$4) => Xn$5(t$13, e$4, 16),
		options: E$3.intOptions,
		stringify: (t$13) => ws$2(t$13, 16, "0x")
	}, Ts$3 = {
		identify: (t$13) => typeof t$13 == "number",
		default: !0,
		tag: "tag:yaml.org,2002:float",
		test: /^(?:[-+]?\.inf|(\.nan))$/i,
		resolve: (t$13, e$4) => e$4 ? NaN : t$13[0] === "-" ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY,
		stringify: E$3.stringifyNumber
	}, Ms$3 = {
		identify: (t$13) => typeof t$13 == "number",
		default: !0,
		tag: "tag:yaml.org,2002:float",
		format: "EXP",
		test: /^[-+]?(?:\.[0-9]+|[0-9]+(?:\.[0-9]*)?)[eE][-+]?[0-9]+$/,
		resolve: (t$13) => parseFloat(t$13),
		stringify: ({ value: t$13 }) => Number(t$13).toExponential()
	}, Cs$2 = {
		identify: (t$13) => typeof t$13 == "number",
		default: !0,
		tag: "tag:yaml.org,2002:float",
		test: /^[-+]?(?:\.([0-9]+)|[0-9]+\.([0-9]*))$/,
		resolve(t$13, e$4, n$8) {
			let r$12 = e$4 || n$8, s$8 = new E$3.Scalar(parseFloat(t$13));
			return r$12 && r$12[r$12.length - 1] === "0" && (s$8.minFractionDigits = r$12.length), s$8;
		},
		stringify: E$3.stringifyNumber
	}, ga$3 = Jn$5.concat([
		bs$4,
		Ns$1,
		Os$2,
		As$2,
		Ls$3,
		Ts$3,
		Ms$3,
		Cs$2
	]), Es$2 = (t$13) => typeof t$13 == "bigint" || Number.isInteger(t$13), Kt$4 = ({ value: t$13 }) => JSON.stringify(t$13), ks$3 = [
		Et$5,
		Wt$4,
		{
			identify: (t$13) => typeof t$13 == "string",
			default: !0,
			tag: "tag:yaml.org,2002:str",
			resolve: E$3.resolveString,
			stringify: Kt$4
		},
		{
			identify: (t$13) => t$13 == null,
			createNode: (t$13, e$4, n$8) => n$8.wrapScalars ? new E$3.Scalar(null) : null,
			default: !0,
			tag: "tag:yaml.org,2002:null",
			test: /^null$/,
			resolve: () => null,
			stringify: Kt$4
		},
		{
			identify: (t$13) => typeof t$13 == "boolean",
			default: !0,
			tag: "tag:yaml.org,2002:bool",
			test: /^true|false$/,
			resolve: (t$13) => t$13 === "true",
			stringify: Kt$4
		},
		{
			identify: Es$2,
			default: !0,
			tag: "tag:yaml.org,2002:int",
			test: /^-?(?:0|[1-9][0-9]*)$/,
			resolve: (t$13) => E$3.intOptions.asBigInt ? BigInt(t$13) : parseInt(t$13, 10),
			stringify: ({ value: t$13 }) => Es$2(t$13) ? t$13.toString() : JSON.stringify(t$13)
		},
		{
			identify: (t$13) => typeof t$13 == "number",
			default: !0,
			tag: "tag:yaml.org,2002:float",
			test: /^-?(?:0|[1-9][0-9]*)(?:\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,
			resolve: (t$13) => parseFloat(t$13),
			stringify: Kt$4
		}
	];
	ks$3.scalarFallback = (t$13) => {
		throw new SyntaxError(`Unresolved plain scalar ${JSON.stringify(t$13)}`);
	};
	var Ss$2 = ({ value: t$13 }) => t$13 ? E$3.boolOptions.trueStr : E$3.boolOptions.falseStr, yt$4 = (t$13) => typeof t$13 == "bigint" || Number.isInteger(t$13);
	function Vt$5(t$13, e$4, n$8) {
		let r$12 = e$4.replace(/_/g, "");
		if (E$3.intOptions.asBigInt) {
			switch (n$8) {
				case 2:
					r$12 = `0b${r$12}`;
					break;
				case 8:
					r$12 = `0o${r$12}`;
					break;
				case 16:
					r$12 = `0x${r$12}`;
					break;
			}
			let i$18 = BigInt(r$12);
			return t$13 === "-" ? BigInt(-1) * i$18 : i$18;
		}
		let s$8 = parseInt(r$12, n$8);
		return t$13 === "-" ? -1 * s$8 : s$8;
	}
	function Hn$4(t$13, e$4, n$8) {
		let { value: r$12 } = t$13;
		if (yt$4(r$12)) {
			let s$8 = r$12.toString(e$4);
			return r$12 < 0 ? "-" + n$8 + s$8.substr(1) : n$8 + s$8;
		}
		return E$3.stringifyNumber(t$13);
	}
	var da$4 = Jn$5.concat([
		{
			identify: (t$13) => t$13 == null,
			createNode: (t$13, e$4, n$8) => n$8.wrapScalars ? new E$3.Scalar(null) : null,
			default: !0,
			tag: "tag:yaml.org,2002:null",
			test: /^(?:~|[Nn]ull|NULL)?$/,
			resolve: () => null,
			options: E$3.nullOptions,
			stringify: () => E$3.nullOptions.nullStr
		},
		{
			identify: (t$13) => typeof t$13 == "boolean",
			default: !0,
			tag: "tag:yaml.org,2002:bool",
			test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,
			resolve: () => !0,
			options: E$3.boolOptions,
			stringify: Ss$2
		},
		{
			identify: (t$13) => typeof t$13 == "boolean",
			default: !0,
			tag: "tag:yaml.org,2002:bool",
			test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,
			resolve: () => !1,
			options: E$3.boolOptions,
			stringify: Ss$2
		},
		{
			identify: yt$4,
			default: !0,
			tag: "tag:yaml.org,2002:int",
			format: "BIN",
			test: /^([-+]?)0b([0-1_]+)$/,
			resolve: (t$13, e$4, n$8) => Vt$5(e$4, n$8, 2),
			stringify: (t$13) => Hn$4(t$13, 2, "0b")
		},
		{
			identify: yt$4,
			default: !0,
			tag: "tag:yaml.org,2002:int",
			format: "OCT",
			test: /^([-+]?)0([0-7_]+)$/,
			resolve: (t$13, e$4, n$8) => Vt$5(e$4, n$8, 8),
			stringify: (t$13) => Hn$4(t$13, 8, "0")
		},
		{
			identify: yt$4,
			default: !0,
			tag: "tag:yaml.org,2002:int",
			test: /^([-+]?)([0-9][0-9_]*)$/,
			resolve: (t$13, e$4, n$8) => Vt$5(e$4, n$8, 10),
			stringify: E$3.stringifyNumber
		},
		{
			identify: yt$4,
			default: !0,
			tag: "tag:yaml.org,2002:int",
			format: "HEX",
			test: /^([-+]?)0x([0-9a-fA-F_]+)$/,
			resolve: (t$13, e$4, n$8) => Vt$5(e$4, n$8, 16),
			stringify: (t$13) => Hn$4(t$13, 16, "0x")
		},
		{
			identify: (t$13) => typeof t$13 == "number",
			default: !0,
			tag: "tag:yaml.org,2002:float",
			test: /^(?:[-+]?\.inf|(\.nan))$/i,
			resolve: (t$13, e$4) => e$4 ? NaN : t$13[0] === "-" ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY,
			stringify: E$3.stringifyNumber
		},
		{
			identify: (t$13) => typeof t$13 == "number",
			default: !0,
			tag: "tag:yaml.org,2002:float",
			format: "EXP",
			test: /^[-+]?([0-9][0-9_]*)?(\.[0-9_]*)?[eE][-+]?[0-9]+$/,
			resolve: (t$13) => parseFloat(t$13.replace(/_/g, "")),
			stringify: ({ value: t$13 }) => Number(t$13).toExponential()
		},
		{
			identify: (t$13) => typeof t$13 == "number",
			default: !0,
			tag: "tag:yaml.org,2002:float",
			test: /^[-+]?(?:[0-9][0-9_]*)?\.([0-9_]*)$/,
			resolve(t$13, e$4) {
				let n$8 = new E$3.Scalar(parseFloat(t$13.replace(/_/g, "")));
				if (e$4) {
					let r$12 = e$4.replace(/_/g, "");
					r$12[r$12.length - 1] === "0" && (n$8.minFractionDigits = r$12.length);
				}
				return n$8;
			},
			stringify: E$3.stringifyNumber
		}
	], D$4.binary, D$4.omap, D$4.pairs, D$4.set, D$4.intTime, D$4.floatTime, D$4.timestamp), ya$3 = {
		core: ga$3,
		failsafe: Jn$5,
		json: ks$3,
		yaml11: da$4
	}, Ea$4 = {
		binary: D$4.binary,
		bool: Ns$1,
		float: Cs$2,
		floatExp: Ms$3,
		floatNaN: Ts$3,
		floatTime: D$4.floatTime,
		int: As$2,
		intHex: Ls$3,
		intOct: Os$2,
		intTime: D$4.intTime,
		map: Et$5,
		null: bs$4,
		omap: D$4.omap,
		pairs: D$4.pairs,
		seq: Wt$4,
		set: D$4.set,
		timestamp: D$4.timestamp
	};
	function Sa$4(t$13, e$4, n$8) {
		if (e$4) {
			let r$12 = n$8.filter((i$18) => i$18.tag === e$4), s$8 = r$12.find((i$18) => !i$18.format) || r$12[0];
			if (!s$8) throw new Error(`Tag ${e$4} not found`);
			return s$8;
		}
		return n$8.find((r$12) => (r$12.identify && r$12.identify(t$13) || r$12.class && t$13 instanceof r$12.class) && !r$12.format);
	}
	function wa$3(t$13, e$4, n$8) {
		if (t$13 instanceof E$3.Node) return t$13;
		let { defaultPrefix: r$12, onTagObj: s$8, prevObjects: i$18, schema: o$9, wrapScalars: a$13 } = n$8;
		e$4 && e$4.startsWith("!!") && (e$4 = r$12 + e$4.slice(2));
		let c$3 = Sa$4(t$13, e$4, o$9.tags);
		if (!c$3) {
			if (typeof t$13.toJSON == "function" && (t$13 = t$13.toJSON()), !t$13 || typeof t$13 != "object") return a$13 ? new E$3.Scalar(t$13) : t$13;
			c$3 = t$13 instanceof Map ? Et$5 : t$13[Symbol.iterator] ? Wt$4 : Et$5;
		}
		s$8 && (s$8(c$3), delete n$8.onTagObj);
		let l$10 = {
			value: void 0,
			node: void 0
		};
		if (t$13 && typeof t$13 == "object" && i$18) {
			let f$3 = i$18.get(t$13);
			if (f$3) {
				let m$11 = new E$3.Alias(f$3);
				return n$8.aliasNodes.push(m$11), m$11;
			}
			l$10.value = t$13, i$18.set(t$13, l$10);
		}
		return l$10.node = c$3.createNode ? c$3.createNode(n$8.schema, t$13, n$8) : a$13 ? new E$3.Scalar(t$13) : t$13, e$4 && l$10.node instanceof E$3.Node && (l$10.node.tag = e$4), l$10.node;
	}
	function ba$4(t$13, e$4, n$8, r$12) {
		let s$8 = t$13[r$12.replace(/\W/g, "")];
		if (!s$8) {
			let i$18 = Object.keys(t$13).map((o$9) => JSON.stringify(o$9)).join(", ");
			throw new Error(`Unknown schema "${r$12}"; use one of ${i$18}`);
		}
		if (Array.isArray(n$8)) for (let i$18 of n$8) s$8 = s$8.concat(i$18);
		else typeof n$8 == "function" && (s$8 = n$8(s$8.slice()));
		for (let i$18 = 0; i$18 < s$8.length; ++i$18) {
			let o$9 = s$8[i$18];
			if (typeof o$9 == "string") {
				let a$13 = e$4[o$9];
				if (!a$13) {
					let c$3 = Object.keys(e$4).map((l$10) => JSON.stringify(l$10)).join(", ");
					throw new Error(`Unknown custom tag "${o$9}"; use one of ${c$3}`);
				}
				s$8[i$18] = a$13;
			}
		}
		return s$8;
	}
	var Na$4 = (t$13, e$4) => t$13.key < e$4.key ? -1 : t$13.key > e$4.key ? 1 : 0, St$5 = class t$13 {
		constructor({ customTags: e$4, merge: n$8, schema: r$12, sortMapEntries: s$8, tags: i$18 }) {
			this.merge = !!n$8, this.name = r$12, this.sortMapEntries = s$8 === !0 ? Na$4 : s$8 || null, !e$4 && i$18 && D$4.warnOptionDeprecation("tags", "customTags"), this.tags = ba$4(ya$3, Ea$4, e$4 || i$18, r$12);
		}
		createNode(e$4, n$8, r$12, s$8) {
			let i$18 = {
				defaultPrefix: t$13.defaultPrefix,
				schema: this,
				wrapScalars: n$8
			}, o$9 = s$8 ? Object.assign(s$8, i$18) : i$18;
			return wa$3(e$4, r$12, o$9);
		}
		createPair(e$4, n$8, r$12) {
			r$12 || (r$12 = { wrapScalars: !0 });
			let s$8 = this.createNode(e$4, r$12.wrapScalars, null, r$12), i$18 = this.createNode(n$8, r$12.wrapScalars, null, r$12);
			return new E$3.Pair(s$8, i$18);
		}
	};
	jt$5._defineProperty(St$5, "defaultPrefix", jt$5.defaultTagPrefix);
	jt$5._defineProperty(St$5, "defaultTags", jt$5.defaultTags);
	Ps$4.Schema = St$5;
});
var Rs = te$1((Xt$5) => {
	var Y$6 = oe$1(), S$4 = qe$1(), Is$3 = zn$1(), Oa$3 = {
		anchorPrefix: "a",
		customTags: null,
		indent: 2,
		indentSeq: !0,
		keepCstNodes: !1,
		keepNodeTypes: !0,
		keepBlobsInJSON: !0,
		mapAsMap: !1,
		maxAliasCount: 100,
		prettyErrors: !1,
		simpleKeys: !1,
		version: "1.2"
	}, Aa$4 = {
		get binary() {
			return S$4.binaryOptions;
		},
		set binary(t$13) {
			Object.assign(S$4.binaryOptions, t$13);
		},
		get bool() {
			return S$4.boolOptions;
		},
		set bool(t$13) {
			Object.assign(S$4.boolOptions, t$13);
		},
		get int() {
			return S$4.intOptions;
		},
		set int(t$13) {
			Object.assign(S$4.intOptions, t$13);
		},
		get null() {
			return S$4.nullOptions;
		},
		set null(t$13) {
			Object.assign(S$4.nullOptions, t$13);
		},
		get str() {
			return S$4.strOptions;
		},
		set str(t$13) {
			Object.assign(S$4.strOptions, t$13);
		}
	}, _s$3 = {
		"1.0": {
			schema: "yaml-1.1",
			merge: !0,
			tagPrefixes: [{
				handle: "!",
				prefix: Y$6.defaultTagPrefix
			}, {
				handle: "!!",
				prefix: "tag:private.yaml.org,2002:"
			}]
		},
		1.1: {
			schema: "yaml-1.1",
			merge: !0,
			tagPrefixes: [{
				handle: "!",
				prefix: "!"
			}, {
				handle: "!!",
				prefix: Y$6.defaultTagPrefix
			}]
		},
		1.2: {
			schema: "core",
			merge: !1,
			tagPrefixes: [{
				handle: "!",
				prefix: "!"
			}, {
				handle: "!!",
				prefix: Y$6.defaultTagPrefix
			}]
		}
	};
	function vs$2(t$13, e$4) {
		if ((t$13.version || t$13.options.version) === "1.0") {
			let s$8 = e$4.match(/^tag:private\.yaml\.org,2002:([^:/]+)$/);
			if (s$8) return "!" + s$8[1];
			let i$18 = e$4.match(/^tag:([a-zA-Z0-9-]+)\.yaml\.org,2002:(.*)/);
			return i$18 ? `!${i$18[1]}/${i$18[2]}` : `!${e$4.replace(/^tag:/, "")}`;
		}
		let n$8 = t$13.tagPrefixes.find((s$8) => e$4.indexOf(s$8.prefix) === 0);
		if (!n$8) {
			let s$8 = t$13.getDefaults().tagPrefixes;
			n$8 = s$8 && s$8.find((i$18) => e$4.indexOf(i$18.prefix) === 0);
		}
		if (!n$8) return e$4[0] === "!" ? e$4 : `!<${e$4}>`;
		let r$12 = e$4.substr(n$8.prefix.length).replace(/[!,[\]{}]/g, (s$8) => ({
			"!": "%21",
			",": "%2C",
			"[": "%5B",
			"]": "%5D",
			"{": "%7B",
			"}": "%7D"
		})[s$8]);
		return n$8.handle + r$12;
	}
	function La$5(t$13, e$4) {
		if (e$4 instanceof S$4.Alias) return S$4.Alias;
		if (e$4.tag) {
			let s$8 = t$13.filter((i$18) => i$18.tag === e$4.tag);
			if (s$8.length > 0) return s$8.find((i$18) => i$18.format === e$4.format) || s$8[0];
		}
		let n$8, r$12;
		if (e$4 instanceof S$4.Scalar) {
			r$12 = e$4.value;
			let s$8 = t$13.filter((i$18) => i$18.identify && i$18.identify(r$12) || i$18.class && r$12 instanceof i$18.class);
			n$8 = s$8.find((i$18) => i$18.format === e$4.format) || s$8.find((i$18) => !i$18.format);
		} else r$12 = e$4, n$8 = t$13.find((s$8) => s$8.nodeClass && r$12 instanceof s$8.nodeClass);
		if (!n$8) {
			let s$8 = r$12 && r$12.constructor ? r$12.constructor.name : typeof r$12;
			throw new Error(`Tag not resolved for ${s$8} value`);
		}
		return n$8;
	}
	function Ta$3(t$13, e$4, { anchors: n$8, doc: r$12 }) {
		let s$8 = [], i$18 = r$12.anchors.getName(t$13);
		return i$18 && (n$8[i$18] = t$13, s$8.push(`&${i$18}`)), t$13.tag ? s$8.push(vs$2(r$12, t$13.tag)) : e$4.default || s$8.push(vs$2(r$12, e$4.tag)), s$8.join(" ");
	}
	function Gt$4(t$13, e$4, n$8, r$12) {
		let { anchors: s$8, schema: i$18 } = e$4.doc, o$9;
		if (!(t$13 instanceof S$4.Node)) {
			let l$10 = {
				aliasNodes: [],
				onTagObj: (f$3) => o$9 = f$3,
				prevObjects: /* @__PURE__ */ new Map()
			};
			t$13 = i$18.createNode(t$13, !0, null, l$10);
			for (let f$3 of l$10.aliasNodes) {
				f$3.source = f$3.source.node;
				let m$11 = s$8.getName(f$3.source);
				m$11 || (m$11 = s$8.newName(), s$8.map[m$11] = f$3.source);
			}
		}
		if (t$13 instanceof S$4.Pair) return t$13.toString(e$4, n$8, r$12);
		o$9 || (o$9 = La$5(i$18.tags, t$13));
		let a$13 = Ta$3(t$13, o$9, e$4);
		a$13.length > 0 && (e$4.indentAtStart = (e$4.indentAtStart || 0) + a$13.length + 1);
		let c$3 = typeof o$9.stringify == "function" ? o$9.stringify(t$13, e$4, n$8, r$12) : t$13 instanceof S$4.Scalar ? S$4.stringifyString(t$13, e$4, n$8, r$12) : t$13.toString(e$4, n$8, r$12);
		return a$13 ? t$13 instanceof S$4.Scalar || c$3[0] === "{" || c$3[0] === "[" ? `${a$13} ${c$3}` : `${a$13}
${e$4.indent}${c$3}` : c$3;
	}
	var Zn$5 = class t$13 {
		static validAnchorNode(e$4) {
			return e$4 instanceof S$4.Scalar || e$4 instanceof S$4.YAMLSeq || e$4 instanceof S$4.YAMLMap;
		}
		constructor(e$4) {
			Y$6._defineProperty(this, "map", Object.create(null)), this.prefix = e$4;
		}
		createAlias(e$4, n$8) {
			return this.setAnchor(e$4, n$8), new S$4.Alias(e$4);
		}
		createMergePair(...e$4) {
			let n$8 = new S$4.Merge();
			return n$8.value.items = e$4.map((r$12) => {
				if (r$12 instanceof S$4.Alias) {
					if (r$12.source instanceof S$4.YAMLMap) return r$12;
				} else if (r$12 instanceof S$4.YAMLMap) return this.createAlias(r$12);
				throw new Error("Merge sources must be Map nodes or their Aliases");
			}), n$8;
		}
		getName(e$4) {
			let { map: n$8 } = this;
			return Object.keys(n$8).find((r$12) => n$8[r$12] === e$4);
		}
		getNames() {
			return Object.keys(this.map);
		}
		getNode(e$4) {
			return this.map[e$4];
		}
		newName(e$4) {
			e$4 || (e$4 = this.prefix);
			let n$8 = Object.keys(this.map);
			for (let r$12 = 1;; ++r$12) {
				let s$8 = `${e$4}${r$12}`;
				if (!n$8.includes(s$8)) return s$8;
			}
		}
		resolveNodes() {
			let { map: e$4, _cstAliases: n$8 } = this;
			Object.keys(e$4).forEach((r$12) => {
				e$4[r$12] = e$4[r$12].resolved;
			}), n$8.forEach((r$12) => {
				r$12.source = r$12.source.resolved;
			}), delete this._cstAliases;
		}
		setAnchor(e$4, n$8) {
			if (e$4 != null && !t$13.validAnchorNode(e$4)) throw new Error("Anchors may only be set for Scalar, Seq and Map nodes");
			if (n$8 && /[\x00-\x19\s,[\]{}]/.test(n$8)) throw new Error("Anchor names must not contain whitespace or control characters");
			let { map: r$12 } = this, s$8 = e$4 && Object.keys(r$12).find((i$18) => r$12[i$18] === e$4);
			if (s$8) if (n$8) s$8 !== n$8 && (delete r$12[s$8], r$12[n$8] = e$4);
			else return s$8;
			else {
				if (!n$8) {
					if (!e$4) return null;
					n$8 = this.newName();
				}
				r$12[n$8] = e$4;
			}
			return n$8;
		}
	}, Ht$5 = (t$13, e$4) => {
		if (t$13 && typeof t$13 == "object") {
			let { tag: n$8 } = t$13;
			t$13 instanceof S$4.Collection ? (n$8 && (e$4[n$8] = !0), t$13.items.forEach((r$12) => Ht$5(r$12, e$4))) : t$13 instanceof S$4.Pair ? (Ht$5(t$13.key, e$4), Ht$5(t$13.value, e$4)) : t$13 instanceof S$4.Scalar && n$8 && (e$4[n$8] = !0);
		}
		return e$4;
	}, Ma$5 = (t$13) => Object.keys(Ht$5(t$13, {}));
	function Ca$3(t$13, e$4) {
		let n$8 = {
			before: [],
			after: []
		}, r$12, s$8 = !1;
		for (let i$18 of e$4) if (i$18.valueRange) {
			if (r$12 !== void 0) {
				t$13.errors.push(new Y$6.YAMLSyntaxError(i$18, "Document contains trailing content not separated by a ... or --- line"));
				break;
			}
			let o$9 = S$4.resolveNode(t$13, i$18);
			s$8 && (o$9.spaceBefore = !0, s$8 = !1), r$12 = o$9;
		} else i$18.comment !== null ? (r$12 === void 0 ? n$8.before : n$8.after).push(i$18.comment) : i$18.type === Y$6.Type.BLANK_LINE && (s$8 = !0, r$12 === void 0 && n$8.before.length > 0 && !t$13.commentBefore && (t$13.commentBefore = n$8.before.join(`
`), n$8.before = []));
		if (t$13.contents = r$12 || null, !r$12) t$13.comment = n$8.before.concat(n$8.after).join(`
`) || null;
		else {
			let i$18 = n$8.before.join(`
`);
			if (i$18) {
				let o$9 = r$12 instanceof S$4.Collection && r$12.items[0] ? r$12.items[0] : r$12;
				o$9.commentBefore = o$9.commentBefore ? `${i$18}
${o$9.commentBefore}` : i$18;
			}
			t$13.comment = n$8.after.join(`
`) || null;
		}
	}
	function ka$4({ tagPrefixes: t$13 }, e$4) {
		let [n$8, r$12] = e$4.parameters;
		if (!n$8 || !r$12) throw new Y$6.YAMLSemanticError(e$4, "Insufficient parameters given for %TAG directive");
		if (t$13.some((s$8) => s$8.handle === n$8)) throw new Y$6.YAMLSemanticError(e$4, "The %TAG directive must only be given at most once per handle in the same document.");
		return {
			handle: n$8,
			prefix: r$12
		};
	}
	function Pa$3(t$13, e$4) {
		let [n$8] = e$4.parameters;
		if (e$4.name === "YAML:1.0" && (n$8 = "1.0"), !n$8) throw new Y$6.YAMLSemanticError(e$4, "Insufficient parameters given for %YAML directive");
		if (!_s$3[n$8]) {
			let s$8 = `Document will be parsed as YAML ${t$13.version || t$13.options.version} rather than YAML ${n$8}`;
			t$13.warnings.push(new Y$6.YAMLWarning(e$4, s$8));
		}
		return n$8;
	}
	function Ia$3(t$13, e$4, n$8) {
		let r$12 = [], s$8 = !1;
		for (let i$18 of e$4) {
			let { comment: o$9, name: a$13 } = i$18;
			switch (a$13) {
				case "TAG":
					try {
						t$13.tagPrefixes.push(ka$4(t$13, i$18));
					} catch (c$3) {
						t$13.errors.push(c$3);
					}
					s$8 = !0;
					break;
				case "YAML":
				case "YAML:1.0":
					if (t$13.version) t$13.errors.push(new Y$6.YAMLSemanticError(i$18, "The %YAML directive must only be given at most once per document."));
					try {
						t$13.version = Pa$3(t$13, i$18);
					} catch (c$3) {
						t$13.errors.push(c$3);
					}
					s$8 = !0;
					break;
				default: if (a$13) {
					let c$3 = `YAML only supports %TAG and %YAML directives, and not %${a$13}`;
					t$13.warnings.push(new Y$6.YAMLWarning(i$18, c$3));
				}
			}
			o$9 && r$12.push(o$9);
		}
		if (n$8 && !s$8 && (t$13.version || n$8.version || t$13.options.version) === "1.1") {
			let i$18 = ({ handle: o$9, prefix: a$13 }) => ({
				handle: o$9,
				prefix: a$13
			});
			t$13.tagPrefixes = n$8.tagPrefixes.map(i$18), t$13.version = n$8.version;
		}
		t$13.commentBefore = r$12.join(`
`) || null;
	}
	function Ve$5(t$13) {
		if (t$13 instanceof S$4.Collection) return !0;
		throw new Error("Expected a YAML collection as document contents");
	}
	var Jt$3 = class t$13 {
		constructor(e$4) {
			this.anchors = new Zn$5(e$4.anchorPrefix), this.commentBefore = null, this.comment = null, this.contents = null, this.directivesEndMarker = null, this.errors = [], this.options = e$4, this.schema = null, this.tagPrefixes = [], this.version = null, this.warnings = [];
		}
		add(e$4) {
			return Ve$5(this.contents), this.contents.add(e$4);
		}
		addIn(e$4, n$8) {
			Ve$5(this.contents), this.contents.addIn(e$4, n$8);
		}
		delete(e$4) {
			return Ve$5(this.contents), this.contents.delete(e$4);
		}
		deleteIn(e$4) {
			return S$4.isEmptyPath(e$4) ? this.contents == null ? !1 : (this.contents = null, !0) : (Ve$5(this.contents), this.contents.deleteIn(e$4));
		}
		getDefaults() {
			return t$13.defaults[this.version] || t$13.defaults[this.options.version] || {};
		}
		get(e$4, n$8) {
			return this.contents instanceof S$4.Collection ? this.contents.get(e$4, n$8) : void 0;
		}
		getIn(e$4, n$8) {
			return S$4.isEmptyPath(e$4) ? !n$8 && this.contents instanceof S$4.Scalar ? this.contents.value : this.contents : this.contents instanceof S$4.Collection ? this.contents.getIn(e$4, n$8) : void 0;
		}
		has(e$4) {
			return this.contents instanceof S$4.Collection ? this.contents.has(e$4) : !1;
		}
		hasIn(e$4) {
			return S$4.isEmptyPath(e$4) ? this.contents !== void 0 : this.contents instanceof S$4.Collection ? this.contents.hasIn(e$4) : !1;
		}
		set(e$4, n$8) {
			Ve$5(this.contents), this.contents.set(e$4, n$8);
		}
		setIn(e$4, n$8) {
			S$4.isEmptyPath(e$4) ? this.contents = n$8 : (Ve$5(this.contents), this.contents.setIn(e$4, n$8));
		}
		setSchema(e$4, n$8) {
			if (!e$4 && !n$8 && this.schema) return;
			typeof e$4 == "number" && (e$4 = e$4.toFixed(1)), e$4 === "1.0" || e$4 === "1.1" || e$4 === "1.2" ? (this.version ? this.version = e$4 : this.options.version = e$4, delete this.options.schema) : e$4 && typeof e$4 == "string" && (this.options.schema = e$4), Array.isArray(n$8) && (this.options.customTags = n$8);
			let r$12 = Object.assign({}, this.getDefaults(), this.options);
			this.schema = new Is$3.Schema(r$12);
		}
		parse(e$4, n$8) {
			this.options.keepCstNodes && (this.cstNode = e$4), this.options.keepNodeTypes && (this.type = "DOCUMENT");
			let { directives: r$12 = [], contents: s$8 = [], directivesEndMarker: i$18, error: o$9, valueRange: a$13 } = e$4;
			if (o$9 && (o$9.source || (o$9.source = this), this.errors.push(o$9)), Ia$3(this, r$12, n$8), i$18 && (this.directivesEndMarker = !0), this.range = a$13 ? [a$13.start, a$13.end] : null, this.setSchema(), this.anchors._cstAliases = [], Ca$3(this, s$8), this.anchors.resolveNodes(), this.options.prettyErrors) {
				for (let c$3 of this.errors) c$3 instanceof Y$6.YAMLError && c$3.makePretty();
				for (let c$3 of this.warnings) c$3 instanceof Y$6.YAMLError && c$3.makePretty();
			}
			return this;
		}
		listNonDefaultTags() {
			return Ma$5(this.contents).filter((e$4) => e$4.indexOf(Is$3.Schema.defaultPrefix) !== 0);
		}
		setTagPrefix(e$4, n$8) {
			if (e$4[0] !== "!" || e$4[e$4.length - 1] !== "!") throw new Error("Handle must start and end with !");
			if (n$8) {
				let r$12 = this.tagPrefixes.find((s$8) => s$8.handle === e$4);
				r$12 ? r$12.prefix = n$8 : this.tagPrefixes.push({
					handle: e$4,
					prefix: n$8
				});
			} else this.tagPrefixes = this.tagPrefixes.filter((r$12) => r$12.handle !== e$4);
		}
		toJSON(e$4, n$8) {
			let { keepBlobsInJSON: r$12, mapAsMap: s$8, maxAliasCount: i$18 } = this.options, o$9 = r$12 && (typeof e$4 != "string" || !(this.contents instanceof S$4.Scalar)), a$13 = {
				doc: this,
				indentStep: "  ",
				keep: o$9,
				mapAsMap: o$9 && !!s$8,
				maxAliasCount: i$18,
				stringify: Gt$4
			}, c$3 = Object.keys(this.anchors.map);
			c$3.length > 0 && (a$13.anchors = new Map(c$3.map((f$3) => [this.anchors.map[f$3], {
				alias: [],
				aliasCount: 0,
				count: 1
			}])));
			let l$10 = S$4.toJSON(this.contents, e$4, a$13);
			if (typeof n$8 == "function" && a$13.anchors) for (let { count: f$3, res: m$11 } of a$13.anchors.values()) n$8(m$11, f$3);
			return l$10;
		}
		toString() {
			if (this.errors.length > 0) throw new Error("Document with errors cannot be stringified");
			let e$4 = this.options.indent;
			if (!Number.isInteger(e$4) || e$4 <= 0) {
				let c$3 = JSON.stringify(e$4);
				throw new Error(`"indent" option must be a positive integer, not ${c$3}`);
			}
			this.setSchema();
			let n$8 = [], r$12 = !1;
			if (this.version) {
				let c$3 = "%YAML 1.2";
				this.schema.name === "yaml-1.1" && (this.version === "1.0" ? c$3 = "%YAML:1.0" : this.version === "1.1" && (c$3 = "%YAML 1.1")), n$8.push(c$3), r$12 = !0;
			}
			let s$8 = this.listNonDefaultTags();
			this.tagPrefixes.forEach(({ handle: c$3, prefix: l$10 }) => {
				s$8.some((f$3) => f$3.indexOf(l$10) === 0) && (n$8.push(`%TAG ${c$3} ${l$10}`), r$12 = !0);
			}), (r$12 || this.directivesEndMarker) && n$8.push("---"), this.commentBefore && ((r$12 || !this.directivesEndMarker) && n$8.unshift(""), n$8.unshift(this.commentBefore.replace(/^/gm, "#")));
			let i$18 = {
				anchors: Object.create(null),
				doc: this,
				indent: "",
				indentStep: " ".repeat(e$4),
				stringify: Gt$4
			}, o$9 = !1, a$13 = null;
			if (this.contents) {
				this.contents instanceof S$4.Node && (this.contents.spaceBefore && (r$12 || this.directivesEndMarker) && n$8.push(""), this.contents.commentBefore && n$8.push(this.contents.commentBefore.replace(/^/gm, "#")), i$18.forceBlockIndent = !!this.comment, a$13 = this.contents.comment);
				let c$3 = a$13 ? null : () => o$9 = !0, l$10 = Gt$4(this.contents, i$18, () => a$13 = null, c$3);
				n$8.push(S$4.addComment(l$10, "", a$13));
			} else this.contents !== void 0 && n$8.push(Gt$4(this.contents, i$18));
			return this.comment && ((!o$9 || a$13) && n$8[n$8.length - 1] !== "" && n$8.push(""), n$8.push(this.comment.replace(/^/gm, "#"))), n$8.join(`
`) + `
`;
		}
	};
	Y$6._defineProperty(Jt$3, "defaults", _s$3);
	Xt$5.Document = Jt$3;
	Xt$5.defaultOptions = Oa$3;
	Xt$5.scalarOptions = Aa$4;
});
var Ys = te$1((Ds$2) => {
	var er$3 = ns(), Oe$6 = Rs(), va$4 = zn$1(), _a$4 = oe$1(), Ra$6 = Gn$1();
	qe$1();
	function xa$5(t$13, e$4 = !0, n$8) {
		n$8 === void 0 && typeof e$4 == "string" && (n$8 = e$4, e$4 = !0);
		let r$12 = Object.assign({}, Oe$6.Document.defaults[Oe$6.defaultOptions.version], Oe$6.defaultOptions);
		return new va$4.Schema(r$12).createNode(t$13, e$4, n$8);
	}
	var je$4 = class extends Oe$6.Document {
		constructor(e$4) {
			super(Object.assign({}, Oe$6.defaultOptions, e$4));
		}
	};
	function Da$3(t$13, e$4) {
		let n$8 = [], r$12;
		for (let s$8 of er$3.parse(t$13)) {
			let i$18 = new je$4(e$4);
			i$18.parse(s$8, r$12), n$8.push(i$18), r$12 = i$18;
		}
		return n$8;
	}
	function xs$3(t$13, e$4) {
		let n$8 = er$3.parse(t$13), r$12 = new je$4(e$4).parse(n$8[0]);
		if (n$8.length > 1) r$12.errors.unshift(new _a$4.YAMLSemanticError(n$8[1], "Source contains multiple documents; please use YAML.parseAllDocuments()"));
		return r$12;
	}
	function Ya$3(t$13, e$4) {
		let n$8 = xs$3(t$13, e$4);
		if (n$8.warnings.forEach((r$12) => Ra$6.warn(r$12)), n$8.errors.length > 0) throw n$8.errors[0];
		return n$8.toJSON();
	}
	function $a$3(t$13, e$4) {
		let n$8 = new je$4(e$4);
		return n$8.contents = t$13, String(n$8);
	}
	Ds$2.YAML = {
		createNode: xa$5,
		defaultOptions: Oe$6.defaultOptions,
		Document: je$4,
		parse: Ya$3,
		parseAllDocuments: Da$3,
		parseCST: er$3.parse,
		parseDocument: xs$3,
		scalarOptions: Oe$6.scalarOptions,
		stringify: $a$3
	};
});
var tr$1 = te$1((nf$2, $s$2) => {
	$s$2.exports = Ys().YAML;
});
var Bs = te$1((G$6) => {
	var We$2 = qe$1(), Qe$4 = oe$1();
	G$6.findPair = We$2.findPair;
	G$6.parseMap = We$2.resolveMap;
	G$6.parseSeq = We$2.resolveSeq;
	G$6.stringifyNumber = We$2.stringifyNumber;
	G$6.stringifyString = We$2.stringifyString;
	G$6.toJSON = We$2.toJSON;
	G$6.Type = Qe$4.Type;
	G$6.YAMLError = Qe$4.YAMLError;
	G$6.YAMLReferenceError = Qe$4.YAMLReferenceError;
	G$6.YAMLSemanticError = Qe$4.YAMLSemanticError;
	G$6.YAMLSyntaxError = Qe$4.YAMLSyntaxError;
	G$6.YAMLWarning = Qe$4.YAMLWarning;
});
var gr$1 = {};
yr$1(gr$1, {
	__parsePrettierYamlConfig: () => sc,
	languages: () => Xr$1,
	options: () => zr$1,
	parsers: () => hr$1,
	printers: () => rc
});
var Vi = (t$13, e$4, n$8, r$12) => {
	if (!(t$13 && e$4 == null)) return e$4.replaceAll ? e$4.replaceAll(n$8, r$12) : n$8.global ? e$4.replace(n$8, r$12) : e$4.split(n$8).join(r$12);
}, At$1 = Vi;
var Me$1 = "string", ze$1 = "array", Ze$1 = "cursor", et$1 = "indent", Ce$1 = "align", tt$1 = "trim", ke$1 = "group", Pe$1 = "fill", ge$1 = "if-break", nt$1 = "indent-if-break", Ie$1 = "line-suffix", rt$1 = "line-suffix-boundary", Z$1 = "line", st$1 = "label", ve$1 = "break-parent", Lt$1 = new Set([
	Ze$1,
	et$1,
	Ce$1,
	tt$1,
	ke$1,
	Pe$1,
	ge$1,
	nt$1,
	Ie$1,
	rt$1,
	Z$1,
	st$1,
	ve$1
]);
var ji = (t$13, e$4, n$8) => {
	if (!(t$13 && e$4 == null)) return Array.isArray(e$4) || typeof e$4 == "string" ? e$4[n$8 < 0 ? e$4.length + n$8 : n$8] : e$4.at(n$8);
}, x$1 = ji;
function Wi(t$13) {
	if (typeof t$13 == "string") return Me$1;
	if (Array.isArray(t$13)) return ze$1;
	if (!t$13) return;
	let { type: e$4 } = t$13;
	if (Lt$1.has(e$4)) return e$4;
}
var _e$1 = Wi;
var Qi = (t$13) => new Intl.ListFormat("en-US", { type: "disjunction" }).format(t$13);
function Gi(t$13) {
	let e$4 = t$13 === null ? "null" : typeof t$13;
	if (e$4 !== "string" && e$4 !== "object") return `Unexpected doc '${e$4}', 
Expected it to be 'string' or 'object'.`;
	if (_e$1(t$13)) throw new Error("doc is valid.");
	let n$8 = Object.prototype.toString.call(t$13);
	if (n$8 !== "[object Object]") return `Unexpected doc '${n$8}'.`;
	let r$12 = Qi([...Lt$1].map((s$8) => `'${s$8}'`));
	return `Unexpected doc.type '${t$13.type}'.
Expected it to be ${r$12}.`;
}
var pn$1 = class extends Error {
	name = "InvalidDocError";
	constructor(e$4) {
		super(Gi(e$4)), this.doc = e$4;
	}
}, mn$1 = pn$1;
function Ji(t$13, e$4) {
	if (typeof t$13 == "string") return e$4(t$13);
	let n$8 = /* @__PURE__ */ new Map();
	return r$12(t$13);
	function r$12(i$18) {
		if (n$8.has(i$18)) return n$8.get(i$18);
		let o$9 = s$8(i$18);
		return n$8.set(i$18, o$9), o$9;
	}
	function s$8(i$18) {
		switch (_e$1(i$18)) {
			case ze$1: return e$4(i$18.map(r$12));
			case Pe$1: return e$4({
				...i$18,
				parts: i$18.parts.map(r$12)
			});
			case ge$1: return e$4({
				...i$18,
				breakContents: r$12(i$18.breakContents),
				flatContents: r$12(i$18.flatContents)
			});
			case ke$1: {
				let { expandedStates: o$9, contents: a$13 } = i$18;
				return o$9 ? (o$9 = o$9.map(r$12), a$13 = o$9[0]) : a$13 = r$12(a$13), e$4({
					...i$18,
					contents: a$13,
					expandedStates: o$9
				});
			}
			case Ce$1:
			case et$1:
			case nt$1:
			case st$1:
			case Ie$1: return e$4({
				...i$18,
				contents: r$12(i$18.contents)
			});
			case Me$1:
			case Ze$1:
			case tt$1:
			case rt$1:
			case Z$1:
			case ve$1: return e$4(i$18);
			default: throw new mn$1(i$18);
		}
	}
}
function Er$1(t$13, e$4 = it$1) {
	return Ji(t$13, (n$8) => typeof n$8 == "string" ? P$1(e$4, n$8.split(`
`)) : n$8);
}
var hn$1 = () => {}, de$1 = hn$1, gn$1 = hn$1, Sr$1 = hn$1;
function ot$1(t$13, e$4) {
	return de$1(e$4), {
		type: Ce$1,
		contents: e$4,
		n: t$13
	};
}
function Re$1(t$13, e$4 = {}) {
	return de$1(t$13), gn$1(e$4.expandedStates, !0), {
		type: ke$1,
		id: e$4.id,
		contents: t$13,
		break: !!e$4.shouldBreak,
		expandedStates: e$4.expandedStates
	};
}
function dn$1(t$13) {
	return ot$1(Number.NEGATIVE_INFINITY, t$13);
}
function wr$1(t$13) {
	return ot$1({ type: "root" }, t$13);
}
function br$1(t$13) {
	return ot$1(-1, t$13);
}
function yn$1(t$13, e$4) {
	return Re$1(t$13[0], {
		...e$4,
		expandedStates: t$13
	});
}
function Tt$1(t$13) {
	return Sr$1(t$13), {
		type: Pe$1,
		parts: t$13
	};
}
function at$1(t$13, e$4 = "", n$8 = {}) {
	return de$1(t$13), e$4 !== "" && de$1(e$4), {
		type: ge$1,
		breakContents: t$13,
		flatContents: e$4,
		groupId: n$8.groupId
	};
}
function Nr$1(t$13) {
	return de$1(t$13), {
		type: Ie$1,
		contents: t$13
	};
}
var Mt = { type: ve$1 };
var Xi = {
	type: Z$1,
	hard: !0
}, zi = {
	type: Z$1,
	hard: !0,
	literal: !0
}, ne$1 = { type: Z$1 }, Ct$1 = {
	type: Z$1,
	soft: !0
}, N$1 = [Xi, Mt], it$1 = [zi, Mt];
function P$1(t$13, e$4) {
	de$1(t$13), gn$1(e$4);
	let n$8 = [];
	for (let r$12 = 0; r$12 < e$4.length; r$12++) r$12 !== 0 && n$8.push(t$13), n$8.push(e$4[r$12]);
	return n$8;
}
function kt$1(t$13) {
	return (e$4, n$8, r$12) => {
		let s$8 = !!(r$12 != null && r$12.backwards);
		if (n$8 === !1) return !1;
		let { length: i$18 } = e$4, o$9 = n$8;
		for (; o$9 >= 0 && o$9 < i$18;) {
			let a$13 = e$4.charAt(o$9);
			if (t$13 instanceof RegExp) {
				if (!t$13.test(a$13)) return o$9;
			} else if (!t$13.includes(a$13)) return o$9;
			s$8 ? o$9-- : o$9++;
		}
		return o$9 === -1 || o$9 === i$18 ? o$9 : !1;
	};
}
kt$1(/\s/u);
var En$1 = kt$1(" 	");
kt$1(",; 	");
kt$1(/[^\n\r]/u);
function Zi(t$13, e$4, n$8) {
	let r$12 = !!(n$8 != null && n$8.backwards);
	if (e$4 === !1) return !1;
	let s$8 = t$13.charAt(e$4);
	if (r$12) {
		if (t$13.charAt(e$4 - 1) === "\r" && s$8 === `
`) return e$4 - 2;
		if (s$8 === `
` || s$8 === "\r" || s$8 === "\u2028" || s$8 === "\u2029") return e$4 - 1;
	} else {
		if (s$8 === "\r" && t$13.charAt(e$4 + 1) === `
`) return e$4 + 2;
		if (s$8 === `
` || s$8 === "\r" || s$8 === "\u2028" || s$8 === "\u2029") return e$4 + 1;
	}
	return e$4;
}
var Sn$1 = Zi;
function eo$1(t$13, e$4) {
	let n$8 = e$4 - 1;
	n$8 = En$1(t$13, n$8, { backwards: !0 }), n$8 = Sn$1(t$13, n$8, { backwards: !0 }), n$8 = En$1(t$13, n$8, { backwards: !0 });
	let r$12 = Sn$1(t$13, n$8, { backwards: !0 });
	return n$8 !== r$12;
}
var Or$1 = eo$1;
var wn$1 = class extends Error {
	name = "UnexpectedNodeError";
	constructor(e$4, n$8, r$12 = "type") {
		super(`Unexpected ${n$8} node ${r$12}: ${JSON.stringify(e$4[r$12])}.`), this.node = e$4;
	}
}, Ar$1 = wn$1;
function Lr$1(t$13, e$4) {
	let { node: n$8 } = t$13;
	if (n$8.type === "root" && e$4.filepath && /(?:[/\\]|^)\.(?:prettier|stylelint|lintstaged)rc$/u.test(e$4.filepath)) return async (r$12) => {
		let s$8 = await r$12(e$4.originalText, { parser: "json" });
		return s$8 ? [s$8, N$1] : void 0;
	};
}
Lr$1.getVisitorKeys = () => [];
var Tr$1 = Lr$1;
var ct$1 = null;
function lt(t$13) {
	if (ct$1 !== null && typeof ct$1.property) {
		let e$4 = ct$1;
		return ct$1 = lt.prototype = null, e$4;
	}
	return ct$1 = lt.prototype = t$13 ?? Object.create(null), new lt();
}
var to$1 = 10;
for (let t$13 = 0; t$13 <= to$1; t$13++) lt();
function bn$1(t$13) {
	return lt(t$13);
}
function no$1(t$13, e$4 = "type") {
	bn$1(t$13);
	function n$8(r$12) {
		let s$8 = r$12[e$4], i$18 = t$13[s$8];
		if (!Array.isArray(i$18)) throw Object.assign(/* @__PURE__ */ new Error(`Missing visitor keys for '${s$8}'.`), { node: r$12 });
		return i$18;
	}
	return n$8;
}
var Mr$1 = no$1;
var ro$1 = Object.fromEntries(Object.entries({
	root: ["children"],
	document: [
		"head",
		"body",
		"children"
	],
	documentHead: ["children"],
	documentBody: ["children"],
	directive: [],
	alias: [],
	blockLiteral: [],
	blockFolded: ["children"],
	plain: ["children"],
	quoteSingle: [],
	quoteDouble: [],
	mapping: ["children"],
	mappingItem: [
		"key",
		"value",
		"children"
	],
	mappingKey: ["content", "children"],
	mappingValue: ["content", "children"],
	sequence: ["children"],
	sequenceItem: ["content", "children"],
	flowMapping: ["children"],
	flowMappingItem: [
		"key",
		"value",
		"children"
	],
	flowSequence: ["children"],
	flowSequenceItem: ["content", "children"],
	comment: [],
	tag: [],
	anchor: []
}).map(([t$13, e$4]) => [t$13, [
	...e$4,
	"anchor",
	"tag",
	"indicatorComment",
	"leadingComments",
	"middleComments",
	"trailingComment",
	"endComments"
]]));
var so$1 = Mr$1(ro$1), kr$1 = so$1;
function xe$1(t$13) {
	return t$13.position.start.offset;
}
function Pr$1(t$13) {
	return t$13.position.end.offset;
}
var Ir$1 = "format";
var vr$1 = /^\s*#[^\S\n]*@(?:noformat|noprettier)\s*?(?:\n|$)/u, _r$1 = /^\s*#[^\S\n]*@(?:format|prettier)\s*?(?:\n|$)/u, Rr$1 = /^\s*@(?:format|prettier)\s*$/u;
function xr$1(t$13) {
	return Rr$1.test(t$13);
}
function Dr$1(t$13) {
	return _r$1.test(t$13);
}
function Yr$1(t$13) {
	return vr$1.test(t$13);
}
function $r$1(t$13) {
	return `# @${Ir$1}

${t$13}`;
}
function io$1(t$13) {
	return Array.isArray(t$13) && t$13.length > 0;
}
var De$1 = io$1;
function K$1(t$13, e$4) {
	return typeof (t$13 == null ? void 0 : t$13.type) == "string" && (!e$4 || e$4.includes(t$13.type));
}
function Nn$1(t$13, e$4, n$8) {
	return e$4("children" in t$13 ? {
		...t$13,
		children: t$13.children.map((r$12) => Nn$1(r$12, e$4, t$13))
	} : t$13, n$8);
}
function Ye$1(t$13, e$4, n$8) {
	Object.defineProperty(t$13, e$4, {
		get: n$8,
		enumerable: !1
	});
}
function Fr$1(t$13, e$4) {
	let n$8 = 0, r$12 = e$4.length;
	for (let s$8 = t$13.position.end.offset - 1; s$8 < r$12; s$8++) {
		let i$18 = e$4[s$8];
		if (i$18 === `
` && n$8++, n$8 === 1 && /\S/u.test(i$18)) return !1;
		if (n$8 === 2) return !0;
	}
	return !1;
}
function Pt$1(t$13) {
	let { node: e$4 } = t$13;
	switch (e$4.type) {
		case "tag":
		case "anchor":
		case "comment": return !1;
	}
	let n$8 = t$13.stack.length;
	for (let r$12 = 1; r$12 < n$8; r$12++) {
		let s$8 = t$13.stack[r$12], i$18 = t$13.stack[r$12 - 1];
		if (Array.isArray(i$18) && typeof s$8 == "number" && s$8 !== i$18.length - 1) return !1;
	}
	return !0;
}
function It$1(t$13) {
	return De$1(t$13.children) ? It$1(x$1(!1, t$13.children, -1)) : t$13;
}
function Br$1(t$13) {
	return t$13.value.trim() === "prettier-ignore";
}
function qr$1(t$13) {
	let { node: e$4 } = t$13;
	if (e$4.type === "documentBody") {
		let n$8 = t$13.parent.head;
		return I$1(n$8) && Br$1(x$1(!1, n$8.endComments, -1));
	}
	return ee$1(e$4) && Br$1(x$1(!1, e$4.leadingComments, -1));
}
function $e$1(t$13) {
	return !De$1(t$13.children) && !oo$1(t$13);
}
function oo$1(t$13) {
	return ee$1(t$13) || ie$1(t$13) || On(t$13) || V$1(t$13) || I$1(t$13);
}
function ee$1(t$13) {
	return De$1(t$13 == null ? void 0 : t$13.leadingComments);
}
function ie$1(t$13) {
	return De$1(t$13 == null ? void 0 : t$13.middleComments);
}
function On(t$13) {
	return t$13 == null ? void 0 : t$13.indicatorComment;
}
function V$1(t$13) {
	return t$13 == null ? void 0 : t$13.trailingComment;
}
function I$1(t$13) {
	return De$1(t$13 == null ? void 0 : t$13.endComments);
}
function Ur$1(t$13) {
	let e$4 = [], n$8;
	for (let r$12 of t$13.split(/( +)/u)) r$12 !== " " ? n$8 === " " ? e$4.push(r$12) : e$4.push((e$4.pop() || "") + r$12) : n$8 === void 0 && e$4.unshift(""), n$8 = r$12;
	return n$8 === " " && e$4.push((e$4.pop() || "") + " "), e$4[0] === "" && (e$4.shift(), e$4.unshift(" " + (e$4.shift() || ""))), e$4;
}
function Kr$1(t$13, e$4, n$8) {
	let r$12 = e$4.split(`
`).map((s$8, i$18, o$9) => i$18 === 0 && i$18 === o$9.length - 1 ? s$8 : i$18 !== 0 && i$18 !== o$9.length - 1 ? s$8.trim() : i$18 === 0 ? s$8.trimEnd() : s$8.trimStart());
	return n$8.proseWrap === "preserve" ? r$12.map((s$8) => s$8.length === 0 ? [] : [s$8]) : r$12.map((s$8) => s$8.length === 0 ? [] : Ur$1(s$8)).reduce((s$8, i$18, o$9) => o$9 !== 0 && r$12[o$9 - 1].length > 0 && i$18.length > 0 && !(t$13 === "quoteDouble" && x$1(!1, x$1(!1, s$8, -1), -1).endsWith("\\")) ? [...s$8.slice(0, -1), [...x$1(!1, s$8, -1), ...i$18]] : [...s$8, i$18], []).map((s$8) => n$8.proseWrap === "never" ? [s$8.join(" ")] : s$8);
}
function Vr$1(t$13, { parentIndent: e$4, isLastDescendant: n$8, options: r$12 }) {
	let s$8 = t$13.position.start.line === t$13.position.end.line ? "" : r$12.originalText.slice(t$13.position.start.offset, t$13.position.end.offset).match(/^[^\n]*\n(.*)$/su)[1], i$18;
	if (t$13.indent === null) {
		let c$3 = s$8.match(/^(?<leadingSpace> *)[^\n\r ]/mu);
		i$18 = c$3 ? c$3.groups.leadingSpace.length : Number.POSITIVE_INFINITY;
	} else i$18 = t$13.indent - 1 + e$4;
	let o$9 = s$8.split(`
`).map((c$3) => c$3.slice(i$18));
	if (r$12.proseWrap === "preserve" || t$13.type === "blockLiteral") return a$13(o$9.map((c$3) => c$3.length === 0 ? [] : [c$3]));
	return a$13(o$9.map((c$3) => c$3.length === 0 ? [] : Ur$1(c$3)).reduce((c$3, l$10, f$3) => f$3 !== 0 && o$9[f$3 - 1].length > 0 && l$10.length > 0 && !/^\s/u.test(l$10[0]) && !/^\s|\s$/u.test(x$1(!1, c$3, -1)) ? [...c$3.slice(0, -1), [...x$1(!1, c$3, -1), ...l$10]] : [...c$3, l$10], []).map((c$3) => c$3.reduce((l$10, f$3) => l$10.length > 0 && /\s$/u.test(x$1(!1, l$10, -1)) ? [...l$10.slice(0, -1), x$1(!1, l$10, -1) + " " + f$3] : [...l$10, f$3], [])).map((c$3) => r$12.proseWrap === "never" ? [c$3.join(" ")] : c$3));
	function a$13(c$3) {
		if (t$13.chomping === "keep") return x$1(!1, c$3, -1).length === 0 ? c$3.slice(0, -1) : c$3;
		let l$10 = 0;
		for (let f$3 = c$3.length - 1; f$3 >= 0 && c$3[f$3].length === 0; f$3--) l$10++;
		return l$10 === 0 ? c$3 : l$10 >= 2 && !n$8 ? c$3.slice(0, -(l$10 - 1)) : c$3.slice(0, -l$10);
	}
}
function ft$1(t$13) {
	if (!t$13) return !0;
	switch (t$13.type) {
		case "plain":
		case "quoteDouble":
		case "quoteSingle":
		case "alias":
		case "flowMapping":
		case "flowSequence": return !0;
		default: return !1;
	}
}
var An$1 = /* @__PURE__ */ new WeakMap();
function vt$1(t$13, e$4) {
	let { node: n$8, root: r$12 } = t$13, s$8;
	return An$1.has(r$12) ? s$8 = An$1.get(r$12) : (s$8 = /* @__PURE__ */ new Set(), An$1.set(r$12, s$8)), !s$8.has(n$8.position.end.line) && (s$8.add(n$8.position.end.line), Fr$1(n$8, e$4) && !Ln$1(t$13.parent)) ? Ct$1 : "";
}
function Ln$1(t$13) {
	return I$1(t$13) && !K$1(t$13, [
		"documentHead",
		"documentBody",
		"flowMapping",
		"flowSequence"
	]);
}
function v$1(t$13, e$4) {
	return ot$1(" ".repeat(t$13), e$4);
}
function ao$1(t$13, e$4, n$8) {
	let { node: r$12 } = t$13, s$8 = t$13.ancestors.filter((l$10) => l$10.type === "sequence" || l$10.type === "mapping").length, i$18 = Pt$1(t$13), o$9 = [r$12.type === "blockFolded" ? ">" : "|"];
	r$12.indent !== null && o$9.push(r$12.indent.toString()), r$12.chomping !== "clip" && o$9.push(r$12.chomping === "keep" ? "+" : "-"), On(r$12) && o$9.push(" ", n$8("indicatorComment"));
	let a$13 = Vr$1(r$12, {
		parentIndent: s$8,
		isLastDescendant: i$18,
		options: e$4
	}), c$3 = [];
	for (let [l$10, f$3] of a$13.entries()) l$10 === 0 && c$3.push(N$1), c$3.push(Tt$1(P$1(ne$1, f$3))), l$10 !== a$13.length - 1 ? c$3.push(f$3.length === 0 ? N$1 : wr$1(it$1)) : r$12.chomping === "keep" && i$18 && c$3.push(dn$1(f$3.length === 0 ? N$1 : it$1));
	return r$12.indent === null ? o$9.push(br$1(v$1(e$4.tabWidth, c$3))) : o$9.push(dn$1(v$1(r$12.indent - 1 + s$8, c$3))), o$9;
}
var jr$1 = ao$1;
function _t$1(t$13, e$4, n$8) {
	let { node: r$12 } = t$13, s$8 = r$12.type === "flowMapping", i$18 = s$8 ? "{" : "[", o$9 = s$8 ? "}" : "]", a$13 = Ct$1;
	s$8 && r$12.children.length > 0 && e$4.bracketSpacing && (a$13 = ne$1);
	let c$3 = x$1(!1, r$12.children, -1), l$10 = (c$3 == null ? void 0 : c$3.type) === "flowMappingItem" && $e$1(c$3.key) && $e$1(c$3.value);
	return [
		i$18,
		v$1(e$4.tabWidth, [
			a$13,
			co$1(t$13, e$4, n$8),
			e$4.trailingComma === "none" ? "" : at$1(","),
			I$1(r$12) ? [N$1, P$1(N$1, t$13.map(n$8, "endComments"))] : ""
		]),
		l$10 ? "" : a$13,
		o$9
	];
}
function co$1(t$13, e$4, n$8) {
	return t$13.map(({ isLast: r$12, node: s$8, next: i$18 }) => [n$8(), r$12 ? "" : [
		",",
		ne$1,
		s$8.position.start.line !== i$18.position.start.line ? vt$1(t$13, e$4.originalText) : ""
	]], "children");
}
function lo$1(t$13, e$4, n$8) {
	var M$2;
	let { node: r$12, parent: s$8 } = t$13, { key: i$18, value: o$9 } = r$12, a$13 = $e$1(i$18), c$3 = $e$1(o$9);
	if (a$13 && c$3) return ": ";
	let l$10 = n$8("key"), f$3 = fo(r$12) ? " " : "";
	if (c$3) return r$12.type === "flowMappingItem" && s$8.type === "flowMapping" ? l$10 : r$12.type === "mappingItem" && Tn$1(i$18.content, e$4) && !V$1(i$18.content) && ((M$2 = s$8.tag) == null ? void 0 : M$2.value) !== "tag:yaml.org,2002:set" ? [
		l$10,
		f$3,
		":"
	] : ["? ", v$1(2, l$10)];
	let m$11 = n$8("value");
	if (a$13) return [": ", v$1(2, m$11)];
	if (ee$1(o$9) || !ft$1(i$18.content)) return [
		"? ",
		v$1(2, l$10),
		N$1,
		...t$13.map(() => [n$8(), N$1], "value", "leadingComments"),
		": ",
		v$1(2, m$11)
	];
	if (uo$1(i$18.content) && !ee$1(i$18.content) && !ie$1(i$18.content) && !V$1(i$18.content) && !I$1(i$18) && !ee$1(o$9.content) && !ie$1(o$9.content) && !I$1(o$9) && Tn$1(o$9.content, e$4)) return [
		l$10,
		f$3,
		": ",
		m$11
	];
	let d$14 = Symbol("mappingKey"), y$7 = Re$1([at$1("? "), Re$1(v$1(2, l$10), { id: d$14 })]), h$3 = [
		N$1,
		": ",
		v$1(2, m$11)
	], g$2 = [f$3, ":"];
	I$1(o$9) && o$9.content && K$1(o$9.content, ["flowMapping", "flowSequence"]) && o$9.content.children.length === 0 ? g$2.push(" ") : ee$1(o$9.content) || I$1(o$9) && o$9.content && !K$1(o$9.content, ["mapping", "sequence"]) || s$8.type === "mapping" && V$1(i$18.content) && ft$1(o$9.content) || K$1(o$9.content, ["mapping", "sequence"]) && o$9.content.tag === null && o$9.content.anchor === null ? g$2.push(N$1) : o$9.content ? g$2.push(ne$1) : V$1(o$9) && g$2.push(" "), g$2.push(m$11);
	let w$3 = v$1(e$4.tabWidth, g$2);
	return Tn$1(i$18.content, e$4) && !ee$1(i$18.content) && !ie$1(i$18.content) && !I$1(i$18) ? yn$1([[l$10, w$3]]) : yn$1([[y$7, at$1(h$3, w$3, { groupId: d$14 })]]);
}
function Tn$1(t$13, e$4) {
	if (!t$13) return !0;
	switch (t$13.type) {
		case "plain":
		case "quoteSingle":
		case "quoteDouble": break;
		case "alias": return !0;
		default: return !1;
	}
	if (e$4.proseWrap === "preserve") return t$13.position.start.line === t$13.position.end.line;
	if (/\\$/mu.test(e$4.originalText.slice(t$13.position.start.offset, t$13.position.end.offset))) return !1;
	switch (e$4.proseWrap) {
		case "never": return !t$13.value.includes(`
`);
		case "always": return !/[\n ]/u.test(t$13.value);
		default: return !1;
	}
}
function fo(t$13) {
	var e$4;
	return ((e$4 = t$13.key.content) == null ? void 0 : e$4.type) === "alias";
}
function uo$1(t$13) {
	if (!t$13) return !0;
	switch (t$13.type) {
		case "plain":
		case "quoteDouble":
		case "quoteSingle": return t$13.position.start.line === t$13.position.end.line;
		case "alias": return !0;
		default: return !1;
	}
}
var Wr$1 = lo$1;
function po$1(t$13) {
	return Nn$1(t$13, mo$1);
}
function mo$1(t$13) {
	switch (t$13.type) {
		case "document":
			Ye$1(t$13, "head", () => t$13.children[0]), Ye$1(t$13, "body", () => t$13.children[1]);
			break;
		case "documentBody":
		case "sequenceItem":
		case "flowSequenceItem":
		case "mappingKey":
		case "mappingValue":
			Ye$1(t$13, "content", () => t$13.children[0]);
			break;
		case "mappingItem":
		case "flowMappingItem":
			Ye$1(t$13, "key", () => t$13.children[0]), Ye$1(t$13, "value", () => t$13.children[1]);
			break;
	}
	return t$13;
}
var Qr$1 = po$1;
function ho(t$13, e$4, n$8) {
	let { node: r$12 } = t$13, s$8 = [];
	r$12.type !== "mappingValue" && ee$1(r$12) && s$8.push([P$1(N$1, t$13.map(n$8, "leadingComments")), N$1]);
	let { tag: i$18, anchor: o$9 } = r$12;
	i$18 && s$8.push(n$8("tag")), i$18 && o$9 && s$8.push(" "), o$9 && s$8.push(n$8("anchor"));
	let a$13 = "";
	return K$1(r$12, [
		"mapping",
		"sequence",
		"comment",
		"directive",
		"mappingItem",
		"sequenceItem"
	]) && !Pt$1(t$13) && (a$13 = vt$1(t$13, e$4.originalText)), (i$18 || o$9) && (K$1(r$12, ["sequence", "mapping"]) && !ie$1(r$12) ? s$8.push(N$1) : s$8.push(" ")), ie$1(r$12) && s$8.push([
		r$12.middleComments.length === 1 ? "" : N$1,
		P$1(N$1, t$13.map(n$8, "middleComments")),
		N$1
	]), qr$1(t$13) ? s$8.push(Er$1(e$4.originalText.slice(r$12.position.start.offset, r$12.position.end.offset).trimEnd())) : s$8.push(Re$1(go(t$13, e$4, n$8))), V$1(r$12) && !K$1(r$12, ["document", "documentHead"]) && s$8.push(Nr$1([
		r$12.type === "mappingValue" && !r$12.content ? "" : " ",
		t$13.parent.type === "mappingKey" && t$13.getParentNode(2).type === "mapping" && ft$1(r$12) ? "" : Mt,
		n$8("trailingComment")
	])), Ln$1(r$12) && s$8.push(v$1(r$12.type === "sequenceItem" ? 2 : 0, [N$1, P$1(N$1, t$13.map(({ node: c$3 }) => [Or$1(e$4.originalText, xe$1(c$3)) ? N$1 : "", n$8()], "endComments"))])), s$8.push(a$13), s$8;
}
function go(t$13, e$4, n$8) {
	let { node: r$12 } = t$13;
	switch (r$12.type) {
		case "root": {
			let s$8 = [];
			t$13.each(({ node: o$9, next: a$13, isFirst: c$3 }) => {
				c$3 || s$8.push(N$1), s$8.push(n$8()), Gr$1(o$9, a$13) ? (s$8.push(N$1, "..."), V$1(o$9) && s$8.push(" ", n$8("trailingComment"))) : a$13 && !V$1(a$13.head) && s$8.push(N$1, "---");
			}, "children");
			let i$18 = It$1(r$12);
			return (!K$1(i$18, ["blockLiteral", "blockFolded"]) || i$18.chomping !== "keep") && s$8.push(N$1), s$8;
		}
		case "document": {
			let s$8 = [];
			return Eo$1(t$13, e$4) === "head" && ((r$12.head.children.length > 0 || r$12.head.endComments.length > 0) && s$8.push(n$8("head")), V$1(r$12.head) ? s$8.push([
				"---",
				" ",
				n$8(["head", "trailingComment"])
			]) : s$8.push("---")), yo$1(r$12) && s$8.push(n$8("body")), P$1(N$1, s$8);
		}
		case "documentHead": return P$1(N$1, [...t$13.map(n$8, "children"), ...t$13.map(n$8, "endComments")]);
		case "documentBody": {
			let { children: s$8, endComments: i$18 } = r$12, o$9 = "";
			if (s$8.length > 0 && i$18.length > 0) {
				let a$13 = It$1(r$12);
				K$1(a$13, ["blockFolded", "blockLiteral"]) ? a$13.chomping !== "keep" && (o$9 = [N$1, N$1]) : o$9 = N$1;
			}
			return [
				P$1(N$1, t$13.map(n$8, "children")),
				o$9,
				P$1(N$1, t$13.map(n$8, "endComments"))
			];
		}
		case "directive": return ["%", P$1(" ", [r$12.name, ...r$12.parameters])];
		case "comment": return ["#", r$12.value];
		case "alias": return ["*", r$12.value];
		case "tag": return e$4.originalText.slice(r$12.position.start.offset, r$12.position.end.offset);
		case "anchor": return ["&", r$12.value];
		case "plain": return ut$1(r$12.type, e$4.originalText.slice(r$12.position.start.offset, r$12.position.end.offset), e$4);
		case "quoteDouble":
		case "quoteSingle": {
			let s$8 = "'", i$18 = "\"", o$9 = e$4.originalText.slice(r$12.position.start.offset + 1, r$12.position.end.offset - 1);
			if (r$12.type === "quoteSingle" && o$9.includes("\\") || r$12.type === "quoteDouble" && /\\[^"]/u.test(o$9)) {
				let c$3 = r$12.type === "quoteDouble" ? i$18 : s$8;
				return [
					c$3,
					ut$1(r$12.type, o$9, e$4),
					c$3
				];
			}
			if (o$9.includes(i$18)) return [
				s$8,
				ut$1(r$12.type, r$12.type === "quoteDouble" ? At$1(!1, At$1(!1, o$9, String.raw`\"`, i$18), "'", s$8.repeat(2)) : o$9, e$4),
				s$8
			];
			if (o$9.includes(s$8)) return [
				i$18,
				ut$1(r$12.type, r$12.type === "quoteSingle" ? At$1(!1, o$9, "''", s$8) : o$9, e$4),
				i$18
			];
			let a$13 = e$4.singleQuote ? s$8 : i$18;
			return [
				a$13,
				ut$1(r$12.type, o$9, e$4),
				a$13
			];
		}
		case "blockFolded":
		case "blockLiteral": return jr$1(t$13, e$4, n$8);
		case "mapping":
		case "sequence": return P$1(N$1, t$13.map(n$8, "children"));
		case "sequenceItem": return ["- ", v$1(2, r$12.content ? n$8("content") : "")];
		case "mappingKey":
		case "mappingValue": return r$12.content ? n$8("content") : "";
		case "mappingItem":
		case "flowMappingItem": return Wr$1(t$13, e$4, n$8);
		case "flowMapping": return _t$1(t$13, e$4, n$8);
		case "flowSequence": return _t$1(t$13, e$4, n$8);
		case "flowSequenceItem": return n$8("content");
		default: throw new Ar$1(r$12, "YAML");
	}
}
function yo$1(t$13) {
	return t$13.body.children.length > 0 || I$1(t$13.body);
}
function Gr$1(t$13, e$4) {
	return V$1(t$13) || e$4 && (e$4.head.children.length > 0 || I$1(e$4.head));
}
function Eo$1(t$13, e$4) {
	let n$8 = t$13.node;
	if (t$13.isFirst && /---(?:\s|$)/u.test(e$4.originalText.slice(xe$1(n$8), xe$1(n$8) + 4)) || n$8.head.children.length > 0 || I$1(n$8.head) || V$1(n$8.head)) return "head";
	let r$12 = t$13.next;
	return Gr$1(n$8, r$12) ? !1 : r$12 ? "root" : !1;
}
function ut$1(t$13, e$4, n$8) {
	let r$12 = Kr$1(t$13, e$4, n$8);
	return P$1(N$1, r$12.map((s$8) => Tt$1(P$1(ne$1, s$8))));
}
function Hr$1(t$13, e$4) {
	if (K$1(t$13)) switch (t$13.type) {
		case "comment":
			if (xr$1(t$13.value)) return null;
			break;
		case "quoteDouble":
		case "quoteSingle":
			e$4.type = "quote";
			break;
	}
}
Hr$1.ignoredProperties = new Set(["position"]);
var So$1 = {
	preprocess: Qr$1,
	embed: Tr$1,
	print: ho,
	massageAstNode: Hr$1,
	insertPragma: $r$1,
	getVisitorKeys: kr$1
}, Jr$1 = So$1;
var Xr$1 = [{
	name: "YAML",
	type: "data",
	extensions: [
		".yml",
		".mir",
		".reek",
		".rviz",
		".sublime-syntax",
		".syntax",
		".yaml",
		".yaml-tmlanguage",
		".yaml.sed",
		".yml.mysql"
	],
	tmScope: "source.yaml",
	aceMode: "yaml",
	aliases: ["yml"],
	codemirrorMode: "yaml",
	codemirrorMimeType: "text/x-yaml",
	filenames: [
		".clang-format",
		".clang-tidy",
		".clangd",
		".gemrc",
		"CITATION.cff",
		"glide.lock",
		"pixi.lock",
		".prettierrc",
		".stylelintrc",
		".lintstagedrc"
	],
	parsers: ["yaml"],
	vscodeLanguageIds: [
		"yaml",
		"ansible",
		"dockercompose",
		"github-actions-workflow",
		"home-assistant"
	],
	linguistLanguageId: 407
}];
var Rt$1 = {
	bracketSpacing: {
		category: "Common",
		type: "boolean",
		default: !0,
		description: "Print spaces between brackets.",
		oppositeDescription: "Do not print spaces between brackets."
	},
	objectWrap: {
		category: "Common",
		type: "choice",
		default: "preserve",
		description: "How to wrap object literals.",
		choices: [{
			value: "preserve",
			description: "Keep as multi-line, if there is a newline between the opening brace and first property."
		}, {
			value: "collapse",
			description: "Fit to a single line when possible."
		}]
	},
	singleQuote: {
		category: "Common",
		type: "boolean",
		default: !1,
		description: "Use single quotes instead of double quotes."
	},
	proseWrap: {
		category: "Common",
		type: "choice",
		default: "preserve",
		description: "How to wrap prose.",
		choices: [
			{
				value: "always",
				description: "Wrap prose if it exceeds the print width."
			},
			{
				value: "never",
				description: "Do not wrap prose."
			},
			{
				value: "preserve",
				description: "Wrap prose as-is."
			}
		]
	},
	bracketSameLine: {
		category: "Common",
		type: "boolean",
		default: !1,
		description: "Put > of opening tags on the last line instead of on a new line."
	},
	singleAttributePerLine: {
		category: "Common",
		type: "boolean",
		default: !1,
		description: "Enforce single attribute per line in HTML, Vue and JSX."
	}
};
var wo$1 = {
	bracketSpacing: Rt$1.bracketSpacing,
	singleQuote: Rt$1.singleQuote,
	proseWrap: Rt$1.proseWrap
}, zr$1 = wo$1;
var hr$1 = {};
yr$1(hr$1, { yaml: () => nc });
var mr$1 = cn$1(tr$1(), 1), H$1 = cn$1(Bs(), 1);
H$1.default.findPair;
H$1.default.toJSON;
H$1.default.parseMap;
H$1.default.parseSeq;
H$1.default.stringifyNumber;
H$1.default.stringifyString;
H$1.default.Type;
H$1.default.YAMLError;
H$1.default.YAMLReferenceError;
var Fs = H$1.default.YAMLSemanticError;
H$1.default.YAMLSyntaxError;
H$1.default.YAMLWarning;
function B$1(t$13, e$4 = null) {
	"children" in t$13 && t$13.children.forEach((n$8) => B$1(n$8, t$13)), "anchor" in t$13 && t$13.anchor && B$1(t$13.anchor, t$13), "tag" in t$13 && t$13.tag && B$1(t$13.tag, t$13), "leadingComments" in t$13 && t$13.leadingComments.forEach((n$8) => B$1(n$8, t$13)), "middleComments" in t$13 && t$13.middleComments.forEach((n$8) => B$1(n$8, t$13)), "indicatorComment" in t$13 && t$13.indicatorComment && B$1(t$13.indicatorComment, t$13), "trailingComment" in t$13 && t$13.trailingComment && B$1(t$13.trailingComment, t$13), "endComments" in t$13 && t$13.endComments.forEach((n$8) => B$1(n$8, t$13)), Object.defineProperty(t$13, "_parent", {
		value: e$4,
		enumerable: !1
	});
}
function Ae$1(t$13) {
	return `${t$13.line}:${t$13.column}`;
}
function qs(t$13) {
	B$1(t$13);
	let e$4 = Fa(t$13), n$8 = t$13.children.slice();
	t$13.comments.sort((r$12, s$8) => r$12.position.start.offset - s$8.position.end.offset).filter((r$12) => !r$12._parent).forEach((r$12) => {
		for (; n$8.length > 1 && r$12.position.start.line > n$8[0].position.end.line;) n$8.shift();
		qa(r$12, e$4, n$8[0]);
	});
}
function Fa(t$13) {
	let e$4 = Array.from(new Array(t$13.position.end.line), () => ({}));
	for (let n$8 of t$13.comments) e$4[n$8.position.start.line - 1].comment = n$8;
	return Us(e$4, t$13), e$4;
}
function Us(t$13, e$4) {
	if (e$4.position.start.offset !== e$4.position.end.offset) {
		if ("leadingComments" in e$4) {
			let { start: n$8 } = e$4.position, { leadingAttachableNode: r$12 } = t$13[n$8.line - 1];
			(!r$12 || n$8.column < r$12.position.start.column) && (t$13[n$8.line - 1].leadingAttachableNode = e$4);
		}
		if ("trailingComment" in e$4 && e$4.position.end.column > 1 && e$4.type !== "document" && e$4.type !== "documentHead") {
			let { end: n$8 } = e$4.position, { trailingAttachableNode: r$12 } = t$13[n$8.line - 1];
			(!r$12 || n$8.column >= r$12.position.end.column) && (t$13[n$8.line - 1].trailingAttachableNode = e$4);
		}
		if (e$4.type !== "root" && e$4.type !== "document" && e$4.type !== "documentHead" && e$4.type !== "documentBody") {
			let { start: n$8, end: r$12 } = e$4.position, s$8 = [r$12.line].concat(n$8.line === r$12.line ? [] : n$8.line);
			for (let i$18 of s$8) {
				let o$9 = t$13[i$18 - 1].trailingNode;
				(!o$9 || r$12.column >= o$9.position.end.column) && (t$13[i$18 - 1].trailingNode = e$4);
			}
		}
		"children" in e$4 && e$4.children.forEach((n$8) => {
			Us(t$13, n$8);
		});
	}
}
function qa(t$13, e$4, n$8) {
	let r$12 = t$13.position.start.line, { trailingAttachableNode: s$8 } = e$4[r$12 - 1];
	if (s$8) {
		if (s$8.trailingComment) throw new Error(`Unexpected multiple trailing comment at ${Ae$1(t$13.position.start)}`);
		B$1(t$13, s$8), s$8.trailingComment = t$13;
		return;
	}
	for (let o$9 = r$12; o$9 >= n$8.position.start.line; o$9--) {
		let { trailingNode: a$13 } = e$4[o$9 - 1], c$3;
		if (a$13) c$3 = a$13;
		else if (o$9 !== r$12 && e$4[o$9 - 1].comment) c$3 = e$4[o$9 - 1].comment._parent;
		else continue;
		if ((c$3.type === "sequence" || c$3.type === "mapping") && (c$3 = c$3.children[0]), c$3.type === "mappingItem") {
			let [l$10, f$3] = c$3.children;
			c$3 = Ks(l$10) ? l$10 : f$3;
		}
		for (;;) {
			if (Ua(c$3, t$13)) {
				B$1(t$13, c$3), c$3.endComments.push(t$13);
				return;
			}
			if (!c$3._parent) break;
			c$3 = c$3._parent;
		}
		break;
	}
	for (let o$9 = r$12 + 1; o$9 <= n$8.position.end.line; o$9++) {
		let { leadingAttachableNode: a$13 } = e$4[o$9 - 1];
		if (a$13) {
			B$1(t$13, a$13), a$13.leadingComments.push(t$13);
			return;
		}
	}
	let i$18 = n$8.children[1];
	B$1(t$13, i$18), i$18.endComments.push(t$13);
}
function Ua(t$13, e$4) {
	if (t$13.position.start.offset < e$4.position.start.offset && t$13.position.end.offset > e$4.position.end.offset) switch (t$13.type) {
		case "flowMapping":
		case "flowSequence": return t$13.children.length === 0 || e$4.position.start.line > t$13.children[t$13.children.length - 1].position.end.line;
	}
	if (e$4.position.end.offset < t$13.position.end.offset) return !1;
	switch (t$13.type) {
		case "sequenceItem": return e$4.position.start.column > t$13.position.start.column;
		case "mappingKey":
		case "mappingValue": return e$4.position.start.column > t$13._parent.position.start.column && (t$13.children.length === 0 || t$13.children.length === 1 && t$13.children[0].type !== "blockFolded" && t$13.children[0].type !== "blockLiteral") && (t$13.type === "mappingValue" || Ks(t$13));
		default: return !1;
	}
}
function Ks(t$13) {
	return t$13.position.start !== t$13.position.end && (t$13.children.length === 0 || t$13.position.start.offset !== t$13.children[0].position.start.offset);
}
function b$4(t$13, e$4) {
	return {
		type: t$13,
		position: e$4
	};
}
function Vs(t$13, e$4, n$8) {
	return {
		...b$4("root", t$13),
		children: e$4,
		comments: n$8
	};
}
function wt$1(t$13) {
	switch (t$13.type) {
		case "DOCUMENT":
			for (let e$4 = t$13.contents.length - 1; e$4 >= 0; e$4--) t$13.contents[e$4].type === "BLANK_LINE" ? t$13.contents.splice(e$4, 1) : wt$1(t$13.contents[e$4]);
			for (let e$4 = t$13.directives.length - 1; e$4 >= 0; e$4--) t$13.directives[e$4].type === "BLANK_LINE" && t$13.directives.splice(e$4, 1);
			break;
		case "FLOW_MAP":
		case "FLOW_SEQ":
		case "MAP":
		case "SEQ":
			for (let e$4 = t$13.items.length - 1; e$4 >= 0; e$4--) {
				let n$8 = t$13.items[e$4];
				"char" in n$8 || (n$8.type === "BLANK_LINE" ? t$13.items.splice(e$4, 1) : wt$1(n$8));
			}
			break;
		case "MAP_KEY":
		case "MAP_VALUE":
		case "SEQ_ITEM":
			t$13.node && wt$1(t$13.node);
			break;
		case "ALIAS":
		case "BLANK_LINE":
		case "BLOCK_FOLDED":
		case "BLOCK_LITERAL":
		case "COMMENT":
		case "DIRECTIVE":
		case "PLAIN":
		case "QUOTE_DOUBLE":
		case "QUOTE_SINGLE": break;
		default: throw new Error(`Unexpected node type ${JSON.stringify(t$13.type)}`);
	}
}
function J$1(t$13, e$4) {
	return {
		start: t$13,
		end: e$4
	};
}
function nr$1(t$13) {
	return {
		start: t$13,
		end: t$13
	};
}
var ue;
(function(t$13) {
	t$13.Tag = "!", t$13.Anchor = "&", t$13.Comment = "#";
})(ue || (ue = {}));
function js(t$13, e$4) {
	return {
		...b$4("anchor", t$13),
		value: e$4
	};
}
function Ge$1(t$13, e$4) {
	return {
		...b$4("comment", t$13),
		value: e$4
	};
}
function Ws(t$13, e$4, n$8) {
	return {
		anchor: e$4,
		tag: t$13,
		middleComments: n$8
	};
}
function Qs(t$13, e$4) {
	return {
		...b$4("tag", t$13),
		value: e$4
	};
}
function zt$1(t$13, e$4, n$8 = () => !1) {
	let r$12 = t$13.cstNode, s$8 = [], i$18 = null, o$9 = null, a$13 = null;
	for (let c$3 of r$12.props) {
		let l$10 = e$4.text[c$3.origStart];
		switch (l$10) {
			case ue.Tag:
				i$18 = i$18 || c$3, o$9 = Qs(e$4.transformRange(c$3), t$13.tag);
				break;
			case ue.Anchor:
				i$18 = i$18 || c$3, a$13 = js(e$4.transformRange(c$3), r$12.anchor);
				break;
			case ue.Comment: {
				let f$3 = Ge$1(e$4.transformRange(c$3), e$4.text.slice(c$3.origStart + 1, c$3.origEnd));
				e$4.comments.push(f$3), !n$8(f$3) && i$18 && i$18.origEnd <= c$3.origStart && c$3.origEnd <= r$12.valueRange.origStart && s$8.push(f$3);
				break;
			}
			default: throw new Error(`Unexpected leading character ${JSON.stringify(l$10)}`);
		}
	}
	return Ws(o$9, a$13, s$8);
}
function X$1() {
	return { leadingComments: [] };
}
function pe$1(t$13 = null) {
	return { trailingComment: t$13 };
}
function F$1() {
	return {
		...X$1(),
		...pe$1()
	};
}
function Gs(t$13, e$4, n$8) {
	return {
		...b$4("alias", t$13),
		...F$1(),
		...e$4,
		value: n$8
	};
}
function Hs(t$13, e$4) {
	let n$8 = t$13.cstNode;
	return Gs(e$4.transformRange({
		origStart: n$8.valueRange.origStart - 1,
		origEnd: n$8.valueRange.origEnd
	}), e$4.transformContent(t$13), n$8.rawValue);
}
function Js(t$13) {
	return {
		...t$13,
		type: "blockFolded"
	};
}
function Xs(t$13, e$4, n$8, r$12, s$8, i$18) {
	return {
		...b$4("blockValue", t$13),
		...X$1(),
		...e$4,
		chomping: n$8,
		indent: r$12,
		value: s$8,
		indicatorComment: i$18
	};
}
var rr$1;
(function(t$13) {
	t$13.CLIP = "clip", t$13.STRIP = "strip", t$13.KEEP = "keep";
})(rr$1 || (rr$1 = {}));
function Zt$1(t$13, e$4) {
	let n$8 = t$13.cstNode, r$12 = 1, s$8 = n$8.chomping === "CLIP" ? 0 : 1, o$9 = n$8.header.origEnd - n$8.header.origStart - r$12 - s$8 !== 0, a$13 = e$4.transformRange({
		origStart: n$8.header.origStart,
		origEnd: n$8.valueRange.origEnd
	}), c$3 = null, l$10 = zt$1(t$13, e$4, (f$3) => {
		if (!(a$13.start.offset < f$3.position.start.offset && f$3.position.end.offset < a$13.end.offset)) return !1;
		if (c$3) throw new Error(`Unexpected multiple indicator comments at ${Ae$1(f$3.position.start)}`);
		return c$3 = f$3, !0;
	});
	return Xs(a$13, l$10, rr$1[n$8.chomping], o$9 ? n$8.blockIndent : null, n$8.strValue, c$3);
}
function zs(t$13, e$4) {
	return Js(Zt$1(t$13, e$4));
}
function Zs(t$13) {
	return {
		...t$13,
		type: "blockLiteral"
	};
}
function ei$1(t$13, e$4) {
	return Zs(Zt$1(t$13, e$4));
}
function ti$1(t$13, e$4) {
	return Ge$1(e$4.transformRange(t$13.range), t$13.comment);
}
function ni$1(t$13, e$4, n$8) {
	return {
		...b$4("directive", t$13),
		...F$1(),
		name: e$4,
		parameters: n$8
	};
}
function He$1(t$13, e$4) {
	for (let n$8 of t$13.props) {
		let r$12 = e$4.text[n$8.origStart];
		switch (r$12) {
			case ue.Comment:
				e$4.comments.push(Ge$1(e$4.transformRange(n$8), e$4.text.slice(n$8.origStart + 1, n$8.origEnd)));
				break;
			default: throw new Error(`Unexpected leading character ${JSON.stringify(r$12)}`);
		}
	}
}
function ri$1(t$13, e$4) {
	return He$1(t$13, e$4), ni$1(e$4.transformRange(t$13.range), t$13.name, t$13.parameters);
}
function si(t$13, e$4, n$8, r$12) {
	return {
		...b$4("document", t$13),
		...pe$1(r$12),
		children: [e$4, n$8]
	};
}
function q$1(t$13 = []) {
	return { endComments: t$13 };
}
function ii(t$13, e$4, n$8) {
	return {
		...b$4("documentBody", t$13),
		...q$1(n$8),
		children: e$4 ? [e$4] : []
	};
}
function U$1(t$13) {
	return t$13[t$13.length - 1];
}
function en$1(t$13, e$4) {
	let n$8 = t$13.match(e$4);
	return n$8 ? n$8.index : -1;
}
function oi(t$13, e$4, n$8) {
	let r$12 = t$13.cstNode, { comments: s$8, endComments: i$18, documentTrailingComment: o$9, documentHeadTrailingComment: a$13 } = Ka(r$12, e$4, n$8), c$3 = e$4.transformNode(t$13.contents), { position: l$10, documentEndPoint: f$3 } = Va(r$12, c$3, e$4);
	return e$4.comments.push(...s$8, ...i$18), {
		documentBody: ii(l$10, c$3, i$18),
		documentEndPoint: f$3,
		documentTrailingComment: o$9,
		documentHeadTrailingComment: a$13
	};
}
function Ka(t$13, e$4, n$8) {
	let r$12 = [], s$8 = [], i$18 = [], o$9 = [], a$13 = !1;
	for (let c$3 = t$13.contents.length - 1; c$3 >= 0; c$3--) {
		let l$10 = t$13.contents[c$3];
		if (l$10.type === "COMMENT") {
			let f$3 = e$4.transformNode(l$10);
			n$8 && n$8.line === f$3.position.start.line ? o$9.unshift(f$3) : a$13 ? r$12.unshift(f$3) : f$3.position.start.offset >= t$13.valueRange.origEnd ? i$18.unshift(f$3) : r$12.unshift(f$3);
		} else a$13 = !0;
	}
	if (i$18.length > 1) throw new Error(`Unexpected multiple document trailing comments at ${Ae$1(i$18[1].position.start)}`);
	if (o$9.length > 1) throw new Error(`Unexpected multiple documentHead trailing comments at ${Ae$1(o$9[1].position.start)}`);
	return {
		comments: r$12,
		endComments: s$8,
		documentTrailingComment: U$1(i$18) || null,
		documentHeadTrailingComment: U$1(o$9) || null
	};
}
function Va(t$13, e$4, n$8) {
	let r$12 = en$1(n$8.text.slice(t$13.valueRange.origEnd), /^\.\.\./), s$8 = r$12 === -1 ? t$13.valueRange.origEnd : Math.max(0, t$13.valueRange.origEnd - 1);
	n$8.text[s$8 - 1] === "\r" && s$8--;
	let i$18 = n$8.transformRange({
		origStart: e$4 !== null ? e$4.position.start.offset : s$8,
		origEnd: s$8
	}), o$9 = r$12 === -1 ? i$18.end : n$8.transformOffset(t$13.valueRange.origEnd + 3);
	return {
		position: i$18,
		documentEndPoint: o$9
	};
}
function ai(t$13, e$4, n$8, r$12) {
	return {
		...b$4("documentHead", t$13),
		...q$1(n$8),
		...pe$1(r$12),
		children: e$4
	};
}
function ci(t$13, e$4) {
	let n$8 = t$13.cstNode, { directives: r$12, comments: s$8, endComments: i$18 } = ja(n$8, e$4), { position: o$9, endMarkerPoint: a$13 } = Wa(n$8, r$12, e$4);
	return e$4.comments.push(...s$8, ...i$18), {
		createDocumentHeadWithTrailingComment: (l$10) => (l$10 && e$4.comments.push(l$10), ai(o$9, r$12, i$18, l$10)),
		documentHeadEndMarkerPoint: a$13
	};
}
function ja(t$13, e$4) {
	let n$8 = [], r$12 = [], s$8 = [], i$18 = !1;
	for (let o$9 = t$13.directives.length - 1; o$9 >= 0; o$9--) {
		let a$13 = e$4.transformNode(t$13.directives[o$9]);
		a$13.type === "comment" ? i$18 ? r$12.unshift(a$13) : s$8.unshift(a$13) : (i$18 = !0, n$8.unshift(a$13));
	}
	return {
		directives: n$8,
		comments: r$12,
		endComments: s$8
	};
}
function Wa(t$13, e$4, n$8) {
	let r$12 = en$1(n$8.text.slice(0, t$13.valueRange.origStart), /---\s*$/);
	r$12 > 0 && !/[\r\n]/.test(n$8.text[r$12 - 1]) && (r$12 = -1);
	let s$8 = r$12 === -1 ? {
		origStart: t$13.valueRange.origStart,
		origEnd: t$13.valueRange.origStart
	} : {
		origStart: r$12,
		origEnd: r$12 + 3
	};
	return e$4.length !== 0 && (s$8.origStart = e$4[0].position.start.offset), {
		position: n$8.transformRange(s$8),
		endMarkerPoint: r$12 === -1 ? null : n$8.transformOffset(r$12)
	};
}
function li(t$13, e$4) {
	let { createDocumentHeadWithTrailingComment: n$8, documentHeadEndMarkerPoint: r$12 } = ci(t$13, e$4), { documentBody: s$8, documentEndPoint: i$18, documentTrailingComment: o$9, documentHeadTrailingComment: a$13 } = oi(t$13, e$4, r$12), c$3 = n$8(a$13);
	return o$9 && e$4.comments.push(o$9), si(J$1(c$3.position.start, i$18), c$3, s$8, o$9);
}
function tn$1(t$13, e$4, n$8) {
	return {
		...b$4("flowCollection", t$13),
		...F$1(),
		...q$1(),
		...e$4,
		children: n$8
	};
}
function fi(t$13, e$4, n$8) {
	return {
		...tn$1(t$13, e$4, n$8),
		type: "flowMapping"
	};
}
function nn$1(t$13, e$4, n$8) {
	return {
		...b$4("flowMappingItem", t$13),
		...X$1(),
		children: [e$4, n$8]
	};
}
function me$1(t$13, e$4) {
	let n$8 = [];
	for (let r$12 of t$13) r$12 && "type" in r$12 && r$12.type === "COMMENT" ? e$4.comments.push(e$4.transformNode(r$12)) : n$8.push(r$12);
	return n$8;
}
function rn$1(t$13) {
	let [e$4, n$8] = ["?", ":"].map((r$12) => {
		let s$8 = t$13.find((i$18) => "char" in i$18 && i$18.char === r$12);
		return s$8 ? {
			origStart: s$8.origOffset,
			origEnd: s$8.origOffset + 1
		} : null;
	});
	return {
		additionalKeyRange: e$4,
		additionalValueRange: n$8
	};
}
function sn$1(t$13, e$4) {
	let n$8 = e$4;
	return (r$12) => t$13.slice(n$8, n$8 = r$12);
}
function on$1(t$13) {
	let e$4 = [], n$8 = sn$1(t$13, 1), r$12 = !1;
	for (let s$8 = 1; s$8 < t$13.length - 1; s$8++) {
		let i$18 = t$13[s$8];
		if ("char" in i$18 && i$18.char === ",") {
			e$4.push(n$8(s$8)), n$8(s$8 + 1), r$12 = !1;
			continue;
		}
		r$12 = !0;
	}
	return r$12 && e$4.push(n$8(t$13.length - 1)), e$4;
}
function sr$1(t$13, e$4) {
	return {
		...b$4("mappingKey", t$13),
		...pe$1(),
		...q$1(),
		children: e$4 ? [e$4] : []
	};
}
function ir$1(t$13, e$4) {
	return {
		...b$4("mappingValue", t$13),
		...F$1(),
		...q$1(),
		children: e$4 ? [e$4] : []
	};
}
function Je$1(t$13, e$4, n$8, r$12, s$8) {
	let i$18 = e$4.transformNode(t$13.key), o$9 = e$4.transformNode(t$13.value), a$13 = i$18 || r$12 ? sr$1(e$4.transformRange({
		origStart: r$12 ? r$12.origStart : i$18.position.start.offset,
		origEnd: i$18 ? i$18.position.end.offset : r$12.origStart + 1
	}), i$18) : null, c$3 = o$9 || s$8 ? ir$1(e$4.transformRange({
		origStart: s$8 ? s$8.origStart : o$9.position.start.offset,
		origEnd: o$9 ? o$9.position.end.offset : s$8.origStart + 1
	}), o$9) : null;
	return n$8(J$1(a$13 ? a$13.position.start : c$3.position.start, c$3 ? c$3.position.end : a$13.position.end), a$13 || sr$1(nr$1(c$3.position.start), null), c$3 || ir$1(nr$1(a$13.position.end), null));
}
function ui$1(t$13, e$4) {
	let n$8 = me$1(t$13.cstNode.items, e$4), r$12 = on$1(n$8), s$8 = t$13.items.map((a$13, c$3) => {
		let l$10 = r$12[c$3], { additionalKeyRange: f$3, additionalValueRange: m$11 } = rn$1(l$10);
		return Je$1(a$13, e$4, nn$1, f$3, m$11);
	}), i$18 = n$8[0], o$9 = U$1(n$8);
	return fi(e$4.transformRange({
		origStart: i$18.origOffset,
		origEnd: o$9.origOffset + 1
	}), e$4.transformContent(t$13), s$8);
}
function pi(t$13, e$4, n$8) {
	return {
		...tn$1(t$13, e$4, n$8),
		type: "flowSequence"
	};
}
function mi(t$13, e$4) {
	return {
		...b$4("flowSequenceItem", t$13),
		children: [e$4]
	};
}
function hi(t$13, e$4) {
	let n$8 = me$1(t$13.cstNode.items, e$4), r$12 = on$1(n$8), s$8 = t$13.items.map((a$13, c$3) => {
		if (a$13.type !== "PAIR") {
			let l$10 = e$4.transformNode(a$13);
			return mi(J$1(l$10.position.start, l$10.position.end), l$10);
		} else {
			let l$10 = r$12[c$3], { additionalKeyRange: f$3, additionalValueRange: m$11 } = rn$1(l$10);
			return Je$1(a$13, e$4, nn$1, f$3, m$11);
		}
	}), i$18 = n$8[0], o$9 = U$1(n$8);
	return pi(e$4.transformRange({
		origStart: i$18.origOffset,
		origEnd: o$9.origOffset + 1
	}), e$4.transformContent(t$13), s$8);
}
function gi(t$13, e$4, n$8) {
	return {
		...b$4("mapping", t$13),
		...X$1(),
		...e$4,
		children: n$8
	};
}
function di(t$13, e$4, n$8) {
	return {
		...b$4("mappingItem", t$13),
		...X$1(),
		children: [e$4, n$8]
	};
}
function yi(t$13, e$4) {
	let n$8 = t$13.cstNode;
	n$8.items.filter((o$9) => o$9.type === "MAP_KEY" || o$9.type === "MAP_VALUE").forEach((o$9) => He$1(o$9, e$4));
	let r$12 = me$1(n$8.items, e$4), s$8 = Qa(r$12), i$18 = t$13.items.map((o$9, a$13) => {
		let c$3 = s$8[a$13], [l$10, f$3] = c$3[0].type === "MAP_VALUE" ? [null, c$3[0].range] : [c$3[0].range, c$3.length === 1 ? null : c$3[1].range];
		return Je$1(o$9, e$4, di, l$10, f$3);
	});
	return gi(J$1(i$18[0].position.start, U$1(i$18).position.end), e$4.transformContent(t$13), i$18);
}
function Qa(t$13) {
	let e$4 = [], n$8 = sn$1(t$13, 0), r$12 = !1;
	for (let s$8 = 0; s$8 < t$13.length; s$8++) {
		if (t$13[s$8].type === "MAP_VALUE") {
			e$4.push(n$8(s$8 + 1)), r$12 = !1;
			continue;
		}
		r$12 && e$4.push(n$8(s$8)), r$12 = !0;
	}
	return r$12 && e$4.push(n$8(Infinity)), e$4;
}
function Ei(t$13, e$4, n$8) {
	return {
		...b$4("plain", t$13),
		...F$1(),
		...e$4,
		value: n$8
	};
}
function Si(t$13, e$4, n$8) {
	for (let r$12 = e$4; r$12 >= 0; r$12--) if (n$8.test(t$13[r$12])) return r$12;
	return -1;
}
function wi(t$13, e$4) {
	let n$8 = t$13.cstNode;
	return Ei(e$4.transformRange({
		origStart: n$8.valueRange.origStart,
		origEnd: Si(e$4.text, n$8.valueRange.origEnd - 1, /\S/) + 1
	}), e$4.transformContent(t$13), n$8.strValue);
}
function bi(t$13) {
	return {
		...t$13,
		type: "quoteDouble"
	};
}
function Ni(t$13, e$4, n$8) {
	return {
		...b$4("quoteValue", t$13),
		...e$4,
		...F$1(),
		value: n$8
	};
}
function an$1(t$13, e$4) {
	let n$8 = t$13.cstNode;
	return Ni(e$4.transformRange(n$8.valueRange), e$4.transformContent(t$13), n$8.strValue);
}
function Oi(t$13, e$4) {
	return bi(an$1(t$13, e$4));
}
function Ai(t$13) {
	return {
		...t$13,
		type: "quoteSingle"
	};
}
function Li(t$13, e$4) {
	return Ai(an$1(t$13, e$4));
}
function Ti(t$13, e$4, n$8) {
	return {
		...b$4("sequence", t$13),
		...X$1(),
		...q$1(),
		...e$4,
		children: n$8
	};
}
function Mi(t$13, e$4) {
	return {
		...b$4("sequenceItem", t$13),
		...F$1(),
		...q$1(),
		children: e$4 ? [e$4] : []
	};
}
function Ci(t$13, e$4) {
	let r$12 = me$1(t$13.cstNode.items, e$4).map((s$8, i$18) => {
		He$1(s$8, e$4);
		let o$9 = e$4.transformNode(t$13.items[i$18]);
		return Mi(J$1(e$4.transformOffset(s$8.valueRange.origStart), o$9 === null ? e$4.transformOffset(s$8.valueRange.origStart + 1) : o$9.position.end), o$9);
	});
	return Ti(J$1(r$12[0].position.start, U$1(r$12).position.end), e$4.transformContent(t$13), r$12);
}
function ki(t$13, e$4) {
	if (t$13 === null || t$13.type === void 0 && t$13.value === null) return null;
	switch (t$13.type) {
		case "ALIAS": return Hs(t$13, e$4);
		case "BLOCK_FOLDED": return zs(t$13, e$4);
		case "BLOCK_LITERAL": return ei$1(t$13, e$4);
		case "COMMENT": return ti$1(t$13, e$4);
		case "DIRECTIVE": return ri$1(t$13, e$4);
		case "DOCUMENT": return li(t$13, e$4);
		case "FLOW_MAP": return ui$1(t$13, e$4);
		case "FLOW_SEQ": return hi(t$13, e$4);
		case "MAP": return yi(t$13, e$4);
		case "PLAIN": return wi(t$13, e$4);
		case "QUOTE_DOUBLE": return Oi(t$13, e$4);
		case "QUOTE_SINGLE": return Li(t$13, e$4);
		case "SEQ": return Ci(t$13, e$4);
		default: throw new Error(`Unexpected node type ${t$13.type}`);
	}
}
var or$1, Le$1, bt$1, he$1, cr$1, lr$1, ar$1 = class {
	constructor(e$4, n$8) {
		Ot$1(this, he$1);
		ln$1(this, "text");
		ln$1(this, "comments", []);
		Ot$1(this, Le$1);
		Ot$1(this, bt$1);
		this.text = n$8, un$1(this, Le$1, e$4);
	}
	setOrigRanges() {
		if (!Te$1(this, Le$1).setOrigRanges()) for (let e$4 of Te$1(this, Le$1)) e$4.setOrigRanges([], 0);
	}
	transformOffset(e$4) {
		return Xe$1(this, he$1, cr$1).call(this, {
			origStart: e$4,
			origEnd: e$4
		}).start;
	}
	transformRange(e$4) {
		let { start: n$8, end: r$12 } = Xe$1(this, he$1, cr$1).call(this, e$4);
		return J$1(n$8, r$12);
	}
	transformNode(e$4) {
		return ki(e$4, this);
	}
	transformContent(e$4) {
		return zt$1(e$4, this);
	}
};
Le$1 = /* @__PURE__ */ new WeakMap(), bt$1 = /* @__PURE__ */ new WeakMap(), he$1 = /* @__PURE__ */ new WeakSet(), cr$1 = function(e$4) {
	if (!or$1) {
		let [o$9] = Te$1(this, Le$1), a$13 = Object.getPrototypeOf(Object.getPrototypeOf(o$9));
		or$1 = Object.getOwnPropertyDescriptor(a$13, "rangeAsLinePos").get;
	}
	Te$1(this, bt$1) ?? un$1(this, bt$1, { root: { context: { src: this.text } } });
	let { start: { line: n$8, col: r$12 }, end: { line: s$8, col: i$18 } } = or$1.call({
		range: {
			start: Xe$1(this, he$1, lr$1).call(this, e$4.origStart),
			end: Xe$1(this, he$1, lr$1).call(this, e$4.origEnd)
		},
		context: Te$1(this, bt$1)
	});
	return {
		start: {
			offset: e$4.origStart,
			line: n$8,
			column: r$12
		},
		end: {
			offset: e$4.origEnd,
			line: s$8,
			column: i$18
		}
	};
}, lr$1 = function(e$4) {
	return e$4 < 0 ? 0 : e$4 > this.text.length ? this.text.length : e$4;
};
var Pi = ar$1;
function Ii(t$13, e$4, n$8) {
	let r$12 = new SyntaxError(t$13);
	return r$12.name = "YAMLSyntaxError", r$12.source = e$4, r$12.position = n$8, r$12;
}
function vi(t$13, e$4) {
	let n$8 = t$13.source.range || t$13.source.valueRange;
	return Ii(t$13.message, e$4.text, e$4.transformRange(n$8));
}
function fr$1(t$13) {
	if ("children" in t$13) {
		if (t$13.children.length === 1) {
			let e$4 = t$13.children[0];
			if (e$4.type === "plain" && e$4.tag === null && e$4.anchor === null && e$4.value === "") return t$13.children.splice(0, 1), t$13;
		}
		t$13.children.forEach(fr$1);
	}
	return t$13;
}
function ur$1(t$13, e$4, n$8, r$12) {
	let s$8 = e$4(t$13);
	return (i$18) => {
		r$12(s$8, i$18) && n$8(t$13, s$8 = i$18);
	};
}
function pr$1(t$13) {
	if (t$13 === null || !("children" in t$13)) return;
	let e$4 = t$13.children;
	if (e$4.forEach(pr$1), t$13.type === "document") {
		let [i$18, o$9] = t$13.children;
		i$18.position.start.offset === i$18.position.end.offset ? i$18.position.start = i$18.position.end = o$9.position.start : o$9.position.start.offset === o$9.position.end.offset && (o$9.position.start = o$9.position.end = i$18.position.end);
	}
	let n$8 = ur$1(t$13.position, Ga, Ha, za), r$12 = ur$1(t$13.position, Ja, Xa, Za);
	"endComments" in t$13 && t$13.endComments.length !== 0 && (n$8(t$13.endComments[0].position.start), r$12(U$1(t$13.endComments).position.end));
	let s$8 = e$4.filter((i$18) => i$18 !== null);
	if (s$8.length !== 0) {
		let i$18 = s$8[0], o$9 = U$1(s$8);
		n$8(i$18.position.start), r$12(o$9.position.end), "leadingComments" in i$18 && i$18.leadingComments.length !== 0 && n$8(i$18.leadingComments[0].position.start), "tag" in i$18 && i$18.tag && n$8(i$18.tag.position.start), "anchor" in i$18 && i$18.anchor && n$8(i$18.anchor.position.start), "trailingComment" in o$9 && o$9.trailingComment && r$12(o$9.trailingComment.position.end);
	}
}
function Ga(t$13) {
	return t$13.start;
}
function Ha(t$13, e$4) {
	t$13.start = e$4;
}
function Ja(t$13) {
	return t$13.end;
}
function Xa(t$13, e$4) {
	t$13.end = e$4;
}
function za(t$13, e$4) {
	return e$4.offset < t$13.offset;
}
function Za(t$13, e$4) {
	return e$4.offset > t$13.offset;
}
function _i(t$13) {
	let e$4 = mr$1.default.parseCST(t$13), n$8 = new Pi(e$4, t$13);
	n$8.setOrigRanges();
	let r$12 = e$4.map((i$18) => new mr$1.default.Document({
		merge: !1,
		keepCstNodes: !0
	}).parse(i$18));
	for (let i$18 of r$12) for (let o$9 of i$18.errors) if (!(o$9 instanceof Fs && o$9.message === "Map keys must be unique; \"<<\" is repeated")) throw vi(o$9, n$8);
	r$12.forEach((i$18) => wt$1(i$18.cstNode));
	let s$8 = Vs(n$8.transformRange({
		origStart: 0,
		origEnd: t$13.length
	}), r$12.map((i$18) => n$8.transformNode(i$18)), n$8.comments);
	return qs(s$8), pr$1(s$8), fr$1(s$8), s$8;
}
function ec(t$13, e$4) {
	let n$8 = /* @__PURE__ */ new SyntaxError(t$13 + " (" + e$4.loc.start.line + ":" + e$4.loc.start.column + ")");
	return Object.assign(n$8, e$4);
}
var Ri = ec;
function tc(t$13) {
	try {
		let e$4 = _i(t$13);
		return delete e$4.comments, e$4;
	} catch (e$4) {
		throw e$4 != null && e$4.position ? Ri(e$4.message, {
			loc: e$4.position,
			cause: e$4
		}) : e$4;
	}
}
var nc = {
	astFormat: "yaml",
	parse: tc,
	hasPragma: Dr$1,
	hasIgnorePragma: Yr$1,
	locStart: xe$1,
	locEnd: Pr$1
};
var rc = { yaml: Jr$1 };
var xi = cn$1(tr$1(), 1), sc = xi.default.parse;
var Ih = gr$1;

//#endregion
//#region node_modules/.pnpm/prettier@3.6.2_patch_hash=2c5fac0fd268a2b2ab314d9e790cb805e3eb5e35106fc2644635eb6950a6ec1f/node_modules/prettier/standalone.mjs
var Fu = Object.create;
var pt = Object.defineProperty;
var pu = Object.getOwnPropertyDescriptor;
var du = Object.getOwnPropertyNames;
var mu = Object.getPrototypeOf, Eu = Object.prototype.hasOwnProperty;
var er = (e$4) => {
	throw TypeError(e$4);
};
var Cu = (e$4, t$13) => () => (t$13 || e$4((t$13 = { exports: {} }).exports, t$13), t$13.exports), dt = (e$4, t$13) => {
	for (var r$12 in t$13) pt(e$4, r$12, {
		get: t$13[r$12],
		enumerable: !0
	});
}, hu = (e$4, t$13, r$12, n$8) => {
	if (t$13 && typeof t$13 == "object" || typeof t$13 == "function") for (let u$14 of du(t$13)) !Eu.call(e$4, u$14) && u$14 !== r$12 && pt(e$4, u$14, {
		get: () => t$13[u$14],
		enumerable: !(n$8 = pu(t$13, u$14)) || n$8.enumerable
	});
	return e$4;
};
var gu = (e$4, t$13, r$12) => (r$12 = e$4 != null ? Fu(mu(e$4)) : {}, hu(t$13 || !e$4 || !e$4.__esModule ? pt(r$12, "default", {
	value: e$4,
	enumerable: !0
}) : r$12, e$4));
var yu = (e$4, t$13, r$12) => t$13.has(e$4) || er("Cannot " + r$12);
var tr = (e$4, t$13, r$12) => t$13.has(e$4) ? er("Cannot add the same private member more than once") : t$13 instanceof WeakSet ? t$13.add(e$4) : t$13.set(e$4, r$12);
var fe = (e$4, t$13, r$12) => (yu(e$4, t$13, "access private method"), r$12);
var Pn = Cu((Mt$5) => {
	Object.defineProperty(Mt$5, "__esModule", { value: !0 });
	function Co$1() {
		return new Proxy({}, { get: () => (e$4) => e$4 });
	}
	var On$5 = /\r\n|[\n\r\u2028\u2029]/;
	function ho$3(e$4, t$13, r$12) {
		let n$8 = Object.assign({
			column: 0,
			line: -1
		}, e$4.start), u$14 = Object.assign({}, n$8, e$4.end), { linesAbove: o$9 = 2, linesBelow: i$18 = 3 } = r$12 || {}, s$8 = n$8.line, a$13 = n$8.column, c$3 = u$14.line, D$4 = u$14.column, p$2 = Math.max(s$8 - (o$9 + 1), 0), l$10 = Math.min(t$13.length, c$3 + i$18);
		s$8 === -1 && (p$2 = 0), c$3 === -1 && (l$10 = t$13.length);
		let F$4 = c$3 - s$8, f$3 = {};
		if (F$4) for (let d$14 = 0; d$14 <= F$4; d$14++) {
			let m$11 = d$14 + s$8;
			if (!a$13) f$3[m$11] = !0;
			else if (d$14 === 0) {
				let C$3 = t$13[m$11 - 1].length;
				f$3[m$11] = [a$13, C$3 - a$13 + 1];
			} else if (d$14 === F$4) f$3[m$11] = [0, D$4];
			else f$3[m$11] = [0, t$13[m$11 - d$14].length];
		}
		else a$13 === D$4 ? a$13 ? f$3[s$8] = [a$13, 0] : f$3[s$8] = !0 : f$3[s$8] = [a$13, D$4 - a$13];
		return {
			start: p$2,
			end: l$10,
			markerLines: f$3
		};
	}
	function go$4(e$4, t$13, r$12 = {}) {
		let u$14 = Co$1(!1), o$9 = e$4.split(On$5), { start: i$18, end: s$8, markerLines: a$13 } = ho$3(t$13, o$9, r$12), c$3 = t$13.start && typeof t$13.start.column == "number", D$4 = String(s$8).length, l$10 = e$4.split(On$5, s$8).slice(i$18, s$8).map((F$4, f$3) => {
			let d$14 = i$18 + 1 + f$3, C$3 = ` ${` ${d$14}`.slice(-D$4)} |`, E$3 = a$13[d$14], h$3 = !a$13[d$14 + 1];
			if (E$3) {
				let x$3 = "";
				if (Array.isArray(E$3)) {
					let A$3 = F$4.slice(0, Math.max(E$3[0] - 1, 0)).replace(/[^\t]/g, " "), $$4 = E$3[1] || 1;
					x$3 = [
						`
 `,
						u$14.gutter(C$3.replace(/\d/g, " ")),
						" ",
						A$3,
						u$14.marker("^").repeat($$4)
					].join(""), h$3 && r$12.message && (x$3 += " " + u$14.message(r$12.message));
				}
				return [
					u$14.marker(">"),
					u$14.gutter(C$3),
					F$4.length > 0 ? ` ${F$4}` : "",
					x$3
				].join("");
			} else return ` ${u$14.gutter(C$3)}${F$4.length > 0 ? ` ${F$4}` : ""}`;
		}).join(`
`);
		return r$12.message && !c$3 && (l$10 = `${" ".repeat(D$4 + 1)}${r$12.message}
${l$10}`), l$10;
	}
	Mt$5.codeFrameColumns = go$4;
});
var Zt = {};
dt(Zt, {
	__debug: () => ui,
	check: () => ri,
	doc: () => qt,
	format: () => fu,
	formatWithCursor: () => cu,
	getSupportInfo: () => ni,
	util: () => Qt,
	version: () => tu
});
var Au = (e$4, t$13, r$12, n$8) => {
	if (!(e$4 && t$13 == null)) return t$13.replaceAll ? t$13.replaceAll(r$12, n$8) : r$12.global ? t$13.replace(r$12, n$8) : t$13.split(r$12).join(n$8);
}, te = Au;
var _e = class {
	diff(t$13, r$12, n$8 = {}) {
		let u$14;
		typeof n$8 == "function" ? (u$14 = n$8, n$8 = {}) : "callback" in n$8 && (u$14 = n$8.callback);
		let o$9 = this.castInput(t$13, n$8), i$18 = this.castInput(r$12, n$8), s$8 = this.removeEmpty(this.tokenize(o$9, n$8)), a$13 = this.removeEmpty(this.tokenize(i$18, n$8));
		return this.diffWithOptionsObj(s$8, a$13, n$8, u$14);
	}
	diffWithOptionsObj(t$13, r$12, n$8, u$14) {
		var o$9;
		let i$18 = (E$3) => {
			if (E$3 = this.postProcess(E$3, n$8), u$14) {
				setTimeout(function() {
					u$14(E$3);
				}, 0);
				return;
			} else return E$3;
		}, s$8 = r$12.length, a$13 = t$13.length, c$3 = 1, D$4 = s$8 + a$13;
		n$8.maxEditLength != null && (D$4 = Math.min(D$4, n$8.maxEditLength));
		let p$2 = (o$9 = n$8.timeout) !== null && o$9 !== void 0 ? o$9 : Infinity, l$10 = Date.now() + p$2, F$4 = [{
			oldPos: -1,
			lastComponent: void 0
		}], f$3 = this.extractCommon(F$4[0], r$12, t$13, 0, n$8);
		if (F$4[0].oldPos + 1 >= a$13 && f$3 + 1 >= s$8) return i$18(this.buildValues(F$4[0].lastComponent, r$12, t$13));
		let d$14 = -Infinity, m$11 = Infinity, C$3 = () => {
			for (let E$3 = Math.max(d$14, -c$3); E$3 <= Math.min(m$11, c$3); E$3 += 2) {
				let h$3, x$3 = F$4[E$3 - 1], A$3 = F$4[E$3 + 1];
				x$3 && (F$4[E$3 - 1] = void 0);
				let $$4 = !1;
				if (A$3) {
					let Be$4 = A$3.oldPos - E$3;
					$$4 = A$3 && 0 <= Be$4 && Be$4 < s$8;
				}
				let ue$4 = x$3 && x$3.oldPos + 1 < a$13;
				if (!$$4 && !ue$4) {
					F$4[E$3] = void 0;
					continue;
				}
				if (!ue$4 || $$4 && x$3.oldPos < A$3.oldPos ? h$3 = this.addToPath(A$3, !0, !1, 0, n$8) : h$3 = this.addToPath(x$3, !1, !0, 1, n$8), f$3 = this.extractCommon(h$3, r$12, t$13, E$3, n$8), h$3.oldPos + 1 >= a$13 && f$3 + 1 >= s$8) return i$18(this.buildValues(h$3.lastComponent, r$12, t$13)) || !0;
				F$4[E$3] = h$3, h$3.oldPos + 1 >= a$13 && (m$11 = Math.min(m$11, E$3 - 1)), f$3 + 1 >= s$8 && (d$14 = Math.max(d$14, E$3 + 1));
			}
			c$3++;
		};
		if (u$14) (function E$3() {
			setTimeout(function() {
				if (c$3 > D$4 || Date.now() > l$10) return u$14(void 0);
				C$3() || E$3();
			}, 0);
		})();
		else for (; c$3 <= D$4 && Date.now() <= l$10;) {
			let E$3 = C$3();
			if (E$3) return E$3;
		}
	}
	addToPath(t$13, r$12, n$8, u$14, o$9) {
		let i$18 = t$13.lastComponent;
		return i$18 && !o$9.oneChangePerToken && i$18.added === r$12 && i$18.removed === n$8 ? {
			oldPos: t$13.oldPos + u$14,
			lastComponent: {
				count: i$18.count + 1,
				added: r$12,
				removed: n$8,
				previousComponent: i$18.previousComponent
			}
		} : {
			oldPos: t$13.oldPos + u$14,
			lastComponent: {
				count: 1,
				added: r$12,
				removed: n$8,
				previousComponent: i$18
			}
		};
	}
	extractCommon(t$13, r$12, n$8, u$14, o$9) {
		let i$18 = r$12.length, s$8 = n$8.length, a$13 = t$13.oldPos, c$3 = a$13 - u$14, D$4 = 0;
		for (; c$3 + 1 < i$18 && a$13 + 1 < s$8 && this.equals(n$8[a$13 + 1], r$12[c$3 + 1], o$9);) c$3++, a$13++, D$4++, o$9.oneChangePerToken && (t$13.lastComponent = {
			count: 1,
			previousComponent: t$13.lastComponent,
			added: !1,
			removed: !1
		});
		return D$4 && !o$9.oneChangePerToken && (t$13.lastComponent = {
			count: D$4,
			previousComponent: t$13.lastComponent,
			added: !1,
			removed: !1
		}), t$13.oldPos = a$13, c$3;
	}
	equals(t$13, r$12, n$8) {
		return n$8.comparator ? n$8.comparator(t$13, r$12) : t$13 === r$12 || !!n$8.ignoreCase && t$13.toLowerCase() === r$12.toLowerCase();
	}
	removeEmpty(t$13) {
		let r$12 = [];
		for (let n$8 = 0; n$8 < t$13.length; n$8++) t$13[n$8] && r$12.push(t$13[n$8]);
		return r$12;
	}
	castInput(t$13, r$12) {
		return t$13;
	}
	tokenize(t$13, r$12) {
		return Array.from(t$13);
	}
	join(t$13) {
		return t$13.join("");
	}
	postProcess(t$13, r$12) {
		return t$13;
	}
	get useLongestToken() {
		return !1;
	}
	buildValues(t$13, r$12, n$8) {
		let u$14 = [], o$9;
		for (; t$13;) u$14.push(t$13), o$9 = t$13.previousComponent, delete t$13.previousComponent, t$13 = o$9;
		u$14.reverse();
		let i$18 = u$14.length, s$8 = 0, a$13 = 0, c$3 = 0;
		for (; s$8 < i$18; s$8++) {
			let D$4 = u$14[s$8];
			if (D$4.removed) D$4.value = this.join(n$8.slice(c$3, c$3 + D$4.count)), c$3 += D$4.count;
			else {
				if (!D$4.added && this.useLongestToken) {
					let p$2 = r$12.slice(a$13, a$13 + D$4.count);
					p$2 = p$2.map(function(l$10, F$4) {
						let f$3 = n$8[c$3 + F$4];
						return f$3.length > l$10.length ? f$3 : l$10;
					}), D$4.value = this.join(p$2);
				} else D$4.value = this.join(r$12.slice(a$13, a$13 + D$4.count));
				a$13 += D$4.count, D$4.added || (c$3 += D$4.count);
			}
		}
		return u$14;
	}
};
var mt = class extends _e {
	tokenize(t$13) {
		return t$13.slice();
	}
	join(t$13) {
		return t$13;
	}
	removeEmpty(t$13) {
		return t$13;
	}
}, rr = new mt();
function Et(e$4, t$13, r$12) {
	return rr.diff(e$4, t$13, r$12);
}
function nr(e$4) {
	let t$13 = e$4.indexOf("\r");
	return t$13 !== -1 ? e$4.charAt(t$13 + 1) === `
` ? "crlf" : "cr" : "lf";
}
function xe(e$4) {
	switch (e$4) {
		case "cr": return "\r";
		case "crlf": return `\r
`;
		default: return `
`;
	}
}
function Ct(e$4, t$13) {
	let r$12;
	switch (t$13) {
		case `
`:
			r$12 = /\n/gu;
			break;
		case "\r":
			r$12 = /\r/gu;
			break;
		case `\r
`:
			r$12 = /\r\n/gu;
			break;
		default: throw new Error(`Unexpected "eol" ${JSON.stringify(t$13)}.`);
	}
	let n$8 = e$4.match(r$12);
	return n$8 ? n$8.length : 0;
}
function ur(e$4) {
	return te(!1, e$4, /\r\n?/gu, `
`);
}
var W = "string", Y = "array", j$1 = "cursor", N = "indent", O = "align", P = "trim", B = "group", k$1 = "fill", _ = "if-break", v = "indent-if-break", L = "line-suffix", I = "line-suffix-boundary", g = "line", S = "label", w = "break-parent", Ue = new Set([
	j$1,
	N,
	O,
	P,
	B,
	k$1,
	_,
	v,
	L,
	I,
	g,
	S,
	w
]);
var Bu = (e$4, t$13, r$12) => {
	if (!(e$4 && t$13 == null)) return Array.isArray(t$13) || typeof t$13 == "string" ? t$13[r$12 < 0 ? t$13.length + r$12 : r$12] : t$13.at(r$12);
}, y$6 = Bu;
function or(e$4) {
	let t$13 = e$4.length;
	for (; t$13 > 0 && (e$4[t$13 - 1] === "\r" || e$4[t$13 - 1] === `
`);) t$13--;
	return t$13 < e$4.length ? e$4.slice(0, t$13) : e$4;
}
function _u(e$4) {
	if (typeof e$4 == "string") return W;
	if (Array.isArray(e$4)) return Y;
	if (!e$4) return;
	let { type: t$13 } = e$4;
	if (Ue.has(t$13)) return t$13;
}
var M = _u;
var xu = (e$4) => new Intl.ListFormat("en-US", { type: "disjunction" }).format(e$4);
function wu(e$4) {
	let t$13 = e$4 === null ? "null" : typeof e$4;
	if (t$13 !== "string" && t$13 !== "object") return `Unexpected doc '${t$13}', 
Expected it to be 'string' or 'object'.`;
	if (M(e$4)) throw new Error("doc is valid.");
	let r$12 = Object.prototype.toString.call(e$4);
	if (r$12 !== "[object Object]") return `Unexpected doc '${r$12}'.`;
	let n$8 = xu([...Ue].map((u$14) => `'${u$14}'`));
	return `Unexpected doc.type '${e$4.type}'.
Expected it to be ${n$8}.`;
}
var ht = class extends Error {
	name = "InvalidDocError";
	constructor(t$13) {
		super(wu(t$13)), this.doc = t$13;
	}
}, q = ht;
var ir = {};
function bu(e$4, t$13, r$12, n$8) {
	let u$14 = [e$4];
	for (; u$14.length > 0;) {
		let o$9 = u$14.pop();
		if (o$9 === ir) {
			r$12(u$14.pop());
			continue;
		}
		r$12 && u$14.push(o$9, ir);
		let i$18 = M(o$9);
		if (!i$18) throw new q(o$9);
		if ((t$13 == null ? void 0 : t$13(o$9)) !== !1) switch (i$18) {
			case Y:
			case k$1: {
				let s$8 = i$18 === Y ? o$9 : o$9.parts;
				for (let a$13 = s$8.length, c$3 = a$13 - 1; c$3 >= 0; --c$3) u$14.push(s$8[c$3]);
				break;
			}
			case _:
				u$14.push(o$9.flatContents, o$9.breakContents);
				break;
			case B:
				if (n$8 && o$9.expandedStates) for (let s$8 = o$9.expandedStates.length, a$13 = s$8 - 1; a$13 >= 0; --a$13) u$14.push(o$9.expandedStates[a$13]);
				else u$14.push(o$9.contents);
				break;
			case O:
			case N:
			case v:
			case S:
			case L:
				u$14.push(o$9.contents);
				break;
			case W:
			case j$1:
			case P:
			case I:
			case g:
			case w: break;
			default: throw new q(o$9);
		}
	}
}
var le = bu;
function be(e$4, t$13) {
	if (typeof e$4 == "string") return t$13(e$4);
	let r$12 = /* @__PURE__ */ new Map();
	return n$8(e$4);
	function n$8(o$9) {
		if (r$12.has(o$9)) return r$12.get(o$9);
		let i$18 = u$14(o$9);
		return r$12.set(o$9, i$18), i$18;
	}
	function u$14(o$9) {
		switch (M(o$9)) {
			case Y: return t$13(o$9.map(n$8));
			case k$1: return t$13({
				...o$9,
				parts: o$9.parts.map(n$8)
			});
			case _: return t$13({
				...o$9,
				breakContents: n$8(o$9.breakContents),
				flatContents: n$8(o$9.flatContents)
			});
			case B: {
				let { expandedStates: i$18, contents: s$8 } = o$9;
				return i$18 ? (i$18 = i$18.map(n$8), s$8 = i$18[0]) : s$8 = n$8(s$8), t$13({
					...o$9,
					contents: s$8,
					expandedStates: i$18
				});
			}
			case O:
			case N:
			case v:
			case S:
			case L: return t$13({
				...o$9,
				contents: n$8(o$9.contents)
			});
			case W:
			case j$1:
			case P:
			case I:
			case g:
			case w: return t$13(o$9);
			default: throw new q(o$9);
		}
	}
}
function Ve(e$4, t$13, r$12) {
	let n$8 = r$12, u$14 = !1;
	function o$9(i$18) {
		if (u$14) return !1;
		let s$8 = t$13(i$18);
		s$8 !== void 0 && (u$14 = !0, n$8 = s$8);
	}
	return le(e$4, o$9), n$8;
}
function ku(e$4) {
	if (e$4.type === B && e$4.break || e$4.type === g && e$4.hard || e$4.type === w) return !0;
}
function Dr(e$4) {
	return Ve(e$4, ku, !1);
}
function sr(e$4) {
	if (e$4.length > 0) {
		let t$13 = y$6(!1, e$4, -1);
		!t$13.expandedStates && !t$13.break && (t$13.break = "propagated");
	}
	return null;
}
function cr(e$4) {
	let t$13 = /* @__PURE__ */ new Set(), r$12 = [];
	function n$8(o$9) {
		if (o$9.type === w && sr(r$12), o$9.type === B) {
			if (r$12.push(o$9), t$13.has(o$9)) return !1;
			t$13.add(o$9);
		}
	}
	function u$14(o$9) {
		o$9.type === B && r$12.pop().break && sr(r$12);
	}
	le(e$4, n$8, u$14, !0);
}
function Su(e$4) {
	return e$4.type === g && !e$4.hard ? e$4.soft ? "" : " " : e$4.type === _ ? e$4.flatContents : e$4;
}
function fr(e$4) {
	return be(e$4, Su);
}
function ar(e$4) {
	for (e$4 = [...e$4]; e$4.length >= 2 && y$6(!1, e$4, -2).type === g && y$6(!1, e$4, -1).type === w;) e$4.length -= 2;
	if (e$4.length > 0) {
		let t$13 = we(y$6(!1, e$4, -1));
		e$4[e$4.length - 1] = t$13;
	}
	return e$4;
}
function we(e$4) {
	switch (M(e$4)) {
		case N:
		case v:
		case B:
		case L:
		case S: {
			let t$13 = we(e$4.contents);
			return {
				...e$4,
				contents: t$13
			};
		}
		case _: return {
			...e$4,
			breakContents: we(e$4.breakContents),
			flatContents: we(e$4.flatContents)
		};
		case k$1: return {
			...e$4,
			parts: ar(e$4.parts)
		};
		case Y: return ar(e$4);
		case W: return or(e$4);
		case O:
		case j$1:
		case P:
		case I:
		case g:
		case w: break;
		default: throw new q(e$4);
	}
	return e$4;
}
function $e(e$4) {
	return we(Nu(e$4));
}
function Tu(e$4) {
	switch (M(e$4)) {
		case k$1:
			if (e$4.parts.every((t$13) => t$13 === "")) return "";
			break;
		case B:
			if (!e$4.contents && !e$4.id && !e$4.break && !e$4.expandedStates) return "";
			if (e$4.contents.type === B && e$4.contents.id === e$4.id && e$4.contents.break === e$4.break && e$4.contents.expandedStates === e$4.expandedStates) return e$4.contents;
			break;
		case O:
		case N:
		case v:
		case L:
			if (!e$4.contents) return "";
			break;
		case _:
			if (!e$4.flatContents && !e$4.breakContents) return "";
			break;
		case Y: {
			let t$13 = [];
			for (let r$12 of e$4) {
				if (!r$12) continue;
				let [n$8, ...u$14] = Array.isArray(r$12) ? r$12 : [r$12];
				typeof n$8 == "string" && typeof y$6(!1, t$13, -1) == "string" ? t$13[t$13.length - 1] += n$8 : t$13.push(n$8), t$13.push(...u$14);
			}
			return t$13.length === 0 ? "" : t$13.length === 1 ? t$13[0] : t$13;
		}
		case W:
		case j$1:
		case P:
		case I:
		case g:
		case S:
		case w: break;
		default: throw new q(e$4);
	}
	return e$4;
}
function Nu(e$4) {
	return be(e$4, (t$13) => Tu(t$13));
}
function lr(e$4, t$13 = We) {
	return be(e$4, (r$12) => typeof r$12 == "string" ? ke(t$13, r$12.split(`
`)) : r$12);
}
function Ou(e$4) {
	if (e$4.type === g) return !0;
}
function Fr(e$4) {
	return Ve(e$4, Ou, !1);
}
function Fe(e$4, t$13) {
	return e$4.type === S ? {
		...e$4,
		contents: t$13(e$4.contents)
	} : t$13(e$4);
}
var gt = () => {}, K = gt, yt = gt, pr = gt;
function ie(e$4) {
	return K(e$4), {
		type: N,
		contents: e$4
	};
}
function oe(e$4, t$13) {
	return K(t$13), {
		type: O,
		contents: t$13,
		n: e$4
	};
}
function At(e$4, t$13 = {}) {
	return K(e$4), yt(t$13.expandedStates, !0), {
		type: B,
		id: t$13.id,
		contents: e$4,
		break: !!t$13.shouldBreak,
		expandedStates: t$13.expandedStates
	};
}
function dr(e$4) {
	return oe(Number.NEGATIVE_INFINITY, e$4);
}
function mr(e$4) {
	return oe({ type: "root" }, e$4);
}
function Er(e$4) {
	return oe(-1, e$4);
}
function Cr(e$4, t$13) {
	return At(e$4[0], {
		...t$13,
		expandedStates: e$4
	});
}
function hr(e$4) {
	return pr(e$4), {
		type: k$1,
		parts: e$4
	};
}
function gr(e$4, t$13 = "", r$12 = {}) {
	return K(e$4), t$13 !== "" && K(t$13), {
		type: _,
		breakContents: e$4,
		flatContents: t$13,
		groupId: r$12.groupId
	};
}
function yr(e$4, t$13) {
	return K(e$4), {
		type: v,
		contents: e$4,
		groupId: t$13.groupId,
		negate: t$13.negate
	};
}
function Se(e$4) {
	return K(e$4), {
		type: L,
		contents: e$4
	};
}
var Ar = { type: I }, pe = { type: w }, Br = { type: P }, Te = {
	type: g,
	hard: !0
}, Bt = {
	type: g,
	hard: !0,
	literal: !0
}, Me = { type: g }, _r = {
	type: g,
	soft: !0
}, z = [Te, pe], We = [Bt, pe], X = { type: j$1 };
function ke(e$4, t$13) {
	K(e$4), yt(t$13);
	let r$12 = [];
	for (let n$8 = 0; n$8 < t$13.length; n$8++) n$8 !== 0 && r$12.push(e$4), r$12.push(t$13[n$8]);
	return r$12;
}
function Ge(e$4, t$13, r$12) {
	K(e$4);
	let n$8 = e$4;
	if (t$13 > 0) {
		for (let u$14 = 0; u$14 < Math.floor(t$13 / r$12); ++u$14) n$8 = ie(n$8);
		n$8 = oe(t$13 % r$12, n$8), n$8 = oe(Number.NEGATIVE_INFINITY, n$8);
	}
	return n$8;
}
function xr(e$4, t$13) {
	return K(t$13), e$4 ? {
		type: S,
		label: e$4,
		contents: t$13
	} : t$13;
}
function Q(e$4) {
	var t$13;
	if (!e$4) return "";
	if (Array.isArray(e$4)) {
		let r$12 = [];
		for (let n$8 of e$4) if (Array.isArray(n$8)) r$12.push(...Q(n$8));
		else {
			let u$14 = Q(n$8);
			u$14 !== "" && r$12.push(u$14);
		}
		return r$12;
	}
	return e$4.type === _ ? {
		...e$4,
		breakContents: Q(e$4.breakContents),
		flatContents: Q(e$4.flatContents)
	} : e$4.type === B ? {
		...e$4,
		contents: Q(e$4.contents),
		expandedStates: (t$13 = e$4.expandedStates) == null ? void 0 : t$13.map(Q)
	} : e$4.type === k$1 ? {
		type: "fill",
		parts: e$4.parts.map(Q)
	} : e$4.contents ? {
		...e$4,
		contents: Q(e$4.contents)
	} : e$4;
}
function wr(e$4) {
	let t$13 = Object.create(null), r$12 = /* @__PURE__ */ new Set();
	return n$8(Q(e$4));
	function n$8(o$9, i$18, s$8) {
		var a$13, c$3;
		if (typeof o$9 == "string") return JSON.stringify(o$9);
		if (Array.isArray(o$9)) {
			let D$4 = o$9.map(n$8).filter(Boolean);
			return D$4.length === 1 ? D$4[0] : `[${D$4.join(", ")}]`;
		}
		if (o$9.type === g) {
			let D$4 = ((a$13 = s$8 == null ? void 0 : s$8[i$18 + 1]) == null ? void 0 : a$13.type) === w;
			return o$9.literal ? D$4 ? "literalline" : "literallineWithoutBreakParent" : o$9.hard ? D$4 ? "hardline" : "hardlineWithoutBreakParent" : o$9.soft ? "softline" : "line";
		}
		if (o$9.type === w) return ((c$3 = s$8 == null ? void 0 : s$8[i$18 - 1]) == null ? void 0 : c$3.type) === g && s$8[i$18 - 1].hard ? void 0 : "breakParent";
		if (o$9.type === P) return "trim";
		if (o$9.type === N) return "indent(" + n$8(o$9.contents) + ")";
		if (o$9.type === O) return o$9.n === Number.NEGATIVE_INFINITY ? "dedentToRoot(" + n$8(o$9.contents) + ")" : o$9.n < 0 ? "dedent(" + n$8(o$9.contents) + ")" : o$9.n.type === "root" ? "markAsRoot(" + n$8(o$9.contents) + ")" : "align(" + JSON.stringify(o$9.n) + ", " + n$8(o$9.contents) + ")";
		if (o$9.type === _) return "ifBreak(" + n$8(o$9.breakContents) + (o$9.flatContents ? ", " + n$8(o$9.flatContents) : "") + (o$9.groupId ? (o$9.flatContents ? "" : ", \"\"") + `, { groupId: ${u$14(o$9.groupId)} }` : "") + ")";
		if (o$9.type === v) {
			let D$4 = [];
			o$9.negate && D$4.push("negate: true"), o$9.groupId && D$4.push(`groupId: ${u$14(o$9.groupId)}`);
			let p$2 = D$4.length > 0 ? `, { ${D$4.join(", ")} }` : "";
			return `indentIfBreak(${n$8(o$9.contents)}${p$2})`;
		}
		if (o$9.type === B) {
			let D$4 = [];
			o$9.break && o$9.break !== "propagated" && D$4.push("shouldBreak: true"), o$9.id && D$4.push(`id: ${u$14(o$9.id)}`);
			let p$2 = D$4.length > 0 ? `, { ${D$4.join(", ")} }` : "";
			return o$9.expandedStates ? `conditionalGroup([${o$9.expandedStates.map((l$10) => n$8(l$10)).join(",")}]${p$2})` : `group(${n$8(o$9.contents)}${p$2})`;
		}
		if (o$9.type === k$1) return `fill([${o$9.parts.map((D$4) => n$8(D$4)).join(", ")}])`;
		if (o$9.type === L) return "lineSuffix(" + n$8(o$9.contents) + ")";
		if (o$9.type === I) return "lineSuffixBoundary";
		if (o$9.type === S) return `label(${JSON.stringify(o$9.label)}, ${n$8(o$9.contents)})`;
		if (o$9.type === j$1) return "cursor";
		throw new Error("Unknown doc type " + o$9.type);
	}
	function u$14(o$9) {
		if (typeof o$9 != "symbol") return JSON.stringify(String(o$9));
		if (o$9 in t$13) return t$13[o$9];
		let i$18 = o$9.description || "symbol";
		for (let s$8 = 0;; s$8++) {
			let a$13 = i$18 + (s$8 > 0 ? ` #${s$8}` : "");
			if (!r$12.has(a$13)) return r$12.add(a$13), t$13[o$9] = `Symbol.for(${JSON.stringify(a$13)})`;
		}
	}
}
var br = () => /[#*0-9]\uFE0F?\u20E3|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26AA\u26B0\u26B1\u26BD\u26BE\u26C4\u26C8\u26CF\u26D1\u26E9\u26F0-\u26F5\u26F7\u26F8\u26FA\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2757\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B55\u3030\u303D\u3297\u3299]\uFE0F?|[\u261D\u270C\u270D](?:\uD83C[\uDFFB-\uDFFF]|\uFE0F)?|[\u270A\u270B](?:\uD83C[\uDFFB-\uDFFF])?|[\u23E9-\u23EC\u23F0\u23F3\u25FD\u2693\u26A1\u26AB\u26C5\u26CE\u26D4\u26EA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2795-\u2797\u27B0\u27BF\u2B50]|\u26D3\uFE0F?(?:\u200D\uD83D\uDCA5)?|\u26F9(?:\uD83C[\uDFFB-\uDFFF]|\uFE0F)?(?:\u200D[\u2640\u2642]\uFE0F?)?|\u2764\uFE0F?(?:\u200D(?:\uD83D\uDD25|\uD83E\uDE79))?|\uD83C(?:[\uDC04\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]\uFE0F?|[\uDF85\uDFC2\uDFC7](?:\uD83C[\uDFFB-\uDFFF])?|[\uDFC4\uDFCA](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDFCB\uDFCC](?:\uD83C[\uDFFB-\uDFFF]|\uFE0F)?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF43\uDF45-\uDF4A\uDF4C-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uDDE6\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF]|\uDDE7\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF]|\uDDE8\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF7\uDDFA-\uDDFF]|\uDDE9\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF]|\uDDEA\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA]|\uDDEB\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7]|\uDDEC\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE]|\uDDED\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA]|\uDDEE\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9]|\uDDEF\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5]|\uDDF0\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF]|\uDDF1\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE]|\uDDF2\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF]|\uDDF3\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF]|\uDDF4\uD83C\uDDF2|\uDDF5\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE]|\uDDF6\uD83C\uDDE6|\uDDF7\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC]|\uDDF8\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF]|\uDDF9\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF]|\uDDFA\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF]|\uDDFB\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA]|\uDDFC\uD83C[\uDDEB\uDDF8]|\uDDFD\uD83C\uDDF0|\uDDFE\uD83C[\uDDEA\uDDF9]|\uDDFF\uD83C[\uDDE6\uDDF2\uDDFC]|\uDF44(?:\u200D\uD83D\uDFEB)?|\uDF4B(?:\u200D\uD83D\uDFE9)?|\uDFC3(?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D(?:[\u2640\u2642]\uFE0F?(?:\u200D\u27A1\uFE0F?)?|\u27A1\uFE0F?))?|\uDFF3\uFE0F?(?:\u200D(?:\u26A7\uFE0F?|\uD83C\uDF08))?|\uDFF4(?:\u200D\u2620\uFE0F?|\uDB40\uDC67\uDB40\uDC62\uDB40(?:\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDC73\uDB40\uDC63\uDB40\uDC74|\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F)?)|\uD83D(?:[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3]\uFE0F?|[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC](?:\uD83C[\uDFFB-\uDFFF])?|[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4\uDEB5](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDD74\uDD90](?:\uD83C[\uDFFB-\uDFFF]|\uFE0F)?|[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC25\uDC27-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE41\uDE43\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEDC-\uDEDF\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB\uDFF0]|\uDC08(?:\u200D\u2B1B)?|\uDC15(?:\u200D\uD83E\uDDBA)?|\uDC26(?:\u200D(?:\u2B1B|\uD83D\uDD25))?|\uDC3B(?:\u200D\u2744\uFE0F?)?|\uDC41\uFE0F?(?:\u200D\uD83D\uDDE8\uFE0F?)?|\uDC68(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D(?:[\uDC68\uDC69]\u200D\uD83D(?:\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?)|[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?)|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFC-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB\uDFFD-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB-\uDFFD\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB-\uDFFE])))?))?|\uDC69(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?[\uDC68\uDC69]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D(?:[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?|\uDC69\u200D\uD83D(?:\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?))|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFC-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB\uDFFD-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB-\uDFFD\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB-\uDFFE])))?))?|\uDC6F(?:\u200D[\u2640\u2642]\uFE0F?)?|\uDD75(?:\uD83C[\uDFFB-\uDFFF]|\uFE0F)?(?:\u200D[\u2640\u2642]\uFE0F?)?|\uDE2E(?:\u200D\uD83D\uDCA8)?|\uDE35(?:\u200D\uD83D\uDCAB)?|\uDE36(?:\u200D\uD83C\uDF2B\uFE0F?)?|\uDE42(?:\u200D[\u2194\u2195]\uFE0F?)?|\uDEB6(?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D(?:[\u2640\u2642]\uFE0F?(?:\u200D\u27A1\uFE0F?)?|\u27A1\uFE0F?))?)|\uD83E(?:[\uDD0C\uDD0F\uDD18-\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5\uDEC3-\uDEC5\uDEF0\uDEF2-\uDEF8](?:\uD83C[\uDFFB-\uDFFF])?|[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD\uDDCF\uDDD4\uDDD6-\uDDDD](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDDDE\uDDDF](?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDD0D\uDD0E\uDD10-\uDD17\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCC\uDDD0\uDDE0-\uDDFF\uDE70-\uDE7C\uDE80-\uDE89\uDE8F-\uDEC2\uDEC6\uDECE-\uDEDC\uDEDF-\uDEE9]|\uDD3C(?:\u200D[\u2640\u2642]\uFE0F?|\uD83C[\uDFFB-\uDFFF])?|\uDDCE(?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D(?:[\u2640\u2642]\uFE0F?(?:\u200D\u27A1\uFE0F?)?|\u27A1\uFE0F?))?|\uDDD1(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1|\uDDD1\u200D\uD83E\uDDD2(?:\u200D\uD83E\uDDD2)?|\uDDD2(?:\u200D\uD83E\uDDD2)?))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFC-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB\uDFFD-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB-\uDFFD\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB-\uDFFE]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?))?|\uDEF1(?:\uD83C(?:\uDFFB(?:\u200D\uD83E\uDEF2\uD83C[\uDFFC-\uDFFF])?|\uDFFC(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB\uDFFD-\uDFFF])?|\uDFFD(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])?|\uDFFE(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB-\uDFFD\uDFFF])?|\uDFFF(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB-\uDFFE])?))?)/g;
function kr(e$4) {
	return e$4 === 12288 || e$4 >= 65281 && e$4 <= 65376 || e$4 >= 65504 && e$4 <= 65510;
}
function Sr(e$4) {
	return e$4 >= 4352 && e$4 <= 4447 || e$4 === 8986 || e$4 === 8987 || e$4 === 9001 || e$4 === 9002 || e$4 >= 9193 && e$4 <= 9196 || e$4 === 9200 || e$4 === 9203 || e$4 === 9725 || e$4 === 9726 || e$4 === 9748 || e$4 === 9749 || e$4 >= 9776 && e$4 <= 9783 || e$4 >= 9800 && e$4 <= 9811 || e$4 === 9855 || e$4 >= 9866 && e$4 <= 9871 || e$4 === 9875 || e$4 === 9889 || e$4 === 9898 || e$4 === 9899 || e$4 === 9917 || e$4 === 9918 || e$4 === 9924 || e$4 === 9925 || e$4 === 9934 || e$4 === 9940 || e$4 === 9962 || e$4 === 9970 || e$4 === 9971 || e$4 === 9973 || e$4 === 9978 || e$4 === 9981 || e$4 === 9989 || e$4 === 9994 || e$4 === 9995 || e$4 === 10024 || e$4 === 10060 || e$4 === 10062 || e$4 >= 10067 && e$4 <= 10069 || e$4 === 10071 || e$4 >= 10133 && e$4 <= 10135 || e$4 === 10160 || e$4 === 10175 || e$4 === 11035 || e$4 === 11036 || e$4 === 11088 || e$4 === 11093 || e$4 >= 11904 && e$4 <= 11929 || e$4 >= 11931 && e$4 <= 12019 || e$4 >= 12032 && e$4 <= 12245 || e$4 >= 12272 && e$4 <= 12287 || e$4 >= 12289 && e$4 <= 12350 || e$4 >= 12353 && e$4 <= 12438 || e$4 >= 12441 && e$4 <= 12543 || e$4 >= 12549 && e$4 <= 12591 || e$4 >= 12593 && e$4 <= 12686 || e$4 >= 12688 && e$4 <= 12773 || e$4 >= 12783 && e$4 <= 12830 || e$4 >= 12832 && e$4 <= 12871 || e$4 >= 12880 && e$4 <= 42124 || e$4 >= 42128 && e$4 <= 42182 || e$4 >= 43360 && e$4 <= 43388 || e$4 >= 44032 && e$4 <= 55203 || e$4 >= 63744 && e$4 <= 64255 || e$4 >= 65040 && e$4 <= 65049 || e$4 >= 65072 && e$4 <= 65106 || e$4 >= 65108 && e$4 <= 65126 || e$4 >= 65128 && e$4 <= 65131 || e$4 >= 94176 && e$4 <= 94180 || e$4 === 94192 || e$4 === 94193 || e$4 >= 94208 && e$4 <= 100343 || e$4 >= 100352 && e$4 <= 101589 || e$4 >= 101631 && e$4 <= 101640 || e$4 >= 110576 && e$4 <= 110579 || e$4 >= 110581 && e$4 <= 110587 || e$4 === 110589 || e$4 === 110590 || e$4 >= 110592 && e$4 <= 110882 || e$4 === 110898 || e$4 >= 110928 && e$4 <= 110930 || e$4 === 110933 || e$4 >= 110948 && e$4 <= 110951 || e$4 >= 110960 && e$4 <= 111355 || e$4 >= 119552 && e$4 <= 119638 || e$4 >= 119648 && e$4 <= 119670 || e$4 === 126980 || e$4 === 127183 || e$4 === 127374 || e$4 >= 127377 && e$4 <= 127386 || e$4 >= 127488 && e$4 <= 127490 || e$4 >= 127504 && e$4 <= 127547 || e$4 >= 127552 && e$4 <= 127560 || e$4 === 127568 || e$4 === 127569 || e$4 >= 127584 && e$4 <= 127589 || e$4 >= 127744 && e$4 <= 127776 || e$4 >= 127789 && e$4 <= 127797 || e$4 >= 127799 && e$4 <= 127868 || e$4 >= 127870 && e$4 <= 127891 || e$4 >= 127904 && e$4 <= 127946 || e$4 >= 127951 && e$4 <= 127955 || e$4 >= 127968 && e$4 <= 127984 || e$4 === 127988 || e$4 >= 127992 && e$4 <= 128062 || e$4 === 128064 || e$4 >= 128066 && e$4 <= 128252 || e$4 >= 128255 && e$4 <= 128317 || e$4 >= 128331 && e$4 <= 128334 || e$4 >= 128336 && e$4 <= 128359 || e$4 === 128378 || e$4 === 128405 || e$4 === 128406 || e$4 === 128420 || e$4 >= 128507 && e$4 <= 128591 || e$4 >= 128640 && e$4 <= 128709 || e$4 === 128716 || e$4 >= 128720 && e$4 <= 128722 || e$4 >= 128725 && e$4 <= 128727 || e$4 >= 128732 && e$4 <= 128735 || e$4 === 128747 || e$4 === 128748 || e$4 >= 128756 && e$4 <= 128764 || e$4 >= 128992 && e$4 <= 129003 || e$4 === 129008 || e$4 >= 129292 && e$4 <= 129338 || e$4 >= 129340 && e$4 <= 129349 || e$4 >= 129351 && e$4 <= 129535 || e$4 >= 129648 && e$4 <= 129660 || e$4 >= 129664 && e$4 <= 129673 || e$4 >= 129679 && e$4 <= 129734 || e$4 >= 129742 && e$4 <= 129756 || e$4 >= 129759 && e$4 <= 129769 || e$4 >= 129776 && e$4 <= 129784 || e$4 >= 131072 && e$4 <= 196605 || e$4 >= 196608 && e$4 <= 262141;
}
var Tr = (e$4) => !(kr(e$4) || Sr(e$4));
var Pu = /[^\x20-\x7F]/u;
function vu(e$4) {
	if (!e$4) return 0;
	if (!Pu.test(e$4)) return e$4.length;
	e$4 = e$4.replace(br(), "  ");
	let t$13 = 0;
	for (let r$12 of e$4) {
		let n$8 = r$12.codePointAt(0);
		n$8 <= 31 || n$8 >= 127 && n$8 <= 159 || n$8 >= 768 && n$8 <= 879 || (t$13 += Tr(n$8) ? 1 : 2);
	}
	return t$13;
}
var Ne = vu;
var R$2 = Symbol("MODE_BREAK"), H = Symbol("MODE_FLAT"), de = Symbol("cursor"), _t = Symbol("DOC_FILL_PRINTED_LENGTH");
function Nr() {
	return {
		value: "",
		length: 0,
		queue: []
	};
}
function Lu(e$4, t$13) {
	return xt(e$4, { type: "indent" }, t$13);
}
function Iu(e$4, t$13, r$12) {
	return t$13 === Number.NEGATIVE_INFINITY ? e$4.root || Nr() : t$13 < 0 ? xt(e$4, { type: "dedent" }, r$12) : t$13 ? t$13.type === "root" ? {
		...e$4,
		root: e$4
	} : xt(e$4, {
		type: typeof t$13 == "string" ? "stringAlign" : "numberAlign",
		n: t$13
	}, r$12) : e$4;
}
function xt(e$4, t$13, r$12) {
	let n$8 = t$13.type === "dedent" ? e$4.queue.slice(0, -1) : [...e$4.queue, t$13], u$14 = "", o$9 = 0, i$18 = 0, s$8 = 0;
	for (let f$3 of n$8) switch (f$3.type) {
		case "indent":
			D$4(), r$12.useTabs ? a$13(1) : c$3(r$12.tabWidth);
			break;
		case "stringAlign":
			D$4(), u$14 += f$3.n, o$9 += f$3.n.length;
			break;
		case "numberAlign":
			i$18 += 1, s$8 += f$3.n;
			break;
		default: throw new Error(`Unexpected type '${f$3.type}'`);
	}
	return l$10(), {
		...e$4,
		value: u$14,
		length: o$9,
		queue: n$8
	};
	function a$13(f$3) {
		u$14 += "	".repeat(f$3), o$9 += r$12.tabWidth * f$3;
	}
	function c$3(f$3) {
		u$14 += " ".repeat(f$3), o$9 += f$3;
	}
	function D$4() {
		r$12.useTabs ? p$2() : l$10();
	}
	function p$2() {
		i$18 > 0 && a$13(i$18), F$4();
	}
	function l$10() {
		s$8 > 0 && c$3(s$8), F$4();
	}
	function F$4() {
		i$18 = 0, s$8 = 0;
	}
}
function wt(e$4) {
	let t$13 = 0, r$12 = 0, n$8 = e$4.length;
	e: for (; n$8--;) {
		let u$14 = e$4[n$8];
		if (u$14 === de) {
			r$12++;
			continue;
		}
		for (let o$9 = u$14.length - 1; o$9 >= 0; o$9--) {
			let i$18 = u$14[o$9];
			if (i$18 === " " || i$18 === "	") t$13++;
			else {
				e$4[n$8] = u$14.slice(0, o$9 + 1);
				break e;
			}
		}
	}
	if (t$13 > 0 || r$12 > 0) for (e$4.length = n$8 + 1; r$12-- > 0;) e$4.push(de);
	return t$13;
}
function Ke(e$4, t$13, r$12, n$8, u$14, o$9) {
	if (r$12 === Number.POSITIVE_INFINITY) return !0;
	let i$18 = t$13.length, s$8 = [e$4], a$13 = [];
	for (; r$12 >= 0;) {
		if (s$8.length === 0) {
			if (i$18 === 0) return !0;
			s$8.push(t$13[--i$18]);
			continue;
		}
		let { mode: c$3, doc: D$4 } = s$8.pop(), p$2 = M(D$4);
		switch (p$2) {
			case W:
				a$13.push(D$4), r$12 -= Ne(D$4);
				break;
			case Y:
			case k$1: {
				let l$10 = p$2 === Y ? D$4 : D$4.parts, F$4 = D$4[_t] ?? 0;
				for (let f$3 = l$10.length - 1; f$3 >= F$4; f$3--) s$8.push({
					mode: c$3,
					doc: l$10[f$3]
				});
				break;
			}
			case N:
			case O:
			case v:
			case S:
				s$8.push({
					mode: c$3,
					doc: D$4.contents
				});
				break;
			case P:
				r$12 += wt(a$13);
				break;
			case B: {
				if (o$9 && D$4.break) return !1;
				let l$10 = D$4.break ? R$2 : c$3, F$4 = D$4.expandedStates && l$10 === R$2 ? y$6(!1, D$4.expandedStates, -1) : D$4.contents;
				s$8.push({
					mode: l$10,
					doc: F$4
				});
				break;
			}
			case _: {
				let F$4 = (D$4.groupId ? u$14[D$4.groupId] || H : c$3) === R$2 ? D$4.breakContents : D$4.flatContents;
				F$4 && s$8.push({
					mode: c$3,
					doc: F$4
				});
				break;
			}
			case g:
				if (c$3 === R$2 || D$4.hard) return !0;
				D$4.soft || (a$13.push(" "), r$12--);
				break;
			case L:
				n$8 = !0;
				break;
			case I:
				if (n$8) return !1;
				break;
		}
	}
	return !1;
}
function me(e$4, t$13) {
	let r$12 = {}, n$8 = t$13.printWidth, u$14 = xe(t$13.endOfLine), o$9 = 0, i$18 = [{
		ind: Nr(),
		mode: R$2,
		doc: e$4
	}], s$8 = [], a$13 = !1, c$3 = [], D$4 = 0;
	for (cr(e$4); i$18.length > 0;) {
		let { ind: l$10, mode: F$4, doc: f$3 } = i$18.pop();
		switch (M(f$3)) {
			case W: {
				let d$14 = u$14 !== `
` ? te(!1, f$3, `
`, u$14) : f$3;
				s$8.push(d$14), i$18.length > 0 && (o$9 += Ne(d$14));
				break;
			}
			case Y:
				for (let d$14 = f$3.length - 1; d$14 >= 0; d$14--) i$18.push({
					ind: l$10,
					mode: F$4,
					doc: f$3[d$14]
				});
				break;
			case j$1:
				if (D$4 >= 2) throw new Error("There are too many 'cursor' in doc.");
				s$8.push(de), D$4++;
				break;
			case N:
				i$18.push({
					ind: Lu(l$10, t$13),
					mode: F$4,
					doc: f$3.contents
				});
				break;
			case O:
				i$18.push({
					ind: Iu(l$10, f$3.n, t$13),
					mode: F$4,
					doc: f$3.contents
				});
				break;
			case P:
				o$9 -= wt(s$8);
				break;
			case B:
				switch (F$4) {
					case H: if (!a$13) {
						i$18.push({
							ind: l$10,
							mode: f$3.break ? R$2 : H,
							doc: f$3.contents
						});
						break;
					}
					case R$2: {
						a$13 = !1;
						let d$14 = {
							ind: l$10,
							mode: H,
							doc: f$3.contents
						}, m$11 = n$8 - o$9, C$3 = c$3.length > 0;
						if (!f$3.break && Ke(d$14, i$18, m$11, C$3, r$12)) i$18.push(d$14);
						else if (f$3.expandedStates) {
							let E$3 = y$6(!1, f$3.expandedStates, -1);
							if (f$3.break) {
								i$18.push({
									ind: l$10,
									mode: R$2,
									doc: E$3
								});
								break;
							} else for (let h$3 = 1; h$3 < f$3.expandedStates.length + 1; h$3++) if (h$3 >= f$3.expandedStates.length) {
								i$18.push({
									ind: l$10,
									mode: R$2,
									doc: E$3
								});
								break;
							} else {
								let x$3 = f$3.expandedStates[h$3], A$3 = {
									ind: l$10,
									mode: H,
									doc: x$3
								};
								if (Ke(A$3, i$18, m$11, C$3, r$12)) {
									i$18.push(A$3);
									break;
								}
							}
						} else i$18.push({
							ind: l$10,
							mode: R$2,
							doc: f$3.contents
						});
						break;
					}
				}
				f$3.id && (r$12[f$3.id] = y$6(!1, i$18, -1).mode);
				break;
			case k$1: {
				let d$14 = n$8 - o$9, m$11 = f$3[_t] ?? 0, { parts: C$3 } = f$3, E$3 = C$3.length - m$11;
				if (E$3 === 0) break;
				let h$3 = C$3[m$11 + 0], x$3 = C$3[m$11 + 1], A$3 = {
					ind: l$10,
					mode: H,
					doc: h$3
				}, $$4 = {
					ind: l$10,
					mode: R$2,
					doc: h$3
				}, ue$4 = Ke(A$3, [], d$14, c$3.length > 0, r$12, !0);
				if (E$3 === 1) {
					ue$4 ? i$18.push(A$3) : i$18.push($$4);
					break;
				}
				let Be$4 = {
					ind: l$10,
					mode: H,
					doc: x$3
				}, lt$3 = {
					ind: l$10,
					mode: R$2,
					doc: x$3
				};
				if (E$3 === 2) {
					ue$4 ? i$18.push(Be$4, A$3) : i$18.push(lt$3, $$4);
					break;
				}
				let lu$1 = C$3[m$11 + 2], Ft$4 = {
					ind: l$10,
					mode: F$4,
					doc: {
						...f$3,
						[_t]: m$11 + 2
					}
				};
				Ke({
					ind: l$10,
					mode: H,
					doc: [
						h$3,
						x$3,
						lu$1
					]
				}, [], d$14, c$3.length > 0, r$12, !0) ? i$18.push(Ft$4, Be$4, A$3) : ue$4 ? i$18.push(Ft$4, lt$3, A$3) : i$18.push(Ft$4, lt$3, $$4);
				break;
			}
			case _:
			case v: {
				let d$14 = f$3.groupId ? r$12[f$3.groupId] : F$4;
				if (d$14 === R$2) {
					let m$11 = f$3.type === _ ? f$3.breakContents : f$3.negate ? f$3.contents : ie(f$3.contents);
					m$11 && i$18.push({
						ind: l$10,
						mode: F$4,
						doc: m$11
					});
				}
				if (d$14 === H) {
					let m$11 = f$3.type === _ ? f$3.flatContents : f$3.negate ? ie(f$3.contents) : f$3.contents;
					m$11 && i$18.push({
						ind: l$10,
						mode: F$4,
						doc: m$11
					});
				}
				break;
			}
			case L:
				c$3.push({
					ind: l$10,
					mode: F$4,
					doc: f$3.contents
				});
				break;
			case I:
				c$3.length > 0 && i$18.push({
					ind: l$10,
					mode: F$4,
					doc: Te
				});
				break;
			case g:
				switch (F$4) {
					case H: if (f$3.hard) a$13 = !0;
					else {
						f$3.soft || (s$8.push(" "), o$9 += 1);
						break;
					}
					case R$2:
						if (c$3.length > 0) {
							i$18.push({
								ind: l$10,
								mode: F$4,
								doc: f$3
							}, ...c$3.reverse()), c$3.length = 0;
							break;
						}
						f$3.literal ? l$10.root ? (s$8.push(u$14, l$10.root.value), o$9 = l$10.root.length) : (s$8.push(u$14), o$9 = 0) : (o$9 -= wt(s$8), s$8.push(u$14 + l$10.value), o$9 = l$10.length);
						break;
				}
				break;
			case S:
				i$18.push({
					ind: l$10,
					mode: F$4,
					doc: f$3.contents
				});
				break;
			case w: break;
			default: throw new q(f$3);
		}
		i$18.length === 0 && c$3.length > 0 && (i$18.push(...c$3.reverse()), c$3.length = 0);
	}
	let p$2 = s$8.indexOf(de);
	if (p$2 !== -1) {
		let l$10 = s$8.indexOf(de, p$2 + 1);
		if (l$10 === -1) return { formatted: s$8.filter((m$11) => m$11 !== de).join("") };
		let F$4 = s$8.slice(0, p$2).join(""), f$3 = s$8.slice(p$2 + 1, l$10).join(""), d$14 = s$8.slice(l$10 + 1).join("");
		return {
			formatted: F$4 + f$3 + d$14,
			cursorNodeStart: F$4.length,
			cursorNodeText: f$3
		};
	}
	return { formatted: s$8.join("") };
}
function Ru(e$4, t$13, r$12 = 0) {
	let n$8 = 0;
	for (let u$14 = r$12; u$14 < e$4.length; ++u$14) e$4[u$14] === "	" ? n$8 = n$8 + t$13 - n$8 % t$13 : n$8++;
	return n$8;
}
var Ee = Ru;
var Z, kt, ze, bt = class {
	constructor(t$13) {
		tr(this, Z);
		this.stack = [t$13];
	}
	get key() {
		let { stack: t$13, siblings: r$12 } = this;
		return y$6(!1, t$13, r$12 === null ? -2 : -4) ?? null;
	}
	get index() {
		return this.siblings === null ? null : y$6(!1, this.stack, -2);
	}
	get node() {
		return y$6(!1, this.stack, -1);
	}
	get parent() {
		return this.getNode(1);
	}
	get grandparent() {
		return this.getNode(2);
	}
	get isInArray() {
		return this.siblings !== null;
	}
	get siblings() {
		let { stack: t$13 } = this, r$12 = y$6(!1, t$13, -3);
		return Array.isArray(r$12) ? r$12 : null;
	}
	get next() {
		let { siblings: t$13 } = this;
		return t$13 === null ? null : t$13[this.index + 1];
	}
	get previous() {
		let { siblings: t$13 } = this;
		return t$13 === null ? null : t$13[this.index - 1];
	}
	get isFirst() {
		return this.index === 0;
	}
	get isLast() {
		let { siblings: t$13, index: r$12 } = this;
		return t$13 !== null && r$12 === t$13.length - 1;
	}
	get isRoot() {
		return this.stack.length === 1;
	}
	get root() {
		return this.stack[0];
	}
	get ancestors() {
		return [...fe(this, Z, ze).call(this)];
	}
	getName() {
		let { stack: t$13 } = this, { length: r$12 } = t$13;
		return r$12 > 1 ? y$6(!1, t$13, -2) : null;
	}
	getValue() {
		return y$6(!1, this.stack, -1);
	}
	getNode(t$13 = 0) {
		let r$12 = fe(this, Z, kt).call(this, t$13);
		return r$12 === -1 ? null : this.stack[r$12];
	}
	getParentNode(t$13 = 0) {
		return this.getNode(t$13 + 1);
	}
	call(t$13, ...r$12) {
		let { stack: n$8 } = this, { length: u$14 } = n$8, o$9 = y$6(!1, n$8, -1);
		for (let i$18 of r$12) o$9 = o$9[i$18], n$8.push(i$18, o$9);
		try {
			return t$13(this);
		} finally {
			n$8.length = u$14;
		}
	}
	callParent(t$13, r$12 = 0) {
		let n$8 = fe(this, Z, kt).call(this, r$12 + 1), u$14 = this.stack.splice(n$8 + 1);
		try {
			return t$13(this);
		} finally {
			this.stack.push(...u$14);
		}
	}
	each(t$13, ...r$12) {
		let { stack: n$8 } = this, { length: u$14 } = n$8, o$9 = y$6(!1, n$8, -1);
		for (let i$18 of r$12) o$9 = o$9[i$18], n$8.push(i$18, o$9);
		try {
			for (let i$18 = 0; i$18 < o$9.length; ++i$18) n$8.push(i$18, o$9[i$18]), t$13(this, i$18, o$9), n$8.length -= 2;
		} finally {
			n$8.length = u$14;
		}
	}
	map(t$13, ...r$12) {
		let n$8 = [];
		return this.each((u$14, o$9, i$18) => {
			n$8[o$9] = t$13(u$14, o$9, i$18);
		}, ...r$12), n$8;
	}
	match(...t$13) {
		let r$12 = this.stack.length - 1, n$8 = null, u$14 = this.stack[r$12--];
		for (let o$9 of t$13) {
			if (u$14 === void 0) return !1;
			let i$18 = null;
			if (typeof n$8 == "number" && (i$18 = n$8, n$8 = this.stack[r$12--], u$14 = this.stack[r$12--]), o$9 && !o$9(u$14, n$8, i$18)) return !1;
			n$8 = this.stack[r$12--], u$14 = this.stack[r$12--];
		}
		return !0;
	}
	findAncestor(t$13) {
		for (let r$12 of fe(this, Z, ze).call(this)) if (t$13(r$12)) return r$12;
	}
	hasAncestor(t$13) {
		for (let r$12 of fe(this, Z, ze).call(this)) if (t$13(r$12)) return !0;
		return !1;
	}
};
Z = /* @__PURE__ */ new WeakSet(), kt = function(t$13) {
	let { stack: r$12 } = this;
	for (let n$8 = r$12.length - 1; n$8 >= 0; n$8 -= 2) if (!Array.isArray(r$12[n$8]) && --t$13 < 0) return n$8;
	return -1;
}, ze = function* () {
	let { stack: t$13 } = this;
	for (let r$12 = t$13.length - 3; r$12 >= 0; r$12 -= 2) {
		let n$8 = t$13[r$12];
		Array.isArray(n$8) || (yield n$8);
	}
};
var Or = bt;
var Pr = new Proxy(() => {}, { get: () => Pr }), Oe = Pr;
function Yu(e$4) {
	return e$4 !== null && typeof e$4 == "object";
}
var vr = Yu;
function* Ce(e$4, t$13) {
	let { getVisitorKeys: r$12, filter: n$8 = () => !0 } = t$13, u$14 = (o$9) => vr(o$9) && n$8(o$9);
	for (let o$9 of r$12(e$4)) {
		let i$18 = e$4[o$9];
		if (Array.isArray(i$18)) for (let s$8 of i$18) u$14(s$8) && (yield s$8);
		else u$14(i$18) && (yield i$18);
	}
}
function* Lr(e$4, t$13) {
	let r$12 = [e$4];
	for (let n$8 = 0; n$8 < r$12.length; n$8++) {
		let u$14 = r$12[n$8];
		for (let o$9 of Ce(u$14, t$13)) yield o$9, r$12.push(o$9);
	}
}
function Ir(e$4, t$13) {
	return Ce(e$4, t$13).next().done;
}
function he(e$4) {
	return (t$13, r$12, n$8) => {
		let u$14 = !!(n$8 != null && n$8.backwards);
		if (r$12 === !1) return !1;
		let { length: o$9 } = t$13, i$18 = r$12;
		for (; i$18 >= 0 && i$18 < o$9;) {
			let s$8 = t$13.charAt(i$18);
			if (e$4 instanceof RegExp) {
				if (!e$4.test(s$8)) return i$18;
			} else if (!e$4.includes(s$8)) return i$18;
			u$14 ? i$18-- : i$18++;
		}
		return i$18 === -1 || i$18 === o$9 ? i$18 : !1;
	};
}
var Rr = he(/\s/u), T$5 = he(" 	"), He = he(",; 	"), Je = he(/[^\n\r]/u);
function ju(e$4, t$13, r$12) {
	let n$8 = !!(r$12 != null && r$12.backwards);
	if (t$13 === !1) return !1;
	let u$14 = e$4.charAt(t$13);
	if (n$8) {
		if (e$4.charAt(t$13 - 1) === "\r" && u$14 === `
`) return t$13 - 2;
		if (u$14 === `
` || u$14 === "\r" || u$14 === "\u2028" || u$14 === "\u2029") return t$13 - 1;
	} else {
		if (u$14 === "\r" && e$4.charAt(t$13 + 1) === `
`) return t$13 + 2;
		if (u$14 === `
` || u$14 === "\r" || u$14 === "\u2028" || u$14 === "\u2029") return t$13 + 1;
	}
	return t$13;
}
var U = ju;
function Uu(e$4, t$13, r$12 = {}) {
	let n$8 = T$5(e$4, r$12.backwards ? t$13 - 1 : t$13, r$12), u$14 = U(e$4, n$8, r$12);
	return n$8 !== u$14;
}
var G = Uu;
function Vu(e$4) {
	return Array.isArray(e$4) && e$4.length > 0;
}
var qe = Vu;
var Yr = new Set([
	"tokens",
	"comments",
	"parent",
	"enclosingNode",
	"precedingNode",
	"followingNode"
]), $u = (e$4) => Object.keys(e$4).filter((t$13) => !Yr.has(t$13));
function Wu(e$4) {
	return e$4 ? (t$13) => e$4(t$13, Yr) : $u;
}
var J = Wu;
function Mu(e$4) {
	let t$13 = e$4.type || e$4.kind || "(unknown type)", r$12 = String(e$4.name || e$4.id && (typeof e$4.id == "object" ? e$4.id.name : e$4.id) || e$4.key && (typeof e$4.key == "object" ? e$4.key.name : e$4.key) || e$4.value && (typeof e$4.value == "object" ? "" : String(e$4.value)) || e$4.operator || "");
	return r$12.length > 20 && (r$12 = r$12.slice(0, 19) + "…"), t$13 + (r$12 ? " " + r$12 : "");
}
function St(e$4, t$13) {
	(e$4.comments ?? (e$4.comments = [])).push(t$13), t$13.printed = !1, t$13.nodeDescription = Mu(e$4);
}
function se(e$4, t$13) {
	t$13.leading = !0, t$13.trailing = !1, St(e$4, t$13);
}
function ee(e$4, t$13, r$12) {
	t$13.leading = !1, t$13.trailing = !1, r$12 && (t$13.marker = r$12), St(e$4, t$13);
}
function ae(e$4, t$13) {
	t$13.leading = !1, t$13.trailing = !0, St(e$4, t$13);
}
var Tt = /* @__PURE__ */ new WeakMap();
function Xe(e$4, t$13) {
	if (Tt.has(e$4)) return Tt.get(e$4);
	let { printer: { getCommentChildNodes: r$12, canAttachComment: n$8, getVisitorKeys: u$14 }, locStart: o$9, locEnd: i$18 } = t$13;
	if (!n$8) return [];
	let s$8 = ((r$12 == null ? void 0 : r$12(e$4, t$13)) ?? [...Ce(e$4, { getVisitorKeys: J(u$14) })]).flatMap((a$13) => n$8(a$13) ? [a$13] : Xe(a$13, t$13));
	return s$8.sort((a$13, c$3) => o$9(a$13) - o$9(c$3) || i$18(a$13) - i$18(c$3)), Tt.set(e$4, s$8), s$8;
}
function Ur(e$4, t$13, r$12, n$8) {
	let { locStart: u$14, locEnd: o$9 } = r$12, i$18 = u$14(t$13), s$8 = o$9(t$13), a$13 = Xe(e$4, r$12), c$3, D$4, p$2 = 0, l$10 = a$13.length;
	for (; p$2 < l$10;) {
		let F$4 = p$2 + l$10 >> 1, f$3 = a$13[F$4], d$14 = u$14(f$3), m$11 = o$9(f$3);
		if (d$14 <= i$18 && s$8 <= m$11) return Ur(f$3, t$13, r$12, f$3);
		if (m$11 <= i$18) {
			c$3 = f$3, p$2 = F$4 + 1;
			continue;
		}
		if (s$8 <= d$14) {
			D$4 = f$3, l$10 = F$4;
			continue;
		}
		throw new Error("Comment location overlaps with node location");
	}
	if ((n$8 == null ? void 0 : n$8.type) === "TemplateLiteral") {
		let { quasis: F$4 } = n$8, f$3 = Ot(F$4, t$13, r$12);
		c$3 && Ot(F$4, c$3, r$12) !== f$3 && (c$3 = null), D$4 && Ot(F$4, D$4, r$12) !== f$3 && (D$4 = null);
	}
	return {
		enclosingNode: n$8,
		precedingNode: c$3,
		followingNode: D$4
	};
}
var Nt = () => !1;
function Vr(e$4, t$13) {
	let { comments: r$12 } = e$4;
	if (delete e$4.comments, !qe(r$12) || !t$13.printer.canAttachComment) return;
	let n$8 = [], { printer: { experimentalFeatures: { avoidAstMutation: u$14 = !1 } = {}, handleComments: o$9 = {} }, originalText: i$18 } = t$13, { ownLine: s$8 = Nt, endOfLine: a$13 = Nt, remaining: c$3 = Nt } = o$9, D$4 = r$12.map((p$2, l$10) => ({
		...Ur(e$4, p$2, t$13),
		comment: p$2,
		text: i$18,
		options: t$13,
		ast: e$4,
		isLastComment: r$12.length - 1 === l$10
	}));
	for (let [p$2, l$10] of D$4.entries()) {
		let { comment: F$4, precedingNode: f$3, enclosingNode: d$14, followingNode: m$11, text: C$3, options: E$3, ast: h$3, isLastComment: x$3 } = l$10, A$3;
		if (u$14 ? A$3 = [l$10] : (F$4.enclosingNode = d$14, F$4.precedingNode = f$3, F$4.followingNode = m$11, A$3 = [
			F$4,
			C$3,
			E$3,
			h$3,
			x$3
		]), Gu(C$3, E$3, D$4, p$2)) F$4.placement = "ownLine", s$8(...A$3) || (m$11 ? se(m$11, F$4) : f$3 ? ae(f$3, F$4) : d$14 ? ee(d$14, F$4) : ee(h$3, F$4));
		else if (Ku(C$3, E$3, D$4, p$2)) F$4.placement = "endOfLine", a$13(...A$3) || (f$3 ? ae(f$3, F$4) : m$11 ? se(m$11, F$4) : d$14 ? ee(d$14, F$4) : ee(h$3, F$4));
		else if (F$4.placement = "remaining", !c$3(...A$3)) if (f$3 && m$11) {
			let $$4 = n$8.length;
			$$4 > 0 && n$8[$$4 - 1].followingNode !== m$11 && jr(n$8, E$3), n$8.push(l$10);
		} else f$3 ? ae(f$3, F$4) : m$11 ? se(m$11, F$4) : d$14 ? ee(d$14, F$4) : ee(h$3, F$4);
	}
	if (jr(n$8, t$13), !u$14) for (let p$2 of r$12) delete p$2.precedingNode, delete p$2.enclosingNode, delete p$2.followingNode;
}
var $r = (e$4) => !/[\S\n\u2028\u2029]/u.test(e$4);
function Gu(e$4, t$13, r$12, n$8) {
	let { comment: u$14, precedingNode: o$9 } = r$12[n$8], { locStart: i$18, locEnd: s$8 } = t$13, a$13 = i$18(u$14);
	if (o$9) for (let c$3 = n$8 - 1; c$3 >= 0; c$3--) {
		let { comment: D$4, precedingNode: p$2 } = r$12[c$3];
		if (p$2 !== o$9 || !$r(e$4.slice(s$8(D$4), a$13))) break;
		a$13 = i$18(D$4);
	}
	return G(e$4, a$13, { backwards: !0 });
}
function Ku(e$4, t$13, r$12, n$8) {
	let { comment: u$14, followingNode: o$9 } = r$12[n$8], { locStart: i$18, locEnd: s$8 } = t$13, a$13 = s$8(u$14);
	if (o$9) for (let c$3 = n$8 + 1; c$3 < r$12.length; c$3++) {
		let { comment: D$4, followingNode: p$2 } = r$12[c$3];
		if (p$2 !== o$9 || !$r(e$4.slice(a$13, i$18(D$4)))) break;
		a$13 = s$8(D$4);
	}
	return G(e$4, a$13);
}
function jr(e$4, t$13) {
	var s$8, a$13;
	let r$12 = e$4.length;
	if (r$12 === 0) return;
	let { precedingNode: n$8, followingNode: u$14 } = e$4[0], o$9 = t$13.locStart(u$14), i$18;
	for (i$18 = r$12; i$18 > 0; --i$18) {
		let { comment: c$3, precedingNode: D$4, followingNode: p$2 } = e$4[i$18 - 1];
		Oe.strictEqual(D$4, n$8), Oe.strictEqual(p$2, u$14);
		let l$10 = t$13.originalText.slice(t$13.locEnd(c$3), o$9);
		if (((a$13 = (s$8 = t$13.printer).isGap) == null ? void 0 : a$13.call(s$8, l$10, t$13)) ?? /^[\s(]*$/u.test(l$10)) o$9 = t$13.locStart(c$3);
		else break;
	}
	for (let [c$3, { comment: D$4 }] of e$4.entries()) c$3 < i$18 ? ae(n$8, D$4) : se(u$14, D$4);
	for (let c$3 of [n$8, u$14]) c$3.comments && c$3.comments.length > 1 && c$3.comments.sort((D$4, p$2) => t$13.locStart(D$4) - t$13.locStart(p$2));
	e$4.length = 0;
}
function Ot(e$4, t$13, r$12) {
	let n$8 = r$12.locStart(t$13) - 1;
	for (let u$14 = 1; u$14 < e$4.length; ++u$14) if (n$8 < r$12.locStart(e$4[u$14])) return u$14 - 1;
	return 0;
}
function zu(e$4, t$13) {
	let r$12 = t$13 - 1;
	r$12 = T$5(e$4, r$12, { backwards: !0 }), r$12 = U(e$4, r$12, { backwards: !0 }), r$12 = T$5(e$4, r$12, { backwards: !0 });
	let n$8 = U(e$4, r$12, { backwards: !0 });
	return r$12 !== n$8;
}
var Pe = zu;
function Wr(e$4, t$13) {
	let r$12 = e$4.node;
	return r$12.printed = !0, t$13.printer.printComment(e$4, t$13);
}
function Hu(e$4, t$13) {
	var D$4;
	let r$12 = e$4.node, n$8 = [Wr(e$4, t$13)], { printer: u$14, originalText: o$9, locStart: i$18, locEnd: s$8 } = t$13;
	if ((D$4 = u$14.isBlockComment) == null ? void 0 : D$4.call(u$14, r$12)) {
		let p$2 = G(o$9, s$8(r$12)) ? G(o$9, i$18(r$12), { backwards: !0 }) ? z : Me : " ";
		n$8.push(p$2);
	} else n$8.push(z);
	let c$3 = U(o$9, T$5(o$9, s$8(r$12)));
	return c$3 !== !1 && G(o$9, c$3) && n$8.push(z), n$8;
}
function Ju(e$4, t$13, r$12) {
	var c$3;
	let n$8 = e$4.node, u$14 = Wr(e$4, t$13), { printer: o$9, originalText: i$18, locStart: s$8 } = t$13, a$13 = (c$3 = o$9.isBlockComment) == null ? void 0 : c$3.call(o$9, n$8);
	if (r$12 != null && r$12.hasLineSuffix && !(r$12 != null && r$12.isBlock) || G(i$18, s$8(n$8), { backwards: !0 })) {
		let D$4 = Pe(i$18, s$8(n$8));
		return {
			doc: Se([
				z,
				D$4 ? z : "",
				u$14
			]),
			isBlock: a$13,
			hasLineSuffix: !0
		};
	}
	return !a$13 || r$12 != null && r$12.hasLineSuffix ? {
		doc: [Se([" ", u$14]), pe],
		isBlock: a$13,
		hasLineSuffix: !0
	} : {
		doc: [" ", u$14],
		isBlock: a$13,
		hasLineSuffix: !1
	};
}
function qu(e$4, t$13) {
	let r$12 = e$4.node;
	if (!r$12) return {};
	let n$8 = t$13[Symbol.for("printedComments")];
	if ((r$12.comments || []).filter((a$13) => !n$8.has(a$13)).length === 0) return {
		leading: "",
		trailing: ""
	};
	let o$9 = [], i$18 = [], s$8;
	return e$4.each(() => {
		let a$13 = e$4.node;
		if (n$8 != null && n$8.has(a$13)) return;
		let { leading: c$3, trailing: D$4 } = a$13;
		c$3 ? o$9.push(Hu(e$4, t$13)) : D$4 && (s$8 = Ju(e$4, t$13, s$8), i$18.push(s$8.doc));
	}, "comments"), {
		leading: o$9,
		trailing: i$18
	};
}
function Mr(e$4, t$13, r$12) {
	let { leading: n$8, trailing: u$14 } = qu(e$4, r$12);
	return !n$8 && !u$14 ? t$13 : Fe(t$13, (o$9) => [
		n$8,
		o$9,
		u$14
	]);
}
function Gr(e$4) {
	let { [Symbol.for("comments")]: t$13, [Symbol.for("printedComments")]: r$12 } = e$4;
	for (let n$8 of t$13) {
		if (!n$8.printed && !r$12.has(n$8)) throw new Error("Comment \"" + n$8.value.trim() + "\" was not printed. Please report this error!");
		delete n$8.printed;
	}
}
function Xu(e$4) {
	return () => {};
}
var Kr = Xu;
var ve = class extends Error {
	name = "ConfigError";
}, Le = class extends Error {
	name = "UndefinedParserError";
};
var zr = {
	checkIgnorePragma: {
		category: "Special",
		type: "boolean",
		default: !1,
		description: "Check whether the file's first docblock comment contains '@noprettier' or '@noformat' to determine if it should be formatted.",
		cliCategory: "Other"
	},
	cursorOffset: {
		category: "Special",
		type: "int",
		default: -1,
		range: {
			start: -1,
			end: Infinity,
			step: 1
		},
		description: "Print (to stderr) where a cursor at the given position would move to after formatting.",
		cliCategory: "Editor"
	},
	endOfLine: {
		category: "Global",
		type: "choice",
		default: "lf",
		description: "Which end of line characters to apply.",
		choices: [
			{
				value: "lf",
				description: "Line Feed only (\\n), common on Linux and macOS as well as inside git repos"
			},
			{
				value: "crlf",
				description: "Carriage Return + Line Feed characters (\\r\\n), common on Windows"
			},
			{
				value: "cr",
				description: "Carriage Return character only (\\r), used very rarely"
			},
			{
				value: "auto",
				description: `Maintain existing
(mixed values within one file are normalised by looking at what's used after the first line)`
			}
		]
	},
	filepath: {
		category: "Special",
		type: "path",
		description: "Specify the input filepath. This will be used to do parser inference.",
		cliName: "stdin-filepath",
		cliCategory: "Other",
		cliDescription: "Path to the file to pretend that stdin comes from."
	},
	insertPragma: {
		category: "Special",
		type: "boolean",
		default: !1,
		description: "Insert @format pragma into file's first docblock comment.",
		cliCategory: "Other"
	},
	parser: {
		category: "Global",
		type: "choice",
		default: void 0,
		description: "Which parser to use.",
		exception: (e$4) => typeof e$4 == "string" || typeof e$4 == "function",
		choices: [
			{
				value: "flow",
				description: "Flow"
			},
			{
				value: "babel",
				description: "JavaScript"
			},
			{
				value: "babel-flow",
				description: "Flow"
			},
			{
				value: "babel-ts",
				description: "TypeScript"
			},
			{
				value: "typescript",
				description: "TypeScript"
			},
			{
				value: "acorn",
				description: "JavaScript"
			},
			{
				value: "espree",
				description: "JavaScript"
			},
			{
				value: "meriyah",
				description: "JavaScript"
			},
			{
				value: "css",
				description: "CSS"
			},
			{
				value: "less",
				description: "Less"
			},
			{
				value: "scss",
				description: "SCSS"
			},
			{
				value: "json",
				description: "JSON"
			},
			{
				value: "json5",
				description: "JSON5"
			},
			{
				value: "jsonc",
				description: "JSON with Comments"
			},
			{
				value: "json-stringify",
				description: "JSON.stringify"
			},
			{
				value: "graphql",
				description: "GraphQL"
			},
			{
				value: "markdown",
				description: "Markdown"
			},
			{
				value: "mdx",
				description: "MDX"
			},
			{
				value: "vue",
				description: "Vue"
			},
			{
				value: "yaml",
				description: "YAML"
			},
			{
				value: "glimmer",
				description: "Ember / Handlebars"
			},
			{
				value: "html",
				description: "HTML"
			},
			{
				value: "angular",
				description: "Angular"
			},
			{
				value: "lwc",
				description: "Lightning Web Components"
			},
			{
				value: "mjml",
				description: "MJML"
			}
		]
	},
	plugins: {
		type: "path",
		array: !0,
		default: [{ value: [] }],
		category: "Global",
		description: "Add a plugin. Multiple plugins can be passed as separate `--plugin`s.",
		exception: (e$4) => typeof e$4 == "string" || typeof e$4 == "object",
		cliName: "plugin",
		cliCategory: "Config"
	},
	printWidth: {
		category: "Global",
		type: "int",
		default: 80,
		description: "The line length where Prettier will try wrap.",
		range: {
			start: 0,
			end: Infinity,
			step: 1
		}
	},
	rangeEnd: {
		category: "Special",
		type: "int",
		default: Infinity,
		range: {
			start: 0,
			end: Infinity,
			step: 1
		},
		description: `Format code ending at a given character offset (exclusive).
The range will extend forwards to the end of the selected statement.`,
		cliCategory: "Editor"
	},
	rangeStart: {
		category: "Special",
		type: "int",
		default: 0,
		range: {
			start: 0,
			end: Infinity,
			step: 1
		},
		description: `Format code starting at a given character offset.
The range will extend backwards to the start of the first line containing the selected statement.`,
		cliCategory: "Editor"
	},
	requirePragma: {
		category: "Special",
		type: "boolean",
		default: !1,
		description: "Require either '@prettier' or '@format' to be present in the file's first docblock comment in order for it to be formatted.",
		cliCategory: "Other"
	},
	tabWidth: {
		type: "int",
		category: "Global",
		default: 2,
		description: "Number of spaces per indentation level.",
		range: {
			start: 0,
			end: Infinity,
			step: 1
		}
	},
	useTabs: {
		category: "Global",
		type: "boolean",
		default: !1,
		description: "Indent with tabs instead of spaces."
	},
	embeddedLanguageFormatting: {
		category: "Global",
		type: "choice",
		default: "auto",
		description: "Control how Prettier formats quoted code embedded in the file.",
		choices: [{
			value: "auto",
			description: "Format embedded code if Prettier can automatically identify it."
		}, {
			value: "off",
			description: "Never automatically format embedded code."
		}]
	}
};
function Qe({ plugins: e$4 = [], showDeprecated: t$13 = !1 } = {}) {
	let r$12 = e$4.flatMap((u$14) => u$14.languages ?? []), n$8 = [];
	for (let u$14 of Zu(Object.assign({}, ...e$4.map(({ options: o$9 }) => o$9), zr))) !t$13 && u$14.deprecated || (Array.isArray(u$14.choices) && (t$13 || (u$14.choices = u$14.choices.filter((o$9) => !o$9.deprecated)), u$14.name === "parser" && (u$14.choices = [...u$14.choices, ...Qu(u$14.choices, r$12, e$4)])), u$14.pluginDefaults = Object.fromEntries(e$4.filter((o$9) => {
		var i$18;
		return ((i$18 = o$9.defaultOptions) == null ? void 0 : i$18[u$14.name]) !== void 0;
	}).map((o$9) => [o$9.name, o$9.defaultOptions[u$14.name]])), n$8.push(u$14));
	return {
		languages: r$12,
		options: n$8
	};
}
function* Qu(e$4, t$13, r$12) {
	let n$8 = new Set(e$4.map((u$14) => u$14.value));
	for (let u$14 of t$13) if (u$14.parsers) {
		for (let o$9 of u$14.parsers) if (!n$8.has(o$9)) {
			n$8.add(o$9);
			let i$18 = r$12.find((a$13) => a$13.parsers && Object.prototype.hasOwnProperty.call(a$13.parsers, o$9)), s$8 = u$14.name;
			i$18 != null && i$18.name && (s$8 += ` (plugin: ${i$18.name})`), yield {
				value: o$9,
				description: s$8
			};
		}
	}
}
function Zu(e$4) {
	let t$13 = [];
	for (let [r$12, n$8] of Object.entries(e$4)) {
		let u$14 = {
			name: r$12,
			...n$8
		};
		Array.isArray(u$14.default) && (u$14.default = y$6(!1, u$14.default, -1).value), t$13.push(u$14);
	}
	return t$13;
}
var eo = (e$4, t$13) => {
	if (!(e$4 && t$13 == null)) return t$13.toReversed || !Array.isArray(t$13) ? t$13.toReversed() : [...t$13].reverse();
}, Hr = eo;
var Jr, qr, Xr, Qr, Zr, to = ((Jr = globalThis.Deno) == null ? void 0 : Jr.build.os) === "windows" || ((Xr = (qr = globalThis.navigator) == null ? void 0 : qr.platform) == null ? void 0 : Xr.startsWith("Win")) || ((Zr = (Qr = globalThis.process) == null ? void 0 : Qr.platform) == null ? void 0 : Zr.startsWith("win")) || !1;
function en(e$4) {
	if (e$4 = e$4 instanceof URL ? e$4 : new URL(e$4), e$4.protocol !== "file:") throw new TypeError(`URL must be a file URL: received "${e$4.protocol}"`);
	return e$4;
}
function ro(e$4) {
	return e$4 = en(e$4), decodeURIComponent(e$4.pathname.replace(/%(?![0-9A-Fa-f]{2})/g, "%25"));
}
function no(e$4) {
	e$4 = en(e$4);
	let t$13 = decodeURIComponent(e$4.pathname.replace(/\//g, "\\").replace(/%(?![0-9A-Fa-f]{2})/g, "%25")).replace(/^\\*([A-Za-z]:)(\\|$)/, "$1\\");
	return e$4.hostname !== "" && (t$13 = `\\\\${e$4.hostname}${t$13}`), t$13;
}
function tn(e$4) {
	return to ? no(e$4) : ro(e$4);
}
var rn = tn;
var uo = (e$4) => String(e$4).split(/[/\\]/u).pop();
function nn(e$4, t$13) {
	if (!t$13) return;
	let r$12 = uo(t$13).toLowerCase();
	return e$4.find(({ filenames: n$8 }) => n$8 == null ? void 0 : n$8.some((u$14) => u$14.toLowerCase() === r$12)) ?? e$4.find(({ extensions: n$8 }) => n$8 == null ? void 0 : n$8.some((u$14) => r$12.endsWith(u$14)));
}
function oo(e$4, t$13) {
	if (t$13) return e$4.find(({ name: r$12 }) => r$12.toLowerCase() === t$13) ?? e$4.find(({ aliases: r$12 }) => r$12 == null ? void 0 : r$12.includes(t$13)) ?? e$4.find(({ extensions: r$12 }) => r$12 == null ? void 0 : r$12.includes(`.${t$13}`));
}
function un(e$4, t$13) {
	if (t$13) {
		if (String(t$13).startsWith("file:")) try {
			t$13 = rn(t$13);
		} catch {
			return;
		}
		if (typeof t$13 == "string") return e$4.find(({ isSupported: r$12 }) => r$12 == null ? void 0 : r$12({ filepath: t$13 }));
	}
}
function io(e$4, t$13) {
	let r$12 = Hr(!1, e$4.plugins).flatMap((u$14) => u$14.languages ?? []), n$8 = oo(r$12, t$13.language) ?? nn(r$12, t$13.physicalFile) ?? nn(r$12, t$13.file) ?? un(r$12, t$13.physicalFile) ?? un(r$12, t$13.file) ?? (t$13.physicalFile, void 0);
	return n$8 == null ? void 0 : n$8.parsers[0];
}
var on = io;
var re = {
	key: (e$4) => /^[$_a-zA-Z][$_a-zA-Z0-9]*$/.test(e$4) ? e$4 : JSON.stringify(e$4),
	value(e$4) {
		if (e$4 === null || typeof e$4 != "object") return JSON.stringify(e$4);
		if (Array.isArray(e$4)) return `[${e$4.map((r$12) => re.value(r$12)).join(", ")}]`;
		let t$13 = Object.keys(e$4);
		return t$13.length === 0 ? "{}" : `{ ${t$13.map((r$12) => `${re.key(r$12)}: ${re.value(e$4[r$12])}`).join(", ")} }`;
	},
	pair: ({ key: e$4, value: t$13 }) => re.value({ [e$4]: t$13 })
};
var sn = new Proxy(String, { get: () => sn }), V = sn;
var an = (e$4, t$13, { descriptor: r$12 }) => {
	let n$8 = [`${V.yellow(typeof e$4 == "string" ? r$12.key(e$4) : r$12.pair(e$4))} is deprecated`];
	return t$13 && n$8.push(`we now treat it as ${V.blue(typeof t$13 == "string" ? r$12.key(t$13) : r$12.pair(t$13))}`), n$8.join("; ") + ".";
};
var Ze = Symbol.for("vnopts.VALUE_NOT_EXIST"), ge = Symbol.for("vnopts.VALUE_UNCHANGED");
var Dn = " ".repeat(2), fn = (e$4, t$13, r$12) => {
	let { text: n$8, list: u$14 } = r$12.normalizeExpectedResult(r$12.schemas[e$4].expected(r$12)), o$9 = [];
	return n$8 && o$9.push(cn(e$4, t$13, n$8, r$12.descriptor)), u$14 && o$9.push([cn(e$4, t$13, u$14.title, r$12.descriptor)].concat(u$14.values.map((i$18) => ln(i$18, r$12.loggerPrintWidth))).join(`
`)), Fn(o$9, r$12.loggerPrintWidth);
};
function cn(e$4, t$13, r$12, n$8) {
	return [
		`Invalid ${V.red(n$8.key(e$4))} value.`,
		`Expected ${V.blue(r$12)},`,
		`but received ${t$13 === Ze ? V.gray("nothing") : V.red(n$8.value(t$13))}.`
	].join(" ");
}
function ln({ text: e$4, list: t$13 }, r$12) {
	let n$8 = [];
	return e$4 && n$8.push(`- ${V.blue(e$4)}`), t$13 && n$8.push([`- ${V.blue(t$13.title)}:`].concat(t$13.values.map((u$14) => ln(u$14, r$12 - Dn.length).replace(/^|\n/g, `$&${Dn}`))).join(`
`)), Fn(n$8, r$12);
}
function Fn(e$4, t$13) {
	if (e$4.length === 1) return e$4[0];
	let [r$12, n$8] = e$4, [u$14, o$9] = e$4.map((i$18) => i$18.split(`
`, 1)[0].length);
	return u$14 > t$13 && u$14 > o$9 ? n$8 : r$12;
}
var Pt = [], pn = [];
function vt(e$4, t$13) {
	if (e$4 === t$13) return 0;
	let r$12 = e$4;
	e$4.length > t$13.length && (e$4 = t$13, t$13 = r$12);
	let n$8 = e$4.length, u$14 = t$13.length;
	for (; n$8 > 0 && e$4.charCodeAt(~-n$8) === t$13.charCodeAt(~-u$14);) n$8--, u$14--;
	let o$9 = 0;
	for (; o$9 < n$8 && e$4.charCodeAt(o$9) === t$13.charCodeAt(o$9);) o$9++;
	if (n$8 -= o$9, u$14 -= o$9, n$8 === 0) return u$14;
	let i$18, s$8, a$13, c$3, D$4 = 0, p$2 = 0;
	for (; D$4 < n$8;) pn[D$4] = e$4.charCodeAt(o$9 + D$4), Pt[D$4] = ++D$4;
	for (; p$2 < u$14;) for (i$18 = t$13.charCodeAt(o$9 + p$2), a$13 = p$2++, s$8 = p$2, D$4 = 0; D$4 < n$8; D$4++) c$3 = i$18 === pn[D$4] ? a$13 : a$13 + 1, a$13 = Pt[D$4], s$8 = Pt[D$4] = a$13 > s$8 ? c$3 > s$8 ? s$8 + 1 : c$3 : c$3 > a$13 ? a$13 + 1 : c$3;
	return s$8;
}
var et = (e$4, t$13, { descriptor: r$12, logger: n$8, schemas: u$14 }) => {
	let o$9 = [`Ignored unknown option ${V.yellow(r$12.pair({
		key: e$4,
		value: t$13
	}))}.`], i$18 = Object.keys(u$14).sort().find((s$8) => vt(e$4, s$8) < 3);
	i$18 && o$9.push(`Did you mean ${V.blue(r$12.key(i$18))}?`), n$8.warn(o$9.join(" "));
};
var so = [
	"default",
	"expected",
	"validate",
	"deprecated",
	"forward",
	"redirect",
	"overlap",
	"preprocess",
	"postprocess"
];
function ao(e$4, t$13) {
	let r$12 = new e$4(t$13), n$8 = Object.create(r$12);
	for (let u$14 of so) u$14 in t$13 && (n$8[u$14] = Do(t$13[u$14], r$12, b$3.prototype[u$14].length));
	return n$8;
}
var b$3 = class {
	static create(t$13) {
		return ao(this, t$13);
	}
	constructor(t$13) {
		this.name = t$13.name;
	}
	default(t$13) {}
	expected(t$13) {
		return "nothing";
	}
	validate(t$13, r$12) {
		return !1;
	}
	deprecated(t$13, r$12) {
		return !1;
	}
	forward(t$13, r$12) {}
	redirect(t$13, r$12) {}
	overlap(t$13, r$12, n$8) {
		return t$13;
	}
	preprocess(t$13, r$12) {
		return t$13;
	}
	postprocess(t$13, r$12) {
		return ge;
	}
};
function Do(e$4, t$13, r$12) {
	return typeof e$4 == "function" ? (...n$8) => e$4(...n$8.slice(0, r$12 - 1), t$13, ...n$8.slice(r$12 - 1)) : () => e$4;
}
var tt = class extends b$3 {
	constructor(t$13) {
		super(t$13), this._sourceName = t$13.sourceName;
	}
	expected(t$13) {
		return t$13.schemas[this._sourceName].expected(t$13);
	}
	validate(t$13, r$12) {
		return r$12.schemas[this._sourceName].validate(t$13, r$12);
	}
	redirect(t$13, r$12) {
		return this._sourceName;
	}
};
var rt = class extends b$3 {
	expected() {
		return "anything";
	}
	validate() {
		return !0;
	}
};
var nt = class extends b$3 {
	constructor({ valueSchema: t$13, name: r$12 = t$13.name,...n$8 }) {
		super({
			...n$8,
			name: r$12
		}), this._valueSchema = t$13;
	}
	expected(t$13) {
		let { text: r$12, list: n$8 } = t$13.normalizeExpectedResult(this._valueSchema.expected(t$13));
		return {
			text: r$12 && `an array of ${r$12}`,
			list: n$8 && {
				title: "an array of the following values",
				values: [{ list: n$8 }]
			}
		};
	}
	validate(t$13, r$12) {
		if (!Array.isArray(t$13)) return !1;
		let n$8 = [];
		for (let u$14 of t$13) {
			let o$9 = r$12.normalizeValidateResult(this._valueSchema.validate(u$14, r$12), u$14);
			o$9 !== !0 && n$8.push(o$9.value);
		}
		return n$8.length === 0 ? !0 : { value: n$8 };
	}
	deprecated(t$13, r$12) {
		let n$8 = [];
		for (let u$14 of t$13) {
			let o$9 = r$12.normalizeDeprecatedResult(this._valueSchema.deprecated(u$14, r$12), u$14);
			o$9 !== !1 && n$8.push(...o$9.map(({ value: i$18 }) => ({ value: [i$18] })));
		}
		return n$8;
	}
	forward(t$13, r$12) {
		let n$8 = [];
		for (let u$14 of t$13) {
			let o$9 = r$12.normalizeForwardResult(this._valueSchema.forward(u$14, r$12), u$14);
			n$8.push(...o$9.map(dn));
		}
		return n$8;
	}
	redirect(t$13, r$12) {
		let n$8 = [], u$14 = [];
		for (let o$9 of t$13) {
			let i$18 = r$12.normalizeRedirectResult(this._valueSchema.redirect(o$9, r$12), o$9);
			"remain" in i$18 && n$8.push(i$18.remain), u$14.push(...i$18.redirect.map(dn));
		}
		return n$8.length === 0 ? { redirect: u$14 } : {
			redirect: u$14,
			remain: n$8
		};
	}
	overlap(t$13, r$12) {
		return t$13.concat(r$12);
	}
};
function dn({ from: e$4, to: t$13 }) {
	return {
		from: [e$4],
		to: t$13
	};
}
var ut = class extends b$3 {
	expected() {
		return "true or false";
	}
	validate(t$13) {
		return typeof t$13 == "boolean";
	}
};
function En(e$4, t$13) {
	let r$12 = Object.create(null);
	for (let n$8 of e$4) {
		let u$14 = n$8[t$13];
		if (r$12[u$14]) throw new Error(`Duplicate ${t$13} ${JSON.stringify(u$14)}`);
		r$12[u$14] = n$8;
	}
	return r$12;
}
function Cn(e$4, t$13) {
	let r$12 = /* @__PURE__ */ new Map();
	for (let n$8 of e$4) {
		let u$14 = n$8[t$13];
		if (r$12.has(u$14)) throw new Error(`Duplicate ${t$13} ${JSON.stringify(u$14)}`);
		r$12.set(u$14, n$8);
	}
	return r$12;
}
function hn() {
	let e$4 = Object.create(null);
	return (t$13) => {
		let r$12 = JSON.stringify(t$13);
		return e$4[r$12] ? !0 : (e$4[r$12] = !0, !1);
	};
}
function gn(e$4, t$13) {
	let r$12 = [], n$8 = [];
	for (let u$14 of e$4) t$13(u$14) ? r$12.push(u$14) : n$8.push(u$14);
	return [r$12, n$8];
}
function yn(e$4) {
	return e$4 === Math.floor(e$4);
}
function An(e$4, t$13) {
	if (e$4 === t$13) return 0;
	let r$12 = typeof e$4, n$8 = typeof t$13, u$14 = [
		"undefined",
		"object",
		"boolean",
		"number",
		"string"
	];
	return r$12 !== n$8 ? u$14.indexOf(r$12) - u$14.indexOf(n$8) : r$12 !== "string" ? Number(e$4) - Number(t$13) : e$4.localeCompare(t$13);
}
function Bn(e$4) {
	return (...t$13) => {
		let r$12 = e$4(...t$13);
		return typeof r$12 == "string" ? new Error(r$12) : r$12;
	};
}
function Lt(e$4) {
	return e$4 === void 0 ? {} : e$4;
}
function It(e$4) {
	if (typeof e$4 == "string") return { text: e$4 };
	let { text: t$13, list: r$12 } = e$4;
	return co((t$13 || r$12) !== void 0, "Unexpected `expected` result, there should be at least one field."), r$12 ? {
		text: t$13,
		list: {
			title: r$12.title,
			values: r$12.values.map(It)
		}
	} : { text: t$13 };
}
function Rt(e$4, t$13) {
	return e$4 === !0 ? !0 : e$4 === !1 ? { value: t$13 } : e$4;
}
function Yt(e$4, t$13, r$12 = !1) {
	return e$4 === !1 ? !1 : e$4 === !0 ? r$12 ? !0 : [{ value: t$13 }] : "value" in e$4 ? [e$4] : e$4.length === 0 ? !1 : e$4;
}
function mn(e$4, t$13) {
	return typeof e$4 == "string" || "key" in e$4 ? {
		from: t$13,
		to: e$4
	} : "from" in e$4 ? {
		from: e$4.from,
		to: e$4.to
	} : {
		from: t$13,
		to: e$4.to
	};
}
function ot(e$4, t$13) {
	return e$4 === void 0 ? [] : Array.isArray(e$4) ? e$4.map((r$12) => mn(r$12, t$13)) : [mn(e$4, t$13)];
}
function jt(e$4, t$13) {
	let r$12 = ot(typeof e$4 == "object" && "redirect" in e$4 ? e$4.redirect : e$4, t$13);
	return r$12.length === 0 ? {
		remain: t$13,
		redirect: r$12
	} : typeof e$4 == "object" && "remain" in e$4 ? {
		remain: e$4.remain,
		redirect: r$12
	} : { redirect: r$12 };
}
function co(e$4, t$13) {
	if (!e$4) throw new Error(t$13);
}
var it = class extends b$3 {
	constructor(t$13) {
		super(t$13), this._choices = Cn(t$13.choices.map((r$12) => r$12 && typeof r$12 == "object" ? r$12 : { value: r$12 }), "value");
	}
	expected({ descriptor: t$13 }) {
		let r$12 = Array.from(this._choices.keys()).map((i$18) => this._choices.get(i$18)).filter(({ hidden: i$18 }) => !i$18).map((i$18) => i$18.value).sort(An).map(t$13.value), n$8 = r$12.slice(0, -2), u$14 = r$12.slice(-2);
		return {
			text: n$8.concat(u$14.join(" or ")).join(", "),
			list: {
				title: "one of the following values",
				values: r$12
			}
		};
	}
	validate(t$13) {
		return this._choices.has(t$13);
	}
	deprecated(t$13) {
		let r$12 = this._choices.get(t$13);
		return r$12 && r$12.deprecated ? { value: t$13 } : !1;
	}
	forward(t$13) {
		let r$12 = this._choices.get(t$13);
		return r$12 ? r$12.forward : void 0;
	}
	redirect(t$13) {
		let r$12 = this._choices.get(t$13);
		return r$12 ? r$12.redirect : void 0;
	}
};
var st = class extends b$3 {
	expected() {
		return "a number";
	}
	validate(t$13, r$12) {
		return typeof t$13 == "number";
	}
};
var at = class extends st {
	expected() {
		return "an integer";
	}
	validate(t$13, r$12) {
		return r$12.normalizeValidateResult(super.validate(t$13, r$12), t$13) === !0 && yn(t$13);
	}
};
var Ie = class extends b$3 {
	expected() {
		return "a string";
	}
	validate(t$13) {
		return typeof t$13 == "string";
	}
};
var _n = re, xn = et, wn = fn, bn = an;
var Dt = class {
	constructor(t$13, r$12) {
		let { logger: n$8 = console, loggerPrintWidth: u$14 = 80, descriptor: o$9 = _n, unknown: i$18 = xn, invalid: s$8 = wn, deprecated: a$13 = bn, missing: c$3 = () => !1, required: D$4 = () => !1, preprocess: p$2 = (F$4) => F$4, postprocess: l$10 = () => ge } = r$12 || {};
		this._utils = {
			descriptor: o$9,
			logger: n$8 || { warn: () => {} },
			loggerPrintWidth: u$14,
			schemas: En(t$13, "name"),
			normalizeDefaultResult: Lt,
			normalizeExpectedResult: It,
			normalizeDeprecatedResult: Yt,
			normalizeForwardResult: ot,
			normalizeRedirectResult: jt,
			normalizeValidateResult: Rt
		}, this._unknownHandler = i$18, this._invalidHandler = Bn(s$8), this._deprecatedHandler = a$13, this._identifyMissing = (F$4, f$3) => !(F$4 in f$3) || c$3(F$4, f$3), this._identifyRequired = D$4, this._preprocess = p$2, this._postprocess = l$10, this.cleanHistory();
	}
	cleanHistory() {
		this._hasDeprecationWarned = hn();
	}
	normalize(t$13) {
		let r$12 = {}, u$14 = [this._preprocess(t$13, this._utils)], o$9 = () => {
			for (; u$14.length !== 0;) {
				let i$18 = u$14.shift(), s$8 = this._applyNormalization(i$18, r$12);
				u$14.push(...s$8);
			}
		};
		o$9();
		for (let i$18 of Object.keys(this._utils.schemas)) {
			let s$8 = this._utils.schemas[i$18];
			if (!(i$18 in r$12)) {
				let a$13 = Lt(s$8.default(this._utils));
				"value" in a$13 && u$14.push({ [i$18]: a$13.value });
			}
		}
		o$9();
		for (let i$18 of Object.keys(this._utils.schemas)) {
			if (!(i$18 in r$12)) continue;
			let s$8 = this._utils.schemas[i$18], a$13 = r$12[i$18], c$3 = s$8.postprocess(a$13, this._utils);
			c$3 !== ge && (this._applyValidation(c$3, i$18, s$8), r$12[i$18] = c$3);
		}
		return this._applyPostprocess(r$12), this._applyRequiredCheck(r$12), r$12;
	}
	_applyNormalization(t$13, r$12) {
		let n$8 = [], { knownKeys: u$14, unknownKeys: o$9 } = this._partitionOptionKeys(t$13);
		for (let i$18 of u$14) {
			let s$8 = this._utils.schemas[i$18], a$13 = s$8.preprocess(t$13[i$18], this._utils);
			this._applyValidation(a$13, i$18, s$8);
			let c$3 = ({ from: F$4, to: f$3 }) => {
				n$8.push(typeof f$3 == "string" ? { [f$3]: F$4 } : { [f$3.key]: f$3.value });
			}, D$4 = ({ value: F$4, redirectTo: f$3 }) => {
				let d$14 = Yt(s$8.deprecated(F$4, this._utils), a$13, !0);
				if (d$14 !== !1) if (d$14 === !0) this._hasDeprecationWarned(i$18) || this._utils.logger.warn(this._deprecatedHandler(i$18, f$3, this._utils));
				else for (let { value: m$11 } of d$14) {
					let C$3 = {
						key: i$18,
						value: m$11
					};
					if (!this._hasDeprecationWarned(C$3)) {
						let E$3 = typeof f$3 == "string" ? {
							key: f$3,
							value: m$11
						} : f$3;
						this._utils.logger.warn(this._deprecatedHandler(C$3, E$3, this._utils));
					}
				}
			};
			ot(s$8.forward(a$13, this._utils), a$13).forEach(c$3);
			let l$10 = jt(s$8.redirect(a$13, this._utils), a$13);
			if (l$10.redirect.forEach(c$3), "remain" in l$10) {
				let F$4 = l$10.remain;
				r$12[i$18] = i$18 in r$12 ? s$8.overlap(r$12[i$18], F$4, this._utils) : F$4, D$4({ value: F$4 });
			}
			for (let { from: F$4, to: f$3 } of l$10.redirect) D$4({
				value: F$4,
				redirectTo: f$3
			});
		}
		for (let i$18 of o$9) {
			let s$8 = t$13[i$18];
			this._applyUnknownHandler(i$18, s$8, r$12, (a$13, c$3) => {
				n$8.push({ [a$13]: c$3 });
			});
		}
		return n$8;
	}
	_applyRequiredCheck(t$13) {
		for (let r$12 of Object.keys(this._utils.schemas)) if (this._identifyMissing(r$12, t$13) && this._identifyRequired(r$12)) throw this._invalidHandler(r$12, Ze, this._utils);
	}
	_partitionOptionKeys(t$13) {
		let [r$12, n$8] = gn(Object.keys(t$13).filter((u$14) => !this._identifyMissing(u$14, t$13)), (u$14) => u$14 in this._utils.schemas);
		return {
			knownKeys: r$12,
			unknownKeys: n$8
		};
	}
	_applyValidation(t$13, r$12, n$8) {
		let u$14 = Rt(n$8.validate(t$13, this._utils), t$13);
		if (u$14 !== !0) throw this._invalidHandler(r$12, u$14.value, this._utils);
	}
	_applyUnknownHandler(t$13, r$12, n$8, u$14) {
		let o$9 = this._unknownHandler(t$13, r$12, this._utils);
		if (o$9) for (let i$18 of Object.keys(o$9)) {
			if (this._identifyMissing(i$18, o$9)) continue;
			let s$8 = o$9[i$18];
			i$18 in this._utils.schemas ? u$14(i$18, s$8) : n$8[i$18] = s$8;
		}
	}
	_applyPostprocess(t$13) {
		let r$12 = this._postprocess(t$13, this._utils);
		if (r$12 !== ge) {
			if (r$12.delete) for (let n$8 of r$12.delete) delete t$13[n$8];
			if (r$12.override) {
				let { knownKeys: n$8, unknownKeys: u$14 } = this._partitionOptionKeys(r$12.override);
				for (let o$9 of n$8) {
					let i$18 = r$12.override[o$9];
					this._applyValidation(i$18, o$9, this._utils.schemas[o$9]), t$13[o$9] = i$18;
				}
				for (let o$9 of u$14) {
					let i$18 = r$12.override[o$9];
					this._applyUnknownHandler(o$9, i$18, t$13, (s$8, a$13) => {
						let c$3 = this._utils.schemas[s$8];
						this._applyValidation(a$13, s$8, c$3), t$13[s$8] = a$13;
					});
				}
			}
		}
	}
};
var Ut;
function lo(e$4, t$13, { logger: r$12 = !1, isCLI: n$8 = !1, passThrough: u$14 = !1, FlagSchema: o$9, descriptor: i$18 } = {}) {
	if (n$8) {
		if (!o$9) throw new Error("'FlagSchema' option is required.");
		if (!i$18) throw new Error("'descriptor' option is required.");
	} else i$18 = re;
	let s$8 = u$14 ? Array.isArray(u$14) ? (l$10, F$4) => u$14.includes(l$10) ? { [l$10]: F$4 } : void 0 : (l$10, F$4) => ({ [l$10]: F$4 }) : (l$10, F$4, f$3) => {
		let { _: d$14,...m$11 } = f$3.schemas;
		return et(l$10, F$4, {
			...f$3,
			schemas: m$11
		});
	}, a$13 = Fo(t$13, {
		isCLI: n$8,
		FlagSchema: o$9
	}), c$3 = new Dt(a$13, {
		logger: r$12,
		unknown: s$8,
		descriptor: i$18
	}), D$4 = r$12 !== !1;
	D$4 && Ut && (c$3._hasDeprecationWarned = Ut);
	let p$2 = c$3.normalize(e$4);
	return D$4 && (Ut = c$3._hasDeprecationWarned), p$2;
}
function Fo(e$4, { isCLI: t$13, FlagSchema: r$12 }) {
	let n$8 = [];
	t$13 && n$8.push(rt.create({ name: "_" }));
	for (let u$14 of e$4) n$8.push(po(u$14, {
		isCLI: t$13,
		optionInfos: e$4,
		FlagSchema: r$12
	})), u$14.alias && t$13 && n$8.push(tt.create({
		name: u$14.alias,
		sourceName: u$14.name
	}));
	return n$8;
}
function po(e$4, { isCLI: t$13, optionInfos: r$12, FlagSchema: n$8 }) {
	let { name: u$14 } = e$4, o$9 = { name: u$14 }, i$18, s$8 = {};
	switch (e$4.type) {
		case "int":
			i$18 = at, t$13 && (o$9.preprocess = Number);
			break;
		case "string":
			i$18 = Ie;
			break;
		case "choice":
			i$18 = it, o$9.choices = e$4.choices.map((a$13) => a$13 != null && a$13.redirect ? {
				...a$13,
				redirect: { to: {
					key: e$4.name,
					value: a$13.redirect
				} }
			} : a$13);
			break;
		case "boolean":
			i$18 = ut;
			break;
		case "flag":
			i$18 = n$8, o$9.flags = r$12.flatMap((a$13) => [
				a$13.alias,
				a$13.description && a$13.name,
				a$13.oppositeDescription && `no-${a$13.name}`
			].filter(Boolean));
			break;
		case "path":
			i$18 = Ie;
			break;
		default: throw new Error(`Unexpected type ${e$4.type}`);
	}
	if (e$4.exception ? o$9.validate = (a$13, c$3, D$4) => e$4.exception(a$13) || c$3.validate(a$13, D$4) : o$9.validate = (a$13, c$3, D$4) => a$13 === void 0 || c$3.validate(a$13, D$4), e$4.redirect && (s$8.redirect = (a$13) => a$13 ? { to: typeof e$4.redirect == "string" ? e$4.redirect : {
		key: e$4.redirect.option,
		value: e$4.redirect.value
	} } : void 0), e$4.deprecated && (s$8.deprecated = !0), t$13 && !e$4.array) {
		let a$13 = o$9.preprocess || ((c$3) => c$3);
		o$9.preprocess = (c$3, D$4, p$2) => D$4.preprocess(a$13(Array.isArray(c$3) ? y$6(!1, c$3, -1) : c$3), p$2);
	}
	return e$4.array ? nt.create({
		...t$13 ? { preprocess: (a$13) => Array.isArray(a$13) ? a$13 : [a$13] } : {},
		...s$8,
		valueSchema: i$18.create(o$9)
	}) : i$18.create({
		...o$9,
		...s$8
	});
}
var kn = lo;
var mo = (e$4, t$13, r$12) => {
	if (!(e$4 && t$13 == null)) {
		if (t$13.findLast) return t$13.findLast(r$12);
		for (let n$8 = t$13.length - 1; n$8 >= 0; n$8--) {
			let u$14 = t$13[n$8];
			if (r$12(u$14, n$8, t$13)) return u$14;
		}
	}
}, Vt = mo;
function $t(e$4, t$13) {
	if (!t$13) throw new Error("parserName is required.");
	let r$12 = Vt(!1, e$4, (u$14) => u$14.parsers && Object.prototype.hasOwnProperty.call(u$14.parsers, t$13));
	if (r$12) return r$12;
	let n$8 = `Couldn't resolve parser "${t$13}".`;
	throw n$8 += " Plugins must be explicitly added to the standalone bundle.", new ve(n$8);
}
function Sn(e$4, t$13) {
	if (!t$13) throw new Error("astFormat is required.");
	let r$12 = Vt(!1, e$4, (u$14) => u$14.printers && Object.prototype.hasOwnProperty.call(u$14.printers, t$13));
	if (r$12) return r$12;
	let n$8 = `Couldn't find plugin for AST format "${t$13}".`;
	throw n$8 += " Plugins must be explicitly added to the standalone bundle.", new ve(n$8);
}
function Re({ plugins: e$4, parser: t$13 }) {
	let r$12 = $t(e$4, t$13);
	return Wt(r$12, t$13);
}
function Wt(e$4, t$13) {
	let r$12 = e$4.parsers[t$13];
	return typeof r$12 == "function" ? r$12() : r$12;
}
function Tn(e$4, t$13) {
	let r$12 = e$4.printers[t$13];
	return typeof r$12 == "function" ? r$12() : r$12;
}
var Nn = {
	__languageMappings: /* @__PURE__ */ new Map(),
	astFormat: "estree",
	printer: {},
	originalText: void 0,
	locStart: null,
	locEnd: null
};
async function Eo(e$4, t$13 = {}) {
	var p$2;
	let r$12 = { ...e$4 };
	if (!r$12.parser) if (r$12.filepath) {
		if (r$12.parser = on(r$12, { physicalFile: r$12.filepath }), !r$12.parser) throw new Le(`No parser could be inferred for file "${r$12.filepath}".`);
	} else throw new Le("No parser and no file path given, couldn't infer a parser.");
	let n$8 = Qe({
		plugins: e$4.plugins,
		showDeprecated: !0
	}).options, u$14 = {
		...Nn,
		...Object.fromEntries(n$8.filter((l$10) => l$10.default !== void 0).map((l$10) => [l$10.name, l$10.default]))
	}, o$9 = $t(r$12.plugins, r$12.parser), i$18 = await Wt(o$9, r$12.parser);
	r$12.astFormat = i$18.astFormat, r$12.locEnd = i$18.locEnd, r$12.locStart = i$18.locStart;
	let s$8 = (p$2 = o$9.printers) != null && p$2[i$18.astFormat] ? o$9 : Sn(r$12.plugins, i$18.astFormat);
	r$12.printer = await Tn(s$8, i$18.astFormat);
	let c$3 = s$8.defaultOptions ? Object.fromEntries(Object.entries(s$8.defaultOptions).filter(([, l$10]) => l$10 !== void 0)) : {}, D$4 = {
		...u$14,
		...c$3
	};
	for (let [l$10, F$4] of Object.entries(D$4)) (r$12[l$10] === null || r$12[l$10] === void 0) && (r$12[l$10] = F$4);
	return r$12.parser === "json" && (r$12.trailingComma = "none"), kn(r$12, n$8, {
		passThrough: Object.keys(Nn),
		...t$13
	});
}
var ne = Eo;
var vn = gu(Pn(), 1);
async function yo(e$4, t$13) {
	let r$12 = await Re(t$13), n$8 = r$12.preprocess ? r$12.preprocess(e$4, t$13) : e$4;
	t$13.originalText = n$8;
	let u$14;
	try {
		u$14 = await r$12.parse(n$8, t$13, t$13);
	} catch (o$9) {
		Ao(o$9, e$4);
	}
	return {
		text: n$8,
		ast: u$14
	};
}
function Ao(e$4, t$13) {
	let { loc: r$12 } = e$4;
	if (r$12) {
		let n$8 = (0, vn.codeFrameColumns)(t$13, r$12, { highlightCode: !0 });
		throw e$4.message += `
` + n$8, e$4.codeFrame = n$8, e$4;
	}
	throw e$4;
}
var De = yo;
async function Ln(e$4, t$13, r$12, n$8, u$14) {
	let { embeddedLanguageFormatting: o$9, printer: { embed: i$18, hasPrettierIgnore: s$8 = () => !1, getVisitorKeys: a$13 } } = r$12;
	if (!i$18 || o$9 !== "auto") return;
	if (i$18.length > 2) throw new Error("printer.embed has too many parameters. The API changed in Prettier v3. Please update your plugin. See https://prettier.io/docs/plugins#optional-embed");
	let c$3 = J(i$18.getVisitorKeys ?? a$13), D$4 = [];
	F$4();
	let p$2 = e$4.stack;
	for (let { print: f$3, node: d$14, pathStack: m$11 } of D$4) try {
		e$4.stack = m$11;
		let C$3 = await f$3(l$10, t$13, e$4, r$12);
		C$3 && u$14.set(d$14, C$3);
	} catch (C$3) {
		if (globalThis.PRETTIER_DEBUG) throw C$3;
	}
	e$4.stack = p$2;
	function l$10(f$3, d$14) {
		return Bo(f$3, d$14, r$12, n$8);
	}
	function F$4() {
		let { node: f$3 } = e$4;
		if (f$3 === null || typeof f$3 != "object" || s$8(e$4)) return;
		for (let m$11 of c$3(f$3)) Array.isArray(f$3[m$11]) ? e$4.each(F$4, m$11) : e$4.call(F$4, m$11);
		let d$14 = i$18(e$4, r$12);
		if (d$14) {
			if (typeof d$14 == "function") {
				D$4.push({
					print: d$14,
					node: f$3,
					pathStack: [...e$4.stack]
				});
				return;
			}
			u$14.set(f$3, d$14);
		}
	}
}
async function Bo(e$4, t$13, r$12, n$8) {
	let u$14 = await ne({
		...r$12,
		...t$13,
		parentParser: r$12.parser,
		originalText: e$4,
		cursorOffset: void 0,
		rangeStart: void 0,
		rangeEnd: void 0
	}, { passThrough: !0 }), { ast: o$9 } = await De(e$4, u$14), i$18 = await n$8(o$9, u$14);
	return $e(i$18);
}
function _o(e$4, t$13) {
	let { originalText: r$12, [Symbol.for("comments")]: n$8, locStart: u$14, locEnd: o$9, [Symbol.for("printedComments")]: i$18 } = t$13, { node: s$8 } = e$4, a$13 = u$14(s$8), c$3 = o$9(s$8);
	for (let D$4 of n$8) u$14(D$4) >= a$13 && o$9(D$4) <= c$3 && i$18.add(D$4);
	return r$12.slice(a$13, c$3);
}
var In = _o;
async function Ye(e$4, t$13) {
	({ast: e$4} = await Gt(e$4, t$13));
	let r$12 = /* @__PURE__ */ new Map(), n$8 = new Or(e$4), u$14 = Kr(t$13), o$9 = /* @__PURE__ */ new Map();
	await Ln(n$8, s$8, t$13, Ye, o$9);
	let i$18 = await Rn(n$8, t$13, s$8, void 0, o$9);
	if (Gr(t$13), t$13.cursorOffset >= 0) {
		if (t$13.nodeAfterCursor && !t$13.nodeBeforeCursor) return [X, i$18];
		if (t$13.nodeBeforeCursor && !t$13.nodeAfterCursor) return [i$18, X];
	}
	return i$18;
	function s$8(c$3, D$4) {
		return c$3 === void 0 || c$3 === n$8 ? a$13(D$4) : Array.isArray(c$3) ? n$8.call(() => a$13(D$4), ...c$3) : n$8.call(() => a$13(D$4), c$3);
	}
	function a$13(c$3) {
		u$14(n$8);
		let D$4 = n$8.node;
		if (D$4 == null) return "";
		let p$2 = D$4 && typeof D$4 == "object" && c$3 === void 0;
		if (p$2 && r$12.has(D$4)) return r$12.get(D$4);
		let l$10 = Rn(n$8, t$13, s$8, c$3, o$9);
		return p$2 && r$12.set(D$4, l$10), l$10;
	}
}
function Rn(e$4, t$13, r$12, n$8, u$14) {
	var a$13;
	let { node: o$9 } = e$4, { printer: i$18 } = t$13, s$8;
	switch ((a$13 = i$18.hasPrettierIgnore) != null && a$13.call(i$18, e$4) ? s$8 = In(e$4, t$13) : u$14.has(o$9) ? s$8 = u$14.get(o$9) : s$8 = i$18.print(e$4, t$13, r$12, n$8), o$9) {
		case t$13.cursorNode:
			s$8 = Fe(s$8, (c$3) => [
				X,
				c$3,
				X
			]);
			break;
		case t$13.nodeBeforeCursor:
			s$8 = Fe(s$8, (c$3) => [c$3, X]);
			break;
		case t$13.nodeAfterCursor:
			s$8 = Fe(s$8, (c$3) => [X, c$3]);
			break;
	}
	return i$18.printComment && (!i$18.willPrintOwnComments || !i$18.willPrintOwnComments(e$4, t$13)) && (s$8 = Mr(e$4, s$8, t$13)), s$8;
}
async function Gt(e$4, t$13) {
	let r$12 = e$4.comments ?? [];
	t$13[Symbol.for("comments")] = r$12, t$13[Symbol.for("printedComments")] = /* @__PURE__ */ new Set(), Vr(e$4, t$13);
	let { printer: { preprocess: n$8 } } = t$13;
	return e$4 = n$8 ? await n$8(e$4, t$13) : e$4, {
		ast: e$4,
		comments: r$12
	};
}
function xo(e$4, t$13) {
	let { cursorOffset: r$12, locStart: n$8, locEnd: u$14 } = t$13, o$9 = J(t$13.printer.getVisitorKeys), i$18 = (F$4) => n$8(F$4) <= r$12 && u$14(F$4) >= r$12, s$8 = e$4, a$13 = [e$4];
	for (let F$4 of Lr(e$4, {
		getVisitorKeys: o$9,
		filter: i$18
	})) a$13.push(F$4), s$8 = F$4;
	if (Ir(s$8, { getVisitorKeys: o$9 })) return { cursorNode: s$8 };
	let c$3, D$4, p$2 = -1, l$10 = Number.POSITIVE_INFINITY;
	for (; a$13.length > 0 && (c$3 === void 0 || D$4 === void 0);) {
		s$8 = a$13.pop();
		let F$4 = c$3 !== void 0, f$3 = D$4 !== void 0;
		for (let d$14 of Ce(s$8, { getVisitorKeys: o$9 })) {
			if (!F$4) {
				let m$11 = u$14(d$14);
				m$11 <= r$12 && m$11 > p$2 && (c$3 = d$14, p$2 = m$11);
			}
			if (!f$3) {
				let m$11 = n$8(d$14);
				m$11 >= r$12 && m$11 < l$10 && (D$4 = d$14, l$10 = m$11);
			}
		}
	}
	return {
		nodeBeforeCursor: c$3,
		nodeAfterCursor: D$4
	};
}
var Kt = xo;
function wo(e$4, t$13) {
	let { printer: { massageAstNode: r$12, getVisitorKeys: n$8 } } = t$13;
	if (!r$12) return e$4;
	let u$14 = J(n$8), o$9 = r$12.ignoredProperties ?? /* @__PURE__ */ new Set();
	return i$18(e$4);
	function i$18(s$8, a$13) {
		if (!(s$8 !== null && typeof s$8 == "object")) return s$8;
		if (Array.isArray(s$8)) return s$8.map((l$10) => i$18(l$10, a$13)).filter(Boolean);
		let c$3 = {}, D$4 = new Set(u$14(s$8));
		for (let l$10 in s$8) !Object.prototype.hasOwnProperty.call(s$8, l$10) || o$9.has(l$10) || (D$4.has(l$10) ? c$3[l$10] = i$18(s$8[l$10], s$8) : c$3[l$10] = s$8[l$10]);
		let p$2 = r$12(s$8, c$3, a$13);
		if (p$2 !== null) return p$2 ?? c$3;
	}
}
var Yn = wo;
var bo = (e$4, t$13, r$12) => {
	if (!(e$4 && t$13 == null)) {
		if (t$13.findLastIndex) return t$13.findLastIndex(r$12);
		for (let n$8 = t$13.length - 1; n$8 >= 0; n$8--) {
			let u$14 = t$13[n$8];
			if (r$12(u$14, n$8, t$13)) return n$8;
		}
		return -1;
	}
}, jn = bo;
var ko = ({ parser: e$4 }) => e$4 === "json" || e$4 === "json5" || e$4 === "jsonc" || e$4 === "json-stringify";
function So(e$4, t$13) {
	let r$12 = [e$4.node, ...e$4.parentNodes], n$8 = new Set([t$13.node, ...t$13.parentNodes]);
	return r$12.find((u$14) => $n.has(u$14.type) && n$8.has(u$14));
}
function Un(e$4) {
	let t$13 = jn(!1, e$4, (r$12) => r$12.type !== "Program" && r$12.type !== "File");
	return t$13 === -1 ? e$4 : e$4.slice(0, t$13 + 1);
}
function To(e$4, t$13, { locStart: r$12, locEnd: n$8 }) {
	let u$14 = e$4.node, o$9 = t$13.node;
	if (u$14 === o$9) return {
		startNode: u$14,
		endNode: o$9
	};
	let i$18 = r$12(e$4.node);
	for (let a$13 of Un(t$13.parentNodes)) if (r$12(a$13) >= i$18) o$9 = a$13;
	else break;
	let s$8 = n$8(t$13.node);
	for (let a$13 of Un(e$4.parentNodes)) {
		if (n$8(a$13) <= s$8) u$14 = a$13;
		else break;
		if (u$14 === o$9) break;
	}
	return {
		startNode: u$14,
		endNode: o$9
	};
}
function zt(e$4, t$13, r$12, n$8, u$14 = [], o$9) {
	let { locStart: i$18, locEnd: s$8 } = r$12, a$13 = i$18(e$4), c$3 = s$8(e$4);
	if (!(t$13 > c$3 || t$13 < a$13 || o$9 === "rangeEnd" && t$13 === a$13 || o$9 === "rangeStart" && t$13 === c$3)) {
		for (let D$4 of Xe(e$4, r$12)) {
			let p$2 = zt(D$4, t$13, r$12, n$8, [e$4, ...u$14], o$9);
			if (p$2) return p$2;
		}
		if (!n$8 || n$8(e$4, u$14[0])) return {
			node: e$4,
			parentNodes: u$14
		};
	}
}
function No(e$4, t$13) {
	return t$13 !== "DeclareExportDeclaration" && e$4 !== "TypeParameterDeclaration" && (e$4 === "Directive" || e$4 === "TypeAlias" || e$4 === "TSExportAssignment" || e$4.startsWith("Declare") || e$4.startsWith("TSDeclare") || e$4.endsWith("Statement") || e$4.endsWith("Declaration"));
}
var $n = new Set([
	"JsonRoot",
	"ObjectExpression",
	"ArrayExpression",
	"StringLiteral",
	"NumericLiteral",
	"BooleanLiteral",
	"NullLiteral",
	"UnaryExpression",
	"TemplateLiteral"
]), Oo = new Set([
	"OperationDefinition",
	"FragmentDefinition",
	"VariableDefinition",
	"TypeExtensionDefinition",
	"ObjectTypeDefinition",
	"FieldDefinition",
	"DirectiveDefinition",
	"EnumTypeDefinition",
	"EnumValueDefinition",
	"InputValueDefinition",
	"InputObjectTypeDefinition",
	"SchemaDefinition",
	"OperationTypeDefinition",
	"InterfaceTypeDefinition",
	"UnionTypeDefinition",
	"ScalarTypeDefinition"
]);
function Vn(e$4, t$13, r$12) {
	if (!t$13) return !1;
	switch (e$4.parser) {
		case "flow":
		case "hermes":
		case "babel":
		case "babel-flow":
		case "babel-ts":
		case "typescript":
		case "acorn":
		case "espree":
		case "meriyah":
		case "oxc":
		case "oxc-ts":
		case "__babel_estree": return No(t$13.type, r$12 == null ? void 0 : r$12.type);
		case "json":
		case "json5":
		case "jsonc":
		case "json-stringify": return $n.has(t$13.type);
		case "graphql": return Oo.has(t$13.kind);
		case "vue": return t$13.tag !== "root";
	}
	return !1;
}
function Wn(e$4, t$13, r$12) {
	let { rangeStart: n$8, rangeEnd: u$14, locStart: o$9, locEnd: i$18 } = t$13;
	Oe.ok(u$14 > n$8);
	let s$8 = e$4.slice(n$8, u$14).search(/\S/u), a$13 = s$8 === -1;
	if (!a$13) for (n$8 += s$8; u$14 > n$8 && !/\S/u.test(e$4[u$14 - 1]); --u$14);
	let c$3 = zt(r$12, n$8, t$13, (F$4, f$3) => Vn(t$13, F$4, f$3), [], "rangeStart"), D$4 = a$13 ? c$3 : zt(r$12, u$14, t$13, (F$4) => Vn(t$13, F$4), [], "rangeEnd");
	if (!c$3 || !D$4) return {
		rangeStart: 0,
		rangeEnd: 0
	};
	let p$2, l$10;
	if (ko(t$13)) {
		let F$4 = So(c$3, D$4);
		p$2 = F$4, l$10 = F$4;
	} else ({startNode: p$2, endNode: l$10} = To(c$3, D$4, t$13));
	return {
		rangeStart: Math.min(o$9(p$2), o$9(l$10)),
		rangeEnd: Math.max(i$18(p$2), i$18(l$10))
	};
}
var zn = "﻿", Mn = Symbol("cursor");
async function Hn(e$4, t$13, r$12 = 0) {
	if (!e$4 || e$4.trim().length === 0) return {
		formatted: "",
		cursorOffset: -1,
		comments: []
	};
	let { ast: n$8, text: u$14 } = await De(e$4, t$13);
	t$13.cursorOffset >= 0 && (t$13 = {
		...t$13,
		...Kt(n$8, t$13)
	});
	let o$9 = await Ye(n$8, t$13, r$12);
	r$12 > 0 && (o$9 = Ge([z, o$9], r$12, t$13.tabWidth));
	let i$18 = me(o$9, t$13);
	if (r$12 > 0) {
		let a$13 = i$18.formatted.trim();
		i$18.cursorNodeStart !== void 0 && (i$18.cursorNodeStart -= i$18.formatted.indexOf(a$13), i$18.cursorNodeStart < 0 && (i$18.cursorNodeStart = 0, i$18.cursorNodeText = i$18.cursorNodeText.trimStart()), i$18.cursorNodeStart + i$18.cursorNodeText.length > a$13.length && (i$18.cursorNodeText = i$18.cursorNodeText.trimEnd())), i$18.formatted = a$13 + xe(t$13.endOfLine);
	}
	let s$8 = t$13[Symbol.for("comments")];
	if (t$13.cursorOffset >= 0) {
		let a$13, c$3, D$4, p$2;
		if ((t$13.cursorNode || t$13.nodeBeforeCursor || t$13.nodeAfterCursor) && i$18.cursorNodeText) if (D$4 = i$18.cursorNodeStart, p$2 = i$18.cursorNodeText, t$13.cursorNode) a$13 = t$13.locStart(t$13.cursorNode), c$3 = u$14.slice(a$13, t$13.locEnd(t$13.cursorNode));
		else {
			if (!t$13.nodeBeforeCursor && !t$13.nodeAfterCursor) throw new Error("Cursor location must contain at least one of cursorNode, nodeBeforeCursor, nodeAfterCursor");
			a$13 = t$13.nodeBeforeCursor ? t$13.locEnd(t$13.nodeBeforeCursor) : 0;
			let C$3 = t$13.nodeAfterCursor ? t$13.locStart(t$13.nodeAfterCursor) : u$14.length;
			c$3 = u$14.slice(a$13, C$3);
		}
		else a$13 = 0, c$3 = u$14, D$4 = 0, p$2 = i$18.formatted;
		let l$10 = t$13.cursorOffset - a$13;
		if (c$3 === p$2) return {
			formatted: i$18.formatted,
			cursorOffset: D$4 + l$10,
			comments: s$8
		};
		let F$4 = c$3.split("");
		F$4.splice(l$10, 0, Mn);
		let f$3 = p$2.split(""), d$14 = Et(F$4, f$3), m$11 = D$4;
		for (let C$3 of d$14) if (C$3.removed) {
			if (C$3.value.includes(Mn)) break;
		} else m$11 += C$3.count;
		return {
			formatted: i$18.formatted,
			cursorOffset: m$11,
			comments: s$8
		};
	}
	return {
		formatted: i$18.formatted,
		cursorOffset: -1,
		comments: s$8
	};
}
async function Po(e$4, t$13) {
	let { ast: r$12, text: n$8 } = await De(e$4, t$13), { rangeStart: u$14, rangeEnd: o$9 } = Wn(n$8, t$13, r$12), i$18 = n$8.slice(u$14, o$9), s$8 = Math.min(u$14, n$8.lastIndexOf(`
`, u$14) + 1), a$13 = n$8.slice(s$8, u$14).match(/^\s*/u)[0], c$3 = Ee(a$13, t$13.tabWidth), D$4 = await Hn(i$18, {
		...t$13,
		rangeStart: 0,
		rangeEnd: Number.POSITIVE_INFINITY,
		cursorOffset: t$13.cursorOffset > u$14 && t$13.cursorOffset <= o$9 ? t$13.cursorOffset - u$14 : -1,
		endOfLine: "lf"
	}, c$3), p$2 = D$4.formatted.trimEnd(), { cursorOffset: l$10 } = t$13;
	l$10 > o$9 ? l$10 += p$2.length - i$18.length : D$4.cursorOffset >= 0 && (l$10 = D$4.cursorOffset + u$14);
	let F$4 = n$8.slice(0, u$14) + p$2 + n$8.slice(o$9);
	if (t$13.endOfLine !== "lf") {
		let f$3 = xe(t$13.endOfLine);
		l$10 >= 0 && f$3 === `\r
` && (l$10 += Ct(F$4.slice(0, l$10), `
`)), F$4 = te(!1, F$4, `
`, f$3);
	}
	return {
		formatted: F$4,
		cursorOffset: l$10,
		comments: D$4.comments
	};
}
function Ht(e$4, t$13, r$12) {
	return typeof t$13 != "number" || Number.isNaN(t$13) || t$13 < 0 || t$13 > e$4.length ? r$12 : t$13;
}
function Gn(e$4, t$13) {
	let { cursorOffset: r$12, rangeStart: n$8, rangeEnd: u$14 } = t$13;
	return r$12 = Ht(e$4, r$12, -1), n$8 = Ht(e$4, n$8, 0), u$14 = Ht(e$4, u$14, e$4.length), {
		...t$13,
		cursorOffset: r$12,
		rangeStart: n$8,
		rangeEnd: u$14
	};
}
function Jn(e$4, t$13) {
	let { cursorOffset: r$12, rangeStart: n$8, rangeEnd: u$14, endOfLine: o$9 } = Gn(e$4, t$13), i$18 = e$4.charAt(0) === zn;
	if (i$18 && (e$4 = e$4.slice(1), r$12--, n$8--, u$14--), o$9 === "auto" && (o$9 = nr(e$4)), e$4.includes("\r")) {
		let s$8 = (a$13) => Ct(e$4.slice(0, Math.max(a$13, 0)), `\r
`);
		r$12 -= s$8(r$12), n$8 -= s$8(n$8), u$14 -= s$8(u$14), e$4 = ur(e$4);
	}
	return {
		hasBOM: i$18,
		text: e$4,
		options: Gn(e$4, {
			...t$13,
			cursorOffset: r$12,
			rangeStart: n$8,
			rangeEnd: u$14,
			endOfLine: o$9
		})
	};
}
async function Kn(e$4, t$13) {
	let r$12 = await Re(t$13);
	return !r$12.hasPragma || r$12.hasPragma(e$4);
}
async function vo(e$4, t$13) {
	var n$8;
	let r$12 = await Re(t$13);
	return (n$8 = r$12.hasIgnorePragma) == null ? void 0 : n$8.call(r$12, e$4);
}
async function Jt(e$4, t$13) {
	let { hasBOM: r$12, text: n$8, options: u$14 } = Jn(e$4, await ne(t$13));
	if (u$14.rangeStart >= u$14.rangeEnd && n$8 !== "" || u$14.requirePragma && !await Kn(n$8, u$14) || u$14.checkIgnorePragma && await vo(n$8, u$14)) return {
		formatted: e$4,
		cursorOffset: t$13.cursorOffset,
		comments: []
	};
	let o$9;
	return u$14.rangeStart > 0 || u$14.rangeEnd < n$8.length ? o$9 = await Po(n$8, u$14) : (!u$14.requirePragma && u$14.insertPragma && u$14.printer.insertPragma && !await Kn(n$8, u$14) && (n$8 = u$14.printer.insertPragma(n$8)), o$9 = await Hn(n$8, u$14)), r$12 && (o$9.formatted = zn + o$9.formatted, o$9.cursorOffset >= 0 && o$9.cursorOffset++), o$9;
}
async function qn(e$4, t$13, r$12) {
	let { text: n$8, options: u$14 } = Jn(e$4, await ne(t$13)), o$9 = await De(n$8, u$14);
	return r$12 && (r$12.preprocessForPrint && (o$9.ast = await Gt(o$9.ast, u$14)), r$12.massage && (o$9.ast = Yn(o$9.ast, u$14))), o$9;
}
async function Xn(e$4, t$13) {
	t$13 = await ne(t$13);
	let r$12 = await Ye(e$4, t$13);
	return me(r$12, t$13);
}
async function Qn(e$4, t$13) {
	let r$12 = wr(e$4), { formatted: n$8 } = await Jt(r$12, {
		...t$13,
		parser: "__js_expression"
	});
	return n$8;
}
async function Zn(e$4, t$13) {
	t$13 = await ne(t$13);
	let { ast: r$12 } = await De(e$4, t$13);
	return t$13.cursorOffset >= 0 && (t$13 = {
		...t$13,
		...Kt(r$12, t$13)
	}), Ye(r$12, t$13);
}
async function eu(e$4, t$13) {
	return me(e$4, await ne(t$13));
}
var qt = {};
dt(qt, {
	builders: () => Io,
	printer: () => Ro,
	utils: () => Yo
});
var Io = {
	join: ke,
	line: Me,
	softline: _r,
	hardline: z,
	literalline: We,
	group: At,
	conditionalGroup: Cr,
	fill: hr,
	lineSuffix: Se,
	lineSuffixBoundary: Ar,
	cursor: X,
	breakParent: pe,
	ifBreak: gr,
	trim: Br,
	indent: ie,
	indentIfBreak: yr,
	align: oe,
	addAlignmentToDoc: Ge,
	markAsRoot: mr,
	dedentToRoot: dr,
	dedent: Er,
	hardlineWithoutBreakParent: Te,
	literallineWithoutBreakParent: Bt,
	label: xr,
	concat: (e$4) => e$4
}, Ro = { printDocToString: me }, Yo = {
	willBreak: Dr,
	traverseDoc: le,
	findInDoc: Ve,
	mapDoc: be,
	removeLines: fr,
	stripTrailingHardline: $e,
	replaceEndOfLine: lr,
	canBreak: Fr
};
var tu = "3.6.2";
var Qt = {};
dt(Qt, {
	addDanglingComment: () => ee,
	addLeadingComment: () => se,
	addTrailingComment: () => ae,
	getAlignmentSize: () => Ee,
	getIndentSize: () => ru,
	getMaxContinuousCount: () => nu,
	getNextNonSpaceNonCommentCharacter: () => uu,
	getNextNonSpaceNonCommentCharacterIndex: () => Xo,
	getPreferredQuote: () => iu,
	getStringWidth: () => Ne,
	hasNewline: () => G,
	hasNewlineInRange: () => su,
	hasSpaces: () => au,
	isNextLineEmpty: () => ti,
	isNextLineEmptyAfterIndex: () => ct,
	isPreviousLineEmpty: () => Zo,
	makeString: () => Du,
	skip: () => he,
	skipEverythingButNewLine: () => Je,
	skipInlineComment: () => ye,
	skipNewline: () => U,
	skipSpaces: () => T$5,
	skipToLineEnd: () => He,
	skipTrailingComment: () => Ae,
	skipWhitespace: () => Rr
});
function jo(e$4, t$13) {
	if (t$13 === !1) return !1;
	if (e$4.charAt(t$13) === "/" && e$4.charAt(t$13 + 1) === "*") {
		for (let r$12 = t$13 + 2; r$12 < e$4.length; ++r$12) if (e$4.charAt(r$12) === "*" && e$4.charAt(r$12 + 1) === "/") return r$12 + 2;
	}
	return t$13;
}
var ye = jo;
function Uo(e$4, t$13) {
	return t$13 === !1 ? !1 : e$4.charAt(t$13) === "/" && e$4.charAt(t$13 + 1) === "/" ? Je(e$4, t$13) : t$13;
}
var Ae = Uo;
function Vo$1(e$4, t$13) {
	let r$12 = null, n$8 = t$13;
	for (; n$8 !== r$12;) r$12 = n$8, n$8 = T$5(e$4, n$8), n$8 = ye(e$4, n$8), n$8 = Ae(e$4, n$8), n$8 = U(e$4, n$8);
	return n$8;
}
var je = Vo$1;
function $o(e$4, t$13) {
	let r$12 = null, n$8 = t$13;
	for (; n$8 !== r$12;) r$12 = n$8, n$8 = He(e$4, n$8), n$8 = ye(e$4, n$8), n$8 = T$5(e$4, n$8);
	return n$8 = Ae(e$4, n$8), n$8 = U(e$4, n$8), n$8 !== !1 && G(e$4, n$8);
}
var ct = $o;
function Wo(e$4, t$13) {
	let r$12 = e$4.lastIndexOf(`
`);
	return r$12 === -1 ? 0 : Ee(e$4.slice(r$12 + 1).match(/^[\t ]*/u)[0], t$13);
}
var ru = Wo;
function Xt(e$4) {
	if (typeof e$4 != "string") throw new TypeError("Expected a string");
	return e$4.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d");
}
function Mo(e$4, t$13) {
	let r$12 = e$4.match(new RegExp(`(${Xt(t$13)})+`, "gu"));
	return r$12 === null ? 0 : r$12.reduce((n$8, u$14) => Math.max(n$8, u$14.length / t$13.length), 0);
}
var nu = Mo;
function Go(e$4, t$13) {
	let r$12 = je(e$4, t$13);
	return r$12 === !1 ? "" : e$4.charAt(r$12);
}
var uu = Go;
var ft = "'", ou = "\"";
function Ko(e$4, t$13) {
	let r$12 = t$13 === !0 || t$13 === ft ? ft : ou, n$8 = r$12 === ft ? ou : ft, u$14 = 0, o$9 = 0;
	for (let i$18 of e$4) i$18 === r$12 ? u$14++ : i$18 === n$8 && o$9++;
	return u$14 > o$9 ? n$8 : r$12;
}
var iu = Ko;
function zo(e$4, t$13, r$12) {
	for (let n$8 = t$13; n$8 < r$12; ++n$8) if (e$4.charAt(n$8) === `
`) return !0;
	return !1;
}
var su = zo;
function Ho(e$4, t$13, r$12 = {}) {
	return T$5(e$4, r$12.backwards ? t$13 - 1 : t$13, r$12) !== t$13;
}
var au = Ho;
function Jo(e$4, t$13, r$12) {
	let n$8 = t$13 === "\"" ? "'" : "\"", o$9 = te(!1, e$4, /\\(.)|(["'])/gsu, (i$18, s$8, a$13) => s$8 === n$8 ? s$8 : a$13 === t$13 ? "\\" + a$13 : a$13 || (r$12 && /^[^\n\r"'0-7\\bfnrt-vx\u2028\u2029]$/u.test(s$8) ? s$8 : "\\" + s$8));
	return t$13 + o$9 + t$13;
}
var Du = Jo;
function qo(e$4, t$13, r$12) {
	return je(e$4, r$12(t$13));
}
function Xo(e$4, t$13) {
	return arguments.length === 2 || typeof t$13 == "number" ? je(e$4, t$13) : qo(...arguments);
}
function Qo(e$4, t$13, r$12) {
	return Pe(e$4, r$12(t$13));
}
function Zo(e$4, t$13) {
	return arguments.length === 2 || typeof t$13 == "number" ? Pe(e$4, t$13) : Qo(...arguments);
}
function ei(e$4, t$13, r$12) {
	return ct(e$4, r$12(t$13));
}
function ti(e$4, t$13) {
	return arguments.length === 2 || typeof t$13 == "number" ? ct(e$4, t$13) : ei(...arguments);
}
function ce(e$4, t$13 = 1) {
	return async (...r$12) => {
		let n$8 = r$12[t$13] ?? {}, u$14 = n$8.plugins ?? [];
		return r$12[t$13] = {
			...n$8,
			plugins: Array.isArray(u$14) ? u$14 : Object.values(u$14)
		}, e$4(...r$12);
	};
}
var cu = ce(Jt);
async function fu(e$4, t$13) {
	let { formatted: r$12 } = await cu(e$4, {
		...t$13,
		cursorOffset: -1
	});
	return r$12;
}
async function ri(e$4, t$13) {
	return await fu(e$4, t$13) === e$4;
}
var ni = ce(Qe, 0), ui = {
	parse: ce(qn),
	formatAST: ce(Xn),
	formatDoc: ce(Qn),
	printToDoc: ce(Zn),
	printDocToString: ce(eu)
};
var xf = Zt;

//#endregion
//#region src/utils/string.ts
var MagicString = class MagicString {
	original;
	current;
	constructor(value) {
		this.original = value;
		this.current = value;
	}
	get isModified() {
		return this.original !== this.current;
	}
	clone() {
		const clone = new MagicString(this.original);
		clone.current = this.current;
		return clone;
	}
	find(text, index) {
		const start = this.current.indexOf(text, index);
		const end = start === -1 ? -1 : start + text.length;
		return [start, end];
	}
	insert(index, text, offset = -1) {
		const from = this.normalizeIndex(index);
		this.current = this.current.slice(0, from) + text + this.current.slice(from);
		if (offset === -1) return offset;
		return this.calcOffset(offset, {
			action: "insert",
			start: from,
			length: text.length
		});
	}
	delete(start, end = Infinity, offset = -1) {
		let from = this.normalizeIndex(start);
		let to$4 = this.normalizeIndex(end);
		if (from > to$4) [from, to$4] = [to$4, from];
		this.current = this.current.slice(0, from) + this.current.slice(to$4);
		if (offset === -1) return offset;
		return this.calcOffset(offset, {
			action: "delete",
			start: from,
			end: to$4
		});
	}
	update(start, end, text, offset = -1) {
		let from = this.normalizeIndex(start);
		let to$4 = this.normalizeIndex(end);
		if (from > to$4) [from, to$4] = [to$4, from];
		this.current = this.current.slice(0, from) + text + this.current.slice(to$4);
		return this.calcOffset(this.calcOffset(offset, {
			action: "delete",
			start: from,
			end: to$4
		}), {
			action: "insert",
			start: from,
			length: text.length
		});
	}
	slice(start, end = Infinity, offset = -1) {
		let from = this.normalizeIndex(start);
		let to$4 = this.normalizeIndex(end);
		if (from > to$4) [from, to$4] = [to$4, from];
		this.current = this.current.slice(from, to$4);
		return this.calcOffset(this.calcOffset(offset, {
			action: "delete",
			start: to$4,
			end: Infinity
		}), {
			action: "delete",
			start: 0,
			end: from
		});
	}
	replace(search, replace, index, offset = -1) {
		const [start, end] = this.find(search, index);
		if (start === -1) return offset;
		return this.update(start, end, replace, offset);
	}
	append(text, offset = -1) {
		return this.insert(Infinity, text, offset);
	}
	prepend(text, offset = -1) {
		return this.insert(0, text, offset);
	}
	mutate(text, offset = -1) {
		return this.update(0, Infinity, text, offset);
	}
	match(regexp) {
		return [...this.current.matchAll(new RegExp(regexp, "dgm"))].map((match) => Array.from(match).map((text, index) => ({
			text,
			indices: match.indices[index]
		})).slice(1).map(({ text, indices }) => ({
			text,
			start: indices[0],
			end: indices[1],
			length: text.length
		})));
	}
	positionToOffset(position) {
		const { line, ch: ch$1 } = position;
		const prevLines = this.current.split("\n").slice(0, line);
		const prevLinesText = prevLines.join("\n").concat("\n");
		return (prevLines.length === 0 ? 0 : prevLinesText.length) + ch$1;
	}
	offsetToPosition(offset) {
		const prevLines = this.current.slice(0, offset).split("\n").slice(0, -1);
		const prevLinesText = prevLines.join("\n").concat("\n");
		const prevLinesCharCount = prevLines.length === 0 ? 0 : prevLinesText.length;
		const line = prevLines.length;
		const ch$1 = offset - prevLinesCharCount;
		return {
			line,
			ch: ch$1
		};
	}
	calcOffset(offset, diff) {
		let index = offset;
		if (diff.action === "insert") {
			const { start, length } = diff;
			if (index >= start) index += length;
		} else {
			const { start, end } = diff;
			if (index > start && index <= end) index = start;
			else if (index > end) index -= end - start;
		}
		return index;
	}
	normalizeIndex(index) {
		let i$18 = index;
		if (index < 0) {
			i$18 = this.current.length + i$18;
			if (i$18 < 0) i$18 = 0;
		} else if (index > this.current.length) i$18 = this.current.length;
		return i$18;
	}
};

//#endregion
//#region src/formatter.ts
const USE_PRETTIER_KEY = "prettier";
const USE_FAST_MODE_KEY = "prettier-fast-mode";
const REGEXP_UNORDERED_LIST_ITEMS_WITH_EXTRA_SPACES = /^[^\S\r\n]*[-*+][^\S\r\n]([^\S\r\n]+)/;
const REGEXP_EMPTY_LIST_ITEMS_WITHOUT_TRAILING_SPACES = /^((?:[^\S\r\n]*[-*+](?:[^\S\r\n]+\[.{1}\])?)|(?:[^\S\r\n]*\d+\.))$/;
var Formatter = class {
	app;
	settings;
	ignoreCache = /* @__PURE__ */ new Map();
	constructor(plugin) {
		this.app = plugin.app;
		this.settings = plugin.settings;
	}
	async formatOnSave(editor, file) {
		if (!file || !this.settings.formatOnSave) return;
		await this.formatContent(editor, file);
	}
	async formatOnFileChange(file) {
		if (!this.settings.formatOnFileChange) return;
		await this.formatFile(file);
	}
	async formatFile(file) {
		if (!this.shouldUsePrettier(file)) return;
		const content = new MagicString(await this.app.vault.read(file));
		const options = this.getPrettierOptions(file);
		content.mutate(await xf.format(content.original, options));
		if (this.settings.removeExtraSpaces) this.removeExtraSpaces(content);
		if (this.settings.addTrailingSpaces) this.addTrailingSpaces(content);
		if (!content.isModified) return;
		await this.app.vault.modify(file, content.current);
	}
	async formatContent(editor, file) {
		if (!file || !this.shouldUsePrettier(file)) return;
		const { left, top } = editor.getScrollInfo();
		const content = new MagicString(editor.getValue());
		const options = this.getPrettierOptions(file);
		let offset = -1;
		if (this.shouldUseFastMode(file)) content.mutate(await xf.format(content.original, options));
		else {
			const result = await xf.formatWithCursor(content.original, {
				cursorOffset: content.positionToOffset(editor.getCursor()),
				...options
			});
			content.mutate(result.formatted);
			offset = result.cursorOffset;
		}
		if (this.settings.removeExtraSpaces) offset = this.removeExtraSpaces(content, offset);
		if (this.settings.addTrailingSpaces) offset = this.addTrailingSpaces(content, offset);
		if (!content.isModified) return;
		editor.setValue(content.current);
		editor.scrollTo(left, top);
		if (offset !== -1) editor.setCursor(content.offsetToPosition(offset));
	}
	async formatSelection(editor, file) {
		if (!file || !this.shouldUsePrettier(file)) return;
		const content = new MagicString(editor.getSelection());
		const options = this.getPrettierOptions(file);
		content.mutate(await xf.format(content.original, options));
		const isOriginalHasNewLine = content.original.endsWith("\n");
		const isModifiedHasNewLine = content.current.endsWith("\n");
		if (isOriginalHasNewLine && !isModifiedHasNewLine) content.append("\n");
		else if (!isOriginalHasNewLine && isModifiedHasNewLine) content.delete(-1);
		if (this.settings.removeExtraSpaces) this.removeExtraSpaces(content);
		if (this.settings.addTrailingSpaces) this.addTrailingSpaces(content);
		if (!content.isModified) return;
		editor.replaceSelection(content.current);
	}
	removeExtraSpaces(content, offset = -1) {
		const matches = content.match(REGEXP_UNORDERED_LIST_ITEMS_WITH_EXTRA_SPACES);
		let index = offset;
		for (const [remove] of matches.toReversed()) index = content.delete(remove.start, remove.end, index);
		return index;
	}
	addTrailingSpaces(content, offset = -1) {
		const matches = content.match(REGEXP_EMPTY_LIST_ITEMS_WITHOUT_TRAILING_SPACES);
		let index = offset;
		for (const [preserve] of matches.toReversed()) index = content.insert(preserve.end, " ", index);
		return index;
	}
	getPrettierOptions(file) {
		const parser = p2.languages.find(({ extensions = [] }) => extensions.includes(`.${file.extension}`))?.name === "MDX" ? "mdx" : "markdown";
		const plugins = [
			Vo,
			Nx,
			ym,
			p2,
			s_,
			r9,
			Ih
		];
		const __languageMappings = new Map(Object.entries(this.settings.languageMappings));
		return {
			parser,
			plugins,
			__languageMappings,
			...this.settings.formatOptions,
			embeddedLanguageFormatting: this.settings.formatCodeBlock ? "auto" : "off"
		};
	}
	shouldUsePrettier(file) {
		const frontmatter = this.getFrontmatter(file);
		if (!Object.hasOwn(frontmatter, USE_PRETTIER_KEY)) return !this.createIgnore(this.settings.ignorePatterns).ignores(file.path);
		return Boolean(frontmatter[USE_PRETTIER_KEY]);
	}
	shouldUseFastMode(file) {
		const frontmatter = this.getFrontmatter(file);
		return Boolean(frontmatter[USE_FAST_MODE_KEY]);
	}
	getFrontmatter(file) {
		return (this.app.metadataCache.getCache(file.path) || {}).frontmatter || {};
	}
	createIgnore(patterns) {
		if (this.ignoreCache.has(patterns)) return this.ignoreCache.get(patterns);
		const ignore = (0, import_ignore.default)({ allowRelativePaths: true }).add(patterns);
		this.ignoreCache.set(patterns, ignore);
		return ignore;
	}
};

//#endregion
//#region node_modules/.pnpm/@goodbyenjn+utils@1.3.1/node_modules/@goodbyenjn/utils/dist/libs/remeda-16106be4.js
function u$16(o$40, n$15, a$27) {
	let t$24 = (r$20) => o$40(r$20, ...n$15);
	return a$27 === void 0 ? t$24 : Object.assign(t$24, {
		lazy: a$27,
		lazyArgs: n$15
	});
}
function u$8(r$20, n$15, o$40) {
	let a$27 = r$20.length - n$15.length;
	if (a$27 === 0) return r$20(...n$15);
	if (a$27 === 1) return u$16(r$20, n$15, o$40);
	throw new Error("Wrong number of arguments");
}
var o$37 = [
	"	",
	`
`,
	"\v",
	"\f",
	"\r",
	" ",
	"",
	"\xA0",
	" ",
	" ",
	" ",
	" ",
	" ",
	" ",
	" ",
	" ",
	" ",
	" ",
	" ",
	" ",
	"\u2028",
	"\u2029",
	" ",
	" ",
	"　",
	"﻿"
], c$8 = new Set([
	"-",
	"_",
	...o$37
]), i$36 = (r$20) => {
	let e$10 = [], t$24 = "", u$26 = () => {
		t$24.length > 0 && (e$10.push(t$24), t$24 = "");
	};
	for (let s$18 of r$20) {
		if (c$8.has(s$18)) {
			u$26();
			continue;
		}
		if (/[a-z]$/u.test(t$24) && /[A-Z]/u.test(s$18)) u$26();
		else if (/[A-Z][A-Z]$/u.test(t$24) && /[a-z]/u.test(s$18)) {
			let n$15 = t$24.slice(-1);
			t$24 = t$24.slice(0, -1), u$26(), t$24 = n$15;
		} else /\d$/u.test(t$24) !== /\d/u.test(s$18) && u$26();
		t$24 += s$18;
	}
	return u$26(), e$10;
};
function i$4(...e$10) {
	return u$8(n$13, e$10);
}
var n$13 = (e$10, r$20) => e$10.length >= r$20;
function r$1(o$40) {
	if (typeof o$40 != "object" || o$40 === null) return !1;
	let e$10 = Object.getPrototypeOf(o$40);
	return e$10 === null || e$10 === Object.prototype;
}
function y$4(...t$24) {
	return u$8(f$6, t$24);
}
function f$6(t$24, e$10) {
	if (!i$4(e$10, 1)) return { ...t$24 };
	if (!i$4(e$10, 2)) {
		let { [e$10[0]]: r$20,...m$14 } = t$24;
		return m$14;
	}
	let o$40 = { ...t$24 };
	for (let r$20 of e$10) delete o$40[r$20];
	return o$40;
}
function n$6(e$10) {
	return e$10 == null;
}
function t$6(r$20) {
	return typeof r$20 == "string";
}
function n$3(e$10) {
	return e$10 !== void 0;
}
function t$5(n$15) {
	return typeof n$15 == "function";
}
var R$1 = Symbol("funnel/voidReducer"), T$6 = () => R$1;
function u$13(e$10, a$27, n$15) {
	return e$10(n$15[0]) ? (t$24) => a$27(t$24, ...n$15) : a$27(...n$15);
}
var b = Object.assign(s$10, { defaultCase: R });
function s$10(...e$10) {
	return u$13(l$8, o$10, e$10);
}
function o$10(e$10, ...a$27) {
	for (let n$15 of a$27) {
		if (typeof n$15 == "function") return n$15(e$10);
		let [t$24, r$20] = n$15;
		if (t$24(e$10)) return r$20(e$10);
	}
	throw new Error("conditional: data failed for all cases");
}
function l$8(e$10) {
	if (!Array.isArray(e$10)) return !1;
	let [a$27, n$15, ...t$24] = e$10;
	return typeof a$27 == "function" && a$27.length <= 1 && typeof n$15 == "function" && n$15.length <= 1 && t$24.length === 0;
}
function R(e$10 = F) {
	return [T$4, e$10];
}
var T$4 = () => !0, F = () => {};
function curry(fn$6, nth) {
	const curried = ((...args) => (a0$1) => fn$6(a0$1, ...args));
	return nth === void 0 || nth <= 1 ? curried : curry(curried, nth - 1);
}
function purry(fn$6) {
	return ((...args) => fn$6.length === args.length ? fn$6(...args) : curry(fn$6)(...args));
}
const _isIterable = (value) => Symbol.iterator in value;
function accumulateSync(input) {
	return [...input];
}
async function accumulateAsync(input) {
	const accumulator = [];
	const awaited = await input;
	if (_isIterable(awaited)) for (const value of awaited) accumulator.push(await value);
	else for await (const value of awaited) accumulator.push(value);
	return accumulator;
}
var accumulate;
(function(accumulate$1) {
	accumulate$1.sync = accumulateSync;
	accumulate$1.async = accumulateAsync;
})(accumulate || (accumulate = {}));
function* _syncChunk(input, size) {
	let accumulator = [];
	for (const value of input) {
		accumulator.push(value);
		if (accumulator.length >= size) {
			yield accumulator;
			accumulator = [];
		}
	}
	if (accumulator.length > 0) yield accumulator;
}
async function* _asyncChunk(input, size) {
	let accumulator = [];
	const awaited = await input;
	if (_isIterable(awaited)) for (const value of awaited) {
		accumulator.push(await value);
		if (accumulator.length >= size) {
			yield accumulator;
			accumulator = [];
		}
	}
	else for await (const value of awaited) {
		accumulator.push(value);
		if (accumulator.length >= size) {
			yield accumulator;
			accumulator = [];
		}
	}
	if (accumulator.length > 0) yield accumulator;
}
function chunkSync(...args) {
	return purry(_syncChunk)(...args);
}
function chunkAsync(...args) {
	return purry(_asyncChunk)(...args);
}
var chunk;
(function(chunk$1) {
	chunk$1.sync = chunkSync;
	chunk$1.async = chunkAsync;
})(chunk || (chunk = {}));
function* flattenSync(input) {
	for (const pool of input) for (const value of pool) yield value;
}
async function* flattenAsync(input) {
	const awaited = await input;
	if (_isIterable(awaited)) for (const pool of awaited) {
		const innerAwaited = await pool;
		if (_isIterable(innerAwaited)) for (const value of innerAwaited) yield value;
		else for await (const value of innerAwaited) yield value;
	}
	else for await (const pool of awaited) if (_isIterable(pool)) for (const value of pool) yield value;
	else for await (const value of pool) yield value;
}
var flatten;
(function(flatten$1) {
	flatten$1.sync = flattenSync;
	flatten$1.async = flattenAsync;
})(flatten || (flatten = {}));
function serializeSync(input) {
	return input[Symbol.iterator]();
}
async function* serializeAsync(input) {
	const awaited = await input;
	if (_isIterable(awaited)) for (const value of awaited) yield value;
	else for await (const value of awaited) yield value;
}
var serialize;
(function(serialize$1) {
	serialize$1.sync = serializeSync;
	serialize$1.async = serializeAsync;
})(serialize || (serialize = {}));
function* _syncFilter(input, test) {
	for (const value of input) if (test(value)) yield value;
}
async function* _asyncFilter(input, test) {
	const awaited = await input;
	if (_isIterable(awaited)) {
		for (const value of awaited) if (await test(await value)) yield value;
	} else for await (const value of awaited) if (await test(value)) yield value;
}
function filterSync(...args) {
	return purry(_syncFilter)(...args);
}
function filterAsync(...args) {
	return purry(_asyncFilter)(...args);
}
var filter;
(function(filter$1) {
	filter$1.sync = filterSync;
	filter$1.async = filterAsync;
})(filter || (filter = {}));
const _uniqueContext = () => {
	const set = /* @__PURE__ */ new Set();
	return Object.assign((value) => set.has(value) ? false : (set.add(value), true), { set });
};
const uniqueSync = (input) => filterSync(input, _uniqueContext());
const uniqueAsync = (input) => filterAsync(input, _uniqueContext());
var unique;
(function(unique$1) {
	unique$1.sync = uniqueSync;
	unique$1.async = uniqueAsync;
})(unique || (unique = {}));
const _syncUniqueBy = (input, key) => {
	const isUnique = _uniqueContext();
	return filterSync(input, (value) => isUnique(key(value)));
};
const _asyncUniqueBy = (input, key) => {
	const isUnique = _uniqueContext();
	return filterAsync(input, async (value) => isUnique(await key(value)));
};
function uniqueBySync(...args) {
	return purry(_syncUniqueBy)(...args);
}
function uniqueByAsync(...args) {
	return purry(_asyncUniqueBy)(...args);
}
var uniqueBy;
(function(uniqueBy$1) {
	uniqueBy$1.sync = uniqueBySync;
	uniqueBy$1.async = uniqueByAsync;
})(uniqueBy || (uniqueBy = {}));
function _syncSome(input, test) {
	for (const value of input) if (test(value)) return true;
	return false;
}
async function _asyncSome(input, test) {
	const awaited = await input;
	if (_isIterable(awaited)) {
		for (const value of awaited) if (await test(await value)) return true;
	} else for await (const value of awaited) if (await test(value)) return true;
	return false;
}
function someSync(...args) {
	return purry(_syncSome)(...args);
}
function someAsync(...args) {
	return purry(_asyncSome)(...args);
}
var some;
(function(some$1) {
	some$1.sync = someSync;
	some$1.async = someAsync;
})(some || (some = {}));
const _syncUniqueWith = (input, equals) => {
	const array = [];
	return filterSync(input, (value1) => array.some((value2) => equals(value1, value2)) ? false : (array.push(value1), true));
};
const _asyncUniqueWith = (input, equals) => {
	const array = [];
	return filterAsync(input, async (value1) => await someAsync(array, async (value2) => await equals(value1, value2)) ? false : (array.push(value1), true));
};
function uniqueWithSync(...args) {
	return purry(_syncUniqueWith)(...args);
}
function uniqueWithAsync(...args) {
	return purry(_asyncUniqueWith)(...args);
}
var uniqueWith;
(function(uniqueWith$1) {
	uniqueWith$1.sync = uniqueWithSync;
	uniqueWith$1.async = uniqueWithAsync;
})(uniqueWith || (uniqueWith = {}));
const _toSet = (input) => input instanceof Set ? input : new Set(input);
const _syncDifference = (input, other) => {
	const otherSet = _toSet(other);
	return filterSync(input, (value) => !otherSet.has(value));
};
const _asyncDifference = (input, other) => {
	const otherSet = _toSet(other);
	return filterAsync(input, (value) => !otherSet.has(value));
};
function differenceSync(...args) {
	return purry(_syncDifference)(...args);
}
function differenceAsync(...args) {
	return purry(_asyncDifference)(...args);
}
var difference;
(function(difference$1) {
	difference$1.sync = differenceSync;
	difference$1.async = differenceAsync;
})(difference || (difference = {}));
const _syncDifferenceBy = (input, other, key) => {
	const otherSet = _toSet(other);
	return filterSync(input, (value) => !otherSet.has(key(value)));
};
const _asyncDifferenceBy = (input, other, key) => {
	const otherSet = _toSet(other);
	return filterAsync(input, async (value) => !otherSet.has(await key(value)));
};
function differenceBySync(...args) {
	return purry(_syncDifferenceBy)(...args);
}
function differenceByAsync(...args) {
	return purry(_asyncDifferenceBy)(...args);
}
var differenceBy;
(function(differenceBy$1) {
	differenceBy$1.sync = differenceBySync;
	differenceBy$1.async = differenceByAsync;
})(differenceBy || (differenceBy = {}));
const _syncIntersectWith = (other, equals) => (value) => {
	for (const otherValue of other) if (equals(value, otherValue)) return true;
	return false;
};
const _asyncIntersectWith = (other, equals) => async (value) => {
	for (const otherValue of other) if (await equals(value, otherValue)) return true;
	return false;
};
const _syncNot = (fn$6) => (...args) => !fn$6(...args);
const _asyncNot = (fn$6) => async (...args) => !await fn$6(...args);
const _syncDifferentWith = (other, equals) => _syncNot(_syncIntersectWith(other, equals));
const _asyncDifferentWith = (other, equals) => _asyncNot(_asyncIntersectWith(other, equals));
const _syncDifferenceWith = (input, other, equals) => filterSync(input, _syncDifferentWith(other, equals));
const _asyncDifferenceWith = (input, other, equals) => filterAsync(input, _asyncDifferentWith(other, equals));
function differenceWithSync(...args) {
	return purry(_syncDifferenceWith)(...args);
}
function differenceWithAsync(...args) {
	return purry(_asyncDifferenceWith)(...args);
}
var differenceWith;
(function(differenceWith$1) {
	differenceWith$1.sync = differenceWithSync;
	differenceWith$1.async = differenceWithAsync;
})(differenceWith || (differenceWith = {}));
const _syncIntersection = (input, other) => {
	const otherSet = _toSet(other);
	return filterSync(input, (value) => otherSet.has(value));
};
const _asyncIntersection = (input, other) => {
	const otherSet = _toSet(other);
	return filterAsync(input, (value) => otherSet.has(value));
};
function intersectionSync(...args) {
	return purry(_syncIntersection)(...args);
}
function intersectionAsync(...args) {
	return purry(_asyncIntersection)(...args);
}
var intersection;
(function(intersection$1) {
	intersection$1.sync = intersectionSync;
	intersection$1.async = intersectionAsync;
})(intersection || (intersection = {}));
const _syncIntersectionBy = (input, other, key) => {
	const otherSet = _toSet(other);
	return filterSync(input, (value) => otherSet.has(key(value)));
};
const _asyncIntersectionBy = (input, other, key) => {
	const otherSet = _toSet(other);
	return filterAsync(input, async (value) => otherSet.has(await key(value)));
};
function intersectionBySync(...args) {
	return purry(_syncIntersectionBy)(...args);
}
function intersectionByAsync(...args) {
	return purry(_asyncIntersectionBy)(...args);
}
var intersectionBy;
(function(intersectionBy$1) {
	intersectionBy$1.sync = intersectionBySync;
	intersectionBy$1.async = intersectionByAsync;
})(intersectionBy || (intersectionBy = {}));
const _syncIntersectionWith = (input, other, equals) => filterSync(input, _syncIntersectWith(other, equals));
const _asyncIntersectionWith = (input, other, equals) => filterAsync(input, _asyncIntersectWith(other, equals));
function intersectionWithSync(...args) {
	return purry(_syncIntersectionWith)(...args);
}
function intersectionWithAsync(...args) {
	return purry(_asyncIntersectionWith)(...args);
}
var intersectionWith;
(function(intersectionWith$1) {
	intersectionWith$1.sync = intersectionWithSync;
	intersectionWith$1.async = intersectionWithAsync;
})(intersectionWith || (intersectionWith = {}));
function* _syncFlatMap(input, mapper) {
	for (const value of input) for (const output of mapper(value)) yield output;
}
async function* _asyncFlatMap(input, mapper) {
	const awaited = await input;
	if (_isIterable(awaited)) for (const value of awaited) {
		const results = await mapper(await value);
		if (_isIterable(results)) for (const output of results) yield output;
		else for await (const output of results) yield output;
	}
	else for await (const value of awaited) {
		const results = await mapper(value);
		if (_isIterable(results)) for (const output of results) yield output;
		else for await (const output of results) yield output;
	}
}
function flatMapSync(...args) {
	return purry(_syncFlatMap)(...args);
}
function flatMapAsync(...args) {
	return purry(_asyncFlatMap)(...args);
}
var flatMap;
(function(flatMap$1) {
	flatMap$1.sync = flatMapSync;
	flatMap$1.async = flatMapAsync;
})(flatMap || (flatMap = {}));
function* _syncMap(input, mapper) {
	for (const value of input) yield mapper(value);
}
async function* _asyncMap(input, mapper) {
	const awaited = await input;
	if (_isIterable(awaited)) for (const value of awaited) yield mapper(await value);
	else for await (const value of awaited) yield mapper(value);
}
function mapSync(...args) {
	return purry(_syncMap)(...args);
}
function mapAsync(...args) {
	return purry(_asyncMap)(...args);
}
var map;
(function(map$1) {
	map$1.sync = mapSync;
	map$1.async = mapAsync;
})(map || (map = {}));
function _syncEvery(input, test) {
	for (const value of input) if (!test(value)) return false;
	return true;
}
async function _asyncEvery(input, test) {
	const awaited = await input;
	if (_isIterable(awaited)) {
		for (const value of awaited) if (!await test(await value)) return false;
	} else for await (const value of awaited) if (!await test(value)) return false;
	return true;
}
function everySync(...args) {
	return purry(_syncEvery)(...args);
}
function everyAsync(...args) {
	return purry(_asyncEvery)(...args);
}
var every;
(function(every$1) {
	every$1.sync = everySync;
	every$1.async = everyAsync;
})(every || (every = {}));
function _syncFind(input, test) {
	for (const value of input) if (test(value)) return value;
}
async function _asyncFind(input, test) {
	const awaited = await input;
	if (_isIterable(awaited)) {
		for (const value of awaited) if (await test(await value)) return await value;
	} else for await (const value of awaited) if (await test(value)) return value;
}
function findSync(...args) {
	return purry(_syncFind)(...args);
}
function findAsync(...args) {
	return purry(_asyncFind)(...args);
}
var find;
(function(find$1) {
	find$1.sync = findSync;
	find$1.async = findAsync;
})(find || (find = {}));
function _syncReduce(input, reducer, initialValue) {
	let returnValue = initialValue;
	for (const value of input) returnValue = reducer(returnValue, value);
	return returnValue;
}
async function _asyncReduce(input, reducer, initialValue) {
	let returnValue = await initialValue;
	const awaited = await input;
	if (_isIterable(awaited)) for (const value of awaited) returnValue = await reducer(returnValue, await value);
	else for await (const value of awaited) returnValue = await reducer(returnValue, value);
	return returnValue;
}
function reduceSync(...args) {
	return purry(_syncReduce)(...args);
}
function reduceAsync(...args) {
	return purry(_asyncReduce)(...args);
}
var reduce;
(function(reduce$1) {
	reduce$1.sync = reduceSync;
	reduce$1.async = reduceAsync;
})(reduce || (reduce = {}));
function _syncForEach(input, action) {
	for (const value of input) action(value);
}
async function _asyncForEach(input, action) {
	const awaited = await input;
	if (_isIterable(awaited)) for (const value of awaited) await action(await value);
	else for await (const value of awaited) await action(value);
}
function forEachSync(...args) {
	return purry(_syncForEach)(...args);
}
function forEachAsync(...args) {
	return purry(_asyncForEach)(...args);
}
var forEach;
(function(forEach$1) {
	forEach$1.sync = forEachSync;
	forEach$1.async = forEachAsync;
})(forEach || (forEach = {}));
function* _syncPeek(input, action) {
	for (const value of input) {
		action(value);
		yield value;
	}
}
async function* _asyncPeek(input, action) {
	const awaited = await input;
	if (_isIterable(awaited)) for (const value of awaited) {
		await action(await value);
		yield value;
	}
	else for await (const value of awaited) {
		await action(value);
		yield value;
	}
}
function peekSync(...args) {
	return purry(_syncPeek)(...args);
}
function peekAsync(...args) {
	return purry(_asyncPeek)(...args);
}
var peek;
(function(peek$1) {
	peek$1.sync = peekSync;
	peek$1.async = peekAsync;
})(peek || (peek = {}));
function* _syncConcat(preceding, following) {
	for (const value of preceding) yield value;
	for (const value of following) yield value;
}
async function* _asyncConcat(preceding, following) {
	const awaitedPreceding = await preceding;
	if (_isIterable(awaitedPreceding)) for (const value of awaitedPreceding) yield value;
	else for await (const value of awaitedPreceding) yield value;
	const awaitedFollowing = await following;
	if (_isIterable(awaitedFollowing)) for (const value of awaitedFollowing) yield value;
	else for await (const value of awaitedFollowing) yield value;
}
function concatSync(...args) {
	return purry(_syncConcat)(...args);
}
function concatAsync(...args) {
	return purry(_asyncConcat)(...args);
}
var concat;
(function(concat$1) {
	concat$1.sync = concatSync;
	concat$1.async = concatAsync;
})(concat || (concat = {}));
function* _syncDrop(input, drop$1) {
	let leftDrop = drop$1;
	for (const value of input) {
		if (leftDrop > 0) {
			leftDrop--;
			continue;
		}
		yield value;
	}
}
async function* _asyncDrop(input, drop$1) {
	let leftDrop = drop$1;
	const awaited = await input;
	if (_isIterable(awaited)) for (const value of awaited) {
		if (leftDrop > 0) {
			leftDrop--;
			continue;
		}
		yield value;
	}
	else for await (const value of awaited) {
		if (leftDrop > 0) {
			leftDrop--;
			continue;
		}
		yield value;
	}
}
function dropSync(...args) {
	return purry(_syncDrop)(...args);
}
function dropAsync(...args) {
	return purry(_asyncDrop)(...args);
}
var drop;
(function(drop$1) {
	drop$1.sync = dropSync;
	drop$1.async = dropAsync;
})(drop || (drop = {}));
function* _syncTake(input, take$1) {
	let leftTake = take$1;
	for (const value of input) {
		if (leftTake <= 0) break;
		yield value;
		leftTake--;
	}
}
async function* _asyncTake(input, take$1) {
	let leftTake = take$1;
	const awaited = await input;
	if (_isIterable(awaited)) for (const value of awaited) {
		if (leftTake <= 0) break;
		yield value;
		leftTake--;
	}
	else for await (const value of awaited) {
		if (leftTake <= 0) break;
		yield value;
		leftTake--;
	}
}
function takeSync(...args) {
	return purry(_syncTake)(...args);
}
function takeAsync(...args) {
	return purry(_asyncTake)(...args);
}
var take;
(function(take$1) {
	take$1.sync = takeSync;
	take$1.async = takeAsync;
})(take || (take = {}));

//#endregion
//#region jsx/index.js
var require_jsx = /* @__PURE__ */ __commonJS({ "jsx/index.js": ((exports) => {
	const Fragment = Symbol.for("jsx.fragment");
	const appendChildren = (element, children) => {
		if (typeof children === "boolean" || children === null || typeof children === "undefined") return;
		if (Array.isArray(children)) {
			for (const child of children) appendChildren(element, child);
			return;
		}
		if (children instanceof Element || typeof children === "string") element.append(children);
		else element.append(children.toString());
	};
	function jsxFactory(type, props) {
		const { children,...rest } = props;
		if (type === Fragment) {
			const fragment = document.createDocumentFragment();
			appendChildren(fragment, children);
			return fragment;
		}
		const element = document.createElement(type);
		appendChildren(element, children);
		for (const [k$5, v$5] of Object.entries(rest)) if (k$5 === "style") for (const [key, value] of Object.entries(v$5)) element[k$5][key] = value;
		else element[k$5] = v$5;
		return element;
	}
	exports.Fragment = Fragment;
	exports.jsx = jsxFactory;
	exports.jsxs = jsxFactory;
}) });

//#endregion
//#region src/i18n/en.tsx
var import_jsx$2 = /* @__PURE__ */ __toESM(require_jsx());
const EN = {
	"notice:format-too-slow": {
		template: "Formatting took ${time} seconds, consider using fast mode or reducing the content.",
		placeholder: { time: "" }
	},
	"notice:load-settings-error": "Error loading plugin settings, please check the console logs.",
	"notice:register-plugin-error": "Error registering plugin, please check the console logs.",
	"command:format-content-name": "Format all content",
	"command:format-selection-name": "Format selected content",
	"setting:error-boundary-title": "Settings panel failed to load",
	"setting:error-boundary-description": "Error loading settings panel, please check the error message below.",
	"setting:format-on-save-name": "Format on save",
	"setting:format-on-save-description": "Format the current content when saving the file.",
	"setting:format-on-file-change-name": "Format on file change",
	"setting:format-on-file-change-description": "Format the last opened file when the file is closed or switched to another file.",
	"setting:format-code-block-name": "Format code blocks",
	"setting:format-code-block-description": "Include code blocks when formatting. Currently supports js(x), ts(x), css, scss, less, html, json, and yaml.",
	"setting:remove-extra-spaces-name": "Remove extra spaces",
	"setting:remove-extra-spaces-description": /* @__PURE__ */ (0, import_jsx$2.jsxs)(import_jsx$2.Fragment, { children: [
		"Remove extra spaces after bullet points in unordered lists. See",
		" ",
		/* @__PURE__ */ (0, import_jsx$2.jsx)("a", {
			href: "https://github.com/prettier/prettier/issues/4114",
			children: "issues#4114"
		}),
		" and",
		" ",
		/* @__PURE__ */ (0, import_jsx$2.jsx)("a", {
			href: "https://github.com/prettier/prettier/issues/4281",
			children: "issues#4281"
		}),
		" for more details."
	] }),
	"setting:add-trailing-spaces-name": "Add trailing spaces",
	"setting:add-trailing-spaces-description": "Add spaces at the end of empty list items to ensure correct rendering in live preview mode.",
	"setting:format-options-name": "Format options",
	"setting:format-options-description": /* @__PURE__ */ (0, import_jsx$2.jsxs)(import_jsx$2.Fragment, { children: [
		"Formatting options passed to Prettier (in JSON format). See",
		" ",
		/* @__PURE__ */ (0, import_jsx$2.jsx)("a", {
			href: "https://prettier.io/docs/en/configuration",
			children: "Prettier documentation"
		}),
		" for more details."
	] }),
	"setting:ignore-patterns-name": "Ignore patterns",
	"setting:ignore-patterns-description": /* @__PURE__ */ (0, import_jsx$2.jsxs)(import_jsx$2.Fragment, { children: [
		"List of glob patterns to ignore when formatting. If the current file has enabled or disabled formatting separately via frontmatter, this setting will be ignored. See",
		" ",
		/* @__PURE__ */ (0, import_jsx$2.jsx)("a", {
			href: "https://prettier.io/docs/en/ignore#ignoring-files-prettierignore",
			children: "Prettier documentation"
		}),
		" ",
		"for more details."
	] }),
	"setting:language-mappings-name": "Code block language mappings",
	"setting:language-mappings-description": "Map code block languages from one to another. For example, after setting the mapping `dataviewjs → js`, Prettier will format all `dataviewjs` code blocks as `js` language.",
	"setting:reset-button-name": "Reset",
	"setting:add-button-name": "Add",
	"setting:delete-button-name": "Delete"
};

//#endregion
//#region src/i18n/zh-cn.tsx
var import_jsx$1 = /* @__PURE__ */ __toESM(require_jsx());
const ZH_CN = {
	"notice:format-too-slow": {
		template: "格式化耗时 ${time} 秒，请考虑使用快速模式或缩减文件内容。",
		placeholder: { time: "" }
	},
	"notice:load-settings-error": "加载插件设置时出错，请检查控制台日志。",
	"notice:register-plugin-error": "注册插件时出错，请检查控制台日志。",
	"command:format-content-name": "格式化全部内容",
	"command:format-selection-name": "格式化选定内容",
	"setting:error-boundary-title": "设置面板加载失败",
	"setting:error-boundary-description": "加载设置面板时出错，请检查下方的错误信息。",
	"setting:format-on-save-name": "保存时格式化",
	"setting:format-on-save-description": "保存文件时是否格式化当前内容。",
	"setting:format-on-file-change-name": "文件更改时格式化",
	"setting:format-on-file-change-description": "当文件关闭或切换到其他文件时格式化最后打开的文件。",
	"setting:format-code-block-name": "格式化代码块",
	"setting:format-code-block-description": "格式化时是否包含代码块。目前支持 js(x), ts(x), css, scss, less, html, json 和 yaml。",
	"setting:remove-extra-spaces-name": "删除额外空格",
	"setting:remove-extra-spaces-description": /* @__PURE__ */ (0, import_jsx$1.jsxs)(import_jsx$1.Fragment, { children: [
		"是否删除无序列表中项目符号后的多余空格。详情请参考",
		" ",
		/* @__PURE__ */ (0, import_jsx$1.jsx)("a", {
			href: "https://github.com/prettier/prettier/issues/4114",
			children: "issues#4114"
		}),
		" 和",
		" ",
		/* @__PURE__ */ (0, import_jsx$1.jsx)("a", {
			href: "https://github.com/prettier/prettier/issues/4281",
			children: "issues#4281"
		}),
		"。"
	] }),
	"setting:add-trailing-spaces-name": "添加尾部空格",
	"setting:add-trailing-spaces-description": "是否在空列表项的末尾添加空格，以确保在实时阅览模式下正确渲染。",
	"setting:format-options-name": "格式化选项",
	"setting:format-options-description": /* @__PURE__ */ (0, import_jsx$1.jsxs)(import_jsx$1.Fragment, { children: [
		"传递给 Prettier 的格式化选项（json 格式）。详情请参考",
		" ",
		/* @__PURE__ */ (0, import_jsx$1.jsx)("a", {
			href: "https://prettier.io/docs/en/configuration",
			children: "Prettier 文档"
		}),
		"。"
	] }),
	"setting:ignore-patterns-name": "忽略模式",
	"setting:ignore-patterns-description": /* @__PURE__ */ (0, import_jsx$1.jsxs)(import_jsx$1.Fragment, { children: [
		"格式化时要忽略的模式列表。如果当前文件通过 frontmatter 单独启用或禁用格式化，此设置将被忽略。详情请参考",
		" ",
		/* @__PURE__ */ (0, import_jsx$1.jsx)("a", {
			href: "https://prettier.io/docs/en/ignore#ignoring-files-prettierignore",
			children: "Prettier 文档"
		}),
		"。"
	] }),
	"setting:language-mappings-name": "代码块语言映射",
	"setting:language-mappings-description": "将代码块语言从一种映射到另一种。例如，设置 `dataviewjs → js` 的映射后，Prettier 将对所有 `dataviewjs` 代码块使用 `js` 语言格式化。",
	"setting:reset-button-name": "重置",
	"setting:add-button-name": "添加",
	"setting:delete-button-name": "删除"
};

//#endregion
//#region src/i18n/index.tsx
var import_jsx = /* @__PURE__ */ __toESM(require_jsx());
const maps = {
	en: EN,
	"zh-cn": ZH_CN
};
const fmt = (key, record) => {
	const locale = obsidian.moment.locale();
	const value = (maps[locale] || EN)[key];
	if (t$6(value) || value instanceof DocumentFragment) return value;
	else if (value instanceof HTMLElement) return /* @__PURE__ */ (0, import_jsx.jsx)(import_jsx.Fragment, { children: value });
	if (t$5(value)) {
		if (!record) throw new Error(`Props are required for key: ${key}.`);
		const element = /* @__PURE__ */ (0, import_jsx.jsx)(value, { ...record });
		return element instanceof HTMLElement ? /* @__PURE__ */ (0, import_jsx.jsx)(import_jsx.Fragment, { children: element }) : element;
	}
	if (!record) throw new Error(`Placeholders are required for key: ${key}.`);
	const { template } = value;
	const placeholders = record;
	return template.replace(/\${(\w+)}/g, (_$2, k$5) => {
		const v$5 = placeholders[k$5];
		if (!n$3(v$5)) throw new Error(`Placeholder: ${k$5} is missing for key: ${key}.`);
		return v$5;
	});
};

//#endregion
//#region src/utils/version.ts
const versionStrToNum = (str) => {
	const [major, minor, patch] = str.split(".").map(Number);
	return major * 1e4 + minor * 100 + patch;
};

//#endregion
//#region src/model.ts
const manifest = {
	"id": "prettier",
	"name": "Prettier",
	"version": "2.0.2",
	"author": "GoodbyeNJN",
	"authorUrl": "https://github.com/GoodbyeNJN",
	"description": "Format your notes with Prettier and custom formatting options.",
	"isDesktopOnly": false,
	"minAppVersion": "0.10.12"
};
const getDefaultFormatOptions = () => ({
	trailingComma: "es5",
	tabWidth: 4,
	semi: false,
	singleQuote: true
});
const getDefaultIgnorePatterns = () => `
**/.git
**/.svn
**/.hg
**/node_modules
`.trim();
const getCurrentVersion = () => {
	return versionStrToNum(manifest.version);
};
const getDefaultSettings = () => ({
	formatOnSave: false,
	formatOnFileChange: false,
	formatCodeBlock: false,
	removeExtraSpaces: false,
	addTrailingSpaces: false,
	languageMappings: {},
	formatOptions: getDefaultFormatOptions(),
	ignorePatterns: getDefaultIgnorePatterns()
});
const migrate = (data) => {
	if (n$6(data) || !r$1(data)) return {
		version: getCurrentVersion(),
		settings: getDefaultSettings()
	};
	if (!Object.hasOwn(data, "version")) {
		const dataV1 = data;
		const dataV2 = {
			version: versionStrToNum("2.0.0"),
			settings: {
				...dataV1,
				removeExtraSpaces: false
			}
		};
		return migrate(dataV2);
	}
	if (data.version === versionStrToNum("2.0.0")) {
		const dataV2 = data;
		const dataV2_0_1 = {
			version: versionStrToNum("2.0.1"),
			settings: {
				languageMappings: {},
				...dataV2.settings
			}
		};
		return migrate(dataV2_0_1);
	}
	return data;
};

//#endregion
//#region src/utils/common.ts
const KEY = "plugin-prettier";
const logger = (...params) => console.log(`[${KEY}]`, ...params);
const timer = () => {
	const start = performance.now();
	return () => performance.now() - start;
};
const showNotice = (message, duration) => {
	return new obsidian.Notice(message, duration);
};
const withPerfNotice = async (fn$6) => {
	const stop = timer();
	await fn$6();
	const time = stop() / 1e3;
	if (time > 5) showNotice(fmt("notice:format-too-slow", { time: time.toFixed(2) }));
};

//#endregion
//#region src/setting.ts
var SettingsTab = class extends obsidian.PluginSettingTab {
	data;
	constructor(plugin) {
		super(plugin.app, plugin);
		this.data = new Proxy(plugin.settings, {
			get: (target, key, receiver) => {
				return Reflect.get(target, key, receiver);
			},
			set: (target, key, value, receiver) => {
				const result = Reflect.set(target, key, value, receiver);
				if (result) plugin.saveSettings();
				return result;
			}
		});
	}
	display() {
		this.containerEl.empty();
		try {
			this.addFormatOnSave();
			this.addFormatOnFileChange();
			this.addFormatCodeBlock();
			this.addAddTrailingSpaces();
			this.addLanguageMappings();
			this.addFormatOptions();
			this.addIgnorePatterns();
		} catch (error) {
			logger("Error displaying settings tab:", error);
			this.containerEl.empty();
			this.showErrorBoundary(error);
		}
	}
	showErrorBoundary(error) {
		const errorBoundary = this.containerEl.createDiv("prettier-settings__error-boundary");
		errorBoundary.createSpan({
			text: fmt("setting:error-boundary-title"),
			cls: "prettier-settings__error-boundary-title"
		});
		errorBoundary.createSpan({
			text: fmt("setting:error-boundary-description"),
			cls: "prettier-settings__error-boundary-description"
		});
		let message = "";
		if (error instanceof Error) {
			message = error.message;
			if (error.stack) message += `\n\n${error.stack}`;
		} else if (typeof error === "string") message = error;
		else try {
			message = JSON.stringify(error, null, 2);
		} catch {
			message = String(error);
		}
		errorBoundary.createEl("pre", "prettier-settings__error-boundary-message").createEl("code", { text: message });
	}
	addFormatOnSave() {
		this.addToggleSetting(fmt("setting:format-on-save-name"), fmt("setting:format-on-save-description"), "formatOnSave");
	}
	addFormatOnFileChange() {
		this.addToggleSetting(fmt("setting:format-on-file-change-name"), fmt("setting:format-on-file-change-description"), "formatOnFileChange");
	}
	addFormatCodeBlock() {
		this.addToggleSetting(fmt("setting:format-code-block-name"), fmt("setting:format-code-block-description"), "formatCodeBlock");
	}
	addRemoveExtraSpaces() {
		this.addToggleSetting(fmt("setting:remove-extra-spaces-name"), fmt("setting:remove-extra-spaces-description"), "removeExtraSpaces");
	}
	addAddTrailingSpaces() {
		this.addToggleSetting(fmt("setting:add-trailing-spaces-name"), fmt("setting:add-trailing-spaces-description"), "addTrailingSpaces");
	}
	addLanguageMappings() {
		const addTextInput = (containerEl) => {
			const input = new obsidian.TextComponent(containerEl);
			const setValid = (isValid) => {
				if (isValid) input.inputEl.classList.remove("invalid");
				else input.inputEl.classList.add("invalid");
				return input;
			};
			input.inputEl.className = "prettier-settings__mapping-text";
			input.onChange((value) => {
				setValid(value.length !== 0);
			});
			return Object.assign(input, { setValid });
		};
		const addMapping = (containerEl) => {
			const container$1 = containerEl.createDiv("prettier-settings__mapping");
			const from$1 = addTextInput(container$1);
			container$1.createSpan({
				text: "→",
				cls: "prettier-settings__mapping-symbol"
			});
			const to$5 = addTextInput(container$1);
			const button$1 = new obsidian.ButtonComponent(container$1).setClass("prettier-settings__mapping-button");
			return {
				container: container$1,
				from: from$1,
				to: to$5,
				button: button$1
			};
		};
		new obsidian.Setting(this.containerEl).setName(fmt("setting:language-mappings-name")).setDesc(fmt("setting:language-mappings-description"));
		const extra = this.containerEl.createDiv("setting-item-extra");
		const { container, from, to: to$4, button } = addMapping(extra);
		container.addClass("prettier-settings__mapping-header");
		button.setButtonText(fmt("setting:add-button-name")).onClick(() => {
			const fromValue = from.getValue();
			const toValue = to$4.getValue();
			if (fromValue.length === 0 || toValue.length === 0) {
				if (fromValue.length === 0) from.setValid(false);
				if (toValue.length === 0) to$4.setValid(false);
			} else {
				from.setValid(true);
				to$4.setValid(true);
				this.data.languageMappings = {
					...this.data.languageMappings,
					[fromValue]: toValue
				};
				this.display();
			}
		});
		for (const [k$5, v$5] of Object.entries(this.data.languageMappings)) {
			const { from: from$1, to: to$5, button: button$1 } = addMapping(extra);
			from$1.setValue(k$5).setDisabled(true);
			to$5.setValue(v$5).setDisabled(true);
			button$1.setButtonText(fmt("setting:delete-button-name")).onClick(() => {
				this.data.languageMappings = y$4(this.data.languageMappings, [k$5]);
				this.display();
			});
		}
	}
	addFormatOptions() {
		this.addResetSetting(fmt("setting:format-options-name"), fmt("setting:format-options-description"), () => {
			this.data.formatOptions = getDefaultFormatOptions();
		});
		this.addTextArea().setValue(this.stringifyFormatOptions()).setValidator((value) => this.parseFormatOptions(value));
	}
	addIgnorePatterns() {
		this.addResetSetting(fmt("setting:ignore-patterns-name"), fmt("setting:ignore-patterns-description"), () => {
			this.data.ignorePatterns = getDefaultIgnorePatterns();
		});
		this.addTextArea().setValue(this.data.ignorePatterns).onChange((value) => {
			this.data.ignorePatterns = value;
		});
	}
	addToggleSetting(name, description, key) {
		return new obsidian.Setting(this.containerEl).setName(name).setDesc(description).addToggle((component) => component.setValue(this.data[key]).onChange((value) => {
			this.data[key] = value;
		}));
	}
	addResetSetting(name, description, handler) {
		return new obsidian.Setting(this.containerEl).setName(name).setDesc(description).addButton((component) => {
			component.setButtonText(fmt("setting:reset-button-name")).onClick(() => {
				handler();
				this.display();
			});
		});
	}
	addTextArea() {
		const textArea = new obsidian.TextAreaComponent(this.containerEl.createDiv("setting-item-extra"));
		let fn$6;
		const setValidator = (validator) => {
			fn$6 = validator;
			return textArea;
		};
		const setValid = (isValid) => {
			if (isValid) textArea.inputEl.classList.remove("invalid");
			else textArea.inputEl.classList.add("invalid");
			return textArea;
		};
		textArea.inputEl.className = "prettier-settings__textarea";
		textArea.onChange((value) => {
			setValid(fn$6?.(value) ?? true);
		});
		return Object.assign(textArea, {
			setValidator,
			setValid
		});
	}
	stringifyFormatOptions() {
		return JSON.stringify(this.data.formatOptions, null, 2);
	}
	parseFormatOptions(text) {
		try {
			this.data.formatOptions = JSON.parse(text);
			return true;
		} catch {
			return false;
		}
	}
};

//#endregion
//#region src/main.ts
var PrettierPlugin = class extends obsidian.Plugin {
	settings = getDefaultSettings();
	version = getCurrentVersion();
	formatter;
	lastActiveFile = null;
	events = [];
	originalSaveCallback;
	async onload() {
		logger("Loading plugin...");
		try {
			await this.loadSettings();
		} catch (error) {
			logger("Error loading plugin settings:", error);
			showNotice(fmt("notice:load-settings-error"));
		}
		this.formatter = new Formatter(this);
		try {
			try {
				const { formatContentCommand, formatSelectionCommand } = this.registerCommands();
				if (!formatContentCommand || !formatSelectionCommand) {
					const missing = [];
					if (!formatContentCommand) missing.push("format-content");
					if (!formatSelectionCommand) missing.push("format-selection");
					throw new Error(`Failed to register commands: ${missing.join(", ")}`);
				}
			} catch (error) {
				logger("Error registering commands:", error);
			}
			try {
				this.hookSaveCommands();
			} catch (error) {
				logger("Error hooking save commands:", error);
			}
		} catch {
			showNotice(fmt("notice:register-plugin-error"));
		}
		this.registerEvents();
		this.registerMenu();
		logger("Plugin loaded.");
		this.addSettingTab(new SettingsTab(this));
	}
	onunload() {
		this.unregisterEvents();
		this.unhookSaveCommands();
	}
	async loadSettings() {
		const data = await this.loadData();
		const { settings } = migrate(data);
		this.settings = settings;
	}
	async saveSettings() {
		const data = {
			version: this.version,
			settings: this.settings
		};
		await this.saveData(data);
	}
	registerCommands() {
		const formatContentCommand = this.addCommand({
			id: "format-content",
			name: fmt("command:format-content-name"),
			editorCallback: async (editor, view) => {
				await withPerfNotice(() => this.formatter.formatContent(editor, view.file));
			}
		});
		const formatSelectionCommand = this.addCommand({
			id: "format-selection",
			name: fmt("command:format-selection-name"),
			editorCheckCallback: (checking, editor, view) => {
				if (!checking) withPerfNotice(() => this.formatter.formatSelection(editor, view.file));
				return editor.somethingSelected();
			}
		});
		return {
			formatContentCommand,
			formatSelectionCommand
		};
	}
	registerEvents() {
		this.lastActiveFile = this.app.workspace.getActiveFile();
		this.events.push(this.app.workspace.on("active-leaf-change", async () => {
			const currentActiveFile = this.app.workspace.getActiveFile();
			const isLastActiveFileExists = this.app.vault.getFileByPath(this.lastActiveFile?.path || "");
			const isLastActiveMarkdownFile = ["md", "mdx"].includes(this.lastActiveFile?.extension || "");
			const isLastAndCurrentSame = this.lastActiveFile?.path === currentActiveFile?.path;
			if (!this.lastActiveFile || !isLastActiveFileExists || !isLastActiveMarkdownFile || isLastAndCurrentSame) {
				this.lastActiveFile = currentActiveFile;
				return;
			}
			await this.formatter.formatOnFileChange(this.lastActiveFile);
			this.lastActiveFile = currentActiveFile;
		}));
		this.events.map((event) => this.registerEvent(event));
	}
	unregisterEvents() {
		this.events.map((event) => this.app.workspace.offref(event));
	}
	hookSaveCommands() {
		const saveCommand = this.app.commands.commands["editor:save-file"];
		const saveCallback = saveCommand?.checkCallback;
		if (!saveCommand || !saveCallback) return;
		this.originalSaveCallback = saveCallback;
		saveCommand.checkCallback = (checking) => {
			if (checking) return saveCallback(checking);
			const view = this.app.workspace.getActiveViewOfType(obsidian.MarkdownView);
			if (view) withPerfNotice(() => this.formatter.formatOnSave(view.editor, view.file));
			saveCallback(checking);
		};
	}
	unhookSaveCommands() {
		const saveCommand = this.app.commands.commands["editor:save-file"];
		if (!saveCommand || !this.originalSaveCallback) return;
		saveCommand.checkCallback = this.originalSaveCallback;
	}
	registerMenu() {
		this.registerEvent(this.app.workspace.on("editor-menu", (menu, editor, view) => {
			menu.addItem((item) => item.setTitle(fmt("command:format-content-name")).setIcon("paintbrush").onClick(async () => {
				await this.formatter.formatContent(editor, view.file);
			}));
			editor.somethingSelected() && menu.addItem((item) => item.setTitle(fmt("command:format-selection-name")).setIcon("paintbrush").onClick(async () => {
				await this.formatter.formatSelection(editor, view.file);
			}));
		}));
	}
};

//#endregion
module.exports = PrettierPlugin;
/* nosourcemap */